i	O	O:0.999963
am	O	O:0.999812
facing	O	O:0.999873
this	O	O:0.999707
strange	O	O:0.999516
behaviour	O	O:0.999422
,	O	O:0.999970
i	O	O:0.999976
got	O	O:0.999829
a	O	O:0.999941
HDFStore	B-API	O:0.865838
containing	O	O:0.997257
DataFrames	O	O:0.994182
.	O	O:0.999678
	
What	O	O:0.999110
happens	O	O:0.999655
if	O	O:0.999977
you	O	O:0.999963
do	O	O:0.999839
`	O	O:0.999982
ax.legend()	B-API	B-API:0.998670
`	O	O:0.999871
and	O	O:0.999348
`	O	O:0.999980
plt.draw()	B-API	B-API:0.999887
`	O	O:0.999904
?	O	O:0.999833
	
E.g.	O	O:0.994928
,	O	O:0.999995
you	O	O:0.999894
can	O	O:0.999959
call	O	O:0.993651
`	O	O:0.999991
pandas.isnull	B-API	B-API:0.997612
(	O	O:0.999991
the_frame	O	O:0.997843
)`	O	O:0.999526
.	O	O:0.999325
	
do	O	O:0.999855
this	O	O:0.999595
:	O	O:0.999935
``	O	O:0.999625
df.ix	B-API	B-API:0.911901
[	O	O:0.999961
0	O	O:0.999984
,	O	O:0.999991
'	O	O:0.999986
a	O	O:0.999963
']	O	O:0.999871
+=	O	O:0.995798
1	O	O:0.998872
``	O	O:0.999601
.	O	O:0.996809
	
Using	O	O:0.998210
unstack()	B-API	B-API:0.998286
is	O	O:0.999856
one	O	O:0.999377
way	O	O:0.999337
.	O	O:0.999335
	
Clearly	O	O:0.999129
I'm	O	O:0.999914
missing	O	O:0.999796
something	O	O:0.999650
as	O	O:0.999956
to	O	O:0.999912
why	O	O:0.999945
df.loc	B-API	B-API:0.948027
[:	O	O:0.999836
,	O	O:0.999996
tuple	O	O:0.999598
]	O	O:0.999800
is	O	O:0.999912
different	O	O:0.999902
than	O	O:0.999673
df	O	O:0.997306
[	O	O:0.999996
tuple	O	O:0.998114
]	O	O:0.999893
.	O	O:0.997902
	
datetime	O	O:0.963500
dtypes	B-API	B-API:0.894260
in	O	O:0.999907
pandas	O	O:0.990508
read_csv	B-API	B-API:0.978028
	
If	O	O:0.999942
you're	O	O:0.999789
using	O	O:0.999590
version	O	O:0.971084
`	O	O:0.999735
0.17.0	O	O:0.983937
`	O	O:0.999976
or	O	O:0.999553
higher	O	O:0.999945
then	O	O:0.999953
you	O	O:0.999967
can	O	O:0.999912
call	O	O:0.999737
this	O	O:0.999993
using	O	O:0.997461
`	O	O:0.997016
.dt	B-API	B-API:0.978016
.strftime	B-API	B-API:0.939289
`	O	O:0.999373
which	O	O:0.992007
is	O	O:0.999971
vectorised	O	O:0.986016
:	O	O:0.999956
#CODE	O	O:0.999507
	
Looks	O	O:0.999824
like	O	O:0.999458
you	O	O:0.999971
need	O	O:0.999608
histogram()	B-API	O:0.972457
of	O	O:0.999900
months	O	O:0.995001
.	O	O:0.999717
	
You	O	O:0.999896
want	O	O:0.997889
`	O	O:0.999389
.dt	B-API	B-API:0.506035
.time	B-API	B-API:0.494096
`	O	O:0.999919
see	O	O:0.999800
the	O	O:0.999996
docs	O	O:0.999140
for	O	O:0.999988
some	O	O:0.999947
more	O	O:0.999923
examples	O	O:0.999934
of	O	O:0.999987
things	O	O:0.999678
under	O	O:0.999864
the	O	O:0.998905
`	O	O:0.999669
.dt	B-API	B-API:0.843299
`	O	O:0.999973
accessor	O	O:0.997951
.	O	O:0.999767
	
pd.rolling_apply	B-API	B-API:0.992408
(	O	O:0.999950
df.exma	O	O:0.986397
,	O	O:0.999967
2	O	O:0.999913
,	O	O:0.999796
(	O	O:0.999990
df.alpha	O	O:0.969373
*	O	O:0.999697
df.exma.shift	O	O:0.980125
(	O	O:0.999984
1	O	O:0.999957
))	O	O:0.999812
+	O	O:0.999285
((	O	O:0.999963
1	O	O:0.999669
-	O	O:0.999998
df.alpha	O	O:0.981075
)	O	O:0.999765
*	O	O:0.999798
df.outperf	O	O:0.977688
))	O	O:0.998624
	
I	O	O:0.999906
suggest	O	O:0.999641
not	O	O:0.999490
using	O	O:0.999258
`	O	O:0.999943
file	O	O:0.985667
`	O	O:0.999985
for	O	O:0.999966
your	O	O:0.999518
`	O	O:0.999859
open()	B-API	B-API:0.993764
`	O	O:0.999700
object	O	O:0.995904
.	O	O:0.999845
	
If	O	O:0.999923
you	O	O:0.999781
want	O	O:0.999927
every	O	O:0.999728
value	O	O:0.999991
from	O	O:0.999898
row	O	O:0.999813
2	O	O:0.999998
you	O	O:0.999887
can	O	O:0.999959
just	O	O:0.999979
do	O	O:0.999967
`	O	O:0.999959
df.iloc	B-API	B-API:0.917246
[	O	O:0.999983
2	O	O:0.999969
]`	O	O:0.999964
or	O	O:0.999324
`	O	O:0.999923
df.iloc	B-API	B-API:0.815004
[	O	O:0.999990
2	O	O:0.999954
]	O	O:0.999949
.values	B-API	B-API:0.968916
`	O	O:0.999917
respectively	O	O:0.994973
.	O	O:0.999837
	
dtype	B-API	B-API:0.998068
:	O	O:0.999924
object	O	O:0.994260
	
Check	O	O:0.998662
out	O	O:0.999610
the	O	O:0.999823
glob	O	O:0.994515
module	O	O:0.993525
and	O	O:0.999885
pandas	O	O:0.992668
read_csv()	B-API	B-API:0.998046
and	O	O:0.996070
concat()	B-API	B-API:0.991379
	
`	O	O:0.999424
np.dtype	B-API	B-API:0.971086
(	O	O:0.999968
'	O	O:0.999939
datetime64	O	O:0.997240
[	O	O:0.999959
ns	O	O:0.999125
]')`	O	O:0.997275
and	O	O:0.998751
`	O	O:0.999839
np.dtype	B-API	B-API:0.990925
(	O	O:0.999978
'	O	O:0.999946
M	O	O:0.999858
8[	O	O:0.999957
ns	O	O:0.994943
]')`	O	O:0.984577
:	O	O:0.999935
#CODE	O	O:0.999671
	
Doing	O	O:0.996301
`	O	O:0.999500
pd.crosstab	B-API	B-API:0.985607
(	O	O:0.999997
rows	O	O:0.999713
=[	O	O:0.999989
df	O	O:0.998837
[	O	O:0.999993
'	O	O:0.999944
A	O	O:0.999922
']	O	O:0.999942
,	O	O:0.999865
df	O	O:0.998918
[	O	O:0.999978
'	O	O:0.999929
B	O	O:0.999827
']]	O	O:0.999585
,	O	O:0.999947
cols	O	O:0.994996
=[	O	O:0.999985
df	O	O:0.996349
[	O	O:0.999992
'	O	O:0.999903
C	O	O:0.999776
']]	O	O:0.999626
,	O	O:0.999789
margins=True	O	O:0.719797
,	O	O:0.999942
aggfu	O	O:0.996568
	
DataFrame.drop_duplicates	B-API	B-API:0.996778
and	O	O:0.997989
DataFrame.drop	B-API	B-API:0.948963
not	O	O:0.998865
removing	O	O:0.999872
rows	O	O:0.993398
	
`	O	O:0.999506
pd.rolling_mean	B-API	B-API:0.986457
(	O	O:0.999996
df	O	O:0.999296
,	O	O:0.999996
num	O	O:0.997664
)	O	O:0.999913
.dropna()	B-API	B-API:0.964980
.plot()	B-API	B-API:0.991410
`	O	O:0.999204
	
This	O	O:0.999320
is	O	O:0.999968
a	O	O:0.999953
replacement	O	O:0.999206
for	O	O:0.998867
`	O	O:0.999688
np.array_equal	B-API	B-API:0.990093
`	O	O:0.999908
which	O	O:0.996271
is	O	O:0.999988
broken	O	O:0.998523
for	O	O:0.999916
nan	O	O:0.971196
positional	O	O:0.986001
detections	O	O:0.998719
(	O	O:0.999845
and	O	O:0.999761
object	O	O:0.999207
dtypes	B-API	B-API:0.966669
)	O	O:0.999340
.	O	O:0.996972
	
It	O	O:0.999894
looks	O	O:0.999917
like	O	O:0.999156
`	O	O:0.999937
pd.unique	O	B-API:0.993289
`	O	O:0.999989
does	O	O:0.999441
not	O	O:0.999951
respect	O	O:0.999908
the	O	O:0.999861
`	O	O:0.999946
datetime64	O	O:0.965391
`	O	O:0.999962
dtype	B-API	B-API:0.998603
:	O	O:0.999985
#CODE	O	O:0.998169
	
df	O	O:0.995555
[	O	O:0.999958
'	O	O:0.999968
NumActivity	O	O:0.998798
']	O	O:0.999893
=	O	O:0.999495
pd.factorize	B-API	B-API:0.930739
(	O	O:0.999976
df	O	O:0.999200
[	O	O:0.999967
'	O	O:0.999964
Activity	O	O:0.997684
'])	O	O:0.999605
[	O	O:0.999904
0	O	O:0.999949
]	O	O:0.999854
+1	O	O:0.999299
works	O	O:0.998927
.	O	O:0.999664
	
calling	O	O:0.991961
`	O	O:0.999898
as_matrix()	B-API	B-API:0.998503
`	O	O:0.999956
on	O	O:0.999727
`	O	O:0.999998
df	O	O:0.994860
`	O	O:0.999994
returns	O	O:0.999699
a	O	O:0.999964
`	O	O:0.999936
numpy.ndarray	B-API	B-API:0.730903
`	O	O:0.999581
object	O	O:0.995852
#CODE	O	O:0.999671
	
And	O	O:0.999642
using	O	O:0.997845
pandas.Series.map	B-API	B-API:0.966408
:	O	O:0.999628
#CODE	O	O:0.999466
	
works	O	O:0.990702
,	O	O:0.999984
but	O	O:0.999871
I	O	O:0.999991
think	O	O:0.998259
`	O	O:0.999860
df.select_dtypes	B-API	B-API:0.967450
`	O	O:0.999943
should	O	O:0.999268
be	O	O:0.999990
preferred	O	O:0.999830
since	O	O:0.999523
it	O	O:0.999986
uses	O	O:0.999786
the	O	O:0.999493
	
Then	O	O:0.999830
you	O	O:0.999983
can	O	O:0.999916
access	O	O:0.999973
the	O	O:0.999984
relevant	O	O:0.999845
rows	O	O:0.999613
using	O	O:0.999984
groupby's	O	O:0.998424
`	O	O:0.999339
get_group	B-API	B-API:0.999612
`	O	O:0.999302
:	O	O:0.999844
#CODE	O	O:0.999861
	
It's	O	O:0.999386
not	O	O:0.999408
in	O	O:0.999954
the	O	O:0.999906
online	O	O:0.999833
docs	O	O:0.999519
,	O	O:0.999996
you	O	O:0.999993
have	O	O:0.999914
to	O	O:0.999993
check	O	O:0.999975
the	O	O:0.999883
`	O	O:0.999944
help	O	O:0.935407
(	O	O:0.999998
pd.bdate_range	B-API	O:0.980357
)`	O	O:0.999662
:)	O	O:0.999769
	
dtype	B-API	B-API:0.999107
:	O	O:0.999973
int64	O	O:0.963385
`	O	O:0.999743
	
dtype	B-API	B-API:0.998068
:	O	O:0.999924
object	O	O:0.994260
	
df.drop	B-API	B-API:0.965122
([	O	O:0.999731
'	O	O:0.999360
one	O	O:0.999677
'	O	O:0.999871
,	O	O:0.999963
'	O	O:0.999964
two	O	O:0.999269
'	O	O:0.999973
,	O	O:0.999959
'	O	O:0.999988
three	O	O:0.999095
']	O	O:0.999882
,	O	O:0.999721
axis=1	O	O:0.997654
,	O	O:0.999953
inplace=True	O	O:0.998815
)	O	O:0.999255
	
I	O	O:0.999916
tried	O	O:0.999916
make	O	O:0.994268
these	O	O:0.998525
'	O	O:0.999931
filenames	O	O:0.995915
'	O	O:0.999981
dataFrames	O	O:0.999917
using	O	O:0.999318
`	O	O:0.999702
pd.DataFrame	B-API	B-API:0.999167
`	O	O:0.999811
but	O	O:0.997901
wasn't	O	O:0.999988
able	O	O:0.999537
to	O	O:0.999990
do	O	O:0.999987
so	O	O:0.999965
.	O	O:0.999875
	
Try	O	O:0.999829
using	O	O:0.997758
.loc	B-API	B-API:0.999777
[	O	O:0.999480
row_index	O	O:0.967334
,	O	O:0.999983
col_indexer	O	O:0.997750
]	O	O:0.999947
=	O	O:0.999923
value	O	O:0.999757
instead	O	O:0.996971
`	O	O:0.999738
.	O	O:0.998451
	
Good	O	O:0.998510
question	O	O:0.999497
,	O	O:0.999921
`	O	O:0.999881
plt.hist	B-API	B-API:0.989481
(	O	O:0.999976
hour_list	O	O:0.982013
,	O	O:0.999980
bins=	O	O:0.998907
np.arange	B-API	B-API:0.980729
(	O	O:0.999787
24	O	O:0.999912
)	O	O:0.999731
-	O	O:0.999955
0.5	O	O:0.996867
)`	O	O:0.999823
will	O	O:0.989635
work	O	O:0.998329
.	O	O:0.999803
	
what	O	O:0.995648
is	O	O:0.999981
the	O	O:0.999690
-	O	O:0.999926
0.00343	O	O:0.982942
(	O	O:0.999996
ah	O	O:0.999988
I	O	O:0.999989
see	O	O:0.999974
,	O	O:0.999970
a	O	O:0.999994
consequence	O	O:0.989007
of	O	O:0.999946
not	O	O:0.999696
using	O	O:0.999865
right=False	O	O:0.975366
)	O	O:0.998125
,	O	O:0.999796
pd.cut	B-API	B-API:0.954742
very	O	O:0.998890
neat	O	O:0.997910
	
2	O	O:0.999506
)	O	O:0.999896
Alternatively	O	O:0.997892
,	O	O:0.999989
don't	O	O:0.999719
create	O	O:0.998883
levels	O	O:0.994097
for	O	O:0.999898
`	O	O:0.999860
aa	O	O:0.956154
`	O	O:0.999883
and	O	O:0.998232
`	O	O:0.999991
bb	O	O:0.978762
`	O	O:0.999993
using	O	O:0.994510
`	O	O:0.999814
as_index=False	O	B-API:0.549706
`	O	O:0.999806
and	O	O:0.995223
`	O	O:0.999973
pd.merge	B-API	B-API:0.997814
`	O	O:0.999780
#CODE	O	O:0.997209
	
`	O	O:0.999748
df.groupby	B-API	B-API:0.953744
(	O	O:0.999981
level	O	O:0.998677
=[	O	O:0.999958
'	O	O:0.999815
major	O	O:0.998374
'	O	O:0.999860
,	O	O:0.999942
'	O	O:0.999975
minor	O	O:0.999049
'])	O	O:0.999481
.mean()	B-API	B-API:0.996290
.dropna()	B-API	B-API:0.997260
`	O	O:0.999433
	
Argh	O	O:0.997862
,	O	O:0.999992
that	O	O:0.999612
still	O	O:0.999641
gives	O	O:0.999909
me	O	O:0.999937
`	O	O:0.999934
dtype	B-API	B-API:0.996522
(	O	O:0.999987
'	O	O:0.999614
datetime64	O	O:0.998193
[	O	O:0.999974
us	O	O:0.999909
]')`	O	O:0.991867
.	O	O:0.998265
	
or	O	O:0.999600
better	O	O:0.999500
yet	O	O:0.999759
,	O	O:0.999988
just	O	O:0.999714
don't	O	O:0.999950
specify	O	O:0.999699
a	O	O:0.999946
dtype	B-API	B-API:0.998860
:	O	O:0.999929
#CODE	O	O:0.997638
	
I	O	O:0.999756
was	O	O:0.999966
trying	O	O:0.999050
to	O	O:0.999806
do	O	O:0.999993
this	O	O:0.999983
with	O	O:0.999757
`	O	O:0.999944
df	O	O:0.997125
[	O	O:0.999995
df.shift()	B-API	O:0.665486
!	O	O:0.999995
=	O	O:0.999998
df	O	O:0.999622
]	O	O:0.999878
.dropna()	B-API	B-API:0.998632
.reset_index	B-API	B-API:0.991435
(	O	O:0.999967
drop=True	O	O:0.992501
)`	O	O:0.999897
but	O	O:0.999659
`	O	O:0.999978
shift()	B-API	B-API:0.995844
`	O	O:0.999701
is	O	O:0.999930
not	O	O:0.999863
behaving	O	O:0.999779
in	O	O:0.999929
the	O	O:0.999911
way	O	O:0.999169
I	O	O:0.999970
meant	O	O:0.999492
.	O	O:0.998935
	
`	O	O:0.999865
median_search_query	O	O:0.964655
=	O	O:0.999966
np.median	B-API	B-API:0.895095
(	O	O:0.999983
df.srch_query_affinity_score	O	O:0.996509
)`	O	O:0.999631
	
Example	O	O:0.998693
using	O	O:0.998205
df.asfreq	B-API	B-API:0.966326
(	O	O:0.999759
'	O	O:0.999928
Q	O	O:0.999246
')	O	O:0.999019
:	O	O:0.999777
#CODE	O	O:0.999600
	
```	O	O:0.996318
In	O	O:0.999466
[	O	O:0.999979
15	O	O:0.999805
]:	O	O:0.999630
pd.to_timedelta	B-API	B-API:0.983643
(	O	O:0.999952
s.str.replace	O	O:0.986779
(	O	O:0.999971
'	O	O:0.999974
hrs	O	O:0.999777
'	O	O:0.999939
,	O	O:0.999978
'	O	O:0.999972
h	O	O:0.998960
'))	O	O:0.998284
	
Python	O	O:0.998065
Dict	O	O:0.998386
,	O	O:0.999975
Lambda	O	O:0.999826
x	O	O:0.998752
,	O	O:0.999960
map()	B-API	B-API:0.932398
doesn't	O	O:0.997717
work	O	O:0.995756
	
I	O	O:0.999978
have	O	O:0.999894
tried	O	O:0.999330
to	O	O:0.999958
modify	O	O:0.999951
your	O	O:0.999359
answer	O	O:0.997840
to	O	O:0.999951
make	O	O:0.999722
it	O	O:0.999968
an	O	O:0.999972
example	O	O:0.999637
about	O	O:0.999858
modifying	O	O:0.999438
two	O	O:0.998139
columns	O	O:0.999941
like	O	O:0.999774
I	O	O:0.999989
asked	O	O:0.999482
(	O	O:0.999922
for	O	O:0.999916
one	O	O:0.999842
the	O	O:0.998995
`	O	O:0.999770
df.loc	B-API	B-API:0.990657
[:	O	O:0.999941
,	O	O:0.999955
(	O	O:0.999991
'	O	O:0.999843
A	O	O:0.999847
'	O	O:0.999962
,	O	O:0.999974
'	O	O:0.999970
a	O	O:0.999887
')]`	O	O:0.988572
works	O	O:0.999796
like	O	O:0.999838
a	O	O:0.999994
charm	O	O:0.983780
)	O	O:0.999461
.	O	O:0.997868
	
I	O	O:0.999922
thought	O	O:0.999642
np.ma.average	B-API	O:0.651438
is	O	O:0.999837
just	O	O:0.999897
what	O	O:0.999576
I	O	O:0.999993
need	O	O:0.997850
,	O	O:0.999718
but	O	O:0.999956
that	O	O:0.999515
also	O	O:0.999848
gives	O	O:0.999918
me	O	O:0.999942
NaN	O	O:0.999305
as	O	O:0.999988
a	O	O:0.999753
result	O	O:0.993209
.	O	O:0.999276
	
Although	O	O:0.998356
```	O	O:0.999320
pandas.cut()	B-API	B-API:0.999748
```	O	O:0.997313
is	O	O:0.999878
the	O	O:0.999281
better	O	O:0.996539
and	O	O:0.999874
more	O	O:0.998435
general	O	O:0.988624
answer	O	O:0.999214
,	O	O:0.999889
it	O	O:0.999844
looks	O	O:0.999835
like	O	O:0.999233
in	O	O:0.999988
this	O	O:0.999915
case	O	O:0.999810
you	O	O:0.999940
could	O	O:0.999841
do	O	O:0.999969
```	O	O:0.999935
df	O	O:0.994329
[	O	O:0.999993
'	O	O:0.999963
B	O	O:0.999901
']	O	O:0.999920
=	O	O:0.997560
(	O	O:0.999977
df.A	O	O:0.967185
/	O	O:0.999903
500	O	O:0.998911
)	O	O:0.999551
.astype	B-API	B-API:0.998563
(	O	O:0.999967
int	O	O:0.995783
)	O	O:0.999939
+	O	O:0.998514
1	O	O:0.999692
```	O	O:0.998449
.	O	O:0.997384
	
outcome	O	O:0.993626
:	O	O:0.999982
displays	O	O:0.999895
good	O	O:0.999836
in	O	O:0.999947
`	O	O:0.999960
df.head()	B-API	B-API:0.999671
`	O	O:0.999483
,	O	O:0.999905
but	O	O:0.999978
reverts	O	O:0.999427
to	O	O:0.999918
scientific	O	O:0.999890
notation	O	O:0.999750
upon	O	O:0.999802
coercion	O	O:0.999909
to	O	O:0.999977
string	O	O:0.999776
concatenation	O	O:0.999358
using	O	O:0.999719
+	O	O:0.998418
operator	O	O:0.993314
	
The	O	O:0.999289
`	O	O:0.999977
ewma	B-API	B-API:0.693907
`	O	O:0.999999
case	O	O:0.999046
can	O	O:0.999981
be	O	O:0.999994
solved	O	O:0.999888
similarly	O	O:0.998710
:	O	O:0.999927
`	O	O:0.999952
df.groupby	B-API	B-API:0.702187
(	O	O:0.999992
level=0	O	O:0.998417
)	O	O:0.999930
.apply	B-API	B-API:0.996479
(	O	O:0.999965
lambda	O	O:0.997878
x	O	O:0.996992
:	O	O:0.999956
pd.ewma	B-API	B-API:0.762483
(	O	O:0.999980
x	O	O:0.999799
,	O	O:0.999988
com=2	O	O:0.999682
))`	O	O:0.998728
	
I	O	O:0.999968
didn't	O	O:0.999756
realise	O	O:0.999260
that	O	O:0.999405
`	O	O:0.999983
.resample()	B-API	B-API:0.999741
`	O	O:0.999622
wasn't	O	O:0.998732
inplace	O	O:0.998684
!	O	O:0.999963
	
I	O	O:0.999942
can't	O	O:0.999960
think	O	O:0.999756
of	O	O:0.999983
a	O	O:0.999964
way	O	O:0.999894
to	O	O:0.999870
overload	O	O:0.996541
the	O	O:0.999502
`	O	O:0.999861
.loc	B-API	B-API:0.999932
`	O	O:0.999909
method	O	O:0.999151
properly	O	O:0.999473
!	O	O:0.999924
	
Do	O	O:0.999808
I	O	O:0.999998
have	O	O:0.999926
to	O	O:0.999925
specific	O	O:0.999971
the	O	O:0.999930
dtypes	B-API	B-API:0.866847
to	O	O:0.999963
make	O	O:0.999966
this	O	O:0.999908
work	O	O:0.998112
?	O	O:0.999950
	
It	O	O:0.999946
appears	O	O:0.999819
that	O	O:0.999655
the	O	O:0.999959
`	O	O:0.999924
applymap	B-API	B-API:0.983399
`	O	O:0.999948
is	O	O:0.999972
the	O	O:0.999928
culprit	O	O:0.999537
here	O	O:0.999408
:-)	O	O:0.999822
	
"	O	O:0.999379
"	O	O:0.999055
.join	B-API	B-API:0.993565
(	O	O:0.999955
header.split()	O	O:0.821173
)	O	O:0.999568
.split	B-API	B-API:0.982211
(	O	O:0.999972
'	O	O:0.999881
')	O	O:0.999176
	
I	O	O:0.999957
want	O	O:0.999063
df.append	B-API	B-API:0.976528
(	O	O:0.999979
df2	O	O:0.999301
)	O	O:0.999565
in	O	O:0.999940
this	O	O:0.999982
case	O	O:0.999620
to	O	O:0.999936
be	O	O:0.999930
:	O	O:0.999959
#CODE	O	O:0.999271
	
I	O	O:0.999977
completely	O	O:0.999600
forgot	O	O:0.998236
about	O	O:0.998458
.loc	B-API	B-API:0.999712
	
It	O	O:0.999869
sounds	O	O:0.999864
like	O	O:0.999881
maybe	O	O:0.999660
you	O	O:0.999888
want	O	O:0.998415
`	O	O:0.999944
pandas.concat	B-API	B-API:0.974963
`	O	O:0.999959
?	O	O:0.999850
	
Is	O	O:0.999973
there	O	O:0.999446
anything	O	O:0.999005
in	O	O:0.999539
pandas	O	O:0.999653
that	O	O:0.999403
is	O	O:0.999989
the	O	O:0.999891
opposite	O	O:0.999863
to	O	O:0.999927
`	O	O:0.999997
.dropna()	B-API	B-API:0.990444
`	O	O:0.999925
?	O	O:0.999894
	
Datetimes	O	O:0.994822
are	O	O:0.999755
handled	O	O:0.999585
if	O	O:0.999997
they	O	O:0.999879
can	O	O:0.999889
properly	O	O:0.999935
be	O	O:0.999970
converted	O	O:0.994428
(	O	O:0.999963
e.g.	O	O:0.999817
they	O	O:0.999956
have	O	O:0.999943
a	O	O:0.999994
dtype	B-API	B-API:0.928501
of	O	O:0.999842
'	O	O:0.998565
datetime64	O	O:0.997928
[	O	O:0.999978
ns	O	O:0.999278
]'	O	O:0.999805
,	O	O:0.999995
notably	O	O:0.999776
datetimes.date	O	O:0.997988
are	O	O:0.999759
NOT	O	O:0.999885
handled	O	O:0.996022
(	O	O:0.999971
NaN	O	O:0.998793
are	O	O:0.999889
a	O	O:0.999970
different	O	O:0.997601
story	O	O:0.994238
and	O	O:0.999950
depending	O	O:0.998368
on	O	O:0.999945
usage	O	O:0.999923
can	O	O:0.999816
cause	O	O:0.999780
the	O	O:0.999981
entire	O	O:0.994959
column	O	O:0.999932
type	O	O:0.999922
to	O	O:0.999984
be	O	O:0.999995
mishandled	O	O:0.997489
)	O	O:0.999209
	
The	O	O:0.999294
`	O	O:0.999928
args	O	O:0.834200
`	O	O:0.999961
and	O	O:0.997675
`	O	O:0.999977
kwargs	O	O:0.838685
`	O	O:0.999977
parameters	O	O:0.994703
were	O	O:0.999945
added	O	O:0.999956
to	O	O:0.999934
`	O	O:0.999993
rolling_apply	B-API	B-API:0.995304
`	O	O:0.999940
in	O	O:0.999813
Pandas	O	O:0.999914
version	O	O:0.997124
0.14.0	O	O:0.994679
.	O	O:0.999375
	
try	O	O:0.998911
``	O	O:0.999897
df	O	O:0.981648
[	O	O:0.999984
'	O	O:0.999955
LastName	O	O:0.998485
']	O	O:0.999901
=	O	O:0.999876
df.apply	B-API	B-API:0.847450
(	O	O:0.999957
updateDataframe	O	O:0.998602
)``	O	O:0.995585
,	O	O:0.999871
but	O	O:0.999961
even	O	O:0.997094
better	O	O:0.998838
is	O	O:0.999881
:	O	O:0.999550
``	O	O:0.999791
df.ix	B-API	B-API:0.939227
[	O	O:0.999982
df	O	O:0.999682
[	O	O:0.999967
'	O	O:0.999949
LastName	O	O:0.998319
']	O	O:0.999847
==	O	O:0.999531
'	O	O:0.999821
Joe	O	O:0.999927
'	O	O:0.999920
,	O	O:0.999950
'	O	O:0.999967
LastName	O	O:0.996185
']	O	O:0.999909
=	O	O:0.999781
'	O	O:0.999866
Black	O	O:0.986498
'``	O	O:0.998009
	
There	O	O:0.998011
should	O	O:0.999743
be	O	O:0.999981
no	O	O:0.999962
problem	O	O:0.999154
;	O	O:0.999950
`	O	O:0.999538
plt.plot	B-API	B-API:0.906382
`	O	O:0.999889
and	O	O:0.999030
`	O	O:0.999962
plt.fill_between	B-API	B-API:0.977504
`	O	O:0.999970
accept	O	O:0.998533
arrays	O	O:0.999932
of	O	O:0.999936
dtype	B-API	B-API:0.995030
`	O	O:0.999934
datetime64	O	O:0.947168
[	O	O:0.999991
ns	O	O:0.999509
]`	O	O:0.999975
just	O	O:0.999383
fine	O	O:0.999865
.	O	O:0.999665
	
You	O	O:0.999587
could	O	O:0.999465
try	O	O:0.999965
pandas	O	O:0.997104
pivot()	B-API	B-API:0.983969
.	O	O:0.998471
	
What	O	O:0.999110
happens	O	O:0.999655
if	O	O:0.999977
you	O	O:0.999963
do	O	O:0.999839
`	O	O:0.999982
ax.legend()	B-API	B-API:0.998670
`	O	O:0.999871
and	O	O:0.999348
`	O	O:0.999980
plt.draw()	B-API	B-API:0.999887
`	O	O:0.999904
?	O	O:0.999833
	
Pandas	O	O:0.999110
Python	O	O:0.998807
read_csv	B-API	B-API:0.968482
error_bad_lines	O	B-API:0.647407
producing	O	O:0.999821
shell	O	O:0.998163
feedback	O	O:0.996476
	
Though	O	O:0.999174
in	O	O:0.999987
some	O	O:0.999763
respects	O	O:0.999762
,	O	O:0.999994
the	O	O:0.999943
np.clip	B-API	B-API:0.920710
or	O	O:0.999847
np.max	O	O:0.554439
solutions	O	O:0.999705
are	O	O:0.999992
more	O	O:0.999155
easily	O	O:0.999748
read	O	O:0.998964
,	O	O:0.999975
I	O	O:0.999994
think	O	O:0.999954
this	O	O:0.998641
is	O	O:0.999965
the	O	O:0.999933
most	O	O:0.999186
precise	O	O:0.998717
answer	O	O:0.999918
to	O	O:0.999954
my	O	O:0.999972
original	O	O:0.997909
question	O	O:0.999195
.	O	O:0.999827
	
Did	O	O:0.999823
you	O	O:0.999936
try	O	O:0.999927
setting	O	O:0.999943
the	O	O:0.999896
delimiter	O	O:0.999470
to	O	O:0.999950
semicolon	O	O:0.999934
in	O	O:0.999999
your	O	O:0.999171
`	O	O:0.999949
read_csv	B-API	B-API:0.995404
`	O	O:0.999983
call	O	O:0.929886
?	O	O:0.999995
	
In	O	O:0.999783
[	O	O:0.999928
8]	O	O:0.998738
:	O	O:0.999970
%timeit	O	O:0.822642
df	O	O:0.999008
[	O	O:0.999992
'	O	O:0.999985
r	O	O:0.999864
']	O	O:0.999956
=	O	O:0.999940
df	O	O:0.998061
[[	O	O:0.999948
'	O	O:0.999921
minor	O	O:0.998891
'	O	O:0.999898
,	O	O:0.999952
'	O	O:0.999972
major	O	O:0.998755
']]	O	O:0.998932
.abs()	B-API	B-API:0.999528
.max	B-API	B-API:0.997588
(	O	O:0.999939
axis=1	O	O:0.998807
)	O	O:0.999528
	
I	O	O:0.999976
guess	O	O:0.999927
my	O	O:0.999834
confusion	O	O:0.999733
stems	O	O:0.999976
from	O	O:0.999937
the	O	O:0.999965
fact	O	O:0.999976
that	O	O:0.999779
the	O	O:0.999949
Series.value_counts	B-API	B-API:0.921046
doesn't	O	O:0.999934
seem	O	O:0.999986
to	O	O:0.999972
fit	O	O:0.999944
into	O	O:0.999825
the	O	O:0.999978
arguments	O	O:0.996299
required	O	O:0.999858
by	O	O:0.999955
the	O	O:0.999805
df.apply	B-API	B-API:0.960047
method	O	O:0.989694
.	O	O:0.999817
	
The	O	O:0.999948
problem	O	O:0.992183
is	O	O:0.999994
that	O	O:0.998665
`	O	O:0.999996
a	O	O:0.999795
`	O	O:0.999897
is	O	O:0.999866
dtype	B-API	B-API:0.981335
`	O	O:0.999911
object	O	O:0.947965
`	O	O:0.999917
.	O	O:0.998319
	
try	O	O:0.998935
`	O	O:0.999934
video_base	O	O:0.983688
=	O	O:0.999977
pd.merge	B-API	B-API:0.934072
(	O	O:0.999953
df_one	O	O:0.998343
,	O	O:0.999977
df_two	O	O:0.960600
[[	O	O:0.999951
'	O	O:0.999894
count_watched_yeterday	O	O:0.995546
']]	O	O:0.999353
,	O	O:0.999851
how=	O	O:0.998953
'	O	O:0.999956
left	O	O:0.987916
'	O	O:0.999935
,	O	O:0.999949
left_index=True	O	O:0.989917
,	O	O:0.999947
right_index=True	O	O:0.990579
)`	O	O:0.999193
	
ax.xaxis.set_major_locator	O	B-API:0.551670
(	O	O:0.999779
MultipleLocator	B-API	O:0.906761
(	O	O:0.999968
10	O	O:0.999723
))	O	O:0.999238
	
Actually	O	O:0.998989
I	O	O:0.999988
think	O	O:0.999662
you	O	O:0.999269
want	O	O:0.998936
:	O	O:0.999946
`	O	O:0.999973
pd.concat	B-API	B-API:0.993392
([	O	O:0.999988
df_may	O	O:0.992463
,	O	O:0.999993
df_jun	O	O:0.994563
]	O	O:0.999885
,	O	O:0.999874
axis=0	O	O:0.998742
,	O	O:0.999922
ignore_index=True	O	O:0.990175
)`	O	O:0.999122
	
Maybe	O	O:0.999816
there	O	O:0.998645
is	O	O:0.999973
a	O	O:0.999849
better	O	O:0.999286
approach	O	O:0.999450
thats	O	O:0.999330
takes	O	O:0.999842
advantage	O	O:0.999958
of	O	O:0.999984
features	O	O:0.997705
of	O	O:0.999966
the	O	O:0.999859
Pandas.DataFrame	B-API	O:0.716087
class	O	O:0.996683
?	O	O:0.999987
	
Try	O	O:0.999048
`	O	O:0.999809
df.loc	B-API	B-API:0.959376
[	O	O:0.999988
'	O	O:0.999986
a	O	O:0.999936
']`	O	O:0.996998
instead	O	O:0.985605
.	O	O:0.999394
	
Then	O	O:0.999410
this	O	O:0.999751
should	O	O:0.999545
work	O	O:0.995673
:	O	O:0.999989
`	O	O:0.999990
df	O	O:0.997093
[	O	O:0.999988
'	O	O:0.999970
Gene.Symbol	O	O:0.984652
']	O	O:0.999950
=	O	O:0.999858
df	O	O:0.998741
[	O	O:0.999960
'	O	O:0.999953
Gene.Symbol	O	O:0.978465
']	O	O:0.999889
.str	B-API	B-API:0.961555
.strip()	B-API	B-API:0.987556
.str	B-API	B-API:0.824727
.upper()	B-API	B-API:0.994188
`	O	O:0.999245
	
then	O	O:0.998317
[	O	O:0.999975
`	O	O:0.999973
df.groupy	O	O:0.788075
(	O	O:0.999985
'	O	O:0.999991
key	O	O:0.999294
')	O	O:0.999620
.agg	B-API	B-API:0.998289
(	O	O:0.999916
...	O	O:0.996675
)`]	O	O:0.998257
(	O	O:0.999914
#URL	O	O:0.999643
)	O	O:0.999926
might	O	O:0.998346
be	O	O:0.999994
what	O	O:0.999613
you	O	O:0.999663
are	O	O:0.999946
looking	O	O:0.999036
for	O	O:0.999114
.	O	O:0.998957
	
DataFrame.apply	B-API	B-API:0.986523
in	O	O:0.999503
python	O	O:0.997816
pandas	O	O:0.996591
alters	O	O:0.999668
both	O	O:0.997945
original	O	O:0.996500
and	O	O:0.999812
duplicate	O	O:0.998726
DataFrames	O	O:0.986796
	
you	O	O:0.998998
might	O	O:0.999786
want	O	O:0.999861
to	O	O:0.999975
try	O	O:0.999976
`	O	O:0.999910
df.iloc	B-API	B-API:0.908393
[	O	O:0.999989
0	O	O:0.999980
]`	O	O:0.999886
rather	O	O:0.999842
than	O	O:0.999455
`	O	O:0.999853
df.iloc	B-API	B-API:0.940916
(	O	O:0.999983
0	O	O:0.999930
)`	O	O:0.999776
.	O	O:0.999025
	
and	O	O:0.999431
,	O	O:0.999811
`	O	O:0.999641
ts.asfreq	O	B-API:0.933525
(	O	O:0.999982
'	O	O:0.999954
H	O	O:0.999713
'	O	O:0.999849
,	O	O:0.999957
method=	O	O:0.999234
'	O	O:0.999757
ffill	B-API	O:0.572960
')`	O	O:0.999663
to	O	O:0.999823
have	O	O:0.999973
hourly	O	O:0.997540
frequency	O	O:0.999719
.	O	O:0.998742
	
I	O	O:0.999977
tried	O	O:0.999796
something	O	O:0.999433
like	O	O:0.994395
`	O	O:0.999931
set_index	B-API	B-API:0.995604
`	O	O:0.999968
,	O	O:0.999935
`	O	O:0.999986
pd.factorize()	B-API	B-API:0.979425
`	O	O:0.999915
and	O	O:0.992503
`	O	O:0.999916
index_col	O	B-API:0.927720
`	O	O:0.999818
but	O	O:0.999822
they	O	O:0.999859
do	O	O:0.999663
not	O	O:0.999568
work	O	O:0.994842
.	O	O:0.999786
	
So	O	O:0.999975
df	O	O:0.999440
=	O	O:0.999993
df.reindex()	B-API	B-API:0.997220
results	O	O:0.998284
in	O	O:0.999977
the	O	O:0.999933
same	O	O:0.995878
indexing	O	O:0.999583
...	O	O:0.998373
	
I	O	O:0.999911
think	O	O:0.999945
this	O	O:0.998198
solution	O	O:0.999910
will	O	O:0.999747
execute	O	O:0.998912
faster	O	O:0.999968
than	O	O:0.999828
using	O	O:0.995076
iterrows()	B-API	B-API:0.999376
,	O	O:0.999263
but	O	O:0.999572
I'm	O	O:0.999607
not	O	O:0.999551
sure	O	O:0.999189
.	O	O:0.999803
	
One	O	O:0.999290
option	O	O:0.999798
using	O	O:0.996146
`	O	O:0.998732
df.reindex	B-API	B-API:0.998514
`	O	O:0.999096
:	O	O:0.999886
#CODE	O	O:0.999861
	
I	O	O:0.999982
am	O	O:0.999991
using	O	O:0.999430
dtype	B-API	B-API:0.962769
as	O	O:0.999868
suggested	O	O:0.998486
in	O	O:0.999944
the	O	O:0.999849
answer	O	O:0.999592
there	O	O:0.995395
.	O	O:0.999340
	
You	O	O:0.999771
might	O	O:0.998523
be	O	O:0.999847
interested	O	O:0.999739
in	O	O:0.998959
`	O	O:0.999849
pd.cut	B-API	B-API:0.999762
`	O	O:0.999392
:	O	O:0.999876
#CODE	O	O:0.999862
	
df.groupby	B-API	B-API:0.915987
(	O	O:0.999948
'	O	O:0.999969
A	O	O:0.999969
')	O	O:0.999913
.size()	B-API	B-API:0.987906
.apply	B-API	B-API:0.993093
(	O	O:0.999948
lambda	O	O:0.998482
x	O	O:0.998236
:	O	O:0.999972
float	O	O:0.995016
(	O	O:0.999996
x	O	O:0.999478
)	O	O:0.999883
/	O	O:0.999778
df.groupby	B-API	B-API:0.656143
(	O	O:0.999970
'	O	O:0.999949
A	O	O:0.999956
')	O	O:0.999940
.size()	B-API	B-API:0.995395
.sum()	B-API	B-API:0.983131
*100	O	O:0.805599
)	O	O:0.999393
	
`	O	O:0.999832
df.apply()	B-API	B-API:0.999772
`	O	O:0.999946
works	O	O:0.999834
off	O	O:0.999985
a	O	O:0.999991
single	O	O:0.998003
row	O	O:0.999811
,	O	O:0.999978
`	O	O:0.999963
shift()	B-API	B-API:0.997224
`	O	O:0.999943
doesnt	O	O:0.999854
seem	O	O:0.999936
to	O	O:0.999936
work	O	O:0.999390
.	O	O:0.999762
	
Could	O	O:0.999312
you	O	O:0.999632
try	O	O:0.999979
this	O	O:0.999720
:	O	O:0.999985
`	O	O:0.999981
df	O	O:0.995094
[	O	O:0.999995
'	O	O:0.999956
GC	O	O:0.999989
content	O	O:0.998708
']	O	O:0.999961
=	O	O:0.999936
df	O	O:0.998276
[[	O	O:0.999954
'	O	O:0.999836
oligo_sequence	O	O:0.998456
']]	O	O:0.999672
.apply	B-API	B-API:0.994496
(	O	O:0.999918
lambda	O	O:0.997784
row	O	O:0.999615
:	O	O:0.999937
GC	O	O:0.999982
(	O	O:0.999989
row	O	O:0.999785
)	O	O:0.999929
,	O	O:0.999952
axis=1	O	O:0.999470
)`	O	O:0.998291
	
And	O	O:0.999688
,	O	O:0.999965
`	O	O:0.999924
pd.eval()	B-API	B-API:0.978179
`	O	O:0.999843
works	O	O:0.999588
well	O	O:0.999893
with	O	O:0.999827
expressions	O	O:0.999027
containing	O	O:0.999414
large	O	O:0.996880
arrays	O	O:0.996639
#CODE	O	O:0.997646
	
The	O	O:0.999715
eventual	O	O:0.997611
goal	O	O:0.999173
being	O	O:0.999827
to	O	O:0.999818
arrange	O	O:0.993682
hierarchically	O	O:0.998083
to	O	O:0.999911
weekday	B-API	O:0.999903
hour-range	O	O:0.998509
,	O	O:0.999959
something	O	O:0.999827
like	O	O:0.987603
:	O	O:0.999982
#CODE	O	O:0.999257
	
Reading	O	O:0.996450
about	O	O:0.998526
`	O	O:0.999850
applymap	B-API	B-API:0.988041
`	O	O:0.999940
I	O	O:0.999889
wondered	O	O:0.999966
if	O	O:0.999938
there	O	O:0.999573
is	O	O:0.999985
a	O	O:0.999930
similar	O	O:0.999632
way	O	O:0.999739
of	O	O:0.999785
defining	O	O:0.996783
and	O	O:0.999794
applying	O	O:0.997708
operators	O	O:0.997129
that	O	O:0.999578
work	O	O:0.999444
on	O	O:0.999994
pairs	O	O:0.999407
of	O	O:0.999989
dataframes	O	O:0.998379
.	O	O:0.999846
	
Executing	O	O:0.999794
your	O	O:0.998979
code	O	O:0.999752
with	O	O:0.999917
pandas	O	O:0.997990
0.16.2	O	O:0.999604
yielded	O	O:0.999376
the	O	O:0.999928
two	O	O:0.999308
columns	O	O:0.999906
with	O	O:0.999931
dtype	B-API	B-API:0.936534
datetime64	O	O:0.998891
[	O	O:0.999955
ns	O	O:0.999516
]	O	O:0.999840
.	O	O:0.999039
	
`	O	O:0.999886
df	O	O:0.993061
[	O	O:0.999992
'	O	O:0.999939
price_trend	O	O:0.975270
']	O	O:0.999916
.apply	B-API	B-API:0.996955
(	O	O:0.999941
lambda	O	O:0.999082
x	O	O:0.998145
:[	O	O:0.999734
i.split	O	O:0.981723
(	O	O:0.999952
'	O	O:0.999792
:	O	O:0.999994
')	O	O:0.999950
for	O	O:0.999820
i	O	O:0.999972
in	O	O:0.999902
x	O	O:0.997537
])`	O	O:0.998920
#CODE	O	O:0.998829
	
Here	O	O:0.999490
the	O	O:0.999923
new	O	O:0.999711
value	O	O:0.999516
AND	O	O:0.999974
the	O	O:0.999978
existing	O	O:0.999320
dtype	B-API	B-API:0.924538
of	O	O:0.999989
the	O	O:0.999574
column	O	O:0.999021
matters	O	O:0.997962
.	O	O:0.999767
	
how	O	O:0.999791
about	O	O:0.999834
using	O	O:0.999486
the	O	O:0.998250
`	O	O:0.999351
pd.DataFrame.drop_duplicates()	B-API	B-API:0.997515
`	O	O:0.999733
method	O	O:0.997644
?	O	O:0.999982
	
dtype	B-API	B-API:0.998470
:	O	O:0.999963
timedelta64	O	O:0.990981
[	O	O:0.999981
ns	O	O:0.999465
]```	O	O:0.996024
	
`	O	O:0.999749
gg	O	O:0.993897
[	O	O:0.999987
'	O	O:0.999992
cumt	O	O:0.997791
']	O	O:0.999980
=	O	O:0.999906
gg.apply	O	O:0.957096
(	O	O:0.999976
lambda	O	O:0.999014
x	O	O:0.998348
:	O	O:0.999962
x	O	O:0.999928
[	O	O:0.999983
'	O	O:0.999998
tavg	O	O:0.999047
']	O	O:0.999946
+	O	O:0.997774
x	O	O:0.999269
[	O	O:0.999973
'	O	O:0.999998
tavg	O	O:0.998376
']	O	O:0.999829
.shift	B-API	B-API:0.992216
(	O	O:0.999962
1	O	O:0.999893
)	O	O:0.999976
[	O	O:0.999948
1	O	O:0.999973
:]	O	O:0.999642
)`	O	O:0.997682
	
"	O	O:0.999379
"	O	O:0.999055
.join	B-API	B-API:0.993565
(	O	O:0.999955
header.split()	O	O:0.821173
)	O	O:0.999568
.split	B-API	B-API:0.982211
(	O	O:0.999972
'	O	O:0.999881
')	O	O:0.999176
	
print	O	O:0.971280
'	O	O:0.999756
\nAfter	O	O:0.999154
replace\n	O	O:0.996530
'	O	O:0.999685
,	O	O:0.999963
df.replace	B-API	B-API:0.811284
(	O	O:0.999857
{	O	O:0.999991
'	O	O:0.999938
c1	O	O:0.998929
'	O	O:0.999798
:	O	O:0.999987
c1_fromto	O	O:0.996174
,	O	O:0.999996
'	O	O:0.999942
c2	O	O:0.998157
'	O	O:0.999788
:	O	O:0.999989
c2_fromto	O	O:0.997878
}	O	O:0.999434
)	O	O:0.999154
	
Profiling	O	O:0.999051
shows	O	O:0.999212
the	O	O:0.999957
culprit	O	O:0.996661
is	O	O:0.999995
obviously	O	O:0.998145
`	O	O:0.999877
B.ix	O	O:0.556894
[	O	O:0.999965
row	O	O:0.999924
[	O	O:0.999989
0	O	O:0.999959
]]	O	O:0.999691
.irow	B-API	B-API:0.711833
(	O	O:0.999880
np.searchsorted	B-API	B-API:0.820591
(	O	O:0.999890
B.ts	O	O:0.999395
[	O	O:0.999971
row	O	O:0.999919
[	O	O:0.999988
0	O	O:0.999951
]]	O	O:0.999951
,	O	O:0.999747
row	O	O:0.999925
[	O	O:0.999936
2	O	O:0.999914
])))`	O	O:0.996214
.	O	O:0.998045
	
At	O	O:0.999937
the	O	O:0.999898
first	O	O:0.999859
step	O	O:0.999358
I	O	O:0.999998
used	O	O:0.999731
`	O	O:0.999334
df.T	B-API	O:0.641701
`	O	O:0.999983
to	O	O:0.999916
transpose	O	O:0.995142
the	O	O:0.999928
dataframe	O	O:0.998540
,	O	O:0.999918
and	O	O:0.999980
tried	O	O:0.999502
something	O	O:0.999637
like	O	O:0.997567
`	O	O:0.999965
df.value_counts()	O	B-API:0.912484
`	O	O:0.999894
,	O	O:0.999939
however	O	O:0.999850
I'd	O	O:0.999456
	
Replace	O	O:0.994074
NaN	O	O:0.996703
in	O	O:0.999978
a	O	O:0.999961
dataframe	O	O:0.999621
with	O	O:0.999588
random	O	O:0.995169
values	O	O:0.994710
	
I	O	O:0.999979
want	O	O:0.999822
to	O	O:0.999729
replace	O	O:0.999718
all	O	O:0.999909
the	O	O:0.999886
NaN	O	O:0.993689
with	O	O:0.999942
some	O	O:0.999687
random	O	O:0.999375
values	O	O:0.999699
like	O	O:0.999248
.	O	O:0.999778
	
#CODE	O	O:0.997035
	
Resample	B-API	O:0.955610
function	O	O:0.999835
throwing	O	O:0.999772
error	O	O:0.999481
with	O	O:0.998846
Twitter	O	O:0.997128
Data	O	O:0.997055
	
I	O	O:0.999983
then	O	O:0.999926
try	O	O:0.999928
to	O	O:0.999976
resample	O	O:0.901230
for	O	O:0.999864
analysis	O	O:0.999467
#CODE	O	O:0.998136
	
I'm	O	O:0.999097
writing	O	O:0.999390
several	O	O:0.993575
pivot	O	O:0.961900
tables	O	O:0.999388
using	O	O:0.999597
pandas	O	O:0.957423
.	O	O:0.998679
	
For	O	O:0.999990
many	O	O:0.997565
of	O	O:0.999992
them	O	O:0.999469
,	O	O:0.999981
I	O	O:0.999995
need	O	O:0.999413
to	O	O:0.999733
return	O	O:0.999242
unique	O	O:0.992824
values	O	O:0.995371
.	O	O:0.999468
	
In	O	O:0.999874
a	O	O:0.999963
two-dimensional	O	O:0.998481
pivot	O	O:0.974155
table	O	O:0.999482
,	O	O:0.999992
the	O	O:0.999898
below	O	O:0.998747
code	O	O:0.999676
works	O	O:0.999939
as	O	O:0.999979
it	O	O:0.999675
should	O	O:0.998298
.	O	O:0.999730
	
When	O	O:0.997592
I	O	O:0.999994
add	O	O:0.999959
a	O	O:0.999951
third	O	O:0.998698
dimension	O	O:0.999141
,	O	O:0.999988
the	O	O:0.999986
code	O	O:0.998646
returns	O	O:0.999950
the	O	O:0.999993
count	O	O:0.993750
rather	O	O:0.999974
than	O	O:0.999840
the	O	O:0.999914
unique	O	O:0.996451
count	O	O:0.968872
.	O	O:0.999826
	
I	O	O:0.999850
suspect	O	O:0.999944
this	O	O:0.999563
has	O	O:0.999975
something	O	O:0.999897
to	O	O:0.999922
do	O	O:0.999996
with	O	O:0.999954
the	O	O:0.999647
aggfunc	B-API	B-API:0.865423
,	O	O:0.999952
but	O	O:0.999890
can't	O	O:0.999821
determine	O	O:0.998268
to	O	O:0.999970
what	O	O:0.999921
it	O	O:0.999947
should	O	O:0.999920
be	O	O:0.999952
changed	O	O:0.998285
.	O	O:0.999000
	
Use	O	O:0.999842
a	O	O:0.999962
groupby	B-API	B-API:0.817524
to	O	O:0.999929
get	O	O:0.999861
at	O	O:0.999990
each	O	O:0.999684
combination	O	O:0.999778
of	O	O:0.999895
`	O	O:0.999631
col_1	O	O:0.722800
`	O	O:0.999950
and	O	O:0.998719
`	O	O:0.999975
col_3	O	B-API:0.548598
`	O	O:0.999958
,	O	O:0.999986
then	O	O:0.999954
unstack	B-API	O:0.786181
to	O	O:0.999970
get	O	O:0.999986
the	O	O:0.999877
`	O	O:0.999910
col_3	O	O:0.864277
`	O	O:0.999997
values	O	O:0.999104
as	O	O:0.999980
columns	O	O:0.990417
:	O	O:0.999984
#CODE	O	O:0.999692
	
Python	O	O:0.998386
pandas	O	O:0.999378
merge	O	O:0.748562
or	O	O:0.999721
concat	O	B-API:0.780308
dataframes	O	O:0.999388
	
The	O	O:0.999974
data	O	O:0.999344
is	O	O:0.999983
for	O	O:0.999840
2	O	O:0.999791
products	O	O:0.986154
(	O	O:0.999928
BBG.XAMS.UL.S_pnl_pos_cost	O	O:0.947410
and	O	O:0.999845
BBG.XAMS.UNA.S_pnl_pos_cost	O	O:0.981369
)	O	O:0.999941
by	O	O:0.999939
date	O	O:0.999909
,	O	O:0.999986
in	O	O:0.999987
the	O	O:0.999791
future	O	O:0.999049
there	O	O:0.999640
will	O	O:0.999142
be	O	O:0.999990
more	O	O:0.998962
products	O	O:0.998304
.	O	O:0.999657
	
I	O	O:0.999975
want	O	O:0.999804
to	O	O:0.999484
concat	O	O:0.838870
or	O	O:0.999958
merge	O	B-API:0.906849
(	O	O:0.999969
not	O	O:0.999935
sure	O	O:0.999886
which	O	O:0.999825
)	O	O:0.999873
the	O	O:0.999972
list	O	O:0.998420
of	O	O:0.999958
dataframes	O	O:0.999200
into	O	O:0.999962
one	O	O:0.999997
data	O	O:0.999323
frame	O	O:0.999270
(	O	O:0.999976
called	O	O:0.999534
result	O	O:0.999794
)	O	O:0.999795
so	O	O:0.999978
they	O	O:0.999876
look	O	O:0.998567
like	O	O:0.993151
:	O	O:0.999961
#CODE	O	O:0.998760
	
where	O	O:0.999603
axis	O	O:0.999581
is	O	O:0.999992
the	O	O:0.999928
date	O	O:0.999081
.	O	O:0.999800
	
It	O	O:0.999927
looks	O	O:0.999859
like	O	O:0.999844
the	O	O:0.999983
data	O	O:0.995728
is	O	O:0.999954
merged	O	O:0.999848
by	O	O:0.999988
date	O	O:0.998014
,	O	O:0.999990
but	O	O:0.999979
I	O	O:0.999990
am	O	O:0.999968
missing	O	O:0.998977
the	O	O:0.999987
data	O	O:0.999624
for	O	O:0.999962
the	O	O:0.999935
week	O	O:0.998416
beginning	O	O:0.998522
2015-03-23	O	O:0.996534
.	O	O:0.999355
	
My	O	O:0.999844
current	O	O:0.994882
concat	O	B-API:0.769369
result	O	O:0.999673
dataframe	O	O:0.999433
looks	O	O:0.999715
like	O	O:0.997948
:	O	O:0.999948
#CODE	O	O:0.998933
	
Try	O	O:0.999917
using	O	O:0.998529
axis=0	O	O:0.919353
.	O	O:0.996088
	
This	O	O:0.998545
should	O	O:0.998379
concat	O	B-API:0.672669
column-wise	O	O:0.999866
,	O	O:0.999986
assuming	O	O:0.999981
each	O	O:0.999265
dataframe	O	O:0.999899
has	O	O:0.999935
the	O	O:0.999989
same	O	O:0.999267
column	O	O:0.999663
names	O	O:0.999680
.	O	O:0.999899
	
possible	O	O:0.999641
duplicate	O	O:0.999412
of	O	O:0.999891
[	O	O:0.999965
Pandas	O	O:0.999959
join	B-API	B-API:0.773498
/	O	O:0.999828
merge	B-API	O:0.548691
/	O	O:0.999718
concat	B-API	B-API:0.734022
two	O	O:0.999977
dataframes	O	O:0.999740
]	O	O:0.999740
(	O	O:0.999940
#URL	O	O:0.999656
)	O	O:0.999412
	
Also	O	O:0.999235
,	O	O:0.999989
how	O	O:0.999890
do	O	O:0.999936
you	O	O:0.999941
join	O	O:0.825034
this	O	O:0.999986
back	O	O:0.999527
to	O	O:0.999982
original	O	O:0.999883
dataframe	O	O:0.999647
?	O	O:0.999964
	
We	O	O:0.999970
can	O	O:0.998931
resample	O	O:0.991865
this	O	O:0.999943
to	O	O:0.999997
days	O	O:0.999874
;	O	O:0.999994
it'll	O	O:0.999366
be	O	O:0.999984
a	O	O:0.999982
much	O	O:0.994329
longer	O	O:0.999822
timeseries	O	O:0.997203
,	O	O:0.999974
of	O	O:0.999929
course	O	O:0.963585
,	O	O:0.999968
but	O	O:0.999860
memory	O	O:0.994912
is	O	O:0.999878
cheap	O	O:0.968542
and	O	O:0.999842
I'm	O	O:0.999860
lazy	O	O:0.972080
:	O	O:0.999939
#CODE	O	O:0.998922
	
How	O	O:0.999969
do	O	O:0.999886
I	O	O:0.999996
merge	O	O:0.837583
the	O	O:0.999620
birth	O	O:0.996554
rate	O	O:0.999983
back	O	O:0.999810
to	O	O:0.999992
the	O	O:0.999989
original	O	O:0.999120
table	O	O:0.999517
?	O	O:0.999988
	
Indexes	O	O:0.997831
aren't	O	O:0.999258
compatible	O	O:0.998976
...	O	O:0.996756
	
Turns	O	O:0.999060
out	O	O:0.999899
size	O	O:0.997959
isn't	O	O:0.999943
such	O	O:0.999762
an	O	O:0.999749
issue	O	O:0.996969
.	O	O:0.999485
	
Python	O	O:0.994307
&	O	O:0.999566
Pandas	O	O:0.997726
:	O	O:0.999995
Unable	O	O:0.999876
to	O	O:0.999994
drop	O	O:0.998361
columns	O	O:0.998708
	
I	O	O:0.999992
try	O	O:0.999968
to	O	O:0.999960
drop	O	O:0.998806
the	O	O:0.999981
data	O	O:0.994510
,	O	O:0.999970
but	O	O:0.999945
it	O	O:0.999968
reports	O	O:0.999804
some	O	O:0.999767
column	O	O:0.999921
does	O	O:0.999753
not	O	O:0.999857
exist	O	O:0.992168
.	O	O:0.999776
	
#CODE	O	O:0.997035
	
@USER	O	O:0.998303
,	O	O:0.999943
that's	O	O:0.999909
possible	O	O:0.985532
,	O	O:0.999991
but	O	O:0.999905
I	O	O:0.999972
don't	O	O:0.999853
know	O	O:0.998817
how	O	O:0.999745
to	O	O:0.999963
deal	O	O:0.999404
with	O	O:0.999780
it	O	O:0.999727
.	O	O:0.999871
	
In	O	O:0.999967
my	O	O:0.999878
previous	O	O:0.999151
experience	O	O:0.999781
with	O	O:0.999645
pandas	O	O:0.996506
,	O	O:0.999984
it	O	O:0.999976
will	O	O:0.999538
automatically	O	O:0.999965
turn	O	O:0.999545
the	O	O:0.999864
second	O	O:0.998901
`	O	O:0.999976
Q	O	O:0.995772
`	O	O:0.999998
into	O	O:0.995460
`	O	O:0.999997
Q.1	O	O:0.976543
`	O	O:0.999991
when	O	O:0.996500
reading	O	O:0.999938
the	O	O:0.999975
data	O	O:0.998956
.	O	O:0.999751
	
However	O	O:0.998777
,	O	O:0.999943
in	O	O:0.999972
my	O	O:0.999890
case	O	O:0.998936
,	O	O:0.999993
it	O	O:0.999935
failed	O	O:0.999653
to	O	O:0.999926
do	O	O:0.999973
it	O	O:0.999951
,	O	O:0.999980
and	O	O:0.999911
I	O	O:0.999969
don't	O	O:0.999855
know	O	O:0.996134
why	O	O:0.999258
.	O	O:0.998801
	
However	O	O:0.998057
,	O	O:0.999888
This	O	O:0.999872
it	O	O:0.999931
cannot	O	O:0.998429
`	O	O:0.999998
drop	B-API	O:0.907699
`	O	O:0.999972
`	O	O:0.999706
NCDC	O	O:0.996644
`	O	O:0.999871
either	O	O:0.994437
.	O	O:0.999828
	
You	O	O:0.999849
can	O	O:0.999918
then	O	O:0.999953
drop	O	O:0.999804
your	O	O:0.999596
columns	O	O:0.991677
:	O	O:0.999985
#CODE	O	O:0.999643
	
I	O	O:0.999680
would	O	O:0.999963
like	O	O:0.999025
to	O	O:0.999998
take	O	O:0.999964
a	O	O:0.999996
given	O	O:0.998382
row	O	O:0.999982
from	O	O:0.999741
a	O	O:0.999932
DataFrame	O	O:0.994195
and	O	O:0.999509
prepend	O	O:0.998014
or	O	O:0.999717
append	O	O:0.656162
to	O	O:0.999834
the	O	O:0.999995
same	O	O:0.999238
DataFrame	O	O:0.997329
.	O	O:0.999936
	
Rather	O	O:0.999768
than	O	O:0.999320
concat	O	B-API:0.782225
I	O	O:0.999953
would	O	O:0.999963
just	O	O:0.998980
assign	O	O:0.999973
directly	O	O:0.999696
to	O	O:0.999975
the	O	O:0.999999
df	O	O:0.996647
after	O	O:0.999670
`	O	O:0.999960
shift	O	B-API:0.948889
`	O	O:0.999970
ing	O	O:0.991949
,	O	O:0.999998
then	O	O:0.999722
use	O	O:0.999723
`	O	O:0.999917
iloc	B-API	B-API:0.988238
`	O	O:0.999989
to	O	O:0.999540
reference	O	O:0.999993
the	O	O:0.999931
position	O	O:0.999457
you	O	O:0.999985
want	O	O:0.999964
to	O	O:0.999966
assign	O	O:0.999980
the	O	O:0.999919
row	O	O:0.999235
,	O	O:0.999990
you	O	O:0.999991
have	O	O:0.999812
to	O	O:0.999998
call	O	O:0.998604
`	O	O:0.999995
squeeze	B-API	B-API:0.758047
`	O	O:0.999979
so	O	O:0.999974
that	O	O:0.999989
you	O	O:0.999961
assign	O	O:0.999747
just	O	O:0.999656
the	O	O:0.999960
values	O	O:0.992102
and	O	O:0.999962
lose	O	O:0.999655
the	O	O:0.999303
original	O	O:0.984570
index	O	O:0.999353
value	O	O:0.999860
otherwise	O	O:0.999933
it'll	O	O:0.999745
raise	O	O:0.999892
a	O	O:0.999811
`	O	O:0.999819
ValueError	O	O:0.985981
`	O	O:0.999471
:	O	O:0.999666
#CODE	O	O:0.999861
	
To	O	O:0.999959
insert	O	O:0.974275
at	O	O:0.999941
the	O	O:0.998808
end	O	O:0.938102
:	O	O:0.999940
#CODE	O	O:0.999646
	
I'm	O	O:0.999617
not	O	O:0.999916
sure	O	O:0.999809
exactly	O	O:0.999822
what	O	O:0.999613
you're	O	O:0.999897
expecting	O	O:0.998138
,	O	O:0.999950
but	O	O:0.999961
you	O	O:0.999570
could	O	O:0.999401
replace	O	O:0.999885
your	O	O:0.999881
lists	O	O:0.999884
with	O	O:0.999943
numpy	O	O:0.987539
arrays	O	O:0.999401
(	O	O:0.999978
I	O	O:0.999978
don't	O	O:0.999918
think	O	O:0.996085
it'll	O	O:0.999063
improve	O	O:0.999775
your	O	O:0.998898
specific	O	O:0.999443
code	O	O:0.993300
):	O	O:0.999964
#CODE	O	O:0.998570
	
What	O	O:0.997780
is	O	O:0.999933
the	O	O:0.999905
best	O	O:0.999304
way	O	O:0.999901
for	O	O:0.999946
me	O	O:0.999962
to	O	O:0.999720
get	O	O:0.999995
this	O	O:0.999941
data	O	O:0.999949
into	O	O:0.999595
Pandas	O	O:0.999955
?	O	O:0.999811
	
Is	O	O:0.999990
there	O	O:0.999730
a	O	O:0.999958
standard	O	O:0.997988
way	O	O:0.999771
I	O	O:0.999987
could	O	O:0.999819
use	O	O:0.998759
`	O	O:0.999751
read_table	B-API	B-API:0.994257
`	O	O:0.999971
or	O	O:0.999981
some	O	O:0.999939
similar	O	O:0.999837
function	O	O:0.999819
to	O	O:0.999935
read	O	O:0.999967
this	O	O:0.999985
file	O	O:0.999949
directly	O	O:0.999520
?	O	O:0.999960
	
Should	O	O:0.999356
I	O	O:0.999989
write	O	O:0.999929
a	O	O:0.999873
script	O	O:0.998107
to	O	O:0.999844
insert	O	O:0.994585
commas	O	O:0.999721
where	O	O:0.999673
all	O	O:0.999733
the	O	O:0.999781
column	O	O:0.993212
breaks	O	O:0.999381
are	O	O:0.999397
and	O	O:0.999830
then	O	O:0.999221
read	O	O:0.998717
it	O	O:0.999980
in	O	O:0.999986
as	O	O:0.999927
CSV	O	O:0.999491
?	O	O:0.999935
	
(	O	O:0.999872
I'd	O	O:0.999991
just	O	O:0.999773
do	O	O:0.999972
the	O	O:0.999802
latter	O	O:0.984877
,	O	O:0.999932
but	O	O:0.999704
I'm	O	O:0.999897
also	O	O:0.998489
interested	O	O:0.999861
in	O	O:0.999749
becoming	O	O:0.997478
better	O	O:0.999714
with	O	O:0.999617
Pandas	O	O:0.999454
so	O	O:0.999971
if	O	O:0.999978
there's	O	O:0.999919
an	O	O:0.999657
out-of-the-box	O	O:0.999040
way	O	O:0.999206
I'd	O	O:0.999980
like	O	O:0.999564
to	O	O:0.999937
know	O	O:0.999604
it	O	O:0.999952
.	O	O:0.999802
)	O	O:0.999724
	
Any	O	O:0.999829
ideas	O	O:0.999367
on	O	O:0.999945
how	O	O:0.999867
to	O	O:0.999938
get	O	O:0.999991
this	O	O:0.999984
file	O	O:0.999835
to	O	O:0.999970
load	O	O:0.999870
?	O	O:0.999968
	
Unfortunately	O	O:0.999295
I	O	O:0.999936
can't	O	O:0.999938
just	O	O:0.998923
strip	O	O:0.999586
out	O	O:0.999905
accents	O	O:0.999008
,	O	O:0.999995
as	O	O:0.999947
I	O	O:0.999995
have	O	O:0.999837
to	O	O:0.999862
interface	O	O:0.999991
with	O	O:0.999897
software	O	O:0.999937
that	O	O:0.999938
requires	O	O:0.999946
the	O	O:0.999827
proper	O	O:0.999043
name	O	O:0.998664
,	O	O:0.999984
and	O	O:0.999960
I	O	O:0.999996
have	O	O:0.999871
a	O	O:0.999977
ton	O	O:0.999889
of	O	O:0.999988
files	O	O:0.998175
to	O	O:0.999913
format	O	O:0.999593
(	O	O:0.999980
not	O	O:0.999899
just	O	O:0.999853
the	O	O:0.999989
one	O	O:0.998749
)	O	O:0.999762
.	O	O:0.999399
	
Thanks	O	O:0.998671
!	O	O:0.999927
	
pls	O	O:0.999532
show	O	O:0.999729
your	O	O:0.999330
input	O	O:0.998775
and	O	O:0.999955
what	O	O:0.995706
is	O	O:0.999957
the	O	O:0.999763
expected	O	O:0.999028
output	O	O:0.999167
,	O	O:0.999989
in	O	O:0.999971
a	O	O:0.999946
copy-pastable	O	O:0.999070
form	O	O:0.999348
.	O	O:0.999720
	
What	O	O:0.999637
you	O	O:0.999808
are	O	O:0.999968
doing	O	O:0.997939
is	O	O:0.999960
very	O	O:0.994899
inefficient	O	O:0.999141
.	O	O:0.999029
	
A	O	O:0.999537
groupby	B-API	B-API:0.844540
should	O	O:0.999653
try	O	O:0.999890
to	O	O:0.999954
use	O	O:0.999991
vectorized	O	O:0.995355
functions	O	O:0.999667
when	O	O:0.999233
possible	O	O:0.998983
.	O	O:0.999888
	
Then	O	O:0.998991
join	O	O:0.978999
them	O	O:0.999975
up	O	O:0.999958
at	O	O:0.999952
the	O	O:0.999657
end	O	O:0.981609
.	O	O:0.999435
	
Hi	O	O:0.999854
Tom	O	O:0.999732
,	O	O:0.999968
it	O	O:0.999944
doesn't	O	O:0.999365
look	O	O:0.998366
like	O	O:0.999873
this	O	O:0.999078
works	O	O:0.998213
.	O	O:0.999173
	
It	O	O:0.999900
outputs	O	O:0.999718
just	O	O:0.999247
one	O	O:0.999932
array	O	O:0.998553
and	O	O:0.999470
is	O	O:0.999976
equivalent	O	O:0.999553
to	O	O:0.999878
df2	O	O:0.999898
[	O	O:0.999973
'	O	O:0.999977
array	O	O:0.999893
']	O	O:0.999589
.sum()	B-API	B-API:0.998808
.	O	O:0.998712
	
But	O	O:0.999770
you	O	O:0.999857
have	O	O:0.999277
given	O	O:0.999885
me	O	O:0.999977
an	O	O:0.999939
idea	O	O:0.999923
with	O	O:0.999760
apply	B-API	B-API:0.730013
.	O	O:0.999080
	
Let	O	O:0.999909
me	O	O:0.999966
see	O	O:0.999964
if	O	O:0.999990
I	O	O:0.999995
can	O	O:0.999855
figure	O	O:0.998477
something	O	O:0.999655
out	O	O:0.999091
.	O	O:0.999511
	
You	O	O:0.999922
need	O	O:0.998932
`	O	O:0.999895
apply	B-API	B-API:0.874521
(	O	O:0.999952
your_func	O	O:0.984641
,	O	O:0.999983
axis=1	O	O:0.999471
)`	O	O:0.999768
to	O	O:0.999949
work	O	O:0.999971
on	O	O:0.999997
a	O	O:0.999989
row-by-row	O	O:0.999481
basis	O	O:0.998325
.	O	O:0.999764
	
#CODE	O	O:0.997035
	
Another	O	O:0.999552
way	O	O:0.998809
would	O	O:0.999652
be	O	O:0.999973
to	O	O:0.999995
call	O	O:0.979800
`	O	O:0.999988
unique	B-API	O:0.951547
`	O	O:0.999980
on	O	O:0.999818
the	O	O:0.999997
transpose	O	O:0.927134
of	O	O:0.999993
your	O	O:0.999554
df	O	O:0.995090
:	O	O:0.999963
#CODE	O	O:0.999309
	
Drop	O	O:0.988113
values	O	O:0.999077
satisfying	O	O:0.999241
condition	O	O:0.999349
plus	O	O:0.999889
arbitrary	O	O:0.999827
number	O	O:0.999466
of	O	O:0.999961
next	O	O:0.998443
values	O	O:0.999591
in	O	O:0.999974
a	O	O:0.999970
pandas	O	O:0.993243
DataFrame	O	O:0.991145
	
So	O	O:0.999967
my	O	O:0.999704
final	O	O:0.999656
goal	O	O:0.998325
is	O	O:0.999986
to	O	O:0.999978
drop	B-API	O:0.998798
values	O	O:0.999422
in	O	O:0.999964
one	O	O:0.999965
column	O	O:0.999825
of	O	O:0.999990
a	O	O:0.999742
`	O	O:0.999950
pandas	O	O:0.974009
`	O	O:0.999964
`	O	O:0.999756
DataFrame	O	O:0.995217
`	O	O:0.999992
according	O	O:0.999401
to	O	O:0.999986
some	O	O:0.999954
condition	O	O:0.999786
on	O	O:0.999997
another	O	O:0.999963
column	O	O:0.999871
of	O	O:0.999944
the	O	O:0.999969
same	O	O:0.999204
`	O	O:0.999982
DataFrame	O	O:0.994874
`	O	O:0.999975
,	O	O:0.999979
plus	O	O:0.999726
several	O	O:0.999634
next	O	O:0.999088
values	O	O:0.997866
e.g.	O	O:0.990899
:	O	O:0.999946
#CODE	O	O:0.999701
	
So	O	O:0.999979
this	O	O:0.999893
will	O	O:0.999866
drop	O	O:0.994160
the	O	O:0.999969
records	O	O:0.997903
where	O	O:0.999610
the	O	O:0.999949
condition	O	O:0.989554
is	O	O:0.999983
satisfied	O	O:0.997822
,	O	O:0.999982
but	O	O:0.999879
how	O	O:0.999949
do	O	O:0.999884
I	O	O:0.999999
drop	O	O:0.994366
the	O	O:0.999953
next	O	O:0.996754
3	O	O:0.999988
records	O	O:0.999456
after	O	O:0.999946
the	O	O:0.999768
condition	O	O:0.975841
was	O	O:0.999965
satisfied	O	O:0.999812
too	O	O:0.999870
?	O	O:0.999984
	
My	O	O:0.999825
desired	O	O:0.996906
output	O	O:0.997750
would	O	O:0.999663
look	O	O:0.996676
something	O	O:0.999797
like	O	O:0.999253
this	O	O:0.998437
:	O	O:0.999930
#CODE	O	O:0.999237
	
We	O	O:0.999987
can	O	O:0.999535
use	O	O:0.999978
the	O	O:0.999706
boolean	O	O:0.870096
condition	O	O:0.998494
index	O	O:0.999877
to	O	O:0.999991
slice	O	O:0.999821
the	O	O:0.999990
df	O	O:0.999422
using	O	O:0.999352
`	O	O:0.999547
loc	B-API	B-API:0.979403
`	O	O:0.999860
and	O	O:0.996647
set	O	O:0.999681
the	O	O:0.999797
following	O	O:0.997152
values	O	O:0.958555
:	O	O:0.999979
#CODE	O	O:0.999791
	
Panda's	O	O:0.994163
boxplot	O	O:0.987106
but	O	O:0.999879
not	O	O:0.999522
showing	O	O:0.998674
the	O	O:0.999621
box	O	O:0.994839
	
Note	O	O:0.999607
,	O	O:0.999883
`	O	O:0.999949
showbox	O	O:0.857409
`	O	O:0.999963
and	O	O:0.999109
`	O	O:0.999987
whiskerprops	O	O:0.988832
`	O	O:0.999983
are	O	O:0.999747
the	O	O:0.999880
`	O	O:0.999973
kwds	O	O:0.989339
`	O	O:0.999995
of	O	O:0.999830
boxplot	O	O:0.998488
,	O	O:0.999985
which	O	O:0.999256
are	O	O:0.999279
in	O	O:0.999981
turn	O	O:0.999367
passed	O	O:0.999674
to	O	O:0.999656
`	O	O:0.999996
matplotlib.boxplot	B-API	O:0.845705
`	O	O:0.999919
.	O	O:0.998890
	
Applying	O	O:0.998299
aggregate	B-API	O:0.823340
function	O	O:0.999636
on	O	O:0.999991
columns	O	O:0.999619
of	O	O:0.999983
Pandas	O	O:0.999806
pivot	O	O:0.978820
table	O	O:0.997409
	
I	O	O:0.999961
generated	O	O:0.999888
the	O	O:0.999627
following	O	O:0.999053
pivot	O	O:0.951845
table	O	O:0.999839
via	O	O:0.999952
taking	O	O:0.999863
maximum	O	O:0.997771
of	O	O:0.999904
values	O	O:0.998075
in	O	O:0.999954
`	O	O:0.999955
Z	O	O:0.997081
`	O	O:0.999969
column	O	O:0.954464
:	O	O:0.999991
#CODE	O	O:0.999581
	
Here's	O	O:0.999700
a	O	O:0.999933
fairly	O	O:0.999456
general	O	O:0.990982
solution	O	O:0.999918
you	O	O:0.999966
can	O	O:0.999965
apply	O	O:0.977792
to	O	O:0.999985
multiple	O	O:0.999707
columns	O	O:0.998069
.	O	O:0.999810
	
The	O	O:0.999739
'	O	O:0.999818
To	O	O:0.999959
'	O	O:0.999943
column	O	O:0.999041
doesn't	O	O:0.999955
need	O	O:0.999591
to	O	O:0.999967
be	O	O:0.999995
rounded	O	O:0.999626
,	O	O:0.999906
I	O	O:0.999991
just	O	O:0.998851
included	O	O:0.999808
it	O	O:0.999928
for	O	O:0.999931
the	O	O:0.999980
generality	O	O:0.999126
of	O	O:0.999972
two	O	O:0.999865
columns	O	O:0.999776
rather	O	O:0.999927
than	O	O:0.999300
one	O	O:0.997433
:	O	O:0.999972
#CODE	O	O:0.999608
	
428	O	O:0.999742
base	O	O:0.997178
,	O	O:0.999994
mult	O	O:0.994326
=	O	O:0.999946
_gfc	O	O:0.971035
(	O	O:0.999996
freq	O	O:0.947318
)	O	O:0.999686
	
-->	O	O:0.989770
429	O	O:0.998107
return	O	O:0.974519
tslib.dt64arr_to_periodarr	O	O:0.955712
(	O	O:0.999937
data.view	O	O:0.692574
(	O	O:0.999957
'	O	O:0.999970
i8	O	O:0.999769
')	O	O:0.999497
,	O	O:0.999978
base	O	O:0.999512
,	O	O:0.999994
tz	O	O:0.952042
)	O	O:0.999437
	
I	O	O:0.999971
could	O	O:0.999934
do	O	O:0.999973
a	O	O:0.999994
left	O	O:0.972113
merge	B-API	B-API:0.908973
,	O	O:0.999936
but	O	O:0.999705
I	O	O:0.999930
would	O	O:0.999716
end	O	O:0.995767
up	O	O:0.999981
with	O	O:0.999724
a	O	O:0.999983
huge	O	O:0.999410
file	O	O:0.998410
.	O	O:0.999764
	
Is	O	O:0.999985
there	O	O:0.999736
any	O	O:0.999837
way	O	O:0.999783
to	O	O:0.999823
add	O	O:0.999990
specific	O	O:0.999914
rows	O	O:0.999914
from	O	O:0.999928
df2	O	O:0.999852
to	O	O:0.999990
df1	O	O:0.999946
using	O	O:0.999574
merge	B-API	B-API:0.823546
?	O	O:0.999563
	
Unclear	O	O:0.999549
why	O	O:0.999721
you	O	O:0.999899
think	O	O:0.999872
a	O	O:0.999992
left	O	O:0.988192
merge	B-API	B-API:0.667389
would	O	O:0.999451
produce	O	O:0.998404
a	O	O:0.999997
huge	O	O:0.999402
file	O	O:0.998977
,	O	O:0.999993
by	O	O:0.999992
performing	O	O:0.999481
a	O	O:0.999976
left	O	O:0.996729
merge	B-API	O:0.538885
on	O	O:0.999891
the	O	O:0.999839
product	O	O:0.998285
id	O	O:0.999938
you	O	O:0.999917
are	O	O:0.999926
stating	O	O:0.999836
that	O	O:0.999682
you	O	O:0.999965
are	O	O:0.999955
only	O	O:0.999471
interested	O	O:0.999909
in	O	O:0.999975
matches	O	O:0.998140
in	O	O:0.999954
the	O	O:0.999831
product_id	O	O:0.951314
column	O	O:0.999794
only	O	O:0.999292
	
Just	O	O:0.999694
perform	O	O:0.999084
a	O	O:0.999991
left	O	O:0.944791
`	O	O:0.999884
merge	B-API	B-API:0.906196
`	O	O:0.999948
on	O	O:0.999425
'	O	O:0.999977
product_id	O	O:0.983689
'	O	O:0.999871
column	O	O:0.992247
:	O	O:0.999978
#CODE	O	O:0.999501
	
What	O	O:0.998336
would	O	O:0.999820
be	O	O:0.999977
the	O	O:0.999909
Python	O	O:0.997995
equivalent	O	O:0.999652
?	O	O:0.999947
	
I	O	O:0.999941
cannot	O	O:0.999906
think	O	O:0.999787
of	O	O:0.999980
a	O	O:0.999943
way	O	O:0.999880
to	O	O:0.999718
translate	O	O:0.999991
this	O	O:0.999862
where	O	O:0.998424
statement	O	O:0.999551
into	O	O:0.999538
pandas	O	O:0.998634
syntax	O	O:0.994964
.	O	O:0.999114
	
The	O	O:0.999974
only	O	O:0.999756
way	O	O:0.999947
I	O	O:0.999985
can	O	O:0.999968
think	O	O:0.999861
of	O	O:0.999923
is	O	O:0.999918
to	O	O:0.999957
add	O	O:0.999982
an	O	O:0.999952
arbitrary	O	O:0.999515
field	O	O:0.999310
to	O	O:0.999872
people_usa	O	O:0.848318
(	O	O:0.999983
e.g.	O	O:0.998227
`	O	O:0.999892
people_usa	O	O:0.716647
[	O	O:0.999989
'	O	O:0.999992
dummy	O	O:0.998864
']	O	O:0.999944
=1	O	O:0.946175
`)	O	O:0.999726
,	O	O:0.999988
do	O	O:0.999993
a	O	O:0.999991
left	O	O:0.988286
join	B-API	B-API:0.902562
,	O	O:0.999990
then	O	O:0.999941
take	O	O:0.999975
only	O	O:0.999910
the	O	O:0.999971
records	O	O:0.999024
where	O	O:0.999053
'	O	O:0.999991
dummy	O	O:0.997449
'	O	O:0.999902
is	O	O:0.999943
nan	O	O:0.974078
,	O	O:0.999999
then	O	O:0.999835
delete	O	O:0.999484
the	O	O:0.999981
dummy	O	O:0.983043
field	O	O:0.998519
-	O	O:0.999983
which	O	O:0.999905
seems	O	O:0.999935
a	O	O:0.999975
bit	O	O:0.998824
convoluted	O	O:0.995508
.	O	O:0.999396
	
Does	O	O:0.999000
this	O	O:0.999730
work	O	O:0.999875
only	O	O:0.999645
on	O	O:0.999951
the	O	O:0.999959
index	O	O:0.999366
of	O	O:0.999975
the	O	O:0.999928
dataframe	O	O:0.999722
?	O	O:0.999946
	
I'd	O	O:0.999948
like	O	O:0.999603
the	O	O:0.999761
option	O	O:0.999337
to	O	O:0.999981
specify	O	O:0.999971
the	O	O:0.999932
field	O	O:0.989684
(	O	O:0.999995
s	O	O:0.999962
)	O	O:0.999992
to	O	O:0.999822
apply	O	O:0.996028
this	O	O:0.999299
to	O	O:0.999572
	
Is	O	O:0.999985
there	O	O:0.999589
any	O	O:0.999958
easy	O	O:0.999516
way	O	O:0.999870
to	O	O:0.999872
do	O	O:0.999998
this	O	O:0.999965
if	O	O:0.999969
you	O	O:0.999941
have	O	O:0.999766
multiple	O	O:0.999811
columns	O	O:0.999903
to	O	O:0.999986
check	O	O:0.999817
/	O	O:0.999942
join	O	B-API:0.801820
?	O	O:0.999975
	
You	O	O:0.999869
could	O	O:0.999838
do	O	O:0.999990
a	O	O:0.999952
`	O	O:0.999829
merge	B-API	B-API:0.964280
`	O	O:0.999863
and	O	O:0.999918
then	O	O:0.999944
eliminate	O	O:0.999886
the	O	O:0.999983
rows	O	O:0.999805
that	O	O:0.999922
exist	O	O:0.999543
in	O	O:0.999971
the	O	O:0.999832
merged	O	O:0.999457
df	O	O:0.998493
otherwise	O	O:0.999622
you'd	O	O:0.999965
have	O	O:0.999601
to	O	O:0.999989
build	O	O:0.999963
a	O	O:0.999986
boolean	O	O:0.995258
condition	O	O:0.999185
for	O	O:0.999974
all	O	O:0.999526
the	O	O:0.999861
columns	O	O:0.994349
you	O	O:0.999965
want	O	O:0.999967
to	O	O:0.999876
compare	O	O:0.999790
but	O	O:0.999992
presumably	O	O:0.999847
when	O	O:0.998986
checking	O	O:0.999809
the	O	O:0.999976
multiple	O	O:0.996500
columns	O	O:0.999418
you're	O	O:0.999832
stating	O	O:0.999811
that	O	O:0.998750
it's	O	O:0.999956
unique	O	O:0.997553
for	O	O:0.999957
those	O	O:0.998341
columns	O	O:0.998321
,	O	O:0.999974
correct	O	O:0.999458
?	O	O:0.999957
	
For	O	O:0.999710
instance	O	O:0.998048
it's	O	O:0.999798
not	O	O:0.999837
a	O	O:0.999988
match	O	O:0.977207
if	O	O:0.999924
say	O	O:0.999758
col1	O	O:0.936776
and	O	O:0.999757
col2	O	O:0.981270
match	O	O:0.919371
but	O	O:0.999519
col3	O	O:0.994009
does	O	O:0.997137
not	O	O:0.999308
	
Yes	O	O:0.999859
merge	B-API	B-API:0.730476
is	O	O:0.999987
what	O	O:0.997731
I	O	O:0.999996
have	O	O:0.999899
been	O	O:0.987792
doing	O	O:0.999574
but	O	O:0.999626
it	O	O:0.999738
feels	O	O:0.999861
like	O	O:0.999845
a	O	O:0.999936
hassle	O	O:0.977574
.	O	O:0.999218
	
I've	O	O:0.999864
come	O	O:0.999385
up	O	O:0.999904
with	O	O:0.999935
this	O	O:0.999529
,	O	O:0.999995
using	O	O:0.999646
itertools	B-API	O:0.994684
,	O	O:0.999943
to	O	O:0.999882
find	O	O:0.999664
mid-day	O	O:0.998540
timestamps	O	O:0.996001
and	O	O:0.999877
group	O	O:0.999757
them	O	O:0.999774
by	O	O:0.999940
date	O	O:0.999536
,	O	O:0.999969
and	O	O:0.999949
now	O	O:0.999643
I'm	O	O:0.999774
coming	O	O:0.999547
up	O	O:0.999096
short	O	O:0.998914
trying	O	O:0.999881
to	O	O:0.999881
apply	O	O:0.975807
imap	O	B-API:0.804817
to	O	O:0.999953
find	O	O:0.999946
the	O	O:0.999912
means	O	O:0.995812
.	O	O:0.999799
	
#CODE	O	O:0.997035
	
Since	O	O:0.999294
not	O	O:0.999719
sure	O	O:0.999928
what	O	O:0.999969
your	O	O:0.999613
end	O	O:0.998499
output	O	O:0.998563
should	O	O:0.998709
look	O	O:0.998604
like	O	O:0.999426
,	O	O:0.999997
just	O	O:0.999368
create	O	O:0.999713
a	O	O:0.999980
time-based	O	O:0.999482
grouper	B-API	O:0.999219
manually	O	O:0.982532
(	O	O:0.999990
this	O	O:0.999476
is	O	O:0.999997
essentially	O	O:0.999527
a	O	O:0.999975
resample	B-API	B-API:0.882254
)	O	O:0.996998
,	O	O:0.999798
but	O	O:0.999942
doesn't	O	O:0.999745
do	O	O:0.999827
anything	O	O:0.999919
with	O	O:0.999405
the	O	O:0.999912
final	O	O:0.992022
results	O	O:0.997014
(	O	O:0.999985
its	O	O:0.999992
just	O	O:0.999744
a	O	O:0.999999
list	O	O:0.996430
of	O	O:0.999962
the	O	O:0.998960
aggregated	O	O:0.999796
values	O	O:0.990705
)	O	O:0.999800
#CODE	O	O:0.998508
	
You	O	O:0.999846
can	O	O:0.999354
get	O	O:0.999921
reasonable	O	O:0.999815
fancy	O	O:0.999507
here	O	O:0.999113
and	O	O:0.999836
say	O	O:0.999902
return	O	O:0.982824
a	O	O:0.999773
pandas	O	O:0.966531
object	O	O:0.994954
(	O	O:0.999698
and	O	O:0.999950
potentially	O	O:0.995835
`	O	O:0.999777
concat	O	B-API:0.983105
`	O	O:0.999999
them	O	O:0.996584
)	O	O:0.999924
.	O	O:0.998289
	
and	O	O:0.998824
I	O	O:0.999984
want	O	O:0.999459
to	O	O:0.999304
pivot	O	O:0.965519
it	O	O:0.999954
like	O	O:0.999884
this	O	O:0.998987
:	O	O:0.999953
#CODE	O	O:0.999293
	
I	O	O:0.999979
am	O	O:0.999991
calling	O	O:0.998694
a	O	O:0.999945
function	O	O:0.999432
from	O	O:0.999371
within	O	O:0.999518
a	O	O:0.999972
'	O	O:0.999638
for	O	O:0.999914
each	O	O:0.999475
loop	O	O:0.998299
'	O	O:0.999887
which	O	O:0.999601
attempts	O	O:0.999789
to	O	O:0.999935
insert	O	O:0.990331
values	O	O:0.999820
into	O	O:0.999757
a	O	O:0.999992
Pandas	O	O:0.997443
DataFrame	O	O:0.997596
based	O	O:0.999183
on	O	O:0.999985
a	O	O:0.999957
specified	O	O:0.999551
column	O	O:0.998212
start	O	O:0.993586
and	O	O:0.999844
end	O	O:0.992009
location	O	O:0.996648
.	O	O:0.999582
	
The	O	O:0.999303
function	O	O:0.991012
is	O	O:0.999971
this	O	O:0.994099
:	O	O:0.999970
#CODE	O	O:0.999061
	
My	O	O:0.999927
issue	O	O:0.998045
is	O	O:0.999997
that	O	O:0.999273
despite	O	O:0.999781
the	O	O:0.999974
same	O	O:0.999588
starting	O	O:0.999733
conditions	O	O:0.999946
when	O	O:0.999710
I	O	O:0.999996
call	O	O:0.999559
this	O	O:0.997897
function	O	O:0.998496
it	O	O:0.999970
seems	O	O:0.999895
to	O	O:0.999988
generate	O	O:0.999932
a	O	O:0.999998
list	O	O:0.995143
of	O	O:0.999926
inconsistent	O	O:0.991859
length	O	O:0.992150
.	O	O:0.998545
	
e.g.	O	O:0.998399
with	O	O:0.999875
values	O	O:0.999634
of	O	O:0.999966
srowb	O	O:0.999333
=	O	O:0.999982
1	O	O:0.999632
and	O	O:0.999853
erowb	O	O:0.998739
=	O	O:0.999880
18	O	O:0.999496
it	O	O:0.999956
will	O	O:0.999794
generate	O	O:0.999635
a	O	O:0.999987
list	O	O:0.971005
(	O	O:0.999981
tmp_brollb	O	O:0.994389
)	O	O:0.999754
which	O	O:0.999115
has	O	O:0.999961
either	O	O:0.999050
len	B-API	B-API:0.976265
(	O	O:0.999964
tmp_brollb	O	O:0.991344
)	O	O:0.999924
=	O	O:0.999926
17	O	O:0.999981
or	O	O:0.999737
len	B-API	B-API:0.975444
(	O	O:0.999990
tmp_brollb	O	O:0.994266
)	O	O:0.999946
=	O	O:0.999796
18	O	O:0.999614
	
Use	O	O:0.998966
`	O	O:0.999717
max	B-API	B-API:0.851976
`	O	O:0.999823
and	O	O:0.999662
check	O	O:0.999360
for	O	O:0.999930
equality	O	O:0.999712
using	O	O:0.996436
`	O	O:0.999569
eq	B-API	O:0.833229
`	O	O:0.999898
and	O	O:0.999815
cast	O	O:0.999524
the	O	O:0.999939
boolean	O	O:0.998573
df	O	O:0.998878
to	O	O:0.999962
int	O	O:0.999956
using	O	O:0.999171
`	O	O:0.999295
astype	B-API	B-API:0.913063
`	O	O:0.999443
,	O	O:0.999833
this	O	O:0.999971
will	O	O:0.999308
convert	O	O:0.990700
`	O	O:0.999970
True	O	O:0.939819
`	O	O:0.999955
and	O	O:0.997570
`	O	O:0.999983
False	O	O:0.922210
`	O	O:0.999989
to	O	O:0.999590
`	O	O:0.999998
1	O	O:0.998786
`	O	O:0.999978
and	O	O:0.999541
`	O	O:0.999975
0	O	O:0.991378
`	O	O:0.999775
:	O	O:0.999729
#CODE	O	O:0.999859
	
Thanks	O	O:0.998584
@USER	O	O:0.998790
.	O	O:0.999331
	
Did	O	O:0.999712
you	O	O:0.999915
try	O	O:0.999931
my	O	O:0.999914
original	O	O:0.999476
post	O	O:0.986163
?	O	O:0.999981
	
I	O	O:0.999863
would	O	O:0.999663
be	O	O:0.999871
interested	O	O:0.999916
to	O	O:0.999934
know	O	O:0.999701
how	O	O:0.999923
much	O	O:0.999634
time	O	O:0.999980
this	O	O:0.999898
one	O	O:0.999496
is	O	O:0.999964
taking	O	O:0.999238
compared	O	O:0.999420
to	O	O:0.999960
yours	O	O:0.999862
?	O	O:0.999975
	
`	O	O:0.999837
for	O	O:0.999444
i	O	O:0.999987
in	O	O:0.999898
range	O	O:0.998837
(	O	O:0.999880
len	B-API	B-API:0.955163
(	O	O:0.999985
df	O	O:0.922635
)):	O	O:0.999400
...	O	O:0.991177
	
df.loc	B-API	B-API:0.906398
[	O	O:0.999973
i	O	O:0.999980
]	O	O:0.999874
[	O	O:0.999713
df.loc	B-API	B-API:0.545009
[	O	O:0.999988
i	O	O:0.999985
]	O	O:0.999648
.idxmax	B-API	B-API:0.992147
(	O	O:0.999952
axis=1	O	O:0.998741
)]	O	O:0.999960
=	O	O:0.999621
1	O	O:0.999920
...	O	O:0.997210
	
df.loc	B-API	B-API:0.906398
[	O	O:0.999973
i	O	O:0.999980
]	O	O:0.999874
[	O	O:0.999711
df.loc	B-API	B-API:0.552039
[	O	O:0.999987
i	O	O:0.999991
]	O	O:0.999949
!	O	O:0.999986
=	O	O:0.999991
1	O	O:0.999945
]	O	O:0.999985
=	O	O:0.999926
0	O	O:0.999826
`	O	O:0.999815
	
I	O	O:0.999938
am	O	O:0.999992
trying	O	O:0.998983
to	O	O:0.999956
normalize	O	O:0.978581
the	O	O:0.999962
missing	O	O:0.998691
values	O	O:0.994818
in	O	O:0.999890
matrix	O	O:0.984595
.	O	O:0.999458
	
Here	O	O:0.997225
is	O	O:0.999964
the	O	O:0.999888
code	O	O:0.996954
.	O	O:0.999830
	
#CODE	O	O:0.997035
	
Last	O	O:0.999826
line	O	O:0.998616
should	O	O:0.999671
replace	O	O:0.997142
the	O	O:0.999962
values	O	O:0.998053
in	O	O:0.999948
dataset1	O	O:0.999722
by	O	O:0.999991
mean	O	O:0.998602
values	O	O:0.999901
from	O	O:0.999736
`	O	O:0.999928
ds2_mean	O	O:0.996224
[	O	O:0.999995
1	O	O:0.999947
]`	O	O:0.999752
.	O	O:0.998881
	
But	O	O:0.999435
it	O	O:0.999944
does	O	O:0.999183
not	O	O:0.999862
do	O	O:0.999896
.	O	O:0.999892
	
Anything	O	O:0.998128
wrong	O	O:0.999283
here	O	O:0.998335
?	O	O:0.999969
	
And	O	O:0.999050
after	O	O:0.999971
that	O	O:0.999561
can	O	O:0.999559
I	O	O:0.999999
replace	O	O:0.998065
NaN	O	O:0.997584
with	O	O:0.999902
the	O	O:0.999837
average	O	O:0.999923
value	O	O:0.999758
of	O	O:0.999936
it's	O	O:0.999747
neighbours	O	O:0.999583
in	O	O:0.999909
dataset1	O	O:0.998676
?	O	O:0.999939
	
it	O	O:0.999958
does	O	O:0.998804
wrong	O	O:0.999464
.	O	O:0.999595
	
For	O	O:0.999934
any	O	O:0.999277
x	O	O:0.997996
in	O	O:0.999826
dataset2	O	O:0.999938
it	O	O:0.999926
has	O	O:0.999929
mapped	O	O:0.999298
value	O	O:0.999205
in	O	O:0.999819
col2	O	O:0.976612
.	O	O:0.999645
	
It	O	O:0.999681
should	O	O:0.999511
replace	O	O:0.997473
all	O	O:0.999957
values	O	O:0.999788
of	O	O:0.999877
x	O	O:0.999147
in	O	O:0.999960
ds1	O	O:0.999677
by	O	O:0.999892
mapped	O	O:0.999112
value	O	O:0.997870
.	O	O:0.999572
	
But	O	O:0.999841
this	O	O:0.999676
also	O	O:0.999705
does	O	O:0.999700
not	O	O:0.999518
do	O	O:0.999925
it	O	O:0.999909
	
Sorry	O	O:0.999673
can	O	O:0.999676
you	O	O:0.999988
explain	O	O:0.999593
clearer	O	O:0.999700
,	O	O:0.999998
what	O	O:0.999766
are	O	O:0.999905
you	O	O:0.999960
mapping	O	O:0.999432
from	O	O:0.999853
what	O	O:0.999546
to	O	O:0.999998
what	O	O:0.999976
exactly	O	O:0.999626
?	O	O:0.999978
	
By	O	O:0.999897
default	O	O:0.996524
fillna	B-API	O:0.701562
will	O	O:0.997876
use	O	O:0.999025
the	O	O:0.999369
index	O	O:0.995475
so	O	O:0.999975
how	O	O:0.999989
do	O	O:0.999990
you	O	O:0.999978
want	O	O:0.999873
the	O	O:0.999950
mapping	O	O:0.999630
from	O	O:0.998729
`	O	O:0.999979
ds2	O	O:0.999133
`	O	O:0.999994
to	O	O:0.999930
map	O	O:0.992663
to	O	O:0.999978
the	O	O:0.999995
missing	O	O:0.998760
values	O	O:0.998448
in	O	O:0.999953
`	O	O:0.999987
ds1	O	O:0.989761
`	O	O:0.999960
?	O	O:0.999820
	
Are	O	O:0.999783
you	O	O:0.999770
wanting	O	O:0.999835
to	O	O:0.999945
map	O	O:0.986271
using	O	O:0.999923
the	O	O:0.999286
values	O	O:0.991196
in	O	O:0.999809
`	O	O:0.999934
ds2	O	O:0.998570
[	O	O:0.999994
0	O	O:0.999981
]`	O	O:0.999970
as	O	O:0.999250
the	O	O:0.999816
index	O	O:0.990271
lookup	O	O:0.902777
?	O	O:0.999971
	
So	O	O:0.999942
use	O	O:0.999039
the	O	O:0.999228
index	O	O:0.998427
from	O	O:0.999394
`	O	O:0.999984
ds1	O	O:0.999117
`	O	O:0.999992
find	O	O:0.999030
value	O	O:0.999949
in	O	O:0.999906
`	O	O:0.999909
ds2	O	O:0.995452
[	O	O:0.999983
0	O	O:0.999893
]`	O	O:0.999510
and	O	O:0.999172
return	O	O:0.987189
`	O	O:0.999164
ds2	O	O:0.997093
[	O	O:0.999986
1	O	O:0.999894
]`	O	O:0.999878
?	O	O:0.999856
	
yes	O	O:0.999715
,	O	O:0.999967
I	O	O:0.999998
want	O	O:0.999929
to	O	O:0.999608
use	O	O:0.999932
the	O	O:0.999193
index	O	O:0.998394
from	O	O:0.999782
ds1	O	O:0.999731
find	O	O:0.999958
value	O	O:0.999869
in	O	O:0.999933
ds2	O	O:0.998706
[	O	O:0.999969
0	O	O:0.999823
]	O	O:0.999531
and	O	O:0.998458
replace	O	O:0.988235
it	O	O:0.999962
with	O	O:0.999686
ds2	O	O:0.999082
[	O	O:0.999985
1	O	O:0.999940
]"	O	O:0.999980
sorry	O	O:0.998891
for	O	O:0.999928
inconvenience	O	O:0.995499
	
I	O	O:0.999983
want	O	O:0.999882
to	O	O:0.999720
add	O	O:0.999995
a	O	O:0.999965
new	O	O:0.998767
column	O	O:0.997979
which	O	O:0.999496
contains	O	O:0.998164
values	O	O:0.999517
based	O	O:0.999760
on	O	O:0.999967
df	O	O:0.998511
[	O	O:0.999988
'	O	O:0.999993
diff	O	O:0.607430
']	O	O:0.999619
	
When	O	O:0.999191
using	O	O:0.999504
`	O	O:0.999786
DataFrame.apply	B-API	B-API:0.998631
`	O	O:0.999961
if	O	O:0.999832
you	O	O:0.999976
use	O	O:0.999433
`	O	O:0.999855
axis=0	O	O:0.967428
`	O	O:0.999993
it	O	O:0.999771
applies	O	O:0.999834
the	O	O:0.999782
condition	O	O:0.998236
through	O	O:0.999863
columns	O	O:0.999623
,	O	O:0.999997
to	O	O:0.999981
use	O	O:0.999960
`	O	O:0.999944
apply	B-API	B-API:0.902495
`	O	O:0.999963
to	O	O:0.999541
go	O	O:0.999991
through	O	O:0.999976
each	O	O:0.999545
row	O	O:0.999870
,	O	O:0.999986
you	O	O:0.999975
need	O	O:0.998368
`	O	O:0.999980
axis=1	O	O:0.988634
`	O	O:0.999931
.	O	O:0.998701
	
But	O	O:0.999704
given	O	O:0.999423
that	O	O:0.999631
,	O	O:0.999999
you	O	O:0.999963
can	O	O:0.999846
use	O	O:0.999960
`	O	O:0.999957
Series.apply	B-API	B-API:0.997966
`	O	O:0.999956
instead	O	O:0.998624
of	O	O:0.999938
`	O	O:0.999939
DataFrame.apply	B-API	B-API:0.981572
`	O	O:0.999956
on	O	O:0.999816
the	O	O:0.999962
`'	O	O:0.999964
diff	B-API	B-API:0.699317
'`	O	O:0.999946
series	O	O:0.991558
.	O	O:0.999803
	
Example	O	O:0.994489
-	O	O:0.999941
#CODE	O	O:0.998743
	
You	O	O:0.999761
can	O	O:0.999919
just	O	O:0.999891
set	O	O:0.999891
all	O	O:0.999795
the	O	O:0.999920
values	O	O:0.996750
that	O	O:0.999913
meet	O	O:0.999982
your	O	O:0.999959
criteria	O	O:0.996247
rather	O	O:0.999979
than	O	O:0.999834
looping	O	O:0.998893
over	O	O:0.999842
the	O	O:0.999938
df	O	O:0.998552
by	O	O:0.999966
calling	O	O:0.998940
`	O	O:0.999994
apply	B-API	B-API:0.636827
`	O	O:0.999972
so	O	O:0.999856
the	O	O:0.999984
following	O	O:0.995718
should	O	O:0.998622
work	O	O:0.998732
and	O	O:0.999973
as	O	O:0.999932
it's	O	O:0.998194
vectorised	O	O:0.999137
will	O	O:0.998536
scale	O	O:0.993412
better	O	O:0.999896
for	O	O:0.999799
larger	O	O:0.998198
datasets	O	O:0.986864
:	O	O:0.999926
#CODE	O	O:0.999618
	
this	O	O:0.999606
will	O	O:0.999547
set	O	O:0.999569
all	O	O:0.999932
rows	O	O:0.999789
that	O	O:0.999854
meet	O	O:0.999947
the	O	O:0.999973
criteria	O	O:0.991275
,	O	O:0.999994
the	O	O:0.999980
problem	O	O:0.998992
using	O	O:0.999704
`	O	O:0.999897
apply	B-API	B-API:0.921310
`	O	O:0.999386
is	O	O:0.999877
that	O	O:0.999387
it's	O	O:0.999981
just	O	O:0.999677
syntactic	O	O:0.999900
sugar	O	O:0.999890
for	O	O:0.999979
a	O	O:0.999845
`	O	O:0.999613
for	O	O:0.994325
`	O	O:0.999966
loop	O	O:0.976425
and	O	O:0.999969
where	O	O:0.997708
possible	O	O:0.999535
this	O	O:0.999584
should	O	O:0.999839
be	O	O:0.999958
avoided	O	O:0.999851
where	O	O:0.998326
a	O	O:0.999960
vectorised	O	O:0.995915
solution	O	O:0.999061
exists	O	O:0.999226
.	O	O:0.999637
	
Then	O	O:0.999742
you	O	O:0.999980
can	O	O:0.999846
`	O	O:0.999998
stack	B-API	B-API:0.508172
`	O	O:0.999952
(	O	O:0.999972
first	O	O:0.999946
by	O	O:0.999930
`'	O	O:0.999752
Marker	O	O:0.999204
'`	O	O:0.999969
then	O	O:0.999068
by	O	O:0.999981
`'	O	O:0.999876
mrk	O	O:0.989165
'`)	O	O:0.997180
:	O	O:0.999889
#CODE	O	O:0.999493
	
Python	O	O:0.997648
DataFrame	O	O:0.998812
-	O	O:0.999990
apply	O	O:0.906922
different	O	O:0.999005
calculations	O	O:0.999113
due	O	O:0.999978
to	O	O:0.999974
a	O	O:0.999995
column's	O	O:0.999757
value	O	O:0.998672
	
You	O	O:0.999842
could	O	O:0.998843
do	O	O:0.999991
this	O	O:0.999980
using	O	O:0.999756
2	O	O:0.998186
`	O	O:0.999585
loc	B-API	B-API:0.968832
`	O	O:0.999893
calls	O	O:0.888308
:	O	O:0.999994
#CODE	O	O:0.997397
	
There	O	O:0.998918
are	O	O:0.999870
two	O	O:0.999653
reasons	O	O:0.999559
whiskers	O	O:0.998962
length	O	O:0.999884
vary	O	O:0.998803
from	O	O:0.999111
one	O	O:0.999835
boxplot	O	O:0.999834
to	O	O:0.999992
any	O	O:0.999925
other	O	O:0.999660
boxplot	O	O:0.987816
	
Are	O	O:0.999891
you	O	O:0.999875
asking	O	O:0.999651
why	O	O:0.999800
the	O	O:0.999933
top	O	O:0.991516
whisker	O	O:0.996631
isn't	O	O:0.999645
the	O	O:0.999993
same	O	O:0.999518
length	O	O:0.999664
as	O	O:0.999988
the	O	O:0.999610
bottom	O	O:0.975292
?	O	O:0.999941
	
I	O	O:0.999980
think	O	O:0.999828
the	O	O:0.999824
whiskers	O	O:0.999464
are	O	O:0.999941
actually	O	O:0.999882
the	O	O:0.999887
lowest	O	O:0.993632
or	O	O:0.999960
highest	O	O:0.999232
data	O	O:0.999948
point	O	O:0.998367
within	O	O:0.999364
1.5	O	O:0.978945
IQR	O	O:0.999683
.	O	O:0.999361
	
So	O	O:0.999954
if	O	O:0.999986
there	O	O:0.999622
are	O	O:0.999814
no	O	O:0.999938
data	O	O:0.999819
points	O	O:0.997993
between	O	O:0.997050
Q3	O	O:0.999080
and	O	O:0.999127
Q3	O	O:0.998898
+	O	O:0.998440
1.5	O	O:0.994313
IQR	O	O:0.999895
,	O	O:0.999994
then	O	O:0.999623
the	O	O:0.999985
top	O	O:0.991049
whisker	O	O:0.998057
won't	O	O:0.999913
show	O	O:0.999619
up	O	O:0.999809
.	O	O:0.999612
	
For	O	O:0.999876
the	O	O:0.999812
one	O	O:0.999560
boxplot	O	O:0.999187
where	O	O:0.999887
the	O	O:0.999943
are	O	O:0.999616
outliers	O	O:0.998691
beyond	O	O:0.999512
the	O	O:0.999971
whiskers	O	O:0.996988
on	O	O:0.999976
both	O	O:0.999932
the	O	O:0.999984
top	O	O:0.966448
and	O	O:0.999939
the	O	O:0.999897
bottom	O	O:0.967918
,	O	O:0.999985
the	O	O:0.999935
whiskers	O	O:0.999632
do	O	O:0.999973
look	O	O:0.999884
about	O	O:0.999839
the	O	O:0.999827
same	O	O:0.999287
size	O	O:0.999574
.	O	O:0.999972
	
``	O	O:0.999743
hist	B-API	B-API:0.985175
``	O	O:0.999882
->	O	O:0.981146
``	O	O:0.999908
histogram	O	O:0.946969
``	O	O:0.999657
(	O	O:0.997567
``	O	O:0.999958
hist	B-API	B-API:0.970510
``	O	O:0.999739
is	O	O:0.999669
pyplot	B-API	O:0.999091
or	O	O:0.999988
something	O	O:0.997139
)	O	O:0.999628
.	O	O:0.999029
	
There	O	O:0.998640
is	O	O:0.999982
a	O	O:0.999924
pandas	O	O:0.998663
equivalent	O	O:0.999533
to	O	O:0.999978
this	O	O:0.999940
`	O	O:0.999981
cut	B-API	O:0.994384
`	O	O:0.999997
there	O	O:0.995296
is	O	O:0.999997
a	O	O:0.999817
section	O	O:0.998924
describing	O	O:0.999792
this	O	O:0.999686
here	O	O:0.998793
.	O	O:0.999626
	
`	O	O:0.999933
cut	B-API	O:0.996180
`	O	O:0.999987
returns	O	O:0.998107
the	O	O:0.999981
open	O	O:0.966992
closed	O	O:0.999869
intervals	O	O:0.999907
for	O	O:0.999978
each	O	O:0.997255
value	O	O:0.995384
:	O	O:0.999964
#CODE	O	O:0.999355
	
Pandas	O	O:0.999356
Dataframe	O	O:0.994958
,	O	O:0.999956
Apply	B-API	O:0.997750
Function	O	O:0.998582
,	O	O:0.999917
Return	O	O:0.993080
Index	O	B-API:0.769730
	
Then	O	O:0.999518
I	O	O:0.999999
can	O	O:0.999969
apply	O	O:0.954969
the	O	O:0.999574
function	O	O:0.999029
to	O	O:0.999991
my	O	O:0.999993
dataframe	O	O:0.999671
,	O	O:0.999970
grouped	O	O:0.999949
by	O	O:0.999819
I	O	O:0.999822
D:	O	O:0.999963
#CODE	O	O:0.995741
	
If	O	O:0.999920
I	O	O:0.999949
resample	O	O:0.913091
this	O	O:0.998261
DataField	O	O:0.999622
by	O	O:0.999986
any	O	O:0.999921
frequency	O	O:0.999380
,	O	O:0.999870
the	O	O:0.999963
timezone	O	O:0.960826
is	O	O:0.999977
kept	O	O:0.995336
:	O	O:0.999988
#CODE	O	O:0.999425
	
their	O	O:0.999305
are	O	O:0.999890
a	O	O:0.999982
couple	O	O:0.996444
of	O	O:0.999920
outstanding	O	O:0.999009
bugs	O	O:0.997949
w.r.t	O	O:0.998500
to	O	O:0.999772
resample	O	O:0.782634
and	O	O:0.999882
extra	O	O:0.997480
binning	O	O:0.995304
:	O	O:0.999960
#URL	O	O:0.999807
if	O	O:0.999968
you	O	O:0.999348
would	O	O:0.999871
like	O	O:0.999808
to	O	O:0.999975
investigate	O	O:0.999573
and	O	O:0.999963
try	O	O:0.999877
to	O	O:0.999824
pinpoint	O	O:0.998687
(	O	O:0.999981
or	O	O:0.999941
better	O	O:0.999848
yet	O	O:0.999954
fix	O	O:0.998974
)	O	O:0.999685
would	O	O:0.999326
be	O	O:0.999980
appreciated	O	O:0.998840
!	O	O:0.999537
	
you	O	O:0.999640
can	O	O:0.999770
comment	O	O:0.999857
on	O	O:0.999997
that	O	O:0.999834
issue	O	O:0.999976
directly	O	O:0.998252
	
@USER	O	O:0.998841
;	O	O:0.999976
You	O	O:0.999964
mean	O	O:0.997896
to	O	O:0.999974
the	O	O:0.999987
stack	O	O:0.899069
exchange	O	O:0.999587
answer	O	O:0.999870
?	O	O:0.999935
	
I	O	O:0.999953
think	O	O:0.999968
that	O	O:0.997363
I	O	O:0.999979
understand	O	O:0.998487
what's	O	O:0.999423
going	O	O:0.996591
on	O	O:0.999866
:	O	O:0.999992
create	O	O:0.999975
a	O	O:0.999997
frequency	O	O:0.999987
table	O	O:0.999432
of	O	O:0.999886
ALL	O	O:0.998356
words	O	O:0.999039
.	O	O:0.999425
	
After	O	O:0.999762
each	O	O:0.996999
operation	O	O:0.999766
,	O	O:0.999998
drop	O	O:0.992003
all	O	O:0.999680
relevant	O	O:0.999449
columns	O	O:0.996044
,	O	O:1.000000
then	O	O:0.999931
finally	O	O:0.999947
count	O	O:0.997079
all	O	O:0.999880
remaining	O	O:0.999315
columns	O	O:0.983428
.	O	O:0.999886
	
Also	O	O:0.999578
,	O	O:0.999985
I	O	O:0.999987
quickly	O	O:0.999004
tried	O	O:0.999433
this	O	O:0.998889
in	O	O:0.999475
Python	O	O:0.997592
3.4.3	O	O:0.998270
and	O	O:0.999586
I	O	O:0.999979
got	O	O:0.999864
the	O	O:0.999490
error	O	O:0.999836
that	O	O:0.999444
freqDf	O	O:0.650922
isn't	O	O:0.999267
defined	O	O:0.995047
.	O	O:0.999185
	
Should	O	O:0.999212
I	O	O:0.999995
first	O	O:0.999900
create	O	O:0.999039
a	O	O:0.999959
new	O	O:0.999851
table	O	O:0.999462
named	O	O:0.999218
freqDf	O	B-API:0.693770
?	O	O:0.999843
	
`	O	O:0.999680
df.precedingWord.isin	O	O:0.622685
(	O	O:0.999981
neuter	O	O:0.999394
)`	O	O:0.999462
is	O	O:0.999991
just	O	O:0.999875
a	O	O:0.999996
Series	O	O:0.963246
of	O	O:0.999929
True	O	O:0.995667
or	O	O:0.999919
False	O	O:0.987730
(	O	O:0.999989
results	O	O:0.999747
of	O	O:0.999984
the	O	O:0.999865
previous	O	O:0.999854
test	O	O:0.959555
`	O	O:0.999978
isin	B-API	B-API:0.930458
`)	O	O:0.999717
,	O	O:0.999462
and	O	O:0.999911
pandas	O	O:0.995590
will	O	O:0.999515
just	O	O:0.998542
access	O	O:0.999216
True	O	O:0.991731
indexes	O	O:0.998340
with	O	O:0.999495
`	O	O:0.999907
loc	B-API	B-API:0.898831
`	O	O:0.999867
	
I	O	O:0.999983
have	O	O:0.999913
tried	O	O:0.999692
a	O	O:0.999992
some	O	O:0.998972
join	B-API	B-API:0.776448
/	O	O:0.999898
merge	B-API	B-API:0.731299
ideas	O	O:0.999256
but	O	O:0.999655
can't	O	O:0.999845
seem	O	O:0.999782
to	O	O:0.999959
get	O	O:0.999965
it	O	O:0.999958
to	O	O:0.999931
work	O	O:0.999495
.	O	O:0.999832
	
Just	O	O:0.997231
`	O	O:0.999823
concat	B-API	B-API:0.992062
`	O	O:0.999998
them	O	O:0.994654
and	O	O:0.999993
pass	O	O:0.999531
param	O	O:0.993823
`	O	O:0.999971
axis=1	O	O:0.946450
`	O	O:0.999586
:	O	O:0.999870
#CODE	O	O:0.999873
	
Or	O	O:0.999798
`	O	O:0.999884
merge	B-API	B-API:0.817895
`	O	O:0.999962
on	O	O:0.998902
'	O	O:0.999982
Symbol	O	O:0.996018
'	O	O:0.999861
column	O	O:0.990255
:	O	O:0.999978
#CODE	O	O:0.999501
	
Pandas	O	O:0.997443
:	O	O:0.999985
join	O	O:0.578564
with	O	O:0.999902
outer	O	O:0.999403
product	O	O:0.997581
	
How	O	O:0.999767
to	O	O:0.999975
join	O	O:0.779396
/	O	O:0.999986
multiply	O	O:0.940457
the	O	O:0.999969
DataFrames	O	O:0.987070
`	O	O:0.999963
areas	O	O:0.996319
`	O	O:0.999981
and	O	O:0.997241
`	O	O:0.999964
demand	O	O:0.986616
`	O	O:0.999980
together	O	O:0.999376
in	O	O:0.999991
a	O	O:0.999944
decent	O	O:0.997384
way	O	O:0.999081
?	O	O:0.999871
	
Now	O	O:0.999750
`	O	O:0.999961
apply	B-API	B-API:0.921344
`	O	O:0.999972
needs	O	O:0.995860
to	O	O:0.999989
return	O	O:0.999787
a	O	O:0.999829
`	O	O:0.999902
Series	B-API	O:0.634166
`	O	O:0.999905
,	O	O:0.999968
not	O	O:0.999985
a	O	O:0.999935
`	O	O:0.999947
DataFrame	O	O:0.927296
`	O	O:0.999894
.	O	O:0.998647
	
One	O	O:0.999891
way	O	O:0.999775
to	O	O:0.999987
turn	O	O:0.999982
a	O	O:0.999968
`	O	O:0.999963
DataFrame	O	O:0.934932
`	O	O:0.999993
into	O	O:0.999704
a	O	O:0.999993
`	O	O:0.999690
Series	B-API	O:0.815776
`	O	O:0.999968
is	O	O:0.999959
to	O	O:0.999984
use	O	O:0.999968
`	O	O:0.999832
stack	B-API	B-API:0.926003
`	O	O:0.999921
.	O	O:0.998912
	
`	O	O:0.999853
stack	B-API	B-API:0.885062
`	O	O:0.999995
this	O	O:0.999338
DataFrame	O	O:0.998596
.	O	O:0.999195
	
This	O	O:0.999805
can	O	O:0.999777
be	O	O:0.999998
done	O	O:0.999941
with	O	O:0.999518
`	O	O:0.999805
unstack	B-API	B-API:0.986396
`	O	O:0.999574
:	O	O:0.999898
#CODE	O	O:0.999863
	
`	O	O:0.999936
del	O	O:0.892349
`	O	O:0.999988
+	O	O:0.997399
`	O	O:0.999990
pivot	B-API	O:0.583966
`	O	O:0.999992
turns	O	O:0.999524
out	O	O:0.999990
to	O	O:0.999977
be	O	O:0.999984
faster	O	O:0.999979
than	O	O:0.997515
`	O	O:0.999869
pivot_table	B-API	B-API:0.993587
`	O	O:0.999858
in	O	O:0.999961
this	O	O:0.999967
case	O	O:0.998889
.	O	O:0.999814
	
Maybe	O	O:0.999522
the	O	O:0.999816
reason	O	O:0.988352
`	O	O:0.999979
pivot	B-API	O:0.535733
`	O	O:0.999993
exists	O	O:0.995416
is	O	O:0.999988
because	O	O:0.999395
it	O	O:0.999954
is	O	O:0.999946
faster	O	O:0.999962
than	O	O:0.998851
`	O	O:0.999846
pivot_table	B-API	B-API:0.987179
`	O	O:0.999965
for	O	O:0.999924
those	O	O:0.999797
cases	O	O:0.996248
where	O	O:0.999730
it	O	O:0.999897
is	O	O:0.999985
applicable	O	O:0.996523
(	O	O:0.999995
such	O	O:0.999953
as	O	O:0.999991
when	O	O:0.998025
you	O	O:0.999902
don't	O	O:0.999961
need	O	O:0.999669
aggregation	O	O:0.999149
)	O	O:0.999853
.	O	O:0.997402
	
`	O	O:0.999917
apply	B-API	B-API:0.834910
`	O	O:0.999844
is	O	O:0.999737
now	O	O:0.999931
among	O	O:0.999881
my	O	O:0.999870
top	O	O:0.997949
5	O	O:0.999911
functions	O	O:0.999467
to	O	O:0.999952
always	O	O:0.999922
remember	O	O:0.999045
.	O	O:0.998834
	
Concerning	O	O:0.999438
the	O	O:0.998844
`	O	O:0.999926
pivot_table	B-API	B-API:0.989348
`	O	O:0.999950
solution	O	O:0.998473
:	O	O:0.999997
At	O	O:0.999960
which	O	O:0.999890
point	O	O:0.999918
am	O	O:0.999967
I	O	O:0.999995
supposed	O	O:0.999990
to	O	O:0.999855
enter	O	O:0.997688
the	O	O:0.999958
line	O	O:0.998569
?	O	O:0.999980
	
No	O	O:0.999936
matter	O	O:0.999673
when	O	O:0.997624
in	O	O:0.999988
my	O	O:0.999952
attempt	O	O:0.999536
above	O	O:0.999711
,	O	O:0.999914
I	O	O:0.999986
always	O	O:0.999862
get	O	O:0.995190
`	O	O:0.999826
no	O	O:0.999693
item	O	O:0.999906
named	O	O:0.999833
Edge	O	O:0.998919
`	O	O:0.999731
.	O	O:0.997621
	
Or	O	O:0.999994
pass	O	O:0.995208
`	O	O:0.999981
axis=0	O	O:0.994008
`	O	O:0.999986
to	O	O:0.999108
`	O	O:0.999997
loc	B-API	B-API:0.961222
`	O	O:0.999736
:	O	O:0.999501
#CODE	O	O:0.999842
	
I've	O	O:0.999325
got	O	O:0.999302
2	O	O:0.999933
pandas	O	O:0.999310
dataframes	O	O:0.999629
,	O	O:0.999998
each	O	O:0.999756
of	O	O:0.999993
them	O	O:0.999691
has	O	O:0.999836
an	O	O:0.999664
index	O	O:0.999519
with	O	O:0.999896
dtype	B-API	B-API:0.991110
`	O	O:0.999930
object	O	O:0.959544
`	O	O:0.999953
,	O	O:0.999617
and	O	O:0.999928
in	O	O:0.999981
both	O	O:0.999134
of	O	O:0.999999
them	O	O:0.999731
I	O	O:0.999998
can	O	O:0.999907
see	O	O:0.999967
the	O	O:0.999989
value	O	O:0.997902
`	O	O:0.999964
533	O	O:0.984597
`	O	O:0.999956
.	O	O:0.997669
	
However	O	O:0.999332
,	O	O:0.999992
when	O	O:0.999334
I	O	O:0.999998
join	B-API	O:0.981272
them	O	O:0.999695
the	O	O:0.999883
result	O	O:0.994374
is	O	O:0.999990
empty	O	O:0.999232
,	O	O:0.999998
as	O	O:0.999990
one	O	O:0.999772
of	O	O:0.999998
them	O	O:0.998820
is	O	O:0.999993
the	O	O:0.999710
number	O	O:0.990851
`	O	O:0.999916
533	O	O:0.994364
`	O	O:0.999942
and	O	O:0.999646
the	O	O:0.999971
other	O	O:0.998047
is	O	O:0.999987
a	O	O:0.999949
string	O	O:0.995008
`"	O	O:0.999086
533	O	O:0.985085
"`	O	O:0.999589
.	O	O:0.997689
	
Ideally	O	O:0.998981
I	O	O:0.999863
would	O	O:0.999948
like	O	O:0.999180
something	O	O:0.999978
like	O	O:0.998946
`	O	O:0.999959
apply_chunk()	O	B-API:0.698582
`	O	O:0.999873
which	O	O:0.996552
is	O	O:0.999989
the	O	O:0.999963
same	O	O:0.999856
as	O	O:0.999931
apply	B-API	O:0.734112
but	O	O:0.999863
only	O	O:0.998556
works	O	O:0.999715
on	O	O:0.999992
a	O	O:0.999998
piece	O	O:0.998875
of	O	O:0.999956
the	O	O:0.999790
dataframe	O	O:0.998456
.	O	O:0.999527
	
This	O	O:0.999815
has	O	O:0.999939
to	O	O:0.999987
be	O	O:0.999999
a	O	O:0.999954
common	O	O:0.994670
problem	O	O:0.999184
though	O	O:0.999466
,	O	O:0.999908
is	O	O:0.999990
there	O	O:0.999453
a	O	O:0.999975
design	O	O:0.998127
pattern	O	O:0.985061
I	O	O:0.999958
should	O	O:0.999895
be	O	O:0.999943
using	O	O:0.999526
for	O	O:0.998420
adding	O	O:0.996043
columns	O	O:0.990798
to	O	O:0.999892
large	O	O:0.999944
pandas	O	O:0.998409
dataframes	O	O:0.999597
?	O	O:0.999950
	
whats	O	O:0.999390
about	O	O:0.999618
using	O	O:0.999721
the	O	O:0.990845
apply	B-API	B-API:0.974734
method	O	O:0.984696
?	O	O:0.999886
	
Anytime	O	O:0.999669
you	O	O:0.999803
find	O	O:0.999820
yourself	O	O:0.999940
using	O	O:0.999676
`	O	O:0.999841
apply	B-API	B-API:0.966211
`	O	O:0.999937
or	O	O:0.997271
`	O	O:0.999987
iloc	B-API	B-API:0.975759
`	O	O:0.999987
in	O	O:0.999563
a	O	O:0.999995
loop	O	O:0.996762
it's	O	O:0.999688
likely	O	O:0.998984
that	O	O:0.999509
Pandas	O	O:0.999091
is	O	O:0.999963
operating	O	O:0.999764
much	O	O:0.997875
slower	O	O:0.999980
than	O	O:0.994490
is	O	O:0.999880
optimal	O	O:0.984244
.	O	O:0.999667
	
Convert	O	O:0.999004
freq	O	O:0.964735
string	O	O:0.998830
to	O	O:0.999724
DateOffset	B-API	O:0.621946
in	O	O:0.999864
pandas	O	O:0.994158
	
In	O	O:0.999930
pandas	O	O:0.998711
documentation	O	O:0.999926
one	O	O:0.999515
can	O	O:0.999836
read	O	O:0.999682
"	O	O:0.999965
Under	O	O:0.999674
the	O	O:0.999817
hood	O	O:0.994868
,	O	O:0.999997
these	O	O:0.999955
frequency	O	O:0.999888
strings	O	O:0.995824
are	O	O:0.999839
being	O	O:0.998873
translated	O	O:0.999888
into	O	O:0.998388
an	O	O:0.999991
instance	O	O:0.999581
of	O	O:0.999924
pandas	O	O:0.993852
DateOffset	B-API	B-API:0.516780
"	O	O:0.999838
when	O	O:0.999322
speaking	O	O:0.999951
of	O	O:0.999976
freq	O	O:0.887408
string	O	O:0.999783
such	O	O:0.999763
as	O	O:0.999962
"	O	O:0.999381
W	O	O:0.999369
"	O	O:0.999919
or	O	O:0.999288
"	O	O:0.999613
W-SUN	O	O:0.987975
"	O	O:0.999271
.	O	O:0.998733
	
stack	O	O:0.697929
/	O	O:0.999606
unstack	O	B-API:0.848988
/	O	O:0.999858
pivot	O	O:0.947642
dataframe	O	O:0.999847
on	O	O:0.999922
python	O	O:0.998415
/	O	O:0.999938
pandas	O	O:0.982228
	
yes	O	O:0.999544
,	O	O:0.999915
`	O	O:0.999906
isnull	B-API	B-API:0.994674
`	O	O:0.999988
will	O	O:0.994858
create	O	O:0.999928
a	O	O:0.999993
boolean	O	O:0.998238
series	O	O:0.999075
,	O	O:0.999963
`	O	O:0.999976
all	B-API	O:0.991249
`	O	O:0.999990
returns	O	O:0.989900
`	O	O:0.999988
True	O	O:0.991119
`	O	O:0.999991
if	O	O:0.999876
all	O	O:0.999915
are	O	O:0.999106
`	O	O:0.999903
True	O	O:0.953771
`	O	O:0.999921
	
Then	O	O:0.999179
merge	O	O:0.930482
the	O	O:0.999917
sub-tables	O	O:0.999807
back	O	O:0.999490
together	O	O:0.999989
in	O	O:0.999991
a	O	O:0.999910
way	O	O:0.999821
that	O	O:0.999341
replaces	O	O:0.999691
NaN	O	O:0.998298
values	O	O:0.999230
when	O	O:0.999633
there	O	O:0.999692
is	O	O:0.999997
data	O	O:0.999635
in	O	O:0.999992
one	O	O:0.999942
of	O	O:0.999951
the	O	O:0.999774
tables	O	O:0.994779
.	O	O:0.999628
	
I	O	O:0.999977
regularly	O	O:0.999672
work	O	O:0.992980
with	O	O:0.999965
very	O	O:0.999875
large	O	O:0.999946
data	O	O:0.999850
sets	O	O:0.999941
that	O	O:0.999889
are	O	O:0.999944
too	O	O:0.999932
big	O	O:0.999921
to	O	O:0.999933
manipulate	O	O:0.999626
in	O	O:0.999925
memory	O	O:0.998696
.	O	O:0.999637
	
I	O	O:0.999650
would	O	O:0.999954
like	O	O:0.998515
to	O	O:0.999989
read	O	O:0.999712
in	O	O:0.999990
a	O	O:0.999990
csv	O	O:0.999435
file	O	O:0.999743
iteratively	O	O:0.999614
,	O	O:0.999956
append	O	O:0.947839
each	O	O:0.991737
chunk	O	O:0.999671
into	O	O:0.999468
HDFStore	B-API	O:0.951611
object	O	O:0.994598
,	O	O:0.999910
and	O	O:0.999957
then	O	O:0.998716
work	O	O:0.999790
with	O	O:0.999972
subsets	O	O:0.999469
of	O	O:0.999991
the	O	O:0.999950
data	O	O:0.999337
.	O	O:0.999723
	
If	O	O:0.999924
you	O	O:0.999671
replace	O	O:0.998443
that	O	O:0.999938
line	O	O:0.999938
with	O	O:0.999330
:	O	O:0.999891
	
I	O	O:0.999894
wanted	O	O:0.999656
to	O	O:0.999646
merge	O	O:0.982952
these	O	O:0.999879
files	O	O:0.998738
so	O	O:0.999995
that	O	O:0.999855
i	O	O:0.999999
have	O	O:0.999663
something	O	O:0.999760
like	O	O:0.999762
this	O	O:0.999742
#CODE	O	O:0.999010
	
If	O	O:0.999855
it's	O	O:0.999606
six	O	O:0.999105
,	O	O:0.999998
then	O	O:0.999971
you	O	O:0.999976
can	O	O:0.999826
use	O	O:0.999924
join	B-API	B-API:0.950042
method	O	O:0.998464
by	O	O:0.999856
@USER	O	O:0.998396
Hayden	O	O:0.995112
.	O	O:0.999712
	
Then	O	O:0.999744
you	O	O:0.999978
can	O	O:0.999960
simply	O	O:0.999879
`	O	O:0.999994
join	B-API	B-API:0.986253
`	O	O:0.999997
them	O	O:0.986986
:	O	O:0.999991
#CODE	O	O:0.999473
	
@USER	O	O:0.999717
when	O	O:0.999239
you	O	O:0.999987
do	O	O:0.999994
a	O	O:0.999993
join	B-API	B-API:0.707545
with	O	O:0.999794
2x2	O	O:0.999891
duplicates	O	O:0.999259
you	O	O:0.999959
get	O	O:0.999857
4	O	O:0.999964
in	O	O:0.999949
the	O	O:0.999825
joined	O	O:0.993078
DataFrame	O	O:0.991093
.	O	O:0.999530
	
It's	O	O:0.999169
unclear	O	O:0.998396
how	O	O:0.999582
pandas	O	O:0.993726
should	O	O:0.999752
join	O	B-API:0.911157
in	O	O:0.999990
this	O	O:0.999944
case	O	O:0.999768
,	O	O:0.999995
so	O	O:0.999981
you	O	O:0.999968
need	O	O:0.999870
to	O	O:0.999984
be	O	O:0.999999
more	O	O:0.999788
explicit	O	O:0.999362
to	O	O:0.999867
it	O	O:0.999899
(	O	O:0.999861
and	O	O:0.999967
tell	O	O:0.997646
it	O	O:0.999978
what	O	O:0.999703
do	O	O:0.999948
you	O	O:0.999987
want	O	O:0.999341
)	O	O:0.999599
.	O	O:0.999319
	
On	O	O:0.999948
the	O	O:0.999775
similar	O	O:0.999824
note	O	O:0.999608
,	O	O:0.999986
is	O	O:0.999999
there	O	O:0.999603
a	O	O:0.999986
way	O	O:0.999293
to	O	O:0.999859
merge	O	O:0.857570
values	O	O:0.998595
based	O	O:0.996817
on	O	O:0.999807
index	O	O:0.994522
.	O	O:0.999818
	
For	O	O:0.999885
example	O	O:0.995787
,	O	O:0.999979
instead	O	O:0.999793
of	O	O:0.999870
listing	O	O:0.997143
Bact5	O	O:0.998743
in	O	O:0.999919
two	O	O:0.999950
rows	O	O:0.999906
,	O	O:0.999992
can	O	O:0.999899
we	O	O:0.999993
merge	O	O:0.818506
its	O	O:0.999940
value	O	O:0.999908
corresponding	O	O:0.999409
to	O	O:0.999873
file2	O	O:0.999714
in	O	O:0.999969
one	O	O:0.999874
row	O	O:0.999864
separated	O	O:0.999971
by	O	O:0.999990
a	O	O:0.999967
delimeter	O	O:0.993656
?	O	O:0.999892
	
Pandas	O	O:0.999425
dataframe	O	O:0.999525
insert	O	O:0.976520
rows	O	O:0.997800
	
I	O	O:0.999985
want	O	O:0.999694
to	O	O:0.999316
insert	O	O:0.998786
rows	O	O:0.999238
in	O	O:0.999792
DF	O	O:0.999796
and	O	O:0.999716
modify	O	O:0.996050
its	O	O:0.998580
related	O	O:0.996166
values	O	O:0.978911
:	O	O:0.999960
	
The	O	O:0.999985
code	O	O:0.999531
can	O	O:0.999974
only	O	O:0.999890
append	O	O:0.901206
rows	O	O:0.996658
but	O	O:0.999879
how	O	O:0.999914
to	O	O:0.999865
modify	O	O:0.999799
its	O	O:0.999824
values	O	O:0.998156
in	O	O:0.999987
a	O	O:0.999947
faster	O	O:0.999164
way	O	O:0.998804
?	O	O:0.999605
	
I	O	O:0.999985
want	O	O:0.999926
to	O	O:0.999728
use	O	O:0.999996
a	O	O:0.999426
function	O	O:0.999583
from	O	O:0.999628
an	O	O:0.999513
add-in	O	O:0.999601
in	O	O:0.999856
excel	O	O:0.994818
and	O	O:0.999935
apply	O	O:0.706795
it	O	O:0.999646
to	O	O:0.999984
some	O	O:0.999993
data	O	O:0.999933
i	O	O:0.999999
have	O	O:0.999807
simulated	O	O:0.999366
in	O	O:0.999919
python	O	O:0.994800
.	O	O:0.999776
	
I	O	O:0.999989
need	O	O:0.999787
to	O	O:0.999843
be	O	O:1.000000
able	O	O:0.999884
to	O	O:0.999976
call	O	O:0.997342
the	O	O:0.999892
add-in	O	O:0.992701
and	O	O:0.999922
apply	O	O:0.914613
my	O	O:0.999715
data	O	O:0.999368
indexes	O	O:0.994356
there	O	O:0.999717
...	O	O:0.999495
something	O	O:0.999317
along	O	O:0.999201
these	O	O:0.999147
lines	O	O:0.985750
:	O	O:0.999993
=	O	O:0.999977
add-in_name	O	O:0.997460
(	O	O:0.999973
data_range1	O	O:0.998985
,	O	O:0.999985
data_range2	O	O:0.998511
,	O	O:0.999947
"	O	O:0.999940
GGCV	O	O:0.992167
")	O	O:0.998878
	
After	O	O:0.999640
reading	O	O:0.995221
one	O	O:0.999953
line	O	O:0.999886
I	O	O:0.999985
append	O	O:0.880778
the	O	O:0.999646
dictionary	O	O:0.999080
to	O	O:0.999924
a	O	O:0.999999
list	O	O:0.993540
(	O	O:0.999992
so	O	O:0.999881
,	O	O:0.999997
the	O	O:0.999978
number	O	O:0.999596
of	O	O:0.999977
dictionaries	O	O:0.999335
in	O	O:0.999935
the	O	O:0.999970
list	O	O:0.967518
is	O	O:0.999996
equal	O	O:0.998043
to	O	O:0.999994
the	O	O:0.999989
number	O	O:0.999627
of	O	O:0.999968
lines	O	O:0.999226
in	O	O:0.999991
the	O	O:0.999981
file	O	O:0.996571
)	O	O:0.999807
.	O	O:0.999462
	
I	O	O:0.999967
can	O	O:0.999931
easily	O	O:0.999593
do	O	O:0.999988
this	O	O:0.999911
iteratively	O	O:0.999823
with	O	O:0.999483
loops	O	O:0.988160
,	O	O:0.999971
but	O	O:0.999576
I've	O	O:0.999629
read	O	O:0.998595
that	O	O:0.999733
you're	O	O:0.999952
supposed	O	O:0.999866
to	O	O:0.999970
slice	B-API	O:0.998886
/	O	O:0.999957
merge	B-API	O:0.649099
/	O	O:0.999971
join	B-API	O:0.623796
data	O	O:0.999883
frames	O	O:0.999853
holistically	O	O:0.999196
,	O	O:0.999992
so	O	O:0.999950
I'm	O	O:0.999964
trying	O	O:0.999852
to	O	O:0.999940
see	O	O:0.999995
if	O	O:0.999991
I	O	O:0.999995
can	O	O:0.999954
find	O	O:0.999851
a	O	O:0.999981
better	O	O:0.999847
way	O	O:0.999855
of	O	O:0.999613
doing	O	O:0.999063
this	O	O:0.998949
.	O	O:0.998601
	
A	O	O:0.999500
join	B-API	B-API:0.745562
will	O	O:0.999769
give	O	O:0.999889
me	O	O:0.999986
all	O	O:0.999935
the	O	O:0.999941
stuff	O	O:0.999066
that	O	O:0.999753
matches	O	O:0.995851
,	O	O:0.999975
but	O	O:0.999678
that's	O	O:0.999792
not	O	O:0.999030
exactly	O	O:0.999816
what	O	O:0.999570
I'm	O	O:0.999971
looking	O	O:0.999637
for	O	O:0.999529
,	O	O:0.999988
since	O	O:0.999103
I	O	O:0.999996
need	O	O:0.999953
a	O	O:0.999945
resulting	O	O:0.999650
dataframe	O	O:0.998733
for	O	O:0.999976
each	O	O:0.999050
key	O	O:0.986822
(	O	O:0.999966
i.e.	O	O:0.997415
for	O	O:0.999986
every	O	O:0.999230
row	O	O:0.999508
)	O	O:0.999922
in	O	O:0.999318
A	O	O:0.999698
.	O	O:0.999591
	
You	O	O:0.999862
then	O	O:0.999646
want	O	O:0.999950
to	O	O:0.999966
apply	O	O:0.997792
some	O	O:0.998562
function	O	O:0.999802
to	O	O:0.999995
each	O	O:0.999986
group	O	O:0.999862
of	O	O:0.999995
rows	O	O:0.998227
in	O	O:0.999945
`	O	O:0.999994
b	O	O:0.998616
`	O	O:0.999992
where	O	O:0.998303
the	O	O:0.999931
`	O	O:0.999832
b	O	O:0.997259
[	O	O:0.999993
"	O	O:0.999975
key	O	O:0.999265
"]`	O	O:0.999459
is	O	O:0.999972
one	O	O:0.999877
of	O	O:0.999977
the	O	O:0.999772
values	O	O:0.998556
in	O	O:0.999646
`	O	O:0.999994
keys	O	O:0.985238
`	O	O:0.999965
.	O	O:0.998592
	
Under	O	O:0.999639
the	O	O:0.999508
covers	O	O:0.996219
,	O	O:0.999996
these	O	O:0.999760
are	O	O:0.999932
really	O	O:0.999099
similar	O	O:0.999951
uses	O	O:0.999830
of	O	O:0.999898
`	O	O:0.999936
apply	B-API	B-API:0.906228
`	O	O:0.999656
.	O	O:0.996183
	
`	O	O:0.999646
loop_iter	O	O:0.997926
=	O	O:0.999954
len	B-API	B-API:0.938633
(	O	O:0.999983
A	O	O:0.999386
)	O	O:0.999942
/	O	O:0.998058
max	B-API	O:0.797143
(	O	O:0.999827
A	O	O:0.999764
[	O	O:0.999964
'	O	O:0.999871
SEQ_NUM	O	O:0.992925
'])	O	O:0.996387
	
Easy	O	O:0.999287
way	O	O:0.999914
to	O	O:0.999944
apply	O	O:0.969923
transformation	O	O:0.999914
from	O	O:0.999180
`	O	O:0.999964
pandas.get_dummies	B-API	B-API:0.721361
`	O	O:0.999993
to	O	O:0.999929
new	O	O:0.999996
data	O	O:0.999719
?	O	O:0.999979
	
As	O	O:0.999967
an	O	O:0.999881
aside	O	O:0.999960
that	O	O:0.999739
may	O	O:0.999974
help	O	O:0.997966
you	O	O:0.999873
in	O	O:0.999971
the	O	O:0.999964
meantime	O	O:0.997831
,	O	O:0.999995
with	O	O:0.999903
datetime-indexed	O	O:0.999897
data	O	O:0.999727
,	O	O:0.999993
[	O	O:0.999997
resample	B-API	B-API:0.537812
]	O	O:0.999804
(	O	O:0.999911
#URL	O	O:0.999868
)	O	O:0.999789
is	O	O:0.999971
usually	O	O:0.999662
a	O	O:0.999830
better	O	O:0.997222
choice	O	O:0.999447
than	O	O:0.994692
reindex	B-API	B-API:0.844872
.	O	O:0.999455
	
Call	O	O:0.988882
`	O	O:0.999963
transform	B-API	B-API:0.654624
`	O	O:0.999974
on	O	O:0.999869
the	O	O:0.999922
'	O	O:0.999874
measurement	O	O:0.998874
'	O	O:0.999955
column	O	O:0.998008
and	O	O:0.999979
pass	O	O:0.992005
the	O	O:0.999485
method	O	O:0.994333
`	O	O:0.999986
diff	B-API	B-API:0.953105
`	O	O:0.999980
,	O	O:0.999969
transform	B-API	O:0.986138
returns	O	O:0.999848
a	O	O:0.999935
series	O	O:0.999427
with	O	O:0.998215
an	O	O:0.999748
index	O	O:0.999608
aligned	O	O:0.999886
to	O	O:0.999933
the	O	O:0.999984
original	O	O:0.998031
df	O	O:0.990110
:	O	O:0.999988
#CODE	O	O:0.999718
	
If	O	O:0.999970
you	O	O:0.999312
are	O	O:0.999905
intending	O	O:0.999953
to	O	O:0.999935
apply	O	O:0.993293
some	O	O:0.999839
sorting	O	O:0.999782
on	O	O:0.999985
the	O	O:0.999968
result	O	O:0.999815
of	O	O:0.999858
`	O	O:0.999977
transform	B-API	O:0.666181
`	O	O:0.999996
then	O	O:0.999537
sort	O	O:0.999924
the	O	O:0.999985
df	O	O:0.996247
first	O	O:0.995177
:	O	O:0.999978
#CODE	O	O:0.999633
	
Or	O	O:0.999996
you	O	O:0.999865
can	O	O:0.999891
slice	O	O:0.999678
the	O	O:0.999966
columns	O	O:0.995922
and	O	O:0.999964
pass	O	O:0.999937
this	O	O:0.999948
to	O	O:0.999931
`	O	O:0.999995
drop	B-API	O:0.544830
`	O	O:0.999839
:	O	O:0.999840
#CODE	O	O:0.999836
	
These	O	O:0.999732
values	O	O:0.997793
are	O	O:0.999808
median	O	O:0.999580
values	O	O:0.998413
I	O	O:0.999991
calculated	O	O:0.999956
from	O	O:0.999351
elsewhere	O	O:0.998833
,	O	O:0.999993
and	O	O:0.999761
I	O	O:0.999980
have	O	O:0.999636
also	O	O:0.999461
their	O	O:0.999888
variance	O	O:0.996579
and	O	O:0.999666
standard	O	O:0.996485
deviation	O	O:0.969418
(	O	O:0.999930
and	O	O:0.999762
standard	O	O:0.999044
error	O	O:0.998924
,	O	O:0.999990
too	O	O:0.999533
)	O	O:0.999802
.	O	O:0.997877
	
=	O	O:0.999832
Hash	O	O:0.994678
[	O	O:0.999983
0	O	O:0.999940
]	O	O:0.999929
was	O	O:0.999694
my	O	O:0.999902
point	O	O:0.991976
,	O	O:0.999957
but	O	O:0.999931
even	O	O:0.997663
without	O	O:0.999203
arithmetic	O	O:0.995444
,	O	O:0.999972
there	O	O:0.999545
will	O	O:0.999188
be	O	O:0.999966
a	O	O:0.999990
huge	O	O:0.998650
range	O	O:0.999663
values	O	O:0.997168
for	O	O:0.999774
the	O	O:0.999883
keys	O	O:0.995071
that	O	O:0.999642
will	O	O:0.999937
give	O	O:0.999929
potentially	O	O:0.999738
unfortunate	O	O:0.998655
results	O	O:0.995432
.	O	O:0.999748
	
if	O	O:0.999880
precision	O	O:0.998811
is	O	O:0.999972
to	O	O:0.999904
decimal	O	O:0.999490
place	O	O:0.997039
,	O	O:0.999970
I'd	O	O:0.999983
multiply	O	O:0.755736
it	O	O:0.999948
by	O	O:0.999793
10	O	O:0.999574
and	O	O:0.999814
truncate	O	O:0.978660
maybe	O	O:0.995264
.	O	O:0.999672
	
the	O	O:0.999734
documentation	O	O:0.997964
to	O	O:0.999885
concat	B-API	B-API:0.667183
is	O	O:0.999985
impenetrable	O	O:0.997148
and	O	O:0.999742
its	O	O:0.999823
hard	O	O:0.999506
to	O	O:0.999974
find	O	O:0.999986
examples	O	O:0.999607
of	O	O:0.999993
this	O	O:0.999929
relatively	O	O:0.999885
simple	O	O:0.999634
task	O	O:0.999772
in	O	O:0.999960
the	O	O:0.999969
docs	O	O:0.994277
	
If	O	O:0.999926
you	O	O:0.998962
had	O	O:0.999674
not	O	O:0.999665
called	O	O:0.999444
`	O	O:0.999993
apply	B-API	B-API:0.824536
`	O	O:0.999950
on	O	O:0.999804
the	O	O:0.999888
`	O	O:0.999949
groupby	B-API	B-API:0.971229
`	O	O:0.999961
object	O	O:0.999406
then	O	O:0.999949
you	O	O:0.999985
could	O	O:0.999822
access	O	O:0.999957
the	O	O:0.999733
`	O	O:0.999838
groups	B-API	O:0.898617
`	O	O:0.999897
:	O	O:0.999816
#CODE	O	O:0.999862
	
pandas	O	O:0.997676
groupby	B-API	B-API:0.780546
X	O	O:0.999073
,	O	O:0.999902
Y	O	O:0.999243
and	O	O:0.999601
select	O	O:0.999296
last	O	O:0.999513
week	O	O:0.999826
of	O	O:0.999780
X1	O	O:0.997704
and	O	O:0.999361
X2	O	O:0.997350
(	O	O:0.999364
which	O	O:0.999847
have	O	O:0.999971
diff	O	O:0.936854
frequency	O	O:0.999853
)	O	O:0.998737
	
Then	O	O:0.999821
you	O	O:0.999989
can	O	O:0.999906
select	O	O:0.999984
the	O	O:0.999997
rows	O	O:0.998595
you	O	O:0.999895
want	O	O:0.999947
in	O	O:0.999965
an	O	O:0.999978
apply	B-API	O:0.967067
call	O	O:0.953646
on	O	O:0.999951
the	O	O:0.998970
grouped	O	O:0.990875
object	O	O:0.992681
:	O	O:0.999947
#CODE	O	O:0.999695
	
If	O	O:0.999957
you	O	O:0.999567
can't	O	O:0.999774
upgrade	O	O:0.998913
or	O	O:0.999977
don't	O	O:0.999781
solve	O	O:0.999908
the	O	O:0.999928
issue	O	O:0.999538
you	O	O:0.999922
have	O	O:0.999737
with	O	O:0.999950
0.14	O	O:0.999247
,	O	O:0.999999
you	O	O:0.999903
can	O	O:0.999952
try	O	O:0.999996
to	O	O:0.999990
use	O	O:0.999916
`	O	O:0.999818
ix	B-API	B-API:0.920992
`	O	O:0.999976
instead	O	O:0.999258
of	O	O:0.999915
`	O	O:0.999942
iloc	B-API	B-API:0.988240
`	O	O:0.999866
	
How	O	O:0.999940
do	O	O:0.999801
I	O	O:0.999987
export	O	O:0.988942
multiple	O	O:0.996704
pivot	O	O:0.952802
tables	O	O:0.999797
from	O	O:0.999676
python	O	O:0.998410
using	O	O:0.999978
pandas	O	O:0.994188
to	O	O:0.999941
a	O	O:0.999993
single	O	O:0.997729
csv	O	O:0.999326
document	O	O:0.999476
?	O	O:0.999913
	
Say	O	O:0.999619
I	O	O:0.999996
have	O	O:0.999936
a	O	O:0.999848
function	O	O:0.999510
pivots()	O	O:0.838869
which	O	O:0.999228
aggregates	O	O:0.999630
pivot	O	O:0.827777
tables	O	O:0.998137
#CODE	O	O:0.999467
	
I	O	O:0.999981
know	O	O:0.999797
how	O	O:0.999633
to	O	O:0.999961
export	O	O:0.997680
a	O	O:0.999976
single	O	O:0.998452
pivot	O	O:0.949121
table	O	O:0.998926
#CODE	O	O:0.999462
	
You	O	O:0.999919
can	O	O:0.999774
use	O	O:0.999810
`	O	O:0.999516
to_csv	B-API	B-API:0.998067
(	O	O:0.999996
path	O	O:0.998307
,	O	O:0.999993
mode=	O	O:0.999721
'	O	O:0.999936
a	O	O:0.999828
')`	O	O:0.999716
to	O	O:0.999615
append	O	O:0.907898
files	O	O:0.987963
.	O	O:0.999641
	
Use	O	O:0.999120
`	O	O:0.999880
shift	B-API	B-API:0.961244
`	O	O:0.999942
and	O	O:0.996935
`	O	O:0.999961
np.log	B-API	B-API:0.993587
`	O	O:0.999131
:	O	O:0.999925
#CODE	O	O:0.999861
	
I'd	O	O:0.999928
look	O	O:0.997876
at	O	O:0.999951
seeing	O	O:0.999570
if	O	O:0.999954
you	O	O:0.999688
can	O	O:0.999198
export	O	O:0.993829
it	O	O:0.999970
in	O	O:0.999953
it's	O	O:0.999793
raw	O	O:0.999751
form	O	O:0.999800
,	O	O:0.999970
otherwise	O	O:0.999958
this	O	O:0.999923
must	O	O:0.999915
be	O	O:0.999989
a	O	O:0.999848
common	O	O:0.990739
problem	O	O:0.997301
and	O	O:0.999882
someone	O	O:0.999657
somewhere	O	O:0.999406
has	O	O:0.999965
probably	O	O:0.999606
coded	O	O:0.998730
a	O	O:0.999953
method	O	O:0.998855
to	O	O:0.999943
strip	O	O:0.999728
the	O	O:0.999940
emojis	O	O:0.999409
out	O	O:0.999968
of	O	O:0.999931
the	O	O:0.999908
text	O	O:0.994610
	
Python	O	O:0.999033
pandas	O	O:0.998509
map	O	O:0.872916
dict	O	O:0.999785
keys	O	O:0.999500
to	O	O:0.999967
values	O	O:0.999381
	
I	O	O:0.999992
have	O	O:0.999929
a	O	O:0.999962
csv	O	O:0.997295
for	O	O:0.999871
input	O	O:0.999125
,	O	O:0.999974
whose	O	O:0.998917
row	O	O:0.999699
values	O	O:0.997717
I'd	O	O:0.999995
like	O	O:0.999823
to	O	O:0.999943
join	O	O:0.908454
into	O	O:0.999956
a	O	O:0.999997
new	O	O:0.995264
field	O	O:0.987169
.	O	O:0.999561
	
This	O	O:0.999704
new	O	O:0.999645
field	O	O:0.996871
is	O	O:0.999985
a	O	O:0.999866
constructed	O	O:0.996301
url	O	O:0.996221
,	O	O:0.999820
which	O	O:0.999332
will	O	O:0.999587
then	O	O:0.999884
be	O	O:0.999995
processed	O	O:0.999808
by	O	O:0.999951
the	O	O:0.998570
requests.post()	B-API	B-API:0.669942
method	O	O:0.990986
.	O	O:0.999912
	
I	O	O:0.999973
tried	O	O:0.999862
to	O	O:0.999666
map	O	O:0.952529
values	O	O:0.999233
to	O	O:0.999980
keys	O	O:0.999973
with	O	O:0.999956
a	O	O:0.999993
dict	O	O:0.999053
comprehension	O	O:0.997364
,	O	O:0.999988
but	O	O:0.999867
the	O	O:0.999929
assignment	O	O:0.999584
of	O	O:0.999958
a	O	O:0.999940
key	O	O:0.999822
like	O	O:0.997920
'	O	O:0.999787
FIRST_NAME	O	O:0.953544
'	O	O:0.999890
could	O	O:0.999253
end	O	O:0.999697
up	O	O:0.999955
mapping	O	O:0.998072
to	O	O:0.999895
values	O	O:0.999971
from	O	O:0.999835
an	O	O:0.999975
arbitrary	O	O:0.999812
field	O	O:0.999469
like	O	O:0.999118
test_df	O	O:0.994500
[	O	O:0.999915
'	O	O:0.999901
CITY	O	O:0.998673
']	O	O:0.999514
.	O	O:0.996645
	
which	O	O:0.997815
will	O	O:0.999670
give	O	O:0.999544
you	O	O:0.999923
output	O	O:0.999935
as	O	O:0.999945
follows	O	O:0.997383
:	O	O:0.999938
`	O	O:0.999913
[	O	O:0.999863
{	O	O:0.999987
'	O	O:0.999903
FIRST_NAME	O	O:0.965259
'	O	O:0.998487
:	O	O:0.999976
...,	O	O:0.985286
'	O	O:0.999868
LAST_NAME	O	O:0.969970
'	O	O:0.998073
:	O	O:0.999984
...	O	O:0.999135
}	O	O:0.996844
,	O	O:0.999909
{	O	O:0.999974
'	O	O:0.999689
FIRST_NAME	O	O:0.962252
'	O	O:0.998578
:	O	O:0.999976
...,	O	O:0.985286
'	O	O:0.999868
LAST_NAME	O	O:0.969968
'	O	O:0.998012
:	O	O:0.999986
...	O	O:0.999441
}	O	O:0.997092
]`	O	O:0.998618
(	O	O:0.999774
which	O	O:0.999787
will	O	O:0.999835
give	O	O:0.999907
you	O	O:0.999903
a	O	O:0.999991
list	O	O:0.998836
that	O	O:0.999624
has	O	O:0.999961
equal	O	O:0.999171
length	O	O:0.999565
as	O	O:0.999721
`	O	O:0.999858
test_df	O	O:0.894774
`)	O	O:0.999706
.	O	O:0.997543
	
This	O	O:0.999571
might	O	O:0.999481
be	O	O:0.999967
one	O	O:0.999931
possibility	O	O:0.995775
to	O	O:0.999950
easily	O	O:0.999867
map	O	O:0.824036
it	O	O:0.999981
to	O	O:0.999992
a	O	O:0.999998
correct	O	O:0.997818
row	O	O:0.999591
.	O	O:0.999608
	
Do	O	O:0.999930
you	O	O:0.999922
know	O	O:0.999853
if	O	O:0.999944
append	B-API	O:0.781569
returns	O	O:0.998929
a	O	O:0.999985
copy	O	O:0.941423
/	O	O:0.999965
view	O	O:0.986761
/	O	O:0.999989
reference	O	O:0.999752
of	O	O:0.999937
the	O	O:0.999923
original	O	O:0.998575
dataframe	O	O:0.999564
?	O	O:0.999971
	
Right	O	O:0.998160
now	O	O:0.999702
,	O	O:0.999981
I	O	O:0.999988
am	O	O:0.999982
trying	O	O:0.997712
to	O	O:0.999965
replace	O	O:0.999551
a	O	O:0.999990
stored	O	O:0.999569
procedure	O	O:0.999821
with	O	O:0.999880
a	O	O:0.999850
Python	O	O:0.999448
service	O	O:0.999254
,	O	O:0.999920
and	O	O:0.999915
the	O	O:0.999944
temp	O	O:0.968941
tables	O	O:0.999598
with	O	O:0.999840
Pandas	O	O:0.999910
dataframes	O	O:0.999303
.	O	O:0.999566
	
You	O	O:0.999598
could	O	O:0.999883
pass	O	O:0.999321
an	O	O:0.999935
argument	O	O:0.999904
to	O	O:0.999886
`	O	O:0.999993
apply	B-API	B-API:0.938576
`	O	O:0.999309
:	O	O:0.999755
#CODE	O	O:0.999842
	
Originally	O	O:0.999467
,	O	O:0.999940
I	O	O:0.999995
used	O	O:0.999457
append	B-API	B-API:0.745859
api	O	O:0.999202
to	O	O:0.999908
create	O	O:0.999930
a	O	O:0.999988
single	O	O:0.999882
table	O	O:0.999178
'	O	O:0.999914
impression	O	O:0.999406
'	O	O:0.999890
,	O	O:0.999910
however	O	O:0.999965
that	O	O:0.997257
was	O	O:0.999943
taking	O	O:0.999378
80sec	O	O:0.995366
per	O	O:0.999626
dataframe	O	O:0.998837
and	O	O:0.999701
given	O	O:0.999855
that	O	O:0.998650
I	O	O:0.999996
have	O	O:0.999644
almost	O	O:0.999385
200	O	O:0.999912
of	O	O:0.999942
files	O	O:0.998268
to	O	O:0.999990
be	O	O:0.999997
processed	O	O:0.999210
,	O	O:0.999977
the	O	O:0.999900
'	O	O:0.998791
append	B-API	O:0.733932
'	O	O:0.999916
appeared	O	O:0.999741
to	O	O:0.999931
be	O	O:0.999994
too	O	O:0.999920
slow	O	O:0.999591
.	O	O:0.999685
	
Also	O	O:0.998838
,	O	O:0.999990
why	O	O:0.999543
is	O	O:0.999831
append	B-API	O:0.573653
so	O	O:0.999964
much	O	O:0.999392
slower	O	O:0.999975
than	O	O:0.999084
put	O	O:0.998698
?	O	O:0.999948
	
pandas	O	O:0.994816
merge	B-API	O:0.739836
with	O	O:0.997792
MultiIndex	B-API	O:0.893696
,	O	O:0.999990
when	O	O:0.999916
only	O	O:0.999915
one	O	O:0.999989
level	O	O:0.996193
of	O	O:0.999911
index	O	O:0.989227
is	O	O:0.999991
to	O	O:0.999923
be	O	O:0.999998
used	O	O:0.999860
as	O	O:0.999766
key	O	O:0.991378
	
I	O	O:0.999988
want	O	O:0.999949
to	O	O:0.999518
recover	O	O:0.999980
the	O	O:0.999933
values	O	O:0.997801
in	O	O:0.999974
the	O	O:0.999959
column	O	O:0.998293
'	O	O:0.999942
_Cat	O	O:0.993504
'	O	O:0.999993
from	O	O:0.999595
df2	O	O:0.998444
and	O	O:0.999966
merge	O	O:0.855905
them	O	O:0.999627
into	O	O:0.999786
df1	O	O:0.999832
for	O	O:0.999923
the	O	O:0.999916
appropriate	O	O:0.998643
values	O	O:0.998864
of	O	O:0.999951
'	O	O:0.999823
_ItemId	O	O:0.973945
'	O	O:0.999615
.	O	O:0.999483
	
This	O	O:0.998304
is	O	O:0.999891
almost	O	O:0.998100
(	O	O:0.999960
I	O	O:0.999974
think	O	O:0.999873
?	O	O:0.999976
)	O	O:0.999951
a	O	O:0.999866
standard	O	O:0.997928
many-to-one	O	O:0.999104
merge	O	O:0.539747
,	O	O:0.999957
except	O	O:0.999920
that	O	O:0.999827
the	O	O:0.999985
appropriate	O	O:0.999596
key	O	O:0.998967
for	O	O:0.999976
the	O	O:0.999958
left	O	O:0.993009
df	O	O:0.995888
is	O	O:0.999993
one	O	O:0.999747
of	O	O:0.999931
MultiIndex	B-API	O:0.855127
levels	O	O:0.903842
.	O	O:0.999311
	
Or	O	O:0.999893
is	O	O:0.999987
there	O	O:0.999550
a	O	O:0.999954
better	O	O:0.999332
approach	O	O:0.997859
to	O	O:0.999890
this	O	O:0.999953
merge	B-API	O:0.713252
?	O	O:0.999910
	
loc	B-API	B-API:0.855761
will	O	O:0.998090
not	O	O:0.999311
attempt	O	O:0.999876
to	O	O:0.999976
use	O	O:0.999994
a	O	O:0.999795
number	O	O:0.981218
(	O	O:0.999988
eg	O	O:0.999986
1	O	O:0.999953
)	O	O:0.999991
as	O	O:0.999916
a	O	O:0.999987
positional	O	O:0.986973
argument	O	O:0.999456
at	O	O:0.999721
all	O	O:0.987730
(	O	O:0.999776
and	O	O:0.999584
will	O	O:0.997879
raise	O	O:0.996802
instead	O	O:0.997973
);	O	O:0.999749
see	O	O:0.999875
main	O	O:0.999540
pandas	O	O:0.999802
docs	O	O:0.999760
/	O	O:0.999953
selecting	O	O:0.999908
data	O	O:0.998701
	
I	O	O:0.999988
have	O	O:0.999835
the	O	O:0.999625
following	O	O:0.997855
boxplot	O	O:0.964197
:	O	O:0.999983
#CODE	O	O:0.999645
	
My	O	O:0.999920
question	O	O:0.997121
is	O	O:0.999929
:	O	O:0.999991
how	O	O:0.999986
can	O	O:0.999905
I	O	O:0.999998
change	O	O:0.999836
the	O	O:0.997383
whiskers	O	O:0.997382
/	O	O:0.999830
quantiles	O	O:0.996814
being	O	O:0.999852
plotted	O	O:0.998062
in	O	O:0.999808
the	O	O:0.999811
boxplot	O	O:0.992390
?	O	O:0.999958
	
it'll	O	O:0.998627
be	O	O:0.999980
difficult	O	O:0.999614
to	O	O:0.999940
translate	O	O:0.999987
those	O	O:0.999318
`	O	O:0.999993
ddply	O	B-API:0.962136
`	O	O:0.999988
calls	O	O:0.996563
to	O	O:0.999989
pandas	O	O:0.996200
.	O	O:0.999809
	
I	O	O:0.999982
guess	O	O:0.998533
`	O	O:0.999926
groupby	B-API	B-API:0.965463
`	O	O:0.999908
should	O	O:0.994154
be	O	O:0.999968
used	O	O:0.999813
but	O	O:0.998389
I	O	O:0.999905
find	O	O:0.999676
this	O	O:0.998287
format	O	O:0.999956
very	O	O:0.999729
cryptic	O	O:0.998813
so	O	O:0.999933
it's	O	O:0.999966
hard	O	O:0.999898
to	O	O:0.999992
translate	O	O:0.999987
to	O	O:0.999945
python	O	O:0.999434
	
If	O	O:0.999968
you	O	O:0.999947
drop	O	O:0.993218
the	O	O:0.999925
"	O	O:0.999616
%	O	O:0.999518
"	O	O:0.999980
sign	O	O:0.999709
,	O	O:0.999999
you	O	O:0.999930
can	O	O:0.999931
make	O	O:0.999921
the	O	O:0.999985
plot	O	O:0.974056
without	O	O:0.999648
ticks	O	O:0.988884
.	O	O:0.999732
	
Append	O	O:0.986055
Two	O	O:0.999906
Dataframes	O	O:0.997554
Together	O	O:0.998740
(	O	O:0.999971
Pandas	O	O:0.999469
,	O	O:0.999987
Python3	O	O:0.999308
)	O	O:0.999223
	
I	O	O:0.999934
am	O	O:0.999984
trying	O	O:0.999085
to	O	O:0.999781
append	O	O:0.879555
/	O	O:0.999636
join	O	B-API:0.967328
(	O	O:0.999993
?	O	O:0.999987
)	O	O:0.999918
two	O	O:0.999827
different	O	O:0.999978
dataframes	O	O:0.998036
together	O	O:0.999974
that	O	O:0.999834
don't	O	O:0.999878
share	O	O:0.999463
any	O	O:0.999888
overlapping	O	O:0.999359
data	O	O:0.996337
.	O	O:0.999758
	
I	O	O:0.999934
am	O	O:0.999983
trying	O	O:0.999021
to	O	O:0.999763
append	O	O:0.959319
these	O	O:0.998688
together	O	O:0.999645
using	O	O:0.998648
#CODE	O	O:0.986159
	
EDIT	O	O:0.994470
:	O	O:0.999967
in	O	O:0.999963
regards	O	O:0.999775
to	O	O:0.999967
Edchum's	O	O:0.999959
answers	O	O:0.999680
,	O	O:0.999976
I	O	O:0.999993
have	O	O:0.999496
tried	O	O:0.998324
merge	B-API	B-API:0.723981
and	O	O:0.997809
join	B-API	B-API:0.922898
but	O	O:0.999894
each	O	O:0.999233
create	O	O:0.999206
somewhat	O	O:0.999888
strange	O	O:0.999849
tables	O	O:0.996120
.	O	O:0.999701
	
OK	O	O:0.999840
,	O	O:0.999985
what	O	O:0.999654
you	O	O:0.999965
have	O	O:0.999921
to	O	O:0.999994
do	O	O:0.999981
is	O	O:0.999994
reindex	B-API	O:0.558972
or	O	O:0.999969
reset	B-API	O:0.995307
the	O	O:0.999935
index	O	O:0.996911
so	O	O:0.999998
they	O	O:0.999945
align	O	O:0.998567
	
Use	O	O:0.998709
`	O	O:0.999672
concat	B-API	B-API:0.989621
`	O	O:0.999933
and	O	O:0.999879
pass	O	O:0.999881
param	O	O:0.993574
`	O	O:0.999973
axis=1	O	O:0.946450
`	O	O:0.999586
:	O	O:0.999870
#CODE	O	O:0.999873
	
`	O	O:0.999897
join	B-API	B-API:0.990527
`	O	O:0.999982
also	O	O:0.993250
works	O	O:0.999750
:	O	O:0.999906
#CODE	O	O:0.999688
	
As	O	O:0.999995
does	O	O:0.996818
`	O	O:0.999988
merge	B-API	B-API:0.922364
`	O	O:0.999585
:	O	O:0.999782
#CODE	O	O:0.999863
	
In	O	O:0.999953
the	O	O:0.999984
case	O	O:0.999223
where	O	O:0.999642
the	O	O:0.999945
indices	O	O:0.993540
do	O	O:0.999946
not	O	O:0.999947
align	O	O:0.999827
where	O	O:0.999646
for	O	O:0.999921
example	O	O:0.999866
your	O	O:0.999725
first	O	O:0.999898
df	O	O:0.995536
has	O	O:0.999767
index	O	O:0.993277
`	O	O:0.999967
[	O	O:0.999896
0	O	O:0.999992
,	O	O:0.999987
1	O	O:0.999949
,	O	O:0.999963
2	O	O:0.999943
,	O	O:0.999966
3	O	O:0.999901
]`	O	O:0.999393
and	O	O:0.999915
your	O	O:0.999637
second	O	O:0.999528
df	O	O:0.993499
has	O	O:0.999771
index	O	O:0.993531
`	O	O:0.999966
[	O	O:0.999886
0	O	O:0.999985
,	O	O:0.999989
2	O	O:0.999781
]`	O	O:0.999925
this	O	O:0.999500
will	O	O:0.999884
mean	O	O:0.998578
that	O	O:0.999886
the	O	O:0.999961
above	O	O:0.997905
operations	O	O:0.999850
will	O	O:0.999891
naturally	O	O:0.999951
align	O	O:0.999218
against	O	O:0.999734
the	O	O:0.999859
first	O	O:0.987255
df's	O	O:0.999660
index	O	O:0.998915
resulting	O	O:0.999851
in	O	O:0.999965
a	O	O:0.999957
`	O	O:0.999866
NaN	O	O:0.955943
`	O	O:0.999975
row	O	O:0.993241
for	O	O:0.999977
index	O	O:0.999011
row	O	O:0.999745
`	O	O:0.999964
1	O	O:0.998285
`	O	O:0.999950
.	O	O:0.998798
	
To	O	O:0.999869
fix	O	O:0.999939
this	O	O:0.999981
you	O	O:0.999946
can	O	O:0.999668
reindex	O	O:0.905321
the	O	O:0.999914
second	O	O:0.999859
df	O	O:0.996842
either	O	O:0.999939
by	O	O:0.999974
calling	O	O:0.997521
`	O	O:0.999899
reset_index()	B-API	B-API:0.998796
`	O	O:0.999976
or	O	O:0.999916
assign	O	O:0.999465
directly	O	O:0.999961
like	O	O:0.999409
so	O	O:0.999909
:	O	O:0.999942
`	O	O:0.999967
df2.index	O	O:0.950286
=[	O	O:0.999981
0	O	O:0.999962
,	O	O:0.999991
1	O	O:0.999847
]`	O	O:0.999366
.	O	O:0.998935
	
And	O	O:0.999837
you	O	O:0.999442
could	O	O:0.999343
always	O	O:0.999986
drop	O	O:0.997999
back	O	O:0.999299
to	O	O:0.999974
numpy	O	O:0.999902
operations	O	O:0.999868
on	O	O:0.999988
the	O	O:0.999989
numpy	O	O:0.999284
array	O	O:0.998897
`	O	O:0.999991
pan.values	O	O:0.804951
`	O	O:0.999983
if	O	O:0.999964
need	O	O:0.999873
be	O	O:0.999862
,	O	O:0.999990
though	O	O:0.999352
,	O	O:0.999977
hopefully	O	O:0.998193
,	O	O:0.999994
that	O	O:0.999205
would	O	O:0.999812
be	O	O:0.999977
unnecessary	O	O:0.997804
.	O	O:0.998484
	
This	O	O:0.999273
argument	O	O:0.999075
is	O	O:0.999934
new	O	O:0.997988
in	O	O:0.998969
1.9	O	O:0.994645
...	O	O:0.996300
but	O	O:0.999879
there	O	O:0.998771
is	O	O:0.999921
a	O	O:0.999582
workaround	O	O:0.998174
,	O	O:0.999988
try	O	O:0.999560
`	O	O:0.999781
np.linspace	B-API	B-API:0.921341
(	O	O:0.999984
0	O	O:0.999994
,	O	O:0.999966
len	B-API	B-API:0.961893
(	O	O:0.999967
pep_list	O	O:0.821780
)	O	O:0.999932
,	O	O:0.999848
n+1	O	O:0.998714
,	O	O:0.999975
endpoint=True	O	O:0.998382
)	O	O:0.999210
.astype	B-API	B-API:0.995561
(	O	O:0.999962
int	O	O:0.996320
)`	O	O:0.999340
	
Take	O	O:0.998035
the	O	O:0.999964
time	O	O:0.999773
difference	O	O:0.999341
(	O	O:0.999996
using	O	O:0.999759
`	O	O:0.999721
shift	B-API	B-API:0.949091
`	O	O:0.999964
)	O	O:0.999728
til	O	O:0.999668
the	O	O:0.999982
next	O	O:0.995437
value	O	O:0.999305
,	O	O:0.999982
and	O	O:0.999948
multiply	O	O:0.618132
(	O	O:0.999956
value	O	O:0.999179
*	O	O:0.999762
seconds	O	O:0.984543
):	O	O:0.999967
#CODE	O	O:0.998818
	
Then	O	O:0.999186
do	O	O:0.999987
the	O	O:0.999986
resample	O	O:0.541014
to	O	O:0.999964
seconds	O	O:0.999941
(	O	O:0.999996
sum	O	O:0.999113
the	O	O:0.999912
value*seconds	O	O:0.973016
):	O	O:0.999934
#CODE	O	O:0.999357
	
you	O	O:0.999554
can	O	O:0.998702
isnull	B-API	B-API:0.629428
(	O	O:0.999989
df	O	O:0.997446
[	O	O:0.999967
'	O	O:0.999979
difference	O	O:0.999545
'])	O	O:0.998859
will	O	O:0.998242
give	O	O:0.999274
True	O	O:0.998138
on	O	O:0.999929
NaT	O	O:0.997592
,	O	O:0.999993
so	O	O:0.999983
you	O	O:0.999914
could	O	O:0.999834
subtract	O	O:0.999992
then	O	O:0.999782
use	O	O:0.999996
mask	B-API	O:0.941689
I	O	O:0.999975
think	O	O:0.998734
	
After	O	O:0.999963
they	O	O:0.998902
are	O	O:0.999967
done	O	O:0.999279
,	O	O:0.999994
merge	O	O:0.828706
the	O	O:0.999859
two	O	O:0.999378
frames	O	O:0.999669
together	O	O:0.998908
:	O	O:0.999986
#CODE	O	O:0.999257
	
Another	O	O:0.998884
solution	O	O:0.997913
(	O	O:0.999992
slightly	O	O:0.999679
harder	O	O:0.998990
):	O	O:0.999976
Merge	O	O:0.999315
the	O	O:0.999946
columns	O	O:0.991568
`	O	O:0.999981
transcript_id	O	O:0.930615
`	O	O:0.999990
,	O	O:0.999692
`	O	O:0.999974
gene_id	O	O:0.568373
`	O	O:0.999947
and	O	O:0.998800
`	O	O:0.999982
gene_name	O	O:0.750367
`	O	O:0.999984
in	O	O:0.999788
another	O	O:0.999871
column	O	O:0.998871
,	O	O:0.999993
say	O	O:0.999704
`	O	O:0.999853
merged_id	O	O:0.865213
`	O	O:0.999949
and	O	O:0.994400
`	O	O:0.999980
groupby	B-API	B-API:0.983845
`	O	O:0.999976
on	O	O:0.997083
`	O	O:0.999987
merged_id	O	O:0.918647
`	O	O:0.999935
.	O	O:0.998296
	
Geo	O	O:0.999716
Pandas	O	O:0.999782
Data	O	O:0.998232
Frame	O	O:0.998536
/	O	O:0.999148
Matrix	O	O:0.821053
-	O	O:0.999972
filter	O	O:0.950797
/	O	O:0.999956
drop	O	O:0.963372
NaN	O	O:0.997628
/	O	O:0.999721
False	O	O:0.986306
values	O	O:0.991426
	
Then	O	O:0.998874
I	O	O:0.999996
stack	O	O:0.976591
the	O	O:0.999908
dataframe	O	O:0.999317
,	O	O:0.999995
give	O	O:0.999601
the	O	O:0.999955
index	O	O:0.996921
levels	O	O:0.991357
the	O	O:0.999874
desired	O	O:0.996001
names	O	O:0.996323
,	O	O:0.999986
and	O	O:0.999976
select	O	O:0.999808
only	O	O:0.999766
the	O	O:0.999991
rows	O	O:0.999193
where	O	O:0.999466
we	O	O:0.999997
have	O	O:0.999017
'	O	O:0.999969
True	O	O:0.996866
'	O	O:0.999869
values	O	O:0.982846
:	O	O:0.999970
#CODE	O	O:0.999564
	
Can	O	O:0.999855
you	O	O:0.999867
enable	O	O:0.999855
the	O	O:0.999979
debugger	O	O:0.999754
to	O	O:0.999980
get	O	O:0.999992
a	O	O:0.999987
stack	O	O:0.806424
trace	O	O:0.998992
?	O	O:0.999976
	
reshape	O	O:0.840231
data	O	O:0.999797
frame	O	O:0.999857
in	O	O:0.999918
pandas	O	O:0.999479
with	O	O:0.999875
pivot	O	O:0.898693
table	O	O:0.999144
	
With	O	O:0.999483
pivot	O	O:0.975581
table	O	O:0.999961
you	O	O:0.999955
can	O	O:0.999933
get	O	O:0.999971
a	O	O:0.999985
matrix	O	O:0.987838
showing	O	O:0.998107
which	O	O:0.996521
`	O	O:0.999961
baz	O	O:0.964831
`	O	O:0.999993
corresponds	O	O:0.998263
to	O	O:0.999985
which	O	O:0.999851
`	O	O:0.999964
qux	O	O:0.942000
`	O	O:0.999832
:	O	O:0.999858
#CODE	O	O:0.999861
	
Rolling	O	O:0.987364
apply	O	B-API:0.763648
question	O	O:0.993003
	
For	O	O:0.999944
each	O	O:0.999319
group	O	O:0.997889
in	O	O:0.999935
the	O	O:0.999603
groupby	B-API	B-API:0.946718
object	O	O:0.998707
,	O	O:0.999926
we	O	O:0.999971
will	O	O:0.998933
want	O	O:0.999959
to	O	O:0.999979
apply	O	O:0.994916
a	O	O:0.999255
function	O	O:0.977350
:	O	O:0.999953
#CODE	O	O:0.999169
	
We	O	O:0.999986
want	O	O:0.999438
to	O	O:0.999989
take	O	O:0.999972
the	O	O:0.999939
Times	O	O:0.993715
column	O	O:0.998638
,	O	O:0.999985
and	O	O:0.999905
for	O	O:0.999825
each	O	O:0.998946
time	O	O:0.999872
,	O	O:0.999997
apply	O	O:0.963744
a	O	O:0.998876
function	O	O:0.993058
.	O	O:0.999481
	
That's	O	O:0.999798
done	O	O:0.999846
with	O	O:0.999862
`	O	O:0.999894
applymap	B-API	B-API:0.994954
`	O	O:0.999558
:	O	O:0.999860
#CODE	O	O:0.999870
	
Given	O	O:0.994610
a	O	O:0.999996
time	O	O:0.999120
`	O	O:0.999984
t	O	O:0.996528
`	O	O:0.999984
,	O	O:0.999989
we	O	O:0.999998
can	O	O:0.999417
select	O	O:0.999976
the	O	O:0.999887
`	O	O:0.999915
Value	O	O:0.993210
`	O	O:0.999996
s	O	O:0.999962
from	O	O:0.999761
`	O	O:0.999990
subf	O	B-API:0.544350
`	O	O:0.999982
whose	O	O:0.999677
times	O	O:0.999772
are	O	O:0.999937
in	O	O:0.999972
the	O	O:0.999361
half-open	O	O:0.995958
interval	O	O:0.998208
`	O	O:0.999922
(	O	O:0.999869
t-60	O	O:0.999764
,	O	O:0.999997
t	O	O:0.999923
]`	O	O:0.999941
using	O	O:0.999333
the	O	O:0.997950
`	O	O:0.998207
ix	B-API	B-API:0.991059
`	O	O:0.999632
method	O	O:0.978417
:	O	O:0.999986
#CODE	O	O:0.999166
	
pandas	O	O:0.997880
join	O	O:0.752281
data	O	O:0.999833
frames	O	O:0.999726
on	O	O:0.999828
similar	O	O:0.999410
but	O	O:0.999816
not	O	O:0.999511
identical	O	O:0.996113
string	O	O:0.999488
using	O	O:0.998760
lower	O	O:0.998627
case	O	O:0.998703
only	O	O:0.997716
	
I	O	O:0.999987
need	O	O:0.999688
to	O	O:0.999930
join	O	O:0.972693
data	O	O:0.999964
frames	O	O:0.999898
on	O	O:0.999974
columns	O	O:0.999936
that	O	O:0.999921
are	O	O:0.999815
similar	O	O:0.998907
but	O	O:0.999490
not	O	O:0.998965
identical	O	O:0.986397
.	O	O:0.999640
	
So	O	O:0.999948
I	O	O:0.999980
am	O	O:0.999994
trying	O	O:0.999442
to	O	O:0.999867
isolate	O	O:0.999924
the	O	O:0.999979
lowercase	O	O:0.993429
letters	O	O:0.998993
from	O	O:0.999937
each	O	O:0.999568
column	O	O:0.999946
,	O	O:0.999993
create	O	O:0.999763
new	O	O:0.999834
columns	O	O:0.999503
to	O	O:0.999995
join	O	O:0.723033
on	O	O:0.999901
.	O	O:0.999840
	
Note	O	O:0.999687
that	O	O:0.999904
this	O	O:0.999927
assumes	O	O:0.999777
collecting	O	O:0.999536
all	O	O:0.999006
ASCII	O	O:0.999808
characters	O	O:0.999808
from	O	O:0.999421
`	O	O:0.999992
a	O	O:0.999956
`	O	O:0.999985
to	O	O:0.999378
`	O	O:0.999999
z	O	O:0.997361
`	O	O:0.999997
suffices	O	O:0.999153
to	O	O:0.999989
produce	O	O:0.999904
values	O	O:0.999412
on	O	O:0.999944
which	O	O:0.999837
to	O	O:0.999975
join	O	O:0.557477
.	O	O:0.999824
	
You	O	O:0.999942
can	O	O:0.999834
of	O	O:0.999978
course	O	O:0.993823
extend	O	O:0.999672
this	O	O:0.999716
with	O	O:0.999924
several	O	O:0.997334
joins	O	O:0.999268
,	O	O:0.999989
the	O	O:0.999975
join	O	B-API:0.907285
solution	O	O:0.999940
detects	O	O:0.999522
common	O	O:0.999501
indices	O	O:0.999161
automatically	O	O:0.998868
.	O	O:0.999394
	
My	O	O:0.999990
data	O	O:0.999085
is	O	O:0.999989
in	O	O:0.999969
a	O	O:0.999992
DataFrame	O	O:0.997640
of	O	O:0.999769
about	O	O:0.998930
10378	O	O:0.998673
rows	O	O:0.995543
and	O	O:0.999876
`	O	O:0.999921
len	B-API	B-API:0.996143
(	O	O:0.999988
df	O	O:0.991562
[	O	O:0.999950
'	O	O:0.999846
Full	O	O:0.999740
name	O	O:0.999764
'])`	O	O:0.992750
is	O	O:0.999898
10378	O	O:0.996740
,	O	O:0.999986
as	O	O:0.999930
expected	O	O:0.997917
.	O	O:0.999651
	
But	O	O:0.999783
`	O	O:0.999691
len	B-API	B-API:0.992391
(	O	O:0.999991
choices	O	O:0.996779
)`	O	O:0.999833
is	O	O:0.999982
only	O	O:0.999408
1695	O	O:0.998479
.	O	O:0.999615
	
I'm	O	O:0.999919
fairly	O	O:0.999338
certain	O	O:0.999024
that	O	O:0.999724
the	O	O:0.999981
issue	O	O:0.998040
is	O	O:0.999970
in	O	O:0.999926
the	O	O:0.999969
first	O	O:0.999704
line	O	O:0.999524
,	O	O:0.999997
with	O	O:0.999945
the	O	O:0.999666
`	O	O:0.999939
to_dict()	B-API	B-API:0.995634
`	O	O:0.999936
function	O	O:0.999726
,	O	O:0.999999
as	O	O:0.999980
`	O	O:0.999739
len	B-API	B-API:0.982433
(	O	O:0.999993
df	O	O:0.993420
[	O	O:0.999964
'	O	O:0.999898
Full	O	O:0.999919
name	O	O:0.999620
']	O	O:0.999149
.astype	B-API	B-API:0.986266
(	O	O:0.999966
str	O	O:0.999268
)`	O	O:0.999677
results	O	O:0.994980
in	O	O:0.999957
10378	O	O:0.997563
and	O	O:0.999858
`	O	O:0.999734
len	B-API	B-API:0.995792
(	O	O:0.999989
df	O	O:0.991562
[	O	O:0.999964
'	O	O:0.999906
Full	O	O:0.999910
name	O	O:0.999893
']	O	O:0.999788
.to_dict()	B-API	B-API:0.948728
)`	O	O:0.999208
results	O	O:0.997573
in	O	O:0.999945
1695	O	O:0.998130
.	O	O:0.999574
	
what	O	O:0.997391
is	O	O:0.999981
`	O	O:0.999830
len	B-API	B-API:0.974878
(	O	O:0.999989
df.index.unique()	O	B-API:0.813049
)`	O	O:0.999601
?	O	O:0.999939
	
@USER	O	O:0.999717
using	O	O:0.998921
`	O	O:0.999626
choices	O	O:0.969644
=	O	O:0.999997
dict	O	O:0.997492
(	O	O:0.999988
zip	O	O:0.935933
(	O	O:0.999990
df	O	O:0.998653
[	O	O:0.999992
'	O	O:0.999982
n	O	O:0.999615
']	O	O:0.999942
,	O	O:0.999957
df	O	O:0.998840
[	O	O:0.999931
'	O	O:0.999920
Full	O	O:0.999915
name	O	O:0.999620
']	O	O:0.999135
.astype	B-API	B-API:0.986040
(	O	O:0.999932
str	O	O:0.997224
)))`	O	O:0.998949
,	O	O:0.999973
where	O	O:0.999813
df	O	O:0.997725
[	O	O:0.999986
'	O	O:0.999973
n	O	O:0.999698
']	O	O:0.999818
is	O	O:0.999749
np.arange	B-API	B-API:0.941138
(	O	O:0.999768
len	B-API	B-API:0.801626
(	O	O:0.999994
df	O	O:0.993957
))	O	O:0.999446
,	O	O:0.999110
worked	O	O:0.999950
fine	O	O:0.997124
and	O	O:0.999793
got	O	O:0.999944
what	O	O:0.997714
I	O	O:0.999954
needed	O	O:0.999126
.	O	O:0.997292
	
Had	O	O:0.999101
some	O	O:0.999216
indexing	O	O:0.999315
issues	O	O:0.999504
because	O	O:0.999237
I	O	O:0.999971
was	O	O:0.999965
importing	O	O:0.999423
the	O	O:0.999965
data	O	O:0.999804
from	O	O:0.999740
different	O	O:0.999771
Excel	O	O:0.999648
spreadsheets	O	O:0.998478
.	O	O:0.999547
	
This	O	O:0.997065
is	O	O:0.999985
what	O	O:0.997249
is	O	O:0.999982
happening	O	O:0.999296
in	O	O:0.999966
your	O	O:0.999740
case	O	O:0.998477
,	O	O:0.999979
and	O	O:0.999957
noted	O	O:0.999484
from	O	O:0.999544
the	O	O:0.999947
comments	O	O:0.999730
,	O	O:0.999998
since	O	O:0.999950
the	O	O:0.999979
amount	O	O:0.999861
of	O	O:0.999793
`	O	O:0.999928
unique	O	O:0.994260
`	O	O:0.999988
values	O	O:0.990411
for	O	O:0.999873
the	O	O:0.999723
index	O	O:0.992169
are	O	O:0.999983
only	O	O:0.999222
`	O	O:0.999979
1695	O	O:0.991308
`	O	O:0.999977
,	O	O:0.999977
we	O	O:0.999996
can	O	O:0.998515
confirm	O	O:0.999980
this	O	O:0.999986
by	O	O:0.999986
testing	O	O:0.999739
the	O	O:0.999951
value	O	O:0.999810
of	O	O:0.999967
`	O	O:0.999785
len	B-API	B-API:0.951249
(	O	O:0.999988
df.index.unique()	O	B-API:0.843795
)`	O	O:0.999175
.	O	O:0.999529
	
what	O	O:0.999208
do	O	O:0.999949
you	O	O:0.999983
mean	O	O:0.998216
by	O	O:0.999983
normalize	O	O:0.892313
?	O	O:0.999949
	
The	O	O:0.999780
other	O	O:0.999686
way	O	O:0.997471
is	O	O:0.999970
much	O	O:0.997702
easier	O	O:0.998962
and	O	O:0.999551
involves	O	O:0.999618
using	O	O:0.997774
`	O	O:0.999551
resample	B-API	B-API:0.983009
`	O	O:0.999974
to	O	O:0.999818
convert	O	O:0.999957
to	O	O:0.999994
daily	O	O:0.998639
observations	O	O:0.998959
and	O	O:0.999907
backfill	O	O:0.993998
daily	O	O:0.964585
consumption	O	O:0.994056
.	O	O:0.999669
	
(	O	O:0.999912
Note	O	O:0.999964
that	O	O:0.999710
the	O	O:0.999965
first	O	O:0.992521
and	O	O:0.999929
last	O	O:0.999122
months	O	O:0.996457
are	O	O:0.999661
based	O	O:0.998503
on	O	O:0.999970
partial	O	O:0.997516
data	O	O:0.999923
,	O	O:0.999994
you	O	O:0.999949
may	O	O:0.999894
want	O	O:0.999898
to	O	O:0.999725
either	O	O:0.999993
drop	O	O:0.999459
them	O	O:0.999918
or	O	O:0.999966
pro-rate	O	O:0.999267
the	O	O:0.999984
daily	O	O:0.977446
consumption	O	O:0.999238
.	O	O:0.999892
)	O	O:0.999838
#CODE	O	O:0.996350
	
Basically	O	O:0.999731
,	O	O:0.999948
after	O	O:0.999893
calculating	O	O:0.998808
the	O	O:0.999931
daily	O	O:0.981014
consumption	O	O:0.999490
,	O	O:0.999999
do	O	O:0.999984
a	O	O:0.999989
partial	O	O:0.979897
resample	B-API	O:0.799918
by	O	O:0.999906
adding	O	O:0.999641
the	O	O:0.999470
first	O	O:0.982337
and	O	O:0.999974
last	O	O:0.999889
day	O	O:0.999933
of	O	O:0.999950
each	O	O:0.997006
month	O	O:0.999231
.	O	O:0.999549
	
I	O	O:0.999856
will	O	O:0.997864
implement	O	O:0.996979
it	O	O:0.999543
and	O	O:0.999819
see	O	O:0.999785
how	O	O:0.999000
it	O	O:0.999985
goes	O	O:0.996027
,	O	O:0.999996
but	O	O:0.999953
can	O	O:0.999446
you	O	O:0.999974
also	O	O:0.999875
explain	O	O:0.999896
what	O	O:0.998824
'	O	O:0.999966
1d	O	O:0.999963
'	O	O:0.999940
means	O	O:0.999498
in	O	O:0.999973
the	O	O:0.998819
resample	B-API	B-API:0.924620
method	O	O:0.996960
?	O	O:0.999976
	
@USER	O	O:0.998667
'	O	O:0.999760
1d	O	O:0.999818
'	O	O:0.999971
just	O	O:0.999879
means	O	O:0.999905
1	O	O:0.999988
day	O	O:0.999909
for	O	O:0.999992
the	O	O:0.999976
frequency	O	O:0.999585
of	O	O:0.999893
the	O	O:0.999671
resample	B-API	B-API:0.672082
.	O	O:0.999361
	
So	O	O:0.999896
I	O	O:0.999994
want	O	O:0.999873
something	O	O:0.998904
that	O	O:0.999793
will	O	O:0.999942
drop	O	O:0.995111
the	O	O:0.999892
`	O	O:0.999896
lob	O	O:0.989495
`	O	O:0.999988
group	O	O:0.929357
,	O	O:0.999988
but	O	O:0.999882
keep	O	O:0.999110
every	O	O:0.999479
record	O	O:0.999809
of	O	O:0.999974
both	O	O:0.999361
the	O	O:0.999705
`	O	O:0.999801
mol	O	O:0.740666
`	O	O:0.999975
and	O	O:0.997985
`	O	O:0.999991
thg	O	O:0.981266
`	O	O:0.999965
group	O	O:0.945774
.	O	O:0.999911
	
Pandas	O	O:0.999641
Merge	O	O:0.998664
2	O	O:0.999950
data	O	O:0.999740
frames	O	O:0.999927
by	O	O:0.999968
2	O	O:0.999951
columns	O	O:0.999603
each	O	O:0.998663
	
In	O	O:0.999963
each	O	O:0.999924
data	O	O:0.999957
frame	O	O:0.999913
i	O	O:0.999998
have	O	O:0.999785
column	O	O:0.999844
with	O	O:0.999879
the	O	O:0.999921
same	O	O:0.999875
name	O	O:0.999550
and	O	O:0.999980
values	O	O:0.997016
(	O	O:0.999927
Key_Merge1	O	O:0.987656
)	O	O:0.999315
and	O	O:0.998803
in	O	O:0.999985
each	O	O:0.999676
data	O	O:0.999910
frame	O	O:0.999838
i	O	O:0.999998
have	O	O:0.999671
2	O	O:0.999983
different	O	O:0.999761
column	O	O:0.998993
names	O	O:0.999704
with	O	O:0.999968
same	O	O:0.999726
values	O	O:0.997611
(	O	O:0.999997
Key_Merge2	O	O:0.991819
)	O	O:0.999691
.	O	O:0.998203
	
How	O	O:0.999858
can	O	O:0.999489
i	O	O:0.999998
merge	O	O:0.854941
2	O	O:0.999980
data	O	O:0.999772
frames	O	O:0.999915
by	O	O:0.999961
2	O	O:0.999917
columns	O	O:0.993906
:	O	O:0.999971
	
Can	O	O:0.999591
you	O	O:0.999958
post	O	O:0.990272
an	O	O:0.999987
example	O	O:0.999864
data	O	O:0.999831
and	O	O:0.999978
df	O	O:0.997989
,	O	O:0.999985
your	O	O:0.999832
text	O	O:0.998794
description	O	O:0.998203
is	O	O:0.999983
not	O	O:0.999048
clear	O	O:0.998867
enough	O	O:0.999605
but	O	O:0.999919
generally	O	O:0.999342
you	O	O:0.999705
want	O	O:0.999644
to	O	O:0.999952
merge	O	O:0.934269
and	O	O:0.999976
pass	O	O:0.994326
the	O	O:0.999983
list	O	O:0.996197
of	O	O:0.999995
cols	O	O:0.991419
to	O	O:0.999998
merge	O	O:0.951510
the	O	O:0.999798
;	O	O:0.999917
hs	O	B-API:0.504186
and	O	O:0.999953
rhs	O	O:0.969090
on	O	O:0.999543
:	O	O:0.999972
`	O	O:0.999951
pd.merge	B-API	B-API:0.978443
(	O	O:0.999984
df1	O	O:0.999876
,	O	O:0.999987
df2	O	O:0.999772
,	O	O:0.999920
left_on	O	O:0.955442
=[	O	O:0.999836
'	O	O:0.999660
Key_Merge1	O	O:0.993976
'	O	O:0.999898
,	O	O:0.999968
'	O	O:0.999962
Key_Merge21	O	O:0.991635
']	O	O:0.999880
,	O	O:0.999723
right_on	O	O:0.980679
=[	O	O:0.999885
'	O	O:0.999842
Key_Merge1	O	O:0.994014
'	O	O:0.999859
,	O	O:0.999950
'	O	O:0.999899
Key_merge22	O	O:0.983157
'])`	O	O:0.993238
	
OK	O	O:0.999918
,	O	O:0.999967
you	O	O:0.999974
have	O	O:0.999640
to	O	O:0.999985
rename	O	O:0.999794
'	O	O:0.999934
PRODUCT_GROUP	O	O:0.994226
'	O	O:0.999895
in	O	O:0.999744
DF2	O	O:0.999466
in	O	O:0.999958
order	O	O:0.999741
for	O	O:0.999947
the	O	O:0.999445
`	O	O:0.999817
merge	B-API	B-API:0.871046
`	O	O:0.999972
to	O	O:0.999596
work	O	O:0.999226
:	O	O:0.999983
#CODE	O	O:0.999849
	
the	O	O:0.999479
merge	B-API	O:0.623563
will	O	O:0.999652
naturally	O	O:0.999873
find	O	O:0.999915
the	O	O:0.999961
2	O	O:0.999638
columns	O	O:0.999726
that	O	O:0.999770
match	O	O:0.994294
and	O	O:0.999939
perform	O	O:0.994464
an	O	O:0.999623
inner	O	O:0.999883
merge	B-API	O:0.698848
as	O	O:0.999808
desired	O	O:0.988102
	
I	O	O:0.999987
can	O	O:0.999916
strip	O	O:0.999180
out	O	O:0.999973
the	O	O:0.999837
rightmost	O	O:0.992765
'	O	O:0.999916
.csv	O	O:0.953103
'	O	O:0.999968
part	O	O:0.998504
like	O	O:0.999886
this	O	O:0.998414
:	O	O:0.999926
#CODE	O	O:0.998990
	
How	O	O:0.999811
to	O	O:0.999959
merge	O	O:0.921957
two	O	O:0.999680
DataFrame	O	O:0.998027
columns	O	O:0.997611
and	O	O:0.999961
apply	O	O:0.747646
pandas.to_datetime	B-API	B-API:0.988668
to	O	O:0.999543
it	O	O:0.999986
?	O	O:0.999967
	
What	O	O:0.997610
would	O	O:0.999863
be	O	O:0.999978
a	O	O:0.999997
more	O	O:0.997650
pythonic	O	O:0.998259
way	O	O:0.999830
to	O	O:0.999934
merge	O	O:0.958820
two	O	O:0.999557
columns	O	O:0.998584
,	O	O:0.999984
and	O	O:0.999989
apply	O	O:0.958314
a	O	O:0.998753
function	O	O:0.999228
into	O	O:0.999696
the	O	O:0.999881
result	O	O:0.987438
?	O	O:0.999947
	
once	O	O:0.999717
sorted	O	O:0.999645
I	O	O:0.999994
replace	O	O:0.996666
the	O	O:0.999545
df.index	O	O:0.942629
with	O	O:0.999756
a	O	O:0.999945
numerical	O	O:0.739267
index	O	O:0.991723
#CODE	O	O:0.999497
	
This	O	O:0.999804
can	O	O:0.999855
be	O	O:0.999986
accomplished	O	O:0.999964
with	O	O:0.999734
a	O	O:0.999916
one	O	O:0.999931
line	O	O:0.999470
solution	O	O:0.999905
using	O	O:0.999699
Pandas	O	O:0.997197
'	O	O:0.997935
boolean	O	O:0.980124
indexing	O	O:0.998618
.	O	O:0.998838
	
The	O	O:0.999400
one-liner	O	O:0.999754
also	O	O:0.999299
employs	O	O:0.999983
some	O	O:0.998808
other	O	O:0.999819
tricks	O	O:0.998509
:	O	O:0.999986
Pandas	O	O:0.999894
'	O	O:0.999827
`	O	O:0.999885
map	B-API	B-API:0.859097
`	O	O:0.999938
and	O	O:0.998249
`	O	O:0.999995
diff	B-API	B-API:0.986933
`	O	O:0.999960
methods	O	O:0.990258
and	O	O:0.999990
a	O	O:0.999819
`	O	O:0.999598
lambda	O	O:0.984231
`	O	O:0.999650
function	O	O:0.984624
.	O	O:0.999919
	
`	O	O:0.999828
map	B-API	B-API:0.806302
`	O	O:0.999875
is	O	O:0.999956
used	O	O:0.999973
to	O	O:0.999961
apply	B-API	O:0.968429
the	O	O:0.999402
`	O	O:0.999805
lambda	O	O:0.995489
`	O	O:0.999972
function	O	O:0.999304
to	O	O:0.999996
all	O	O:0.999983
rows	O	O:0.998535
.	O	O:0.999446
	
The	O	O:0.999572
`	O	O:0.999894
lambda	O	O:0.990258
`	O	O:0.999920
function	O	O:0.987179
is	O	O:0.999994
needed	O	O:0.999661
to	O	O:0.999963
create	O	O:0.999972
a	O	O:0.999997
custom	O	O:0.998247
less-then	O	O:0.994646
comparison	O	O:0.999905
that	O	O:0.999897
will	O	O:0.999801
evaluate	O	O:0.999663
NaN	O	O:0.998882
values	O	O:0.999283
to	O	O:0.999849
True	O	O:0.998918
.	O	O:0.999664
	
There	O	O:0.998696
is	O	O:0.999967
a	O	O:0.999877
built	O	O:0.984699
in	O	O:0.999656
method	O	O:0.988964
for	O	O:0.999982
this	O	O:0.997959
`	O	O:0.999981
diff	B-API	B-API:0.979176
`	O	O:0.999622
:	O	O:0.999799
#CODE	O	O:0.999862
	
as	O	O:0.999835
pointed	O	O:0.997996
out	O	O:0.999943
calling	O	O:0.991645
`	O	O:0.999985
diff	B-API	B-API:0.946456
`	O	O:0.999992
here	O	O:0.999292
will	O	O:0.999955
lose	O	O:0.999842
the	O	O:0.999981
first	O	O:0.998947
row	O	O:0.999925
so	O	O:0.999978
I'm	O	O:0.999995
using	O	O:0.999893
a	O	O:0.999930
ugly	O	O:0.998235
hack	O	O:0.999497
where	O	O:0.999282
I	O	O:0.999995
concatenate	O	O:0.987868
the	O	O:0.999973
first	O	O:0.999226
row	O	O:0.999953
with	O	O:0.999952
the	O	O:0.999969
result	O	O:0.999684
of	O	O:0.999978
the	O	O:0.999776
`	O	O:0.999995
diff	B-API	B-API:0.873903
`	O	O:0.999996
so	O	O:0.999949
I	O	O:0.999999
don't	O	O:0.999981
lose	O	O:0.999340
the	O	O:0.999976
first	O	O:0.996362
row	O	O:0.999250
	
Using	O	O:0.997084
`	O	O:0.999921
diff	B-API	B-API:0.962151
`	O	O:0.999984
like	O	O:0.999836
this	O	O:0.999986
drops	O	O:0.999346
the	O	O:0.999976
first	O	O:0.996548
row	O	O:0.999389
.	O	O:0.999675
	
(	O	O:0.999974
I	O	O:0.999988
can	O	O:0.999987
also	O	O:0.999882
use	O	O:0.999982
the	O	O:0.997198
chunksize	O	B-API:0.950544
option	O	O:0.996160
and	O	O:0.999526
concat	O	B-API:0.734248
myself	O	O:0.981086
,	O	O:0.999871
but	O	O:0.999925
that	O	O:0.999797
seems	O	O:0.999908
to	O	O:0.999993
be	O	O:0.999998
a	O	O:0.999992
bit	O	O:0.999785
of	O	O:0.999960
a	O	O:0.999828
hack	O	O:0.996438
.	O	O:0.999767
)	O	O:0.999681
	
Jeff	O	O:0.999435
,	O	O:0.999923
I	O	O:0.999956
updated	O	O:0.998376
sec_id	O	O:0.975767
and	O	O:0.999854
dt	B-API	O:0.949058
in	O	O:0.999820
the	O	O:0.999881
dataframe	O	O:0.996578
.	O	O:0.999588
	
Sorry	O	O:0.999615
,	O	O:0.999942
I	O	O:0.999985
had	O	O:0.999923
to	O	O:0.999747
update	O	O:0.997988
"	O	O:0.999715
sec_id	O	O:0.987994
"	O	O:0.999627
and	O	O:0.999466
"	O	O:0.999849
dt	O	O:0.708263
"	O	O:0.999834
to	O	O:0.999093
"	O	O:0.999949
id	O	O:0.997853
"	O	O:0.999539
and	O	O:0.999670
"	O	O:0.999960
date	O	O:0.996862
"	O	O:0.999719
.	O	O:0.999327
	
0.12	O	O:0.990067
is	O	O:0.999992
fine	O	O:0.999517
;	O	O:0.999989
FYI	O	O:0.999832
the	O	O:0.999850
format	O	O:0.993226
keyword	O	O:0.999299
doesn't	O	O:0.999859
do	O	O:0.999963
anything	O	O:0.999909
with	O	O:0.990337
append	B-API	B-API:0.927476
(	O	O:0.999391
and	O	O:0.999730
it's	O	O:0.999294
for	O	O:0.999539
0.13	O	O:0.994117
anyhow	O	O:0.996870
);	O	O:0.997527
append	B-API	B-API:0.673768
always	O	O:0.998886
is	O	O:0.999970
a	O	O:0.999945
table	O	O:0.994656
	
I	O	O:0.999700
would	O	O:0.999958
like	O	O:0.999364
to	O	O:0.999978
get	O	O:0.999960
every	O	O:0.999525
,	O	O:0.999984
let's	O	O:0.999902
say	O	O:0.999858
,	O	O:0.999968
6	O	O:0.999980
hours	O	O:0.999532
of	O	O:0.999991
data	O	O:0.996438
and	O	O:0.999970
independently	O	O:0.999814
fit	O	O:0.998456
a	O	O:0.999980
curve	O	O:0.996308
to	O	O:0.999992
that	O	O:0.999978
data	O	O:0.999811
.	O	O:0.999820
	
Since	O	O:0.999481
pandas	O	O:0.997128
'	O	O:0.999925
`	O	O:0.999936
resample	B-API	B-API:0.725961
`	O	O:0.999928
function	O	O:0.999662
has	O	O:0.999995
a	O	O:0.999942
`	O	O:0.999886
how	O	O:0.992296
`	O	O:0.999946
keyword	O	O:0.999224
that	O	O:0.999727
is	O	O:0.999995
supposed	O	O:0.999827
to	O	O:0.999974
be	O	O:0.999997
any	O	O:0.999922
numpy	O	O:0.999230
array	O	O:0.994757
function	O	O:0.999795
,	O	O:0.999963
I	O	O:0.999982
thought	O	O:0.999947
that	O	O:0.998537
I	O	O:0.999986
could	O	O:0.999859
maybe	O	O:0.999832
try	O	O:0.999963
to	O	O:0.999952
use	O	O:0.999987
resample	B-API	O:0.647542
to	O	O:0.999924
do	O	O:0.999997
that	O	O:0.999955
with	O	O:0.999846
`	O	O:0.999933
polyfit	B-API	B-API:0.977943
`	O	O:0.999795
,	O	O:0.999922
but	O	O:0.999985
apparently	O	O:0.999775
there	O	O:0.995451
is	O	O:0.999977
no	O	O:0.999149
way	O	O:0.999538
(	O	O:0.999957
right	O	O:0.999674
?	O	O:0.999985
)	O	O:0.999609
.	O	O:0.999276
	
Why	O	O:0.999969
does	O	O:0.999259
the	O	O:0.999837
second	O	O:0.999602
block	O	O:0.999643
of	O	O:0.999982
code	O	O:0.999192
not	O	O:0.999848
work	O	O:0.997700
?	O	O:0.999962
	
Doesn't	O	O:0.997893
DataFrame.apply()	B-API	B-API:0.994851
default	O	O:0.994061
to	O	O:0.999920
inplace	O	O:0.999752
?	O	O:0.999966
	
There	O	O:0.997768
is	O	O:0.999938
no	O	O:0.999856
inplace	O	O:0.999809
parameter	O	O:0.999718
to	O	O:0.999973
the	O	O:0.999997
apply	B-API	B-API:0.886145
function	O	O:0.996369
.	O	O:0.999736
	
Even	O	O:0.997286
if	O	O:0.999905
it	O	O:0.999947
doesn't	O	O:0.999687
default	O	O:0.999022
to	O	O:0.999890
inplace	O	O:0.999703
,	O	O:0.999963
shouldn't	O	O:0.999775
it	O	O:0.999971
provide	O	O:0.998759
an	O	O:0.999980
inplace	O	O:0.999457
parameter	O	O:0.999787
the	O	O:0.999917
way	O	O:0.999027
replace()	B-API	B-API:0.844159
does	O	O:0.998494
?	O	O:0.999992
	
No	O	O:0.999957
,	O	O:0.999984
apply	B-API	O:0.881054
does	O	O:0.995590
not	O	O:0.999464
work	O	O:0.996962
inplace*	O	O:0.998439
.	O	O:0.999764
	
In	O	O:0.999936
general	O	O:0.998590
apply	B-API	O:0.626310
is	O	O:0.999926
slow	O	O:0.997169
(	O	O:0.999995
since	O	O:0.999902
you	O	O:0.999922
are	O	O:0.999982
basically	O	O:0.999823
iterating	O	O:0.998551
through	O	O:0.999802
each	O	O:0.998947
row	O	O:0.999834
in	O	O:0.999928
python	O	O:0.997180
)	O	O:0.999878
,	O	O:0.999444
and	O	O:0.999941
the	O	O:0.998705
"	O	O:0.999684
game	O	O:0.999023
"	O	O:0.999933
is	O	O:0.999989
to	O	O:0.999766
rewrite	O	O:0.999987
that	O	O:0.998105
function	O	O:0.999909
in	O	O:0.999990
terms	O	O:0.999709
of	O	O:0.999956
pandas	O	O:0.995334
/	O	O:0.999958
numpy	O	O:0.997396
native	O	O:0.994076
functions	O	O:0.995337
and	O	O:0.999578
indexing	O	O:0.997923
.	O	O:0.996582
	
If	O	O:0.999922
you	O	O:0.999924
want	O	O:0.999878
to	O	O:0.999922
delve	O	O:0.999912
into	O	O:0.999982
more	O	O:0.999930
details	O	O:0.999439
about	O	O:0.999707
the	O	O:0.999515
internals	O	O:0.999500
,	O	O:0.999991
check	O	O:0.999341
out	O	O:0.999961
the	O	O:0.999549
BlockManager	O	O:0.956172
in	O	O:0.999951
core	O	O:0.980451
/	O	O:0.999962
internals.py	O	O:0.903361
,	O	O:0.999997
this	O	O:0.999264
is	O	O:0.999951
the	O	O:0.999591
object	O	O:0.995458
which	O	O:0.999548
holds	O	O:0.999674
the	O	O:0.999983
underlying	O	O:0.998742
numpy	O	O:0.985423
arrays	O	O:0.998667
.	O	O:0.999781
	
*	O	O:0.999572
apply	B-API	B-API:0.857553
is	O	O:0.999914
not	O	O:0.998731
usually	O	O:0.999771
going	O	O:0.998344
to	O	O:0.999964
make	O	O:0.999647
sense	O	O:0.999417
inplace	O	O:0.993981
(	O	O:0.999942
and	O	O:0.998811
IMO	O	O:0.999976
this	O	O:0.999662
behaviour	O	O:0.999067
would	O	O:0.999332
rarely	O	O:0.999069
be	O	O:0.999982
desired	O	O:0.995409
)	O	O:0.999216
.	O	O:0.997859
	
I	O	O:0.999871
use	O	O:0.999988
this	O	O:0.964463
function	O	O:0.999201
with	O	O:0.999527
pandas	O	O:0.998043
to	O	O:0.999987
apply	O	O:0.955580
it	O	O:0.999923
to	O	O:0.999981
each	O	O:0.999989
month	O	O:0.999952
of	O	O:0.999960
a	O	O:0.999851
historical	O	O:0.761042
record	O	O:0.985027
:	O	O:0.999925
#CODE	O	O:0.999466
	
I	O	O:0.999945
am	O	O:0.999988
trying	O	O:0.998248
to	O	O:0.999955
merge	O	O:0.964211
tsv	O	O:0.999795
files	O	O:0.999004
using	O	O:0.998892
pandas	O	O:0.975699
but	O	O:0.998939
cannot	O	O:0.994675
get	O	O:0.999690
pandas	O	O:0.998919
to	O	O:0.999952
return	O	O:0.998671
the	O	O:0.999920
file	O	O:0.999663
contents	O	O:0.999740
correctly	O	O:0.999785
.	O	O:0.999904
	
You	O	O:0.999946
can	O	O:0.999692
use	O	O:0.999924
the	O	O:0.999840
vectorised	O	O:0.991399
`	O	O:0.999954
str	B-API	O:0.974916
`	O	O:0.999996
methods	O	O:0.996070
to	O	O:0.999988
replace	O	O:0.998213
the	O	O:0.999939
unwanted	O	O:0.997758
characters	O	O:0.998598
and	O	O:0.999981
then	O	O:0.999915
cast	O	O:0.998165
the	O	O:0.999994
type	O	O:0.997620
to	O	O:0.999906
int	O	O:0.998294
:	O	O:0.999981
#CODE	O	O:0.999390
	
perhaps	O	O:0.989643
`	O	O:0.999924
reindex	B-API	B-API:0.850367
`	O	O:0.999989
creates	O	O:0.999151
a	O	O:0.999998
new	O	O:0.999703
dataframe	O	O:0.999379
,	O	O:0.999881
`	O	O:0.999941
ix	B-API	B-API:0.879596
`	O	O:0.999983
returns	O	O:0.999653
a	O	O:0.999993
view	O	O:0.938543
	
@USER	O	O:0.999744
you	O	O:0.999621
are	O	O:0.999929
,	O	O:0.999996
of	O	O:0.999953
course	O	O:0.996903
,	O	O:0.999998
absolutely	O	O:0.999624
right	O	O:0.994751
.	O	O:0.999980
what	O	O:0.999878
do	O	O:0.999867
`	O	O:0.999983
loc	B-API	B-API:0.958888
`	O	O:0.999917
and	O	O:0.987906
`	O	O:0.999986
iloc	B-API	B-API:0.995243
`	O	O:0.999977
do	O	O:0.997284
?	O	O:0.999992
	
The	O	O:0.999868
reason	O	O:0.997255
for	O	O:0.999897
the	O	O:0.999788
seeming	O	O:0.999319
redundancy	O	O:0.997243
is	O	O:0.999994
that	O	O:0.999622
,	O	O:0.999995
while	O	O:0.999828
using	O	O:0.996961
`	O	O:0.999583
ix	B-API	B-API:0.930949
`	O	O:0.999875
is	O	O:0.999951
syntacticly	O	O:0.999441
limiting	O	O:0.975024
(	O	O:0.999988
you	O	O:0.999846
can	O	O:0.999977
only	O	O:0.999997
pass	O	O:0.999919
a	O	O:0.999994
single	O	O:0.998875
argument	O	O:0.999808
to	O	O:0.999752
`	O	O:0.999986
__getitem__	O	B-API:0.968318
`)	O	O:0.999904
,	O	O:0.999774
`	O	O:0.999975
reindex	B-API	B-API:0.944268
`	O	O:0.999959
is	O	O:0.999829
a	O	O:0.999887
method	O	O:0.995816
,	O	O:0.999896
which	O	O:0.999062
supports	O	O:0.999765
taking	O	O:0.999487
various	O	O:0.998054
optional	O	O:0.998548
parameters	O	O:0.994581
.	O	O:0.999704
	
I	O	O:0.999972
am	O	O:0.999980
getting	O	O:0.998944
different	O	O:0.998878
results	O	O:0.999479
when	O	O:0.999754
using	O	O:0.999723
`	O	O:0.999726
reindex	B-API	B-API:0.994348
`	O	O:0.999984
with	O	O:0.996615
`	O	O:0.999970
inplace=True	O	O:0.996764
`	O	O:0.999992
vs	O	O:0.999929
using	O	O:0.999664
`	O	O:0.999638
ix	B-API	B-API:0.974219
`	O	O:0.999935
(	O	O:0.999905
I	O	O:0.999996
updated	O	O:0.999933
the	O	O:0.999508
OP	O	O:0.999645
)	O	O:0.999235
	
What	O	O:0.999459
if	O	O:0.999941
you	O	O:0.999910
have	O	O:0.999905
many	O	O:0.999441
conditions	O	O:0.999200
,	O	O:0.999995
e.g.	O	O:0.999513
you	O	O:0.999855
want	O	O:0.999962
to	O	O:0.999988
split	O	O:0.998379
up	O	O:0.999981
the	O	O:0.999804
scatters	O	O:0.999852
into	O	O:0.999648
4	O	O:0.999999
types	O	O:0.995782
of	O	O:0.999975
points	O	O:0.997401
or	O	O:0.999988
even	O	O:0.999639
more	O	O:0.999759
,	O	O:0.999995
plotting	O	O:0.999705
each	O	O:0.997120
in	O	O:0.999980
different	O	O:0.999640
shape	O	O:0.999375
/	O	O:0.999897
color	O	O:0.998056
.	O	O:0.999749
	
How	O	O:0.999792
can	O	O:0.999696
you	O	O:0.999995
elegantly	O	O:0.999973
apply	O	O:0.879458
condition	O	O:0.998550
a	O	O:0.999976
,	O	O:0.999954
b	O	O:0.999716
,	O	O:0.999980
c	O	O:0.998600
,	O	O:0.999968
etc	O	O:0.999568
.	O	O:0.999375
and	O	O:0.999953
make	O	O:0.999704
sure	O	O:0.999385
you	O	O:0.999963
then	O	O:0.999935
plot	O	O:0.998580
"	O	O:0.999980
the	O	O:0.999961
rest	O	O:0.993712
"	O	O:0.999488
(	O	O:0.999947
things	O	O:0.999760
not	O	O:0.999593
in	O	O:0.999984
any	O	O:0.999908
of	O	O:0.999956
these	O	O:0.998794
conditions	O	O:0.999627
)	O	O:0.999972
as	O	O:0.999898
the	O	O:0.999968
last	O	O:0.998675
step	O	O:0.999155
?	O	O:0.999976
	
To	O	O:0.999963
find	O	O:0.999515
points	O	O:0.998829
skipped	O	O:0.999901
due	O	O:0.999944
to	O	O:0.999941
NA	O	O:0.999759
,	O	O:0.999993
try	O	O:0.999959
the	O	O:0.999420
`	O	O:0.999331
isnull	B-API	B-API:0.998298
`	O	O:0.999852
method	O	O:0.983333
:	O	O:0.999993
`	O	O:0.999970
df	O	O:0.996775
[	O	O:0.999997
df.col3.isnull()	O	O:0.834872
]`	O	O:0.999370
	
How	O	O:0.999951
do	O	O:0.999931
I	O	O:0.999995
create	O	O:0.999883
a	O	O:0.999962
pivot	O	O:0.966631
table	O	O:0.999293
in	O	O:0.999970
Pandas	O	O:0.999862
where	O	O:0.999673
one	O	O:0.999853
column	O	O:0.998684
is	O	O:0.999987
the	O	O:0.999978
mean	O	O:0.995078
of	O	O:0.999991
some	O	O:0.999717
values	O	O:0.999643
,	O	O:0.999968
and	O	O:0.999961
the	O	O:0.999891
other	O	O:0.999493
column	O	O:0.998723
is	O	O:0.999992
the	O	O:0.999979
sum	O	O:0.998244
of	O	O:0.999882
others	O	O:0.998882
?	O	O:0.999982
	
Basically	O	O:0.998751
,	O	O:0.999956
how	O	O:0.999804
would	O	O:0.999746
I	O	O:0.999996
create	O	O:0.999974
a	O	O:0.999971
pivot	O	O:0.949537
table	O	O:0.999910
that	O	O:0.999891
consolidates	O	O:0.999680
data	O	O:0.999935
,	O	O:0.999997
where	O	O:0.999949
one	O	O:0.999915
of	O	O:0.999980
the	O	O:0.999922
columns	O	O:0.999528
of	O	O:0.999990
data	O	O:0.999655
it	O	O:0.999996
represents	O	O:0.999573
is	O	O:0.999978
calculated	O	O:0.999307
,	O	O:0.999996
say	O	O:0.999877
,	O	O:0.999990
by	O	O:0.999805
`	O	O:0.999931
likelihood	O	O:0.999478
percentage	O	O:0.999294
`	O	O:0.999640
(	O	O:0.999804
0.0	O	O:0.998880
-	O	O:0.999992
1.0	O	O:0.994127
)	O	O:0.999968
by	O	O:0.999709
taking	O	O:0.999631
the	O	O:0.999744
mean	O	O:0.922569
,	O	O:0.999984
and	O	O:0.999951
another	O	O:0.998317
is	O	O:0.999849
calculated	O	O:0.999376
by	O	O:0.999936
`	O	O:0.999906
number	O	O:0.994598
ordered	O	O:0.999476
`	O	O:0.999905
which	O	O:0.999776
sums	O	O:0.999936
all	O	O:0.999869
of	O	O:0.999996
them	O	O:0.996354
?	O	O:0.999976
	
I	O	O:0.999953
think	O	O:0.999968
that	O	O:0.997363
I	O	O:0.999979
understand	O	O:0.998487
what's	O	O:0.999423
going	O	O:0.996591
on	O	O:0.999866
:	O	O:0.999992
create	O	O:0.999975
a	O	O:0.999997
frequency	O	O:0.999987
table	O	O:0.999432
of	O	O:0.999886
ALL	O	O:0.998356
words	O	O:0.999039
.	O	O:0.999425
	
After	O	O:0.999762
each	O	O:0.996999
operation	O	O:0.999766
,	O	O:0.999998
drop	O	O:0.992003
all	O	O:0.999680
relevant	O	O:0.999449
columns	O	O:0.996044
,	O	O:1.000000
then	O	O:0.999931
finally	O	O:0.999947
count	O	O:0.997079
all	O	O:0.999880
remaining	O	O:0.999315
columns	O	O:0.983428
.	O	O:0.999886
	
Also	O	O:0.999578
,	O	O:0.999985
I	O	O:0.999987
quickly	O	O:0.999004
tried	O	O:0.999433
this	O	O:0.998889
in	O	O:0.999475
Python	O	O:0.997592
3.4.3	O	O:0.998270
and	O	O:0.999586
I	O	O:0.999979
got	O	O:0.999864
the	O	O:0.999490
error	O	O:0.999836
that	O	O:0.999444
freqDf	O	O:0.650922
isn't	O	O:0.999267
defined	O	O:0.995047
.	O	O:0.999185
	
Should	O	O:0.999212
I	O	O:0.999995
first	O	O:0.999900
create	O	O:0.999039
a	O	O:0.999959
new	O	O:0.999851
table	O	O:0.999462
named	O	O:0.999218
freqDf	O	B-API:0.693770
?	O	O:0.999843
	
`	O	O:0.999680
df.precedingWord.isin	O	O:0.622685
(	O	O:0.999981
neuter	O	O:0.999394
)`	O	O:0.999462
is	O	O:0.999991
just	O	O:0.999875
a	O	O:0.999996
Series	O	O:0.963246
of	O	O:0.999929
True	O	O:0.995667
or	O	O:0.999919
False	O	O:0.987730
(	O	O:0.999989
results	O	O:0.999747
of	O	O:0.999984
the	O	O:0.999865
previous	O	O:0.999854
test	O	O:0.959555
`	O	O:0.999978
isin	B-API	B-API:0.930458
`)	O	O:0.999717
,	O	O:0.999462
and	O	O:0.999911
pandas	O	O:0.995590
will	O	O:0.999515
just	O	O:0.998542
access	O	O:0.999216
True	O	O:0.991731
indexes	O	O:0.998340
with	O	O:0.999495
`	O	O:0.999907
loc	B-API	B-API:0.898831
`	O	O:0.999867
	
I	O	O:0.999983
have	O	O:0.999913
tried	O	O:0.999692
a	O	O:0.999992
some	O	O:0.998972
join	B-API	B-API:0.776448
/	O	O:0.999898
merge	B-API	B-API:0.731299
ideas	O	O:0.999256
but	O	O:0.999655
can't	O	O:0.999845
seem	O	O:0.999782
to	O	O:0.999959
get	O	O:0.999965
it	O	O:0.999958
to	O	O:0.999931
work	O	O:0.999495
.	O	O:0.999832
	
Just	O	O:0.997231
`	O	O:0.999823
concat	B-API	B-API:0.992062
`	O	O:0.999998
them	O	O:0.994654
and	O	O:0.999993
pass	O	O:0.999531
param	O	O:0.993823
`	O	O:0.999971
axis=1	O	O:0.946450
`	O	O:0.999586
:	O	O:0.999870
#CODE	O	O:0.999873
	
Or	O	O:0.999798
`	O	O:0.999884
merge	B-API	B-API:0.817895
`	O	O:0.999962
on	O	O:0.998902
'	O	O:0.999982
Symbol	O	O:0.996018
'	O	O:0.999861
column	O	O:0.990255
:	O	O:0.999978
#CODE	O	O:0.999501
	
Pandas	O	O:0.997443
:	O	O:0.999985
join	O	O:0.578564
with	O	O:0.999902
outer	O	O:0.999403
product	O	O:0.997581
	
How	O	O:0.999767
to	O	O:0.999975
join	O	O:0.779396
/	O	O:0.999986
multiply	O	O:0.940457
the	O	O:0.999969
DataFrames	O	O:0.987070
`	O	O:0.999963
areas	O	O:0.996319
`	O	O:0.999981
and	O	O:0.997241
`	O	O:0.999964
demand	O	O:0.986616
`	O	O:0.999980
together	O	O:0.999376
in	O	O:0.999991
a	O	O:0.999944
decent	O	O:0.997384
way	O	O:0.999081
?	O	O:0.999871
	
Now	O	O:0.999750
`	O	O:0.999961
apply	B-API	B-API:0.921344
`	O	O:0.999972
needs	O	O:0.995860
to	O	O:0.999989
return	O	O:0.999787
a	O	O:0.999829
`	O	O:0.999902
Series	B-API	O:0.634166
`	O	O:0.999905
,	O	O:0.999968
not	O	O:0.999985
a	O	O:0.999935
`	O	O:0.999947
DataFrame	O	O:0.927296
`	O	O:0.999894
.	O	O:0.998647
	
One	O	O:0.999891
way	O	O:0.999775
to	O	O:0.999987
turn	O	O:0.999982
a	O	O:0.999968
`	O	O:0.999963
DataFrame	O	O:0.934932
`	O	O:0.999993
into	O	O:0.999704
a	O	O:0.999993
`	O	O:0.999690
Series	B-API	O:0.815776
`	O	O:0.999968
is	O	O:0.999959
to	O	O:0.999984
use	O	O:0.999968
`	O	O:0.999832
stack	B-API	B-API:0.926003
`	O	O:0.999921
.	O	O:0.998912
	
`	O	O:0.999853
stack	B-API	B-API:0.885062
`	O	O:0.999995
this	O	O:0.999338
DataFrame	O	O:0.998596
.	O	O:0.999195
	
This	O	O:0.999805
can	O	O:0.999777
be	O	O:0.999998
done	O	O:0.999941
with	O	O:0.999518
`	O	O:0.999805
unstack	B-API	B-API:0.986396
`	O	O:0.999574
:	O	O:0.999898
#CODE	O	O:0.999863
	
`	O	O:0.999936
del	O	O:0.892349
`	O	O:0.999988
+	O	O:0.997399
`	O	O:0.999990
pivot	B-API	O:0.583966
`	O	O:0.999992
turns	O	O:0.999524
out	O	O:0.999990
to	O	O:0.999977
be	O	O:0.999984
faster	O	O:0.999979
than	O	O:0.997515
`	O	O:0.999869
pivot_table	B-API	B-API:0.993587
`	O	O:0.999858
in	O	O:0.999961
this	O	O:0.999967
case	O	O:0.998889
.	O	O:0.999814
	
Maybe	O	O:0.999522
the	O	O:0.999816
reason	O	O:0.988352
`	O	O:0.999979
pivot	B-API	O:0.535733
`	O	O:0.999993
exists	O	O:0.995416
is	O	O:0.999988
because	O	O:0.999395
it	O	O:0.999954
is	O	O:0.999946
faster	O	O:0.999962
than	O	O:0.998851
`	O	O:0.999846
pivot_table	B-API	B-API:0.987179
`	O	O:0.999965
for	O	O:0.999924
those	O	O:0.999797
cases	O	O:0.996248
where	O	O:0.999730
it	O	O:0.999897
is	O	O:0.999985
applicable	O	O:0.996523
(	O	O:0.999995
such	O	O:0.999953
as	O	O:0.999991
when	O	O:0.998025
you	O	O:0.999902
don't	O	O:0.999961
need	O	O:0.999669
aggregation	O	O:0.999149
)	O	O:0.999853
.	O	O:0.997402
	
`	O	O:0.999917
apply	B-API	B-API:0.834910
`	O	O:0.999844
is	O	O:0.999737
now	O	O:0.999931
among	O	O:0.999881
my	O	O:0.999870
top	O	O:0.997949
5	O	O:0.999911
functions	O	O:0.999467
to	O	O:0.999952
always	O	O:0.999922
remember	O	O:0.999045
.	O	O:0.998834
	
Concerning	O	O:0.999438
the	O	O:0.998844
`	O	O:0.999926
pivot_table	B-API	B-API:0.989348
`	O	O:0.999950
solution	O	O:0.998473
:	O	O:0.999997
At	O	O:0.999960
which	O	O:0.999890
point	O	O:0.999918
am	O	O:0.999967
I	O	O:0.999995
supposed	O	O:0.999990
to	O	O:0.999855
enter	O	O:0.997688
the	O	O:0.999958
line	O	O:0.998569
?	O	O:0.999980
	
No	O	O:0.999936
matter	O	O:0.999673
when	O	O:0.997624
in	O	O:0.999988
my	O	O:0.999952
attempt	O	O:0.999536
above	O	O:0.999711
,	O	O:0.999914
I	O	O:0.999986
always	O	O:0.999862
get	O	O:0.995190
`	O	O:0.999826
no	O	O:0.999693
item	O	O:0.999906
named	O	O:0.999833
Edge	O	O:0.998919
`	O	O:0.999731
.	O	O:0.997621
	
Or	O	O:0.999994
pass	O	O:0.995208
`	O	O:0.999981
axis=0	O	O:0.994008
`	O	O:0.999986
to	O	O:0.999108
`	O	O:0.999997
loc	B-API	B-API:0.961222
`	O	O:0.999736
:	O	O:0.999501
#CODE	O	O:0.999842
	
I've	O	O:0.999325
got	O	O:0.999302
2	O	O:0.999933
pandas	O	O:0.999310
dataframes	O	O:0.999629
,	O	O:0.999998
each	O	O:0.999756
of	O	O:0.999993
them	O	O:0.999691
has	O	O:0.999836
an	O	O:0.999664
index	O	O:0.999519
with	O	O:0.999896
dtype	B-API	B-API:0.991110
`	O	O:0.999930
object	O	O:0.959544
`	O	O:0.999953
,	O	O:0.999617
and	O	O:0.999928
in	O	O:0.999981
both	O	O:0.999134
of	O	O:0.999999
them	O	O:0.999731
I	O	O:0.999998
can	O	O:0.999907
see	O	O:0.999967
the	O	O:0.999989
value	O	O:0.997902
`	O	O:0.999964
533	O	O:0.984597
`	O	O:0.999956
.	O	O:0.997669
	
However	O	O:0.999332
,	O	O:0.999992
when	O	O:0.999334
I	O	O:0.999998
join	B-API	O:0.981272
them	O	O:0.999695
the	O	O:0.999883
result	O	O:0.994374
is	O	O:0.999990
empty	O	O:0.999232
,	O	O:0.999998
as	O	O:0.999990
one	O	O:0.999772
of	O	O:0.999998
them	O	O:0.998820
is	O	O:0.999993
the	O	O:0.999710
number	O	O:0.990851
`	O	O:0.999916
533	O	O:0.994364
`	O	O:0.999942
and	O	O:0.999646
the	O	O:0.999971
other	O	O:0.998047
is	O	O:0.999987
a	O	O:0.999949
string	O	O:0.995008
`"	O	O:0.999086
533	O	O:0.985085
"`	O	O:0.999589
.	O	O:0.997689
	
Ideally	O	O:0.998981
I	O	O:0.999863
would	O	O:0.999948
like	O	O:0.999180
something	O	O:0.999978
like	O	O:0.998946
`	O	O:0.999959
apply_chunk()	O	B-API:0.698582
`	O	O:0.999873
which	O	O:0.996552
is	O	O:0.999989
the	O	O:0.999963
same	O	O:0.999856
as	O	O:0.999931
apply	B-API	O:0.734112
but	O	O:0.999863
only	O	O:0.998556
works	O	O:0.999715
on	O	O:0.999992
a	O	O:0.999998
piece	O	O:0.998875
of	O	O:0.999956
the	O	O:0.999790
dataframe	O	O:0.998456
.	O	O:0.999527
	
This	O	O:0.999815
has	O	O:0.999939
to	O	O:0.999987
be	O	O:0.999999
a	O	O:0.999954
common	O	O:0.994670
problem	O	O:0.999184
though	O	O:0.999466
,	O	O:0.999908
is	O	O:0.999990
there	O	O:0.999453
a	O	O:0.999975
design	O	O:0.998127
pattern	O	O:0.985061
I	O	O:0.999958
should	O	O:0.999895
be	O	O:0.999943
using	O	O:0.999526
for	O	O:0.998420
adding	O	O:0.996043
columns	O	O:0.990798
to	O	O:0.999892
large	O	O:0.999944
pandas	O	O:0.998409
dataframes	O	O:0.999597
?	O	O:0.999950
	
whats	O	O:0.999390
about	O	O:0.999618
using	O	O:0.999721
the	O	O:0.990845
apply	B-API	B-API:0.974734
method	O	O:0.984696
?	O	O:0.999886
	
Anytime	O	O:0.999669
you	O	O:0.999803
find	O	O:0.999820
yourself	O	O:0.999940
using	O	O:0.999676
`	O	O:0.999841
apply	B-API	B-API:0.966211
`	O	O:0.999937
or	O	O:0.997271
`	O	O:0.999987
iloc	B-API	B-API:0.975759
`	O	O:0.999987
in	O	O:0.999563
a	O	O:0.999995
loop	O	O:0.996762
it's	O	O:0.999688
likely	O	O:0.998984
that	O	O:0.999509
Pandas	O	O:0.999091
is	O	O:0.999963
operating	O	O:0.999764
much	O	O:0.997875
slower	O	O:0.999980
than	O	O:0.994490
is	O	O:0.999880
optimal	O	O:0.984244
.	O	O:0.999667
	
Convert	O	O:0.999004
freq	O	O:0.964735
string	O	O:0.998830
to	O	O:0.999724
DateOffset	B-API	O:0.621946
in	O	O:0.999864
pandas	O	O:0.994158
	
In	O	O:0.999930
pandas	O	O:0.998711
documentation	O	O:0.999926
one	O	O:0.999515
can	O	O:0.999836
read	O	O:0.999682
"	O	O:0.999965
Under	O	O:0.999674
the	O	O:0.999817
hood	O	O:0.994868
,	O	O:0.999997
these	O	O:0.999955
frequency	O	O:0.999888
strings	O	O:0.995824
are	O	O:0.999839
being	O	O:0.998873
translated	O	O:0.999888
into	O	O:0.998388
an	O	O:0.999991
instance	O	O:0.999581
of	O	O:0.999924
pandas	O	O:0.993852
DateOffset	B-API	B-API:0.516780
"	O	O:0.999838
when	O	O:0.999322
speaking	O	O:0.999951
of	O	O:0.999976
freq	O	O:0.887408
string	O	O:0.999783
such	O	O:0.999763
as	O	O:0.999962
"	O	O:0.999381
W	O	O:0.999369
"	O	O:0.999919
or	O	O:0.999288
"	O	O:0.999613
W-SUN	O	O:0.987975
"	O	O:0.999271
.	O	O:0.998733
	
stack	O	O:0.697929
/	O	O:0.999606
unstack	O	B-API:0.848988
/	O	O:0.999858
pivot	O	O:0.947642
dataframe	O	O:0.999847
on	O	O:0.999922
python	O	O:0.998415
/	O	O:0.999938
pandas	O	O:0.982228
	
yes	O	O:0.999544
,	O	O:0.999915
`	O	O:0.999906
isnull	B-API	B-API:0.994674
`	O	O:0.999988
will	O	O:0.994858
create	O	O:0.999928
a	O	O:0.999993
boolean	O	O:0.998238
series	O	O:0.999075
,	O	O:0.999963
`	O	O:0.999976
all	B-API	O:0.991249
`	O	O:0.999990
returns	O	O:0.989900
`	O	O:0.999988
True	O	O:0.991119
`	O	O:0.999991
if	O	O:0.999876
all	O	O:0.999915
are	O	O:0.999106
`	O	O:0.999903
True	O	O:0.953771
`	O	O:0.999921
	
Then	O	O:0.999179
merge	O	O:0.930482
the	O	O:0.999917
sub-tables	O	O:0.999807
back	O	O:0.999490
together	O	O:0.999989
in	O	O:0.999991
a	O	O:0.999910
way	O	O:0.999821
that	O	O:0.999341
replaces	O	O:0.999691
NaN	O	O:0.998298
values	O	O:0.999230
when	O	O:0.999633
there	O	O:0.999692
is	O	O:0.999997
data	O	O:0.999635
in	O	O:0.999992
one	O	O:0.999942
of	O	O:0.999951
the	O	O:0.999774
tables	O	O:0.994779
.	O	O:0.999628
	
I	O	O:0.999977
regularly	O	O:0.999672
work	O	O:0.992980
with	O	O:0.999965
very	O	O:0.999875
large	O	O:0.999946
data	O	O:0.999850
sets	O	O:0.999941
that	O	O:0.999889
are	O	O:0.999944
too	O	O:0.999932
big	O	O:0.999921
to	O	O:0.999933
manipulate	O	O:0.999626
in	O	O:0.999925
memory	O	O:0.998696
.	O	O:0.999637
	
I	O	O:0.999650
would	O	O:0.999954
like	O	O:0.998515
to	O	O:0.999989
read	O	O:0.999712
in	O	O:0.999990
a	O	O:0.999990
csv	O	O:0.999435
file	O	O:0.999743
iteratively	O	O:0.999614
,	O	O:0.999956
append	O	O:0.947839
each	O	O:0.991737
chunk	O	O:0.999671
into	O	O:0.999468
HDFStore	B-API	O:0.951611
object	O	O:0.994598
,	O	O:0.999910
and	O	O:0.999957
then	O	O:0.998716
work	O	O:0.999790
with	O	O:0.999972
subsets	O	O:0.999469
of	O	O:0.999991
the	O	O:0.999950
data	O	O:0.999337
.	O	O:0.999723
	
If	O	O:0.999924
you	O	O:0.999671
replace	O	O:0.998443
that	O	O:0.999938
line	O	O:0.999938
with	O	O:0.999330
:	O	O:0.999891
	
I	O	O:0.999894
wanted	O	O:0.999656
to	O	O:0.999646
merge	O	O:0.982952
these	O	O:0.999879
files	O	O:0.998738
so	O	O:0.999995
that	O	O:0.999855
i	O	O:0.999999
have	O	O:0.999663
something	O	O:0.999760
like	O	O:0.999762
this	O	O:0.999742
#CODE	O	O:0.999010
	
If	O	O:0.999855
it's	O	O:0.999606
six	O	O:0.999105
,	O	O:0.999998
then	O	O:0.999971
you	O	O:0.999976
can	O	O:0.999826
use	O	O:0.999924
join	B-API	B-API:0.950042
method	O	O:0.998464
by	O	O:0.999856
@USER	O	O:0.998396
Hayden	O	O:0.995112
.	O	O:0.999712
	
Then	O	O:0.999744
you	O	O:0.999978
can	O	O:0.999960
simply	O	O:0.999879
`	O	O:0.999994
join	B-API	B-API:0.986253
`	O	O:0.999997
them	O	O:0.986986
:	O	O:0.999991
#CODE	O	O:0.999473
	
@USER	O	O:0.999717
when	O	O:0.999239
you	O	O:0.999987
do	O	O:0.999994
a	O	O:0.999993
join	B-API	B-API:0.707545
with	O	O:0.999794
2x2	O	O:0.999891
duplicates	O	O:0.999259
you	O	O:0.999959
get	O	O:0.999857
4	O	O:0.999964
in	O	O:0.999949
the	O	O:0.999825
joined	O	O:0.993078
DataFrame	O	O:0.991093
.	O	O:0.999530
	
It's	O	O:0.999169
unclear	O	O:0.998396
how	O	O:0.999582
pandas	O	O:0.993726
should	O	O:0.999752
join	O	B-API:0.911157
in	O	O:0.999990
this	O	O:0.999944
case	O	O:0.999768
,	O	O:0.999995
so	O	O:0.999981
you	O	O:0.999968
need	O	O:0.999870
to	O	O:0.999984
be	O	O:0.999999
more	O	O:0.999788
explicit	O	O:0.999362
to	O	O:0.999867
it	O	O:0.999899
(	O	O:0.999861
and	O	O:0.999967
tell	O	O:0.997646
it	O	O:0.999978
what	O	O:0.999703
do	O	O:0.999948
you	O	O:0.999987
want	O	O:0.999341
)	O	O:0.999599
.	O	O:0.999319
	
On	O	O:0.999948
the	O	O:0.999775
similar	O	O:0.999824
note	O	O:0.999608
,	O	O:0.999986
is	O	O:0.999999
there	O	O:0.999603
a	O	O:0.999986
way	O	O:0.999293
to	O	O:0.999859
merge	O	O:0.857570
values	O	O:0.998595
based	O	O:0.996817
on	O	O:0.999807
index	O	O:0.994522
.	O	O:0.999818
	
For	O	O:0.999885
example	O	O:0.995787
,	O	O:0.999979
instead	O	O:0.999793
of	O	O:0.999870
listing	O	O:0.997143
Bact5	O	O:0.998743
in	O	O:0.999919
two	O	O:0.999950
rows	O	O:0.999906
,	O	O:0.999992
can	O	O:0.999899
we	O	O:0.999993
merge	O	O:0.818506
its	O	O:0.999940
value	O	O:0.999908
corresponding	O	O:0.999409
to	O	O:0.999873
file2	O	O:0.999714
in	O	O:0.999969
one	O	O:0.999874
row	O	O:0.999864
separated	O	O:0.999971
by	O	O:0.999990
a	O	O:0.999967
delimeter	O	O:0.993656
?	O	O:0.999892
	
Pandas	O	O:0.999425
dataframe	O	O:0.999525
insert	O	O:0.976520
rows	O	O:0.997800
	
I	O	O:0.999985
want	O	O:0.999694
to	O	O:0.999316
insert	O	O:0.998786
rows	O	O:0.999238
in	O	O:0.999792
DF	O	O:0.999796
and	O	O:0.999716
modify	O	O:0.996050
its	O	O:0.998580
related	O	O:0.996166
values	O	O:0.978911
:	O	O:0.999960
	
The	O	O:0.999985
code	O	O:0.999531
can	O	O:0.999974
only	O	O:0.999890
append	O	O:0.901206
rows	O	O:0.996658
but	O	O:0.999879
how	O	O:0.999914
to	O	O:0.999865
modify	O	O:0.999799
its	O	O:0.999824
values	O	O:0.998156
in	O	O:0.999987
a	O	O:0.999947
faster	O	O:0.999164
way	O	O:0.998804
?	O	O:0.999605
	
I	O	O:0.999985
want	O	O:0.999926
to	O	O:0.999728
use	O	O:0.999996
a	O	O:0.999426
function	O	O:0.999583
from	O	O:0.999628
an	O	O:0.999513
add-in	O	O:0.999601
in	O	O:0.999856
excel	O	O:0.994818
and	O	O:0.999935
apply	O	O:0.706795
it	O	O:0.999646
to	O	O:0.999984
some	O	O:0.999993
data	O	O:0.999933
i	O	O:0.999999
have	O	O:0.999807
simulated	O	O:0.999366
in	O	O:0.999919
python	O	O:0.994800
.	O	O:0.999776
	
I	O	O:0.999989
need	O	O:0.999787
to	O	O:0.999843
be	O	O:1.000000
able	O	O:0.999884
to	O	O:0.999976
call	O	O:0.997342
the	O	O:0.999892
add-in	O	O:0.992701
and	O	O:0.999922
apply	O	O:0.914613
my	O	O:0.999715
data	O	O:0.999368
indexes	O	O:0.994356
there	O	O:0.999717
...	O	O:0.999495
something	O	O:0.999317
along	O	O:0.999201
these	O	O:0.999147
lines	O	O:0.985750
:	O	O:0.999993
=	O	O:0.999977
add-in_name	O	O:0.997460
(	O	O:0.999973
data_range1	O	O:0.998985
,	O	O:0.999985
data_range2	O	O:0.998511
,	O	O:0.999947
"	O	O:0.999940
GGCV	O	O:0.992167
")	O	O:0.998878
	
After	O	O:0.999640
reading	O	O:0.995221
one	O	O:0.999953
line	O	O:0.999886
I	O	O:0.999985
append	O	O:0.880778
the	O	O:0.999646
dictionary	O	O:0.999080
to	O	O:0.999924
a	O	O:0.999999
list	O	O:0.993540
(	O	O:0.999992
so	O	O:0.999881
,	O	O:0.999997
the	O	O:0.999978
number	O	O:0.999596
of	O	O:0.999977
dictionaries	O	O:0.999335
in	O	O:0.999935
the	O	O:0.999970
list	O	O:0.967518
is	O	O:0.999996
equal	O	O:0.998043
to	O	O:0.999994
the	O	O:0.999989
number	O	O:0.999627
of	O	O:0.999968
lines	O	O:0.999226
in	O	O:0.999991
the	O	O:0.999981
file	O	O:0.996571
)	O	O:0.999807
.	O	O:0.999462
	
I	O	O:0.999967
can	O	O:0.999931
easily	O	O:0.999593
do	O	O:0.999988
this	O	O:0.999911
iteratively	O	O:0.999823
with	O	O:0.999483
loops	O	O:0.988160
,	O	O:0.999971
but	O	O:0.999576
I've	O	O:0.999629
read	O	O:0.998595
that	O	O:0.999733
you're	O	O:0.999952
supposed	O	O:0.999866
to	O	O:0.999970
slice	B-API	O:0.998886
/	O	O:0.999957
merge	B-API	O:0.649099
/	O	O:0.999971
join	B-API	O:0.623796
data	O	O:0.999883
frames	O	O:0.999853
holistically	O	O:0.999196
,	O	O:0.999992
so	O	O:0.999950
I'm	O	O:0.999964
trying	O	O:0.999852
to	O	O:0.999940
see	O	O:0.999995
if	O	O:0.999991
I	O	O:0.999995
can	O	O:0.999954
find	O	O:0.999851
a	O	O:0.999981
better	O	O:0.999847
way	O	O:0.999855
of	O	O:0.999613
doing	O	O:0.999063
this	O	O:0.998949
.	O	O:0.998601
	
A	O	O:0.999500
join	B-API	B-API:0.745562
will	O	O:0.999769
give	O	O:0.999889
me	O	O:0.999986
all	O	O:0.999935
the	O	O:0.999941
stuff	O	O:0.999066
that	O	O:0.999753
matches	O	O:0.995851
,	O	O:0.999975
but	O	O:0.999678
that's	O	O:0.999792
not	O	O:0.999030
exactly	O	O:0.999816
what	O	O:0.999570
I'm	O	O:0.999971
looking	O	O:0.999637
for	O	O:0.999529
,	O	O:0.999988
since	O	O:0.999103
I	O	O:0.999996
need	O	O:0.999953
a	O	O:0.999945
resulting	O	O:0.999650
dataframe	O	O:0.998733
for	O	O:0.999976
each	O	O:0.999050
key	O	O:0.986822
(	O	O:0.999966
i.e.	O	O:0.997415
for	O	O:0.999986
every	O	O:0.999230
row	O	O:0.999508
)	O	O:0.999922
in	O	O:0.999318
A	O	O:0.999698
.	O	O:0.999591
	
You	O	O:0.999862
then	O	O:0.999646
want	O	O:0.999950
to	O	O:0.999966
apply	O	O:0.997792
some	O	O:0.998562
function	O	O:0.999802
to	O	O:0.999995
each	O	O:0.999986
group	O	O:0.999862
of	O	O:0.999995
rows	O	O:0.998227
in	O	O:0.999945
`	O	O:0.999994
b	O	O:0.998616
`	O	O:0.999992
where	O	O:0.998303
the	O	O:0.999931
`	O	O:0.999832
b	O	O:0.997259
[	O	O:0.999993
"	O	O:0.999975
key	O	O:0.999265
"]`	O	O:0.999459
is	O	O:0.999972
one	O	O:0.999877
of	O	O:0.999977
the	O	O:0.999772
values	O	O:0.998556
in	O	O:0.999646
`	O	O:0.999994
keys	O	O:0.985238
`	O	O:0.999965
.	O	O:0.998592
	
Under	O	O:0.999639
the	O	O:0.999508
covers	O	O:0.996219
,	O	O:0.999996
these	O	O:0.999760
are	O	O:0.999932
really	O	O:0.999099
similar	O	O:0.999951
uses	O	O:0.999830
of	O	O:0.999898
`	O	O:0.999936
apply	B-API	B-API:0.906228
`	O	O:0.999656
.	O	O:0.996183
	
`	O	O:0.999646
loop_iter	O	O:0.997926
=	O	O:0.999954
len	B-API	B-API:0.938633
(	O	O:0.999983
A	O	O:0.999386
)	O	O:0.999942
/	O	O:0.998058
max	B-API	O:0.797143
(	O	O:0.999827
A	O	O:0.999764
[	O	O:0.999964
'	O	O:0.999871
SEQ_NUM	O	O:0.992925
'])	O	O:0.996387
	
Easy	O	O:0.999287
way	O	O:0.999914
to	O	O:0.999944
apply	O	O:0.969923
transformation	O	O:0.999914
from	O	O:0.999180
`	O	O:0.999964
pandas.get_dummies	B-API	B-API:0.721361
`	O	O:0.999993
to	O	O:0.999929
new	O	O:0.999996
data	O	O:0.999719
?	O	O:0.999979
	
As	O	O:0.999967
an	O	O:0.999881
aside	O	O:0.999960
that	O	O:0.999739
may	O	O:0.999974
help	O	O:0.997966
you	O	O:0.999873
in	O	O:0.999971
the	O	O:0.999964
meantime	O	O:0.997831
,	O	O:0.999995
with	O	O:0.999903
datetime-indexed	O	O:0.999897
data	O	O:0.999727
,	O	O:0.999993
[	O	O:0.999997
resample	B-API	B-API:0.537812
]	O	O:0.999804
(	O	O:0.999911
#URL	O	O:0.999868
)	O	O:0.999789
is	O	O:0.999971
usually	O	O:0.999662
a	O	O:0.999830
better	O	O:0.997222
choice	O	O:0.999447
than	O	O:0.994692
reindex	B-API	B-API:0.844872
.	O	O:0.999455
	
Call	O	O:0.988882
`	O	O:0.999963
transform	B-API	B-API:0.654624
`	O	O:0.999974
on	O	O:0.999869
the	O	O:0.999922
'	O	O:0.999874
measurement	O	O:0.998874
'	O	O:0.999955
column	O	O:0.998008
and	O	O:0.999979
pass	O	O:0.992005
the	O	O:0.999485
method	O	O:0.994333
`	O	O:0.999986
diff	B-API	B-API:0.953105
`	O	O:0.999980
,	O	O:0.999969
transform	B-API	O:0.986138
returns	O	O:0.999848
a	O	O:0.999935
series	O	O:0.999427
with	O	O:0.998215
an	O	O:0.999748
index	O	O:0.999608
aligned	O	O:0.999886
to	O	O:0.999933
the	O	O:0.999984
original	O	O:0.998031
df	O	O:0.990110
:	O	O:0.999988
#CODE	O	O:0.999718
	
If	O	O:0.999970
you	O	O:0.999312
are	O	O:0.999905
intending	O	O:0.999953
to	O	O:0.999935
apply	O	O:0.993293
some	O	O:0.999839
sorting	O	O:0.999782
on	O	O:0.999985
the	O	O:0.999968
result	O	O:0.999815
of	O	O:0.999858
`	O	O:0.999977
transform	B-API	O:0.666181
`	O	O:0.999996
then	O	O:0.999537
sort	O	O:0.999924
the	O	O:0.999985
df	O	O:0.996247
first	O	O:0.995177
:	O	O:0.999978
#CODE	O	O:0.999633
	
Or	O	O:0.999996
you	O	O:0.999865
can	O	O:0.999891
slice	O	O:0.999678
the	O	O:0.999966
columns	O	O:0.995922
and	O	O:0.999964
pass	O	O:0.999937
this	O	O:0.999948
to	O	O:0.999931
`	O	O:0.999995
drop	B-API	O:0.544830
`	O	O:0.999839
:	O	O:0.999840
#CODE	O	O:0.999836
	
These	O	O:0.999732
values	O	O:0.997793
are	O	O:0.999808
median	O	O:0.999580
values	O	O:0.998413
I	O	O:0.999991
calculated	O	O:0.999956
from	O	O:0.999351
elsewhere	O	O:0.998833
,	O	O:0.999993
and	O	O:0.999761
I	O	O:0.999980
have	O	O:0.999636
also	O	O:0.999461
their	O	O:0.999888
variance	O	O:0.996579
and	O	O:0.999666
standard	O	O:0.996485
deviation	O	O:0.969418
(	O	O:0.999930
and	O	O:0.999762
standard	O	O:0.999044
error	O	O:0.998924
,	O	O:0.999990
too	O	O:0.999533
)	O	O:0.999802
.	O	O:0.997877
	
=	O	O:0.999832
Hash	O	O:0.994678
[	O	O:0.999983
0	O	O:0.999940
]	O	O:0.999929
was	O	O:0.999694
my	O	O:0.999902
point	O	O:0.991976
,	O	O:0.999957
but	O	O:0.999931
even	O	O:0.997663
without	O	O:0.999203
arithmetic	O	O:0.995444
,	O	O:0.999972
there	O	O:0.999545
will	O	O:0.999188
be	O	O:0.999966
a	O	O:0.999990
huge	O	O:0.998650
range	O	O:0.999663
values	O	O:0.997168
for	O	O:0.999774
the	O	O:0.999883
keys	O	O:0.995071
that	O	O:0.999642
will	O	O:0.999937
give	O	O:0.999929
potentially	O	O:0.999738
unfortunate	O	O:0.998655
results	O	O:0.995432
.	O	O:0.999748
	
if	O	O:0.999880
precision	O	O:0.998811
is	O	O:0.999972
to	O	O:0.999904
decimal	O	O:0.999490
place	O	O:0.997039
,	O	O:0.999970
I'd	O	O:0.999983
multiply	O	O:0.755736
it	O	O:0.999948
by	O	O:0.999793
10	O	O:0.999574
and	O	O:0.999814
truncate	O	O:0.978660
maybe	O	O:0.995264
.	O	O:0.999672
	
the	O	O:0.999734
documentation	O	O:0.997964
to	O	O:0.999885
concat	B-API	B-API:0.667183
is	O	O:0.999985
impenetrable	O	O:0.997148
and	O	O:0.999742
its	O	O:0.999823
hard	O	O:0.999506
to	O	O:0.999974
find	O	O:0.999986
examples	O	O:0.999607
of	O	O:0.999993
this	O	O:0.999929
relatively	O	O:0.999885
simple	O	O:0.999634
task	O	O:0.999772
in	O	O:0.999960
the	O	O:0.999969
docs	O	O:0.994277
	
If	O	O:0.999926
you	O	O:0.998962
had	O	O:0.999674
not	O	O:0.999665
called	O	O:0.999444
`	O	O:0.999993
apply	B-API	B-API:0.824536
`	O	O:0.999950
on	O	O:0.999804
the	O	O:0.999888
`	O	O:0.999949
groupby	B-API	B-API:0.971229
`	O	O:0.999961
object	O	O:0.999406
then	O	O:0.999949
you	O	O:0.999985
could	O	O:0.999822
access	O	O:0.999957
the	O	O:0.999733
`	O	O:0.999838
groups	B-API	O:0.898617
`	O	O:0.999897
:	O	O:0.999816
#CODE	O	O:0.999862
	
pandas	O	O:0.997676
groupby	B-API	B-API:0.780546
X	O	O:0.999073
,	O	O:0.999902
Y	O	O:0.999243
and	O	O:0.999601
select	O	O:0.999296
last	O	O:0.999513
week	O	O:0.999826
of	O	O:0.999780
X1	O	O:0.997704
and	O	O:0.999361
X2	O	O:0.997350
(	O	O:0.999364
which	O	O:0.999847
have	O	O:0.999971
diff	O	O:0.936854
frequency	O	O:0.999853
)	O	O:0.998737
	
Then	O	O:0.999821
you	O	O:0.999989
can	O	O:0.999906
select	O	O:0.999984
the	O	O:0.999997
rows	O	O:0.998595
you	O	O:0.999895
want	O	O:0.999947
in	O	O:0.999965
an	O	O:0.999978
apply	B-API	O:0.967067
call	O	O:0.953646
on	O	O:0.999951
the	O	O:0.998970
grouped	O	O:0.990875
object	O	O:0.992681
:	O	O:0.999947
#CODE	O	O:0.999695
	
If	O	O:0.999957
you	O	O:0.999567
can't	O	O:0.999774
upgrade	O	O:0.998913
or	O	O:0.999977
don't	O	O:0.999781
solve	O	O:0.999908
the	O	O:0.999928
issue	O	O:0.999538
you	O	O:0.999922
have	O	O:0.999737
with	O	O:0.999950
0.14	O	O:0.999247
,	O	O:0.999999
you	O	O:0.999903
can	O	O:0.999952
try	O	O:0.999996
to	O	O:0.999990
use	O	O:0.999916
`	O	O:0.999818
ix	B-API	B-API:0.920992
`	O	O:0.999976
instead	O	O:0.999258
of	O	O:0.999915
`	O	O:0.999942
iloc	B-API	B-API:0.988240
`	O	O:0.999866
	
How	O	O:0.999940
do	O	O:0.999801
I	O	O:0.999987
export	O	O:0.988942
multiple	O	O:0.996704
pivot	O	O:0.952802
tables	O	O:0.999797
from	O	O:0.999676
python	O	O:0.998410
using	O	O:0.999978
pandas	O	O:0.994188
to	O	O:0.999941
a	O	O:0.999993
single	O	O:0.997729
csv	O	O:0.999326
document	O	O:0.999476
?	O	O:0.999913
	
Say	O	O:0.999619
I	O	O:0.999996
have	O	O:0.999936
a	O	O:0.999848
function	O	O:0.999510
pivots()	O	O:0.838869
which	O	O:0.999228
aggregates	O	O:0.999630
pivot	O	O:0.827777
tables	O	O:0.998137
#CODE	O	O:0.999467
	
I	O	O:0.999981
know	O	O:0.999797
how	O	O:0.999633
to	O	O:0.999961
export	O	O:0.997680
a	O	O:0.999976
single	O	O:0.998452
pivot	O	O:0.949121
table	O	O:0.998926
#CODE	O	O:0.999462
	
You	O	O:0.999919
can	O	O:0.999774
use	O	O:0.999810
`	O	O:0.999516
to_csv	B-API	B-API:0.998067
(	O	O:0.999996
path	O	O:0.998307
,	O	O:0.999993
mode=	O	O:0.999721
'	O	O:0.999936
a	O	O:0.999828
')`	O	O:0.999716
to	O	O:0.999615
append	O	O:0.907898
files	O	O:0.987963
.	O	O:0.999641
	
Use	O	O:0.999120
`	O	O:0.999880
shift	B-API	B-API:0.961244
`	O	O:0.999942
and	O	O:0.996935
`	O	O:0.999961
np.log	B-API	B-API:0.993587
`	O	O:0.999131
:	O	O:0.999925
#CODE	O	O:0.999861
	
I'd	O	O:0.999928
look	O	O:0.997876
at	O	O:0.999951
seeing	O	O:0.999570
if	O	O:0.999954
you	O	O:0.999688
can	O	O:0.999198
export	O	O:0.993829
it	O	O:0.999970
in	O	O:0.999953
it's	O	O:0.999793
raw	O	O:0.999751
form	O	O:0.999800
,	O	O:0.999970
otherwise	O	O:0.999958
this	O	O:0.999923
must	O	O:0.999915
be	O	O:0.999989
a	O	O:0.999848
common	O	O:0.990739
problem	O	O:0.997301
and	O	O:0.999882
someone	O	O:0.999657
somewhere	O	O:0.999406
has	O	O:0.999965
probably	O	O:0.999606
coded	O	O:0.998730
a	O	O:0.999953
method	O	O:0.998855
to	O	O:0.999943
strip	O	O:0.999728
the	O	O:0.999940
emojis	O	O:0.999409
out	O	O:0.999968
of	O	O:0.999931
the	O	O:0.999908
text	O	O:0.994610
	
Python	O	O:0.999033
pandas	O	O:0.998509
map	O	O:0.872916
dict	O	O:0.999785
keys	O	O:0.999500
to	O	O:0.999967
values	O	O:0.999381
	
I	O	O:0.999992
have	O	O:0.999929
a	O	O:0.999962
csv	O	O:0.997295
for	O	O:0.999871
input	O	O:0.999125
,	O	O:0.999974
whose	O	O:0.998917
row	O	O:0.999699
values	O	O:0.997717
I'd	O	O:0.999995
like	O	O:0.999823
to	O	O:0.999943
join	O	O:0.908454
into	O	O:0.999956
a	O	O:0.999997
new	O	O:0.995264
field	O	O:0.987169
.	O	O:0.999561
	
This	O	O:0.999704
new	O	O:0.999645
field	O	O:0.996871
is	O	O:0.999985
a	O	O:0.999866
constructed	O	O:0.996301
url	O	O:0.996221
,	O	O:0.999820
which	O	O:0.999332
will	O	O:0.999587
then	O	O:0.999884
be	O	O:0.999995
processed	O	O:0.999808
by	O	O:0.999951
the	O	O:0.998570
requests.post()	B-API	B-API:0.669942
method	O	O:0.990986
.	O	O:0.999912
	
I	O	O:0.999973
tried	O	O:0.999862
to	O	O:0.999666
map	O	O:0.952529
values	O	O:0.999233
to	O	O:0.999980
keys	O	O:0.999973
with	O	O:0.999956
a	O	O:0.999993
dict	O	O:0.999053
comprehension	O	O:0.997364
,	O	O:0.999988
but	O	O:0.999867
the	O	O:0.999929
assignment	O	O:0.999584
of	O	O:0.999958
a	O	O:0.999940
key	O	O:0.999822
like	O	O:0.997920
'	O	O:0.999787
FIRST_NAME	O	O:0.953544
'	O	O:0.999890
could	O	O:0.999253
end	O	O:0.999697
up	O	O:0.999955
mapping	O	O:0.998072
to	O	O:0.999895
values	O	O:0.999971
from	O	O:0.999835
an	O	O:0.999975
arbitrary	O	O:0.999812
field	O	O:0.999469
like	O	O:0.999118
test_df	O	O:0.994500
[	O	O:0.999915
'	O	O:0.999901
CITY	O	O:0.998673
']	O	O:0.999514
.	O	O:0.996645
	
which	O	O:0.997815
will	O	O:0.999670
give	O	O:0.999544
you	O	O:0.999923
output	O	O:0.999935
as	O	O:0.999945
follows	O	O:0.997383
:	O	O:0.999938
`	O	O:0.999913
[	O	O:0.999863
{	O	O:0.999987
'	O	O:0.999903
FIRST_NAME	O	O:0.965259
'	O	O:0.998487
:	O	O:0.999976
...,	O	O:0.985286
'	O	O:0.999868
LAST_NAME	O	O:0.969970
'	O	O:0.998073
:	O	O:0.999984
...	O	O:0.999135
}	O	O:0.996844
,	O	O:0.999909
{	O	O:0.999974
'	O	O:0.999689
FIRST_NAME	O	O:0.962252
'	O	O:0.998578
:	O	O:0.999976
...,	O	O:0.985286
'	O	O:0.999868
LAST_NAME	O	O:0.969968
'	O	O:0.998012
:	O	O:0.999986
...	O	O:0.999441
}	O	O:0.997092
]`	O	O:0.998618
(	O	O:0.999774
which	O	O:0.999787
will	O	O:0.999835
give	O	O:0.999907
you	O	O:0.999903
a	O	O:0.999991
list	O	O:0.998836
that	O	O:0.999624
has	O	O:0.999961
equal	O	O:0.999171
length	O	O:0.999565
as	O	O:0.999721
`	O	O:0.999858
test_df	O	O:0.894774
`)	O	O:0.999706
.	O	O:0.997543
	
This	O	O:0.999571
might	O	O:0.999481
be	O	O:0.999967
one	O	O:0.999931
possibility	O	O:0.995775
to	O	O:0.999950
easily	O	O:0.999867
map	O	O:0.824036
it	O	O:0.999981
to	O	O:0.999992
a	O	O:0.999998
correct	O	O:0.997818
row	O	O:0.999591
.	O	O:0.999608
	
Do	O	O:0.999930
you	O	O:0.999922
know	O	O:0.999853
if	O	O:0.999944
append	B-API	O:0.781569
returns	O	O:0.998929
a	O	O:0.999985
copy	O	O:0.941423
/	O	O:0.999965
view	O	O:0.986761
/	O	O:0.999989
reference	O	O:0.999752
of	O	O:0.999937
the	O	O:0.999923
original	O	O:0.998575
dataframe	O	O:0.999564
?	O	O:0.999971
	
Right	O	O:0.998160
now	O	O:0.999702
,	O	O:0.999981
I	O	O:0.999988
am	O	O:0.999982
trying	O	O:0.997712
to	O	O:0.999965
replace	O	O:0.999551
a	O	O:0.999990
stored	O	O:0.999569
procedure	O	O:0.999821
with	O	O:0.999880
a	O	O:0.999850
Python	O	O:0.999448
service	O	O:0.999254
,	O	O:0.999920
and	O	O:0.999915
the	O	O:0.999944
temp	O	O:0.968941
tables	O	O:0.999598
with	O	O:0.999840
Pandas	O	O:0.999910
dataframes	O	O:0.999303
.	O	O:0.999566
	
You	O	O:0.999598
could	O	O:0.999883
pass	O	O:0.999321
an	O	O:0.999935
argument	O	O:0.999904
to	O	O:0.999886
`	O	O:0.999993
apply	B-API	B-API:0.938576
`	O	O:0.999309
:	O	O:0.999755
#CODE	O	O:0.999842
	
Originally	O	O:0.999467
,	O	O:0.999940
I	O	O:0.999995
used	O	O:0.999457
append	B-API	B-API:0.745859
api	O	O:0.999202
to	O	O:0.999908
create	O	O:0.999930
a	O	O:0.999988
single	O	O:0.999882
table	O	O:0.999178
'	O	O:0.999914
impression	O	O:0.999406
'	O	O:0.999890
,	O	O:0.999910
however	O	O:0.999965
that	O	O:0.997257
was	O	O:0.999943
taking	O	O:0.999378
80sec	O	O:0.995366
per	O	O:0.999626
dataframe	O	O:0.998837
and	O	O:0.999701
given	O	O:0.999855
that	O	O:0.998650
I	O	O:0.999996
have	O	O:0.999644
almost	O	O:0.999385
200	O	O:0.999912
of	O	O:0.999942
files	O	O:0.998268
to	O	O:0.999990
be	O	O:0.999997
processed	O	O:0.999210
,	O	O:0.999977
the	O	O:0.999900
'	O	O:0.998791
append	B-API	O:0.733932
'	O	O:0.999916
appeared	O	O:0.999741
to	O	O:0.999931
be	O	O:0.999994
too	O	O:0.999920
slow	O	O:0.999591
.	O	O:0.999685
	
Also	O	O:0.998838
,	O	O:0.999990
why	O	O:0.999543
is	O	O:0.999831
append	B-API	O:0.573653
so	O	O:0.999964
much	O	O:0.999392
slower	O	O:0.999975
than	O	O:0.999084
put	O	O:0.998698
?	O	O:0.999948
	
pandas	O	O:0.994816
merge	B-API	O:0.739836
with	O	O:0.997792
MultiIndex	B-API	O:0.893696
,	O	O:0.999990
when	O	O:0.999916
only	O	O:0.999915
one	O	O:0.999989
level	O	O:0.996193
of	O	O:0.999911
index	O	O:0.989227
is	O	O:0.999991
to	O	O:0.999923
be	O	O:0.999998
used	O	O:0.999860
as	O	O:0.999766
key	O	O:0.991378
	
I	O	O:0.999988
want	O	O:0.999949
to	O	O:0.999518
recover	O	O:0.999980
the	O	O:0.999933
values	O	O:0.997801
in	O	O:0.999974
the	O	O:0.999959
column	O	O:0.998293
'	O	O:0.999942
_Cat	O	O:0.993504
'	O	O:0.999993
from	O	O:0.999595
df2	O	O:0.998444
and	O	O:0.999966
merge	O	O:0.855905
them	O	O:0.999627
into	O	O:0.999786
df1	O	O:0.999832
for	O	O:0.999923
the	O	O:0.999916
appropriate	O	O:0.998643
values	O	O:0.998864
of	O	O:0.999951
'	O	O:0.999823
_ItemId	O	O:0.973945
'	O	O:0.999615
.	O	O:0.999483
	
This	O	O:0.998304
is	O	O:0.999891
almost	O	O:0.998100
(	O	O:0.999960
I	O	O:0.999974
think	O	O:0.999873
?	O	O:0.999976
)	O	O:0.999951
a	O	O:0.999866
standard	O	O:0.997928
many-to-one	O	O:0.999104
merge	O	O:0.539747
,	O	O:0.999957
except	O	O:0.999920
that	O	O:0.999827
the	O	O:0.999985
appropriate	O	O:0.999596
key	O	O:0.998967
for	O	O:0.999976
the	O	O:0.999958
left	O	O:0.993009
df	O	O:0.995888
is	O	O:0.999993
one	O	O:0.999747
of	O	O:0.999931
MultiIndex	B-API	O:0.855127
levels	O	O:0.903842
.	O	O:0.999311
	
Or	O	O:0.999893
is	O	O:0.999987
there	O	O:0.999550
a	O	O:0.999954
better	O	O:0.999332
approach	O	O:0.997859
to	O	O:0.999890
this	O	O:0.999953
merge	B-API	O:0.713252
?	O	O:0.999910
	
loc	B-API	B-API:0.855761
will	O	O:0.998090
not	O	O:0.999311
attempt	O	O:0.999876
to	O	O:0.999976
use	O	O:0.999994
a	O	O:0.999795
number	O	O:0.981218
(	O	O:0.999988
eg	O	O:0.999986
1	O	O:0.999953
)	O	O:0.999991
as	O	O:0.999916
a	O	O:0.999987
positional	O	O:0.986973
argument	O	O:0.999456
at	O	O:0.999721
all	O	O:0.987730
(	O	O:0.999776
and	O	O:0.999584
will	O	O:0.997879
raise	O	O:0.996802
instead	O	O:0.997973
);	O	O:0.999749
see	O	O:0.999875
main	O	O:0.999540
pandas	O	O:0.999802
docs	O	O:0.999760
/	O	O:0.999953
selecting	O	O:0.999908
data	O	O:0.998701
	
I	O	O:0.999988
have	O	O:0.999835
the	O	O:0.999625
following	O	O:0.997855
boxplot	O	O:0.964197
:	O	O:0.999983
#CODE	O	O:0.999645
	
My	O	O:0.999920
question	O	O:0.997121
is	O	O:0.999929
:	O	O:0.999991
how	O	O:0.999986
can	O	O:0.999905
I	O	O:0.999998
change	O	O:0.999836
the	O	O:0.997383
whiskers	O	O:0.997382
/	O	O:0.999830
quantiles	O	O:0.996814
being	O	O:0.999852
plotted	O	O:0.998062
in	O	O:0.999808
the	O	O:0.999811
boxplot	O	O:0.992390
?	O	O:0.999958
	
it'll	O	O:0.998627
be	O	O:0.999980
difficult	O	O:0.999614
to	O	O:0.999940
translate	O	O:0.999987
those	O	O:0.999318
`	O	O:0.999993
ddply	O	B-API:0.962136
`	O	O:0.999988
calls	O	O:0.996563
to	O	O:0.999989
pandas	O	O:0.996200
.	O	O:0.999809
	
I	O	O:0.999982
guess	O	O:0.998533
`	O	O:0.999926
groupby	B-API	B-API:0.965463
`	O	O:0.999908
should	O	O:0.994154
be	O	O:0.999968
used	O	O:0.999813
but	O	O:0.998389
I	O	O:0.999905
find	O	O:0.999676
this	O	O:0.998287
format	O	O:0.999956
very	O	O:0.999729
cryptic	O	O:0.998813
so	O	O:0.999933
it's	O	O:0.999966
hard	O	O:0.999898
to	O	O:0.999992
translate	O	O:0.999987
to	O	O:0.999945
python	O	O:0.999434
	
If	O	O:0.999968
you	O	O:0.999947
drop	O	O:0.993218
the	O	O:0.999925
"	O	O:0.999616
%	O	O:0.999518
"	O	O:0.999980
sign	O	O:0.999709
,	O	O:0.999999
you	O	O:0.999930
can	O	O:0.999931
make	O	O:0.999921
the	O	O:0.999985
plot	O	O:0.974056
without	O	O:0.999648
ticks	O	O:0.988884
.	O	O:0.999732
	
Append	O	O:0.986055
Two	O	O:0.999906
Dataframes	O	O:0.997554
Together	O	O:0.998740
(	O	O:0.999971
Pandas	O	O:0.999469
,	O	O:0.999987
Python3	O	O:0.999308
)	O	O:0.999223
	
I	O	O:0.999934
am	O	O:0.999984
trying	O	O:0.999085
to	O	O:0.999781
append	O	O:0.879555
/	O	O:0.999636
join	O	B-API:0.967328
(	O	O:0.999993
?	O	O:0.999987
)	O	O:0.999918
two	O	O:0.999827
different	O	O:0.999978
dataframes	O	O:0.998036
together	O	O:0.999974
that	O	O:0.999834
don't	O	O:0.999878
share	O	O:0.999463
any	O	O:0.999888
overlapping	O	O:0.999359
data	O	O:0.996337
.	O	O:0.999758
	
I	O	O:0.999934
am	O	O:0.999983
trying	O	O:0.999021
to	O	O:0.999763
append	O	O:0.959319
these	O	O:0.998688
together	O	O:0.999645
using	O	O:0.998648
#CODE	O	O:0.986159
	
EDIT	O	O:0.994470
:	O	O:0.999967
in	O	O:0.999963
regards	O	O:0.999775
to	O	O:0.999967
Edchum's	O	O:0.999959
answers	O	O:0.999680
,	O	O:0.999976
I	O	O:0.999993
have	O	O:0.999496
tried	O	O:0.998324
merge	B-API	B-API:0.723981
and	O	O:0.997809
join	B-API	B-API:0.922898
but	O	O:0.999894
each	O	O:0.999233
create	O	O:0.999206
somewhat	O	O:0.999888
strange	O	O:0.999849
tables	O	O:0.996120
.	O	O:0.999701
	
OK	O	O:0.999840
,	O	O:0.999985
what	O	O:0.999654
you	O	O:0.999965
have	O	O:0.999921
to	O	O:0.999994
do	O	O:0.999981
is	O	O:0.999994
reindex	B-API	O:0.558972
or	O	O:0.999969
reset	B-API	O:0.995307
the	O	O:0.999935
index	O	O:0.996911
so	O	O:0.999998
they	O	O:0.999945
align	O	O:0.998567
	
Use	O	O:0.998709
`	O	O:0.999672
concat	B-API	B-API:0.989621
`	O	O:0.999933
and	O	O:0.999879
pass	O	O:0.999881
param	O	O:0.993574
`	O	O:0.999973
axis=1	O	O:0.946450
`	O	O:0.999586
:	O	O:0.999870
#CODE	O	O:0.999873
	
`	O	O:0.999897
join	B-API	B-API:0.990527
`	O	O:0.999982
also	O	O:0.993250
works	O	O:0.999750
:	O	O:0.999906
#CODE	O	O:0.999688
	
As	O	O:0.999995
does	O	O:0.996818
`	O	O:0.999988
merge	B-API	B-API:0.922364
`	O	O:0.999585
:	O	O:0.999782
#CODE	O	O:0.999863
	
In	O	O:0.999953
the	O	O:0.999984
case	O	O:0.999223
where	O	O:0.999642
the	O	O:0.999945
indices	O	O:0.993540
do	O	O:0.999946
not	O	O:0.999947
align	O	O:0.999827
where	O	O:0.999646
for	O	O:0.999921
example	O	O:0.999866
your	O	O:0.999725
first	O	O:0.999898
df	O	O:0.995536
has	O	O:0.999767
index	O	O:0.993277
`	O	O:0.999967
[	O	O:0.999896
0	O	O:0.999992
,	O	O:0.999987
1	O	O:0.999949
,	O	O:0.999963
2	O	O:0.999943
,	O	O:0.999966
3	O	O:0.999901
]`	O	O:0.999393
and	O	O:0.999915
your	O	O:0.999637
second	O	O:0.999528
df	O	O:0.993499
has	O	O:0.999771
index	O	O:0.993531
`	O	O:0.999966
[	O	O:0.999886
0	O	O:0.999985
,	O	O:0.999989
2	O	O:0.999781
]`	O	O:0.999925
this	O	O:0.999500
will	O	O:0.999884
mean	O	O:0.998578
that	O	O:0.999886
the	O	O:0.999961
above	O	O:0.997905
operations	O	O:0.999850
will	O	O:0.999891
naturally	O	O:0.999951
align	O	O:0.999218
against	O	O:0.999734
the	O	O:0.999859
first	O	O:0.987255
df's	O	O:0.999660
index	O	O:0.998915
resulting	O	O:0.999851
in	O	O:0.999965
a	O	O:0.999957
`	O	O:0.999866
NaN	O	O:0.955943
`	O	O:0.999975
row	O	O:0.993241
for	O	O:0.999977
index	O	O:0.999011
row	O	O:0.999745
`	O	O:0.999964
1	O	O:0.998285
`	O	O:0.999950
.	O	O:0.998798
	
To	O	O:0.999869
fix	O	O:0.999939
this	O	O:0.999981
you	O	O:0.999946
can	O	O:0.999668
reindex	O	O:0.905321
the	O	O:0.999914
second	O	O:0.999859
df	O	O:0.996842
either	O	O:0.999939
by	O	O:0.999974
calling	O	O:0.997521
`	O	O:0.999899
reset_index()	B-API	B-API:0.998796
`	O	O:0.999976
or	O	O:0.999916
assign	O	O:0.999465
directly	O	O:0.999961
like	O	O:0.999409
so	O	O:0.999909
:	O	O:0.999942
`	O	O:0.999967
df2.index	O	O:0.950286
=[	O	O:0.999981
0	O	O:0.999962
,	O	O:0.999991
1	O	O:0.999847
]`	O	O:0.999366
.	O	O:0.998935
	
And	O	O:0.999837
you	O	O:0.999442
could	O	O:0.999343
always	O	O:0.999986
drop	O	O:0.997999
back	O	O:0.999299
to	O	O:0.999974
numpy	O	O:0.999902
operations	O	O:0.999868
on	O	O:0.999988
the	O	O:0.999989
numpy	O	O:0.999284
array	O	O:0.998897
`	O	O:0.999991
pan.values	O	O:0.804951
`	O	O:0.999983
if	O	O:0.999964
need	O	O:0.999873
be	O	O:0.999862
,	O	O:0.999990
though	O	O:0.999352
,	O	O:0.999977
hopefully	O	O:0.998193
,	O	O:0.999994
that	O	O:0.999205
would	O	O:0.999812
be	O	O:0.999977
unnecessary	O	O:0.997804
.	O	O:0.998484
	
This	O	O:0.999273
argument	O	O:0.999075
is	O	O:0.999934
new	O	O:0.997988
in	O	O:0.998969
1.9	O	O:0.994645
...	O	O:0.996300
but	O	O:0.999879
there	O	O:0.998771
is	O	O:0.999921
a	O	O:0.999582
workaround	O	O:0.998174
,	O	O:0.999988
try	O	O:0.999560
`	O	O:0.999781
np.linspace	B-API	B-API:0.921341
(	O	O:0.999984
0	O	O:0.999994
,	O	O:0.999966
len	B-API	B-API:0.961893
(	O	O:0.999967
pep_list	O	O:0.821780
)	O	O:0.999932
,	O	O:0.999848
n+1	O	O:0.998714
,	O	O:0.999975
endpoint=True	O	O:0.998382
)	O	O:0.999210
.astype	B-API	B-API:0.995561
(	O	O:0.999962
int	O	O:0.996320
)`	O	O:0.999340
	
Take	O	O:0.998035
the	O	O:0.999964
time	O	O:0.999773
difference	O	O:0.999341
(	O	O:0.999996
using	O	O:0.999759
`	O	O:0.999721
shift	B-API	B-API:0.949091
`	O	O:0.999964
)	O	O:0.999728
til	O	O:0.999668
the	O	O:0.999982
next	O	O:0.995437
value	O	O:0.999305
,	O	O:0.999982
and	O	O:0.999948
multiply	O	O:0.618132
(	O	O:0.999956
value	O	O:0.999179
*	O	O:0.999762
seconds	O	O:0.984543
):	O	O:0.999967
#CODE	O	O:0.998818
	
Then	O	O:0.999186
do	O	O:0.999987
the	O	O:0.999986
resample	O	O:0.541014
to	O	O:0.999964
seconds	O	O:0.999941
(	O	O:0.999996
sum	O	O:0.999113
the	O	O:0.999912
value*seconds	O	O:0.973016
):	O	O:0.999934
#CODE	O	O:0.999357
	
you	O	O:0.999554
can	O	O:0.998702
isnull	B-API	B-API:0.629428
(	O	O:0.999989
df	O	O:0.997446
[	O	O:0.999967
'	O	O:0.999979
difference	O	O:0.999545
'])	O	O:0.998859
will	O	O:0.998242
give	O	O:0.999274
True	O	O:0.998138
on	O	O:0.999929
NaT	O	O:0.997592
,	O	O:0.999993
so	O	O:0.999983
you	O	O:0.999914
could	O	O:0.999834
subtract	O	O:0.999992
then	O	O:0.999782
use	O	O:0.999996
mask	B-API	O:0.941689
I	O	O:0.999975
think	O	O:0.998734
	
After	O	O:0.999963
they	O	O:0.998902
are	O	O:0.999967
done	O	O:0.999279
,	O	O:0.999994
merge	O	O:0.828706
the	O	O:0.999859
two	O	O:0.999378
frames	O	O:0.999669
together	O	O:0.998908
:	O	O:0.999986
#CODE	O	O:0.999257
	
Another	O	O:0.998884
solution	O	O:0.997913
(	O	O:0.999992
slightly	O	O:0.999679
harder	O	O:0.998990
):	O	O:0.999976
Merge	O	O:0.999315
the	O	O:0.999946
columns	O	O:0.991568
`	O	O:0.999981
transcript_id	O	O:0.930615
`	O	O:0.999990
,	O	O:0.999692
`	O	O:0.999974
gene_id	O	O:0.568373
`	O	O:0.999947
and	O	O:0.998800
`	O	O:0.999982
gene_name	O	O:0.750367
`	O	O:0.999984
in	O	O:0.999788
another	O	O:0.999871
column	O	O:0.998871
,	O	O:0.999993
say	O	O:0.999704
`	O	O:0.999853
merged_id	O	O:0.865213
`	O	O:0.999949
and	O	O:0.994400
`	O	O:0.999980
groupby	B-API	B-API:0.983845
`	O	O:0.999976
on	O	O:0.997083
`	O	O:0.999987
merged_id	O	O:0.918647
`	O	O:0.999935
.	O	O:0.998296
	
Geo	O	O:0.999716
Pandas	O	O:0.999782
Data	O	O:0.998232
Frame	O	O:0.998536
/	O	O:0.999148
Matrix	O	O:0.821053
-	O	O:0.999972
filter	O	O:0.950797
/	O	O:0.999956
drop	O	O:0.963372
NaN	O	O:0.997628
/	O	O:0.999721
False	O	O:0.986306
values	O	O:0.991426
	
Then	O	O:0.998874
I	O	O:0.999996
stack	O	O:0.976591
the	O	O:0.999908
dataframe	O	O:0.999317
,	O	O:0.999995
give	O	O:0.999601
the	O	O:0.999955
index	O	O:0.996921
levels	O	O:0.991357
the	O	O:0.999874
desired	O	O:0.996001
names	O	O:0.996323
,	O	O:0.999986
and	O	O:0.999976
select	O	O:0.999808
only	O	O:0.999766
the	O	O:0.999991
rows	O	O:0.999193
where	O	O:0.999466
we	O	O:0.999997
have	O	O:0.999017
'	O	O:0.999969
True	O	O:0.996866
'	O	O:0.999869
values	O	O:0.982846
:	O	O:0.999970
#CODE	O	O:0.999564
	
Can	O	O:0.999855
you	O	O:0.999867
enable	O	O:0.999855
the	O	O:0.999979
debugger	O	O:0.999754
to	O	O:0.999980
get	O	O:0.999992
a	O	O:0.999987
stack	O	O:0.806424
trace	O	O:0.998992
?	O	O:0.999976
	
reshape	O	O:0.840231
data	O	O:0.999797
frame	O	O:0.999857
in	O	O:0.999918
pandas	O	O:0.999479
with	O	O:0.999875
pivot	O	O:0.898693
table	O	O:0.999144
	
With	O	O:0.999483
pivot	O	O:0.975581
table	O	O:0.999961
you	O	O:0.999955
can	O	O:0.999933
get	O	O:0.999971
a	O	O:0.999985
matrix	O	O:0.987838
showing	O	O:0.998107
which	O	O:0.996521
`	O	O:0.999961
baz	O	O:0.964831
`	O	O:0.999993
corresponds	O	O:0.998263
to	O	O:0.999985
which	O	O:0.999851
`	O	O:0.999964
qux	O	O:0.942000
`	O	O:0.999832
:	O	O:0.999858
#CODE	O	O:0.999861
	
Rolling	O	O:0.987364
apply	O	B-API:0.763648
question	O	O:0.993003
	
For	O	O:0.999944
each	O	O:0.999319
group	O	O:0.997889
in	O	O:0.999935
the	O	O:0.999603
groupby	B-API	B-API:0.946718
object	O	O:0.998707
,	O	O:0.999926
we	O	O:0.999971
will	O	O:0.998933
want	O	O:0.999959
to	O	O:0.999979
apply	O	O:0.994916
a	O	O:0.999255
function	O	O:0.977350
:	O	O:0.999953
#CODE	O	O:0.999169
	
We	O	O:0.999986
want	O	O:0.999438
to	O	O:0.999989
take	O	O:0.999972
the	O	O:0.999939
Times	O	O:0.993715
column	O	O:0.998638
,	O	O:0.999985
and	O	O:0.999905
for	O	O:0.999825
each	O	O:0.998946
time	O	O:0.999872
,	O	O:0.999997
apply	O	O:0.963744
a	O	O:0.998876
function	O	O:0.993058
.	O	O:0.999481
	
That's	O	O:0.999798
done	O	O:0.999846
with	O	O:0.999862
`	O	O:0.999894
applymap	B-API	B-API:0.994954
`	O	O:0.999558
:	O	O:0.999860
#CODE	O	O:0.999870
	
Given	O	O:0.994610
a	O	O:0.999996
time	O	O:0.999120
`	O	O:0.999984
t	O	O:0.996528
`	O	O:0.999984
,	O	O:0.999989
we	O	O:0.999998
can	O	O:0.999417
select	O	O:0.999976
the	O	O:0.999887
`	O	O:0.999915
Value	O	O:0.993210
`	O	O:0.999996
s	O	O:0.999962
from	O	O:0.999761
`	O	O:0.999990
subf	O	B-API:0.544350
`	O	O:0.999982
whose	O	O:0.999677
times	O	O:0.999772
are	O	O:0.999937
in	O	O:0.999972
the	O	O:0.999361
half-open	O	O:0.995958
interval	O	O:0.998208
`	O	O:0.999922
(	O	O:0.999869
t-60	O	O:0.999764
,	O	O:0.999997
t	O	O:0.999923
]`	O	O:0.999941
using	O	O:0.999333
the	O	O:0.997950
`	O	O:0.998207
ix	B-API	B-API:0.991059
`	O	O:0.999632
method	O	O:0.978417
:	O	O:0.999986
#CODE	O	O:0.999166
	
pandas	O	O:0.997880
join	O	O:0.752281
data	O	O:0.999833
frames	O	O:0.999726
on	O	O:0.999828
similar	O	O:0.999410
but	O	O:0.999816
not	O	O:0.999511
identical	O	O:0.996113
string	O	O:0.999488
using	O	O:0.998760
lower	O	O:0.998627
case	O	O:0.998703
only	O	O:0.997716
	
I	O	O:0.999987
need	O	O:0.999688
to	O	O:0.999930
join	O	O:0.972693
data	O	O:0.999964
frames	O	O:0.999898
on	O	O:0.999974
columns	O	O:0.999936
that	O	O:0.999921
are	O	O:0.999815
similar	O	O:0.998907
but	O	O:0.999490
not	O	O:0.998965
identical	O	O:0.986397
.	O	O:0.999640
	
So	O	O:0.999948
I	O	O:0.999980
am	O	O:0.999994
trying	O	O:0.999442
to	O	O:0.999867
isolate	O	O:0.999924
the	O	O:0.999979
lowercase	O	O:0.993429
letters	O	O:0.998993
from	O	O:0.999937
each	O	O:0.999568
column	O	O:0.999946
,	O	O:0.999993
create	O	O:0.999763
new	O	O:0.999834
columns	O	O:0.999503
to	O	O:0.999995
join	O	O:0.723033
on	O	O:0.999901
.	O	O:0.999840
	
Note	O	O:0.999687
that	O	O:0.999904
this	O	O:0.999927
assumes	O	O:0.999777
collecting	O	O:0.999536
all	O	O:0.999006
ASCII	O	O:0.999808
characters	O	O:0.999808
from	O	O:0.999421
`	O	O:0.999992
a	O	O:0.999956
`	O	O:0.999985
to	O	O:0.999378
`	O	O:0.999999
z	O	O:0.997361
`	O	O:0.999997
suffices	O	O:0.999153
to	O	O:0.999989
produce	O	O:0.999904
values	O	O:0.999412
on	O	O:0.999944
which	O	O:0.999837
to	O	O:0.999975
join	O	O:0.557477
.	O	O:0.999824
	
You	O	O:0.999942
can	O	O:0.999834
of	O	O:0.999978
course	O	O:0.993823
extend	O	O:0.999672
this	O	O:0.999716
with	O	O:0.999924
several	O	O:0.997334
joins	O	O:0.999268
,	O	O:0.999989
the	O	O:0.999975
join	O	B-API:0.907285
solution	O	O:0.999940
detects	O	O:0.999522
common	O	O:0.999501
indices	O	O:0.999161
automatically	O	O:0.998868
.	O	O:0.999394
	
My	O	O:0.999990
data	O	O:0.999085
is	O	O:0.999989
in	O	O:0.999969
a	O	O:0.999992
DataFrame	O	O:0.997640
of	O	O:0.999769
about	O	O:0.998930
10378	O	O:0.998673
rows	O	O:0.995543
and	O	O:0.999876
`	O	O:0.999921
len	B-API	B-API:0.996143
(	O	O:0.999988
df	O	O:0.991562
[	O	O:0.999950
'	O	O:0.999846
Full	O	O:0.999740
name	O	O:0.999764
'])`	O	O:0.992750
is	O	O:0.999898
10378	O	O:0.996740
,	O	O:0.999986
as	O	O:0.999930
expected	O	O:0.997917
.	O	O:0.999651
	
But	O	O:0.999783
`	O	O:0.999691
len	B-API	B-API:0.992391
(	O	O:0.999991
choices	O	O:0.996779
)`	O	O:0.999833
is	O	O:0.999982
only	O	O:0.999408
1695	O	O:0.998479
.	O	O:0.999615
	
I'm	O	O:0.999919
fairly	O	O:0.999338
certain	O	O:0.999024
that	O	O:0.999724
the	O	O:0.999981
issue	O	O:0.998040
is	O	O:0.999970
in	O	O:0.999926
the	O	O:0.999969
first	O	O:0.999704
line	O	O:0.999524
,	O	O:0.999997
with	O	O:0.999945
the	O	O:0.999666
`	O	O:0.999939
to_dict()	B-API	B-API:0.995634
`	O	O:0.999936
function	O	O:0.999726
,	O	O:0.999999
as	O	O:0.999980
`	O	O:0.999739
len	B-API	B-API:0.982433
(	O	O:0.999993
df	O	O:0.993420
[	O	O:0.999964
'	O	O:0.999898
Full	O	O:0.999919
name	O	O:0.999620
']	O	O:0.999149
.astype	B-API	B-API:0.986266
(	O	O:0.999966
str	O	O:0.999268
)`	O	O:0.999677
results	O	O:0.994980
in	O	O:0.999957
10378	O	O:0.997563
and	O	O:0.999858
`	O	O:0.999734
len	B-API	B-API:0.995792
(	O	O:0.999989
df	O	O:0.991562
[	O	O:0.999964
'	O	O:0.999906
Full	O	O:0.999910
name	O	O:0.999893
']	O	O:0.999788
.to_dict()	B-API	B-API:0.948728
)`	O	O:0.999208
results	O	O:0.997573
in	O	O:0.999945
1695	O	O:0.998130
.	O	O:0.999574
	
what	O	O:0.997391
is	O	O:0.999981
`	O	O:0.999830
len	B-API	B-API:0.974878
(	O	O:0.999989
df.index.unique()	O	B-API:0.813049
)`	O	O:0.999601
?	O	O:0.999939
	
@USER	O	O:0.999717
using	O	O:0.998921
`	O	O:0.999626
choices	O	O:0.969644
=	O	O:0.999997
dict	O	O:0.997492
(	O	O:0.999988
zip	O	O:0.935933
(	O	O:0.999990
df	O	O:0.998653
[	O	O:0.999992
'	O	O:0.999982
n	O	O:0.999615
']	O	O:0.999942
,	O	O:0.999957
df	O	O:0.998840
[	O	O:0.999931
'	O	O:0.999920
Full	O	O:0.999915
name	O	O:0.999620
']	O	O:0.999135
.astype	B-API	B-API:0.986040
(	O	O:0.999932
str	O	O:0.997224
)))`	O	O:0.998949
,	O	O:0.999973
where	O	O:0.999813
df	O	O:0.997725
[	O	O:0.999986
'	O	O:0.999973
n	O	O:0.999698
']	O	O:0.999818
is	O	O:0.999749
np.arange	B-API	B-API:0.941138
(	O	O:0.999768
len	B-API	B-API:0.801626
(	O	O:0.999994
df	O	O:0.993957
))	O	O:0.999446
,	O	O:0.999110
worked	O	O:0.999950
fine	O	O:0.997124
and	O	O:0.999793
got	O	O:0.999944
what	O	O:0.997714
I	O	O:0.999954
needed	O	O:0.999126
.	O	O:0.997292
	
Had	O	O:0.999101
some	O	O:0.999216
indexing	O	O:0.999315
issues	O	O:0.999504
because	O	O:0.999237
I	O	O:0.999971
was	O	O:0.999965
importing	O	O:0.999423
the	O	O:0.999965
data	O	O:0.999804
from	O	O:0.999740
different	O	O:0.999771
Excel	O	O:0.999648
spreadsheets	O	O:0.998478
.	O	O:0.999547
	
This	O	O:0.997065
is	O	O:0.999985
what	O	O:0.997249
is	O	O:0.999982
happening	O	O:0.999296
in	O	O:0.999966
your	O	O:0.999740
case	O	O:0.998477
,	O	O:0.999979
and	O	O:0.999957
noted	O	O:0.999484
from	O	O:0.999544
the	O	O:0.999947
comments	O	O:0.999730
,	O	O:0.999998
since	O	O:0.999950
the	O	O:0.999979
amount	O	O:0.999861
of	O	O:0.999793
`	O	O:0.999928
unique	O	O:0.994260
`	O	O:0.999988
values	O	O:0.990411
for	O	O:0.999873
the	O	O:0.999723
index	O	O:0.992169
are	O	O:0.999983
only	O	O:0.999222
`	O	O:0.999979
1695	O	O:0.991308
`	O	O:0.999977
,	O	O:0.999977
we	O	O:0.999996
can	O	O:0.998515
confirm	O	O:0.999980
this	O	O:0.999986
by	O	O:0.999986
testing	O	O:0.999739
the	O	O:0.999951
value	O	O:0.999810
of	O	O:0.999967
`	O	O:0.999785
len	B-API	B-API:0.951249
(	O	O:0.999988
df.index.unique()	O	B-API:0.843795
)`	O	O:0.999175
.	O	O:0.999529
	
what	O	O:0.999208
do	O	O:0.999949
you	O	O:0.999983
mean	O	O:0.998216
by	O	O:0.999983
normalize	O	O:0.892313
?	O	O:0.999949
	
The	O	O:0.999780
other	O	O:0.999686
way	O	O:0.997471
is	O	O:0.999970
much	O	O:0.997702
easier	O	O:0.998962
and	O	O:0.999551
involves	O	O:0.999618
using	O	O:0.997774
`	O	O:0.999551
resample	B-API	B-API:0.983009
`	O	O:0.999974
to	O	O:0.999818
convert	O	O:0.999957
to	O	O:0.999994
daily	O	O:0.998639
observations	O	O:0.998959
and	O	O:0.999907
backfill	O	O:0.993998
daily	O	O:0.964585
consumption	O	O:0.994056
.	O	O:0.999669
	
(	O	O:0.999912
Note	O	O:0.999964
that	O	O:0.999710
the	O	O:0.999965
first	O	O:0.992521
and	O	O:0.999929
last	O	O:0.999122
months	O	O:0.996457
are	O	O:0.999661
based	O	O:0.998503
on	O	O:0.999970
partial	O	O:0.997516
data	O	O:0.999923
,	O	O:0.999994
you	O	O:0.999949
may	O	O:0.999894
want	O	O:0.999898
to	O	O:0.999725
either	O	O:0.999993
drop	O	O:0.999459
them	O	O:0.999918
or	O	O:0.999966
pro-rate	O	O:0.999267
the	O	O:0.999984
daily	O	O:0.977446
consumption	O	O:0.999238
.	O	O:0.999892
)	O	O:0.999838
#CODE	O	O:0.996350
	
Basically	O	O:0.999731
,	O	O:0.999948
after	O	O:0.999893
calculating	O	O:0.998808
the	O	O:0.999931
daily	O	O:0.981014
consumption	O	O:0.999490
,	O	O:0.999999
do	O	O:0.999984
a	O	O:0.999989
partial	O	O:0.979897
resample	B-API	O:0.799918
by	O	O:0.999906
adding	O	O:0.999641
the	O	O:0.999470
first	O	O:0.982337
and	O	O:0.999974
last	O	O:0.999889
day	O	O:0.999933
of	O	O:0.999950
each	O	O:0.997006
month	O	O:0.999231
.	O	O:0.999549
	
I	O	O:0.999856
will	O	O:0.997864
implement	O	O:0.996979
it	O	O:0.999543
and	O	O:0.999819
see	O	O:0.999785
how	O	O:0.999000
it	O	O:0.999985
goes	O	O:0.996027
,	O	O:0.999996
but	O	O:0.999953
can	O	O:0.999446
you	O	O:0.999974
also	O	O:0.999875
explain	O	O:0.999896
what	O	O:0.998824
'	O	O:0.999966
1d	O	O:0.999963
'	O	O:0.999940
means	O	O:0.999498
in	O	O:0.999973
the	O	O:0.998819
resample	B-API	B-API:0.924620
method	O	O:0.996960
?	O	O:0.999976
	
@USER	O	O:0.998667
'	O	O:0.999760
1d	O	O:0.999818
'	O	O:0.999971
just	O	O:0.999879
means	O	O:0.999905
1	O	O:0.999988
day	O	O:0.999909
for	O	O:0.999992
the	O	O:0.999976
frequency	O	O:0.999585
of	O	O:0.999893
the	O	O:0.999671
resample	B-API	B-API:0.672082
.	O	O:0.999361
	
So	O	O:0.999896
I	O	O:0.999994
want	O	O:0.999873
something	O	O:0.998904
that	O	O:0.999793
will	O	O:0.999942
drop	O	O:0.995111
the	O	O:0.999892
`	O	O:0.999896
lob	O	O:0.989495
`	O	O:0.999988
group	O	O:0.929357
,	O	O:0.999988
but	O	O:0.999882
keep	O	O:0.999110
every	O	O:0.999479
record	O	O:0.999809
of	O	O:0.999974
both	O	O:0.999361
the	O	O:0.999705
`	O	O:0.999801
mol	O	O:0.740666
`	O	O:0.999975
and	O	O:0.997985
`	O	O:0.999991
thg	O	O:0.981266
`	O	O:0.999965
group	O	O:0.945774
.	O	O:0.999911
	
Pandas	O	O:0.999641
Merge	O	O:0.998664
2	O	O:0.999950
data	O	O:0.999740
frames	O	O:0.999927
by	O	O:0.999968
2	O	O:0.999951
columns	O	O:0.999603
each	O	O:0.998663
	
In	O	O:0.999963
each	O	O:0.999924
data	O	O:0.999957
frame	O	O:0.999913
i	O	O:0.999998
have	O	O:0.999785
column	O	O:0.999844
with	O	O:0.999879
the	O	O:0.999921
same	O	O:0.999875
name	O	O:0.999550
and	O	O:0.999980
values	O	O:0.997016
(	O	O:0.999927
Key_Merge1	O	O:0.987656
)	O	O:0.999315
and	O	O:0.998803
in	O	O:0.999985
each	O	O:0.999676
data	O	O:0.999910
frame	O	O:0.999838
i	O	O:0.999998
have	O	O:0.999671
2	O	O:0.999983
different	O	O:0.999761
column	O	O:0.998993
names	O	O:0.999704
with	O	O:0.999968
same	O	O:0.999726
values	O	O:0.997611
(	O	O:0.999997
Key_Merge2	O	O:0.991819
)	O	O:0.999691
.	O	O:0.998203
	
How	O	O:0.999858
can	O	O:0.999489
i	O	O:0.999998
merge	O	O:0.854941
2	O	O:0.999980
data	O	O:0.999772
frames	O	O:0.999915
by	O	O:0.999961
2	O	O:0.999917
columns	O	O:0.993906
:	O	O:0.999971
	
Can	O	O:0.999591
you	O	O:0.999958
post	O	O:0.990272
an	O	O:0.999987
example	O	O:0.999864
data	O	O:0.999831
and	O	O:0.999978
df	O	O:0.997989
,	O	O:0.999985
your	O	O:0.999832
text	O	O:0.998794
description	O	O:0.998203
is	O	O:0.999983
not	O	O:0.999048
clear	O	O:0.998867
enough	O	O:0.999605
but	O	O:0.999919
generally	O	O:0.999342
you	O	O:0.999705
want	O	O:0.999644
to	O	O:0.999952
merge	O	O:0.934269
and	O	O:0.999976
pass	O	O:0.994326
the	O	O:0.999983
list	O	O:0.996197
of	O	O:0.999995
cols	O	O:0.991419
to	O	O:0.999998
merge	O	O:0.951510
the	O	O:0.999798
;	O	O:0.999917
hs	O	B-API:0.504186
and	O	O:0.999953
rhs	O	O:0.969090
on	O	O:0.999543
:	O	O:0.999972
`	O	O:0.999951
pd.merge	B-API	B-API:0.978443
(	O	O:0.999984
df1	O	O:0.999876
,	O	O:0.999987
df2	O	O:0.999772
,	O	O:0.999920
left_on	O	O:0.955442
=[	O	O:0.999836
'	O	O:0.999660
Key_Merge1	O	O:0.993976
'	O	O:0.999898
,	O	O:0.999968
'	O	O:0.999962
Key_Merge21	O	O:0.991635
']	O	O:0.999880
,	O	O:0.999723
right_on	O	O:0.980679
=[	O	O:0.999885
'	O	O:0.999842
Key_Merge1	O	O:0.994014
'	O	O:0.999859
,	O	O:0.999950
'	O	O:0.999899
Key_merge22	O	O:0.983157
'])`	O	O:0.993238
	
OK	O	O:0.999918
,	O	O:0.999967
you	O	O:0.999974
have	O	O:0.999640
to	O	O:0.999985
rename	O	O:0.999794
'	O	O:0.999934
PRODUCT_GROUP	O	O:0.994226
'	O	O:0.999895
in	O	O:0.999744
DF2	O	O:0.999466
in	O	O:0.999958
order	O	O:0.999741
for	O	O:0.999947
the	O	O:0.999445
`	O	O:0.999817
merge	B-API	B-API:0.871046
`	O	O:0.999972
to	O	O:0.999596
work	O	O:0.999226
:	O	O:0.999983
#CODE	O	O:0.999849
	
the	O	O:0.999479
merge	B-API	O:0.623563
will	O	O:0.999652
naturally	O	O:0.999873
find	O	O:0.999915
the	O	O:0.999961
2	O	O:0.999638
columns	O	O:0.999726
that	O	O:0.999770
match	O	O:0.994294
and	O	O:0.999939
perform	O	O:0.994464
an	O	O:0.999623
inner	O	O:0.999883
merge	B-API	O:0.698848
as	O	O:0.999808
desired	O	O:0.988102
	
I	O	O:0.999987
can	O	O:0.999916
strip	O	O:0.999180
out	O	O:0.999973
the	O	O:0.999837
rightmost	O	O:0.992765
'	O	O:0.999916
.csv	O	O:0.953103
'	O	O:0.999968
part	O	O:0.998504
like	O	O:0.999886
this	O	O:0.998414
:	O	O:0.999926
#CODE	O	O:0.998990
	
How	O	O:0.999811
to	O	O:0.999959
merge	O	O:0.921957
two	O	O:0.999680
DataFrame	O	O:0.998027
columns	O	O:0.997611
and	O	O:0.999961
apply	O	O:0.747646
pandas.to_datetime	B-API	B-API:0.988668
to	O	O:0.999543
it	O	O:0.999986
?	O	O:0.999967
	
What	O	O:0.997610
would	O	O:0.999863
be	O	O:0.999978
a	O	O:0.999997
more	O	O:0.997650
pythonic	O	O:0.998259
way	O	O:0.999830
to	O	O:0.999934
merge	O	O:0.958820
two	O	O:0.999557
columns	O	O:0.998584
,	O	O:0.999984
and	O	O:0.999989
apply	O	O:0.958314
a	O	O:0.998753
function	O	O:0.999228
into	O	O:0.999696
the	O	O:0.999881
result	O	O:0.987438
?	O	O:0.999947
	
once	O	O:0.999717
sorted	O	O:0.999645
I	O	O:0.999994
replace	O	O:0.996666
the	O	O:0.999545
df.index	O	O:0.942629
with	O	O:0.999756
a	O	O:0.999945
numerical	O	O:0.739267
index	O	O:0.991723
#CODE	O	O:0.999497
	
This	O	O:0.999804
can	O	O:0.999855
be	O	O:0.999986
accomplished	O	O:0.999964
with	O	O:0.999734
a	O	O:0.999916
one	O	O:0.999931
line	O	O:0.999470
solution	O	O:0.999905
using	O	O:0.999699
Pandas	O	O:0.997197
'	O	O:0.997935
boolean	O	O:0.980124
indexing	O	O:0.998618
.	O	O:0.998838
	
The	O	O:0.999400
one-liner	O	O:0.999754
also	O	O:0.999299
employs	O	O:0.999983
some	O	O:0.998808
other	O	O:0.999819
tricks	O	O:0.998509
:	O	O:0.999986
Pandas	O	O:0.999894
'	O	O:0.999827
`	O	O:0.999885
map	B-API	B-API:0.859097
`	O	O:0.999938
and	O	O:0.998249
`	O	O:0.999995
diff	B-API	B-API:0.986933
`	O	O:0.999960
methods	O	O:0.990258
and	O	O:0.999990
a	O	O:0.999819
`	O	O:0.999598
lambda	O	O:0.984231
`	O	O:0.999650
function	O	O:0.984624
.	O	O:0.999919
	
`	O	O:0.999828
map	B-API	B-API:0.806302
`	O	O:0.999875
is	O	O:0.999956
used	O	O:0.999973
to	O	O:0.999961
apply	B-API	O:0.968429
the	O	O:0.999402
`	O	O:0.999805
lambda	O	O:0.995489
`	O	O:0.999972
function	O	O:0.999304
to	O	O:0.999996
all	O	O:0.999983
rows	O	O:0.998535
.	O	O:0.999446
	
The	O	O:0.999572
`	O	O:0.999894
lambda	O	O:0.990258
`	O	O:0.999920
function	O	O:0.987179
is	O	O:0.999994
needed	O	O:0.999661
to	O	O:0.999963
create	O	O:0.999972
a	O	O:0.999997
custom	O	O:0.998247
less-then	O	O:0.994646
comparison	O	O:0.999905
that	O	O:0.999897
will	O	O:0.999801
evaluate	O	O:0.999663
NaN	O	O:0.998882
values	O	O:0.999283
to	O	O:0.999849
True	O	O:0.998918
.	O	O:0.999664
	
There	O	O:0.998696
is	O	O:0.999967
a	O	O:0.999877
built	O	O:0.984699
in	O	O:0.999656
method	O	O:0.988964
for	O	O:0.999982
this	O	O:0.997959
`	O	O:0.999981
diff	B-API	B-API:0.979176
`	O	O:0.999622
:	O	O:0.999799
#CODE	O	O:0.999862
	
as	O	O:0.999835
pointed	O	O:0.997996
out	O	O:0.999943
calling	O	O:0.991645
`	O	O:0.999985
diff	B-API	B-API:0.946456
`	O	O:0.999992
here	O	O:0.999292
will	O	O:0.999955
lose	O	O:0.999842
the	O	O:0.999981
first	O	O:0.998947
row	O	O:0.999925
so	O	O:0.999978
I'm	O	O:0.999995
using	O	O:0.999893
a	O	O:0.999930
ugly	O	O:0.998235
hack	O	O:0.999497
where	O	O:0.999282
I	O	O:0.999995
concatenate	O	O:0.987868
the	O	O:0.999973
first	O	O:0.999226
row	O	O:0.999953
with	O	O:0.999952
the	O	O:0.999969
result	O	O:0.999684
of	O	O:0.999978
the	O	O:0.999776
`	O	O:0.999995
diff	B-API	B-API:0.873903
`	O	O:0.999996
so	O	O:0.999949
I	O	O:0.999999
don't	O	O:0.999981
lose	O	O:0.999340
the	O	O:0.999976
first	O	O:0.996362
row	O	O:0.999250
	
Using	O	O:0.997084
`	O	O:0.999921
diff	B-API	B-API:0.962151
`	O	O:0.999984
like	O	O:0.999836
this	O	O:0.999986
drops	O	O:0.999346
the	O	O:0.999976
first	O	O:0.996548
row	O	O:0.999389
.	O	O:0.999675
	
(	O	O:0.999974
I	O	O:0.999988
can	O	O:0.999987
also	O	O:0.999882
use	O	O:0.999982
the	O	O:0.997198
chunksize	O	B-API:0.950544
option	O	O:0.996160
and	O	O:0.999526
concat	O	B-API:0.734248
myself	O	O:0.981086
,	O	O:0.999871
but	O	O:0.999925
that	O	O:0.999797
seems	O	O:0.999908
to	O	O:0.999993
be	O	O:0.999998
a	O	O:0.999992
bit	O	O:0.999785
of	O	O:0.999960
a	O	O:0.999828
hack	O	O:0.996438
.	O	O:0.999767
)	O	O:0.999681
	
Jeff	O	O:0.999435
,	O	O:0.999923
I	O	O:0.999956
updated	O	O:0.998376
sec_id	O	O:0.975767
and	O	O:0.999854
dt	B-API	O:0.949058
in	O	O:0.999820
the	O	O:0.999881
dataframe	O	O:0.996578
.	O	O:0.999588
	
Sorry	O	O:0.999615
,	O	O:0.999942
I	O	O:0.999985
had	O	O:0.999923
to	O	O:0.999747
update	O	O:0.997988
"	O	O:0.999715
sec_id	O	O:0.987994
"	O	O:0.999627
and	O	O:0.999466
"	O	O:0.999849
dt	O	O:0.708263
"	O	O:0.999834
to	O	O:0.999093
"	O	O:0.999949
id	O	O:0.997853
"	O	O:0.999539
and	O	O:0.999670
"	O	O:0.999960
date	O	O:0.996862
"	O	O:0.999719
.	O	O:0.999327
	
0.12	O	O:0.990067
is	O	O:0.999992
fine	O	O:0.999517
;	O	O:0.999989
FYI	O	O:0.999832
the	O	O:0.999850
format	O	O:0.993226
keyword	O	O:0.999299
doesn't	O	O:0.999859
do	O	O:0.999963
anything	O	O:0.999909
with	O	O:0.990337
append	B-API	B-API:0.927476
(	O	O:0.999391
and	O	O:0.999730
it's	O	O:0.999294
for	O	O:0.999539
0.13	O	O:0.994117
anyhow	O	O:0.996870
);	O	O:0.997527
append	B-API	B-API:0.673768
always	O	O:0.998886
is	O	O:0.999970
a	O	O:0.999945
table	O	O:0.994656
	
I	O	O:0.999700
would	O	O:0.999958
like	O	O:0.999364
to	O	O:0.999978
get	O	O:0.999960
every	O	O:0.999525
,	O	O:0.999984
let's	O	O:0.999902
say	O	O:0.999858
,	O	O:0.999968
6	O	O:0.999980
hours	O	O:0.999532
of	O	O:0.999991
data	O	O:0.996438
and	O	O:0.999970
independently	O	O:0.999814
fit	O	O:0.998456
a	O	O:0.999980
curve	O	O:0.996308
to	O	O:0.999992
that	O	O:0.999978
data	O	O:0.999811
.	O	O:0.999820
	
Since	O	O:0.999481
pandas	O	O:0.997128
'	O	O:0.999925
`	O	O:0.999936
resample	B-API	B-API:0.725961
`	O	O:0.999928
function	O	O:0.999662
has	O	O:0.999995
a	O	O:0.999942
`	O	O:0.999886
how	O	O:0.992296
`	O	O:0.999946
keyword	O	O:0.999224
that	O	O:0.999727
is	O	O:0.999995
supposed	O	O:0.999827
to	O	O:0.999974
be	O	O:0.999997
any	O	O:0.999922
numpy	O	O:0.999230
array	O	O:0.994757
function	O	O:0.999795
,	O	O:0.999963
I	O	O:0.999982
thought	O	O:0.999947
that	O	O:0.998537
I	O	O:0.999986
could	O	O:0.999859
maybe	O	O:0.999832
try	O	O:0.999963
to	O	O:0.999952
use	O	O:0.999987
resample	B-API	O:0.647542
to	O	O:0.999924
do	O	O:0.999997
that	O	O:0.999955
with	O	O:0.999846
`	O	O:0.999933
polyfit	B-API	B-API:0.977943
`	O	O:0.999795
,	O	O:0.999922
but	O	O:0.999985
apparently	O	O:0.999775
there	O	O:0.995451
is	O	O:0.999977
no	O	O:0.999149
way	O	O:0.999538
(	O	O:0.999957
right	O	O:0.999674
?	O	O:0.999985
)	O	O:0.999609
.	O	O:0.999276
	
Why	O	O:0.999969
does	O	O:0.999259
the	O	O:0.999837
second	O	O:0.999602
block	O	O:0.999643
of	O	O:0.999982
code	O	O:0.999192
not	O	O:0.999848
work	O	O:0.997700
?	O	O:0.999962
	
Doesn't	O	O:0.997893
DataFrame.apply()	B-API	B-API:0.994851
default	O	O:0.994061
to	O	O:0.999920
inplace	O	O:0.999752
?	O	O:0.999966
	
There	O	O:0.997768
is	O	O:0.999938
no	O	O:0.999856
inplace	O	O:0.999809
parameter	O	O:0.999718
to	O	O:0.999973
the	O	O:0.999997
apply	B-API	B-API:0.886145
function	O	O:0.996369
.	O	O:0.999736
	
Even	O	O:0.997286
if	O	O:0.999905
it	O	O:0.999947
doesn't	O	O:0.999687
default	O	O:0.999022
to	O	O:0.999890
inplace	O	O:0.999703
,	O	O:0.999963
shouldn't	O	O:0.999775
it	O	O:0.999971
provide	O	O:0.998759
an	O	O:0.999980
inplace	O	O:0.999457
parameter	O	O:0.999787
the	O	O:0.999917
way	O	O:0.999027
replace()	B-API	B-API:0.844159
does	O	O:0.998494
?	O	O:0.999992
	
No	O	O:0.999957
,	O	O:0.999984
apply	B-API	O:0.881054
does	O	O:0.995590
not	O	O:0.999464
work	O	O:0.996962
inplace*	O	O:0.998439
.	O	O:0.999764
	
In	O	O:0.999936
general	O	O:0.998590
apply	B-API	O:0.626310
is	O	O:0.999926
slow	O	O:0.997169
(	O	O:0.999995
since	O	O:0.999902
you	O	O:0.999922
are	O	O:0.999982
basically	O	O:0.999823
iterating	O	O:0.998551
through	O	O:0.999802
each	O	O:0.998947
row	O	O:0.999834
in	O	O:0.999928
python	O	O:0.997180
)	O	O:0.999878
,	O	O:0.999444
and	O	O:0.999941
the	O	O:0.998705
"	O	O:0.999684
game	O	O:0.999023
"	O	O:0.999933
is	O	O:0.999989
to	O	O:0.999766
rewrite	O	O:0.999987
that	O	O:0.998105
function	O	O:0.999909
in	O	O:0.999990
terms	O	O:0.999709
of	O	O:0.999956
pandas	O	O:0.995334
/	O	O:0.999958
numpy	O	O:0.997396
native	O	O:0.994076
functions	O	O:0.995337
and	O	O:0.999578
indexing	O	O:0.997923
.	O	O:0.996582
	
If	O	O:0.999922
you	O	O:0.999924
want	O	O:0.999878
to	O	O:0.999922
delve	O	O:0.999912
into	O	O:0.999982
more	O	O:0.999930
details	O	O:0.999439
about	O	O:0.999707
the	O	O:0.999515
internals	O	O:0.999500
,	O	O:0.999991
check	O	O:0.999341
out	O	O:0.999961
the	O	O:0.999549
BlockManager	O	O:0.956172
in	O	O:0.999951
core	O	O:0.980451
/	O	O:0.999962
internals.py	O	O:0.903361
,	O	O:0.999997
this	O	O:0.999264
is	O	O:0.999951
the	O	O:0.999591
object	O	O:0.995458
which	O	O:0.999548
holds	O	O:0.999674
the	O	O:0.999983
underlying	O	O:0.998742
numpy	O	O:0.985423
arrays	O	O:0.998667
.	O	O:0.999781
	
*	O	O:0.999572
apply	B-API	B-API:0.857553
is	O	O:0.999914
not	O	O:0.998731
usually	O	O:0.999771
going	O	O:0.998344
to	O	O:0.999964
make	O	O:0.999647
sense	O	O:0.999417
inplace	O	O:0.993981
(	O	O:0.999942
and	O	O:0.998811
IMO	O	O:0.999976
this	O	O:0.999662
behaviour	O	O:0.999067
would	O	O:0.999332
rarely	O	O:0.999069
be	O	O:0.999982
desired	O	O:0.995409
)	O	O:0.999216
.	O	O:0.997859
	
I	O	O:0.999871
use	O	O:0.999988
this	O	O:0.964463
function	O	O:0.999201
with	O	O:0.999527
pandas	O	O:0.998043
to	O	O:0.999987
apply	O	O:0.955580
it	O	O:0.999923
to	O	O:0.999981
each	O	O:0.999989
month	O	O:0.999952
of	O	O:0.999960
a	O	O:0.999851
historical	O	O:0.761042
record	O	O:0.985027
:	O	O:0.999925
#CODE	O	O:0.999466
	
I	O	O:0.999945
am	O	O:0.999988
trying	O	O:0.998248
to	O	O:0.999955
merge	O	O:0.964211
tsv	O	O:0.999795
files	O	O:0.999004
using	O	O:0.998892
pandas	O	O:0.975699
but	O	O:0.998939
cannot	O	O:0.994675
get	O	O:0.999690
pandas	O	O:0.998919
to	O	O:0.999952
return	O	O:0.998671
the	O	O:0.999920
file	O	O:0.999663
contents	O	O:0.999740
correctly	O	O:0.999785
.	O	O:0.999904
	
You	O	O:0.999946
can	O	O:0.999692
use	O	O:0.999924
the	O	O:0.999840
vectorised	O	O:0.991399
`	O	O:0.999954
str	B-API	O:0.974916
`	O	O:0.999996
methods	O	O:0.996070
to	O	O:0.999988
replace	O	O:0.998213
the	O	O:0.999939
unwanted	O	O:0.997758
characters	O	O:0.998598
and	O	O:0.999981
then	O	O:0.999915
cast	O	O:0.998165
the	O	O:0.999994
type	O	O:0.997620
to	O	O:0.999906
int	O	O:0.998294
:	O	O:0.999981
#CODE	O	O:0.999390
	
perhaps	O	O:0.989643
`	O	O:0.999924
reindex	B-API	B-API:0.850367
`	O	O:0.999989
creates	O	O:0.999151
a	O	O:0.999998
new	O	O:0.999703
dataframe	O	O:0.999379
,	O	O:0.999881
`	O	O:0.999941
ix	B-API	B-API:0.879596
`	O	O:0.999983
returns	O	O:0.999653
a	O	O:0.999993
view	O	O:0.938543
	
@USER	O	O:0.999744
you	O	O:0.999621
are	O	O:0.999929
,	O	O:0.999996
of	O	O:0.999953
course	O	O:0.996903
,	O	O:0.999998
absolutely	O	O:0.999624
right	O	O:0.994751
.	O	O:0.999980
what	O	O:0.999878
do	O	O:0.999867
`	O	O:0.999983
loc	B-API	B-API:0.958888
`	O	O:0.999917
and	O	O:0.987906
`	O	O:0.999986
iloc	B-API	B-API:0.995243
`	O	O:0.999977
do	O	O:0.997284
?	O	O:0.999992
	
The	O	O:0.999868
reason	O	O:0.997255
for	O	O:0.999897
the	O	O:0.999788
seeming	O	O:0.999319
redundancy	O	O:0.997243
is	O	O:0.999994
that	O	O:0.999622
,	O	O:0.999995
while	O	O:0.999828
using	O	O:0.996961
`	O	O:0.999583
ix	B-API	B-API:0.930949
`	O	O:0.999875
is	O	O:0.999951
syntacticly	O	O:0.999441
limiting	O	O:0.975024
(	O	O:0.999988
you	O	O:0.999846
can	O	O:0.999977
only	O	O:0.999997
pass	O	O:0.999919
a	O	O:0.999994
single	O	O:0.998875
argument	O	O:0.999808
to	O	O:0.999752
`	O	O:0.999986
__getitem__	O	B-API:0.968318
`)	O	O:0.999904
,	O	O:0.999774
`	O	O:0.999975
reindex	B-API	B-API:0.944268
`	O	O:0.999959
is	O	O:0.999829
a	O	O:0.999887
method	O	O:0.995816
,	O	O:0.999896
which	O	O:0.999062
supports	O	O:0.999765
taking	O	O:0.999487
various	O	O:0.998054
optional	O	O:0.998548
parameters	O	O:0.994581
.	O	O:0.999704
	
I	O	O:0.999972
am	O	O:0.999980
getting	O	O:0.998944
different	O	O:0.998878
results	O	O:0.999479
when	O	O:0.999754
using	O	O:0.999723
`	O	O:0.999726
reindex	B-API	B-API:0.994348
`	O	O:0.999984
with	O	O:0.996615
`	O	O:0.999970
inplace=True	O	O:0.996764
`	O	O:0.999992
vs	O	O:0.999929
using	O	O:0.999664
`	O	O:0.999638
ix	B-API	B-API:0.974219
`	O	O:0.999935
(	O	O:0.999905
I	O	O:0.999996
updated	O	O:0.999933
the	O	O:0.999508
OP	O	O:0.999645
)	O	O:0.999235
	
What	O	O:0.999459
if	O	O:0.999941
you	O	O:0.999910
have	O	O:0.999905
many	O	O:0.999441
conditions	O	O:0.999200
,	O	O:0.999995
e.g.	O	O:0.999513
you	O	O:0.999855
want	O	O:0.999962
to	O	O:0.999988
split	O	O:0.998379
up	O	O:0.999981
the	O	O:0.999804
scatters	O	O:0.999852
into	O	O:0.999648
4	O	O:0.999999
types	O	O:0.995782
of	O	O:0.999975
points	O	O:0.997401
or	O	O:0.999988
even	O	O:0.999639
more	O	O:0.999759
,	O	O:0.999995
plotting	O	O:0.999705
each	O	O:0.997120
in	O	O:0.999980
different	O	O:0.999640
shape	O	O:0.999375
/	O	O:0.999897
color	O	O:0.998056
.	O	O:0.999749
	
How	O	O:0.999792
can	O	O:0.999696
you	O	O:0.999995
elegantly	O	O:0.999973
apply	O	O:0.879458
condition	O	O:0.998550
a	O	O:0.999976
,	O	O:0.999954
b	O	O:0.999716
,	O	O:0.999980
c	O	O:0.998600
,	O	O:0.999968
etc	O	O:0.999568
.	O	O:0.999375
and	O	O:0.999953
make	O	O:0.999704
sure	O	O:0.999385
you	O	O:0.999963
then	O	O:0.999935
plot	O	O:0.998580
"	O	O:0.999980
the	O	O:0.999961
rest	O	O:0.993712
"	O	O:0.999488
(	O	O:0.999947
things	O	O:0.999760
not	O	O:0.999593
in	O	O:0.999984
any	O	O:0.999908
of	O	O:0.999956
these	O	O:0.998794
conditions	O	O:0.999627
)	O	O:0.999972
as	O	O:0.999898
the	O	O:0.999968
last	O	O:0.998675
step	O	O:0.999155
?	O	O:0.999976
	
To	O	O:0.999963
find	O	O:0.999515
points	O	O:0.998829
skipped	O	O:0.999901
due	O	O:0.999944
to	O	O:0.999941
NA	O	O:0.999759
,	O	O:0.999993
try	O	O:0.999959
the	O	O:0.999420
`	O	O:0.999331
isnull	B-API	B-API:0.998298
`	O	O:0.999852
method	O	O:0.983333
:	O	O:0.999993
`	O	O:0.999970
df	O	O:0.996775
[	O	O:0.999997
df.col3.isnull()	O	O:0.834872
]`	O	O:0.999370
	
How	O	O:0.999951
do	O	O:0.999931
I	O	O:0.999995
create	O	O:0.999883
a	O	O:0.999962
pivot	O	O:0.966631
table	O	O:0.999293
in	O	O:0.999970
Pandas	O	O:0.999862
where	O	O:0.999673
one	O	O:0.999853
column	O	O:0.998684
is	O	O:0.999987
the	O	O:0.999978
mean	O	O:0.995078
of	O	O:0.999991
some	O	O:0.999717
values	O	O:0.999643
,	O	O:0.999968
and	O	O:0.999961
the	O	O:0.999891
other	O	O:0.999493
column	O	O:0.998723
is	O	O:0.999992
the	O	O:0.999979
sum	O	O:0.998244
of	O	O:0.999882
others	O	O:0.998882
?	O	O:0.999982
	
Basically	O	O:0.998751
,	O	O:0.999956
how	O	O:0.999804
would	O	O:0.999746
I	O	O:0.999996
create	O	O:0.999974
a	O	O:0.999971
pivot	O	O:0.949537
table	O	O:0.999910
that	O	O:0.999891
consolidates	O	O:0.999680
data	O	O:0.999935
,	O	O:0.999997
where	O	O:0.999949
one	O	O:0.999915
of	O	O:0.999980
the	O	O:0.999922
columns	O	O:0.999528
of	O	O:0.999990
data	O	O:0.999655
it	O	O:0.999996
represents	O	O:0.999573
is	O	O:0.999978
calculated	O	O:0.999307
,	O	O:0.999996
say	O	O:0.999877
,	O	O:0.999990
by	O	O:0.999805
`	O	O:0.999931
likelihood	O	O:0.999478
percentage	O	O:0.999294
`	O	O:0.999640
(	O	O:0.999804
0.0	O	O:0.998880
-	O	O:0.999992
1.0	O	O:0.994127
)	O	O:0.999968
by	O	O:0.999709
taking	O	O:0.999631
the	O	O:0.999744
mean	O	O:0.922569
,	O	O:0.999984
and	O	O:0.999951
another	O	O:0.998317
is	O	O:0.999849
calculated	O	O:0.999376
by	O	O:0.999936
`	O	O:0.999906
number	O	O:0.994598
ordered	O	O:0.999476
`	O	O:0.999905
which	O	O:0.999776
sums	O	O:0.999936
all	O	O:0.999869
of	O	O:0.999996
them	O	O:0.996354
?	O	O:0.999976
	
Why	O	O:0.999918
do	O	O:0.999932
you	O	O:0.999902
say	O	O:0.999988
that	O	O:0.999761
reusing	O	O:0.999631
plt.figure	B-API	B-API:0.524346
will	O	O:0.999511
lead	O	O:0.999515
to	O	O:0.999963
memory	O	O:0.999519
issues	O	O:0.998482
?	O	O:0.999902
	
I	O	O:0.999978
am	O	O:0.999969
using	O	O:0.998992
matplotlib.pyplot	B-API	O:0.993825
to	O	O:0.999312
create	O	O:0.999853
histograms	O	O:0.999257
.	O	O:0.999896
	
I	O	O:0.999914
corrected	O	O:0.999980
this	O	O:0.999737
using	O	O:0.999873
the	O	O:0.996638
`	O	O:0.997558
set_position	B-API	B-API:0.979514
`	O	O:0.999861
command	O	O:0.992108
.	O	O:0.999935
	
`	O	O:0.999723
np.asarray	B-API	B-API:0.974347
(	O	O:0.999968
Image.fromarray	O	O:0.613821
(	O	O:0.999932
image.astype	O	O:0.954966
(	O	O:0.999953
'	O	O:0.999917
uint8	O	O:0.992933
')	O	O:0.999770
*255	O	O:0.697056
)	O	O:0.999286
.convert	B-API	B-API:0.989810
(	O	O:0.999970
'	O	O:0.999906
L	O	O:0.999392
'))	O	O:0.998291
.astype	B-API	B-API:0.994490
(	O	O:0.999950
float	O	O:0.979286
)	O	O:0.999910
/	O	O:0.999450
255	O	O:0.998304
`	O	O:0.999656
	
python	O	O:0.956367
:	O	O:0.999969
ImportError	O	O:0.999174
:	O	O:0.999970
No	O	O:0.999982
module	O	O:0.999257
named	O	O:0.999402
patheffects	B-API	O:0.989662
	
import	O	O:0.995413
matplotlib.patheffects	B-API	O:0.970929
	
`	O	O:0.999543
plt.bar	B-API	B-API:0.923505
(	O	O:0.999990
left	O	O:0.987673
,	O	O:0.999962
height	O	O:0.998977
,	O	O:0.999910
width=	O	O:0.999339
0.8	O	O:0.978120
,	O	O:0.999966
bottom=None	O	O:0.999507
,	O	O:0.999948
hold=None	O	O:0.999765
,	O	O:0.999941
**	O	O:0.999792
kwargs	O	O:0.983943
)`	O	O:0.999656
	
I	O	O:0.999982
typically	O	O:0.999944
have	O	O:0.999891
them	O	O:0.999818
in	O	O:0.999969
the	O	O:0.999753
ax.plot	B-API	O:0.875429
line	O	O:0.997638
.	O	O:0.999852
	
my	O	O:0.999824
attempt	O	O:0.999696
to	O	O:0.999943
define	O	O:0.999899
the	O	O:0.999889
aspect	O	O:0.998915
ratio	O	O:0.999178
for	O	O:0.999989
both	O	O:0.998587
`	O	O:0.999984
y	O	O:0.994803
`	O	O:0.999976
-axis	O	O:0.999344
while	O	O:0.999926
using	O	O:0.999320
`	O	O:0.999804
twinx	B-API	B-API:0.996953
`	O	O:0.999784
(	O	O:0.999335
which	O	O:0.999951
does	O	O:0.999357
not	O	O:0.999942
work	O	O:0.998723
)	O	O:0.999777
	
For	O	O:0.999974
each	O	O:0.997976
of	O	O:0.999985
this	O	O:0.999741
point	O	O:0.999863
,	O	O:0.999995
I	O	O:0.999998
can	O	O:0.999898
calculate	O	O:0.999817
the	O	O:0.999998
value	O	O:0.999849
of	O	O:0.999987
my	O	O:0.999665
unordered	O	O:0.999644
categorical	B-API	O:0.928736
variable	O	O:0.996226
X	O	O:0.998873
.	O	O:0.999720
	
You	O	O:0.999846
can	O	O:0.999699
achieve	O	O:0.999856
it	O	O:0.999980
using	O	O:0.999838
the	O	O:0.997833
`	O	O:0.998087
ScalarFormatter	B-API	B-API:0.947296
`	O	O:0.999326
:	O	O:0.999894
#CODE	O	O:0.999861
	
@USER	O	O:0.999230
how	O	O:0.998352
is	O	O:0.999937
hexbin	B-API	O:0.989729
useful	O	O:0.999608
here	O	O:0.997756
?	O	O:0.999884
	
Hmm	O	O:0.999370
,	O	O:0.999962
doesn't	O	O:0.999570
look	O	O:0.998904
like	O	O:0.999916
there	O	O:0.998039
is	O	O:0.999935
anything	O	O:0.998240
obvious	O	O:0.997490
is	O	O:0.999969
rcParams	B-API	B-API:0.502214
or	O	O:0.999949
the	O	O:0.999876
matplotlibrc	O	O:0.983757
file	O	O:0.998608
.	O	O:0.999817
	
What	O	O:0.999154
you're	O	O:0.999914
doing	O	O:0.997543
is	O	O:0.999942
aliasing	O	O:0.988961
(	O	O:0.999813
"	O	O:0.999910
renaming	O	O:0.999429
")	O	O:0.999731
matplotlib.font_manager	B-API	O:0.996253
to	O	O:0.999959
FontProperties	B-API	O:0.999953
so	O	O:0.999982
calling	O	O:0.999332
fontP	O	O:0.999655
=	O	O:0.999977
FontProperties()	B-API	O:0.969212
is	O	O:0.999981
actually	O	O:0.999545
calling	O	O:0.996116
matplotlib.font_manager	B-API	O:0.991252
which	O	O:0.985665
is	O	O:0.999948
not	O	O:0.999469
callable	O	O:0.999035
.	O	O:0.999855
	
I	O	O:0.999986
think	O	O:0.999811
changing	O	O:0.998711
the	O	O:0.999163
arrowstyle	B-API	O:0.549182
will	O	O:0.999105
help	O	O:0.999103
here	O	O:0.999623
.	O	O:0.999799
	
plt.plot	B-API	B-API:0.860595
(	O	O:0.999947
x	O	O:0.999633
,	O	O:0.999996
z	O	O:0.999832
)	O	O:0.999588
	
`	O	O:0.999421
plt.tight_layout	B-API	B-API:0.920224
(	O	O:0.999979
pad=	O	O:0.998050
2.0	O	O:0.996868
,	O	O:0.999957
h_pad=	O	O:0.990023
6.5	O	O:0.990042
,	O	O:0.999905
w_pad=	O	O:0.996838
4.5	O	O:0.994991
)`	O	O:0.999927
gives	O	O:0.998974
the	O	O:0.999986
desired	O	O:0.993408
result	O	O:0.996514
(	O	O:0.999989
Fig.3	O	O:0.993392
)	O	O:0.999661
.	O	O:0.998559
	
Should	O	O:0.999130
work	O	O:0.996001
without	O	O:0.999622
the	O	O:0.999867
line	O	O:0.997693
`	O	O:0.999960
X	O	O:0.999393
,	O	O:0.999997
Y	O	O:0.999742
=	O	O:0.999915
np.meshgrid	B-API	B-API:0.786381
(	O	O:0.999946
X	O	O:0.999952
,	O	O:0.999992
Y	O	O:0.999722
)`	O	O:0.999683
.	O	O:0.998805
	
O1	O	O:0.999883
=	O	O:0.999901
np.array	B-API	B-API:0.752606
(	O	O:0.999964
new_OI	O	O:0.994818
)	O	O:0.999612
	
There's	O	O:0.997996
no	O	O:0.999946
need	O	O:0.999776
for	O	O:0.999983
a	O	O:0.999963
vector	O	O:0.995659
representation	O	O:0.999327
of	O	O:0.999947
each	O	O:0.998569
pixel	O	O:0.997601
,	O	O:0.999965
and	O	O:0.999500
`	O	O:0.999642
imshow	B-API	B-API:0.991241
`	O	O:0.999968
will	O	O:0.988988
be	O	O:0.999998
much	O	O:0.998338
faster	O	O:0.999123
.	O	O:0.998294
	
So	O	O:0.999922
definitely	O	O:0.998804
not	O	O:0.999706
in	O	O:0.999929
an	O	O:0.999917
equidistant	O	O:0.996553
meshgrid	B-API	B-API:0.835371
.	O	O:0.999563
	
Inserted	O	O:0.997305
after	O	O:0.999285
pyplot.savefig()	B-API	B-API:0.998326
and	O	O:0.999244
the	O	O:0.999947
problem	O	O:0.996846
seems	O	O:0.999877
to	O	O:0.999983
be	O	O:0.999991
solved	O	O:0.998946
.	O	O:0.999136
	
`	O	O:0.999537
numpy.polyfit	B-API	B-API:0.994324
(	O	O:0.999984
x	O	O:0.999825
,	O	O:0.999997
y	O	O:0.999900
,	O	O:0.999986
deg	O	O:0.997206
,	O	O:0.999961
rcond=None	O	O:0.999590
,	O	O:0.999940
full=False	O	O:0.997021
,	O	O:0.999911
w=None	O	O:0.999689
,	O	O:0.999967
cov=False	O	O:0.999614
)`	O	O:0.999482
	
Simply	O	O:0.998848
putting	O	O:0.992738
in	O	O:0.999149
:	O	O:0.999923
`	O	O:0.999988
bbox	O	B-API:0.769181
=d	O	O:0.999967
ict	O	O:0.964501
(	O	O:0.999985
facecolor=	O	O:0.998285
'	O	O:0.999979
blue	O	O:0.998303
'	O	O:0.999954
,	O	O:0.999955
alpha=	O	O:0.999875
0.5	O	O:0.996145
)`	O	O:0.999717
in	O	O:0.999789
the	O	O:0.999962
ax.text	B-API	O:0.783836
statement	O	O:0.999440
changes	O	O:0.999543
the	O	O:0.999953
color	O	O:0.997926
.	O	O:0.999729
	
ax.set_xticks	B-API	B-API:0.564903
([	O	O:0.999736
"	O	O:0.998949
1975-01-01	O	O:0.996638
"	O	O:0.999688
,	O	O:0.999884
"	O	O:0.999840
1980-01-01	O	O:0.990291
"	O	O:0.999674
,	O	O:0.999910
"	O	O:0.999840
1985-01-01	O	O:0.990291
"	O	O:0.999674
,	O	O:0.999910
"	O	O:0.999840
1990-01-01	O	O:0.990291
"	O	O:0.999674
,	O	O:0.999910
"	O	O:0.999853
1995-01-01	O	O:0.991061
"	O	O:0.999537
,	O	O:0.999774
	
Also	O	O:0.999057
,	O	O:0.999979
don't	O	O:0.999672
mix	O	O:0.959458
`	O	O:0.999965
pyplot	B-API	O:0.982051
`	O	O:0.999992
with	O	O:0.999291
guis	O	O:0.997938
(	O	O:0.999993
unless	O	O:0.999858
you	O	O:0.999902
are	O	O:0.999974
explicitly	O	O:0.999968
using	O	O:0.999829
a	O	O:0.999787
non-interactive	O	O:0.981622
backend	O	O:0.984654
)	O	O:0.999492
.	O	O:0.997115
	
FuncAnimation	B-API	B-API:0.909247
	
`	O	O:0.999852
x2	O	O:0.994355
'	O	O:0.999974
=	O	O:0.999981
-mu	O	O:0.998550
/	O	O:0.999651
np.sqrt	B-API	B-API:0.965110
(	O	O:0.999971
x	O	O:0.999811
**	O	O:0.999631
2	O	O:0.999947
+	O	O:0.999965
y	O	O:0.999567
**	O	O:0.999542
2	O	O:0.999826
+	O	O:0.999895
z	O	O:0.999426
**	O	O:0.999821
2	O	O:0.999787
)	O	O:0.999945
*	O	O:0.999520
x	O	O:0.998155
`	O	O:0.999881
,	O	O:0.999780
	
matplotlib.pyplot.stem	B-API	O:0.864815
(	O	O:0.999920
*args	O	O:0.997706
,	O	O:0.999967
**	O	O:0.999843
kwargs	O	O:0.971662
)	O	O:0.999696
	
I've	O	O:0.997923
confirmed	O	O:0.999254
that	O	O:0.999833
this	O	O:0.999889
works	O	O:0.999890
for	O	O:0.999861
`	O	O:0.999916
plot()	B-API	B-API:0.997696
`	O	O:0.999955
as	O	O:0.999980
well	O	O:0.999903
as	O	O:0.999955
`	O	O:0.999781
imshow()	B-API	B-API:0.997718
`	O	O:0.999752
.	O	O:0.998373
	
PCA	B-API	O:0.999184
(	O	O:0.999956
X	O	O:0.999748
)	O	O:0.999769
is	O	O:0.999875
not	O	O:0.999741
the	O	O:0.999969
same	O	O:0.999877
thing	O	O:0.999900
as	O	O:0.999975
PCA	B-API	O:0.999481
(	O	O:0.999972
X.T	O	O:0.990169
)	O	O:0.999586
.T	B-API	B-API:0.739029
	
I	O	O:0.999822
should	O	O:0.999816
have	O	O:0.997208
used	O	O:0.999440
OffsetImage	B-API	B-API:0.921672
and	O	O:0.992823
AnnotationBbox	B-API	B-API:0.922096
.	O	O:0.995942
	
Using	O	O:0.997031
GridSpec	B-API	O:0.959748
	
Try	O	O:0.999756
removing	O	O:0.999893
that	O	O:0.997991
argument	O	O:0.999973
from	O	O:0.999913
your	O	O:0.999909
call	O	O:0.998777
to	O	O:0.999961
`	O	O:0.999987
streamplot	B-API	O:0.992709
`	O	O:0.999956
.	O	O:0.999148
	
Try	O	O:0.999383
``	O	O:0.999433
ax.text	B-API	B-API:0.893005
(	O	O:0.999945
0	O	O:0.999929
,	O	O:0.999976
0	O	O:0.999915
,	O	O:0.999968
'	O	O:0.999836
whatever	O	O:0.999004
')``	O	O:0.993228
.	O	O:0.998733
	
matplotlib	O	O:0.997496
tripcolor	B-API	O:0.999152
-	O	O:0.999988
removing	O	O:0.999326
edges	O	O:0.892222
	
`	O	O:0.999721
ax.xaxis.get_children()	O	O:0.787776
[	O	O:0.999989
1	O	O:0.999961
]	O	O:0.999904
.set_size	B-API	O:0.729110
(	O	O:0.999975
15	O	O:0.999839
)`	O	O:0.999355
	
I	O	O:0.999980
have	O	O:0.999776
tried	O	O:0.999884
lots	O	O:0.999826
of	O	O:0.999989
different	O	O:0.999403
combinations	O	O:0.999112
of	O	O:0.999992
the	O	O:0.999010
ax.plot()	B-API	B-API:0.951372
part	O	O:0.942369
,	O	O:0.999990
but	O	O:0.999975
if	O	O:0.999808
I	O	O:0.999921
change	O	O:0.998655
it	O	O:0.997894
to	O	O:0.998863
:	O	O:0.999994
#CODE	O	O:0.999625
	
but	O	O:0.999067
i	O	O:0.999992
want	O	O:0.999387
to	O	O:0.999951
keep	O	O:0.999934
the	O	O:0.999920
ytick	B-API	O:0.995791
marks	O	O:0.999939
only	O	O:0.999896
on	O	O:0.999989
the	O	O:0.999961
left	O	O:0.989682
hand	O	O:0.999790
side	O	O:0.999798
.	O	O:0.999990
thank	O	O:0.999556
you	O	O:0.999213
.	O	O:0.999684
	
fig	O	O:0.991437
is	O	O:0.999966
defined	O	O:0.998503
as	O	O:0.999900
:	O	O:0.999966
`	O	O:0.999970
fig	O	O:0.999196
=	O	O:0.999991
plt.figure()	B-API	B-API:0.974689
`	O	O:0.999566
	
We	O	O:0.999963
used	O	O:0.999284
the	O	O:0.999201
same	O	O:0.990376
method	O	O:0.992847
,	O	O:0.999998
but	O	O:0.999961
I	O	O:0.999961
somehow	O	O:0.999663
missed	O	O:0.991836
`	O	O:0.999932
set_markeredgewidth	B-API	O:0.924513
`	O	O:0.999923
.	O	O:0.998634
	
--->	O	O:0.954113
29	O	O:0.998370
import	O	O:0.997720
matplotlib.colorbar	B-API	O:0.977026
	
ax.plot	B-API	B-API:0.598046
(	O	O:0.999896
r.date	O	O:0.981858
,	O	O:0.999990
r.close	O	O:0.993115
)	O	O:0.999052
	
plt.plot()	B-API	B-API:0.999614
	
The	O	O:0.999130
`	O	O:0.999784
.format	B-API	B-API:0.993369
`	O	O:0.999995
form	O	O:0.998542
is	O	O:0.999996
the	O	O:0.999881
preferred	O	O:0.999356
way	O	O:0.999905
to	O	O:0.999965
do	O	O:0.999992
string	O	O:0.999799
formatting	O	O:0.999729
now	O	O:0.999824
as	O	O:0.999981
opposed	O	O:0.999778
to	O	O:0.999959
the	O	O:0.999970
`	O	O:0.999884
%	O	O:0.996076
`	O	O:0.999987
operator	O	O:0.998998
.	O	O:0.999829
	
`	O	O:0.999790
GridSpec	B-API	O:0.972632
`	O	O:0.999963
works	O	O:0.998883
for	O	O:0.999978
me	O	O:0.999812
(	O	O:0.999824
`	O	O:0.999986
matplotlib	O	O:0.990489
`	O	O:0.999964
v1.5.0	O	O:0.987045
in	O	O:0.999979
case	O	O:0.999199
it	O	O:0.999978
matters	O	O:0.985002
):	O	O:0.999935
#CODE	O	O:0.998540
	
A	O	O:0.999867
search	O	O:0.998930
of	O	O:0.999954
the	O	O:0.997828
`	O	O:0.999954
matplotlib.pyplot	B-API	O:0.951206
`	O	O:0.999976
API	O	O:0.999603
documentation	O	O:0.999922
does	O	O:0.997941
not	O	O:0.999719
reveal	O	O:0.999155
anything	O	O:0.999691
,	O	O:0.999966
so	O	O:0.999969
I'm	O	O:0.999738
afraid	O	O:0.999706
you'll	O	O:0.999809
have	O	O:0.999445
to	O	O:0.999988
live	O	O:0.999951
with	O	O:0.999961
using	O	O:0.997838
`	O	O:0.999806
matplotlib.patches.Ellipse	B-API	B-API:0.998667
`	O	O:0.999608
	
for	O	O:0.999825
why	O	O:0.998764
`	O	O:0.999678
LinearSegmentedColormap	B-API	B-API:0.977908
`	O	O:0.999983
shows	O	O:0.998959
strange	O	O:0.999925
color	O	O:0.999823
,	O	O:0.999983
I	O	O:0.999977
think	O	O:0.999882
this	O	O:0.999794
link	O	O:0.997981
would	O	O:0.999604
be	O	O:0.999918
helpful	O	O:0.997140
.	O	O:0.999255
	
I	O	O:0.999978
did	O	O:0.999929
so	O	O:0.999958
both	O	O:0.999679
in	O	O:0.999955
the	O	O:0.999735
Windows	O	O:0.998928
shell	O	O:0.991468
and	O	O:0.999970
emacs	O	O:0.999615
shell	O	O:0.989427
and	O	O:0.999850
the	O	O:0.999870
same	O	O:0.996870
PYTHONPATH	O	O:0.631686
is	O	O:0.999993
used	O	O:0.999445
.	O	O:0.999923
doing	O	O:0.998878
the	O	O:0.999222
rcParams	B-API	B-API:0.855807
both	O	O:0.996518
return	O	O:0.990953
TkAgg	O	O:0.981153
.	O	O:0.999374
	
However	O	O:0.999297
,	O	O:0.999982
the	O	O:0.999693
savefig()	B-API	B-API:0.971682
output	O	O:0.997661
is	O	O:0.999986
too	O	O:0.999262
zoomed	O	O:0.999799
out	O	O:0.999473
,	O	O:0.999888
too	O	O:0.999773
general	O	O:0.992106
.	O	O:0.999524
	
plt.imshow	B-API	B-API:0.907924
(	O	O:0.999853
Xt	O	O:0.999620
[	O	O:0.999973
0	O	O:0.999961
,	O	O:0.999970
:]	O	O:0.998925
.reshape	B-API	B-API:0.996575
(	O	O:0.999968
105,105	O	O:0.999814
)	O	O:0.999716
.T	B-API	B-API:0.637161
,	O	O:0.999950
interpolation=	O	O:0.999351
'	O	O:0.999825
nearest	O	O:0.992475
'	O	O:0.999932
,	O	O:0.999981
cmap=	O	O:0.999471
cm.Greys_r	O	O:0.954574
)	O	O:0.999258
and	O	O:0.999331
it	O	O:0.999982
gives	O	O:0.998822
me	O	O:0.999978
the	O	O:0.999890
correct	O	O:0.997276
flipped	O	O:0.999388
output	O	O:0.998651
.	O	O:0.999555
	
See	O	O:0.999454
[	O	O:0.999840
`	O	O:0.999943
matplotlib.pyplot.contourf	B-API	B-API:0.821215
`]	O	O:0.974929
(	O	O:0.999860
#URL	O	O:0.999885
)	O	O:0.999905
for	O	O:0.999749
example	O	O:0.997725
.	O	O:0.999053
	
Why	O	O:0.999515
pyplot	B-API	O:0.976787
(	O	O:0.999985
matplotlib	O	O:0.999043
)	O	O:0.999773
is	O	O:0.999870
joining	O	O:0.998763
points	O	O:0.997019
randomly	O	O:0.998856
?	O	O:0.999939
	
x	O	O:0.998110
=	O	O:0.999976
np.array	B-API	O:0.645569
([	O	O:0.999917
1	O	O:0.999869
,	O	O:0.999982
3	O	O:0.999945
,	O	O:0.999975
4	O	O:0.999961
])	O	O:0.999533
,	O	O:0.999917
([	O	O:0.999984
1	O	O:0.999392
,	O	O:0.999992
2	O	O:0.999939
])	O	O:0.998576
	
`	O	O:0.999800
np.arange	B-API	B-API:0.987723
`	O	O:0.999901
doc	O	O:0.995863
	
plt.colorbar	B-API	B-API:0.803356
(	O	O:0.999973
cs	O	O:0.999472
)	O	O:0.999829
	
`	O	O:0.999800
tick_params	B-API	B-API:0.980246
`	O	O:0.999922
should	O	O:0.998599
do	O	O:0.999963
it	O	O:0.999946
.	O	O:0.999722
	
I	O	O:0.999984
have	O	O:0.999615
experiemented	O	O:0.998401
with	O	O:0.999354
turning	O	O:0.999328
interactivity	O	O:0.998761
on	O	O:0.999873
and	O	O:0.999872
off	O	O:0.999946
via	O	O:0.998952
`	O	O:0.999879
plt.ioff()	B-API	B-API:0.999831
`	O	O:0.999538
,	O	O:0.999946
but	O	O:0.999981
to	O	O:0.999941
no	O	O:0.999950
avail	O	O:0.998418
.	O	O:0.999767
	
don't	O	O:0.999584
do	O	O:0.999633
`	O	O:0.999825
plt.xticks	B-API	B-API:0.807115
...	O	O:0.997297
	
thx	O	O:0.996648
!	O	O:0.999973
but	O	O:0.999662
in	O	O:0.999956
the	O	O:0.998118
end	O	O:0.997604
this	O	O:0.996615
worked	O	O:0.999472
:	O	O:0.999979
`	O	O:0.999942
ax	O	O:0.990554
[	O	O:0.999994
1	O	O:0.999964
]	O	O:0.999823
.bar	B-API	B-API:0.991248
(	O	O:0.999960
bins	O	O:0.997209
[:	O	O:0.999987
-1	O	O:0.999708
]	O	O:0.999954
,	O	O:0.999783
1	O	O:0.999843
.	O	O:0.999792
*hist	O	O:0.999535
/	O	O:0.999848
N	O	O:0.999297
,	O	O:0.999970
np.diff	B-API	B-API:0.956658
(	O	O:0.999968
bins	O	O:0.999330
)	O	O:0.999964
,	O	O:0.999930
log=True	O	O:0.878323
)`	O	O:0.998320
	
For	O	O:0.999929
example	O	O:0.996182
`	O	O:0.999955
griddata	B-API	B-API:0.928499
`	O	O:0.999965
,	O	O:0.999807
`	O	O:0.999988
Rbf	O	B-API:0.872439
`	O	O:0.999788
,	O	O:0.999792
...	O	O:0.999059
	
It	O	O:0.999863
sounds	O	O:0.999878
like	O	O:0.999824
you	O	O:0.999715
would	O	O:0.998376
rather	O	O:0.999976
have	O	O:0.999853
an	O	O:0.999931
`	O	O:0.999983
axhspan	B-API	O:0.995030
`	O	O:0.999993
or	O	O:0.999752
`	O	O:0.999971
axvspan	B-API	B-API:0.929421
`	O	O:0.999912
.	O	O:0.998426
	
matplotlib	O	O:0.993221
:	O	O:0.999986
plt.isinteractive()	B-API	O:0.932708
returns	O	O:0.999300
0	O	O:0.999955
instead	O	O:0.999753
of	O	O:0.999927
True	O	O:0.994378
or	O	O:0.999982
False	O	O:0.988256
after	O	O:0.999691
plt.ion()	B-API	B-API:0.999698
is	O	O:0.999776
called	O	O:0.999223
,	O	O:0.999994
when	O	O:0.998285
the	O	O:0.999930
script	O	O:0.997783
is	O	O:0.999990
being	O	O:0.999335
run	O	O:0.999772
in	O	O:0.999901
a	O	O:0.999971
terminal	O	O:0.994729
?	O	O:0.999931
	
matplotlib	O	O:0.971336
FuncAnimation	B-API	B-API:0.653759
input	O	O:0.997203
	
@USER	O	O:0.999610
Do	O	O:0.999868
I	O	O:0.999996
need	O	O:0.999751
to	O	O:0.999947
pass	O	O:0.999826
anything	O	O:0.999931
additional	O	O:0.999146
to	O	O:0.999787
`	O	O:0.999989
ColorbarBase()	B-API	O:0.850463
`	O	O:0.999948
?	O	O:0.999917
	
In	O	O:0.999984
some	O	O:0.999602
other	O	O:0.999975
code	O	O:0.999945
,	O	O:0.999994
I	O	O:0.999997
used	O	O:0.999798
the	O	O:0.998455
OpenCV	O	O:0.984297
`	O	O:0.999911
SaveImage	O	O:0.995802
`	O	O:0.999989
on	O	O:0.999901
a	O	O:0.999997
single	O	O:0.999689
frame	O	O:0.999935
to	O	O:0.999973
provide	O	O:0.999931
a	O	O:0.999991
reference	O	O:0.997967
for	O	O:0.999974
what	O	O:0.999211
I	O	O:0.999934
would	O	O:0.999899
expect	O	O:0.999692
from	O	O:0.999626
`	O	O:0.999791
imshow	B-API	B-API:0.874777
`	O	O:0.999884
.	O	O:0.997386
	
AxesSubplot	O	O:0.989574
has	O	O:0.999944
no	O	O:0.999774
attribute	O	O:0.999479
hist2d	B-API	B-API:0.695764
-	O	O:0.999909
Matplotlib	O	O:0.998056
	
fig	O	O:0.998933
=	O	O:0.999900
plt.figure()	B-API	B-API:0.984894
	
customize	O	O:0.998788
ticks	O	O:0.999227
for	O	O:0.999848
AxesImage	B-API	O:0.772407
?	O	O:0.999724
	
In	O	O:0.999735
addition	O	O:0.999447
,	O	O:0.999979
"	O	O:0.999916
changing	O	O:0.996392
plt.figure	B-API	B-API:0.909010
(	O	O:0.999917
i	O	O:0.999976
)"	O	O:0.999345
is	O	O:0.999936
not	O	O:0.999328
correct	O	O:0.998794
.	O	O:0.999772
	
I	O	O:0.999940
tried	O	O:0.999584
it	O	O:0.999117
out	O	O:0.999407
.	O	O:0.999414
linecollection	B-API	O:0.625654
does	O	O:0.999739
not	O	O:0.999784
appear	O	O:0.997514
to	O	O:0.999824
work	O	O:0.999574
in	O	O:0.999909
3D	O	O:0.999917
.	O	O:0.999507
	
You	O	O:0.999738
can	O	O:0.999473
verify	O	O:0.999405
it	O	O:0.999984
by	O	O:0.999955
calling	O	O:0.998830
`	O	O:0.999944
plt.xlim()	B-API	B-API:0.999844
`	O	O:0.999965
both	O	O:0.997767
before	O	O:0.999818
and	O	O:0.999628
after	O	O:0.999710
the	O	O:0.999071
`	O	O:0.999699
pandas.plot()	O	B-API:0.999915
`	O	O:0.999989
call	O	O:0.937928
.	O	O:0.999961
	
Did	O	O:0.999733
you	O	O:0.999914
try	O	O:0.999945
calling	O	O:0.998958
`	O	O:0.999955
plt.show()	B-API	B-API:0.999527
`	O	O:0.999932
?	O	O:0.999885
	
Edit	O	O:0.997274
:	O	O:0.999974
My	O	O:0.999991
original	O	O:0.997784
answer	O	O:0.999944
used	O	O:0.998527
`	O	O:0.999144
ax.scatter	B-API	B-API:0.803722
`	O	O:0.999646
.	O	O:0.997494
	
The	O	O:0.999904
helper	O	O:0.998887
functions	O	O:0.998349
date2num()	B-API	B-API:0.915897
,	O	O:0.999880
num2date()	B-API	B-API:0.594014
and	O	O:0.999644
drange()	B-API	O:0.980197
are	O	O:0.999694
used	O	O:0.999878
to	O	O:0.999611
facilitate	O	O:0.999982
easy	O	O:0.999764
conversion	O	O:0.999841
to	O	O:0.999927
and	O	O:0.999995
from	O	O:0.999669
datetime	O	O:0.968846
and	O	O:0.999963
numeric	O	O:0.942601
ranges	O	O:0.951903
.	O	O:0.999605
	
Here's	O	O:0.999193
an	O	O:0.999977
example	O	O:0.999860
of	O	O:0.999966
how	O	O:0.999954
you	O	O:0.999960
can	O	O:0.999900
display	O	O:0.999940
multiple	O	O:0.999861
plots	O	O:0.999034
side-by-side	O	O:0.999967
below	O	O:0.999889
a	O	O:0.999964
larger	O	O:0.998800
one	O	O:0.999029
using	O	O:0.994985
Gridspec	B-API	O:0.906372
:	O	O:0.999653
#CODE	O	O:0.998816
	
I	O	O:0.999991
only	O	O:0.999943
just	O	O:0.999110
discovered	O	O:0.999929
the	O	O:0.999748
awesome	O	O:0.999900
that	O	O:0.999255
is	O	O:0.999991
`	O	O:0.999946
matplotlib.mlab.psd()	B-API	B-API:0.770634
`	O	O:0.999293
,	O	O:0.999946
but	O	O:0.999974
I	O	O:0.999983
am	O	O:0.999952
having	O	O:0.998336
one	O	O:0.999581
issue	O	O:0.998712
,	O	O:0.999997
that	O	O:0.997874
is	O	O:0.999940
:	O	O:0.999994
how	O	O:0.999988
can	O	O:0.999907
I	O	O:0.999998
change	O	O:0.999931
the	O	O:0.999303
frequency	O	O:0.999425
range	O	O:0.998482
used	O	O:0.999729
by	O	O:0.998544
the	O	O:0.998260
method	O	O:0.991000
?	O	O:0.999946
	
Python	O	O:0.998513
Matlplotlib	O	O:0.999300
errorbar	B-API	B-API:0.806556
:	O	O:0.999993
some	O	O:0.999870
errors	O	O:0.999873
disappear	O	O:0.995303
	
@USER	O	O:0.995949
It	O	O:0.999969
says	O	O:0.999209
:	O	O:0.999994
font_manager	B-API	O:0.996652
attribute	O	O:0.999798
not	O	O:0.999462
found	O	O:0.998654
o_O	O	O:0.998873
.	O	O:0.999347
	
Documentation	O	O:0.999701
of	O	O:0.999959
legacy	O	O:0.986515
`	O	O:0.999933
subplot()	B-API	B-API:0.993247
`	O	O:0.999749
is	O	O:0.999879
[	O	O:0.999998
here	O	O:0.999629
]	O	O:0.999832
(	O	O:0.999835
#URL	O	O:0.999663
)	O	O:0.999700
and	O	O:0.999333
`	O	O:0.999960
subplots()	B-API	B-API:0.948218
`	O	O:0.999570
is	O	O:0.999817
[	O	O:0.999998
here	O	O:0.999629
]	O	O:0.999892
(	O	O:0.999882
#URL	O	O:0.999600
)	O	O:0.999566
.	O	O:0.998807
	
I	O	O:0.999934
am	O	O:0.999984
not	O	O:0.999250
completely	O	O:0.999964
sure	O	O:0.999823
if	O	O:0.999998
this	O	O:0.999758
is	O	O:0.999941
the	O	O:0.999936
kind	O	O:0.998507
of	O	O:0.999969
thing	O	O:0.999140
you're	O	O:0.999790
looking	O	O:0.997919
for	O	O:0.997947
,	O	O:0.999914
but	O	O:0.999740
`	O	O:0.999863
legend()	B-API	B-API:0.999479
`	O	O:0.999925
inside	O	O:0.986254
`	O	O:0.999988
matplotlib.pyplot	B-API	O:0.929499
`	O	O:0.999991
may	O	O:0.999166
be	O	O:0.999998
able	O	O:0.999696
to	O	O:0.999978
help	O	O:0.999511
you	O	O:0.999870
out	O	O:0.999843
.	O	O:0.999665
	
Is	O	O:0.999970
the	O	O:0.999938
PCA	B-API	O:0.999899
stuff	O	O:0.999475
really	O	O:0.999110
relevant	O	O:0.999349
?	O	O:0.999942
	
Seaborns	O	O:0.999006
clustermap	O	O:0.648200
doesn't	O	O:0.999639
work	O	O:0.999696
with	O	O:0.999404
plt.tight_layout()	B-API	B-API:0.998023
.	O	O:0.999424
	
fig	O	O:0.997381
=	O	O:0.999902
plt.figure	B-API	B-API:0.822928
(	O	O:0.999973
**figprops	O	O:0.999059
)	O	O:0.999758
.	O	O:0.998844
	
From	O	O:0.999880
your	O	O:0.998237
remark	O	O:0.999915
that	O	O:0.999521
`	O	O:0.999988
datetime	O	O:0.881630
(	O	O:0.999983
2009	O	O:0.998771
,	O	O:0.999969
10	O	O:0.999870
,	O	O:0.999941
7	O	O:0.999958
,	O	O:0.999985
0	O	O:0.999904
)	O	O:0.999600
.strftime	B-API	B-API:0.985046
(	O	O:0.999913
'	O	O:0.999912
%Hz%d%b	O	O:0.996278
')`	O	O:0.999924
gave	O	O:0.999324
the	O	O:0.999920
right	O	O:0.999526
string	O	O:0.998554
I	O	O:0.999913
would've	O	O:0.999932
thought	O	O:0.991814
it	O	O:0.999519
worked	O	O:0.996280
.	O	O:0.999422
	
yerr	O	O:0.983181
=	O	O:0.999963
np.array	B-API	B-API:0.720577
([	O	O:0.999854
])	O	O:0.998094
	
ax	O	O:0.989627
=	O	O:0.999769
fig.add_subplot	B-API	O:0.656695
(	O	O:0.999942
111	O	O:0.998281
);	O	O:0.999430
	
plt.subplots	B-API	B-API:0.927607
:	O	O:0.999847
	
(	O	O:0.999862
It's	O	O:0.999801
not	O	O:0.999856
the	O	O:0.999923
edgecolor	O	B-API:0.635833
option	O	O:0.998723
in	O	O:0.999973
pcolormesh	B-API	B-API:0.830709
)	O	O:0.999562
#CODE	O	O:0.996845
	
`	O	O:0.999647
plt.xlabel	B-API	B-API:0.992260
(	O	O:0.999958
u'Wavelength	O	O:0.997621
(	O	O:0.999967
\u03bc	O	O:0.999266
m	O	O:0.998815
)')`	O	O:0.994231
	
You	O	O:0.999930
may	O	O:0.999593
see	O	O:0.999951
that	O	O:0.999615
how	O	O:0.999658
`	O	O:0.999929
.ix	B-API	B-API:0.996589
`	O	O:0.999881
was	O	O:0.999843
used	O	O:0.999856
for	O	O:0.999879
selecting	O	O:0.997694
an	O	O:0.998981
interval	O	O:0.997666
.	O	O:0.999604
	
I	O	O:0.999985
am	O	O:0.999980
running	O	O:0.995564
the	O	O:0.999907
tutorial	O	O:0.994563
for	O	O:0.999895
pylearn2	O	O:0.986590
and	O	O:0.999744
I'm	O	O:0.999899
getting	O	O:0.998914
some	O	O:0.998528
errors	O	O:0.999775
when	O	O:0.999382
it	O	O:0.999987
imports	O	O:0.999297
`	O	O:0.999967
matplotlib.pyplot	B-API	O:0.888814
`	O	O:0.999910
.	O	O:0.998508
	
then	O	O:0.999267
a	O	O:0.999999
call	O	O:0.986268
to	O	O:0.999979
`	O	O:0.999963
fig.get_size_inches()	B-API	B-API:0.956350
`	O	O:0.999983
gives	O	O:0.992562
`	O	O:0.999989
[	O	O:0.999879
6	O	O:0.999948
,	O	O:0.999984
7.475	O	O:0.972866
]`	O	O:0.999029
.	O	O:0.998056
	
I	O	O:0.999980
am	O	O:0.999988
experiencing	O	O:0.998858
the	O	O:0.999972
same	O	O:0.999897
problem	O	O:0.999842
as	O	O:0.999996
described	O	O:0.999233
in	O	O:0.999559
import	O	O:0.998817
matplotlib.pyplot	B-API	O:0.998659
hangs	O	O:0.995361
after	O	O:0.999904
updating	O	O:0.999570
my	O	O:0.999590
matplotlib	O	O:0.999061
version	O	O:0.993887
`	O	O:0.999792
import	O	O:0.997972
matplotlib.pyplot	B-API	O:0.999329
as	O	O:0.999937
plt	O	O:0.997051
`	O	O:0.999970
hangs	O	O:0.998161
while	O	O:0.999957
executing	O	O:0.999281
`	O	O:0.999909
fc-list	O	B-API:0.916203
`	O	O:0.999868
.	O	O:0.997597
	
Using	O	O:0.997393
`	O	O:0.999417
pcolor	B-API	B-API:0.966339
`	O	O:0.999979
from	O	O:0.999442
matplotlib	O	O:0.999823
I	O	O:0.999998
am	O	O:0.999987
unable	O	O:0.998146
to	O	O:0.999965
do	O	O:0.999985
it	O	O:0.999989
because	O	O:0.999915
my	O	O:0.999943
pc	O	O:0.999965
goes	O	O:0.999739
easily	O	O:0.999956
out	O	O:0.999939
of	O	O:0.999788
memory	O	O:0.975567
(	O	O:0.999995
more	O	O:0.999707
than	O	O:0.999869
8G	O	O:0.999915
)	O	O:0.999810
..	O	O:0.995622
	
+	O	O:0.997415
"	O	O:0.999603
plt.plot	B-API	B-API:0.775565
([	O	O:0.999812
"	O	O:0.999211
+	O	O:0.999592
d.x1	O	O:0.978666
+	O	O:0.999350
"	O	O:0.999798
,	O	O:0.999946
"	O	O:0.999897
+	O	O:0.999228
d.x2	O	O:0.983907
+	O	O:0.999652
"]	O	O:0.999058
,	O	O:0.999833
[	O	O:0.999980
"	O	O:0.999845
+	O	O:0.999737
d.y1	O	O:0.985080
+	O	O:0.999463
"	O	O:0.999798
,	O	O:0.999946
"	O	O:0.999897
+	O	O:0.999226
d.y2	O	O:0.981293
+	O	O:0.999626
"]	O	O:0.999704
,	O	O:0.999922
'	O	O:0.999972
k-	O	O:0.999894
')	O	O:0.999777
\n	O	O:0.997010
"	O	O:0.999626
	
I	O	O:0.999938
am	O	O:0.999986
trying	O	O:0.997538
to	O	O:0.999832
import	O	O:0.999864
Pylab	O	O:0.999894
using	O	O:0.999396
the	O	O:0.995262
`	O	O:0.996731
import	O	O:0.995836
matplotlib.pyplot	B-API	O:0.999430
as	O	O:0.999967
plt	O	O:0.993940
`	O	O:0.999843
.	O	O:0.997949
	
The	O	O:0.995830
plt.subplots_adjust	B-API	B-API:0.936618
method	O	O:0.959589
:	O	O:0.999941
#CODE	O	O:0.998958
	
for	O	O:0.999654
i	O	O:0.999938
,	O	O:0.999973
j	O	O:0.999417
in	O	O:0.999600
np.where	B-API	B-API:0.912484
(	O	O:0.999946
significant	O	O:0.998604
):	O	O:0.999987
print	O	O:0.992449
i	O	O:0.999993
,	O	O:0.999977
j	O	O:0.998208
	
ax	O	O:0.989628
=	O	O:0.999835
fig.add_subplot	B-API	O:0.720599
(	O	O:0.999939
111	O	O:0.999269
,	O	O:0.999989
projection=	O	O:0.999257
'	O	O:0.999920
3d	O	O:0.999897
')	O	O:0.999098
	
matplotlib.pyplot	B-API	O:0.998346
does	O	O:0.987176
savefig()	B-API	B-API:0.938328
but	O	O:0.999860
not	O	O:0.999294
show()	B-API	B-API:0.978969
in	O	O:0.998980
python3	O	O:0.997815
but	O	O:0.999320
works	O	O:0.999534
in	O	O:0.999387
2.7	O	O:0.998209
	
In	O	O:0.999970
this	O	O:0.999874
case	O	O:0.999202
,	O	O:0.999963
pcolor	B-API	B-API:0.897571
and	O	O:0.998829
pcolormesh	B-API	B-API:0.625196
will	O	O:0.997688
produce	O	O:0.998488
the	O	O:0.999979
same	O	O:0.998056
result	O	O:0.998930
.	O	O:0.999944
	
From	O	O:0.999552
the	O	O:0.999937
documentation	O	O:0.999695
of	O	O:0.999940
`	O	O:0.999920
pyplot.errorbar()	B-API	B-API:0.527686
`	O	O:0.999654
:	O	O:0.999821
	
Tkinter	O	O:0.996090
and	O	O:0.999543
pyplot	B-API	O:0.996882
running	O	O:0.999182
out	O	O:0.999614
of	O	O:0.999802
memory	O	O:0.982648
	
You've	O	O:0.999592
already	O	O:0.999270
created	O	O:0.998785
`	O	O:0.999968
ax	O	O:0.925903
`	O	O:0.999990
with	O	O:0.996781
`	O	O:0.999978
plt.subplots	B-API	B-API:0.560582
`	O	O:0.999990
so	O	O:0.999945
don't	O	O:0.999962
you	O	O:0.999958
just	O	O:0.999911
need	O	O:0.999919
to	O	O:0.999995
pass	O	O:0.999894
`	O	O:0.999977
ax=ax	O	O:0.989281
`	O	O:0.999987
to	O	O:0.998156
`	O	O:0.999998
merged2.fcast.plot	O	B-API:0.799944
`	O	O:0.999983
instead	O	O:0.999124
of	O	O:0.999990
setting	O	O:0.998866
`	O	O:0.999700
ax=	O	O:0.992812
...	O	O:0.997160
	
You	O	O:0.999859
also	O	O:0.997256
should	O	O:0.999340
not	O	O:0.998536
import	O	O:0.999699
pylab	O	O:0.997900
,	O	O:0.999983
you	O	O:0.999810
should	O	O:0.999844
do	O	O:0.999866
`	O	O:0.999958
import	O	O:0.998545
matplotlib.pyplot	B-API	O:0.999410
as	O	O:0.999939
plt	O	O:0.995702
`	O	O:0.999795
	
Alright	O	O:0.998046
I	O	O:0.999960
got	O	O:0.999891
it	O	O:0.999797
to	O	O:0.999935
work	O	O:0.999872
by	O	O:0.999988
using	O	O:0.999824
plt.minorticks_on()	B-API	B-API:0.999831
and	O	O:0.999079
changing	O	O:0.999725
the	O	O:0.999701
range	O	O:0.999293
of	O	O:0.999945
x	O	O:0.999465
to	O	O:0.999989
x	O	O:0.999968
=	O	O:0.999970
np.arange	B-API	B-API:0.774732
(	O	O:0.999922
0	O	O:0.999973
,	O	O:0.999978
361	O	O:0.999588
,	O	O:0.999958
50	O	O:0.999877
,	O	O:0.999962
dtype	B-API	B-API:0.958030
=	O	O:0.999968
int	O	O:0.953685
)	O	O:0.999846
....	O	O:0.921356
	
You	O	O:0.999867
can	O	O:0.999696
control	O	O:0.999309
the	O	O:0.999995
ratio	O	O:0.999614
of	O	O:0.999971
the	O	O:0.999673
height	O	O:0.999610
/	O	O:0.999671
width	O	O:0.999902
with	O	O:0.999772
`	O	O:0.999676
ax.set_aspect	B-API	O:0.559114
(	O	O:0.999983
number	O	O:0.999028
)`	O	O:0.999615
.	O	O:0.999549
	
What	O	O:0.999050
about	O	O:0.999159
plt.title	B-API	B-API:0.948511
?	O	O:0.999779
	
Is	O	O:0.999991
there	O	O:0.999777
a	O	O:0.999975
way	O	O:0.999540
to	O	O:0.999869
darken	O	O:0.999517
or	O	O:0.999998
make	O	O:0.998686
smoother	O	O:0.999981
the	O	O:0.999847
HSV	B-API	O:0.999392
colours	O	O:0.977899
so	O	O:0.999998
they	O	O:0.999950
look	O	O:0.999406
more	O	O:0.999115
like	O	O:0.999895
this	O	O:0.999034
	
plt.plot	B-API	B-API:0.837727
(	O	O:0.999829
arr	O	O:0.999616
[	O	O:0.999971
'	O	O:0.999929
lapse_time	O	O:0.998695
']	O	O:0.999865
,	O	O:0.999533
arr	O	O:0.999424
[	O	O:0.999904
'	O	O:0.999920
contact_angle	O	O:0.989866
'])	O	O:0.998774
	
We	O	O:0.999932
are	O	O:0.999808
looking	O	O:0.999636
for	O	O:0.999959
some	O	O:0.995562
`	O	O:0.999924
.line	B-API	O:0.665539
`	O	O:0.999941
objects	O	O:0.990935
and	O	O:0.999989
there	O	O:0.999443
are	O	O:0.999087
two	O	O:0.997695
.	O	O:0.999619
	
My	O	O:0.999772
`	O	O:0.999911
rcParams	B-API	B-API:0.887880
`	O	O:0.999921
are	O	O:0.998635
not	O	O:0.999875
read	O	O:0.995619
.	O	O:0.999841
	
Now	O	O:0.999369
,	O	O:0.999860
it	O	O:0.999986
says	O	O:0.999358
`	O	O:0.999968
get_data	B-API	B-API:0.966035
`	O	O:0.999634
is	O	O:0.999902
not	O	O:0.998847
defined	O	O:0.999864
...	O	O:0.999356
after	O	O:0.999362
I	O	O:0.999994
move	O	O:0.996541
`	O	O:0.999854
my_plot	O	B-API:0.983511
`	O	O:0.999953
before	O	O:0.996102
the	O	O:0.999982
loop	O	O:0.986349
	
Xaxis	B-API	O:0.999586
interval	O	O:0.997575
y1	O	O:0.998205
(	O	O:0.999952
y2	O	O:0.999810
)	O	O:0.999767
ax2	O	O:0.991346
:	O	O:0.999912
(	O	O:0.999944
-	O	O:0.999985
100000.0	O	O:0.993379
,	O	O:0.999989
800000.0	O	O:0.988717
)	O	O:0.998585
(	O	O:0.999929
wrong	O	O:0.999619
)	O	O:0.999176
	
Then	O	O:0.998954
define	O	O:0.999108
a	O	O:0.999938
method	O	O:0.996783
`	O	O:0.999921
show()	B-API	B-API:0.997423
`	O	O:0.999991
that	O	O:0.999752
calls	O	O:0.999931
`	O	O:0.999983
plt.show()	B-API	B-API:0.999958
`	O	O:0.999787
.	O	O:0.998811
	
`	O	O:0.999539
plt.setp	B-API	B-API:0.951241
(	O	O:0.999969
plt.gca()	B-API	B-API:0.893561
,	O	O:0.999933
'	O	O:0.999978
yticklabels	O	O:0.582335
'	O	O:0.999894
,	O	O:0.999986
ylabels	O	O:0.999399
)`	O	O:0.999295
	
matplotlib.get_backend()	B-API	B-API:0.998900
MacOSX	O	O:0.947796
	
#	O	O:0.987881
matplotlib.use	B-API	B-API:0.868032
(	O	O:0.999892
'	O	O:0.999987
tkagg	O	O:0.998671
')	O	O:0.999761
;	O	O:0.999776
	
From	O	O:0.999474
the	O	O:0.999778
`	O	O:0.999897
savefig()	B-API	B-API:0.993390
`	O	O:0.999993
docs	O	O:0.997992
,	O	O:0.999991
#CODE	O	O:0.999499
	
You	O	O:0.999394
might	O	O:0.999194
also	O	O:0.999848
want	O	O:0.999910
to	O	O:0.999491
look	O	O:0.999881
into	O	O:0.999577
[	O	O:0.999975
`	O	O:0.999840
numpy.vectorize	B-API	B-API:0.998670
`]	O	O:0.978912
(	O	O:0.999956
#URL	O	O:0.999689
)	O	O:0.999647
.	O	O:0.998985
	
'	O	O:0.999064
and	O	O:0.999797
'	O	O:0.999892
plt.figure()	B-API	B-API:0.973737
;	O	O:0.999975
for	O	O:0.999156
result	O	O:0.999315
in	O	O:0.999053
results	O	O:0.997428
:	O	O:0.999929
plt.clf()	B-API	B-API:0.989873
...	O	O:0.992556
	
Python	O	O:0.996896
,	O	O:0.999983
matplotlib	O	O:0.999510
pyplot	B-API	O:0.988569
show()	B-API	B-API:0.930152
not	O	O:0.998636
blocking	O	O:0.999287
	
According	O	O:0.999534
to	O	O:0.999864
the	O	O:0.999998
docs	O	O:0.996382
`	O	O:0.999970
numpy.loadtxt	B-API	B-API:0.969474
`	O	O:0.999896
is	O	O:0.999682
	
What	O	O:0.998825
is	O	O:0.999899
ravel()	B-API	B-API:0.979436
?	O	O:0.999846
	
`	O	O:0.999867
plot()	B-API	B-API:0.997963
`	O	O:0.999957
in	O	O:0.999467
`	O	O:0.999992
pandas	O	O:0.988705
`	O	O:0.999977
are	O	O:0.998963
build	O	O:0.999772
on	O	O:0.999824
`	O	O:0.999981
matplotlib	O	O:0.988049
`	O	O:0.999932
.	O	O:0.998299
	
`	O	O:0.999841
plt.colorbar()	B-API	B-API:0.999675
`	O	O:0.999917
?	O	O:0.999876
	
from	O	O:0.997627
matplotlib.ticker	B-API	O:0.991175
import	O	O:0.999293
LinearLocator	B-API	O:0.999291
,	O	O:0.999689
FormatStrFormatter	B-API	O:0.937696
	
Is	O	O:0.999888
matplotlib.pyplot.hist()	B-API	B-API:0.977238
what	O	O:0.999339
you	O	O:0.999919
are	O	O:0.999959
looking	O	O:0.999380
for	O	O:0.999566
?	O	O:0.999866
	
File	O	O:0.942166
"	O	O:0.999875
/	O	O:0.999639
usr	O	O:0.997471
/	O	O:0.999617
lib	O	O:0.980271
/	O	O:0.999850
python2.7	O	O:0.783654
/	O	O:0.999820
dist-packages	O	O:0.988351
/	O	O:0.999892
pandas	O	O:0.997447
/	O	O:0.999980
core	O	O:0.955075
/	O	O:0.999970
generic.py	O	O:0.906541
"	O	O:0.999715
,	O	O:0.999979
line	O	O:0.999467
2018	O	O:0.994457
,	O	O:0.999945
in	O	O:0.999837
astype	B-API	O:0.574825
	
Perhaps	O	O:0.999553
you	O	O:0.999420
should	O	O:0.999857
be	O	O:0.999991
calling	O	O:0.996934
`	O	O:0.999906
axvline	B-API	B-API:0.912241
`	O	O:0.999970
on	O	O:0.999582
`	O	O:0.999994
ax2	O	O:0.995531
`	O	O:0.999988
instead	O	O:0.999098
of	O	O:0.999989
calling	O	O:0.998158
the	O	O:0.999748
`	O	O:0.999778
pyplot	B-API	O:0.822190
`	O	O:0.999942
method	O	O:0.994619
?	O	O:0.999982
	
(	O	O:0.999686
`	O	O:0.999865
np.all	B-API	B-API:0.976524
(	O	O:0.999967
np.diff	B-API	B-API:0.832969
(	O	O:0.999983
lats	O	O:0.997835
,	O	O:0.999993
axis=0	O	O:0.998615
)	O	O:0.999782
>	O	O:0.998938
0	O	O:0.999918
))`	O	O:0.999704
,	O	O:0.999957
similar	O	O:0.999918
fro	O	O:0.999582
`	O	O:0.999986
lons	O	O:0.618461
`)	O	O:0.999822
	
The	O	O:0.999924
problem	O	O:0.994690
is	O	O:0.999957
'	O	O:0.999904
cause	O	O:0.999323
my	O	O:0.999827
np.mgrid	B-API	B-API:0.637317
should	O	O:0.999843
vary	O	O:0.999880
from	O	O:0.999775
-1	O	O:0.999925
to	O	O:0.999975
1	O	O:0.999975
and	O	O:0.999957
have	O	O:0.999411
the	O	O:0.999736
self.width	O	O:0.956772
and	O	O:0.999241
self.height	O	O:0.992961
.	O	O:0.999185
	
awesome	O	O:0.995041
.	O	O:0.999295
and	O	O:0.999914
thanks	O	O:0.999583
for	O	O:0.999488
the	O	O:0.999304
np.transpose	B-API	B-API:0.876196
tip	O	O:0.998946
,	O	O:0.999995
too	O	O:0.999739
.	O	O:0.999777
	
And	O	O:0.999888
using	O	O:0.998224
`	O	O:0.998433
set_bad	B-API	B-API:0.995057
`	O	O:0.999945
,	O	O:0.999766
`	O	O:0.999974
set_under	B-API	B-API:0.965865
`	O	O:0.999917
and	O	O:0.999117
`	O	O:0.999949
set_over	B-API	B-API:0.958205
`	O	O:0.999598
is	O	O:0.999921
not	O	O:0.999865
a	O	O:0.999994
very	O	O:0.999493
good	O	O:0.998818
option	O	O:0.999951
as	O	O:0.999959
I	O	O:0.999844
would	O	O:0.999973
like	O	O:0.999122
to	O	O:0.999997
have	O	O:0.999944
a	O	O:0.999997
possibility	O	O:0.997620
to	O	O:0.999982
mark	O	O:0.999899
different	O	O:0.999325
pixels	O	O:0.998652
with	O	O:0.999877
different	O	O:0.997567
colours	O	O:0.949537
,	O	O:0.999894
and	O	O:0.999972
this	O	O:0.999381
limits	O	O:0.999360
their	O	O:0.999266
number	O	O:0.998728
to	O	O:0.999435
3	O	O:0.999976
.	O	O:0.999746
	
@USER	O	O:0.999436
numpy's	O	O:0.996529
`	O	O:0.999869
memmap	B-API	B-API:0.965243
`	O	O:0.999971
will	O	O:0.994320
probably	O	O:0.999801
not	O	O:0.999796
be	O	O:0.999963
useful	O	O:0.999060
for	O	O:0.999497
you	O	O:0.995821
.	O	O:0.999297
	
How	O	O:0.999848
about	O	O:0.999780
using	O	O:0.995571
`	O	O:0.997365
interpolate()	B-API	B-API:0.999597
`	O	O:0.998904
:	O	O:0.999732
#CODE	O	O:0.999861
	
cb.ax.set_major_formatter	O	O:0.957525
(	O	O:0.999906
ticker.FuncFormatter	B-API	O:0.696761
(	O	O:0.999984
myfmt	O	O:0.992130
))	O	O:0.999599
	
special	O	O:0.968969
method	O	O:0.998242
`	O	O:0.999936
__call__()	B-API	B-API:0.565640
`	O	O:0.999942
is	O	O:0.999927
a	O	O:0.999994
good	O	O:0.999354
approach	O	O:0.999473
for	O	O:0.999854
such	O	O:0.996247
	
`	O	O:0.999821
plt.tight_layout()	B-API	B-API:0.999854
`	O	O:0.999943
might	O	O:0.998716
do	O	O:0.999961
it	O	O:0.999909
.	O	O:0.999723
	
Unfortunately	O	O:0.999453
,	O	O:0.999960
I	O	O:0.999988
don't	O	O:0.999917
think	O	O:0.999709
you	O	O:0.999922
can	O	O:0.999922
simply	O	O:0.999962
do	O	O:0.999940
np.minimum	B-API	B-API:0.780838
(	O	O:0.999898
array1	O	O:0.999062
,	O	O:0.999944
array2	O	O:0.997294
,	O	O:0.999949
array3	O	O:0.987914
)	O	O:0.999953
like	O	O:0.998802
to	O	O:0.999995
have	O	O:0.999881
above	O	O:0.999843
,	O	O:0.999997
so	O	O:0.999974
I	O	O:0.999997
think	O	O:0.999871
you	O	O:0.999935
need	O	O:0.999661
to	O	O:0.999993
nest	O	O:0.995511
the	O	O:0.999963
np.minimum	B-API	B-API:0.696662
calls	O	O:0.996486
.	O	O:0.999974
	
Using	O	O:0.997037
`	O	O:0.999331
set_offsets	B-API	B-API:0.966597
`	O	O:0.999960
doesn't	O	O:0.999870
seem	O	O:0.999935
to	O	O:0.999975
behave	O	O:0.999851
as	O	O:0.999947
I	O	O:0.999916
expect	O	O:0.999848
it	O	O:0.999703
to	O	O:0.999803
.	O	O:0.999955
	
Does	O	O:0.998362
the	O	O:0.999888
import	O	O:0.998342
of	O	O:0.999923
Axes3D	O	O:0.999725
do	O	O:0.999982
something	O	O:0.999479
behind	O	O:0.998788
the	O	O:0.999971
scenes	O	O:0.999308
to	O	O:0.999975
alter	O	O:0.999975
the	O	O:0.999953
import	O	O:0.997611
of	O	O:0.999893
pyplot	B-API	O:0.992014
?	O	O:0.999984
	
`	O	O:0.999809
get_color()	B-API	B-API:0.699000
`	O	O:0.999992
just	O	O:0.998328
returns	O	O:0.999983
the	O	O:0.999969
color	O	O:0.999890
attribute	O	O:0.999988
from	O	O:0.999831
a	O	O:0.999987
line	O	O:0.999190
.	O	O:0.999639
	
plt.tight_layout()	B-API	B-API:0.999564
`	O	O:0.999156
	
(	O	O:0.999938
Now	O	O:0.999923
I	O	O:0.999981
see	O	O:0.999826
:	O	O:0.999860
`	O	O:0.999970
linspace	B-API	B-API:0.863560
`	O	O:0.999941
is	O	O:0.999954
even	O	O:0.999550
mentioned	O	O:0.999885
in	O	O:0.999829
`	O	O:0.999846
arange	B-API	O:0.787589
`'	O	O:0.999906
s	O	O:0.998946
docstring	O	O:0.999826
...	O	O:0.995237
)	O	O:0.998928
	
By	O	O:0.999919
default	O	O:0.995687
`	O	O:0.999961
animation.MovieWriter	B-API	O:0.978436
`	O	O:0.999993
uses	O	O:0.999318
a	O	O:0.999957
`	O	O:0.999868
subprocess.PIPE	O	O:0.887941
`	O	O:0.999986
to	O	O:0.999926
feed	O	O:0.999994
the	O	O:0.999977
frames	O	O:0.999650
to	O	O:0.999983
the	O	O:0.999969
writer	O	O:0.998810
.	O	O:0.999420
	
With	O	O:0.999921
your	O	O:0.997438
`	O	O:0.999965
matplotlibrc	O	O:0.899637
`	O	O:0.999996
file	O	O:0.997390
,	O	O:0.999999
the	O	O:0.999988
variables	O	O:0.976790
`	O	O:0.999918
mp.rcParams	O	O:0.801194
[	O	O:0.999973
'	O	O:0.999941
lines.linestyle	O	O:0.984599
']`	O	O:0.999009
and	O	O:0.996548
`	O	O:0.999720
mp.rcParams	O	B-API:0.742047
[	O	O:0.999952
'	O	O:0.999903
axes.grid	B-API	O:0.996629
']`	O	O:0.999353
are	O	O:0.999619
correctly	O	O:0.999133
specified	O	O:0.997025
and	O	O:0.999897
this	O	O:0.999666
works	O	O:0.999670
as	O	O:0.999708
expected	O	O:0.999287
...	O	O:0.994176
	
pyplot	B-API	O:0.991987
interface	O	O:0.997621
	
(	O	O:0.999805
and	O	O:0.999531
`	O	O:0.999944
set_yticklabels	B-API	B-API:0.956057
`	O	O:0.999969
for	O	O:0.999724
the	O	O:0.999945
y-axis	O	O:0.998288
)	O	O:0.999490
	
but	O	O:0.998778
`	O	O:0.999963
from	O	O:0.993478
matplotlib.path	B-API	O:0.994692
import	O	O:0.999514
Path	B-API	O:0.789331
`	O	O:0.999494
throws	O	O:0.992492
#CODE	O	O:0.999680
	
The	O	O:0.999415
Path	B-API	O:0.620555
object	O	O:0.999426
does	O	O:0.999397
not	O	O:0.999893
store	O	O:0.999612
the	O	O:0.999960
points	O	O:0.999073
along	O	O:0.999892
a	O	O:0.999965
Bezier	O	O:0.999603
curve	O	O:0.996739
,	O	O:0.999996
just	O	O:0.999318
the	O	O:0.999943
minimum	O	O:0.996128
parameters	O	O:0.998693
it	O	O:0.999983
needs	O	O:0.999483
.	O	O:0.999728
	
Users	O	O:0.994173
of	O	O:0.999567
Path	B-API	O:0.791859
objects	O	O:0.995110
should	O	O:0.999533
not	O	O:0.999617
access	O	O:0.999732
the	O	O:0.999895
vertices	O	O:0.880148
and	O	O:0.999918
codes	O	O:0.997237
arrays	O	O:0.998324
	
The	O	O:0.999919
trick	O	O:0.998250
is	O	O:0.999970
to	O	O:0.999737
use	O	O:0.999890
Path	B-API	B-API:0.620629
and	O	O:0.995312
PathPatch	B-API	O:0.950213
.	O	O:0.996546
	
This	O	O:0.999651
allows	O	O:0.999916
you	O	O:0.999917
to	O	O:0.999964
get	O	O:0.999971
the	O	O:0.999808
Matplotlib	O	O:0.998874
Path	B-API	O:0.940873
vertices	O	O:0.973777
and	O	O:0.999955
codes	O	O:0.997871
in	O	O:0.999913
the	O	O:0.999882
projection	O	O:0.997810
coordinates	O	O:0.990257
which	O	O:0.999977
you	O	O:0.999965
can	O	O:0.999976
then	O	O:0.999907
convert	O	O:0.999976
into	O	O:0.999977
a	O	O:0.999992
new	O	O:0.990457
Path	B-API	O:0.620514
.	O	O:0.998827
	
I	O	O:0.999917
was	O	O:0.999948
playing	O	O:0.975172
with	O	O:0.995943
PathCollection	B-API	B-API:0.804775
(	O	O:0.999991
my	O	O:0.999948
dyslexia	O	O:0.995826
is	O	O:0.999972
killing	O	O:0.998649
me	O	O:0.999897
switching	O	O:0.998137
between	O	O:0.987376
Path	B-API	O:0.838550
and	O	O:0.998809
Patch	O	O:0.703349
)	O	O:0.997718
,	O	O:0.999574
and	O	O:0.999978
if	O	O:0.999955
I	O	O:0.999973
can	O	O:0.999905
get	O	O:0.999836
a	O	O:0.999994
unit	O	O:0.998536
circle	O	O:0.999136
drawn	O	O:0.998105
and	O	O:0.999910
I	O	O:0.999991
can	O	O:0.999887
apply	O	O:0.794485
an	O	O:0.999613
affine	O	O:0.999464
transformation	O	O:0.999618
to	O	O:0.999894
it	O	O:0.999978
,	O	O:0.999999
then	O	O:0.999574
I	O	O:0.999997
think	O	O:0.999825
it	O	O:0.999437
should	O	O:0.999306
work	O	O:0.998738
,	O	O:0.999995
as	O	O:0.999983
it	O	O:0.999840
doesn't	O	O:0.999973
seem	O	O:0.999884
to	O	O:0.999984
inherently	O	O:0.999990
fill	O	O:0.930003
the	O	O:0.999903
space	O	O:0.993683
.	O	O:0.999760
	
Thus	O	O:0.999794
the	O	O:0.999508
`	O	O:0.999790
Spine	B-API	B-API:0.920529
`	O	O:0.999984
objects	O	O:0.997283
are	O	O:0.999948
in	O	O:0.999902
question	O	O:0.998076
	
You	O	O:0.999952
can	O	O:0.999692
use	O	O:0.999959
the	O	O:0.999587
`	O	O:0.999497
set_position()	B-API	B-API:0.998578
`	O	O:0.999974
method	O	O:0.999539
of	O	O:0.999990
the	O	O:0.998347
`	O	O:0.999912
Spine	B-API	B-API:0.852647
`	O	O:0.999957
class	O	O:0.985801
:	O	O:0.999995
#CODE	O	O:0.999655
	
You	O	O:0.999841
mentioned	O	O:0.999759
the	O	O:0.999899
use	O	O:0.999742
of	O	O:0.998472
`	O	O:0.999628
Locator	B-API	B-API:0.869087
`	O	O:0.999751
and	O	O:0.996503
`	O	O:0.999943
Formatter	B-API	B-API:0.911594
`	O	O:0.999913
objects	O	O:0.991453
in	O	O:0.999998
your	O	O:0.999130
comment	O	O:0.997614
.	O	O:0.999762
	
You	O	O:0.999934
need	O	O:0.998507
to	O	O:0.999965
call	O	O:0.999278
remove	O	O:0.999556
on	O	O:0.999862
the	O	O:0.999988
instance	O	O:0.999872
of	O	O:0.999975
the	O	O:0.999601
`	O	O:0.999937
Annotation	B-API	O:0.993963
`	O	O:0.999955
object	O	O:0.995324
.	O	O:0.999845
	
Using	O	O:0.995841
Annotation	B-API	O:0.998465
Instead	O	O:0.999797
of	O	O:0.999807
Ticklabels	O	O:0.991256
	
What	O	O:0.997557
is	O	O:0.999971
the	O	O:0.999916
difference	O	O:0.999291
between	O	O:0.997460
a	O	O:0.999963
Text	B-API	O:0.711573
instance	O	O:0.997451
and	O	O:0.999500
string	O	O:0.997211
in	O	O:0.998958
python	O	O:0.994653
?	O	O:0.999955
	
I	O	O:0.999965
believe	O	O:0.999763
the	O	O:0.999822
anti-aliasing	O	O:0.999223
of	O	O:0.999217
Text	B-API	O:0.887662
objects	O	O:0.999557
is	O	O:0.999987
up	O	O:0.999895
to	O	O:0.999950
the	O	O:0.999993
font	O	O:0.998500
engine	O	O:0.999665
being	O	O:0.999798
used	O	O:0.998790
.	O	O:0.996679
	
What	O	O:0.999234
you	O	O:0.999605
should	O	O:0.999883
do	O	O:0.999879
is	O	O:0.999999
save	O	O:0.999861
a	O	O:0.999997
reference	O	O:0.999711
to	O	O:0.999950
the	O	O:0.999997
first	O	O:0.993930
`	O	O:0.999930
Text	B-API	B-API:0.581399
`	O	O:0.999931
object	O	O:0.990375
and	O	O:0.999876
update	O	O:0.988083
its	O	O:0.999295
contents	O	O:0.999801
by	O	O:0.999958
calling	O	O:0.999270
its	O	O:0.999676
`	O	O:0.999957
set_text()	B-API	B-API:0.805603
`	O	O:0.999719
method	O	O:0.991647
.	O	O:0.999862
	
There	O	O:0.998661
is	O	O:0.999990
a	O	O:0.999984
references	O	O:0.999395
to	O	O:0.999908
the	O	O:0.999975
Text	B-API	O:0.691504
object	O	O:0.999545
returned	O	O:0.999941
by	O	O:0.999927
the	O	O:0.999955
original	O	O:0.998926
setting	O	O:0.999895
of	O	O:0.999958
suptitle	B-API	O:0.785501
in	O	O:0.999900
figure.texts	O	O:0.985228
.	O	O:0.999349
	
I'm	O	O:0.999839
having	O	O:0.999868
a	O	O:0.999949
problem	O	O:0.998606
with	O	O:0.999649
the	O	O:0.999372
Text	B-API	O:0.620930
object	O	O:0.999801
that	O	O:0.999894
matplotlib	O	O:0.999924
use	O	O:0.999880
to	O	O:0.999740
represent	O	O:0.999795
the	O	O:0.999879
ticklabels	O	O:0.997008
.	O	O:0.999778
	
I	O	O:0.999980
think	O	O:0.999694
you	O	O:0.999902
need	O	O:0.999740
to	O	O:0.999991
displace	O	O:0.999935
the	O	O:0.999812
`	O	O:0.999885
Text	B-API	B-API:0.540752
`	O	O:0.999977
object	O	O:0.998817
,	O	O:0.999997
using	O	O:0.999847
the	O	O:0.997422
`	O	O:0.997479
set_position	B-API	B-API:0.978266
((	O	O:0.999988
x	O	O:0.999389
,	O	O:0.999996
y	O	O:0.999325
))`	O	O:0.996344
method	O	O:0.991430
.	O	O:0.999724
	
This	O	O:0.999733
includes	O	O:0.997567
`	O	O:0.999934
Text	B-API	B-API:0.600946
`	O	O:0.999965
objects	O	O:0.994973
,	O	O:0.999980
`	O	O:0.999961
Line2D	B-API	B-API:0.934233
`	O	O:0.999953
objects	O	O:0.996299
,	O	O:0.999985
`	O	O:0.999983
collection	O	O:0.977903
`	O	O:0.999993
objects	O	O:0.997369
,	O	O:0.999980
`	O	O:0.999956
Patch	O	B-API:0.650875
`	O	O:0.999766
objects	O	O:0.990762
...	O	O:0.998757
	
Text	B-API	O:0.529511
object	O	O:0.997931
in	O	O:0.999871
matplotlib	O	O:0.998976
doesnt	O	O:0.998907
respond	O	O:0.989030
to	O	O:0.999940
zooming	O	O:0.999959
properly	O	O:0.995164
	
After	O	O:0.999868
drawing	O	O:0.998305
a	O	O:0.999836
matplotlib	O	O:0.984765
Text	B-API	O:0.748943
instance	O	O:0.997494
and	O	O:0.999836
then	O	O:0.999699
interactively	O	O:0.999914
panning	O	O:0.995245
,	O	O:0.999970
the	O	O:0.999961
resulting	O	O:0.996744
drawn	O	O:0.999592
text	O	O:0.999828
is	O	O:0.999995
clipped	O	O:0.999020
to	O	O:0.999974
the	O	O:0.999995
data	O	O:0.977094
window	O	O:0.999149
but	O	O:0.999929
not	O	O:0.999781
the	O	O:0.999773
surrounding	O	O:0.997173
bounding	O	O:0.990784
box	O	O:0.998224
.	O	O:0.999677
	
Something	O	O:0.999810
like	O	O:0.994409
`	O	O:0.999864
Text	B-API	B-API:0.628292
(	O	O:0.999981
2	O	O:0.999938
,	O	O:0.999985
0	O	O:0.999922
,	O	O:0.999943
u'Text	O	O:0.997765
(	O	O:0.999931
2	O	O:0.999946
,	O	O:0.999981
0	O	O:0.999937
,	O	O:0.999986
u	O	O:0.999187
"	O	O:0.999539
Text	B-API	B-API:0.541678
(	O	O:0.999930
0.4	O	O:0.995979
,	O	O:0.999963
u\	O	O:0.999782
'	O	O:0.999611
0.4	O	O:0.993413
\	O	O:0.994044
')")')`	O	O:0.991583
.	O	O:0.998782
	
`	O	O:0.999672
plt.legend	B-API	B-API:0.934478
`	O	O:0.999975
returns	O	O:0.999791
a	O	O:0.999953
`	O	O:0.999893
Legend	B-API	O:0.989638
`	O	O:0.999889
object	O	O:0.997501
with	O	O:0.999851
methods	O	O:0.999773
that	O	O:0.999868
allow	O	O:0.999925
you	O	O:0.999923
to	O	O:0.999964
modify	O	O:0.999963
the	O	O:0.999989
appearance	O	O:0.999115
of	O	O:0.999948
the	O	O:0.999403
legend	O	O:0.992209
.	O	O:0.999210
	
So	O	O:0.999967
first	O	O:0.998967
we'll	O	O:0.999892
save	O	O:0.999521
the	O	O:0.999711
`	O	O:0.999836
Legend	B-API	O:0.987660
`	O	O:0.999908
object	O	O:0.985317
:	O	O:0.999985
#CODE	O	O:0.999482
	
In	O	O:0.999969
practice	O	O:0.998842
I	O	O:0.999999
seem	O	O:0.999958
to	O	O:0.999889
end	O	O:0.999824
up	O	O:0.999791
mixing	O	O:0.999841
them	O	O:0.999674
both	O	O:0.999110
myself	O	O:0.999584
in	O	O:0.999865
SW	O	O:0.999508
;	O	O:0.999985
it's	O	O:0.999815
largely	O	O:0.999783
a	O	O:0.999968
matter	O	O:0.999295
of	O	O:0.999964
taste	O	O:0.995768
whether	O	O:0.999940
you	O	O:0.999831
go	O	O:0.999880
through	O	O:0.999794
the	O	O:0.999888
pyplot	B-API	O:0.996962
API	O	O:0.999954
or	O	O:0.999966
access	O	O:0.998500
the	O	O:0.999837
objects	O	O:0.987623
.	O	O:0.999942
pyplot	B-API	O:0.999126
is	O	O:0.999990
certainly	O	O:0.999638
very	O	O:0.999860
convenient	O	O:0.999761
although	O	O:0.999901
as	O	O:0.999965
you	O	O:0.999820
want	O	O:0.999883
to	O	O:0.999939
do	O	O:0.999999
more	O	O:0.999673
complex	O	O:0.996959
/	O	O:0.999899
exotic	O	O:0.997822
things	O	O:0.999715
you'll	O	O:0.999209
find	O	O:0.999608
what	O	O:0.999949
you	O	O:0.999969
can	O	O:0.999908
do	O	O:0.999995
with	O	O:0.999934
pyplot	B-API	O:0.998385
alone	O	O:0.999757
limited	O	O:0.994771
and	O	O:0.999466
you'll	O	O:0.999507
need	O	O:0.998324
to	O	O:0.999963
get	O	O:0.999973
to	O	O:0.999994
know	O	O:0.999981
at	O	O:0.999988
least	O	O:0.998593
the	O	O:0.999942
full	O	O:0.949816
API's	O	O:0.999731
Axes	B-API	O:0.836926
,	O	O:0.999970
Figure	B-API	O:0.806311
,	O	O:0.999790
Legend	B-API	O:0.997974
and	O	O:0.998989
Path	B-API	O:0.868562
objects	O	O:0.976549
better	O	O:0.998403
.	O	O:0.999394
	
There	O	O:0.999105
was	O	O:0.999977
a	O	O:0.999994
refactor	O	O:0.999527
of	O	O:0.999931
the	O	O:0.998858
`	O	O:0.999859
Legend	B-API	O:0.996862
`	O	O:0.999992
class	O	O:0.998772
awhile	O	O:0.999966
back	O	O:0.996898
.	O	O:0.999703
	
call	O	O:0.900907
`	O	O:0.999975
Legend.get_texts()	B-API	B-API:0.921751
`	O	O:0.999948
will	O	O:0.998405
get	O	O:0.999863
a	O	O:0.999997
list	O	O:0.992366
of	O	O:0.999895
Text	B-API	B-API:0.618331
object	O	O:0.999173
in	O	O:0.999893
the	O	O:0.999023
legend	B-API	O:0.943994
object	O	O:0.988983
:	O	O:0.999936
#CODE	O	O:0.999692
	
Some	O	O:0.999811
parameters	O	O:0.997113
could	O	O:0.999804
easily	O	O:0.999933
be	O	O:0.999993
read	O	O:0.999583
from	O	O:0.999829
the	O	O:0.999700
`	O	O:0.999938
Legend	B-API	O:0.992758
`	O	O:0.999972
object	O	O:0.998271
,	O	O:0.999986
others	O	O:0.996696
(	O	O:0.999995
like	O	O:0.999374
`	O	O:0.999995
title	O	O:0.987141
`	O	O:0.999989
,	O	O:0.999792
`	O	O:0.999993
fancybox	O	O:0.969906
`)	O	O:0.999949
required	O	O:0.999829
some	O	O:0.999839
'	O	O:0.999974
artistics	O	O:0.998969
'	O	O:0.999761
.	O	O:0.999548
	
42	O	O:0.999729
from	O	O:0.997539
matplotlib.legend	B-API	O:0.927254
import	O	O:0.998249
Legend	B-API	O:0.997765
	
How	O	O:0.999964
do	O	O:0.999930
I	O	O:0.999992
choose	O	O:0.999553
the	O	O:0.999298
optimum	O	O:0.997048
width	O	O:0.999858
for	O	O:0.999971
a	O	O:0.999978
matplotlib	O	O:0.983739
Button	B-API	O:0.740510
?	O	O:0.999905
	
I	O	O:0.999959
removed	O	O:0.999458
`	O	O:0.999872
color=axcolor	O	O:0.997830
`	O	O:0.999996
from	O	O:0.999396
the	O	O:0.999913
`	O	O:0.999968
Button	B-API	B-API:0.644464
`	O	O:0.999996
call	O	O:0.889143
;	O	O:0.999998
and	O	O:0.997528
I	O	O:0.999994
added	O	O:0.999870
a	O	O:0.999662
`	O	O:0.999776
plt.show()	B-API	B-API:0.999810
`	O	O:0.999936
before	O	O:0.997209
the	O	O:0.999985
event	O	O:0.985802
connect	O	O:0.998325
,	O	O:0.999998
otherwise	O	O:0.999976
a	O	O:0.999906
figure	O	O:0.830409
window	O	O:0.999375
didn't	O	O:0.999334
appear	O	O:0.991061
for	O	O:0.999670
me	O	O:0.999457
(	O	O:0.999927
neither	O	O:0.999784
through	O	O:0.998308
`	O	O:0.999958
ipython	O	O:0.983522
`	O	O:0.999988
,	O	O:0.999863
nor	O	O:0.999969
with	O	O:0.998895
`	O	O:0.999954
python	O	O:0.987899
`)	O	O:0.999888
.	O	O:0.997971
	
button	O	O:0.997822
=	O	O:0.999929
Button	B-API	O:0.602174
(	O	O:0.999960
ax=reset_axis	O	O:0.996685
,	O	O:0.999971
label=	O	O:0.999201
'	O	O:0.999832
Reset	O	O:0.993227
'	O	O:0.999847
,	O	O:0.999973
color=	O	O:0.999604
'	O	O:0.999949
lightblue	O	O:0.998236
'	O	O:0.999842
,	O	O:0.999966
hovercolor=	O	O:0.998785
'	O	O:0.999872
0.975	O	O:0.992633
')	O	O:0.999216
	
`	O	O:0.999685
tbar.add_button	O	O:0.941182
(	O	O:0.999996
a	O	O:0.999925
Button	B-API	O:0.713161
object	O	O:0.998621
);	O	O:0.999038
`	O	O:0.998928
	
For	O	O:0.999961
your	O	O:0.999053
buttons	O	O:0.998983
to	O	O:0.999968
work	O	O:0.999527
,	O	O:0.999991
you	O	O:0.999990
need	O	O:0.999634
to	O	O:0.999997
keep	O	O:0.999986
a	O	O:0.999998
reference	O	O:0.999599
to	O	O:0.999970
the	O	O:0.999973
`	O	O:0.999799
Button	B-API	B-API:0.583762
`	O	O:0.999978
object	O	O:0.991614
around	O	O:0.999086
.	O	O:0.999197
	
I	O	O:0.999981
know	O	O:0.999620
how	O	O:0.999441
to	O	O:0.999862
add	O	O:0.999867
and	O	O:0.999721
work	O	O:0.998673
with	O	O:0.999734
single	O	O:0.999491
cursor	O	O:0.999063
`	O	O:0.999960
self.cursor	O	O:0.990469
=	O	O:0.999969
Cursor	B-API	O:0.830982
(	O	O:0.999952
self.static_canvas.Dataplot	O	O:0.997941
,	O	O:0.999975
useblit=True	O	O:0.999497
,	O	O:0.999923
color=	O	O:0.999084
'	O	O:0.999919
red	O	O:0.999481
'	O	O:0.999911
,	O	O:0.999972
linewidth=2	O	O:0.998357
)`	O	O:0.997808
,	O	O:0.999750
but	O	O:0.999993
what	O	O:0.999044
I	O	O:0.999973
should	O	O:0.999963
do	O	O:0.999915
to	O	O:0.999989
create	O	O:0.999965
to	O	O:0.999984
cursors	O	O:0.999932
?	O	O:0.999987
	
I	O	O:0.999974
think	O	O:0.999821
tillsten	O	O:0.993297
is	O	O:0.999975
right	O	O:0.999362
--	O	O:0.999998
study	O	O:0.998006
how	O	O:0.999874
the	O	O:0.999910
[	O	O:0.999834
`	O	O:0.999980
Cursor	B-API	O:0.933608
`	O	O:0.999996
class	O	O:0.995769
]	O	O:0.999973
(	O	O:0.999879
#URL	O	O:0.999619
)	O	O:0.999971
does	O	O:0.996102
it	O	O:0.999960
.	O	O:0.999741
	
I've	O	O:0.998163
checked	O	O:0.998554
briefly	O	O:0.986967
,	O	O:0.999980
but	O	O:0.999738
I	O	O:0.999971
don't	O	O:0.999850
know	O	O:0.999106
how	O	O:0.999907
to	O	O:0.999964
modify	O	O:0.999803
the	O	O:0.999977
properties	O	O:0.990782
of	O	O:0.999981
an	O	O:0.999773
`	O	O:0.999981
Arc	B-API	B-API:0.840889
`	O	O:0.999954
instance	O	O:0.997797
,	O	O:0.999996
although	O	O:0.999792
I'm	O	O:0.999947
sure	O	O:0.999304
it's	O	O:0.999891
possible	O	O:0.997875
.	O	O:0.999732
	
You	O	O:0.999480
could	O	O:0.999584
also	O	O:0.999950
try	O	O:0.999991
passing	O	O:0.999018
a	O	O:0.999839
`	O	O:0.999874
Arrow	B-API	B-API:0.767640
`	O	O:0.999978
instance	O	O:0.999212
as	O	O:0.999977
marker	O	O:0.988351
,	O	O:0.999923
but	O	O:0.999451
I'm	O	O:0.999800
not	O	O:0.999880
sure	O	O:0.999062
whether	O	O:0.999917
that	O	O:0.997839
works	O	O:0.999639
.	O	O:0.999597
	
Currently	O	O:0.999512
,	O	O:0.999939
I	O	O:0.999980
don't	O	O:0.999804
think	O	O:0.998608
it	O	O:0.999994
possible	O	O:0.999785
as	O	O:0.999991
the	O	O:0.999762
`	O	O:0.999766
Arrow	B-API	O:0.601349
`	O	O:0.999989
class	O	O:0.999710
only	O	O:0.999971
supports	O	O:0.999847
`'	O	O:0.999933
solid	O	O:0.996479
'	O	O:0.999954
|	O	O:0.999615
'	O	O:0.999871
dashed	O	O:0.998316
'	O	O:0.999880
|	O	O:0.999534
'	O	O:0.999930
dashdot	O	O:0.987808
'	O	O:0.999929
|	O	O:0.999576
'	O	O:0.999890
dotted	O	O:0.998280
'`	O	O:0.999961
four	O	O:0.998647
different	O	O:0.999522
linestyles	O	O:0.880970
.	O	O:0.999623
	
The	O	O:0.999937
Node	B-API	O:0.964614
class	O	O:0.998941
has	O	O:0.999961
the	O	O:0.999956
coordinates	O	O:0.974471
stored	O	O:0.999901
as	O	O:0.999964
members	O	O:0.993479
(	O	O:0.999973
x	O	O:0.998441
and	O	O:0.999980
y	O	O:0.999727
)	O	O:0.999839
,	O	O:0.999922
as	O	O:0.999994
well	O	O:0.992523
as	O	O:0.999824
index	O	O:0.989063
.	O	O:0.999594
	
You	O	O:0.999893
can	O	O:0.999808
scale	O	O:0.999848
your	O	O:0.999922
z	O	O:0.999876
values	O	O:0.999707
to	O	O:0.999897
fit	O	O:0.999971
this	O	O:0.999857
range	O	O:0.999664
with	O	O:0.998029
Normalize	B-API	B-API:0.572728
.	O	O:0.999261
	
You	O	O:0.999639
should	O	O:0.999125
mention	O	O:0.998679
the	O	O:0.999757
`	O	O:0.999721
Normalize	B-API	B-API:0.711523
`	O	O:0.999966
methods	O	O:0.999598
here	O	O:0.999890
as	O	O:0.999961
well	O	O:0.995873
.	O	O:0.999597
	
Matplotlib	O	O:0.999583
provides	O	O:0.999561
the	O	O:0.999972
class	O	O:0.994152
`	O	O:0.999984
Normalize	B-API	O:0.751575
`	O	O:0.999955
for	O	O:0.999677
that	O	O:0.997374
:	O	O:0.999971
#CODE	O	O:0.999562
	
Create	O	O:0.999699
a	O	O:0.999939
new	O	O:0.999798
instance	O	O:0.999833
of	O	O:0.999610
`	O	O:0.999776
Normalize	B-API	O:0.543621
`	O	O:0.999946
for	O	O:0.999773
each	O	O:0.999736
image	O	O:0.999654
you	O	O:0.999917
want	O	O:0.999710
to	O	O:0.999911
process	O	O:0.997506
.	O	O:0.999851
	
And	O	O:0.999935
then	O	O:0.999854
you	O	O:0.999950
can	O	O:0.999975
also	O	O:0.999989
replicate	O	O:0.999991
the	O	O:0.999949
functionality	O	O:0.999911
of	O	O:0.999738
`	O	O:0.999934
Normalize	B-API	O:0.639009
`	O	O:0.999856
(	O	O:0.999945
since	O	O:0.999925
you	O	O:0.999992
seem	O	O:0.999921
to	O	O:0.999952
not	O	O:0.999980
like	O	O:0.999679
it	O	O:0.999143
):	O	O:0.999922
#CODE	O	O:0.998755
	
Use	O	O:0.999912
these	O	O:0.999707
to	O	O:0.999955
create	O	O:0.999974
a	O	O:0.999969
`	O	O:0.999960
Normalize	B-API	B-API:0.733127
`	O	O:0.999915
instance	O	O:0.996136
(	O	O:0.999992
other	O	O:0.999931
normalisation	O	O:0.999733
classes	O	O:0.997367
are	O	O:0.999975
available	O	O:0.999516
,	O	O:0.999968
e.g.	O	O:0.999078
log	O	O:0.999840
scale	O	O:0.989961
)	O	O:0.999625
.	O	O:0.998655
	
The	O	O:0.999924
documentation	O	O:0.998951
of	O	O:0.999813
Normalize	B-API	O:0.785390
might	O	O:0.999708
be	O	O:0.999979
a	O	O:0.999953
bit	O	O:0.999089
deceiving	O	O:0.999558
here	O	O:0.993389
:	O	O:0.999972
`	O	O:0.999984
process_value	O	O:0.971922
`	O	O:0.999973
is	O	O:0.999974
a	O	O:0.999901
function	O	O:0.998426
which	O	O:0.997785
is	O	O:0.999983
only	O	O:0.999651
used	O	O:0.999636
for	O	O:0.999499
preprocessing	O	O:0.965471
(	O	O:0.999233
and	O	O:0.999738
static	O	O:0.984104
)	O	O:0.999108
.	O	O:0.997922
	
I	O	O:0.999967
have	O	O:0.999912
several	O	O:0.997524
questions	O	O:0.999923
regarding	O	O:0.999501
the	O	O:0.999874
Normalize	B-API	O:0.860019
class	O	O:0.998140
in	O	O:0.999944
Matplotlib	O	O:0.999426
.	O	O:0.999425
	
with	O	O:0.999921
your	O	O:0.999466
own	O	O:0.999597
`	O	O:0.999970
Normalize	B-API	O:0.745102
`	O	O:0.999705
function	O	O:0.994206
.	O	O:0.999906
	
This	O	O:0.999558
might	O	O:0.999505
be	O	O:0.999952
why	O	O:0.999770
they've	O	O:0.998196
avoided	O	O:0.998105
implementing	O	O:0.999256
it	O	O:0.999821
as	O	O:0.999996
part	O	O:0.998769
of	O	O:0.999904
Normalize	B-API	O:0.620462
.	O	O:0.999286
	
matplotlib	O	O:0.996379
:	O	O:0.999995
can	O	O:0.999864
I	O	O:0.999997
create	O	O:0.999744
AxesSubplot	O	O:0.993623
objects	O	O:0.999263
,	O	O:0.999996
then	O	O:0.999657
add	O	O:0.999997
them	O	O:0.999920
to	O	O:0.999978
a	O	O:0.999987
Figure	B-API	O:0.772462
instance	O	O:0.999284
?	O	O:0.999945
	
Also	O	O:0.999756
do	O	O:0.999981
you	O	O:0.999902
use	O	O:0.999917
Figure	B-API	O:0.951119
from	O	O:0.999191
the	O	O:0.999844
local	O	O:0.977826
matplotlib	O	O:0.998591
installation	O	O:0.998797
or	O	O:0.999960
not	O	O:0.997945
?	O	O:0.999981
	
Additionally	O	O:0.998639
,	O	O:0.999993
there	O	O:0.999907
are	O	O:0.999633
functions	O	O:0.999916
from	O	O:0.999439
the	O	O:0.999683
pyplot	B-API	O:0.998675
interface	O	O:0.998792
and	O	O:0.999968
there	O	O:0.998997
are	O	O:0.999721
methods	O	O:0.997701
on	O	O:0.999951
the	O	O:0.999511
`	O	O:0.999921
Figure	B-API	O:0.606728
`	O	O:0.999987
class	O	O:0.995634
.	O	O:0.999953
	
I'll	O	O:0.998174
assume	O	O:0.999420
in	O	O:0.999855
the	O	O:0.999835
following	O	O:0.999826
that	O	O:0.998242
`	O	O:0.999989
fig	O	O:0.995627
`	O	O:0.999966
is	O	O:0.999782
an	O	O:0.999987
instance	O	O:0.999969
of	O	O:0.999988
a	O	O:0.999692
`	O	O:0.999851
Figure	B-API	B-API:0.877669
`	O	O:0.999618
:	O	O:0.999682
	
Both	O	O:0.999337
the	O	O:0.999596
Figure	B-API	B-API:0.574176
and	O	O:0.999774
the	O	O:0.999959
Axes	B-API	O:0.780009
class	O	O:0.999891
have	O	O:0.999973
a	O	O:0.999994
`	O	O:0.999884
clear()	O	B-API:0.999623
`	O	O:0.999712
method	O	O:0.987576
.	O	O:0.999862
	
I	O	O:0.999770
had	O	O:0.999966
this	O	O:0.999715
same	O	O:0.999780
problem	O	O:0.995886
,	O	O:0.999962
and	O	O:0.999782
it	O	O:0.999749
was	O	O:0.999523
caused	O	O:0.999658
by	O	O:0.999969
calling	O	O:0.996733
`	O	O:0.999933
show()	O	B-API:0.979224
`	O	O:0.999967
on	O	O:0.999918
the	O	O:0.999966
Figure	B-API	O:0.803025
object	O	O:0.999744
instead	O	O:0.999818
of	O	O:0.999959
the	O	O:0.999555
pyplot	B-API	O:0.990773
object	O	O:0.998045
.	O	O:0.999597
	
It	O	O:0.999914
got	O	O:0.999507
wrapped	O	O:0.999649
up	O	O:0.999846
in	O	O:0.999975
a	O	O:0.999992
subclass	O	O:0.992178
of	O	O:0.999809
Figure	B-API	O:0.715147
,	O	O:0.999861
which	O	O:0.999757
also	O	O:0.999392
got	O	O:0.999928
level-of-detail	O	O:0.984992
functionality	O	O:0.997673
and	O	O:0.999307
context	O	O:0.997128
menus	O	O:0.996648
.	O	O:0.999581
	
I	O	O:0.999990
have	O	O:0.999362
an	O	O:0.999941
external	O	O:0.995672
function	O	O:0.999560
which	O	O:0.999823
returns	O	O:0.999783
a	O	O:0.999858
Figure	B-API	O:0.589014
object	O	O:0.995905
,	O	O:0.999814
and	O	O:0.999174
in	O	O:0.999975
this	O	O:0.999281
situation	O	O:0.999649
,	O	O:0.999988
each	O	O:0.998804
Figure	B-API	O:0.872702
object	O	O:0.998892
is	O	O:0.999985
composed	O	O:0.999549
of	O	O:0.999983
exactly	O	O:0.998194
one	O	O:0.999757
Axes	B-API	O:0.670143
object	O	O:0.997433
.	O	O:0.999485
	
While	O	O:0.999580
a	O	O:0.999908
search	O	O:0.990997
did	O	O:0.999852
lead	O	O:0.999598
me	O	O:0.999974
to	O	O:0.999893
see	O	O:0.999999
that	O	O:0.999857
pyplot.figure()	B-API	B-API:0.990053
is	O	O:0.999945
the	O	O:0.999884
development	O	O:0.997749
team's	O	O:0.998232
recommended	O	O:0.999102
instantiation	O	O:0.999863
technique	O	O:0.999648
,	O	O:0.999972
it	O	O:0.999975
doesn't	O	O:0.999567
change	O	O:0.998981
the	O	O:0.998847
question	O	O:0.994195
:	O	O:0.999973
is	O	O:0.999996
there	O	O:0.999880
any	O	O:0.999876
way	O	O:0.999810
to	O	O:0.999816
do	O	O:0.999984
Axes	B-API	O:0.951173
/	O	O:0.999745
Figure	B-API	O:0.976220
copy	O	O:0.937341
construction	O	O:0.998553
and	O	O:0.999889
Figure	B-API	O:0.839383
construction	O	O:0.998884
via	O	O:0.999932
composition	O	O:0.999531
of	O	O:0.999916
copied	O	O:0.996068
Axes	B-API	O:0.912159
?	O	O:0.999912
	
A	O	O:0.999742
reference	O	O:0.999678
to	O	O:0.999867
it	O	O:0.999993
isn't	O	O:0.999795
stored	O	O:0.999620
in	O	O:0.999952
the	O	O:0.999613
`	O	O:0.999806
Figure	B-API	B-API:0.710987
`	O	O:0.999921
object	O	O:0.985994
,	O	O:0.999990
but	O	O:0.999753
is	O	O:0.999930
stored	O	O:0.997986
in	O	O:0.999966
the	O	O:0.999470
`	O	O:0.999821
Canvas	O	O:0.543450
`	O	O:0.999988
object	O	O:0.999595
so	O	O:0.999998
you	O	O:0.999962
can	O	O:0.999973
destroy	O	O:0.999928
a	O	O:0.999822
window	O	O:0.996907
via	O	O:0.998040
#CODE	O	O:0.998396
	
Removing	O	O:0.996731
the	O	O:0.999463
`	O	O:0.999869
frameon=False	O	O:0.982050
`	O	O:0.999960
option	O	O:0.999918
from	O	O:0.999925
`	O	O:0.999973
f	O	O:0.999342
=	O	O:0.999984
Figure	B-API	O:0.810226
(	O	O:0.999977
figsize	O	O:0.988712
=(	O	O:0.999934
12	O	O:0.999714
,	O	O:0.999988
5	O	O:0.999883
)	O	O:0.999856
,	O	O:0.999924
dpi=100	O	O:0.999176
,	O	O:0.999969
frameon=False	O	O:0.999462
)`	O	O:0.999674
solved	O	O:0.999657
the	O	O:0.999905
issue	O	O:0.997074
.	O	O:0.999691
	
I	O	O:0.999976
used	O	O:0.999902
the	O	O:0.998805
Bar	B-API	O:0.999751
class	O	O:0.999120
to	O	O:0.999996
plot	O	O:0.999808
length	O	O:0.999687
of	O	O:0.999924
videos	O	O:0.997340
vs	O	O:0.999991
views	O	O:0.998669
which	O	O:0.999695
are	O	O:0.999884
the	O	O:0.999866
x	O	O:0.995662
and	O	O:0.999982
y	O	O:0.999986
values	O	O:0.999417
of	O	O:0.999958
the	O	O:0.999541
tuples	O	O:0.994315
.	O	O:0.999638
	
Animation	B-API	O:0.997674
will	O	O:0.996792
not	O	O:0.999740
work	O	O:0.997040
on	O	O:0.999923
inplace	O	O:0.999103
(	O	O:0.999984
or	O	O:0.999729
inline	O	B-API:0.514720
?	O	O:0.999992
)	O	O:0.999753
on	O	O:0.999730
notebook	O	O:0.998082
.	O	O:0.999724
	
By	O	O:0.999856
artifacts	O	O:0.999604
,	O	O:0.999981
I	O	O:0.999978
now	O	O:0.999840
understand	O	O:0.997868
to	O	O:0.999986
mean	O	O:0.999657
you	O	O:0.999956
are	O	O:0.999984
creating	O	O:0.999914
a	O	O:0.999955
second	O	O:0.997131
`	O	O:0.999794
Animation	B-API	O:0.992029
`	O	O:0.999927
object	O	O:0.983129
and	O	O:0.999967
what	O	O:0.999435
you	O	O:0.999860
get	O	O:0.999194
is	O	O:0.999997
both	O	O:0.999353
of	O	O:0.999998
them	O	O:0.998675
running	O	O:0.999185
in	O	O:0.999688
parallel	O	O:0.990045
(	O	O:0.999980
which	O	O:0.999707
I	O	O:0.999986
am	O	O:0.999984
not	O	O:0.999387
sure	O	O:0.999980
what	O	O:0.999756
I	O	O:0.999996
expect	O	O:0.999916
to	O	O:0.999478
happen	O	O:0.999313
there	O	O:0.999339
)	O	O:0.999681
.	O	O:0.998073
	
by	O	O:0.999703
`	O	O:0.999957
ax	O	O:0.980654
`	O	O:0.999974
I	O	O:0.999990
mean	O	O:0.999660
the	O	O:0.999872
current	O	O:0.992530
`	O	O:0.999955
Axis	B-API	O:0.998612
`	O	O:0.999966
object	O	O:0.996537
,	O	O:0.999982
which	O	O:0.999554
you	O	O:0.999882
were	O	O:0.999908
getting	O	O:0.999792
at	O	O:0.999969
via	O	O:0.999433
`	O	O:0.999921
gca	B-API	B-API:0.953889
`	O	O:0.999809
.	O	O:0.997775
	
Your	O	O:0.998258
legend	B-API	O:0.989603
command	O	O:0.994574
is	O	O:0.999981
using	O	O:0.999402
the	O	O:0.999487
markers	O	O:0.944672
,	O	O:0.999973
not	O	O:0.999876
the	O	O:0.999984
lines	O	O:0.997570
as	O	O:0.999965
inputs	O	O:0.999758
by	O	O:0.999987
using	O	O:0.998072
`	O	O:0.999660
plot	O	O:0.873542
[	O	O:0.999994
0	O	O:0.999880
]`	O	O:0.999729
.	O	O:0.998074
	
`	O	O:0.999806
Axes	B-API	B-API:0.707296
`	O	O:0.999966
objects	O	O:0.998144
know	O	O:0.999834
about	O	O:0.999738
things	O	O:0.998547
like	O	O:0.999756
tick	O	O:0.990734
location	O	O:0.999106
and	O	O:0.999859
labels	O	O:0.989821
and	O	O:0.999717
the	O	O:0.999813
display	O	O:0.968187
range	O	O:0.994917
(	O	O:0.999842
which	O	O:0.999248
it	O	O:0.999989
does	O	O:0.999809
by	O	O:0.999985
knowing	O	O:0.999853
about	O	O:0.996869
`	O	O:0.999788
Axis	B-API	O:0.994937
`	O	O:0.999932
object	O	O:0.978100
,	O	O:0.999971
but	O	O:0.999974
that	O	O:0.998154
is	O	O:0.999981
getting	O	O:0.999647
even	O	O:0.999429
more	O	O:0.999906
into	O	O:0.999860
the	O	O:0.999985
weeds	O	O:0.977885
)	O	O:0.999718
.	O	O:0.999345
	
Use	O	O:0.997003
Axis	B-API	O:0.999183
method	O	O:0.993985
`	O	O:0.999925
set_xscale	B-API	B-API:0.965209
`	O	O:0.999987
or	O	O:0.999694
`	O	O:0.999979
set_yscale	B-API	O:0.538429
`	O	O:0.999936
.	O	O:0.999041
	
`	O	O:0.999803
ax.set_xticks()	B-API	B-API:0.998300
`	O	O:0.999886
is	O	O:0.999825
a	O	O:0.999985
method	O	O:0.999135
of	O	O:0.999945
the	O	O:0.997585
`	O	O:0.999906
Axes	B-API	B-API:0.693608
`	O	O:0.999958
object	O	O:0.997860
,	O	O:0.999990
whilst	O	O:0.996963
`	O	O:0.999913
matplotlib.ticker.FixedLocator	B-API	O:0.923787
`	O	O:0.999910
is	O	O:0.999704
an	O	O:0.999876
object	O	O:0.999450
which	O	O:0.999045
is	O	O:0.999975
used	O	O:0.999791
with	O	O:0.999582
the	O	O:0.998423
`	O	O:0.999909
Axis	B-API	O:0.997817
`	O	O:0.999966
object	O	O:0.996799
(	O	O:0.999969
`	O	O:0.999959
Axes	B-API	O:0.798347
`	O	O:0.999974
is	O	O:0.999969
basically	O	O:0.999852
the	O	O:0.999933
whole	O	O:0.997924
graph	O	O:0.998386
,	O	O:0.999991
whilst	O	O:0.997718
`	O	O:0.999876
Axis	B-API	O:0.999080
`	O	O:0.999933
is	O	O:0.999979
just	O	O:0.999950
one	O	O:0.999985
of	O	O:0.999917
the	O	O:0.998859
(	O	O:0.999989
two	O	O:0.999763
)	O	O:0.999988
axis	O	O:0.998580
(	O	O:0.999995
x	O	O:0.999682
or	O	O:0.999992
y	O	O:0.999514
)	O	O:0.999889
.	O	O:0.998893
	
This	O	O:0.995770
is	O	O:0.999962
not	O	O:0.999396
particularly	O	O:0.999521
well	O	O:0.999305
documented	O	O:0.997636
,	O	O:0.999952
but	O	O:0.999445
`	O	O:0.999829
Polygon	B-API	B-API:0.774147
`	O	O:0.999959
objects	O	O:0.999412
have	O	O:0.999968
a	O	O:0.999999
pair	O	O:0.997757
of	O	O:0.999964
methods	O	O:0.990924
`	O	O:0.999961
get_xy	B-API	O:0.677435
`	O	O:0.999900
and	O	O:0.997830
`	O	O:0.999980
set_xy	B-API	B-API:0.993826
`	O	O:0.999850
.	O	O:0.997882
	
In	O	O:0.999915
particular	O	O:0.998377
,	O	O:0.999986
if	O	O:0.999956
/	O	O:0.999920
when	O	O:0.999489
there	O	O:0.999940
are	O	O:0.999897
so	O	O:0.999995
many	O	O:0.999684
circles	O	O:0.999035
for	O	O:0.999980
the	O	O:0.999908
figure	O	O:0.969899
to	O	O:0.999945
become	O	O:0.999957
connected	O	O:0.999755
,	O	O:0.999990
the	O	O:0.999897
`	O	O:0.999851
for	O	O:0.999351
polygon	O	O:0.999430
in	O	O:0.999922
polygons	O	O:0.997418
:	O	O:0.999988
`	O	O:0.999981
fails	O	O:0.999809
with	O	O:0.999984
a	O	O:0.999777
`	O	O:0.999776
TypeError	O	O:0.993954
:	O	O:0.999977
'	O	O:0.999822
Polygon	B-API	O:0.831356
'	O	O:0.999819
object	O	O:0.994595
is	O	O:0.999938
not	O	O:0.999472
iterable	O	O:0.999040
`	O	O:0.999861
.	O	O:0.998035
	
Just	O	O:0.999249
use	O	O:0.999851
the	O	O:0.996607
`	O	O:0.999296
Polygon	B-API	B-API:0.584976
`	O	O:0.999991
or	O	O:0.999549
`	O	O:0.999977
Rectangle	B-API	O:0.731802
`	O	O:0.999957
classes	O	O:0.831398
:	O	O:0.999993
#CODE	O	O:0.999732
	
As	O	O:0.999992
you	O	O:0.999920
can	O	O:0.999942
see	O	O:0.999985
,	O	O:0.999994
the	O	O:0.999992
edge	O	O:0.998620
is	O	O:0.999980
center-positioned	O	O:0.999761
along	O	O:0.999909
the	O	O:0.999916
border	O	O:0.999543
of	O	O:0.999973
the	O	O:0.999934
domain	O	O:0.999718
of	O	O:0.999939
the	O	O:0.999394
Rectangle	B-API	O:0.700737
object	O	O:0.997334
,	O	O:0.999974
and	O	O:0.999933
so	O	O:0.999727
bleeds	O	O:0.997984
into	O	O:0.999946
this	O	O:0.999846
domain	O	O:0.994213
.	O	O:0.999483
	
You	O	O:0.999880
can	O	O:0.999247
do	O	O:0.999991
this	O	O:0.999982
by	O	O:0.999981
overplotting	O	O:0.999654
a	O	O:0.999913
Rectangle	B-API	O:0.920237
patch	O	O:0.978249
on	O	O:0.999970
the	O	O:0.999958
cell	O	O:0.999674
that	O	O:0.999938
you	O	O:0.999798
would	O	O:0.999950
want	O	O:0.999850
to	O	O:0.999928
highlight	O	O:0.999770
.	O	O:0.999675
	
Currently	O	O:0.999721
I	O	O:0.999980
use	O	O:0.999956
the	O	O:0.995655
`	O	O:0.998021
add_patch	B-API	B-API:0.991511
(	O	O:0.999961
Rectangle	B-API	B-API:0.604605
(	O	O:0.999962
...	O	O:0.998511
))`	O	O:0.995916
,	O	O:0.999753
but	O	O:0.999844
it	O	O:0.999952
does	O	O:0.999213
not	O	O:0.999868
fit	O	O:0.999130
really	O	O:0.999393
well	O	O:0.996554
.	O	O:0.999709
	
Unfortunately	O	O:0.999443
it	O	O:0.999908
seems	O	O:0.999947
that	O	O:0.999872
the	O	O:0.999905
'	O	O:0.999784
Rectangle	B-API	O:0.764884
'	O	O:0.999901
object	O	O:0.999746
has	O	O:0.999964
no	O	O:0.999900
attribute	O	O:0.999794
'	O	O:0.999924
set_bottom	O	O:0.986108
'	O	O:0.999713
.	O	O:0.999738
	
You	O	O:0.999942
can	O	O:0.999900
acces	O	O:0.999546
ALL	O	O:0.999952
the	O	O:0.999983
properties	O	O:0.997424
of	O	O:0.999992
a	O	O:0.999896
`	O	O:0.999952
Tick	B-API	O:0.987485
`	O	O:0.999937
object	O	O:0.995609
using	O	O:0.999974
this	O	O:0.995205
approach	O	O:0.984925
:	O	O:0.999791
#CODE	O	O:0.998499
	
Fortunately	O	O:0.999878
you	O	O:0.999838
can	O	O:0.999849
update	O	O:0.999221
figures	O	O:0.999345
you've	O	O:0.999950
moved	O	O:0.999809
to	O	O:0.999976
where	O	O:0.999858
you	O	O:0.999876
want	O	O:0.999984
them	O	O:0.999787
pretty	O	O:0.999697
easily	O	O:0.999301
,	O	O:0.999989
by	O	O:0.999968
using	O	O:0.999538
the	O	O:0.995519
object	O	O:0.993312
interface	O	O:0.999412
specifically	O	O:0.999187
,	O	O:0.999962
and	O	O:0.999918
updating	O	O:0.999077
the	O	O:0.997897
Axes	B-API	B-API:0.559234
object	O	O:0.998634
without	O	O:0.999866
creating	O	O:0.999133
a	O	O:0.999956
new	O	O:0.997694
figure	O	O:0.942846
.	O	O:0.999348
	
(	O	O:0.999966
You	O	O:0.999884
can	O	O:0.999763
also	O	O:0.999882
always	O	O:0.999886
find	O	O:0.999765
this	O	O:0.999912
data	O	O:0.999837
inside	O	O:0.999783
the	O	O:0.999635
`	O	O:0.999633
Axes	B-API	B-API:0.611659
`	O	O:0.999979
object	O	O:0.999439
if	O	O:0.999986
you	O	O:0.999944
know	O	O:0.999682
where	O	O:0.999765
to	O	O:0.999919
look	O	O:0.999726
.	O	O:0.999866
)	O	O:0.999477
	
By	O	O:0.999954
deferring	O	O:0.999577
the	O	O:0.999951
expense	O	O:0.999569
of	O	O:0.999979
drawing	O	O:0.999851
you	O	O:0.999964
can	O	O:0.999906
greatly	O	O:0.999913
improve	O	O:0.999683
the	O	O:0.999975
performance	O	O:0.999611
of	O	O:0.999744
functions	O	O:0.999912
that	O	O:0.999950
make	O	O:0.999962
many	O	O:0.999498
calls	O	O:0.999817
to	O	O:0.999831
`	O	O:0.999914
Figure	B-API	B-API:0.675368
`	O	O:0.999926
and	O	O:0.998237
`	O	O:0.999974
Axes	B-API	B-API:0.880935
`	O	O:0.999937
methods	O	O:0.980244
.	O	O:0.999881
	
`	O	O:0.999673
Figure.add_subplot()	B-API	B-API:0.999217
`	O	O:0.999960
returns	O	O:0.999474
an	O	O:0.999914
`	O	O:0.999978
Axes	B-API	B-API:0.725355
`	O	O:0.999956
instance	O	O:0.997683
,	O	O:0.999985
and	O	O:0.999872
`	O	O:0.999838
pyplot.subplots()	B-API	B-API:0.999895
`	O	O:0.999963
returns	O	O:0.999386
an	O	O:0.999889
`	O	O:0.999975
Axis	B-API	O:0.998171
`	O	O:0.999975
object	O	O:0.998781
as	O	O:0.999945
second	O	O:0.999279
output	O	O:0.999447
parameter	O	O:0.995223
.	O	O:0.998669
	
As	O	O:0.999976
a	O	O:0.999975
side	O	O:0.999775
note	O	O:0.998727
,	O	O:0.999991
it	O	O:0.999908
is	O	O:0.999944
better	O	O:0.999816
to	O	O:0.999994
pass	O	O:0.998637
`	O	O:0.999986
Axes	B-API	O:0.704023
`	O	O:0.999949
objects	O	O:0.998260
into	O	O:0.999995
your	O	O:0.999780
function	O	O:0.999942
than	O	O:0.999719
create	O	O:0.999909
them	O	O:0.999224
(	O	O:0.999998
implicitly	O	O:0.999256
)	O	O:0.999922
internally	O	O:0.995795
.	O	O:0.999789
	
Here	O	O:0.997154
,	O	O:0.999988
what	O	O:0.999549
you	O	O:0.999924
have	O	O:0.999987
done	O	O:0.999923
is	O	O:0.999996
capture	O	O:0.998139
the	O	O:0.999897
`	O	O:0.999874
Axes	B-API	B-API:0.760806
`	O	O:0.999971
instance	O	O:0.999928
that	O	O:0.999629
is	O	O:0.999993
returned	O	O:0.999947
from	O	O:0.999396
`	O	O:0.999953
add_subplot()	B-API	B-API:0.995934
`	O	O:0.999766
.	O	O:0.998825
	
If	O	O:0.999932
I	O	O:0.999986
create	O	O:0.999818
an	O	O:0.999588
`	O	O:0.999982
Axes	B-API	B-API:0.530827
`	O	O:0.999942
object	O	O:0.998593
in	O	O:0.999830
`	O	O:0.999963
matplotlib	O	O:0.976929
`	O	O:0.999911
and	O	O:0.998856
mutate	O	O:0.999048
it	O	O:0.997585
(	O	O:0.999968
i.e.	O	O:0.999482
by	O	O:0.999968
plotting	O	O:0.999831
some	O	O:0.999903
data	O	O:0.999854
)	O	O:0.999888
and	O	O:0.999969
then	O	O:0.999519
I	O	O:0.999998
call	O	O:0.998399
a	O	O:0.999620
function	O	O:0.994146
without	O	O:0.999474
passing	O	O:0.993521
my	O	O:0.997753
`	O	O:0.999956
Axes	B-API	B-API:0.609597
`	O	O:0.999968
object	O	O:0.997744
to	O	O:0.999998
that	O	O:0.999745
function	O	O:0.999973
then	O	O:0.999978
that	O	O:0.999919
function	O	O:0.999940
can	O	O:0.999885
still	O	O:0.999802
mutate	O	O:0.999936
my	O	O:0.999472
`	O	O:0.999962
Axes	B-API	B-API:0.700217
`	O	O:0.999906
.	O	O:0.998573
	
Pass	O	O:0.998314
multiple	O	O:0.998457
matplotlib	O	O:0.998043
Axes	B-API	O:0.890091
objects	O	O:0.999487
from	O	O:0.999835
generator	O	O:0.995419
function	O	O:0.999703
and	O	O:0.999910
display	O	O:0.999707
them	O	O:0.994282
	
The	O	O:0.999519
`	O	O:0.999944
transform	B-API	B-API:0.821688
`	O	O:0.999833
in	O	O:0.999928
this	O	O:0.999990
case	O	O:0.999638
is	O	O:0.999997
a	O	O:0.999762
`	O	O:0.999842
BboxTransformTo	O	O:0.954002
`	O	O:0.999914
object	O	O:0.993113
,	O	O:0.999957
which	O	O:0.997264
:	O	O:0.999914
	
You	O	O:0.999952
can	O	O:0.999692
use	O	O:0.999959
the	O	O:0.999200
`	O	O:0.999745
transform	B-API	B-API:0.822006
`	O	O:0.999916
keyword	O	O:0.976226
:	O	O:0.999987
#CODE	O	O:0.999564
	
But	O	O:0.999968
when	O	O:0.998773
I	O	O:0.999986
checked	O	O:0.999916
the	O	O:0.999487
source	O	O:0.999866
code	O	O:0.999896
of	O	O:0.999983
draw_networkx_nodes	O	B-API:0.955546
draw_networkx	O	B-API:0.883430
,	O	O:0.999934
I	O	O:0.999971
realized	O	O:0.999750
that	O	O:0.998705
it	O	O:0.999890
is	O	O:0.999988
not	O	O:0.999769
a	O	O:0.999987
straight	O	O:0.999164
forward	O	O:0.999949
task	O	O:0.999831
as	O	O:0.999979
the	O	O:0.999990
draw	B-API	O:0.991768
function	O	O:0.999873
stores	O	O:0.999926
the	O	O:0.999873
positions	O	O:0.925035
(	O	O:0.999982
nodes	O	O:0.997408
and	O	O:0.999991
edges	O	O:0.983636
)	O	O:0.999895
in	O	O:0.999919
a	O	O:0.999992
numpy	O	O:0.993570
array	O	O:0.996348
,	O	O:0.999988
send	O	O:0.999469
it	O	O:0.999968
to	O	O:0.999983
the	O	O:0.999993
ax.scatter	B-API	O:0.851833
function	O	O:0.999644
of	O	O:0.999971
matplotlib	O	O:0.991920
(	O	O:0.999990
sourcecode	O	O:0.999677
)	O	O:0.999880
which	O	O:0.998596
is	O	O:0.999994
a	O	O:0.999873
bit	O	O:0.999727
hard	O	O:0.999656
to	O	O:0.999929
manipulate	O	O:0.999772
without	O	O:0.999767
messing	O	O:0.992458
something	O	O:0.998492
up	O	O:0.998371
.	O	O:0.999518
	
This	O	O:0.999878
simply	O	O:0.999528
calls	O	O:0.999564
the	O	O:0.999897
draw	B-API	O:0.979419
method	O	O:0.999683
of	O	O:0.999980
the	O	O:0.999731
figure	O	O:0.995273
periodically	O	O:0.995893
.	O	O:0.999726
	
Then	O	O:0.996817
I	O	O:0.999999
just	O	O:0.999908
added	O	O:0.999829
a	O	O:0.999979
signal	O	O:0.990286
to	O	O:0.999944
the	O	O:0.999974
custom	O	O:0.993086
version	O	O:0.998820
and	O	O:0.999970
overrode	O	O:0.999135
the	O	O:0.999094
draw	B-API	O:0.966017
method	O	O:0.996625
.	O	O:0.999778
	
EDIT	O	O:0.995904
:	O	O:0.999987
I'm	O	O:0.999915
super	O	O:0.999835
blind	O	O:0.999221
,	O	O:0.999997
sorry	O	O:0.999529
for	O	O:0.999964
that	O	O:0.999040
,	O	O:0.999994
you're	O	O:0.999798
calling	O	O:0.996908
the	O	O:0.999828
draw	B-API	O:0.965853
method	O	O:0.997686
,	O	O:0.999981
however	O	O:0.999859
it	O	O:0.999836
is	O	O:0.999984
a	O	O:0.999951
good	O	O:0.999755
idea	O	O:0.999627
to	O	O:0.999880
add	O	O:0.999927
*	O	O:0.999752
args	O	O:0.970470
and	O	O:0.999844
**	O	O:0.999527
kwargs	O	O:0.984617
to	O	O:0.999987
any	O	O:0.999917
overriden	O	O:0.998791
methods	O	O:0.998434
..	O	O:0.999809
try	O	O:0.999772
that	O	O:0.998917
,	O	O:0.999967
and	O	O:0.999888
perhaps	O	O:0.999626
call	O	O:0.978537
FancyBboxPatch.draw	O	O:0.999252
at	O	O:0.999740
the	O	O:0.999862
end	O	O:0.997839
of	O	O:0.999446
overriden	O	O:0.990405
method	O	O:0.998572
	
I'm	O	O:0.999769
also	O	O:0.999694
panning	O	O:0.996372
and	O	O:0.997925
zooming	O	O:0.998809
into	O	O:0.999231
this	O	O:0.999872
figure	O	O:0.967042
,	O	O:0.999791
and	O	O:0.999950
have	O	O:0.999675
been	O	O:0.998353
using	O	O:0.999943
the	O	O:0.996295
draw	B-API	O:0.975311
method	O	O:0.999708
to	O	O:0.999984
show	O	O:0.999970
the	O	O:0.999965
new	O	O:0.999760
perspectives	O	O:0.999127
from	O	O:0.999894
zooming	O	O:0.999346
in	O	O:0.999647
(	O	O:0.999979
using	O	O:0.999087
set_xlim	B-API	B-API:0.987522
and	O	O:0.997838
set_ylim	B-API	B-API:0.862450
)	O	O:0.997796
and	O	O:0.999857
from	O	O:0.999254
panning	O	O:0.942311
(	O	O:0.999965
drag_pan	B-API	O:0.971156
and	O	O:0.999901
start_pan	B-API	O:0.985324
)	O	O:0.999302
.	O	O:0.998774
	
I	O	O:0.999915
would	O	O:0.999881
use	O	O:0.998132
`	O	O:0.999743
ax.autoscale	B-API	B-API:0.905952
(	O	O:0.999977
enable=False	O	O:0.999460
)`	O	O:0.999883
before	O	O:0.999707
your	O	O:0.999985
call	O	O:0.991771
to	O	O:0.999985
`	O	O:0.999974
scatter	B-API	O:0.990036
`	O	O:0.999929
.	O	O:0.998750
	
You	O	O:0.999909
can	O	O:0.999784
perhaps	O	O:0.999748
loop	O	O:0.999900
into	O	O:0.999986
your	O	O:0.999328
`	O	O:0.999777
AxesSubplot	O	O:0.891405
`	O	O:0.999953
objects	O	O:0.976829
and	O	O:0.999991
call	O	O:0.970239
`	O	O:0.999984
autoscale	B-API	B-API:0.841475
`	O	O:0.999974
passing	O	O:0.995780
the	O	O:0.999838
`	O	O:0.999984
axis	O	O:0.998894
`	O	O:0.999986
parameter	O	O:0.986723
:	O	O:0.999985
#CODE	O	O:0.999650
	
@USER	O	O:0.999079
-	O	O:0.999971
If	O	O:0.999869
you'd	O	O:0.999971
like	O	O:0.999839
to	O	O:0.999980
rescale	O	O:0.999812
the	O	O:0.999981
axes	B-API	O:0.999196
,	O	O:0.999999
call	O	O:0.994273
`	O	O:0.999985
ax.autoscale()	B-API	B-API:0.999400
`	O	O:0.999966
every	O	O:0.999500
time	O	O:0.999980
you	O	O:0.999937
remove	O	O:0.999635
a	O	O:0.999977
point	O	O:0.995670
.	O	O:0.999575
	
Python	O	O:0.992434
:	O	O:0.999984
Add	O	O:0.999913
x-y	O	O:0.999952
margins	B-API	O:0.981186
automatically	O	O:0.999920
with	O	O:0.999448
autoscale	B-API	B-API:0.749411
(	O	O:0.999981
pyplot	B-API	O:0.997331
)	O	O:0.999761
	
Ahh	O	O:0.999777
,	O	O:0.999961
it's	O	O:0.999798
the	O	O:0.999971
call	O	O:0.986729
to	O	O:0.999981
`	O	O:0.999994
autoscale	B-API	B-API:0.616744
`	O	O:0.999993
that	O	O:0.998485
I'm	O	O:0.999986
missing	O	O:0.997312
.	O	O:0.998733
	
The	O	O:0.999946
trick	O	O:0.998988
is	O	O:0.999974
at	O	O:0.999940
the	O	O:0.999872
end	O	O:0.991850
,	O	O:0.999969
in	O	O:0.999971
the	O	O:0.999880
custom	O	O:0.956507
refresh	B-API	O:0.996348
method	O	O:0.998374
!	O	O:0.999973
	
For	O	O:0.999844
what	O	O:0.998832
you're	O	O:0.999671
wanting	O	O:0.999785
to	O	O:0.999908
do	O	O:0.999983
,	O	O:0.999992
you'd	O	O:0.999952
be	O	O:0.999930
far	O	O:0.999939
better	O	O:0.999673
off	O	O:0.999806
using	O	O:0.996622
annotate	B-API	B-API:0.563065
.	O	O:0.996834
	
It's	O	O:0.999600
quite	O	O:0.999726
simple	O	O:0.999602
to	O	O:0.999982
do	O	O:0.999994
manually	O	O:0.999948
with	O	O:0.999674
`	O	O:0.999958
annotate	B-API	O:0.685276
`	O	O:0.999935
.	O	O:0.998884
	
If	O	O:0.999921
you're	O	O:0.999488
wanting	O	O:0.999191
to	O	O:0.999627
adjust	O	O:0.999922
vertical	O	O:0.992651
alignment	O	O:0.998293
,	O	O:0.999979
horizontal	O	O:0.995886
alignment	O	O:0.999642
,	O	O:0.999970
etc	O	O:0.999419
,	O	O:0.999991
just	O	O:0.999272
add	O	O:0.999980
those	O	O:0.999700
as	O	O:0.999968
arguments	O	O:0.999544
to	O	O:0.999927
`	O	O:0.999997
annotate	B-API	O:0.656324
`	O	O:0.999860
(	O	O:0.999960
e.g.	O	O:0.998730
`	O	O:0.999950
horizontalalignment=	O	O:0.998226
'	O	O:0.999979
right	O	O:0.999407
'`	O	O:0.999967
or	O	O:0.999951
equivalently	O	O:0.999011
`	O	O:0.999975
ha=	O	O:0.999146
'	O	O:0.999981
right	O	O:0.998717
'`)	O	O:0.998828
	
It's	O	O:0.999600
quite	O	O:0.999726
simple	O	O:0.999602
to	O	O:0.999982
do	O	O:0.999994
manually	O	O:0.999948
with	O	O:0.999674
`	O	O:0.999958
annotate	B-API	O:0.685276
`	O	O:0.999935
.	O	O:0.998884
	
You	O	O:0.999946
can	O	O:0.999599
use	O	O:0.999964
the	O	O:0.999756
annotate	B-API	O:0.580137
command	O	O:0.998773
to	O	O:0.999985
place	O	O:0.999972
text	O	O:0.999825
annotations	O	O:0.999877
at	O	O:0.999968
any	O	O:0.999329
x	O	O:0.998106
and	O	O:0.999900
y	O	O:0.999859
values	O	O:0.997067
you	O	O:0.999815
want	O	O:0.998897
.	O	O:0.999489
	
+1	O	O:0.999960
Just	O	O:0.999841
as	O	O:0.999987
a	O	O:0.999972
side	O	O:0.999804
note	O	O:0.999557
,	O	O:0.999993
annotate	B-API	O:0.992014
has	O	O:0.999833
"	O	O:0.999977
offseting	O	O:0.999079
the	O	O:0.999757
annotations	O	O:0.999336
a	O	O:0.999943
little	O	O:0.993081
"	O	O:0.999719
built-in	O	O:0.985822
.	O	O:0.999476
	
While	O	O:0.999060
there's	O	O:0.999811
nothing	O	O:0.992100
wrong	O	O:0.999308
with	O	O:0.999714
Ofri's	O	O:0.998277
answer	O	O:0.999837
,	O	O:0.999937
`	O	O:0.999954
annotate	B-API	O:0.694406
`	O	O:0.999884
is	O	O:0.999795
intended	O	O:0.999971
especially	O	O:0.998967
for	O	O:0.999963
this	O	O:0.999165
purpose	O	O:0.977238
:	O	O:0.999932
#CODE	O	O:0.999445
	
Just	O	O:0.999399
use	O	O:0.999297
`	O	O:0.999534
annotate	B-API	B-API:0.758318
`	O	O:0.999875
and	O	O:0.999476
specify	O	O:0.999856
axis	O	O:0.999630
coordinates	O	O:0.946206
.	O	O:0.999694
	
It	O	O:0.999567
is	O	O:0.999980
also	O	O:0.999777
possible	O	O:0.999742
to	O	O:0.999985
make	O	O:0.999952
an	O	O:0.999884
arrow	O	O:0.999833
with	O	O:0.999958
text	O	O:0.997844
,	O	O:0.999997
using	O	O:0.999886
the	O	O:0.988929
annotate	B-API	B-API:0.766456
method	O	O:0.990431
.	O	O:0.999638
	
The	O	O:0.999734
closest	O	O:0.999574
thing	O	O:0.998973
I	O	O:0.999984
have	O	O:0.999779
been	O	O:0.999506
able	O	O:0.999970
to	O	O:0.999965
find	O	O:0.999919
while	O	O:0.999842
searching	O	O:0.999988
here	O	O:0.999200
is	O	O:0.999993
the	O	O:0.999820
annotate	B-API	O:0.682496
command	O	O:0.985873
,	O	O:0.999982
but	O	O:0.999992
that	O	O:0.999704
appears	O	O:0.999794
to	O	O:0.999950
create	O	O:0.999960
a	O	O:0.999990
fixed	O	O:0.999914
label	O	O:0.987368
on	O	O:0.999942
the	O	O:0.999898
plot	O	O:0.969239
.	O	O:0.999824
	
`	O	O:0.999557
plt.annotate	B-API	B-API:0.904448
(	O	O:0.999954
'	O	O:0.999982
Something	O	O:0.999702
'	O	O:0.999568
,	O	O:0.999966
(	O	O:0.999982
0	O	O:0.999921
,	O	O:0.999993
0	O	O:0.999935
)	O	O:0.999728
,	O	O:0.999846
(	O	O:0.999987
0	O	O:0.999789
,	O	O:0.999986
-20	O	O:0.999088
)	O	O:0.999680
,	O	O:0.999890
xycoords=	O	O:0.999754
'	O	O:0.999972
axes	B-API	O:0.999434
fraction	O	O:0.999292
'	O	O:0.999875
,	O	O:0.999981
textcoords=	O	O:0.999544
'	O	O:0.999768
offset	O	O:0.999498
points	O	O:0.996560
'	O	O:0.999917
,	O	O:0.999977
va=	O	O:0.999893
'	O	O:0.999858
top	O	O:0.976811
')`	O	O:0.999294
	
@USER	O	O:0.998133
I'm	O	O:0.999741
not	O	O:0.999910
sure	O	O:0.999846
why	O	O:0.999890
we	O	O:0.999991
have	O	O:0.999626
to	O	O:0.999994
explicitly	O	O:0.999997
call	O	O:0.977140
`	O	O:0.999998
draw	B-API	O:0.888825
`	O	O:0.999952
.	O	O:0.998310
	
The	O	O:0.999124
`	O	O:0.999896
boxplot	B-API	O:0.983318
`	O	O:0.999918
function	O	O:0.999712
only	O	O:0.999974
plots	O	O:0.999277
quartiles	O	O:0.999726
(	O	O:0.999974
0	O	O:0.999932
,	O	O:0.999978
25	O	O:0.999845
,	O	O:0.999936
50	O	O:0.999850
,	O	O:0.999928
75	O	O:0.999836
,	O	O:0.999962
100	O	O:0.999113
)	O	O:0.999411
.	O	O:0.997627
	
Is	O	O:0.999984
there	O	O:0.999789
any	O	O:0.999923
way	O	O:0.999848
I	O	O:0.999963
can	O	O:0.999824
extract	O	O:0.999553
these	O	O:0.999879
values	O	O:0.999338
for	O	O:0.999862
use	O	O:0.999593
in	O	O:0.999726
my	O	O:0.999867
downstream	O	O:0.999936
code	O	O:0.999911
from	O	O:0.999866
the	O	O:0.999847
boxplot	B-API	O:0.996358
object	O	O:0.999277
?	O	O:0.999954
	
I	O	O:0.999977
am	O	O:0.999994
plotting	O	O:0.997028
a	O	O:0.999966
non-normal	O	O:0.981658
distribution	O	O:0.999094
using	O	O:0.999382
boxplot	B-API	O:0.822365
and	O	O:0.997941
interested	O	O:0.999216
in	O	O:0.999364
finding	O	O:0.998956
out	O	O:0.999752
about	O	O:0.999441
outliers	O	O:0.998061
using	O	O:0.999716
boxplot	B-API	O:0.980100
function	O	O:0.999057
of	O	O:0.999854
matplotlib	O	O:0.984358
.	O	O:0.999651
	
You	O	O:0.999812
should	O	O:0.999466
use	O	O:0.999830
the	O	O:0.997154
`	O	O:0.999797
hist	B-API	B-API:0.914211
`	O	O:0.999901
function	O	O:0.997187
.	O	O:0.999907
	
An	O	O:0.999921
similar	O	O:0.999929
example	O	O:0.999703
of	O	O:0.999957
such	O	O:0.999932
plot	O	O:0.993985
is	O	O:0.999825
"	O	O:0.999834
hist	B-API	B-API:0.900335
(	O	O:0.999976
x	O	O:0.998587
,	O	O:0.999984
orientation=	O	O:0.999567
'	O	O:0.999895
horizontal	O	O:0.994403
')"	O	O:0.999101
.	O	O:0.998947
	
I	O	O:0.999993
need	O	O:0.999921
to	O	O:0.999857
use	O	O:0.999992
the	O	O:0.997285
`	O	O:0.999867
hist	B-API	B-API:0.891208
`	O	O:0.999946
function	O	O:0.999565
,	O	O:0.999993
I	O	O:0.999993
have	O	O:0.999117
looked	O	O:0.999608
elsewhere	O	O:0.998809
on	O	O:0.999973
this	O	O:0.999852
site	O	O:0.999938
but	O	O:0.999810
I	O	O:0.999984
haven't	O	O:0.999100
found	O	O:0.996555
anything	O	O:0.998334
.	O	O:0.998334
	
I	O	O:0.999974
tried	O	O:0.999811
doing	O	O:0.994230
hist	B-API	B-API:0.958569
(	O	O:0.999912
x	O	O:0.999363
/	O	O:0.999912
x.sum()	O	B-API:0.564346
)	O	O:0.999761
but	O	O:0.999933
that	O	O:0.999754
reduce	O	O:0.999532
the	O	O:0.999973
values	O	O:0.999078
of	O	O:0.999986
the	O	O:0.999934
numbers	O	O:0.998840
in	O	O:0.999950
the	O	O:0.999963
x	O	O:0.999359
axis	O	O:0.999220
and	O	O:0.999985
does	O	O:0.999665
not	O	O:0.999539
change	O	O:0.999794
their	O	O:0.999353
frequency	O	O:0.999690
,	O	O:0.999915
so	O	O:0.999974
the	O	O:0.999908
y-axis	O	O:0.999322
is	O	O:0.999955
unchanged	O	O:0.998782
	
How	O	O:0.999956
can	O	O:0.999625
I	O	O:0.999997
prevent	O	O:0.999828
the	O	O:0.999790
labels	O	O:0.999472
of	O	O:0.999813
`	O	O:0.999839
xticks	B-API	O:0.539756
`	O	O:0.999995
from	O	O:0.999023
overlapping	O	O:0.999827
with	O	O:0.999936
the	O	O:0.999939
labels	O	O:0.999756
of	O	O:0.999860
`	O	O:0.999887
yticks	B-API	B-API:0.512081
`	O	O:0.999988
when	O	O:0.998243
using	O	O:0.999789
`	O	O:0.999938
hist	B-API	B-API:0.994983
`	O	O:0.999889
(	O	O:0.999921
or	O	O:0.999987
other	O	O:0.999904
plotting	O	O:0.999823
commands	O	O:0.998707
)	O	O:0.999949
in	O	O:0.999769
matplotlib	O	O:0.999026
?	O	O:0.999913
	
An	O	O:0.999982
easy	O	O:0.999721
way	O	O:0.999955
to	O	O:0.999836
do	O	O:0.999998
this	O	O:0.999901
is	O	O:0.999988
to	O	O:0.999919
add	O	O:0.999949
`	O	O:0.999971
0j	O	O:0.995759
`	O	O:0.999990
to	O	O:0.999952
the	O	O:0.999998
argument	O	O:0.999781
of	O	O:0.999973
the	O	O:0.999587
`	O	O:0.999988
sqrt	B-API	B-API:0.747855
`	O	O:0.999972
,	O	O:0.999972
like	O	O:0.999981
this	O	O:0.999824
,	O	O:0.999940
`	O	O:0.999963
sqrt	B-API	B-API:0.780027
(	O	O:0.999985
1+0j-	O	O:0.999184
(	O	O:0.999976
1	O	O:0.999946
/	O	O:0.999974
x	O	O:0.999364
)	O	O:0.999951
**2	O	O:0.975019
)`	O	O:0.999688
.	O	O:0.998054
	
You	O	O:0.999960
need	O	O:0.999593
to	O	O:0.999930
set	O	O:0.999967
the	O	O:0.999968
new	O	O:0.999904
coordinates	O	O:0.996164
of	O	O:0.999995
the	O	O:0.999961
datapoints	O	O:0.999678
in	O	O:0.999887
the	O	O:0.999970
internal	O	O:0.991527
`	O	O:0.999945
_ofsets3d	O	O:0.962682
`	O	O:0.999999
variable	O	O:0.998639
of	O	O:0.999992
the	O	O:0.999308
`	O	O:0.999818
Line3DCollection	O	B-API:0.947664
`	O	O:0.999961
object	O	O:0.998866
returned	O	O:0.999972
by	O	O:0.999944
the	O	O:0.999908
`	O	O:0.999848
scatter	B-API	O:0.997862
`	O	O:0.999918
function	O	O:0.997469
.	O	O:0.999907
	
You	O	O:0.999919
can	O	O:0.999754
use	O	O:0.999849
`	O	O:0.999862
scatter	B-API	O:0.989281
`	O	O:0.999888
for	O	O:0.999829
this	O	O:0.998994
,	O	O:0.999909
but	O	O:0.999958
that	O	O:0.999196
requires	O	O:0.998933
having	O	O:0.999796
numerical	O	O:0.973722
values	O	O:0.998471
for	O	O:0.999995
your	O	O:0.997735
`	O	O:0.999863
key1	O	O:0.901756
`	O	O:0.999914
,	O	O:0.999799
and	O	O:0.999978
you	O	O:0.998833
won't	O	O:0.999953
have	O	O:0.999889
a	O	O:0.999971
legend	B-API	O:0.997654
,	O	O:0.999982
as	O	O:0.999945
you	O	O:0.998892
noticed	O	O:0.995684
.	O	O:0.999758
	
The	O	O:0.999559
`	O	O:0.999860
scatter	B-API	O:0.982531
`	O	O:0.999941
and	O	O:0.994648
`	O	O:0.999991
hist	B-API	B-API:0.977564
`	O	O:0.999984
commands	O	O:0.998485
really	O	O:0.999921
expect	O	O:0.998482
`	O	O:0.999970
x	O	O:0.983959
`	O	O:0.999965
and	O	O:0.999588
`	O	O:0.999997
y	O	O:0.993978
`	O	O:0.999990
to	O	O:0.999878
be	O	O:0.999997
1D	O	O:0.999874
arrays	O	O:0.995110
.	O	O:0.999529
	
I'm	O	O:0.999475
wondering	O	O:0.999483
if	O	O:0.999824
it	O	O:0.999911
is	O	O:0.999991
possible	O	O:0.999167
to	O	O:0.999957
have	O	O:0.999947
individual	O	O:0.999504
alpha	O	O:0.982550
values	O	O:0.997486
for	O	O:0.999961
each	O	O:0.999637
point	O	O:0.999615
to	O	O:0.999986
be	O	O:0.999996
plotted	O	O:0.999399
using	O	O:0.999781
the	O	O:0.999544
scatter	B-API	O:0.989087
function	O	O:0.999560
of	O	O:0.999878
Matplotlib	O	O:0.998071
.	O	O:0.999576
	
The	O	O:0.999931
problem	O	O:0.997697
happens	O	O:0.999904
when	O	O:0.998846
I	O	O:0.999999
call	O	O:0.998817
the	O	O:0.999907
scatter	B-API	O:0.952851
function	O	O:0.998166
.	O	O:0.999782
	
I	O	O:0.999945
tried	O	O:0.999797
adding	O	O:0.985706
`	O	O:0.998824
/	O	O:0.998299
Library	O	O:0.996924
/	O	O:0.999776
TeX	O	O:0.999146
/	O	O:0.999786
Root	O	O:0.996580
/	O	O:0.999854
bin	O	O:0.994087
/	O	O:0.999951
universal-darwin	O	O:0.994167
`	O	O:0.999971
to	O	O:0.999585
the	O	O:0.999993
Global	O	O:0.997762
Python	O	O:0.999920
Path	O	O:0.991222
of	O	O:0.999935
the	O	O:0.998819
Project	O	O:0.995690
Properties	O	O:0.994079
,	O	O:0.999985
but	O	O:0.999962
I	O	O:0.999989
still	O	O:0.998908
get	O	O:0.999187
the	O	O:0.999961
same	O	O:0.998637
errors	O	O:0.998969
.	O	O:0.999953
	
My	O	O:0.999747
Python	O	O:0.999181
Path	O	O:0.922080
is	O	O:0.999960
correct	O	O:0.995815
C	O	O:0.999448
:\	O	O:0.997212
Python27_32bit\	O	O:0.964086
and	O	O:0.999579
I	O	O:0.999981
also	O	O:0.999878
have	O	O:0.998575
\lib\	O	O:0.989533
site-packages	O	O:0.994278
\	O	O:0.993218
and	O	O:0.999450
\DLL	O	O:0.998485
included	O	O:0.998799
correctly	O	O:0.997489
.	O	O:0.999505
	
Adding	O	O:0.986828
Python	O	O:0.998527
Path	O	O:0.929495
on	O	O:0.999902
Windows	O	O:0.999085
7	O	O:0.999746
	
Append	O	O:0.986004
`	O	O:0.999929
;	O	O:0.999921
C	O	O:0.999615
:\	O	O:0.999866
python27\Scripts	O	O:0.996076
`	O	O:0.999986
to	O	O:0.999909
the	O	O:0.999998
end	O	O:0.999187
of	O	O:0.999821
`	O	O:0.999940
Path	O	O:0.712027
`	O	O:0.999970
variable	O	O:0.962381
	
I	O	O:0.999976
use	O	O:0.999978
a	O	O:0.999650
palette	O	O:0.657240
file	O	O:0.999807
that	O	O:0.999727
I'm	O	O:0.999997
able	O	O:0.999934
to	O	O:0.999945
create	O	O:0.999949
using	O	O:0.999863
GIMP	O	O:0.997703
+	O	O:0.999549
Sample	O	O:0.999523
a	O	O:0.999883
Gradient	O	O:0.999581
Along	O	O:0.998072
a	O	O:0.999588
Path	O	B-API:0.534069
.	O	O:0.998230
	
Spine	O	B-API:0.579679
position	O	O:0.995711
is	O	O:0.999980
specified	O	O:0.999895
by	O	O:0.999987
a	O	O:0.999965
2	O	O:0.999962
tuple	O	O:0.998599
of	O	O:0.999763
(	O	O:0.999729
position	O	O:0.999885
type	O	O:0.999669
,	O	O:0.999993
amount	O	O:0.998753
)	O	O:0.999077
.	O	O:0.998203
	
Annotation	O	O:0.999798
along	O	O:0.999835
a	O	O:0.999947
curve	O	O:0.992376
in	O	O:0.999929
matplotlib	O	O:0.994146
	
Heat	O	O:0.998396
Map	O	O:0.998824
Annotation	O	O:0.999755
with	O	O:0.999819
text	O	O:0.991945
	
Annotation	O	O:0.999647
on	O	O:0.999989
top	O	O:0.999372
of	O	O:0.999989
the	O	O:0.999953
bars	O	O:0.999807
show	O	O:0.999786
the	O	O:0.999956
actual	O	O:0.999605
percentage	O	O:0.999369
of	O	O:0.999983
that	O	O:0.999664
category	O	O:0.996385
.	O	O:0.999736
	
Text	O	O:0.643419
File	O	O:0.946648
.	O	O:0.999263
	
I'm	O	O:0.999547
using	O	O:0.998763
Ubuntu	O	O:0.956994
and	O	O:0.997285
Sublime	O	O:0.996241
Text	O	B-API:0.732185
.	O	O:0.999128
	
Check	O	O:0.999359
this	O	O:0.999795
page	O	O:0.995080
:	O	O:0.999967
Text	O	O:0.921811
Rendering	O	O:0.998608
with	O	O:0.997071
LaTeX	O	O:0.996015
.	O	O:0.999650
	
When	O	O:0.998300
using	O	O:0.999364
Matplotlib	O	O:0.974920
(	O	O:0.999843
Pylab	O	O:0.999478
)	O	O:0.999831
for	O	O:0.999776
rendering	O	O:0.999443
Text	O	O:0.805674
with	O	O:0.999659
the	O	O:0.999889
same	O	O:0.999867
metrics	O	O:0.999475
as	O	O:0.999992
AriaL	O	O:0.990985
(	O	O:0.999965
e.g.	O	O:0.993088
,	O	O:0.999948
Arial	O	O:0.999560
itself	O	O:0.999096
or	O	O:0.999801
Liberation	O	O:0.996931
Sans	O	O:0.999756
)	O	O:0.999763
output	O	O:0.999204
looks	O	O:0.999536
ok	O	O:0.999800
-	O	O:0.999979
e.g.	O	O:0.998760
,	O	O:0.999993
the	O	O:0.999984
width	O	O:0.999569
of	O	O:0.999958
the	O	O:0.999402
legend	O	O:0.997866
box	O	O:0.997428
is	O	O:0.999931
right	O	O:0.997780
.	O	O:0.999780
	
Text	O	O:0.626578
box	O	O:0.999354
with	O	O:0.999859
line	O	O:0.998932
wrapping	O	O:0.999790
in	O	O:0.999788
matplotlib	O	O:0.998854
?	O	O:0.999940
	
Python	O	O:0.997384
/	O	O:0.999746
Matplotlib	O	O:0.998511
-	O	O:0.999978
Quickly	O	O:0.997672
Updating	O	O:0.998094
Text	O	O:0.619576
on	O	O:0.999831
Axes	O	O:0.696058
	
Text	O	O:0.925333
display	O	O:0.998133
problem	O	O:0.998898
with	O	O:0.999743
matplotlib	O	O:0.996609
?	O	O:0.999963
	
Network	O	O:0.999604
from	O	O:0.998980
Table	O	O:0.998378
(	O	O:0.999990
Text	O	O:0.953070
/	O	O:0.999708
MS	O	O:0.999949
Excel	O	O:0.996926
)	O	O:0.999733
..	O	O:0.991324
	
Text	O	O:0.766954
alignment	O	O:0.999793
in	O	O:0.999886
a	O	O:0.999923
Matplotlib	O	O:0.994896
legend	O	O:0.962698
	
Underlining	O	O:0.991124
Text	O	O:0.602751
in	O	O:0.999762
Python	O	O:0.998867
/	O	O:0.999807
Matplotlib	O	O:0.996622
	
(	O	O:0.999897
Text	O	O:0.946125
colour	O	O:0.999823
comes	O	O:0.999615
out	O	O:0.999972
as	O	O:0.999963
black	O	O:0.977577
)	O	O:0.999756
#CODE	O	O:0.996193
	
However	O	O:0.999302
,	O	O:0.999990
when	O	O:0.999389
I	O	O:0.999992
paste	O	O:0.999958
this	O	O:0.999710
code	O	O:0.999948
into	O	O:0.999910
my	O	O:0.999960
Wordpress	O	O:0.999861
page	O	O:0.996565
(	O	O:0.999992
using	O	O:0.999750
the	O	O:0.998380
Text	O	O:0.542441
editor	O	O:0.997372
,	O	O:0.999968
not	O	O:0.999737
the	O	O:0.999871
visual	O	O:0.994342
editor	O	O:0.999171
)	O	O:0.999945
nothing	O	O:0.980958
happens	O	O:0.997468
.	O	O:0.999630
	
This	O	O:0.999725
generates	O	O:0.999032
the	O	O:0.999918
plot	O	O:0.982289
but	O	O:0.999898
the	O	O:0.999923
Legend	O	O:0.998511
B	O	O:0.999474
is	O	O:0.999992
placed	O	O:0.998814
at	O	O:0.999972
the	O	O:0.999774
upper	O	O:0.985775
right	O	O:0.998106
hand	O	O:0.999914
side	O	O:0.999824
corner	O	O:0.998823
and	O	O:0.999795
Legend	O	O:0.999125
A	O	O:0.997478
is	O	O:0.999986
by	O	O:0.999790
default	O	O:0.999652
placed	O	O:0.999169
at	O	O:0.999958
the	O	O:0.999861
left	O	O:0.984557
hand	O	O:0.999578
upper	O	O:0.995520
corner	O	O:0.998855
.	O	O:0.999235
	
Multiple	O	O:0.998273
Pie	O	O:0.999650
Charts	O	O:0.999947
with	O	O:0.999744
a	O	O:0.999874
Shared	O	O:0.998102
Legend	O	O:0.995736
	
You	O	O:0.999863
can	O	O:0.999742
add	O	O:0.999975
a	O	O:0.999972
legend	O	O:0.994201
to	O	O:0.999979
only	O	O:0.999921
the	O	O:0.999970
first	O	O:0.999938
axes	O	O:0.999715
after	O	O:0.999955
plotting	O	O:0.999741
all	O	O:0.998866
of	O	O:0.999993
your	O	O:0.997386
pie	O	O:0.998919
charts	O	O:0.992291
:	O	O:0.999957
#CODE	O	O:0.999454
	
Matplotlib	O	O:0.989439
:	O	O:0.999839
Legend	O	O:0.999726
not	O	O:0.999759
displayed	O	O:0.999886
properly	O	O:0.997801
	
Legend	O	O:0.998088
colors	O	O:0.953613
in	O	O:0.999889
Matplotlib	O	O:0.999967
table	O	O:0.995795
function	O	O:0.999507
?	O	O:0.999957
	
Legend	O	O:0.999390
transparency	O	O:0.999295
,	O	O:0.999984
when	O	O:0.999312
using	O	O:0.999902
secondary	O	O:0.999371
axis	O	O:0.997141
	
Legend	O	O:0.997559
is	O	O:0.999947
outside	O	O:0.999475
the	O	O:0.999862
frame	O	O:0.997911
.	O	O:0.999505
	
Button	O	O:0.688058
1	O	O:0.999600
:	O	O:0.999988
Shows	O	O:0.999941
the	O	O:0.999978
pointscores	O	O:0.991809
of	O	O:0.999901
John	O	O:0.997962
and	O	O:0.999919
Daniel	O	O:0.998558
in	O	O:0.999923
level	O	O:0.992436
1	O	O:0.999642
.	O	O:0.999107
	
How	O	O:0.999819
to	O	O:0.999897
get	O	O:0.999956
multiple	O	O:0.998259
Button	O	O:0.833622
Click	O	O:0.999472
Events	O	O:0.994877
in	O	O:0.999866
Python	O	O:0.998180
	
Button	O	O:0.812225
click	O	O:0.881284
->	O	O:0.999698
ser.write	O	O:0.992730
,	O	O:0.999972
ser.read	O	O:0.765135
,	O	O:0.999979
draw	O	O:0.997544
	
Another	O	O:0.999586
solution	O	O:0.998701
is	O	O:0.999991
print	O	O:0.995230
a	O	O:0.999945
'	O	O:0.999406
Cursor	O	O:0.893417
'	O	O:0.999823
or	O	O:0.999853
marker	O	O:0.999859
line	O	O:0.999712
on	O	O:0.999930
the	O	O:0.999957
plot	O	O:0.974697
,	O	O:0.999971
and	O	O:0.999940
change	O	O:0.998853
its	O	O:0.998635
coordinates	O	O:0.992940
with	O	O:0.999821
the	O	O:0.999870
mouse	O	O:0.998645
events	O	O:0.994478
.	O	O:0.999796
	
An	O	O:0.999809
Arrow	O	O:0.873493
would	O	O:0.998967
appear	O	O:0.998708
with	O	O:0.999952
data	O	O:0.999712
about	O	O:0.999848
the	O	O:0.999810
invisible	O	O:0.999669
line	O	O:0.999667
one	O	O:0.999342
,	O	O:0.999977
but	O	O:0.999878
he	O	O:0.999326
wanted	O	O:0.998119
info	O	O:0.998529
about	O	O:0.999944
line	O	O:0.997418
two	O	O:0.999102
.	O	O:0.999786
	
Arrow	O	O:0.881720
on	O	O:0.999956
a	O	O:0.999990
line	O	O:0.999758
plot	O	O:0.995985
with	O	O:0.999818
matplotlib	O	O:0.992937
	
Drawing	O	O:0.985482
Arrow	O	O:0.623805
in	O	O:0.999470
(	O	O:0.999973
x	O	O:0.999537
,	O	O:0.999998
y	O	O:0.999937
)	O	O:0.999932
coordinate	O	O:0.999340
in	O	O:0.999959
Python	O	O:0.998779
	
To	O	O:0.999955
be	O	O:0.999992
more	O	O:0.999403
specific	O	O:0.998809
,	O	O:0.999987
if	O	O:0.999973
you	O	O:0.999953
look	O	O:0.998887
at	O	O:0.999992
the	O	O:0.999871
answer	O	O:0.999067
to	O	O:0.999941
that	O	O:0.999877
question	O	O:0.999966
it	O	O:0.999988
shows	O	O:0.999856
how	O	O:0.999908
to	O	O:0.999997
make	O	O:0.999950
a	O	O:0.999961
3D	O	O:0.999560
Arrow	O	O:0.690444
and	O	O:0.999284
use	O	O:0.999916
that	O	O:0.997970
to	O	O:0.999948
annotate	O	O:0.992313
points	O	O:0.998854
in	O	O:0.999987
a	O	O:0.999940
3D	O	O:0.999927
plot	O	O:0.987034
--	O	O:0.999980
I	O	O:0.999985
have	O	O:0.999711
used	O	O:0.999636
this	O	O:0.998514
recipe	O	O:0.999046
extensively	O	O:0.995948
and	O	O:0.999630
it	O	O:0.999961
makes	O	O:0.998071
me	O	O:0.999831
wonder	O	O:0.999264
how	O	O:0.999699
it	O	O:0.999840
isn't	O	O:0.999559
built	O	O:0.999624
into	O	O:0.999782
matplotlib	O	O:0.999472
yet	O	O:0.998560
.	O	O:0.999526
	
Node	O	O:0.907260
positions	O	O:0.989405
are	O	O:0.999621
generated	O	O:0.999077
,	O	O:0.999880
stored	O	O:0.998871
and	O	O:0.999153
assigned	O	O:0.999477
like	O	O:0.998745
this	O	O:0.999124
#CODE	O	O:0.998280
	
Node	O	B-API:0.547438
and	O	O:0.999943
edge	O	O:0.999818
attribute	O	O:0.999847
files	O	O:0.998798
are	O	O:0.999869
simply	O	O:0.998979
formatted	O	O:0.999270
:	O	O:0.999979
a	O	O:0.999997
node	O	O:0.999536
attribute	O	O:0.999980
file	O	O:0.999438
begins	O	O:0.999809
with	O	O:0.999921
the	O	O:0.999979
name	O	O:0.999726
of	O	O:0.999991
the	O	O:0.999989
attribute	O	O:0.999902
on	O	O:0.999963
the	O	O:0.999959
first	O	O:0.999831
line	O	O:0.997939
(	O	O:0.999994
note	O	O:0.999908
that	O	O:0.999818
it	O	O:0.999991
cannot	O	O:0.999354
contain	O	O:0.999390
spaces	O	O:0.998819
)	O	O:0.999826
.	O	O:0.998807
	
Normalize	O	O:0.560620
the	O	O:0.999591
input	O	O:0.999469
data	O	O:0.999064
and	O	O:0.999900
scale	O	O:0.995711
it	O	O:0.999416
	
Normalize	O	O:0.971753
your	O	O:0.999703
data	O	O:0.999316
.	O	O:0.999789
	
Normalize	O	O:0.742675
again	O	O:0.994416
	
Normalize	O	O:0.963511
your	O	O:0.999845
data	O	O:0.999921
,	O	O:0.999997
apply	O	O:0.930399
the	O	O:0.999800
colormap	O	O:0.980045
,	O	O:0.999998
save	O	O:0.999848
the	O	O:0.999918
image	O	O:0.998544
.	O	O:0.999972
matplotlib	O	O:0.999814
provides	O	O:0.999631
all	O	O:0.999706
the	O	O:0.999971
necessary	O	O:0.990086
functionality	O	O:0.996522
:	O	O:0.999981
#CODE	O	O:0.999668
	
Normalize	O	B-API:0.516754
histogram2d	B-API	B-API:0.576719
by	O	O:0.999754
bin	O	O:0.998918
area	O	O:0.998766
	
Python	O	O:0.997384
/	O	O:0.999746
Matplotlib	O	O:0.998519
-	O	O:0.999980
Figure	O	O:0.811304
Borders	O	O:0.999037
in	O	O:0.999750
wxPython	O	O:0.996547
	
gcf()	B-API	B-API:0.968718
means	O	O:0.993753
Get	O	O:0.999610
Current	O	O:0.998995
Figure	O	B-API:0.551185
	
Figure	O	O:0.832717
title	O	O:0.999127
with	O	O:0.999819
several	O	O:0.995012
colors	O	O:0.990222
in	O	O:0.999960
matplotlib	O	O:0.996246
	
However	O	O:0.999293
,	O	O:0.999968
the	O	O:0.999934
sample	O	O:0.997398
consists	O	O:0.999779
of	O	O:0.999997
distinct	O	O:0.999001
solutions	O	O:0.999560
which	O	O:0.999933
form	O	O:0.999929
lines	O	O:0.999086
in	O	O:0.999987
the	O	O:0.999932
parameter	O	O:0.999096
space	O	O:0.999523
such	O	O:0.999991
that	O	O:0.999926
putting	O	O:0.998691
everything	O	O:0.999612
into	O	O:0.999259
a	O	O:0.999984
matrix	O	O:0.802900
and	O	O:0.999823
using	O	O:0.997633
`	O	O:0.991305
imshow	B-API	B-API:0.992027
`	O	O:0.999241
is	O	O:0.999645
not	O	O:0.999959
desirable	O	O:0.999964
because	O	O:0.999830
of	O	O:0.999975
the	O	O:0.999848
pixelation	O	O:0.996221
artefacts	O	O:0.999045
(	O	O:0.999993
Figure	O	O:0.972202
1	O	O:0.999809
)	O	O:0.999739
.	O	O:0.999049
	
See	O	O:0.999722
Figure	O	O:0.745814
2	O	O:0.999472
.	O	O:0.999535
	
Labeling	O	O:0.992983
Figure	O	O:0.857586
from	O	O:0.998582
String	O	O:0.999501
List	O	O:0.999125
	
I	O	O:0.999862
was	O	O:0.999993
able	O	O:0.999061
to	O	O:0.999963
maximize	O	O:0.999759
Figure	O	O:0.875211
windows	O	O:0.998724
for	O	O:0.999826
TkAgg	O	O:0.985710
,	O	O:0.999816
QT4Agg	O	O:0.998715
,	O	O:0.999742
and	O	O:0.999905
wxAgg	O	O:0.999362
using	O	O:0.998812
the	O	O:0.999199
following	O	O:0.987669
lines	O	O:0.940715
:	O	O:0.999973
#CODE	O	O:0.999757
	
I	O	O:0.999983
want	O	O:0.999880
to	O	O:0.999920
draw	O	O:0.999961
a	O	O:0.999985
quadratic	O	O:0.990145
Figure	O	O:0.699304
.	O	O:0.999014
	
So	O	O:0.999919
I	O	O:0.999996
guess	O	O:0.999595
I	O	O:0.999993
have	O	O:0.999768
to	O	O:0.999863
built	O	O:0.999977
each	O	O:0.999034
button	O	O:0.999575
separately	O	O:0.999738
,	O	O:0.999854
and	O	O:0.999881
don't	O	O:0.999643
know	O	O:0.998813
how	O	O:0.999869
to	O	O:0.999901
"	O	O:0.999993
order	O	O:0.999563
"	O	O:0.999995
them	O	O:0.999457
in	O	O:0.999893
the	O	O:0.999827
buttons_frame	O	O:0.992285
2	O	O:0.999946
)	O	O:0.999957
I	O	O:0.999975
am	O	O:0.999948
working	O	O:0.993187
within	O	O:0.999406
a	O	O:0.999937
for	O	O:0.999894
loop	O	O:0.998075
,	O	O:0.999992
so	O	O:0.999961
I	O	O:0.999992
can't	O	O:0.999946
use	O	O:0.999888
a	O	O:0.999651
"	O	O:0.999696
main	O	O:0.986184
"	O	O:0.999969
specifically	O	O:0.992776
for	O	O:0.999909
this	O	O:0.997471
.	O	O:0.999694
and	O	O:0.999848
3	O	O:0.999783
)	O	O:0.999736
the	O	O:0.999533
Figure	O	O:0.815995
to	O	O:0.999979
plot	O	O:0.998245
is	O	O:0.999997
already	O	O:0.999105
created	O	O:0.999383
before	O	O:0.999204
entering	O	O:0.999874
the	O	O:0.998747
GUI	O	O:0.998745
.	O	O:0.999602
	
But	O	O:0.999737
I	O	O:0.999914
wonder	O	O:0.999754
if	O	O:0.999890
there	O	O:0.999350
is	O	O:0.999975
a	O	O:0.999964
way	O	O:0.999872
to	O	O:0.999921
do	O	O:0.999989
the	O	O:0.999990
same	O	O:0.999657
link	O	O:0.998297
(	O	O:0.999998
when	O	O:0.999736
zooming	O	O:0.999887
on	O	O:0.999984
figure	O	O:0.996009
1	O	O:0.999982
,	O	O:0.999987
I	O	O:0.999995
get	O	O:0.999669
the	O	O:0.999836
same	O	O:0.999891
zoom	O	O:0.986734
on	O	O:0.999996
figure	O	O:0.999196
2	O	O:0.999955
on	O	O:0.999958
one	O	O:0.999916
particular	O	O:0.999877
axis	O	O:0.999873
)	O	O:0.999961
when	O	O:0.998589
defining	O	O:0.999876
2	O	O:0.999951
different	O	O:0.998108
Figures	O	O:0.996663
(	O	O:0.999943
I	O	O:0.999992
want	O	O:0.999932
those	O	O:0.997679
graph	O	O:0.999888
to	O	O:0.999949
appear	O	O:0.998828
far	O	O:0.999938
from	O	O:0.999869
each	O	O:0.999564
other	O	O:0.999995
so	O	O:0.999970
I	O	O:0.999994
guess	O	O:0.999986
that	O	O:0.999515
I	O	O:0.999994
can't	O	O:0.999874
put	O	O:0.999923
them	O	O:0.999657
in	O	O:0.999917
the	O	O:0.999946
same	O	O:0.996327
Figure	O	O:0.972975
...	O	O:0.999639
)	O	O:0.999697
	
I	O	O:0.999943
removed	O	O:0.999820
the	O	O:0.999753
reference	O	O:0.998839
to	O	O:0.999959
Figure	O	O:0.990078
0	O	O:0.999774
and	O	O:0.999705
had	O	O:0.999801
it	O	O:0.999943
generate	O	O:0.999899
a	O	O:0.999983
new	O	O:0.999250
figure	O	O:0.994205
each	O	O:0.999612
time	O	O:0.999424
.	O	O:0.999683
	
Right	O	O:0.998047
now	O	O:0.998981
,	O	O:0.999994
that	O	O:0.999783
it	O	O:0.999955
the	O	O:0.999993
best	O	O:0.999777
I	O	O:0.999998
can	O	O:0.999943
do	O	O:0.999963
,	O	O:0.999996
see	O	O:0.999810
Figure	O	O:0.756392
.	O	O:0.999555
	
Sounds	O	O:0.999840
like	O	O:0.999317
you	O	O:0.999914
just	O	O:0.999678
want	O	O:0.999914
an	O	O:0.999863
image	O	O:0.999880
in	O	O:0.999922
the	O	O:0.999633
Figure	O	O:0.742072
,	O	O:0.999966
right	O	O:0.999660
?	O	O:0.999974
	
You	O	O:0.999584
should	O	O:0.999339
perhaps	O	O:0.999567
try	O	O:0.999993
some	O	O:0.999632
converter	O	O:0.999988
that	O	O:0.999922
can	O	O:0.999957
produce	O	O:0.999747
DXF	O	O:0.999977
from	O	O:0.999316
EPS	O	O:0.999652
,	O	O:0.999989
PDF	O	O:0.999739
,	O	O:0.999716
SVG	O	O:0.999676
...	O	O:0.991781
	
For	O	O:0.999899
example	O	O:0.996678
see	O	O:0.999983
this	O	O:0.999804
converter	O	O:0.999497
in	O	O:0.999936
java	O	O:0.991370
:	O	O:0.999938
	
You	O	O:0.999774
already	O	O:0.999758
have	O	O:0.998622
one	O	O:0.999968
such	O	O:0.999855
converter	O	O:0.999778
in	O	O:0.999988
your	O	O:0.996861
`	O	O:0.999909
np.loadtxt	B-API	B-API:0.994641
`	O	O:0.999700
method	O	O:0.998871
call	O	O:0.978375
.	O	O:0.999774
	
You	O	O:0.999874
can	O	O:0.998783
achieve	O	O:0.999930
this	O	O:0.999937
by	O	O:0.999984
defining	O	O:0.999909
a	O	O:0.999822
converter	O	O:0.999683
that	O	O:0.999742
converts	O	O:0.999896
sting	O	O:0.999679
representations	O	O:0.999749
of	O	O:0.999991
dates	O	O:0.998461
to	O	O:0.999967
`	O	O:0.999998
datenums	O	O:0.994711
`	O	O:0.999966
.	O	O:0.999054
	
Matplotlib	O	O:0.997850
Plot	O	O:0.997523
Lines	O	O:0.999188
Above	O	O:0.999497
Each	O	O:0.999449
Bar	O	O:0.999161
	
Matplotlib.pyplot	B-API	O:0.984467
Bar	O	O:0.999551
Plot	O	O:0.997157
Grouping	O	O:0.990943
Subplots	O	O:0.996536
	
How	O	O:0.999837
to	O	O:0.999939
properly	O	O:0.999969
give	O	O:0.999444
Annotations	O	O:0.999897
to	O	O:0.999960
Pandas	O	O:0.999957
Bar	O	O:0.999831
Charts	O	O:0.999397
?	O	O:0.999919
	
Pandas	O	O:0.999224
,	O	O:0.999939
Bar	O	O:0.999684
Chart	O	O:0.998949
Settings	O	O:0.997989
Customization	O	O:0.998460
	
Two	O	O:0.999455
Bar	O	O:0.999865
Plots-	O	O:0.994476
Non	O	O:0.999137
side	O	O:0.999852
by	O	O:0.999971
side	O	O:0.999283
	
I	O	O:0.999993
have	O	O:0.999918
a	O	O:0.999987
couple	O	O:0.999515
of	O	O:0.999970
problems	O	O:0.999224
with	O	O:0.999932
the	O	O:0.999631
Bar	O	O:0.999507
Chart	O	O:0.999916
that	O	O:0.998986
I'm	O	O:0.999988
trying	O	O:0.999848
to	O	O:0.999692
create	O	O:0.999810
in	O	O:0.999956
python	O	O:0.997807
.	O	O:0.999829
	
I	O	O:0.999993
have	O	O:0.999927
a	O	O:0.999960
simple	O	O:0.998284
graph	O	O:0.999795
with	O	O:0.999887
a	O	O:0.999238
Navigation	O	O:0.999417
Tool	O	O:0.997812
Bar	O	O:0.999460
.	O	O:0.998774
	
Matplotlib	O	O:0.998187
Subplot	O	O:0.998679
Animation	O	O:0.999790
with	O	O:0.999434
Basemap	O	O:0.969146
	
Basic	O	O:0.993709
Animation	O	O:0.999766
with	O	O:0.999474
matplotlib's	O	O:0.997717
pyplot	B-API	O:0.994513
	
How	O	O:0.999845
Can	O	O:0.999710
I	O	O:0.999930
Save	O	O:0.999717
Animation.Artist	O	O:0.905553
animation	O	O:0.999398
?	O	O:0.999912
	
Animation	O	O:0.999669
with	O	O:0.999629
contours	O	O:0.997981
matplotlib	O	O:0.999032
	
I	O	O:0.999957
found	O	O:0.999884
the	O	O:0.999167
solution	O	O:0.996431
(	O	O:0.999995
set	O	O:0.999760
2	O	O:0.999971
)	O	O:0.999989
that	O	O:0.999575
uses	O	O:0.999826
the	O	O:0.999641
mpl	O	O:0.987803
Toolkit	O	O:0.999051
and	O	O:0.999828
AA	O	O:0.999910
to	O	O:0.999878
allow	O	O:0.999982
sharing	O	O:0.999794
of	O	O:0.999918
the	O	O:0.999521
X	O	O:0.999022
Axis	O	O:0.999573
and	O	O:0.999711
present	O	O:0.999829
more	O	O:0.999698
than	O	O:0.999612
2	O	O:0.999816
scales	O	O:0.987986
.	O	O:0.999980
by	O	O:0.999974
changing	O	O:0.999643
the	O	O:0.999941
code	O	O:0.999652
to	O	O:0.999989
allow	O	O:0.999959
for	O	O:0.999978
set	O	O:0.996948
2	O	O:0.999781
is	O	O:0.999989
where	O	O:0.996208
I	O	O:0.999978
noticed	O	O:0.998686
problems	O	O:0.985550
.	O	O:0.999710
	
The	O	O:0.999947
side	O	O:0.999290
scales	O	O:0.987436
almost	O	O:0.999602
look	O	O:0.997404
good	O	O:0.995308
(	O	O:0.999975
exception	O	O:0.999379
is	O	O:0.999993
repeats	O	O:0.999231
on	O	O:0.999970
the	O	O:0.999946
right	O	O:0.997983
)	O	O:0.999919
and	O	O:0.999598
I	O	O:0.999990
CANNOT	O	O:0.999035
CHANGE	O	O:0.986886
FONT	O	O:0.999816
size	O	O:0.999878
of	O	O:0.999935
the	O	O:0.999569
X-Axis	O	O:0.999438
labels	O	O:0.997553
and	O	O:0.999766
Y	O	O:0.999380
Axis	O	O:0.999056
labels	O	O:0.992217
.	O	O:0.999294
	
Reverse	O	O:0.985608
Z	O	O:0.999416
Axis	O	O:0.999816
on	O	O:0.999943
matplotlib	O	O:0.997870
3D	O	O:0.999916
Plot	O	O:0.992406
	
You	O	O:0.999957
have	O	O:0.999678
an	O	O:0.999989
example	O	O:0.999865
of	O	O:0.999971
the	O	O:0.999840
broken	O	O:0.999444
axis	O	O:0.999911
in	O	O:0.999923
the	O	O:0.999965
matplotlib	O	O:0.997398
examples	O	O:0.996984
:	O	O:0.999988
Broken	O	O:0.999766
Axis	O	O:0.999709
	
Axis	O	O:0.999614
scale	O	O:0.995116
with	O	O:0.999841
bins	O	O:0.991691
	
Converting	O	O:0.991908
Integer	O	O:0.997099
(	O	O:0.999976
Day	O	O:0.998684
Count	O	O:0.999270
)	O	O:0.999616
X	O	O:0.999514
Axis	O	O:0.999952
to	O	O:0.999715
Months	O	O:0.998667
	
3d	O	O:0.999184
Polygon	O	O:0.710904
Plot	O	O:0.998858
in	O	O:0.999916
matplotlib	O	O:0.999308
baselines	O	O:0.999189
slanted	O	O:0.997714
	
I	O	O:0.999939
am	O	O:0.999986
trying	O	O:0.999241
to	O	O:0.999922
create	O	O:0.999971
my	O	O:0.999989
own	O	O:0.999985
version	O	O:0.999800
of	O	O:0.999983
the	O	O:0.999505
3D	O	O:0.999785
Polygon	O	O:0.959902
plot	O	O:0.998881
as	O	O:0.999997
shown	O	O:0.999418
on	O	O:0.999971
the	O	O:0.999891
Matplotlib	O	O:0.999253
web	O	O:0.999915
site	O	O:0.998798
:	O	O:0.999984
	
I'm	O	O:0.999830
trying	O	O:0.999391
to	O	O:0.999975
make	O	O:0.999948
a	O	O:0.999993
polar	O	O:0.994015
chart	O	O:0.998867
with	O	O:0.999413
matplotlib	O	O:0.990837
and	O	O:0.999753
python	O	O:0.992919
2.7	O	O:0.991553
,	O	O:0.999836
but	O	O:0.999560
I'm	O	O:0.999921
struggling	O	O:0.998752
on	O	O:0.999936
how	O	O:0.999936
to	O	O:0.999978
increase	O	O:0.999976
the	O	O:0.999975
space	O	O:0.995337
between	O	O:0.999218
the	O	O:0.999959
X-Axis	O	O:0.998605
and	O	O:0.999775
the	O	O:0.999843
Tick	O	O:0.998960
Labels	O	O:0.999565
for	O	O:0.999980
that	O	O:0.999843
same	O	O:0.999867
axis	O	O:0.999706
.	O	O:0.999893
	
Tick	O	O:0.998950
labels	O	O:0.998936
on	O	O:0.999938
x-axis	O	O:0.999735
aren't	O	O:0.999767
symmetric	O	O:0.994790
(	O	O:0.999978
Matplotlib	O	O:0.999305
)	O	O:0.999547
	
Tick	O	O:0.999372
label	O	O:0.985438
displayed	O	O:0.999854
when	O	O:0.998725
clicking	O	O:0.999790
on	O	O:0.999968
graph	O	O:0.999251
?	O	O:0.999975
	
Axes	O	O:0.854940
missing	O	O:0.999292
when	O	O:0.998288
plotting	O	O:0.999288
in	O	O:0.999969
matplotlib	O	O:0.999564
using	O	O:0.999910
vispy	O	O:0.994934
as	O	O:0.999370
backend	O	O:0.974411
	
In	O	O:0.999905
theory	O	O:0.997359
,	O	O:0.999991
this	O	O:0.999894
code	O	O:0.999670
doesn't	O	O:0.999869
change	O	O:0.999099
any	O	O:0.999049
coordinates	O	O:0.923713
;	O	O:0.999978
it	O	O:0.999943
just	O	O:0.999923
gets	O	O:0.999912
the	O	O:0.999988
coordinates	O	O:0.991413
of	O	O:0.999990
each	O	O:0.999392
label	O	O:0.992419
,	O	O:0.999993
maps	O	O:0.998752
it	O	O:0.999959
to	O	O:0.999984
Axes	O	O:0.997806
coordinates	O	O:0.997004
using	O	O:0.999871
the	O	O:0.998587
Text	O	B-API:0.764626
object's	O	O:0.995832
internally-stored	O	O:0.999004
transform	O	O:0.787259
,	O	O:0.999889
and	O	O:0.999971
then	O	O:0.999761
sets	O	O:0.999907
the	O	O:0.999922
position	O	O:0.995021
.	O	O:0.999813
	
@USER	O	O:0.998810
I	O	O:0.999985
think	O	O:0.999752
he	O	O:0.999948
wants	O	O:0.999727
to	O	O:0.999967
get	O	O:0.999967
the	O	O:0.999989
tick	O	O:0.995453
positions	O	O:0.996863
in	O	O:0.999980
Axes	O	O:0.961729
coordinates	O	O:0.964089
.	O	O:0.999779
	
Axes	O	O:0.748675
fonts	O	O:0.999259
with	O	O:0.999686
text.usetex	O	O:0.744029
'	O	O:0.999981
true	O	O:0.999681
'	O	O:0.999987
does	O	O:0.999563
not	O	O:0.999864
use	O	O:0.999897
set	O	O:0.997512
font	O	O:0.997076
	
Also	O	O:0.999198
,	O	O:0.999992
when	O	O:0.999487
specifying	O	O:0.999945
where	O	O:0.999685
you	O	O:0.999928
want	O	O:0.999834
the	O	O:0.999926
subplot	O	O:0.999839
to	O	O:0.999988
be	O	O:0.999995
placed	O	O:0.997720
(	O	O:0.999958
the	O	O:0.999795
third	O	O:0.999053
input	O	O:0.999920
to	O	O:0.999930
`	O	O:0.999993
Figure.add_subplot()	B-API	B-API:0.997689
`)	O	O:0.999768
,	O	O:0.999981
you	O	O:0.999944
do	O	O:0.999889
not	O	O:0.999973
want	O	O:0.999938
to	O	O:0.999962
use	O	O:0.999980
`	O	O:0.999882
y+1	O	O:0.972167
`	O	O:0.999963
because	O	O:0.999265
that	O	O:0.999707
would	O	O:0.999949
start	O	O:0.999681
at	O	O:0.999981
`	O	O:0.999911
1	O	O:0.997582
`	O	O:0.999932
and	O	O:0.999574
end	O	O:0.999742
at	O	O:0.999655
`	O	O:0.999891
6	O	O:0.998132
`	O	O:0.999935
which	O	O:0.994386
would	O	O:0.999932
go	O	O:0.999973
out	O	O:0.999991
of	O	O:0.999937
the	O	O:0.999859
available	O	O:0.999927
range	O	O:0.999586
of	O	O:0.999721
0-5	O	O:0.993275
.	O	O:0.999536
	
While	O	O:0.998280
it	O	O:0.999899
might	O	O:0.999680
be	O	O:0.999993
possible	O	O:0.999482
to	O	O:0.999984
hack	O	O:0.999414
`	O	O:0.999949
JointGrid	O	B-API:0.659129
`	O	O:0.999983
to	O	O:0.999332
get	O	O:0.999998
this	O	O:0.999897
to	O	O:0.999968
work	O	O:0.999781
,	O	O:0.999986
I	O	O:0.999992
suspect	O	O:0.999299
it	O	O:0.999790
will	O	O:0.999815
very	O	O:0.999845
likely	O	O:0.999739
be	O	O:0.999966
easier	O	O:0.999506
to	O	O:0.999972
just	O	O:0.999915
use	O	O:0.999614
`	O	O:0.999585
kdeplot	O	B-API:0.956545
`	O	O:0.999966
on	O	O:0.999737
one	O	O:0.999962
Axes	O	O:0.949208
,	O	O:0.999995
using	O	O:0.998754
`	O	O:0.999036
twinx	B-API	B-API:0.996635
`	O	O:0.999900
and	O	O:0.996725
`	O	O:0.999987
twiny	B-API	B-API:0.945815
to	O	O:0.999983
place	O	O:0.999138
and	O	O:0.999974
scale	O	O:0.993686
the	O	O:0.999906
marginal	O	O:0.997691
plots	O	O:0.998908
properly	O	O:0.999115
.	O	O:0.999844
	
I	O	O:0.999980
want	O	O:0.999841
to	O	O:0.999712
transform	O	O:0.991898
those	O	O:0.999685
intensity	O	O:0.999903
values	O	O:0.998716
to	O	O:0.999927
pixel	O	O:0.999854
intensity	O	O:0.999978
values	O	O:0.999528
as	O	O:0.999948
in	O	O:0.999935
the	O	O:0.999868
following	O	O:0.997319
image	O	O:0.993592
:	O	O:0.999950
	
The	O	O:0.999730
longer	O	O:0.999388
the	O	O:0.999898
time	O	O:0.998522
period	O	O:0.999529
becomes	O	O:0.999715
,	O	O:0.999999
the	O	O:0.999919
sharper	O	O:0.998436
the	O	O:0.999903
peaks	O	O:0.998882
will	O	O:0.999525
become	O	O:0.998998
(	O	O:0.999993
the	O	O:0.999859
Fourier	O	O:0.999939
transform	O	O:0.907207
of	O	O:0.999977
the	O	O:0.999811
cosines	O	O:0.852696
):	O	O:0.999957
#CODE	O	O:0.999398
	
How	O	O:0.999832
to	O	O:0.999968
transform	O	O:0.998138
your	O	O:0.999844
data	O	O:0.999812
into	O	O:0.999963
this	O	O:0.999977
format	O	O:0.998837
is	O	O:0.999984
a	O	O:0.999921
simple	O	O:0.996687
question	O	O:0.999230
,	O	O:0.999996
maybe	O	O:0.999625
a	O	O:0.999913
bit	O	O:0.998508
googling	O	O:0.987218
and	O	O:0.999126
trial	O	O:0.992973
and	O	O:0.999466
error	O	O:0.996016
.	O	O:0.997792
	
Perhaps	O	O:0.999311
it	O	O:0.999197
is	O	O:0.999994
best	O	O:0.999554
to	O	O:0.999994
transform	O	O:0.969830
to	O	O:0.999895
linear	O	O:0.999873
coordinates	O	O:0.986503
and	O	O:0.999906
calculate	O	O:0.999699
how	O	O:0.999922
to	O	O:0.999981
produce	O	O:0.999803
the	O	O:0.999879
curved	O	O:0.999428
grid	O	O:0.998523
for	O	O:0.999974
the	O	O:0.999848
declination	O	O:0.985925
and	O	O:0.999818
the	O	O:0.999921
radial	O	O:0.995509
lines	O	O:0.998173
for	O	O:0.999958
the	O	O:0.999942
right	O	O:0.995198
ascension	O	O:0.999425
.	O	O:0.999763
	
Since	O	O:0.999799
my	O	O:0.999965
data	O	O:0.999767
is	O	O:0.999988
roughly	O	O:0.999812
spherical	O	O:0.997985
I	O	O:0.999991
triangulate	O	O:0.999817
the	O	O:0.999121
azimuth	O	O:0.996410
and	O	O:0.999783
zenith	O	O:0.999388
angles	O	O:0.992348
from	O	O:0.999397
the	O	O:0.999921
spherical	O	O:0.998886
coordinate	O	O:0.999978
transform	O	O:0.987577
of	O	O:0.999996
my	O	O:0.999929
data	O	O:0.999818
points	O	O:0.995535
.	O	O:0.999760
	
A	O	O:0.997486
workaround	O	O:0.999740
might	O	O:0.999430
be	O	O:0.999992
to	O	O:0.999936
log10	B-API	O:0.999915
transform	O	O:0.907302
the	O	O:0.999945
data	O	O:0.999355
before	O	O:0.999633
plotting	O	O:0.997987
,	O	O:0.999940
but	O	O:0.999965
the	O	O:0.999962
approaches	O	O:0.990446
I	O	O:0.999989
have	O	O:0.999894
tried	O	O:0.997487
,	O	O:0.999935
#CODE	O	O:0.998710
	
Without	O	O:0.999028
having	O	O:0.997978
to	O	O:0.999830
transform	O	O:0.993341
everything	O	O:0.999714
to	O	O:0.999932
string	O	O:0.999964
or	O	O:0.999771
another	O	O:0.999841
kind	O	O:0.999711
of	O	O:0.999666
object	O	O:0.997921
?	O	O:0.999957
	
However	O	O:0.999293
,	O	O:0.999985
the	O	O:0.999963
dates	O	O:0.995493
mysteriously	O	O:0.999640
transform	O	O:0.984901
themselves	O	O:0.999888
to	O	O:0.999885
an	O	O:0.999996
ugly	O	O:0.998082
and	O	O:0.999939
unreadable	O	O:0.999578
format	O	O:0.999368
when	O	O:0.999290
plotting	O	O:0.999349
the	O	O:0.999988
same	O	O:0.999958
data	O	O:0.999982
as	O	O:0.999999
a	O	O:0.999979
bar	O	O:0.999717
plot	O	O:0.956480
.	O	O:0.999378
	
I	O	O:0.999980
want	O	O:0.999862
to	O	O:0.999560
find	O	O:0.999959
out	O	O:0.999937
how	O	O:0.999789
to	O	O:0.999977
transform	O	O:0.993246
magnitude	O	O:0.999950
value	O	O:0.999941
of	O	O:0.999970
accelerometer	O	O:0.998564
to	O	O:0.999968
frequency	O	O:0.999905
domain	O	O:0.989655
.	O	O:0.999668
	
Then	O	O:0.997409
,	O	O:0.999994
you	O	O:0.999986
need	O	O:0.999773
to	O	O:0.999985
set	O	O:0.999979
the	O	O:0.999990
transform	O	O:0.776604
for	O	O:0.999946
the	O	O:0.999883
new	O	O:0.999516
lines	O	O:0.998589
on	O	O:0.999955
`	O	O:0.999965
a_all	O	B-API:0.974444
`	O	O:0.999959
to	O	O:0.999902
move	O	O:0.999999
them	O	O:0.999939
to	O	O:0.999987
the	O	O:0.999986
new	O	O:0.999472
axis	O	O:0.999483
.	O	O:0.999863
	
What	O	O:0.999644
about	O	O:0.999893
applying	O	O:0.999176
a	O	O:0.999464
rectangular	O	O:0.989934
(	O	O:0.999935
ok	O	O:0.999882
,	O	O:0.999971
in	O	O:0.999992
three	O	O:0.999271
dimensions	O	O:0.997252
,	O	O:0.999991
cubic	O	O:0.998034
)	O	O:0.999335
window	O	O:0.998196
to	O	O:0.999995
your	O	O:0.999848
field	O	O:0.999119
before	O	O:0.999123
fourier	O	O:0.999659
transform	O	O:0.534259
?	O	O:0.999902
	
The	O	O:0.999797
canvas	O	O:0.999297
seems	O	O:0.999855
to	O	O:0.999936
get	O	O:0.999870
locked	O	O:0.999779
and	O	O:0.999629
after	O	O:0.999653
the	O	O:0.999949
call	O	O:0.944117
of	O	O:0.999982
the	O	O:0.999815
pick	O	O:0.999122
event	O	O:0.999409
I	O	O:0.999996
can	O	O:0.999977
not	O	O:0.999783
use	O	O:0.999974
the	O	O:0.999830
other	O	O:0.999186
functionalities	O	O:0.999412
as	O	O:0.999973
well	O	O:0.998275
.	O	O:0.999706
	
When	O	O:0.997180
it	O	O:0.999770
is	O	O:0.999975
triggered	O	O:0.999750
it	O	O:0.999961
seems	O	O:0.999954
that	O	O:0.999896
the	O	O:0.999922
canvas	O	O:0.998833
gets	O	O:0.999398
locked	O	O:0.999819
and	O	O:0.999965
I	O	O:0.999914
can	O	O:0.999756
not	O	O:0.999726
use	O	O:0.999975
any	O	O:0.999525
other	O	O:0.998777
functionality	O	O:0.997197
.	O	O:0.999224
	
I	O	O:0.999938
am	O	O:0.999980
trying	O	O:0.997923
to	O	O:0.999975
draw	O	O:0.999863
an	O	O:0.999983
arrow	O	O:0.999836
on	O	O:0.999963
the	O	O:0.999848
scatterplot	O	O:0.995747
.	O	O:0.999664
	
Are	O	O:0.999792
these	O	O:0.999559
parametric	O	O:0.991776
orbits	O	O:0.999564
,	O	O:0.999985
so	O	O:0.999996
that	O	O:0.999875
you	O	O:0.999969
could	O	O:0.999886
draw	O	O:0.999895
vertical	O	O:0.999292
lines	O	O:0.999038
for	O	O:0.999963
each	O	O:0.999463
time	O	O:0.999376
(	O	O:0.999990
or	O	O:0.999969
whatever	O	O:0.999818
)	O	O:0.999843
_t_	O	O:0.993496
?	O	O:0.999965
	
I've	O	O:0.993368
follow	O	O:0.999730
this	O	O:0.999177
subject	O	O:0.994582
:	O	O:0.999979
How	O	O:0.999964
to	O	O:0.999990
draw	O	O:0.999897
planes	O	O:0.999784
from	O	O:0.999934
a	O	O:0.999994
set	O	O:0.999742
of	O	O:0.999942
linear	O	O:0.996159
equations	O	O:0.999258
in	O	O:0.999575
Python	O	O:0.999359
?	O	O:0.999964
	
I	O	O:0.999964
am	O	O:0.999998
able	O	O:0.999508
to	O	O:0.999988
draw	O	O:0.999943
with	O	O:0.999952
all	O	O:0.999864
variables	O	O:0.999724
at	O	O:0.999793
x-axis	O	O:0.999899
if	O	O:0.999864
convert	O	O:0.998855
it	O	O:0.999958
to	O	O:0.999958
bar	O	O:0.999972
graph	O	O:0.998105
.	O	O:0.999495
	
But	O	O:0.999695
in	O	O:0.999944
my	O	O:0.999850
particular	O	O:0.999880
case	O	O:0.999031
I	O	O:0.999999
have	O	O:0.999900
to	O	O:0.999955
draw	O	O:0.999770
Line2D	B-API	O:0.855602
instances	O	O:0.997577
using	O	O:0.999466
Points	O	O:0.999528
coordinates	O	O:0.971561
on	O	O:0.999991
top	O	O:0.999319
of	O	O:0.999992
the	O	O:0.999762
regular	O	O:0.998991
plots	O	O:0.999698
that	O	O:0.999792
are	O	O:0.999979
all	O	O:0.999579
using	O	O:0.999494
Data	O	O:0.985447
coordinates	O	O:0.787109
.	O	O:0.999561
	
I'm	O	O:0.999865
using	O	O:0.999333
imshow()	B-API	B-API:0.989040
to	O	O:0.999862
draw	O	O:0.999905
a	O	O:0.999976
2D	O	O:0.999963
numpy	O	O:0.997380
array	O	O:0.999514
,	O	O:0.999987
so	O	O:0.999939
for	O	O:0.999897
example	O	O:0.991144
:	O	O:0.999953
#CODE	O	O:0.999705
	
I	O	O:0.999987
need	O	O:0.999738
to	O	O:0.999950
draw	O	O:0.999980
all	O	O:0.999182
function	O	O:0.999719
in	O	O:0.999861
the	O	O:0.999962
same	O	O:0.983065
window	O	O:0.998290
	
I	O	O:0.999983
want	O	O:0.999880
to	O	O:0.999920
draw	O	O:0.999957
a	O	O:0.999990
small	O	O:0.991895
red	O	O:0.999750
box	O	O:0.997896
around	O	O:0.999886
one	O	O:0.999843
of	O	O:0.999899
the	O	O:0.999860
ticklabels	O	O:0.999467
,	O	O:0.999995
as	O	O:0.999972
so	O	O:0.999691
:	O	O:0.999978
	
I	O	O:0.999988
draw	O	O:0.998200
4D	O	O:0.999920
plot	O	O:0.959705
.	O	O:0.999798
	
I'd	O	O:0.999957
like	O	O:0.999648
to	O	O:0.999963
draw	O	O:0.998791
/	O	O:0.999988
plot	O	O:0.968865
an	O	O:0.999963
horizontal	O	O:0.999655
line	O	O:0.999862
on	O	O:0.999995
top	O	O:0.999329
of	O	O:0.999989
the	O	O:0.999344
heatmap	O	O:0.993164
like	O	O:0.998673
in	O	O:0.999994
this	O	O:0.999596
figure	O	O:0.983396
	
How	O	O:0.999940
do	O	O:0.999843
I	O	O:0.999996
draw	O	O:0.999819
edge	O	O:0.999323
labels	O	O:0.999190
for	O	O:0.999818
MultiGraph	O	O:0.996544
in	O	O:0.999444
NetworkX	O	O:0.998478
?	O	O:0.999906
	
How	O	O:0.999846
to	O	O:0.999987
draw	O	O:0.999938
a	O	O:0.999981
contour	O	O:0.999090
plot	O	O:0.995556
using	O	O:0.999441
Python	O	O:0.993865
?	O	O:0.999801
	
I	O	O:0.999979
tried	O	O:0.999861
to	O	O:0.999931
draw	O	O:0.999897
a	O	O:0.999979
contour	O	O:0.998946
plot	O	O:0.995251
using	O	O:0.999322
Python	O	O:0.987566
.	O	O:0.998454
	
The	O	O:0.999487
second	O	O:0.996319
option	O	O:0.999120
is	O	O:0.999989
a	O	O:0.999912
touch	O	O:0.997090
more	O	O:0.998935
verbose	O	O:0.990776
,	O	O:0.999970
but	O	O:0.999928
has	O	O:0.999945
the	O	O:0.999837
advantage	O	O:0.999785
that	O	O:0.999314
the	O	O:0.999944
y-axis	O	O:0.999892
limits	O	O:0.998961
on	O	O:0.999984
the	O	O:0.999735
second	O	O:0.999473
plot	O	O:0.996884
will	O	O:0.999920
autoscale	O	O:0.966314
as	O	O:0.999923
you'd	O	O:0.998922
expect	O	O:0.997278
.	O	O:0.999696
	
I	O	O:0.999929
included	O	O:0.999897
the	O	O:0.999947
code	O	O:0.999601
to	O	O:0.999992
autoscale	O	O:0.992027
the	O	O:0.999919
viewport	O	O:0.980870
,	O	O:0.999961
but	O	O:0.999778
that's	O	O:0.999893
not	O	O:0.999419
strictly	O	O:0.999860
necessary	O	O:0.998928
.	O	O:0.999559
	
possible	O	O:0.999635
duplicate	O	O:0.999383
of	O	O:0.999944
[	O	O:0.999966
How	O	O:0.999983
to	O	O:0.999982
autoscale	O	O:0.988827
y	O	O:0.999867
axis	O	O:0.999807
in	O	O:0.999969
matplotlib	O	O:0.999520
?	O	O:0.999976
]	O	O:0.999546
(	O	O:0.999907
#URL	O	O:0.999656
)	O	O:0.999459
	
if	O	O:0.999808
the	O	O:0.999926
image	O	O:0.997788
is	O	O:0.999988
a	O	O:0.999951
NxM	O	O:0.999958
array	O	O:0.999522
of	O	O:0.999676
any	O	O:0.999369
type	O	O:0.999010
,	O	O:0.999980
it	O	O:0.999686
is	O	O:0.999958
interpreted	O	O:0.999772
through	O	O:0.999783
the	O	O:0.999771
colormap	O	O:0.952161
(	O	O:0.999993
autoscale	O	O:0.917871
,	O	O:0.999981
if	O	O:0.999878
not	O	O:0.999290
indicated	O	O:0.999885
otherwise	O	O:0.999545
)	O	O:0.999539
.	O	O:0.998980
	
Now	O	O:0.999782
I	O	O:0.999958
changed	O	O:0.999457
my	O	O:0.999065
mind	O	O:0.996198
and	O	O:0.999954
decide	O	O:0.999591
to	O	O:0.999930
autoscale	O	O:0.980546
the	O	O:0.999959
data	O	O:0.997900
(	O	O:0.999958
and	O	O:0.999964
the	O	O:0.999986
view	O	O:0.885617
)	O	O:0.999872
,	O	O:0.999969
expecting	O	O:0.999947
these	O	O:0.993154
limits	O	O:0.992088
:	O	O:0.999930
	
I	O	O:0.999720
would	O	O:0.999962
like	O	O:0.999454
to	O	O:0.999985
be	O	O:0.999999
able	O	O:0.999909
to	O	O:0.999982
autoscale	O	O:0.990308
a	O	O:0.999984
matplotlib	O	O:0.998393
figure	O	O:0.992648
to	O	O:0.999978
make	O	O:0.999859
arbitrarily	O	O:0.999243
placed	O	O:0.999561
text	O	O:0.998155
annotations	O	O:0.999397
visible	O	O:0.996439
.	O	O:0.999410
	
I	O	O:0.999994
have	O	O:0.999909
to	O	O:0.999902
refresh	O	O:0.999933
the	O	O:0.999994
page	O	O:0.999349
to	O	O:0.999981
get	O	O:0.999988
the	O	O:0.999974
tooltips	O	O:0.999309
back	O	O:0.998964
.	O	O:0.999886
	
will	O	O:0.995832
refresh	O	O:0.999865
your	O	O:0.999717
system's	O	O:0.999968
reference	O	O:0.999760
to	O	O:0.999961
the	O	O:0.999987
bash_profile	O	O:0.991279
and	O	O:0.999925
you	O	O:0.999783
should	O	O:0.999362
be	O	O:0.999991
good	O	O:0.999824
to	O	O:0.999925
go	O	O:0.999902
in	O	O:0.999936
importing	O	O:0.998849
and	O	O:0.999620
using	O	O:0.999070
matplotlib	O	O:0.885587
	
Id	O	O:0.999861
like	O	O:0.999756
the	O	O:0.999973
user	O	O:0.999414
to	O	O:0.999898
be	O	O:0.999999
able	O	O:0.999931
to	O	O:0.999918
update	O	O:0.998886
an	O	O:0.999906
existing	O	O:0.996974
and	O	O:0.999868
open	O	O:0.991650
axis	O	O:0.999892
i.e.	O	O:0.999648
to	O	O:0.999891
refresh	O	O:0.999874
the	O	O:0.999945
axis	O	O:0.999165
.	O	O:0.999755
	
Placing	O	O:0.998385
Custom	O	O:0.998644
Images	O	O:0.999704
in	O	O:0.999967
a	O	O:0.999948
Plot	O	O:0.989109
Window	O	O:0.995677
--	O	O:0.999982
as	O	O:0.999888
custom	O	O:0.999553
data	O	O:0.999937
markers	O	O:0.999585
or	O	O:0.999989
to	O	O:0.999937
annotate	O	O:0.999074
those	O	O:0.999558
markers	O	O:0.995639
	
How	O	O:0.999892
to	O	O:0.999940
annotate	O	O:0.989950
/	O	O:0.999950
highlight	O	O:0.999596
a	O	O:0.999961
3d	O	O:0.999920
plot	O	O:0.963586
in	O	O:0.999938
MatPlotLib	O	O:0.998193
	
Well	O	O:0.995694
,	O	O:0.999967
it	O	O:0.999983
takes	O	O:0.999726
a	O	O:0.999997
loop	O	O:0.999617
to	O	O:0.999972
annotate	O	O:0.994952
all	O	O:0.999901
data	O	O:0.999890
points	O	O:0.998875
,	O	O:0.999989
I	O	O:0.999989
thought	O	O:0.999901
that	O	O:0.999619
there	O	O:0.999029
should	O	O:0.999838
be	O	O:0.999992
a	O	O:0.999798
function	O	O:0.999427
that	O	O:0.999864
does	O	O:0.999749
just	O	O:0.999839
that	O	O:0.999640
.	O	O:0.999817
	
You	O	O:0.999925
can	O	O:0.999861
annotate	O	O:0.995780
a	O	O:0.999993
specific	O	O:0.998949
point	O	O:0.999288
in	O	O:0.999929
the	O	O:0.999899
image	O	O:0.999695
using	O	O:0.998533
`	O	O:0.998906
plt.text	B-API	B-API:0.978438
(	O	O:0.999976
x	O	O:0.999444
,	O	O:0.999996
y	O	O:0.999936
,	O	O:0.999987
str	O	O:0.998972
)`	O	O:0.999430
.	O	O:0.999106
	
To	O	O:0.999951
state	O	O:0.992492
it	O	O:0.999977
in	O	O:0.999981
a	O	O:0.999971
general	O	O:0.996449
form	O	O:0.999554
,	O	O:0.999981
I'm	O	O:0.999956
looking	O	O:0.999568
for	O	O:0.999914
a	O	O:0.999941
way	O	O:0.999012
to	O	O:0.999888
join	O	O:0.796578
several	O	O:0.998604
points	O	O:0.999774
with	O	O:0.999911
a	O	O:0.999963
gradient	O	O:0.999636
color	O	O:0.999900
line	O	O:0.999566
using	O	O:0.999624
matplotlib	O	O:0.966371
,	O	O:0.999407
and	O	O:0.999136
I'm	O	O:0.999598
not	O	O:0.998587
finding	O	O:0.999490
it	O	O:0.999830
anywhere	O	O:0.999285
.	O	O:0.999664
	
Now	O	O:0.999806
instead	O	O:0.999448
of	O	O:0.999899
straight	O	O:0.998517
arrows	O	O:0.999803
,	O	O:0.999950
I	O	O:0.999994
want	O	O:0.999755
to	O	O:0.999782
join	O	O:0.854923
points	O	O:0.999685
by	O	O:0.999983
curve	O	O:0.998811
arrows	O	O:0.998602
.	O	O:0.999513
	
If	O	O:0.999909
you	O	O:0.999910
like	O	O:0.999471
,	O	O:0.999997
join	O	B-API:0.754909
circos's	O	O:0.999051
google	O	O:0.997206
group	O	O:0.999283
to	O	O:0.999927
discuss	O	O:0.999032
:	O	O:0.999983
#URL	O	O:0.999554
	
Then	O	O:0.999193
join	O	O:0.717640
me	O	O:0.999966
in	O	O:0.999877
upvoting	O	O:0.999932
that	O	O:0.997314
answer	O	O:0.999288
and	O	O:0.999911
that	O	O:0.997361
comment	O	O:0.997131
:-)	O	O:0.999571
	
Because	O	O:0.999530
there	O	O:0.999407
have	O	O:0.999692
been	O	O:0.997639
closest	O	O:0.998750
points	O	O:0.997834
but	O	O:0.999953
when	O	O:0.998733
we	O	O:0.999978
join	O	O:0.877890
them	O	O:0.999979
they	O	O:0.999898
lead	O	O:0.999548
to	O	O:0.999898
an	O	O:0.999978
intersections	O	O:0.995485
or	O	O:0.999968
points	O	O:0.994367
which	O	O:0.999500
are	O	O:0.999882
not	O	O:0.999818
so	O	O:0.999923
close	O	O:0.996393
but	O	O:0.999881
should	O	O:0.999725
be	O	O:0.999914
joined	O	O:0.998294
together	O	O:0.998255
	
@USER	O	O:0.998771
Because	O	O:0.999414
Python	O	O:0.999616
automatically	O	O:0.999895
join	O	B-API:0.696839
two	O	O:0.999876
adjacent	O	O:0.999433
strings	O	O:0.999365
into	O	O:0.999763
one	O	O:0.999944
string	O	O:0.986320
.	O	O:0.999261
	
This	O	O:0.999890
produces	O	O:0.999812
a	O	O:0.999972
figure	O	O:0.997417
like	O	O:0.999586
the	O	O:0.999952
first	O	O:0.997688
figure	O	O:0.998163
at	O	O:0.999924
How	O	O:0.999939
to	O	O:0.999960
join	O	O:0.857224
overlapping	O	O:0.999004
circles	O	O:0.992825
?	O	O:0.999982
	
Matplotlib	O	O:0.998885
has	O	O:0.999977
lots	O	O:0.999806
of	O	O:0.999948
pre-defined	O	O:0.999254
colormaps	O	O:0.999726
for	O	O:0.999977
you	O	O:0.999888
to	O	O:0.999869
use	O	O:0.999930
.	O	O:0.998848
	
Here	O	O:0.999431
are	O	O:0.999955
all	O	O:0.999759
of	O	O:0.999925
the	O	O:0.999520
predefined	O	O:0.998316
colormaps	O	O:0.998627
.	O	O:0.999856
	
For	O	O:0.999904
me	O	O:0.999899
the	O	O:0.999844
simplest	O	O:0.999620
way	O	O:0.999808
is	O	O:0.999993
plotting	O	O:0.999801
directly	O	O:0.999630
the	O	O:0.999919
masks	O	O:0.994954
with	O	O:0.998921
imshow	B-API	B-API:0.648339
,	O	O:0.999993
passing	O	O:0.999131
different	O	O:0.998297
colormaps	O	O:0.998787
.	O	O:0.999828
	
There	O	O:0.998777
is	O	O:0.999939
a	O	O:0.999991
list	O	O:0.996499
of	O	O:0.999974
colormaps	O	O:0.998051
to	O	O:0.999981
choose	O	O:0.999947
from	O	O:0.999851
here	O	O:0.998671
.	O	O:0.999962
	
There	O	O:0.994821
is	O	O:0.999991
also	O	O:0.999782
a	O	O:0.999995
way	O	O:0.998833
to	O	O:0.999856
define	O	O:0.999839
custom	O	O:0.997887
colormaps	O	O:0.999022
.	O	O:0.999868
	
The	O	O:0.999975
list	O	O:0.996370
of	O	O:0.999973
available	O	O:0.997958
colormaps	O	O:0.999837
by	O	O:0.999960
default	O	O:0.996801
is	O	O:0.999983
here	O	O:0.997604
.	O	O:0.999820
	
You	O	O:0.999871
can	O	O:0.999452
add	O	O:0.999993
your	O	O:0.999761
own	O	O:0.999919
colormaps	O	O:0.999921
to	O	O:0.999944
`	O	O:0.999998
_cm.py	O	O:0.947049
`	O	O:0.999975
in	O	O:0.999912
your	O	O:0.999864
mpl	O	O:0.999554
directory	O	O:0.998575
and	O	O:0.999937
then	O	O:0.998935
change	O	O:0.999890
your	O	O:0.998901
rc	O	O:0.998320
file	O	O:0.998684
.	O	O:0.999743
	
How	O	O:0.999926
can	O	O:0.999011
I	O	O:1.000000
tell	O	O:0.999392
append_axes	O	O:0.999321
that	O	O:0.997557
I	O	O:0.999999
want	O	O:0.999961
to	O	O:0.998860
append	O	O:0.985075
the	O	O:0.999911
y	O	O:0.999587
subplot	O	O:0.999910
to	O	O:0.999992
the	O	O:0.999999
right	O	O:0.999632
of	O	O:0.999982
the	O	O:0.999731
"	O	O:0.999985
main	O	O:0.999504
axes	O	O:0.999847
"	O	O:0.999976
containing	O	O:0.999212
the	O	O:0.999695
scatter	O	O:0.999521
plot	O	O:0.982578
?	O	O:0.999985
	
I	O	O:0.999974
got	O	O:0.999905
a	O	O:0.999846
boxplot	O	O:0.989679
graph	O	O:0.998780
like	O	O:0.999698
this	O	O:0.997600
:	O	O:0.999910
	
add	O	O:0.999485
boxplot	O	O:0.999089
to	O	O:0.999923
other	O	O:0.999965
graph	O	O:0.999436
in	O	O:0.999896
python	O	O:0.989088
	
but	O	O:0.999818
when	O	O:0.997008
I	O	O:0.999989
do	O	O:0.999993
it	O	O:0.999891
on	O	O:0.999970
the	O	O:0.999863
'	O	O:0.999965
link	O	O:0.999314
'	O	O:0.999995
series	O	O:0.999856
I	O	O:0.999997
can	O	O:0.999967
draw	O	O:0.998940
the	O	O:0.999975
boxplot	O	O:0.997519
correctly	O	O:0.999147
.	O	O:0.999803
	
and	O	O:0.999559
I	O	O:0.999979
am	O	O:0.999996
able	O	O:0.999478
to	O	O:0.999992
draw	O	O:0.999839
the	O	O:0.999929
boxplot	O	O:0.990721
.	O	O:0.999762
	
Or	O	O:0.999882
,	O	O:0.999991
more	O	O:0.999752
generally	O	O:0.998641
,	O	O:0.999985
modify	O	O:0.998480
/	O	O:0.999899
transform	O	O:0.638631
to	O	O:0.999962
you	O	O:0.999942
heart's	O	O:0.999774
content	O	O:0.997668
,	O	O:0.999971
and	O	O:0.999961
then	O	O:0.997638
boxplot	O	O:0.997237
.	O	O:0.999710
	
If	O	O:0.999921
the	O	O:0.999938
ticklabels	O	O:0.998839
are	O	O:0.999934
already	O	O:0.999832
set	O	O:0.999669
to	O	O:0.999972
a	O	O:0.999998
string	O	O:0.998342
as	O	O:0.999788
in	O	O:0.999948
e.g.	O	O:0.998885
a	O	O:0.999927
boxplot	O	O:0.978314
,	O	O:0.999995
this	O	O:0.999284
is	O	O:0.999957
still	O	O:0.985973
working	O	O:0.998840
.	O	O:0.997932
	
How	O	O:0.999941
do	O	O:0.999837
I	O	O:0.999954
add	O	O:0.999834
inset	O	O:0.999077
axes	O	O:0.996753
and	O	O:0.999929
zoom	O	O:0.983291
in	O	O:0.999856
on	O	O:0.999976
the	O	O:0.999950
first	O	O:0.999813
boxplot	O	O:0.999636
of	O	O:0.999976
the	O	O:0.999750
two	O	O:0.999410
?	O	O:0.999974
	
I'm	O	O:0.999793
not	O	O:0.999739
setting	O	O:0.999873
the	O	O:0.999932
position	O	O:0.999227
of	O	O:0.999984
each	O	O:0.998826
boxplot	O	O:0.999736
,	O	O:0.999995
so	O	O:0.999953
I	O	O:0.999990
don't	O	O:0.999970
know	O	O:0.998051
where	O	O:0.999843
they	O	O:0.999801
will	O	O:0.998962
appear	O	O:0.992337
exactly	O	O:0.992975
.	O	O:0.999320
	
I	O	O:0.999912
wanted	O	O:0.999783
to	O	O:0.999611
add	O	O:0.999979
a	O	O:0.999970
box	O	O:0.998067
for	O	O:0.999953
each	O	O:0.996797
boxplot	O	O:0.999423
with	O	O:0.999880
a	O	O:0.999804
zoomed-in	O	O:0.999701
view	O	O:0.992889
on	O	O:0.999990
a	O	O:0.999985
specific	O	O:0.998200
y-axis	O	O:0.999803
range	O	O:0.996493
.	O	O:0.999252
	
UserWarning	O	O:0.996095
:	O	O:0.999725
2D	O	O:0.999953
hist	O	B-API:0.615669
input	O	O:0.999648
should	O	O:0.999730
be	O	O:0.999973
nsamples	O	O:0.996780
x	O	O:0.999704
nvariables	O	O:0.997875
;	O	O:0.999978
	
I'm	O	O:0.999943
doing	O	O:0.998761
a	O	O:0.999858
hist	O	B-API:0.893608
plot	O	O:0.982315
and	O	O:0.999700
I	O	O:0.999988
want	O	O:0.999913
some	O	O:0.998600
numbers	O	O:0.999580
shown	O	O:0.999753
in	O	O:0.999982
the	O	O:0.999973
plot	O	O:0.984116
,	O	O:0.999998
so	O	O:0.999988
I	O	O:0.999996
put	O	O:0.999887
in	O	O:0.999855
a	O	O:0.999982
text	O	O:0.996462
box	O	O:0.999753
using	O	O:0.999838
mathtext	B-API	O:0.985031
for	O	O:0.999217
the	O	O:0.999759
text	O	O:0.910346
,	O	O:0.999991
but	O	O:0.999776
I	O	O:0.999965
doesn't	O	O:0.999301
work	O	O:0.988979
and	O	O:0.999851
I	O	O:0.999987
can't	O	O:0.999647
see	O	O:0.999637
why	O	O:0.999316
.	O	O:0.999263
	
This	O	O:0.999855
lead	O	O:0.999511
to	O	O:0.999988
my	O	O:0.999978
colorbar	O	O:0.999262
having	O	O:0.999753
sqrt	O	O:0.820391
ticks	O	O:0.999405
and	O	O:0.999784
I	O	O:0.999992
want	O	O:0.999811
to	O	O:0.999469
translate	O	O:0.999998
them	O	O:0.999972
back	O	O:0.999835
to	O	O:0.999965
the	O	O:0.999993
original	O	O:0.996553
values	O	O:0.997317
.	O	O:0.999881
	
avoiding	O	O:0.999108
the	O	O:0.999787
local	O	O:0.961543
cache	O	O:0.996419
when	O	O:0.999365
fetching	O	O:0.999969
yahoo	O	O:0.999732
finance	O	O:0.999963
data	O	O:0.999883
from	O	O:0.999832
matplotlib.finance	B-API	O:0.997152
in	O	O:0.999955
python	O	O:0.994695
	
I	O	O:0.999977
am	O	O:0.999984
fetching	O	O:0.999395
yahoo	O	O:0.999608
finance	O	O:0.999946
data	O	O:0.999706
in	O	O:0.999941
Python	O	O:0.999359
through	O	O:0.999815
this	O	O:0.999372
interface	O	O:0.996645
:	O	O:0.999916
	
It	O	O:0.999535
would	O	O:0.999780
also	O	O:0.999868
be	O	O:0.999994
worth	O	O:0.999656
looking	O	O:0.999252
at	O	O:0.999936
the	O	O:0.999248
scatter	O	O:0.999696
plot	O	O:0.992700
documentation	O	O:0.999869
at	O	O:0.999899
#URL	O	O:0.998220
#CODE	O	O:0.998329
	
I	O	O:0.999987
am	O	O:0.999989
using	O	O:0.999151
the	O	O:0.999622
following	O	O:0.999335
code	O	O:0.999519
to	O	O:0.999987
stitch	O	O:0.999978
a	O	O:0.999943
.png	O	O:0.982436
into	O	O:0.999728
a	O	O:0.999986
scatter	O	O:0.999234
plot	O	O:0.995937
from	O	O:0.999320
MATPLOTLIB	O	O:0.998289
.	O	O:0.999878
	
Now	O	O:0.999551
I	O	O:0.999991
want	O	O:0.999908
to	O	O:0.999678
create	O	O:0.999989
a	O	O:0.999990
scatter	O	O:0.999888
plot	O	O:0.996345
with	O	O:0.999937
the	O	O:0.999973
data	O	O:0.999751
above	O	O:0.999731
..	O	O:0.999459
	
matplotlib	O	O:0.960257
:	O	O:0.999954
Understanding	O	O:0.998873
and	O	O:0.999660
changing	O	O:0.999753
axis	O	O:0.999172
labels	O	O:0.999487
for	O	O:0.999966
a	O	O:0.999679
scatter	O	O:0.999137
plot	O	O:0.959284
updated	O	O:0.999437
incrementally	O	O:0.997058
	
I	O	O:0.999994
have	O	O:0.999912
a	O	O:0.999855
script	O	O:0.999866
that	O	O:0.999788
generates	O	O:0.999394
scatter	O	O:0.999859
plots	O	O:0.999020
for	O	O:0.999972
data	O	O:0.999804
being	O	O:0.999149
generated	O	O:0.999896
by	O	O:0.999933
a	O	O:0.999979
hardware	O	O:0.997342
device	O	O:0.988998
.	O	O:0.999615
	
I	O	O:0.999969
build	O	O:0.999888
a	O	O:0.999810
scatter	O	O:0.999238
plot	O	O:0.980353
using	O	O:0.999678
matplotlib	O	O:0.951347
and	O	O:0.997393
python2.7	O	O:0.525331
	
Build	O	O:0.999184
a	O	O:0.999856
scatter	O	O:0.999717
plot	O	O:0.974303
for	O	O:0.999885
baz	O	O:0.998033
based	O	O:0.999271
on	O	O:0.999943
the	O	O:0.999587
x-axis	O	O:0.998899
(	O	O:0.999976
foo	O	O:0.998935
)	O	O:0.999936
and	O	O:0.997475
y-axis	O	O:0.999542
(	O	O:0.999922
bar	O	O:0.999470
)	O	O:0.999504
	
It	O	O:0.999903
is	O	O:0.999963
a	O	O:0.999952
normal	O	O:0.934944
scatter	O	O:0.999572
plot	O	O:0.955622
.	O	O:0.999710
	
Value	O	O:0.988428
Error	O	O:0.999889
with	O	O:0.999550
color	O	O:0.999673
array	O	O:0.999905
when	O	O:0.999035
slicing	O	O:0.999876
values	O	O:0.999413
for	O	O:0.999821
scatter	O	O:0.999652
plot	O	O:0.920662
	
I	O	O:0.999988
want	O	O:0.999935
to	O	O:0.999783
specify	O	O:0.999983
the	O	O:0.999988
frequency	O	O:0.999771
of	O	O:0.999834
markers	O	O:0.999668
that	O	O:0.999866
are	O	O:0.999886
printed	O	O:0.999069
in	O	O:0.999977
my	O	O:0.999601
scatter	O	O:0.999804
plot	O	O:0.970944
.	O	O:0.999766
	
Regression	O	O:0.999141
line	O	O:0.998138
and	O	O:0.999796
fitted	O	O:0.999749
curve	O	O:0.997807
for	O	O:0.999894
scatter	O	O:0.999289
plots	O	O:0.991885
in	O	O:0.999942
matplotlib	O	O:0.995586
	
If	O	O:0.999968
you	O	O:0.999359
are	O	O:0.999896
trying	O	O:0.999837
to	O	O:0.999898
create	O	O:0.999922
an	O	O:0.999972
animation	O	O:0.999881
,	O	O:0.999995
look	O	O:0.999013
in	O	O:0.999953
to	O	O:0.999965
the	O	O:0.999976
`	O	O:0.999907
animation	B-API	O:0.996910
`	O	O:0.999998
module	O	O:0.996513
of	O	O:0.999975
matplotlib	O	O:0.991735
,	O	O:0.999985
it	O	O:0.999984
takes	O	O:0.999940
care	O	O:0.999718
of	O	O:0.999998
a	O	O:0.999988
lot	O	O:0.999870
of	O	O:0.999948
the	O	O:0.999706
details	O	O:0.998685
for	O	O:0.999906
you	O	O:0.999139
.	O	O:0.999722
	
Apparently	O	O:0.998757
,	O	O:0.999976
the	O	O:0.999754
"	O	O:0.999199
Animation	B-API	O:0.999733
"	O	O:0.999992
class	O	O:0.999556
of	O	O:0.999972
Matplotlib	O	O:0.999755
runs	O	O:0.999852
the	O	O:0.999891
animation	O	O:0.999693
in	O	O:0.999986
a	O	O:0.999962
separate	O	O:0.999180
thread	O	O:0.997692
.	O	O:0.999684
	
It	O	O:0.999977
simply	O	O:0.999682
don't	O	O:0.999701
use	O	O:0.999522
the	O	O:0.998871
Animation	B-API	O:0.998108
class	O	O:0.994787
and	O	O:0.999861
builds	O	O:0.999770
its	O	O:0.999588
own	O	O:0.999761
animation	O	O:0.999936
from	O	O:0.999644
crash	O	O:0.955879
.	O	O:0.999958
	
I	O	O:0.999982
think	O	O:0.998913
`	O	O:0.999905
axis	O	O:0.997524
([	O	O:0.999989
xo	O	O:0.999423
,	O	O:0.999992
x1	O	O:0.999730
,	O	O:0.999944
y0	O	O:0.999836
,	O	O:0.999957
y1	O	O:0.999882
])`	O	O:0.996973
is	O	O:0.999941
in	O	O:0.999984
terms	O	O:0.999924
of	O	O:0.999990
proportion	O	O:0.999093
of	O	O:0.999976
the	O	O:0.999565
Figure	B-API	O:0.733294
,	O	O:0.999974
not	O	O:0.999919
the	O	O:0.999988
data	O	O:0.999707
transform	O	O:0.815311
.	O	O:0.999863
	
I	O	O:0.999974
used	O	O:0.999879
the	O	O:0.998157
scatter	B-API	O:0.987914
function	O	O:0.998881
and	O	O:0.999917
plotted	O	O:0.998739
the	O	O:0.999644
points	O	O:0.961051
,	O	O:0.999966
but	O	O:0.999947
the	O	O:0.999951
surface	O	O:0.962417
function	O	O:0.998332
is	O	O:0.999992
not	O	O:0.998637
working	O	O:0.997837
(	O	O:0.999947
the	O	O:0.999171
window	O	O:0.997114
is	O	O:0.999991
empty	O	O:0.997145
)	O	O:0.999875
.	O	O:0.997729
	
The	O	O:0.999902
solution	O	O:0.999491
I	O	O:0.999987
found	O	O:0.999172
for	O	O:0.999831
this	O	O:0.999571
involves	O	O:0.999229
using	O	O:0.999507
Normalize	B-API	B-API:0.506166
to	O	O:0.999909
make	O	O:0.999805
a	O	O:0.999967
normalised	O	O:0.986033
colour	O	O:0.999593
list	O	O:0.998274
based	O	O:0.999566
on	O	O:0.999838
the	O	O:0.999919
relevant	O	O:0.999760
data	O	O:0.999606
,	O	O:0.999999
mapping	O	O:0.999753
it	O	O:0.999942
to	O	O:0.999963
a	O	O:0.999994
ScalarMappable	B-API	B-API:0.658247
,	O	O:0.999870
and	O	O:0.999884
using	O	O:0.999900
that	O	O:0.996415
to	O	O:0.999918
set	O	O:0.999649
the	O	O:0.999955
face	O	O:0.998387
colour	O	O:0.999588
and	O	O:0.999931
c	O	O:0.999366
limits	O	O:0.997279
on	O	O:0.999993
each	O	O:0.999851
frame	O	O:0.999982
of	O	O:0.999973
the	O	O:0.999644
animation	O	O:0.998919
.	O	O:0.999599
	
But	O	O:0.999882
because	O	O:0.999754
all	O	O:0.999597
of	O	O:0.999965
the	O	O:0.999432
functionality	O	O:0.999861
relies	O	O:0.999038
on	O	O:0.999957
the	O	O:0.999991
hook	O	O:0.991878
,	O	O:0.999995
when	O	O:0.999873
the	O	O:0.999976
canvas	O	O:0.998867
is	O	O:0.999996
finally	O	O:0.999794
shown	O	O:0.999702
I	O	O:0.999989
presume	O	O:0.999369
Python's	O	O:0.998641
garbage	O	O:0.998016
collection	O	O:0.999210
has	O	O:0.999944
removed	O	O:0.999682
the	O	O:0.999194
Animation	B-API	O:0.998603
instance	O	O:0.999372
---	O	O:0.999951
since	O	O:0.999576
it	O	O:0.999946
was	O	O:0.999980
never	O	O:0.999812
assigned	O	O:0.999903
to	O	O:0.999949
a	O	O:0.999994
variable	O	O:0.993686
---	O	O:0.999755
and	O	O:0.999910
therefore	O	O:0.999801
the	O	O:0.999868
animation	O	O:0.999596
can	O	O:0.999784
never	O	O:0.999963
be	O	O:0.999953
started	O	O:0.997087
.	O	O:0.999284
	
Notice	O	O:0.998583
`	O	O:0.999859
xytext	O	O:0.924986
=	O	O:0.999979
(	O	O:0.999955
0	O	O:0.999973
,	O	O:0.999989
0	O	O:0.999964
)`	O	O:0.999930
means	O	O:0.998125
no	O	O:0.999924
offset	O	O:0.999396
,	O	O:0.999944
and	O	O:0.999943
omitting	O	O:0.998189
`	O	O:0.999799
arrowprops	O	O:0.978212
`	O	O:0.999985
causes	O	O:0.988467
`	O	O:0.999993
plt.annotate	B-API	B-API:0.750933
`	O	O:0.999941
to	O	O:0.999876
not	O	O:0.999997
draw	O	O:0.999706
an	O	O:0.999938
arrow	O	O:0.999418
.	O	O:0.999652
	
OLS	O	O:0.999707
solution	O	O:0.999717
using	O	O:0.999753
pinv	B-API	B-API:0.970883
/	O	O:0.996680
svd	B-API	B-API:0.581739
#CODE	O	O:0.998583
	
The	O	O:0.999645
bad	O	O:0.999936
days	O	O:0.998350
are	O	O:0.999874
eliminated	O	O:0.999501
,	O	O:0.999885
and	O	O:0.999874
the	O	O:0.999873
good	O	O:0.999460
ones	O	O:0.999182
are	O	O:0.999963
kept	O	O:0.999593
.	O	O:0.999657
	
@USER	O	O:0.998480
Well	O	O:0.994657
in	O	O:0.999979
this	O	O:0.999866
case	O	O:0.999661
,	O	O:0.999958
`	O	O:0.999942
searchsorted	B-API	B-API:0.870745
`	O	O:0.999917
is	O	O:0.999948
basically	O	O:0.999783
looking	O	O:0.999494
for	O	O:0.999757
places	O	O:0.982291
or	O	O:0.999912
indices	O	O:0.995490
where	O	O:0.999872
elements	O	O:0.999937
from	O	O:0.999164
`	O	O:0.999978
message	O	O:0.998419
`	O	O:0.999985
exists	O	O:0.998552
in	O	O:0.999983
the	O	O:0.999993
keys	O	O:0.999116
of	O	O:0.999943
`	O	O:0.999982
codes	O	O:0.979703
`	O	O:0.999972
.	O	O:0.998632
	
@USER	O	O:0.999483
--	O	O:0.999949
I	O	O:0.999968
had	O	O:0.999958
a	O	O:0.999893
hard	O	O:0.999695
time	O	O:0.999927
remembering	O	O:0.999750
how	O	O:0.998636
`	O	O:0.999985
translate	B-API	O:0.992920
`	O	O:0.999969
and	O	O:0.999281
`	O	O:0.999989
maketrans	B-API	O:0.910466
`	O	O:0.999987
work	O	O:0.994472
for	O	O:0.999995
quite	O	O:0.999913
a	O	O:0.999954
while	O	O:0.997891
too	O	O:0.997895
,	O	O:0.999987
but	O	O:0.999757
I've	O	O:0.998564
gotten	O	O:0.996889
used	O	O:0.999731
to	O	O:0.999293
it	O	O:0.999939
.	O	O:0.999747
	
Edit	O	O:0.997681
:	O	O:0.999984
if	O	O:0.999971
you're	O	O:0.999957
using	O	O:0.999851
a	O	O:0.999903
version	O	O:0.993116
of	O	O:0.999940
numpy	O	O:0.971388
>	O	O:0.999871
=	O	O:0.999925
1.8.0	O	O:0.996741
,	O	O:0.999997
then	O	O:0.998321
`	O	O:0.999984
np.linalg.eigvals	B-API	B-API:0.866939
`	O	O:0.999992
operates	O	O:0.999850
over	O	O:0.999959
the	O	O:0.999981
last	O	O:0.999296
two	O	O:0.999964
dimensions	O	O:0.999729
of	O	O:0.999954
whatever	O	O:0.999809
array	O	O:0.999195
you	O	O:0.999680
hand	O	O:0.999307
it	O	O:0.999986
,	O	O:0.999996
so	O	O:0.999992
if	O	O:0.999979
you	O	O:0.999914
reshape	O	O:0.853296
your	O	O:0.999809
input	O	O:0.999948
to	O	O:0.999980
an	O	O:0.999893
`	O	O:0.999779
(	O	O:0.999911
n_subarrays	O	O:0.998747
,	O	O:0.999993
nrows	O	O:0.994701
,	O	O:0.999992
ncols	O	O:0.997752
)`	O	O:0.999888
array	O	O:0.999070
you'll	O	O:0.999929
only	O	O:0.999901
have	O	O:0.999801
to	O	O:0.999997
call	O	O:0.997553
`	O	O:0.999993
eigvals	B-API	O:0.816146
`	O	O:0.999989
once	O	O:0.989034
:	O	O:0.999992
#CODE	O	O:0.999797
	
`	O	O:0.999796
reshape	B-API	B-API:0.835432
`	O	O:0.999986
returns	O	O:0.999747
a	O	O:0.999999
view	O	O:0.995097
of	O	O:0.999936
the	O	O:0.999795
original	O	O:0.998451
array	O	O:0.998350
,	O	O:0.999994
not	O	O:0.999903
a	O	O:0.999996
copy	O	O:0.977321
,	O	O:0.999995
so	O	O:0.999982
the	O	O:0.999928
conversion	O	O:0.999567
to	O	O:0.999976
3D	O	O:1.000000
only	O	O:0.999903
requires	O	O:0.999904
altering	O	O:0.999947
the	O	O:0.999317
`	O	O:0.999880
shape	O	O:0.990529
`	O	O:0.999984
and	O	O:0.999407
`	O	O:0.999984
strides	O	B-API:0.885405
`	O	O:0.999997
attributes	O	O:0.998191
of	O	O:0.999990
the	O	O:0.999864
array	O	O:0.998411
,	O	O:0.999929
without	O	O:0.999543
having	O	O:0.996306
to	O	O:0.999985
copy	O	O:0.999633
any	O	O:0.999966
of	O	O:0.999939
the	O	O:0.999618
actual	O	O:0.998951
data	O	O:0.999077
.	O	O:0.999661
	
sum	O	O:0.998991
this	O	O:0.999831
new	O	O:0.999856
array	O	O:0.999500
along	O	O:0.999535
particular	O	O:0.998433
axes	O	O:0.998100
;	O	O:0.999957
and	O	O:0.999829
then	O	O:0.999612
maybe	O	O:0.997992
	
Calling	O	O:0.990903
`	O	O:0.999701
reshape	B-API	B-API:0.777826
`	O	O:0.999985
returns	O	O:0.999548
a	O	O:0.999993
view	O	O:0.983270
,	O	O:0.999982
so	O	O:0.999957
it	O	O:0.999926
doesn't	O	O:0.999883
incur	O	O:0.999836
any	O	O:0.999701
big	O	O:0.999520
copying	O	O:0.998767
costs	O	O:0.997853
or	O	O:0.999981
anything	O	O:0.999625
like	O	O:0.999750
that	O	O:0.998223
.	O	O:0.999698
	
so	O	O:0.999938
at	O	O:0.999996
some	O	O:0.999864
point	O	O:0.999601
in	O	O:0.999979
the	O	O:0.999826
execution	O	O:0.998786
it	O	O:0.999972
will	O	O:0.999525
max	O	O:0.972354
my	O	O:0.999628
memory	O	O:0.997269
.	O	O:0.999481
	
Note	O	O:0.999928
that	O	O:0.999685
extension	O	O:0.999895
to	O	O:0.999992
even	O	O:0.999908
higher	O	O:0.999881
combinatorics	O	O:0.989408
should	O	O:0.999690
be	O	O:0.999983
trivial	O	O:0.998955
,	O	O:0.999983
along	O	O:0.999695
the	O	O:0.999741
lines	O	O:0.995468
presented	O	O:0.997057
;	O	O:0.999975
but	O	O:0.999868
keep	O	O:0.999091
an	O	O:0.999945
eye	O	O:0.999897
on	O	O:0.999985
the	O	O:0.999957
n	O	O:0.999227
used	O	O:0.999495
in	O	O:0.999982
that	O	O:0.999756
case	O	O:0.999253
.	O	O:0.999844
	
These	O	O:0.997815
functions	O	O:0.999713
return	O	O:0.975621
a	O	O:0.999954
list	O	O:0.984853
,	O	O:0.999976
which	O	O:0.998425
I	O	O:0.999983
convert	O	O:0.999796
to	O	O:0.999955
a	O	O:0.999998
numpy	O	O:0.995931
array	O	O:0.997336
and	O	O:0.999961
then	O	O:0.999323
sum	O	O:0.999360
over	O	O:0.999377
.	O	O:0.999561
	
Can	O	O:0.999742
it	O	O:0.999972
be	O	O:0.999993
because	O	O:0.999766
of	O	O:0.999899
the	O	O:0.999977
many	O	O:0.998861
zeros	O	O:0.999539
in	O	O:0.999927
the	O	O:0.999877
initial	O	O:0.997605
table	O	O:0.999248
?	O	O:0.999966
	
I	O	O:0.999971
also	O	O:0.999573
understand	O	O:0.999767
that	O	O:0.998197
sum	B-API	O:0.997353
(	O	O:0.999968
A	O	O:0.999831
,	O	O:0.999992
axis=1	O	O:0.996757
)	O	O:0.999888
will	O	O:0.997833
sum	O	O:0.999914
each	O	O:0.998795
row	O	O:0.999581
.	O	O:0.999671
	
But	O	O:0.999944
what	O	O:0.998564
I	O	O:0.999978
really	O	O:0.999904
want	O	O:0.998939
to	O	O:0.999908
do	O	O:0.999992
,	O	O:0.999990
is	O	O:0.999986
to	O	O:0.999900
bin	O	O:0.999472
`	O	O:0.999974
array	O	O:0.980735
[:	O	O:0.999991
,	O	O:0.999956
1	O	O:0.999957
]`	O	O:0.999958
by	O	O:0.999886
day	O	O:0.999912
(	O	O:0.999994
as	O	O:0.999971
derived	O	O:0.999760
by	O	O:0.999918
the	O	O:0.999939
unix	O	O:0.954117
timestamps	O	O:0.999147
in	O	O:0.999976
array	O	O:0.998239
[:	O	O:0.999961
,	O	O:0.999933
0	O	O:0.999923
])	O	O:0.998898
,	O	O:0.999311
and	O	O:0.999985
plot	O	O:0.996105
these	O	O:0.999838
as	O	O:0.999985
a	O	O:0.999869
stacked	O	O:0.996440
histogram	O	O:0.995301
,	O	O:0.999988
with	O	O:0.999901
each	O	O:0.991279
(	O	O:0.999996
colored	O	O:0.999281
)	O	O:0.999957
stack	O	O:0.867223
representing	O	O:0.999948
a	O	O:0.999963
day	O	O:0.998771
.	O	O:0.999338
	
It's	O	O:0.999606
interesting	O	O:0.999736
to	O	O:0.999739
see	O	O:0.999996
that	O	O:0.999956
when	O	O:0.999755
I	O	O:0.999998
go	O	O:0.999993
back	O	O:0.999282
to	O	O:0.999935
`	O	O:0.999996
nloop=1000	O	O:0.984336
`	O	O:0.999984
,	O	O:0.999914
`	O	O:0.999991
nreps=3	O	O:0.992519
`	O	O:0.999991
I	O	O:0.999992
actually	O	O:0.999986
see	O	O:0.999881
a	O	O:0.999987
slightly	O	O:0.999540
*	O	O:0.999630
greater	O	O:0.999541
*	O	O:0.999973
rate	O	O:0.999893
of	O	O:0.999986
cache	O	O:0.996087
misses	O	O:0.999530
for	O	O:0.999973
the	O	O:0.999803
row	O	O:0.998812
sum	O	O:0.992056
(	O	O:0.999990
17%	O	O:0.999939
vs	O	O:0.999954
13%	O	O:0.999721
)	O	O:0.999872
,	O	O:0.999960
even	O	O:0.999719
though	O	O:0.999900
it's	O	O:0.999712
faster	O	O:0.999922
than	O	O:0.999644
the	O	O:0.999679
column	O	O:0.998353
sum	O	O:0.995686
.	O	O:0.999832
	
You	O	O:0.999886
can	O	O:0.999632
concatenate	O	O:0.950088
arrays	O	O:0.999873
in	O	O:0.999903
`	O	O:0.999980
numpy	O	O:0.970136
`	O	O:0.999937
.	O	O:0.998773
	
If	O	O:0.999970
you	O	O:0.999727
are	O	O:0.999801
100%	O	O:0.999899
sure	O	O:0.999915
that	O	O:0.999789
l2	O	O:0.999771
would	O	O:0.999899
only	O	O:0.999859
be	O	O:0.999994
one	O	O:0.999896
column	O	O:0.999785
then	O	O:0.999953
you	O	O:0.999970
can	O	O:0.999710
reshape	O	O:0.993067
that	O	O:0.999940
array	O	O:0.999863
to	O	O:0.999981
make	O	O:0.999722
it	O	O:0.999928
one	O	O:0.999953
dimensional	O	O:0.996837
before	O	O:0.999626
doing	O	O:0.999499
the	O	O:0.999024
subtraction	O	O:0.988464
.	O	O:0.999664
	
You	O	O:0.999420
won't	O	O:0.999739
be	O	O:0.999986
able	O	O:0.999930
to	O	O:0.999946
create	O	O:0.999973
a	O	O:0.999990
2D	O	O:0.999954
array	O	O:0.999688
that	O	O:0.999205
way	O	O:0.999441
,	O	O:0.999791
and	O	O:0.998344
@USER	O	O:0.999151
method	O	O:0.997077
of	O	O:0.999963
returning	O	O:0.999602
a	O	O:0.999941
1D	O	O:0.999866
array	O	O:0.999634
that	O	O:0.999551
you	O	O:0.999860
reshape	O	O:0.879132
afterwards	O	O:0.999873
is	O	O:0.999987
a	O	O:0.999990
sure	O	O:0.999017
go	O	O:0.999005
.	O	O:0.999744
	
I	O	O:0.999993
have	O	O:0.999908
a	O	O:0.999894
square	O	O:0.999609
matrix	O	O:0.977608
A	O	O:0.999310
(	O	O:0.999982
could	O	O:0.999660
be	O	O:0.999992
any	O	O:0.999961
size	O	O:0.998960
)	O	O:0.999783
and	O	O:0.998779
I	O	O:0.999997
want	O	O:0.999456
to	O	O:0.999821
take	O	O:0.999976
the	O	O:0.999908
upper	O	O:0.994466
triangular	O	O:0.999810
part	O	O:0.992594
and	O	O:0.999946
place	O	O:0.998894
those	O	O:0.998076
values	O	O:0.998622
in	O	O:0.999930
an	O	O:0.999955
array	O	O:0.999410
without	O	O:0.999747
the	O	O:0.999147
values	O	O:0.995116
below	O	O:0.999851
the	O	O:0.999850
center	O	O:0.999409
diagonal	O	O:0.997121
(	O	O:0.999988
k=0	O	O:0.999099
)	O	O:0.999710
.	O	O:0.998222
	
You	O	O:0.999815
can	O	O:0.999319
mimic	O	O:0.999816
this	O	O:0.999883
behavior	O	O:0.999940
with	O	O:0.999833
a	O	O:0.999926
simple	O	O:0.995036
function	O	O:0.999896
to	O	O:0.999967
flatten	O	O:0.933986
a	O	O:0.999982
list	O	O:0.903806
:	O	O:0.999966
#CODE	O	O:0.997887
	
So	O	O:0.999764
`	O	O:0.999989
popt	O	O:0.899442
`	O	O:0.999993
,	O	O:0.999986
according	O	O:0.999968
to	O	O:0.999869
the	O	O:0.999983
documentation	O	O:0.998312
,	O	O:0.999986
returns	O	O:0.999832
*	O	O:0.998892
"	O	O:0.999959
Optimal	O	O:0.999572
values	O	O:0.998422
for	O	O:0.999918
the	O	O:0.999969
parameters	O	O:0.992781
so	O	O:0.999996
that	O	O:0.999984
the	O	O:0.999998
sum	O	O:0.998577
of	O	O:0.999980
the	O	O:0.999894
squared	O	O:0.999963
error	O	O:0.999950
of	O	O:0.999964
f	O	O:0.991943
(	O	O:0.999987
xdata	O	O:0.972799
,	O	O:0.999997
popt	O	O:0.990240
)	O	O:0.999901
-	O	O:0.999987
ydata	O	O:0.974214
is	O	O:0.999963
minimized	O	O:0.996371
"	O	O:0.999633
.	O	O:0.998877
	
And	O	O:0.999005
I'd	O	O:0.999941
like	O	O:0.999373
indices	O	O:0.989289
`	O	O:0.999949
i	O	O:0.999688
`	O	O:0.999988
such	O	O:0.999600
that	O	O:0.999649
,	O	O:0.999953
#CODE	O	O:0.999399
	
But	O	O:0.999737
,	O	O:0.999892
`	O	O:0.999862
resize	B-API	B-API:0.752308
`	O	O:0.999941
looks	O	O:0.999499
like	O	O:0.999840
it	O	O:0.999980
just	O	O:0.999479
might	O	O:0.999880
be	O	O:0.999960
the	O	O:0.999958
thing	O	O:0.997222
I'm	O	O:0.999844
looking	O	O:0.997091
for	O	O:0.999673
...	O	O:0.983532
	
`	O	O:0.999936
rfft	B-API	B-API:0.960450
`	O	O:0.999977
,	O	O:0.999971
apart	O	O:0.999970
from	O	O:0.999199
repeated	O	O:0.998871
terms	O	O:0.999871
excluded	O	O:0.999379
,	O	O:0.999940
and	O	O:0.999838
an	O	O:0.999678
almost	O	O:0.998522
2x	O	O:0.999908
speed-up	O	O:0.998179
,	O	O:0.999991
returns	O	O:0.999891
the	O	O:0.999842
exact	O	O:0.999859
same	O	O:0.999936
you	O	O:0.999880
would	O	O:0.999982
get	O	O:0.999978
from	O	O:0.999850
`	O	O:0.999969
fft	B-API	O:0.857329
`	O	O:0.999931
.	O	O:0.998306
	
Plus	O	O:0.999375
,	O	O:0.999992
if	O	O:0.999908
I	O	O:0.999996
have	O	O:0.999669
4	O	O:0.999894
dimensions	O	O:0.999217
,	O	O:0.999973
I	O	O:0.999998
thought	O	O:0.999362
I	O	O:0.999800
should	O	O:0.999808
have	O	O:0.995016
4	O	O:0.999967
eigenvalues	O	O:0.980526
and	O	O:0.999918
not	O	O:0.999279
150	O	O:0.999675
like	O	O:0.999627
the	O	O:0.999718
eig	B-API	O:0.522230
gives	O	O:0.998668
me	O	O:0.999919
.	O	O:0.999799
	
If	O	O:0.999946
I	O	O:0.999979
run	O	O:0.999963
your	O	O:0.999821
code	O	O:0.999893
to	O	O:0.999993
generate	O	O:0.999878
`	O	O:0.999981
d	O	O:0.995917
`	O	O:0.999971
and	O	O:0.998836
`	O	O:0.999992
dx	O	O:0.864767
`	O	O:0.999993
with	O	O:0.997851
`	O	O:0.999985
eig	B-API	O:0.718285
`	O	O:0.999988
I	O	O:0.999960
get	O	O:0.999961
the	O	O:0.999373
following	O	O:0.986458
:	O	O:0.999903
#CODE	O	O:0.999731
	
In	O	O:0.999678
other	O	O:0.998409
words-	O	O:0.999362
it	O	O:0.999135
is	O	O:0.999979
not	O	O:0.999760
just	O	O:0.999848
taking	O	O:0.999934
a	O	O:0.999946
min	O	O:0.857349
or	O	O:0.999712
max	O	B-API:0.563785
.	O	O:0.999097
	
D	O	O:0.998722
[	O	O:0.999969
I+1	O	O:0.999695
,	O	O:0.999986
J+1	O	O:0.999710
]	O	O:0.999916
=	O	O:0.999728
map	B-API	B-API:0.645256
(	O	O:0.999991
norm	O	O:0.555467
,	O	O:0.999988
x	O	O:0.999909
[	O	O:0.999988
I	O	O:0.999998
]	O	O:0.999977
-y	O	O:0.994034
[	O	O:0.999982
J	O	O:0.999887
])	O	O:0.999753
+	O	O:0.997678
np.minimum	B-API	B-API:0.848664
(	O	O:0.999939
np.minimum	B-API	O:0.600265
(	O	O:0.999929
D	O	O:0.999966
[	O	O:0.999989
I	O	O:0.999992
,	O	O:0.999998
J	O	O:0.999576
]	O	O:0.999950
,	O	O:0.999620
D	O	O:0.999927
[	O	O:0.999958
I	O	O:0.999978
,	O	O:0.999996
J+1	O	O:0.999297
])	O	O:0.999743
,	O	O:0.999827
D	O	O:0.999896
[	O	O:0.999953
I+1	O	O:0.999814
,	O	O:0.999989
J	O	O:0.999727
])	O	O:0.999641
?	O	O:0.999710
	
`	O	O:0.999929
dot	B-API	O:0.991368
`	O	O:0.999996
just	O	O:0.997657
has	O	O:0.999986
tighter	O	O:0.999966
code	O	O:0.999791
for	O	O:0.999986
a	O	O:0.999967
specific	O	O:0.996889
combination	O	O:0.998876
of	O	O:0.999932
dimensions	O	O:0.957779
.	O	O:0.999739
	
numpy	O	O:0.994410
sum	B-API	O:0.999035
does	O	O:0.999672
not	O	O:0.999857
agree	O	O:0.999078
	
Since	O	O:0.999684
you	O	O:0.999601
are	O	O:0.999980
only	O	O:0.999628
adding	O	O:0.999976
many	O	O:0.997379
`	O	O:0.999946
1	O	O:0.999663
`	O	O:0.999995
s	O	O:0.999972
you	O	O:0.999979
can	O	O:0.999922
convert	O	O:0.999558
`	O	O:0.999998
diff	O	B-API:0.804422
`	O	O:0.999992
to	O	O:0.995073
`	O	O:0.999999
bool	O	O:0.562101
`	O	O:0.999915
:	O	O:0.999826
#CODE	O	O:0.999869
	
It	O	O:0.999754
isn't	O	O:0.999863
mathematically	O	O:0.999639
possible	O	O:0.998565
to	O	O:0.999971
represent	O	O:0.999953
0	O	O:0.999968
on	O	O:0.999991
a	O	O:0.999984
log	O	O:0.999867
scale	O	O:0.995029
,	O	O:0.999986
so	O	O:0.999984
the	O	O:0.999966
first	O	O:0.999286
value	O	O:0.999785
will	O	O:0.999879
have	O	O:0.999886
to	O	O:0.999936
either	O	O:0.999982
be	O	O:0.999955
masked	O	O:0.999032
or	O	O:0.999913
clipped	O	O:0.999193
to	O	O:0.999983
a	O	O:0.999999
very	O	O:0.999539
small	O	O:0.999459
positive	O	O:0.996269
number	O	O:0.995064
.	O	O:0.999409
	
possible	O	O:0.999634
duplicate	O	O:0.999410
of	O	O:0.999944
[	O	O:0.999989
Efficiently	O	O:0.999958
count	O	O:0.997127
the	O	O:0.999961
number	O	O:0.999277
of	O	O:0.999979
occurrences	O	O:0.999669
of	O	O:0.999968
unique	O	O:0.997132
subarrays	O	O:0.998604
in	O	O:0.999892
NumPy	O	O:0.999698
?	O	O:0.999942
]	O	O:0.999353
(	O	O:0.999900
#URL	O	O:0.999628
)	O	O:0.999459
	
Or	O	O:0.999987
you	O	O:0.999732
could	O	O:0.999936
mask	O	O:0.999122
the	O	O:0.999976
x	O	O:0.999810
value	O	O:0.999814
as	O	O:0.999998
well	O	O:0.999676
,	O	O:0.999993
so	O	O:0.999932
the	O	O:0.999732
indices	O	O:0.996022
were	O	O:0.999576
consistent	O	O:0.999701
between	O	O:0.999021
x	O	O:0.999284
and	O	O:0.999765
y	O	O:0.999421
#CODE	O	O:0.997714
	
Here	O	O:0.999445
the	O	O:0.999672
`	O	O:0.999879
outer	B-API	O:0.973917
`	O	O:0.999989
method	O	O:0.998909
of	O	O:0.999991
the	O	O:0.998968
`	O	O:0.999979
multiply	B-API	B-API:0.583018
`	O	O:0.999987
ufunc	O	B-API:0.739728
is	O	O:0.999996
used	O	O:0.999799
to	O	O:0.999860
create	O	O:0.999907
the	O	O:0.999955
new	O	O:0.999613
20x20	O	O:0.999192
array	O	O:0.998782
.	O	O:0.999625
	
I	O	O:0.999993
have	O	O:0.999921
a	O	O:0.999928
3D	O	O:0.999971
numpy	O	O:0.996906
array	O	O:0.999846
consisting	O	O:0.999515
of	O	O:0.999649
1's	O	O:0.999393
and	O	O:0.999898
zeros	O	O:0.998684
defining	O	O:0.999237
open	O	O:0.970317
versus	O	O:0.999494
filled	O	O:0.999814
space	O	O:0.999195
in	O	O:0.999982
a	O	O:0.999984
porous	O	O:0.985644
solid	O	O:0.995069
(	O	O:0.999981
it's	O	O:0.999965
currently	O	O:0.999868
a	O	O:0.999990
numpy	O	O:0.995351
Int64	O	O:0.997864
array	O	O:0.998235
)	O	O:0.998942
.	O	O:0.997296
	
You	O	O:0.999731
are	O	O:0.999921
attempting	O	O:0.999359
to	O	O:0.999888
broadcast	O	O:0.999729
a	O	O:0.999983
4-D	O	O:0.999848
array	O	O:0.998896
together	O	O:0.999931
with	O	O:0.999769
a	O	O:0.999877
3-D	O	O:0.999583
array	O	O:0.995471
.	O	O:0.999272
	
Scipy	O	O:0.999064
NDimage	O	O:0.996872
correlate	O	O:0.653259
:	O	O:0.999996
unbearably	O	O:0.999888
slow	O	O:0.999126
	
I	O	O:0.999968
know	O	O:0.999976
that	O	O:0.999796
I	O	O:0.999995
can	O	O:0.999869
reshape	O	O:0.895190
the	O	O:0.999982
array	O	O:0.999718
to	O	O:0.999987
a	O	O:0.999996
100	O	O:0.999783
x	O	O:0.999116
2	O	O:0.999977
array	O	O:0.999771
of	O	O:0.999933
grid	O	O:0.987586
points	O	O:0.991105
:	O	O:0.999954
#CODE	O	O:0.999447
	
You	O	O:0.999941
probably	O	O:0.998892
could	O	O:0.999447
get	O	O:0.999726
`	O	O:0.999908
append	B-API	B-API:0.778511
`	O	O:0.999871
to	O	O:0.999310
work	O	O:0.999005
,	O	O:0.999973
but	O	O:0.999935
it	O	O:0.999970
just	O	O:0.999901
does	O	O:0.999935
a	O	O:0.999994
step	O	O:0.999656
by	O	O:0.999985
step	O	O:0.999380
concatenate	O	O:0.914409
,	O	O:0.999985
which	O	O:0.999741
is	O	O:0.999863
slower	O	O:0.999129
.	O	O:0.999516
	
This	O	O:0.999893
produces	O	O:0.999621
a	O	O:0.999982
random	O	O:0.997352
permutation	O	O:0.998682
of	O	O:0.999982
each	O	O:0.996055
column's	O	O:0.999862
indices	O	O:0.989839
.	O	O:0.999727
	
As	O	O:0.999970
it	O	O:0.999911
happens	O	O:0.999555
,	O	O:0.999990
the	O	O:0.999974
histogram	O	O:0.990843
is	O	O:0.999988
enough	O	O:0.999705
for	O	O:0.999979
the	O	O:0.999050
former	O	O:0.989578
.	O	O:0.999156
	
I	O	O:0.999983
see	O	O:0.999951
how	O	O:0.999759
the	O	O:0.999992
symmetry	O	O:0.999818
of	O	O:0.999966
the	O	O:0.999956
trace	O	O:0.999937
lets	O	O:0.999779
you	O	O:0.999950
replace	O	O:0.998235
the	O	O:0.999988
final	O	O:0.994986
`	O	O:0.999989
dot	B-API	O:0.994174
`	O	O:0.999975
.	O	O:0.997880
	
In	O	O:0.999970
that	O	O:0.999396
question	O	O:0.999930
,	O	O:0.999986
I	O	O:0.999989
sought	O	O:0.999858
to	O	O:0.999921
sum	O	O:0.999751
values	O	O:0.999480
in	O	O:0.999987
a	O	O:0.999989
numpy	O	O:0.993574
structured	O	O:0.998848
array	O	O:0.999614
based	O	O:0.999176
on	O	O:0.999959
multiple	O	O:0.998884
criteria	O	O:0.996542
,	O	O:0.999989
including	O	O:0.999730
matches	O	O:0.994545
in	O	O:0.999858
a	O	O:0.999983
list	O	O:0.960231
.	O	O:0.999556
	
to	O	O:0.999887
delete	O	O:0.999820
the	O	O:0.999927
lines	O	O:0.999318
that	O	O:0.999807
had	O	O:0.999970
zeros	O	O:0.999442
in	O	O:0.999996
them	O	O:0.999014
!	O	O:0.999959
	
Fill	O	O:0.995384
scipy	O	O:0.999205
/	O	O:0.999770
numpy	O	O:0.988156
matrix	O	O:0.991838
based	O	O:0.998159
on	O	O:0.999807
indices	O	O:0.985543
and	O	O:0.999893
values	O	O:0.991628
	
It	O	O:0.999900
looks	O	O:0.999931
like	O	O:0.999889
a	O	O:0.999960
vector	O	O:0.991759
product	O	O:0.996087
followed	O	O:0.999900
by	O	O:0.999971
a	O	O:0.999988
sum	O	O:0.996863
along	O	O:0.999706
the	O	O:0.999861
resulting	O	O:0.995073
array	O	O:0.996133
.	O	O:0.999821
	
The	O	O:0.999924
trick	O	O:0.994711
is	O	O:0.999957
that	O	O:0.999855
this	O	O:0.999984
convolve	B-API	O:0.818410
function	O	O:0.999818
can	O	O:0.999818
be	O	O:0.999989
used	O	O:0.999869
in-place	O	O:0.998778
so	O	O:0.999923
the	O	O:0.999961
double	O	O:0.994997
for	O	O:0.999926
loop	O	O:0.991567
:	O	O:0.999969
#CODE	O	O:0.999053
	
But	O	O:0.999918
this	O	O:0.999339
reshape	B-API	B-API:0.562094
should	O	O:0.999724
produce	O	O:0.999711
a	O	O:0.999908
`	O	O:0.999703
(	O	O:0.999871
n	O	O:0.999870
,	O	O:0.999988
1	O	O:0.999989
,	O	O:0.999981
1	O	O:0.999974
)`	O	O:0.999928
array	O	O:0.998093
,	O	O:0.999996
not	O	O:0.999978
your	O	O:0.998842
`	O	O:0.999952
(	O	O:0.999927
1	O	O:0.999991
,	O	O:0.999987
1	O	O:0.999984
,	O	O:0.999915
1	O	O:0.999959
,...	O	O:0.905640
)`	O	O:0.999893
array	O	O:0.995681
.	O	O:0.999857
	
For	O	O:0.999814
an	O	O:0.999890
extreme	O	O:0.999492
example	O	O:0.999411
,	O	O:0.999996
consider	O	O:0.999927
a	O	O:0.999965
sequence	O	O:0.999772
that	O	O:0.999891
consists	O	O:0.999942
of	O	O:0.999955
9	O	O:0.999929
zeros	O	O:0.999594
followed	O	O:0.999928
by	O	O:0.999964
the	O	O:0.999932
result	O	O:0.999563
of	O	O:0.999981
a	O	O:0.999987
coin	O	O:0.995696
toss	O	O:0.999503
,	O	O:0.999989
9	O	O:0.999930
zeros	O	O:0.998073
and	O	O:0.999845
another	O	O:0.999722
coin	O	O:0.975919
toss	O	O:0.999340
,	O	O:0.999993
etc	O	O:0.999665
.	O	O:0.999418
	
If	O	O:0.999938
so	O	O:0.999992
then	O	O:0.999342
`	O	O:0.999990
np.array	B-API	B-API:0.870682
(	O	O:0.999996
a	O	O:0.999996
)`	O	O:0.999746
is	O	O:0.999964
a	O	O:0.999965
2d	O	O:0.999881
array	O	O:0.997806
,	O	O:0.999947
and	O	O:0.999962
you	O	O:0.999814
can	O	O:0.999816
sum	O	O:0.999965
over	O	O:0.999815
`	O	O:0.999975
axis=1	O	O:0.976079
`	O	O:0.999906
.	O	O:0.998722
	
I	O	O:0.999939
am	O	O:0.999988
trying	O	O:0.999350
to	O	O:0.999950
create	O	O:0.999952
a	O	O:0.999991
lat	O	O:0.976282
/	O	O:0.999758
lon	O	O:0.899918
grid	O	O:0.999784
that	O	O:0.999727
contains	O	O:0.999808
an	O	O:0.999992
array	O	O:0.999881
of	O	O:0.999832
found	O	O:0.997512
indices	O	O:0.998505
where	O	O:0.999249
two	O	O:0.999711
conditions	O	O:0.999127
are	O	O:0.999917
met	O	O:0.999899
for	O	O:0.999961
a	O	O:0.999825
lat	O	O:0.830208
/	O	O:0.999718
lon	O	O:0.767468
combination	O	O:0.994795
.	O	O:0.999583
	
This	O	O:0.999681
NAMBE	O	O:0.997405
is	O	O:0.999978
the	O	O:0.999742
absolute	O	O:0.999693
difference	O	O:0.999555
between	O	O:0.998383
a	O	O:0.999997
base	O	O:0.993695
vector	O	O:0.996988
and	O	O:0.999510
another	O	O:0.998019
vector	O	O:0.992937
,	O	O:0.999927
divided	O	O:0.999641
by	O	O:0.999798
the	O	O:0.999960
base	O	O:0.996416
vector	O	O:0.995007
and	O	O:0.999838
multiplied	O	O:0.999885
by	O	O:0.999870
a	O	O:0.999925
hundred	O	O:0.981513
,	O	O:0.999958
in	O	O:0.999895
pseudo-code	O	O:0.995353
notation	O	O:0.986363
:	O	O:0.999982
#CODE	O	O:0.999581
	
this	O	O:0.999611
my	O	O:0.999966
code	O	O:0.999329
to	O	O:0.999900
and	O	O:0.999966
i	O	O:0.999991
want	O	O:0.999642
to	O	O:0.999814
use	O	O:0.999990
histogram	O	O:0.999490
data	O	O:0.999606
to	O	O:0.999996
plot	O	O:0.999303
scatter	O	O:0.999928
where	O	O:0.999768
y	O	O:0.999933
axis	O	O:0.999626
is	O	O:0.999994
counts	O	O:0.996654
center	O	O:0.999977
from	O	O:0.999655
the	O	O:0.999858
histogram	O	O:0.999270
,	O	O:0.999962
is	O	O:0.999998
there	O	O:0.999563
any	O	O:0.999720
direct	O	O:0.992341
command	O	O:0.997038
or	O	O:0.999973
way	O	O:0.999842
to	O	O:0.999930
do	O	O:0.999996
this	O	O:0.999896
?	O	O:0.999966
	
Please	O	O:0.999354
compile	O	O:0.999058
with	O	O:0.999740
`	O	O:0.999945
cython	O	O:0.998161
-a	O	O:0.999796
`	O	O:0.999827
,	O	O:0.999994
then	O	O:0.999983
show	O	O:0.999908
us	O	O:0.999998
the	O	O:0.999929
C	O	O:0.999877
code	O	O:0.999962
that	O	O:0.999958
the	O	O:0.999980
`	O	O:0.999917
a	O	O:0.999869
[	O	O:0.999993
0	O	O:0.999965
]	O	O:0.999939
+=	O	O:0.998701
sum	O	O:0.993269
`	O	O:0.999993
line	O	O:0.997730
turns	O	O:0.999953
into	O	O:0.999071
.	O	O:0.999922
	
The	O	O:0.999707
revised	O	O:0.999107
question	O	O:0.998130
is	O	O:0.999994
still	O	O:0.999433
a	O	O:0.999992
duplicate	O	O:0.995878
,	O	O:0.999960
see	O	O:0.999772
[	O	O:0.999995
this	O	O:0.999945
question	O	O:0.999737
]	O	O:0.999787
(	O	O:0.999752
#URL	O	O:0.999522
)	O	O:0.999676
,	O	O:0.999502
and	O	O:0.999716
[	O	O:0.999991
this	O	O:0.999725
question	O	O:0.999643
]	O	O:0.999665
(	O	O:0.999819
#URL	O	O:0.999888
)	O	O:0.999950
for	O	O:0.999792
finding	O	O:0.999398
the	O	O:0.997808
indices	O	O:0.946372
.	O	O:0.999613
	
ValueError	O	O:0.992151
:	O	O:0.999976
operands	O	O:0.988935
could	O	O:0.999756
not	O	O:0.999951
be	O	O:0.999994
broadcast	O	O:0.993627
together	O	O:0.999907
with	O	O:0.999770
different	O	O:0.996921
shapes	O	O:0.986956
in	O	O:0.999959
numpy	O	O:0.997919
?	O	O:0.999943
	
There	O	O:0.998669
are	O	O:0.999963
thousands	O	O:0.999925
of	O	O:0.999963
numbers	O	O:0.994348
below	O	O:0.999835
the	O	O:0.999993
ones	O	O:0.995798
shown	O	O:0.999862
here	O	O:0.999806
.	O	O:0.999887
	
Assuming	O	O:0.998877
you	O	O:0.999738
want	O	O:0.999924
to	O	O:0.999976
align	O	O:0.999962
all	O	O:0.999866
the	O	O:0.999891
arrays	O	O:0.998472
to	O	O:0.999948
the	O	O:0.999993
left	O	O:0.981001
,	O	O:0.999958
and	O	O:0.999970
pad	O	O:0.975956
to	O	O:0.999937
the	O	O:0.999983
right	O	O:0.999435
with	O	O:0.999925
zeros	O	O:0.999340
,	O	O:0.999999
then	O	O:0.999891
you	O	O:0.999976
could	O	O:0.999928
first	O	O:0.999966
find	O	O:0.999859
the	O	O:0.999965
maximum	O	O:0.982749
length	O	O:0.996927
with	O	O:0.999196
#CODE	O	O:0.997690
	
How	O	O:0.999921
to	O	O:0.999962
do	O	O:0.999987
the	O	O:0.999994
same	O	O:0.999801
If	O	O:0.999977
I	O	O:0.999999
want	O	O:0.999973
to	O	O:0.999677
apply	O	O:0.991447
norm	O	O:0.525925
column-wise	O	O:0.999928
to	O	O:0.999987
a	O	O:0.999992
matrix	O	O:0.963390
?	O	O:0.999904
	
The	O	O:0.999902
easiest	O	O:0.998918
approach	O	O:0.998895
is	O	O:0.999939
to	O	O:0.999870
reshape	O	O:0.984498
to	O	O:0.999996
data	O	O:0.999995
to	O	O:0.999992
a	O	O:0.999999
long	O	O:0.999380
format	O	O:0.999756
using	O	O:0.998336
`	O	O:0.998389
.stack	B-API	B-API:0.999613
`	O	O:0.999899
,	O	O:0.999968
which	O	O:0.999952
can	O	O:0.999786
be	O	O:0.999998
be	O	O:0.999979
passed	O	O:0.993465
straight	O	O:0.999656
into	O	O:0.999621
rolling	O	O:0.995576
mean	O	O:0.862782
.	O	O:0.999843
	
It's	O	O:0.999039
pretty	O	O:0.995914
low-level	O	O:0.996225
,	O	O:0.999649
and	O	O:0.999815
mostly	O	O:0.997209
focused	O	O:0.998406
on	O	O:0.999888
how	O	O:0.999927
to	O	O:0.999985
address	O	O:0.999923
the	O	O:0.999989
more	O	O:0.999316
difficult	O	O:0.999964
problem	O	O:0.999764
of	O	O:0.999977
how	O	O:0.999564
to	O	O:0.999993
pass	O	O:0.999689
C++	O	O:0.999992
data	O	O:0.999895
to	O	O:0.999884
and	O	O:0.999993
from	O	O:0.999498
NumPy	O	O:0.997110
without	O	O:0.999369
copying	O	O:0.811543
,	O	O:0.999876
but	O	O:0.999774
here's	O	O:0.999019
how	O	O:0.999425
you'd	O	O:0.999964
do	O	O:0.999959
a	O	O:0.999988
copied	O	O:0.994964
std	O	O:0.895424
::	O	O:0.999933
vector	O	O:0.994178
return	O	O:0.984186
with	O	O:0.999123
that	O	O:0.993272
:	O	O:0.999991
#CODE	O	O:0.999580
	
`	O	O:0.999768
std	O	O:0.919521
=	O	O:0.999980
RMS	O	O:0.999671
(	O	O:0.999994
data	O	O:0.999561
-	O	O:0.999999
mean	O	O:0.994481
)`	O	O:0.999906
.	O	O:0.999280
	
This	O	O:0.999075
generalized	O	O:0.999669
diagonal	O	O:0.995697
would	O	O:0.999803
be	O	O:0.999979
defined	O	O:0.999851
as	O	O:0.999977
those	O	O:0.999878
elements	O	O:0.999795
of	O	O:0.999963
the	O	O:0.999846
array	O	O:0.998825
whose	O	O:0.997668
0th	O	O:0.998887
and	O	O:0.998607
2nd	O	O:0.998862
index	O	O:0.991887
coincide	O	O:0.983799
,	O	O:0.999954
and	O	O:0.999516
would	O	O:0.999730
have	O	O:0.999107
shape	O	O:0.999793
(	O	O:0.999980
3	O	O:0.999937
,	O	O:0.999982
3	O	O:0.999951
,	O	O:0.999983
7	O	O:0.999884
)	O	O:0.999600
.	O	O:0.998776
	
I	O	O:0.999993
have	O	O:0.999919
a	O	O:0.999966
given	O	O:0.999201
array	O	O:0.998400
`	O	O:0.999942
[	O	O:0.999719
0	O	O:0.999990
,	O	O:0.999985
0	O	O:0.999966
,	O	O:0.999966
0	O	O:0.999962
,	O	O:0.999968
0	O	O:0.999962
,	O	O:0.999968
0	O	O:0.999964
,	O	O:0.999969
0	O	O:0.999971
,	O	O:0.999971
1	O	O:0.999967
,	O	O:0.999972
1	O	O:0.999973
,	O	O:0.999974
2	O	O:0.999984
,	O	O:0.999970
1	O	O:0.999964
,	O	O:0.999969
0	O	O:0.999978
,	O	O:0.999971
0	O	O:0.999966
,	O	O:0.999968
0	O	O:0.999964
,	O	O:0.999969
0	O	O:0.999970
,	O	O:0.999970
1	O	O:0.999961
,	O	O:0.999972
0	O	O:0.999983
,	O	O:0.999972
1	O	O:0.999955
,	O	O:0.999971
2	O	O:0.999982
,	O	O:0.999970
1	O	O:0.999964
,	O	O:0.999968
0	O	O:0.999969
,	O	O:0.999957
2	O	O:0.999939
,	O	O:0.999966
3	O	O:0.999000
`]	O	O:0.968425
(	O	O:0.999922
arbitrary	O	O:0.999905
elements	O	O:0.999814
from	O	O:0.999497
0-5	O	O:0.998707
)	O	O:0.999951
and	O	O:0.998390
I	O	O:0.999996
want	O	O:0.999343
to	O	O:0.999813
have	O	O:0.999993
a	O	O:0.999994
counter	O	O:0.994275
for	O	O:0.999956
the	O	O:0.999938
occurence	O	O:0.999434
of	O	O:0.999952
zeros	O	O:0.999626
in	O	O:0.999997
a	O	O:0.999922
row	O	O:0.997622
.	O	O:0.999337
	
To	O	O:0.999974
see	O	O:0.999923
the	O	O:0.999976
benefits	O	O:0.999349
of	O	O:0.999991
this	O	O:0.999546
,	O	O:0.999996
you	O	O:0.999954
need	O	O:0.999682
to	O	O:0.999983
use	O	O:0.999984
`	O	O:0.999911
z	O	O:0.996944
,	O	O:0.999997
p	O	O:0.995256
,	O	O:0.999988
k	O	O:0.999809
=	O	O:0.999851
butter	O	O:0.823208
(	O	O:0.999966
output=	O	O:0.996476
'	O	O:0.999840
zpk	O	O:0.990597
')`	O	O:0.998985
and	O	O:0.999813
then	O	O:0.997662
work	O	O:0.999392
with	O	O:0.999868
poles	O	O:0.963986
and	O	O:0.999947
zeros	O	O:0.999291
instead	O	O:0.999296
of	O	O:0.999883
numerator	O	O:0.995647
and	O	O:0.999820
denominator	O	O:0.998341
.	O	O:0.997375
	
In	O	O:0.999972
that	O	O:0.999881
case	O	O:0.999890
you	O	O:0.999797
would	O	O:0.999689
"	O	O:0.999980
extrapolate	O	O:0.982072
"	O	O:0.999986
zeros	O	O:0.999342
to	O	O:0.999968
the	O	O:0.999992
left	O	O:0.934610
and	O	O:0.999886
the	O	O:0.999837
right	O	O:0.991634
.	O	O:0.999657
	
can	O	O:0.999442
numpy	O	O:0.999722
interpret	O	O:0.999908
column	O	O:0.999599
of	O	O:0.999845
indices	O	O:0.996669
like	O	O:0.999615
matlab	O	O:0.999648
does	O	O:0.990658
	
To	O	O:0.999965
get	O	O:0.999589
the	O	O:0.999966
diagonal	O	O:0.999140
elements	O	O:0.999959
you	O	O:0.999956
can	O	O:0.999958
get	O	O:0.999975
their	O	O:0.999713
indices	O	O:0.998920
with	O	O:0.999391
`	O	O:0.999901
np.triu_indices	B-API	B-API:0.919604
`	O	O:0.999904
(	O	O:0.999986
or	O	O:0.999991
,	O	O:0.999980
for	O	O:0.999991
the	O	O:0.999751
lower	O	O:0.998911
triangle	O	O:0.999670
,	O	O:0.999937
`	O	O:0.999960
np.tril_indices	B-API	B-API:0.962516
`)	O	O:0.999496
and	O	O:0.999754
then	O	O:0.999183
index	O	O:0.999451
by	O	O:0.999992
them	O	O:0.999008
.	O	O:0.999702
	
The	O	O:0.999893
question	O	O:0.999013
states	O	O:0.999550
that	O	O:0.999288
the	O	O:0.999968
input	O	O:0.999669
array	O	O:0.999513
is	O	O:0.999981
of	O	O:0.999967
shape	O	O:0.997297
`	O	O:0.999857
(	O	O:0.999719
128	O	O:0.999731
,	O	O:0.999975
36	O	O:0.999832
,	O	O:0.999956
8)	O	O:0.997737
`	O	O:0.999518
and	O	O:0.999715
we	O	O:0.999958
are	O	O:0.998626
interested	O	O:0.999851
in	O	O:0.999840
finding	O	O:0.998946
unique	O	O:0.999016
subarrays	O	O:0.999617
of	O	O:0.999920
length	O	O:0.993901
`	O	O:0.999962
8	O	O:0.997285
`	O	O:0.999980
in	O	O:0.999691
the	O	O:0.999992
last	O	O:0.998062
dimension	O	O:0.999348
.	O	O:0.999745
	
What	O	O:0.999741
does	O	O:0.998995
work	O	O:0.997684
,	O	O:0.999991
however	O	O:0.999550
is	O	O:0.999955
nesting	O	O:0.985245
append	B-API	B-API:0.777066
and	O	O:0.997509
concatenate	B-API	O:0.616268
#CODE	O	O:0.997893
	
(	O	O:0.999843
`	O	O:0.999980
b	O	O:0.995892
`	O	O:0.999992
will	O	O:0.996483
be	O	O:0.999994
broadcast	O	O:0.994992
along	O	O:0.996830
(	O	O:0.999966
?	O	O:0.999976
)	O	O:0.999944
the	O	O:0.999811
first	O	O:0.999814
axis	O	O:0.999358
)	O	O:0.999697
#CODE	O	O:0.998290
	
As	O	O:0.999950
he	O	O:0.999956
points	O	O:0.998893
out	O	O:0.999922
,	O	O:0.999984
the	O	O:0.999515
`	O	O:0.999866
[	O	O:0.999945
0	O	O:0.999987
]	O	O:0.999987
[	O	O:0.999846
1	O	O:0.999956
]`	O	O:0.999929
element	O	O:0.992860
is	O	O:0.999988
what	O	O:0.997787
you'd	O	O:0.999939
want	O	O:0.999783
for	O	O:0.999749
`	O	O:0.999906
cov	B-API	O:0.676607
(	O	O:0.999997
a	O	O:0.999964
,	O	O:0.999984
b	O	O:0.999630
)`	O	O:0.999506
.	O	O:0.998718
	
returns	O	O:0.999052
`	O	O:0.999936
1	O	O:0.999495
`	O	O:0.999977
,	O	O:0.999951
making	O	O:0.999836
the	O	O:0.999348
sum	O	O:0.994149
not	O	O:0.999761
commutative	O	O:0.999573
!	O	O:0.999985
	
But	O	O:0.999962
as	O	O:0.999880
I	O	O:0.999994
have	O	O:0.999941
a	O	O:0.999982
log	O	O:0.999858
of	O	O:0.999821
values	O	O:0.965735
(	O	O:0.999985
10000+	O	O:0.998145
)	O	O:0.999295
,	O	O:0.999969
this	O	O:0.999955
will	O	O:0.999282
be	O	O:0.999970
quite	O	O:0.999717
slow	O	O:0.998632
.	O	O:0.999780
	
@USER	O	O:0.997032
-	O	O:0.999988
good	O	O:0.999121
point	O	O:0.999411
.	O	O:0.999949
anyway	O	O:0.999717
,	O	O:0.999916
`	O	O:0.999977
diff	B-API	B-API:0.974625
`	O	O:0.999967
works	O	O:0.999213
on	O	O:0.999982
python	O	O:0.999538
lists	O	O:0.999503
too	O	O:0.999527
.	O	O:0.999734
	
It	O	O:0.999876
will	O	O:0.999032
also	O	O:0.999834
work	O	O:0.999410
if	O	O:0.999991
they	O	O:0.999795
are	O	O:0.999912
both	O	O:0.998249
arrays	O	O:0.999977
that	O	O:0.999604
can	O	O:0.999827
be	O	O:0.999989
broadcast	O	O:0.988687
.	O	O:0.999382
	
It's	O	O:0.999669
column	O	O:0.998700
stack	O	O:0.975148
that	O	O:0.999729
requires	O	O:0.999964
equal	O	O:0.999061
length	O	O:0.998929
strings	O	O:0.993712
.	O	O:0.999144
	
In	O	O:0.999864
the	O	O:0.999680
end	O	O:0.995026
it	O	O:0.999829
is	O	O:0.999977
usually	O	O:0.999198
not	O	O:0.999334
too	O	O:0.999796
complicated	O	O:0.999445
,	O	O:0.999996
especially	O	O:0.999904
if	O	O:0.999976
you	O	O:0.999795
use	O	O:0.999607
[	O	O:0.999780
`	O	O:0.999883
mgrid	B-API	B-API:0.991286
`]	O	O:0.981031
(	O	O:0.999840
#URL	O	O:0.999891
)	O	O:0.999957
or	O	O:0.999961
similar	O	O:0.999927
to	O	O:0.999976
get	O	O:0.999897
the	O	O:0.999859
indices	O	O:0.975842
.	O	O:0.999756
	
The	O	O:0.999909
absolute	O	O:0.999152
error	O	O:0.999516
will	O	O:0.999558
be	O	O:0.999924
at	O	O:0.999993
most	O	O:0.997680
1	O	O:0.999956
/	O	O:0.999738
2	O	O:0.999790
ULP	O	O:0.999498
,	O	O:0.999949
2	O	O:0.999577
-150	O	O:0.773390
.	O	O:0.999071
	
AttributeError	O	O:0.997174
:	O	O:0.999919
'	O	O:0.999870
Add	O	O:0.999602
'	O	O:0.999876
object	O	O:0.999483
has	O	O:0.999964
no	O	O:0.999900
attribute	O	O:0.999811
'	O	O:0.999930
log	O	O:0.998913
'	O	O:0.999769
Python	O	O:0.995747
	
Or	O	O:0.999939
,	O	O:0.999967
you	O	O:0.999586
could	O	O:0.999684
initialize	O	O:0.999945
an	O	O:0.999992
array	O	O:0.999877
of	O	O:0.999964
all	O	O:0.999126
zeros	O	O:0.999859
if	O	O:0.999944
you	O	O:0.999946
know	O	O:0.999723
the	O	O:0.999998
size	O	O:0.999790
of	O	O:0.999989
the	O	O:0.999956
array	O	O:0.999880
ahead	O	O:0.999610
of	O	O:0.999967
time	O	O:0.999184
.	O	O:0.999836
	
Are	O	O:0.999813
you	O	O:0.999794
checking	O	O:0.999856
shape	O	O:0.999857
or	O	O:0.999983
number	O	O:0.999492
of	O	O:0.999958
nonzero	O	O:0.994382
values	O	O:0.999346
?	O	O:0.999951
	
Something	O	O:0.999777
like	O	O:0.996358
`	O	O:0.999963
eigvals	O	O:0.962791
,	O	O:0.999995
eigvecs	O	O:0.995839
=	O	O:0.999943
la.eigh	O	O:0.975222
(	O	O:0.999986
mat	B-API	O:0.998817
)`	O	O:0.999792
`	O	O:0.999910
principal	O	O:0.997217
=	O	O:0.999993
eigvecs	O	O:0.937226
[:	O	O:0.999984
,	O	O:0.999985
eigvals.argmax()	O	O:0.970619
]`	O	O:0.999416
`	O	O:0.999805
if	O	O:0.998996
(	O	O:0.999996
principal	O	O:0.983326
>	O	O:0.999971
=	O	O:0.999953
0	O	O:0.999973
)	O	O:0.999925
.all()	O	B-API:0.991419
or	O	O:0.999293
(	O	O:0.999971
pricipal	O	O:0.997913
<=	O	O:0.999853
0	O	O:0.999870
)	O	O:0.999743
.all()	O	B-API:0.998005
:	O	O:0.999991
print	O	O:0.995266
'	O	O:0.999965
all	O	O:0.999455
the	O	O:0.999987
same	O	O:0.995439
'`	O	O:0.999908
?	O	O:0.999978
	
I	O	O:0.999965
also	O	O:0.999882
want	O	O:0.999867
bins	O	O:0.993790
to	O	O:0.999997
have	O	O:0.999970
a	O	O:0.999993
width	O	O:0.999883
of	O	O:0.999930
.5	O	O:0.991131
so	O	O:0.999997
that	O	O:0.999960
I	O	O:0.999997
can	O	O:0.999987
have	O	O:0.999901
a	O	O:0.999994
bin	O	O:0.998638
from	O	O:0.999584
10.5	O	O:0.989470
to	O	O:0.999978
11	O	O:0.999981
or	O	O:0.999953
24	O	O:0.999820
to	O	O:0.999946
24.5	O	O:0.997781
etc	O	O:0.999806
...	O	O:0.999323
because	O	O:0.999301
otherwise	O	O:0.999792
,	O	O:0.999983
python	O	O:0.999530
outputs	O	O:0.999887
the	O	O:0.999917
histogram	O	O:0.998879
with	O	O:0.999689
the	O	O:0.999942
bins	O	O:0.998246
random	O	O:0.993297
and	O	O:0.999698
undetermined	O	O:0.998574
.	O	O:0.997592
	
Maximum	O	O:0.994199
is	O	O:0.999964
always	O	O:0.999150
bigger	O	O:0.999953
than	O	O:0.998983
the	O	O:0.999731
minimum	O	O:0.982605
(	O	O:0.999998
more	O	O:0.999795
to	O	O:0.999991
the	O	O:0.999994
right	O	O:0.999606
on	O	O:0.999993
a	O	O:0.999985
1d	O	O:0.999980
axis	O	O:0.998647
,	O	O:0.999985
not	O	O:0.999900
by	O	O:0.999959
absolute	O	O:0.999939
value	O	O:0.999022
)	O	O:0.999778
.	O	O:0.998416
	
should	O	O:0.999641
give	O	O:0.999804
the	O	O:0.999994
sum	O	O:0.998556
of	O	O:0.999980
the	O	O:0.999839
columns	O	O:0.998100
.	O	O:0.999806
	
Suppose	O	O:0.998543
,	O	O:0.999947
You	O	O:0.999972
wanna	O	O:0.999370
check	O	O:0.991102
how	O	O:0.999979
many	O	O:0.999525
times	O	O:0.999323
you	O	O:0.999927
will	O	O:0.999652
get	O	O:0.999865
six	O	O:0.999814
if	O	O:0.999966
you	O	O:0.999954
roll	O	O:0.763574
dice	O	O:0.999656
10	O	O:0.999952
times	O	O:0.997684
.	O	O:0.999750
	
With	O	O:0.999839
this	O	O:0.998920
option	O	O:0.999514
,	O	O:0.999989
the	O	O:0.999508
result	O	O:0.995491
will	O	O:0.999535
broadcast	O	O:0.998797
correctly	O	O:0.999322
	
Do	O	O:0.999923
you	O	O:0.999967
mean	O	O:0.983105
`	O	O:0.999980
indices	O	O:0.994065
=	O	O:0.999989
np.where	B-API	B-API:0.790179
(	O	O:0.999985
a	O	O:0.999997
==	O	O:0.999912
a.max()	O	B-API:0.611663
)`	O	O:0.999493
in	O	O:0.999967
line	O	O:0.999764
3	O	O:0.999941
?	O	O:0.999957
	
The	O	O:0.999962
problem	O	O:0.995410
I	O	O:0.999980
have	O	O:0.999920
much	O	O:0.999208
later	O	O:0.999931
on	O	O:0.999868
in	O	O:0.999924
the	O	O:0.999990
code	O	O:0.995949
is	O	O:0.999998
that	O	O:0.999763
if	O	O:0.999997
one	O	O:0.999891
of	O	O:0.999917
these	O	O:0.999604
parameters	O	O:0.996897
isn't	O	O:0.999640
in	O	O:0.999918
the	O	O:0.999617
ASCII	O	O:0.999195
file	O	O:0.999435
it	O	O:0.999969
throws	O	O:0.999935
errors	O	O:0.999835
up	O	O:0.999973
so	O	O:0.999933
I	O	O:0.999999
have	O	O:0.999887
to	O	O:0.999959
keep	O	O:0.999874
adding	O	O:0.999708
in	O	O:0.999979
ones	O	O:0.998585
I	O	O:0.999987
don't	O	O:0.999938
need	O	O:0.989242
.	O	O:0.999524
	
`	O	O:0.999602
append	B-API	B-API:0.889159
`	O	O:0.999968
adds	O	O:0.999960
them	O	O:0.999969
to	O	O:0.999986
the	O	O:0.999995
end	O	O:0.998792
of	O	O:0.999833
the	O	O:0.999930
list	O	O:0.994418
,	O	O:0.999974
which	O	O:0.998827
is	O	O:0.999983
exactly	O	O:0.999630
what	O	O:0.999684
you	O	O:0.999883
want	O	O:0.999350
.	O	O:0.999487
	
I	O	O:0.999985
have	O	O:0.999674
two	O	O:0.999458
3dim	O	O:0.999872
numpy	O	O:0.996988
matrices	O	O:0.998049
and	O	O:0.999771
I	O	O:0.999993
want	O	O:0.999773
to	O	O:0.999807
do	O	O:0.999997
a	O	O:0.999993
dot	O	O:0.999287
product	O	O:0.999704
according	O	O:0.999748
to	O	O:0.999785
one	O	O:0.999983
axis	O	O:0.999842
without	O	O:0.999874
using	O	O:0.998624
a	O	O:0.999725
loop	O	O:0.974221
in	O	O:0.999619
theano	O	O:0.993747
.	O	O:0.999555
	
you	O	O:0.999903
have	O	O:0.999486
at	O	O:0.999997
most	O	O:0.999450
4	O	O:0.999940
in	O	O:0.999983
that	O	O:0.999514
dimension	O	O:0.999544
(	O	O:0.999988
see	O	O:0.999984
your	O	O:0.999565
reshape	O	O:0.956568
line	O	O:0.999764
)	O	O:0.999974
,	O	O:0.999928
so	O	O:0.999905
the	O	O:0.999596
index	O	O:0.994027
it	O	O:0.999981
will	O	O:0.999891
count	O	O:0.998746
are	O	O:0.999888
0	O	O:0.999905
and	O	O:0.999368
2	O	O:0.999582
(	O	O:0.999838
1	O	O:0.999716
and	O	O:0.999853
3	O	O:0.999876
are	O	O:0.999078
skipped	O	O:0.998312
,	O	O:0.999938
and	O	O:0.999910
3	O	O:0.999596
is	O	O:0.999923
the	O	O:0.999912
last	O	O:0.998741
element	O	O:0.999284
)	O	O:0.999626
.	O	O:0.999291
	
Once	O	O:0.999312
we	O	O:0.999986
have	O	O:0.999262
the	O	O:0.999977
indices	O	O:0.996727
to	O	O:0.999993
sort	O	O:0.999707
`	O	O:0.999999
data	O	O:0.998280
`	O	O:0.999994
,	O	O:0.999976
to	O	O:0.999996
get	O	O:0.999980
a	O	O:0.999985
sorted	O	O:0.999973
copy	O	O:0.982156
of	O	O:0.999972
the	O	O:0.999645
array	O	O:0.999466
it	O	O:0.999897
is	O	O:0.999983
faster	O	O:0.999967
to	O	O:0.999941
use	O	O:0.999889
the	O	O:0.999323
indices	O	O:0.997924
than	O	O:0.999887
to	O	O:0.999953
re-sort	O	O:0.999261
the	O	O:0.999863
array	O	O:0.991719
:	O	O:0.999965
#CODE	O	O:0.999574
	
I	O	O:0.999946
hope	O	O:0.999866
this	O	O:0.999461
will	O	O:0.999813
help	O	O:0.998045
you	O	O:0.999893
perform	O	O:0.999710
your	O	O:0.999788
transpose	O	O:0.764912
and	O	O:0.999706
column-wise	O	O:0.999492
operations	O	O:0.997550
	
It	O	O:0.999742
is	O	O:0.999940
better	O	O:0.999829
to	O	O:0.999939
specify	O	O:0.999910
that	O	O:0.999712
I'm	O	O:0.999979
looking	O	O:0.999782
for	O	O:0.999849
something	O	O:0.999825
that	O	O:0.999156
performs	O	O:0.999891
the	O	O:0.999902
log-sum-exp	O	O:0.999372
trick	O	O:0.999325
,	O	O:0.999998
doing	O	O:0.999947
a	O	O:0.999945
simply	O	O:0.997816
succession	O	O:0.999856
of	O	O:0.999919
exp	O	O:0.797994
elem-wise	O	O:0.998179
,	O	O:0.999981
summing	O	O:0.999875
the	O	O:0.999929
rows	O	O:0.995981
and	O	O:0.999985
doing	O	O:0.999913
a	O	O:0.999879
log	O	O:0.996220
elem-wise	O	O:0.933401
is	O	O:0.999895
trivial	O	O:0.998135
in	O	O:0.999797
`	O	O:0.999885
scipy.sparse	O	B-API:0.987010
`	O	O:0.999829
.	O	O:0.998987
	
Scipy	O	O:0.999720
uses	O	O:0.992128
`	O	O:0.999867
int32	O	O:0.959046
`	O	O:0.999988
to	O	O:0.999885
store	O	O:0.999474
`	O	O:0.999950
indptr	O	O:0.961696
`	O	O:0.999944
and	O	O:0.992027
`	O	O:0.999986
indices	O	O:0.940880
`	O	O:0.999983
for	O	O:0.999716
the	O	O:0.999934
sparse	O	O:0.994649
formats	O	O:0.996659
.	O	O:0.999765
	
But	O	O:0.999606
not	O	O:0.999853
able	O	O:0.999465
to	O	O:0.999987
plot	O	O:0.999671
it	O	O:0.999997
as	O	O:0.999995
a	O	O:0.999967
graph	O	O:0.995152
(	O	O:0.999979
something	O	O:0.999900
like	O	O:0.999751
a	O	O:0.999996
histogram	O	O:0.960701
)	O	O:0.999776
...	O	O:0.999620
that	O	O:0.999161
is	O	O:0.999986
the	O	O:0.999742
problem	O	O:0.991593
.	O	O:0.999632
	
It	O	O:0.999983
gave	O	O:0.999644
error	O	O:0.999833
testing	O	O:0.999303
doesnot	O	O:0.999581
have	O	O:0.999847
attribute	O	O:0.999868
append	O	O:0.841577
as	O	O:0.999901
its	O	O:0.999290
of	O	O:0.999885
None	O	O:0.975258
Type	O	O:0.992318
.	O	O:0.998889
	
In	O	O:0.999975
both	O	O:0.999727
cases	O	O:0.999135
,	O	O:0.999999
you	O	O:0.999950
can	O	O:0.998200
access	O	O:0.999921
individual	O	O:0.999435
elements	O	O:0.999638
by	O	O:0.999906
indices	O	O:0.993382
,	O	O:0.999996
like	O	O:0.999756
`	O	O:0.999882
R	O	O:0.999904
[	O	O:0.999994
0	O	O:0.999796
]`	O	O:0.999623
(	O	O:0.999743
which	O	O:0.999185
would	O	O:0.999937
give	O	O:0.999897
you	O	O:0.999989
a	O	O:0.999986
specific	O	O:0.996728
object	O	O:0.999606
,	O	O:0.999995
a	O	O:0.999875
`	O	O:0.999667
np.void	O	B-API:0.867912
`	O	O:0.999845
,	O	O:0.999993
that	O	O:0.999957
still	O	O:0.999801
gives	O	O:0.999849
you	O	O:0.999911
the	O	O:0.999992
possibility	O	O:0.999013
to	O	O:0.999961
access	O	O:0.999978
the	O	O:0.999940
fields	O	O:0.998888
separately	O	O:0.999742
)	O	O:0.999949
,	O	O:0.999972
or	O	O:0.999993
by	O	O:0.999850
slices	O	O:0.998758
`	O	O:0.999906
R	O	O:0.999964
[	O	O:0.999985
1	O	O:0.999776
:	O	O:0.999990
-1	O	O:0.999591
]`	O	O:0.999794
...	O	O:0.990067
	
I	O	O:0.999985
think	O	O:0.999962
you	O	O:0.999512
can	O	O:0.999967
have	O	O:0.999988
a	O	O:0.999998
sum	O	O:0.999656
over	O	O:0.999930
a	O	O:0.999969
sliding	O	O:0.812921
window	O	O:0.992819
(	O	O:0.999979
or	O	O:0.999978
a	O	O:0.999946
rolling	O	O:0.698765
window	O	O:0.997436
)	O	O:0.999948
or	O	O:0.999906
a	O	O:0.999994
mean	O	O:0.997694
over	O	O:0.999919
a	O	O:0.999969
sliding	O	O:0.782687
window	O	O:0.991071
.	O	O:0.999207
	
I	O	O:0.999913
got	O	O:0.999969
your	O	O:0.998095
point	O	O:0.998111
and	O	O:0.999761
I	O	O:0.999980
find	O	O:0.998463
it	O	O:0.999898
more	O	O:0.998869
logical	O	O:0.947974
,	O	O:0.999980
but	O	O:0.999837
when	O	O:0.998310
trying	O	O:0.999583
the	O	O:0.999946
code	O	O:0.998159
you've	O	O:0.999952
suggested	O	O:0.999937
to	O	O:0.999990
get	O	O:0.999984
rid	O	O:0.999948
of	O	O:0.999960
the	O	O:0.999655
second	O	O:0.999816
error	O	O:0.999521
I	O	O:0.999993
got	O	O:0.999925
another	O	O:0.997915
error	O	O:0.997537
:	O	O:0.999865
`	O	O:0.999902
AttributeError	O	O:0.998985
:	O	O:0.999993
flatten	B-API	O:0.714755
`	O	O:0.999897
	
`	O	O:0.999927
dot	B-API	O:0.991826
`	O	O:0.999996
does	O	O:0.999526
many	O	O:0.999933
things	O	O:0.999863
under	O	O:0.998932
the	O	O:0.999700
hood	O	O:0.993424
,	O	O:0.999993
it	O	O:0.999976
is	O	O:0.999973
apparent	O	O:0.999943
that	O	O:0.997284
`	O	O:0.999928
np.dot	B-API	B-API:0.931193
(	O	O:0.999975
A	O	O:0.999958
,	O	O:0.999994
x	O	O:0.999666
)`	O	O:0.999119
is	O	O:0.999965
not	O	O:0.999734
calling	O	O:0.997823
BLAS	O	O:0.998802
and	O	O:0.999693
is	O	O:0.999930
somehow	O	O:0.999365
defaulting	O	O:0.999905
over	O	O:0.999735
to	O	O:0.999795
numpy's	O	O:0.999925
internal	O	O:0.997310
GEMM	O	O:0.999847
routine	O	O:0.992004
.	O	O:0.999395
	
Below	O	O:0.997585
is	O	O:0.999981
some	O	O:0.999852
code	O	O:0.999649
which	O	O:0.999985
uses	O	O:0.999900
a	O	O:0.999984
callback	O	O:0.997318
to	O	O:0.999980
print	O	O:0.998918
out	O	O:0.999923
the	O	O:0.999447
current	O	O:0.995719
azimuthal	O	O:0.993602
and	O	O:0.999894
elevation	O	O:0.999604
angles	O	O:0.972550
,	O	O:0.999969
as	O	O:0.999987
well	O	O:0.999528
as	O	O:0.999921
append	O	O:0.962082
them	O	O:0.999389
to	O	O:0.999857
a	O	O:0.999999
list	O	O:0.996952
for	O	O:0.999918
further	O	O:0.999233
use	O	O:0.996910
later	O	O:0.994763
.	O	O:0.997952
	
It's	O	O:0.999133
super	O	O:0.999884
alex	O	O:0.998062
,	O	O:0.999996
here	O	O:0.999874
to	O	O:0.999891
answer	O	O:0.999994
NumPy	O	O:0.999430
questions	O	O:0.998288
in	O	O:0.999913
the	O	O:0.999937
blink	O	O:0.695494
of	O	O:0.999947
an	O	O:0.999907
eye	O	O:0.999925
:)	O	O:0.999860
	
Your	O	O:0.999833
solution	O	O:0.999856
of	O	O:0.999971
searching	O	O:0.999810
the	O	O:0.999972
eigenvalues	O	O:0.992586
for	O	O:0.999948
the	O	O:0.999983
ones	O	O:0.997711
you	O	O:0.999936
want	O	O:0.999959
seems	O	O:0.999935
plausible	O	O:0.999520
enough	O	O:0.998974
.	O	O:0.999583
	
If	O	O:0.999966
d	O	O:0.998985
is	O	O:0.999921
larger	O	O:0.999918
than	O	O:0.999299
8	O	O:0.999886
or	O	O:0.999927
9	O	O:0.999688
,	O	O:0.999998
then	O	O:0.999669
bases	O	O:0.999436
will	O	O:0.999822
be	O	O:0.999986
sufficiently	O	O:0.999849
long	O	O:0.999866
that	O	O:0.999598
you	O	O:0.999964
probably	O	O:0.998614
would	O	O:0.999844
be	O	O:0.999965
better	O	O:0.999968
off	O	O:0.999698
going	O	O:0.998630
with	O	O:0.999770
the	O	O:0.999883
other	O	O:0.999822
version	O	O:0.999620
using	O	O:0.999919
the	O	O:0.999714
dot	O	O:0.992694
product	O	O:0.996073
.	O	O:0.999588
	
I'm	O	O:0.999478
not	O	O:0.999882
sure	O	O:0.998652
which	O	O:0.999748
indices	O	O:0.996691
i	O	O:0.999996
need	O	O:0.999661
to	O	O:0.999972
change	O	O:0.999962
to	O	O:0.999818
achieve	O	O:0.999772
the	O	O:0.999904
minimum	O	O:0.958874
and	O	O:0.999892
not	O	O:0.999804
the	O	O:0.999941
maximum	O	O:0.990217
values	O	O:0.994317
.	O	O:0.999859
	
The	O	O:0.999960
dimension	O	O:0.999803
of	O	O:0.999864
`	O	O:0.999830
result	O	O:0.994787
`	O	O:0.999975
has	O	O:0.999779
been	O	O:0.999853
set	O	O:0.999879
earlier	O	O:0.999845
to	O	O:0.999967
the	O	O:0.999989
correct	O	O:0.999279
dimension	O	O:0.999900
,	O	O:0.999999
so	O	O:0.999993
can	O	O:0.999710
check	O	O:0.999664
it	O	O:0.999792
,	O	O:0.999967
but	O	O:0.999901
it	O	O:0.999727
would	O	O:0.999279
be	O	O:0.999996
nice	O	O:0.999917
to	O	O:0.999996
only	O	O:0.999978
use	O	O:0.999955
the	O	O:0.999858
length	O	O:0.997210
of	O	O:0.999263
`	O	O:0.999781
indices	O	O:0.982929
`	O	O:0.999986
to	O	O:0.999810
determine	O	O:0.999924
it	O	O:0.999872
.	O	O:0.999808
	
Alternatively	O	O:0.997348
,	O	O:0.999987
what	O	O:0.999876
about	O	O:0.999819
applying	O	O:0.999082
the	O	O:0.999871
same	O	O:0.993233
function	O	O:0.999591
without	O	O:0.999930
indices	O	O:0.989862
along	O	O:0.999634
the	O	O:0.999853
depth	O	O:0.998905
axes	O	O:0.999624
?	O	O:0.999977
	
Here's	O	O:0.999550
an	O	O:0.999670
O	O	O:0.986459
(	O	O:0.999991
n	O	O:0.999436
log	O	O:0.999950
n	O	O:0.999543
)	O	O:0.999969
algorithm	O	O:0.999275
for	O	O:0.999990
your	O	O:0.998447
problem	O	O:0.989348
.	O	O:0.999678
	
You	O	O:0.999933
need	O	O:0.999282
to	O	O:0.999891
add	O	O:0.999998
axes	O	O:0.999893
to	O	O:0.999901
`	O	O:0.999995
coeffs	O	O:0.971000
`	O	O:0.999992
so	O	O:0.999738
it	O	O:0.999995
will	O	O:0.999699
broadcast	O	O:0.997868
in	O	O:0.999985
the	O	O:0.999817
dimension	O	O:0.997961
(	O	O:0.999997
s	O	O:0.999960
)	O	O:0.999972
you	O	O:0.999459
want	O	O:0.999411
.	O	O:0.999005
	
If	O	O:0.999922
you	O	O:0.999879
want	O	O:0.999773
to	O	O:0.999936
search	O	O:0.999892
for	O	O:0.999979
a	O	O:0.999864
certain	O	O:0.997041
rank	O	O:0.995104
on	O	O:0.999964
B	O	O:0.999943
randomly	O	O:0.999770
,	O	O:0.999973
you	O	O:0.999963
need	O	O:0.999666
to	O	O:0.999993
start	O	O:0.999910
off	O	O:0.999986
with	O	O:0.999915
a	O	O:0.999987
valid	O	O:0.997301
B	O	O:0.999895
with	O	O:0.999297
max	O	O:0.748886
rank	O	O:0.962695
,	O	O:0.999977
and	O	O:0.999943
rotate	O	O:0.999145
a	O	O:0.999939
random	O	O:0.997905
column	O	O:0.999677
j	O	O:0.999937
of	O	O:0.999973
a	O	O:0.999957
random	O	O:0.993692
B	O	O:0.999566
i	O	O:0.999995
by	O	O:0.999956
a	O	O:0.999957
random	O	O:0.975715
amount	O	O:0.996614
.	O	O:0.999253
	
I	O	O:0.999982
want	O	O:0.999813
to	O	O:0.999868
save	O	O:0.999991
some	O	O:0.999951
histogram	O	O:0.999945
data	O	O:0.999966
in	O	O:0.999992
a	O	O:0.999987
csv	O	O:0.999140
file	O	O:0.998605
.	O	O:0.999656
	
I	O	O:0.999982
want	O	O:0.999665
to	O	O:0.999849
read	O	O:0.999945
a	O	O:0.999990
mat	O	O:0.999232
file	O	O:0.999753
back	O	O:0.998740
in	O	O:0.999780
python	O	O:0.998843
but	O	O:0.999786
I	O	O:0.999990
have	O	O:0.999629
trouble	O	O:0.999240
going	O	O:0.999932
back	O	O:0.999558
to	O	O:0.999983
a	O	O:0.999998
graph	O	O:0.998310
,	O	O:0.999982
because	O	O:0.999347
the	O	O:0.999885
mat	O	O:0.998080
file	O	O:0.999940
gives	O	O:0.999850
a	O	O:0.999974
numpy.ndarray	B-API	O:0.939985
type	O	O:0.999437
file	O	O:0.999846
and	O	O:0.999684
I	O	O:0.999997
need	O	O:0.999692
a	O	O:0.999692
sparse	O	O:0.998424
matrix	O	O:0.984627
to	O	O:0.999929
reconstruct	O	O:0.999927
my	O	O:0.999839
graph	O	O:0.998163
.	O	O:0.999738
	
numpy	O	O:0.996653
makes	O	O:0.997465
it	O	O:0.999996
easy	O	O:0.999907
to	O	O:0.999991
translate	O	O:0.999956
python	O	O:0.997266
objects	O	O:0.999907
into	O	O:0.999640
numpy	O	O:0.999682
ndarrays	O	O:0.995313
,	O	O:0.999882
and	O	O:0.999878
will	O	O:0.998858
even	O	O:0.999700
pick	O	O:0.999377
an	O	O:0.999979
appropriate	O	O:0.999819
resulting	O	O:0.999304
data	O	O:0.999938
type	O	O:0.999848
if	O	O:0.999989
one	O	O:0.997846
is	O	O:0.999927
not	O	O:0.998432
specified	O	O:0.998507
:	O	O:0.999953
#CODE	O	O:0.999527
	
This	O	O:0.999175
`	O	O:0.999924
T	O	O:0.993406
`	O	O:0.999971
and	O	O:0.998684
`	O	O:0.999983
X	O	O:0.986670
`	O	O:0.999994
broadcast	O	O:0.946696
together	O	O:0.999990
just	O	O:0.999644
fine	O	O:0.999863
,	O	O:0.999984
for	O	O:0.999981
example	O	O:0.994663
`	O	O:0.999915
T*X	O	O:0.996231
`	O	O:0.999884
works	O	O:0.995222
.	O	O:0.999887
	
I	O	O:0.999993
have	O	O:0.999925
a	O	O:0.999925
numpy	O	O:0.996819
matrix	O	O:0.968303
A	O	O:0.999788
and	O	O:0.999674
I	O	O:0.999993
need	O	O:0.999862
a	O	O:0.998839
function	O	O:0.999697
that	O	O:0.999677
will	O	O:0.999565
count	O	O:0.984541
(	O	O:0.999967
A	O	O:0.999844
[	O	O:0.999992
i	O	O:0.999985
,	O	O:0.999997
j	O	O:0.999682
]	O	O:0.999911
/	O	O:0.999873
sum	O	O:0.999429
of	O	O:0.999960
all	O	O:0.999198
elements	O	O:0.999527
in	O	O:0.999645
i-th	O	O:0.999853
column	O	O:0.998393
)	O	O:0.999926
-	O	O:0.999886
A	O	O:0.999796
[	O	O:0.999985
i	O	O:0.999972
,	O	O:0.999996
j	O	O:0.999682
]	O	O:0.999911
/	O	O:0.999873
sum	O	O:0.999429
of	O	O:0.999960
all	O	O:0.999110
elements	O	O:0.999663
in	O	O:0.999885
j-th	O	O:0.999368
row	O	O:0.999014
	
This	O	O:0.999649
also	O	O:0.999384
works	O	O:0.999943
if	O	O:0.999620
,	O	O:0.999992
instead	O	O:0.999774
of	O	O:0.999960
a	O	O:0.999754
single	O	O:0.997481
index	O	O:0.996988
,	O	O:0.999982
you	O	O:0.999956
provide	O	O:0.999091
an	O	O:0.999993
array	O	O:0.999627
of	O	O:0.999788
indices	O	O:0.858306
:	O	O:0.999975
#CODE	O	O:0.999422
	
How	O	O:0.999858
to	O	O:0.999956
solve	O	O:0.999957
nonlinear	O	O:0.998679
equation	O	O:0.999652
without	O	O:0.999672
sympy	O	O:0.956121
(	O	O:0.999868
max	O	O:0.551094
and	O	O:0.999743
min	O	O:0.859519
)	O	O:0.999512
?	O	O:0.999643
	
Bivariate	O	O:0.998785
Legendre	O	O:0.997783
Polynomial	O	O:0.860713
Fitting	O	O:0.998516
to	O	O:0.999537
find	O	O:0.999924
orthogonal	O	O:0.999645
coefficents	O	O:0.998692
	
I	O	O:0.999993
have	O	O:0.999868
a	O	O:0.999942
big	O	O:0.998927
n-square	O	O:0.997916
diagonal	O	O:0.997659
matrix	O	O:0.992987
,	O	O:0.999966
in	O	O:0.999966
the	O	O:0.999825
scipy's	O	O:0.999596
sparse	O	O:0.998870
DIA	O	O:0.999777
format	O	O:0.998375
	
To	O	O:0.999973
find	O	O:0.999222
the	O	O:0.999989
most	O	O:0.998944
frequent	O	O:0.999971
value	O	O:0.999908
of	O	O:0.999990
a	O	O:0.999975
flat	O	O:0.999069
array	O	O:0.999540
,	O	O:0.999982
use	O	O:0.999083
`	O	O:0.999711
unique	B-API	O:0.912750
`	O	O:0.999968
,	O	O:0.998969
`	O	O:0.999983
bincount	B-API	B-API:0.968278
`	O	O:0.999922
and	O	O:0.997680
`	O	O:0.998877
argmax	B-API	B-API:0.998164
`	O	O:0.998927
:	O	O:0.999687
#CODE	O	O:0.999839
	
The	O	O:0.999748
funny	O	O:0.999884
thing	O	O:0.997592
is	O	O:0.999893
in	O	O:0.999850
the	O	O:0.999975
above	O	O:0.996770
function	O	O:0.999370
If	O	O:0.999979
i	O	O:0.999998
pass	O	O:0.998064
an	O	O:0.999950
extra	O	O:0.997902
argument	O	O:0.997127
and	O	O:0.999871
just	O	O:0.998366
divide	O	O:0.922431
sum	O	O:0.997329
by	O	O:0.999927
it	O	O:0.999951
,	O	O:0.999997
then	O	O:0.999908
the	O	O:0.999996
times	O	O:0.999059
are	O	O:0.999946
the	O	O:0.999992
same	O	O:0.999434
again	O	O:0.999212
.	O	O:0.999948
	
are	O	O:0.999718
the	O	O:0.999989
same	O	O:0.999689
as	O	O:0.999989
the	O	O:0.999997
ones	O	O:0.998964
posted	O	O:0.999515
in	O	O:0.999989
the	O	O:0.999988
examples	O	O:0.997785
of	O	O:0.999991
this	O	O:0.999710
web	O	O:0.999988
page	O	O:0.989559
.	O	O:0.999502
	
How	O	O:0.999778
to	O	O:0.999916
remove	O	O:0.999807
rings	O	O:0.999808
from	O	O:0.999705
convolve	O	O:0.802822
healpix	O	O:0.999691
map	O	O:0.624762
?	O	O:0.999960
	
With	O	O:0.999286
the	O	O:0.999907
information	O	O:0.999172
of	O	O:0.999963
the	O	O:0.999932
full	O	O:0.997935
stack	O	O:0.962506
trace	O	O:0.999594
report	O	O:0.999032
the	O	O:0.999950
bug	O	O:0.999651
to	O	O:0.999956
the	O	O:0.999962
ubuntu	O	O:0.999448
team	O	O:0.995221
.	O	O:0.999844
	
fastest	O	O:0.998905
way	O	O:0.999854
to	O	O:0.999839
get	O	O:0.999899
lookup	O	O:0.983680
table	O	O:0.998997
indices	O	O:0.998535
with	O	O:0.999854
numpy	O	O:0.987586
	
Well	O	O:0.998445
,	O	O:0.999995
a	O	O:0.999920
few	O	O:0.999682
more	O	O:0.997910
,	O	O:0.999979
anyway	O	O:0.999157
:	O	O:0.999947
`	O	O:0.999970
cos	B-API	O:0.669694
`	O	O:0.999992
,	O	O:0.999923
`	O	O:0.999997
pi	B-API	O:0.949404
`	O	O:0.999989
,	O	O:0.999841
`	O	O:0.999998
diag	B-API	B-API:0.582244
`	O	O:0.999928
	
I	O	O:0.999963
implemented	O	O:0.999908
a	O	O:0.999792
LOWESS	O	O:0.985491
smoother	O	O:0.998947
(	O	O:0.999945
which	O	O:0.998931
is	O	O:0.999991
the	O	O:0.999932
curve	O	O:0.999490
you	O	O:0.999977
see	O	O:0.999927
)	O	O:0.999994
with	O	O:0.999645
a	O	O:0.999990
tight	O	O:0.995769
fit	O	O:0.999270
to	O	O:0.999958
eliminate	O	O:0.999936
noise	O	O:0.999314
,	O	O:0.999997
since	O	O:0.999811
the	O	O:0.999979
real	O	O:0.992092
waveforms	O	O:0.999938
have	O	O:0.999842
a	O	O:0.999993
non-trivial	O	O:0.998643
noise	O	O:0.995632
component	O	O:0.999231
,	O	O:0.999942
and	O	O:0.999964
then	O	O:0.999384
tried	O	O:0.999959
doing	O	O:0.999747
a	O	O:0.999868
rolling	O	B-API:0.557409
max	O	O:0.707507
with	O	O:0.999796
a	O	O:0.999540
window	O	O:0.999685
over	O	O:0.999693
the	O	O:0.999966
data	O	O:0.995244
,	O	O:0.999992
but	O	O:0.999966
I	O	O:0.999984
can't	O	O:0.999568
get	O	O:0.999684
anything	O	O:0.999326
solid	O	O:0.991731
.	O	O:0.999431
	
But	O	O:0.999929
sum	B-API	O:0.987867
function	O	O:0.999870
from	O	O:0.999854
numpy	O	O:0.997497
doesn't	O	O:0.999884
suport	O	O:0.998656
"	O	O:0.999840
1:3	O	O:0.992970
"	O	O:0.999290
	
(	O	O:0.999965
the	O	O:0.999538
`	O	O:0.999858
np.nonzero	B-API	B-API:0.938646
`	O	O:0.999962
should	O	O:0.999711
return	O	O:0.999237
a	O	O:0.999963
tuple	O	O:0.998905
with	O	O:0.999622
one	O	O:0.999056
element	O	O:0.999711
,	O	O:0.999989
an	O	O:0.999990
array	O	O:0.999388
of	O	O:0.999952
indices	O	O:0.968005
)	O	O:0.999812
.	O	O:0.998152
	
Can	O	O:0.999816
the	O	O:0.999755
"	O	O:0.999908
small	O	O:0.999051
values	O	O:0.999774
of	O	O:0.999970
derivative	O	O:0.999038
"	O	O:0.999976
be	O	O:0.999906
small	O	O:0.999570
with	O	O:0.999751
respect	O	O:0.998442
to	O	O:0.999984
the	O	O:0.999992
sin	O	O:0.903507
curve	O	O:0.999412
?	O	O:0.999991
	
6	O	O:0.999807
columns	O	O:0.997894
,	O	O:0.999992
92370574	O	O:0.999941
rows	O	O:0.996760
,	O	O:0.999990
2496502	O	O:0.999712
locations	O	O:0.994190
,	O	O:0.999946
37	O	O:0.999782
months	O	O:0.998918
each	O	O:0.998968
,	O	O:0.999986
unique	O	O:0.999281
amounts	O	O:0.998142
for	O	O:0.999957
each	O	O:0.999056
value	O	O:0.998571
.	O	O:0.999637
	
Note	O	O:0.999931
that	O	O:0.999597
where	O	O:0.999852
possible	O	O:0.999281
,	O	O:0.999954
`	O	O:0.999959
reshape	B-API	B-API:0.931259
`	O	O:0.999972
will	O	O:0.999388
give	O	O:0.999962
you	O	O:0.999982
a	O	O:0.999999
view	O	O:0.994834
of	O	O:0.999974
the	O	O:0.999773
array	O	O:0.997089
.	O	O:0.999448
	
Here	O	O:0.999566
you	O	O:0.999360
append	O	O:0.974403
only	O	O:0.999654
a	O	O:0.999978
REFERENCE	O	O:0.998186
to	O	O:0.999978
your	O	O:0.999985
only	O	O:0.999750
one	O	O:0.999977
existing	O	O:0.998736
`	O	O:0.999959
energy	O	O:0.997013
`	O	O:0.999978
array	O	O:0.990416
.	O	O:0.999852
	
And	O	O:0.999972
you	O	O:0.999926
can	O	O:0.999638
combine	O	O:0.999914
the	O	O:0.999968
summation	O	O:0.998867
and	O	O:0.999766
multiplication	O	O:0.999912
into	O	O:0.999825
a	O	O:0.999989
dot	O	O:0.990412
product	O	O:0.986544
:	O	O:0.999942
#CODE	O	O:0.999256
	
For	O	O:0.999893
example	O	O:0.998718
,	O	O:0.999964
`	O	O:0.999993
a	O	O:0.999636
`	O	O:0.999896
is	O	O:0.999874
generated	O	O:0.999967
from	O	O:0.999561
`	O	O:0.999982
a	O	O:0.999987
=	O	O:0.999975
z	O	O:0.999480
[	O	O:0.999989
z	O	O:0.999801
!	O	O:0.999995
=0	O	O:0.999853
]`	O	O:0.999908
;	O	O:0.999952
`	O	O:0.999980
a	O	O:0.999698
`	O	O:0.999992
then	O	O:0.996522
changes	O	O:0.999954
through	O	O:0.999770
some	O	O:0.999805
processing	O	O:0.998873
,	O	O:0.999937
and	O	O:0.999949
now	O	O:0.999245
I	O	O:0.999991
need	O	O:0.999514
to	O	O:0.999618
insert	O	O:0.994851
`	O	O:0.999972
nan	O	O:0.899315
`	O	O:0.999996
s	O	O:0.999861
where	O	O:0.999851
there	O	O:0.999751
were	O	O:0.999705
originally	O	O:0.999175
zeros	O	O:0.997545
.	O	O:0.999737
	
I	O	O:0.999993
frequently	O	O:0.999909
use	O	O:0.998836
the	O	O:0.999645
numpy.where	B-API	B-API:0.996191
function	O	O:0.999553
to	O	O:0.999989
gather	O	O:0.999977
a	O	O:0.999995
tuple	O	O:0.996343
of	O	O:0.999977
indices	O	O:0.997626
of	O	O:0.999974
a	O	O:0.999822
matrix	O	O:0.977280
having	O	O:0.999566
some	O	O:0.999097
property	O	O:0.997689
.	O	O:0.999843
	
I	O	O:0.999958
suspect	O	O:0.999603
the	O	O:0.999696
original	O	O:0.994119
formula	O	O:0.998991
was	O	O:0.999706
right	O	O:0.999444
but	O	O:0.999892
you	O	O:0.999717
didn't	O	O:0.999258
encode	O	O:0.999376
it	O	O:0.999939
right	O	O:0.999489
in	O	O:0.999884
Python	O	O:0.998891
.	O	O:0.999804
	
This	O	O:0.999917
gets	O	O:0.999755
me	O	O:0.999986
the	O	O:0.999981
sum	O	O:0.998628
of	O	O:0.999962
all	O	O:0.999405
red	O	O:0.999865
combined	O	O:0.996579
in	O	O:0.999948
original	O	O:0.998045
-	O	O:0.999993
all	O	O:0.999299
red	O	O:0.999721
combined	O	O:0.998035
in	O	O:0.999908
mutated	O	O:0.996684
.	O	O:0.999516
	
`	O	O:0.999859
p2	O	O:0.994169
=	O	O:0.999969
einsum	B-API	B-API:0.788161
(	O	O:0.999975
'	O	O:0.999951
nk	O	O:0.998920
,	O	O:0.999989
nk	O	O:0.999564
->	O	O:0.999649
n	O	O:0.998713
'	O	O:0.999970
,	O	O:0.999990
p1	O	O:0.998965
,	O	O:0.999990
delta	O	O:0.985075
)`	O	O:0.999670
is	O	O:0.999966
the	O	O:0.999977
pairwise	O	O:0.999056
dot	O	O:0.999964
product	O	O:0.999932
of	O	O:0.999991
the	O	O:0.999984
rows	O	O:0.999780
of	O	O:0.999906
`	O	O:0.999975
p1	O	O:0.986249
`	O	O:0.999920
and	O	O:0.999222
`	O	O:0.999988
delta	O	B-API:0.931516
`	O	O:0.999866
.	O	O:0.997588
	
I	O	O:0.999960
did	O	O:0.999928
the	O	O:0.999100
reshape	B-API	B-API:0.727814
,	O	O:0.999996
just	O	O:0.999754
so	O	O:0.999996
that	O	O:0.999922
both	O	O:0.999885
arrays	O	O:0.999668
are	O	O:0.999890
same	O	O:0.999582
shape	O	O:0.997515
,	O	O:0.999997
but	O	O:0.999872
I	O	O:0.999973
do	O	O:0.999907
not	O	O:0.999733
think	O	O:0.999802
you	O	O:0.999925
really	O	O:0.999809
need	O	O:0.999826
the	O	O:0.999973
reshaping	O	O:0.999258
,	O	O:0.999983
with	O	O:0.999870
the	O	O:0.999980
list	O	O:0.996138
comprehension	O	O:0.999870
the	O	O:0.999986
shape	O	O:0.999823
of	O	O:0.999973
array	O	O:0.999527
you	O	O:0.999969
get	O	O:0.999271
is	O	O:0.999926
`	O	O:0.999776
(	O	O:0.999968
length	O	O:0.999759
of	O	O:0.999878
string	O	O:0.991271
,	O	O:0.999973
)`	O	O:0.999541
	
Also	O	O:0.999760
,	O	O:0.999990
I	O	O:0.999981
expect	O	O:0.999918
the	O	O:0.999929
positions	O	O:0.995246
of	O	O:0.999977
the	O	O:0.999964
zeros	O	O:0.999752
to	O	O:0.999976
be	O	O:0.999999
relatively	O	O:0.999752
sparse	O	O:0.995432
(	O	O:0.999992
~1%	O	O:0.999938
of	O	O:0.999938
all	O	O:0.999156
bit	O	O:0.999939
positions	O	O:0.963370
)	O	O:0.999522
.	O	O:0.998936
	
Slicing	O	O:0.988048
arrays	O	O:0.997745
with	O	O:0.999169
meshgrid	B-API	B-API:0.785159
/	O	O:0.999872
array	O	O:0.998583
indices	O	O:0.995316
in	O	O:0.999829
Numpy	O	O:0.997159
	
(	O	O:0.999887
An	O	O:0.999956
nonzero	O	O:0.999049
exit	O	O:0.998292
status	O	O:0.992080
usually	O	O:0.999536
indicates	O	O:0.998539
an	O	O:0.999934
error	O	O:0.999268
on	O	O:0.999904
Unix	O	O:0.999509
style	O	O:0.992233
systems	O	O:0.999737
.	O	O:0.999941
A	O	O:0.999928
couple	O	O:0.999678
programs	O	O:0.999253
are	O	O:0.999927
different	O	O:0.998128
,	O	O:0.999948
e.g.	O	O:0.999137
,	O	O:0.999897
`	O	O:0.999996
diff	B-API	B-API:0.964981
`	O	O:0.999974
.	O	O:0.999708
)	O	O:0.999989
Try	O	O:0.999902
examining	O	O:0.999930
the	O	O:0.999026
`	O	O:0.999770
stderr	O	B-API:0.755675
`	O	O:0.999987
produced	O	O:0.999463
by	O	O:0.999986
the	O	O:0.999961
subprocess	O	O:0.999730
to	O	O:0.999966
see	O	O:0.999998
what	O	O:0.999893
error	O	O:0.999959
messages	O	O:0.999499
are	O	O:0.999793
printed	O	O:0.999456
there	O	O:0.997046
.	O	O:0.999369
	
To	O	O:0.999974
achieve	O	O:0.999617
exactly	O	O:0.999686
what	O	O:0.999753
you	O	O:0.999890
are	O	O:0.999949
asking	O	O:0.999777
for	O	O:0.999476
I	O	O:0.999960
would	O	O:0.999933
apply	O	O:0.795951
a	O	O:0.999729
`	O	O:0.999239
[	O	O:0.999628
3x3	O	O:0.999934
]`	O	O:0.999865
box-filter	O	O:0.997905
on	O	O:0.999948
the	O	O:0.999811
image	O	O:0.997614
and	O	O:0.999980
than	O	O:0.999707
I	O	O:0.999957
would	O	O:0.999772
resize	O	O:0.763244
the	O	O:0.999920
matrix	O	O:0.983502
using	O	O:0.999598
nearest	O	O:0.984653
neighbor	O	O:0.996444
interpolation	O	O:0.997828
.	O	O:0.999573
	
Is	O	O:0.999990
there	O	O:0.999806
a	O	O:0.999976
quick	O	O:0.994927
way	O	O:0.999779
to	O	O:0.999923
reshape	O	O:0.987179
my	O	O:0.999741
`	O	O:0.999923
csr_matrix	O	B-API:0.954541
`	O	O:0.999955
without	O	O:0.996950
copying	O	O:0.997653
everything	O	O:0.997882
in	O	O:0.999657
it	O	O:0.999873
?	O	O:0.999962
	
The	O	O:0.999897
catch	O	O:0.976673
is	O	O:0.999998
that	O	O:0.998047
I	O	O:0.999999
need	O	O:0.999811
to	O	O:0.999938
keep	O	O:0.999957
the	O	O:0.999976
colors	O	O:0.991485
exactly	O	O:0.999887
the	O	O:0.999937
way	O	O:0.999984
they	O	O:0.999136
are	O	O:0.999191
(	O	O:0.999935
background	O	O:0.997492
:	O	O:0.999993
I'm	O	O:0.999977
resizing	O	O:0.999941
a	O	O:0.999951
map	O	O:0.696656
where	O	O:0.999591
provinces	O	O:0.997600
are	O	O:0.999778
color-coded	O	O:0.999597
)	O	O:0.999646
,	O	O:0.999867
and	O	O:0.999982
so	O	O:0.999859
I	O	O:0.999959
cannot	O	O:0.999926
just	O	O:0.999707
perform	O	O:0.999770
a	O	O:0.999914
resize	O	O:0.920049
with	O	O:0.999063
bicubic	O	O:0.988521
interpolation	O	O:0.999723
,	O	O:0.999949
because	O	O:0.999533
that	O	O:0.999435
will	O	O:0.999872
also	O	O:0.999870
interpolate	O	O:0.994783
the	O	O:0.999852
pixel	O	O:0.995007
colors	O	O:0.994091
while	O	O:0.999804
smoothing	O	O:0.999568
.	O	O:0.999546
	
You	O	O:0.999305
should	O	O:0.999542
"	O	O:0.999869
flatten	O	O:0.740201
"	O	O:0.999963
the	O	O:0.999944
array	O	O:0.998978
of	O	O:0.999854
arrays	O	O:0.998406
first	O	O:0.999456
.	O	O:0.999926
unfortunately	O	O:0.997898
,	O	O:0.999972
there's	O	O:0.999831
no	O	O:0.996162
builtin	O	O:0.992094
method	O	O:0.999198
,	O	O:0.999982
see	O	O:0.999610
#URL	O	O:0.998371
	
then	O	O:0.998988
concatenate	O	O:0.987486
the	O	O:0.999935
saved	O	O:0.999493
objects	O	O:0.998556
whit	O	O:0.999923
this	O	O:0.999961
code	O	O:0.998072
:	O	O:0.999976
#CODE	O	O:0.999483
	
For	O	O:0.999838
something	O	O:0.999881
like	O	O:0.999571
a	O	O:0.999988
dot	O	O:0.997083
product	O	O:0.997444
,	O	O:0.999985
pandas	O	O:0.994882
`	O	O:0.999975
DataFrames	O	O:0.987763
`	O	O:0.999988
are	O	O:0.999822
generally	O	O:0.999940
going	O	O:0.999644
to	O	O:0.999975
be	O	O:0.999988
slower	O	O:0.999985
than	O	O:0.999777
a	O	O:0.999988
numpy	O	O:0.996856
array	O	O:0.999437
since	O	O:0.999788
pandas	O	O:0.996451
is	O	O:0.999997
doing	O	O:0.998402
**	O	O:0.999771
a	O	O:0.999447
lot	O	O:0.999963
more	O	O:0.999104
stuff	O	O:0.998821
**	O	O:0.999710
aligning	O	O:0.998667
labels	O	O:0.997814
,	O	O:0.999990
potentially	O	O:0.997864
dealing	O	O:0.998161
with	O	O:0.998945
heterogenous	O	O:0.995358
types	O	O:0.989706
,	O	O:0.999974
and	O	O:0.999961
so	O	O:0.999837
on	O	O:0.999785
.	O	O:0.999795
	
I	O	O:0.999969
want	O	O:0.999759
to	O	O:0.999928
pass	O	O:0.999929
an	O	O:0.999988
array	O	O:0.999770
of	O	O:0.999836
indices	O	O:0.909336
and	O	O:0.999851
column	O	O:0.999192
names	O	O:0.991900
and	O	O:0.999948
get	O	O:0.999405
a	O	O:0.999990
list	O	O:0.991288
of	O	O:0.999834
objects	O	O:0.998618
that	O	O:0.999846
are	O	O:0.999943
found	O	O:0.999091
in	O	O:0.999869
the	O	O:0.999289
corresponding	O	O:0.987174
index	O	O:0.994129
and	O	O:0.999904
column	O	O:0.999812
name	O	O:0.997574
.	O	O:0.999638
	
From	O	O:0.999773
this	O	O:0.999876
you	O	O:0.999838
would	O	O:0.999604
expect	O	O:0.999701
the	O	O:0.999983
total	O	O:0.998369
sum	O	O:0.999616
to	O	O:0.999988
be	O	O:0.999990
`	O	O:0.999933
100,679,697	O	O:0.995387
=	O	O:0.999968
200*	O	O:0.988856
(	O	O:0.999931
1,000,000	O	O:0.993741
-	O	O:0.999990
499,097	O	O:0.997717
)	O	O:0.999815
+	O	O:0.998795
499,097	O	O:0.996920
`	O	O:0.999636
	
The	O	O:0.999854
histogram	O	O:0.998709
way	O	O:0.998359
is	O	O:0.999965
not	O	O:0.999230
the	O	O:0.999875
fastest	O	O:0.995183
,	O	O:0.999968
and	O	O:0.999817
can't	O	O:0.999881
tell	O	O:0.997451
the	O	O:0.999968
difference	O	O:0.997652
between	O	O:0.997940
an	O	O:0.999993
arbitrarily	O	O:0.999807
small	O	O:0.998165
separation	O	O:0.999889
of	O	O:0.999912
points	O	O:0.990677
and	O	O:0.999867
`	O	O:0.999908
2	O	O:0.998006
*	O	O:0.999937
sqrt	B-API	O:0.651324
(	O	O:0.999993
2	O	O:0.999934
)	O	O:0.999954
*	O	O:0.999732
b	O	O:0.999338
`	O	O:0.999861
(	O	O:0.999928
where	O	O:0.999556
`	O	O:0.999985
b	O	O:0.998399
`	O	O:0.999961
is	O	O:0.999777
bin	O	O:0.998804
width	O	O:0.999569
)	O	O:0.999204
.	O	O:0.998268
	
}	O	O:0.997464
for	O	O:0.999647
n=1	O	O:0.997451
,	O	O:0.999924
2	O	O:0.999964
,	O	O:0.999944
3	O	O:0.999922
,	O	O:0.999960
4	O	O:0.999953
,	O	O:0.999969
5	O	O:0.999961
,	O	O:0.999949
6	O	O:0.999807
(	O	O:0.999983
using	O	O:0.999525
Sum	B-API	O:0.999410
(	O	O:0.999889
c_n	O	O:0.975478
exp	B-API	O:0.769077
(	O	O:0.999992
i	O	O:0.999991
2	O	O:0.999987
pi	O	O:0.998699
n	O	O:0.999712
x	O	O:0.999771
)	O	O:0.999972
)	O	O:0.999930
as	O	O:0.999901
Fourier	O	O:0.999849
series	O	O:0.985620
)	O	O:0.999527
.	O	O:0.998269
	
I	O	O:0.999992
think	O	O:0.999903
I	O	O:0.999973
can	O	O:0.999874
t	O	O:0.999970
just	O	O:0.999864
simple	O	O:0.999797
sum	O	O:0.998970
the	O	O:0.999798
"	O	O:0.999822
seq	O	O:0.996132
*	O	O:0.999865
"	O	O:0.999951
array	O	O:0.998720
,	O	O:0.999968
because	O	O:0.999272
instead	O	O:0.999699
of	O	O:0.999980
a	O	O:0.999981
chord	O	O:0.997119
I	O	O:0.999985
will	O	O:0.999327
get	O	O:0.998134
noise	O	O:0.995225
.	O	O:0.999592
	
I	O	O:0.999974
presume	O	O:0.999416
you	O	O:0.999756
want	O	O:0.999819
to	O	O:0.999951
transpose	O	O:0.987600
first	O	O:0.995465
:	O	O:0.999966
#CODE	O	O:0.999407
	
Oh	O	O:0.999900
,	O	O:0.999927
that's	O	O:0.999938
interesting	O	O:0.999819
you	O	O:0.999790
can	O	O:0.999863
do	O	O:0.999985
it	O	O:0.999997
with	O	O:0.999718
stack	B-API	O:0.636501
.	O	O:0.999825
	
In	O	O:0.999973
this	O	O:0.999928
case	O	O:0.999509
,	O	O:0.999996
using	O	O:0.999931
numpy	O	O:0.958905
outer	B-API	O:0.999117
operations	O	O:0.999794
allow	O	O:0.999718
you	O	O:0.999981
to	O	O:0.999934
compute	O	O:0.999905
the	O	O:0.999947
multiplications	O	O:0.998408
and	O	O:0.999990
sums	O	O:0.999687
at	O	O:0.999978
the	O	O:0.999819
`	O	O:0.999813
C	O	O:0.995198
`	O	O:0.999997
loop	O	O:0.997140
speed	O	O:0.999803
.	O	O:0.999440
	
The	O	O:0.999930
most	O	O:0.998807
efficient	O	O:0.999645
way	O	O:0.999114
is	O	O:0.999979
likely	O	O:0.999192
to	O	O:0.999940
use	O	O:0.999926
'	O	O:0.999492
np.empty()	B-API	B-API:0.998135
'	O	O:0.999960
to	O	O:0.999987
allocate	O	O:0.999984
the	O	O:0.999943
space	O	O:0.997341
/	O	O:0.999975
memory	O	O:0.999359
for	O	O:0.999990
your	O	O:0.997308
end	O	O:0.994771
dataset	O	O:0.997489
and	O	O:0.999923
then	O	O:0.999720
load	O	O:0.999900
data	O	O:0.999537
&	O	O:0.999745
broadcast	O	O:0.980501
within	O	O:0.999883
that	O	O:0.999094
using	O	O:0.999683
slice	O	O:0.899685
indexing	O	O:0.994551
.	O	O:0.998789
	
Ok	O	O:0.999826
,	O	O:0.999980
with	O	O:0.999981
your	O	O:0.999750
histogram	O	O:0.999401
I	O	O:0.999998
get	O	O:0.999967
at	O	O:0.999870
least	O	O:0.998282
the	O	O:0.999964
total	O	O:0.991167
number	O	O:0.999754
of	O	O:0.999981
each	O	O:0.999828
pair	O	O:0.997396
.	O	O:0.999712
	
This	O	O:0.998708
is	O	O:0.999961
because	O	O:0.998503
python's	O	O:0.999750
sum	O	O:0.994346
is	O	O:0.999992
basically	O	O:0.999719
summing	O	O:0.999898
a	O	O:0.999910
for	O	O:0.999944
loop	O	O:0.999369
over	O	O:0.999669
the	O	O:0.998757
object	O	O:0.994842
.	O	O:0.999503
	
Then	O	O:0.998667
the	O	O:0.999963
entire	O	O:0.999492
shape	O	O:0.999915
changes	O	O:0.999861
from	O	O:0.999317
(	O	O:0.999984
x	O	O:0.999902
,	O	O:0.999998
y	O	O:0.999956
)	O	O:0.999943
to	O	O:0.999871
merely	O	O:0.999692
(	O	O:0.999962
x	O	O:0.998691
,	O	O:0.999979
)	O	O:0.999964
and	O	O:0.999093
I	O	O:0.999993
get	O	O:0.998975
'	O	O:0.999009
too	O	O:0.999935
many	O	O:0.999499
indices	O	O:0.993155
'	O	O:0.999930
errors	O	O:0.999873
when	O	O:0.998962
I	O	O:0.999999
try	O	O:0.999991
to	O	O:0.999768
use	O	O:0.999964
masks	O	O:0.967896
.	O	O:0.999255
	
If	O	O:0.999975
reps	O	O:0.825050
has	O	O:0.999960
length	O	O:0.999601
d	O	O:0.998672
,	O	O:0.999977
the	O	O:0.999725
result	O	O:0.996955
will	O	O:0.999847
have	O	O:0.999967
dimension	O	O:0.999969
of	O	O:0.999936
max	B-API	O:0.542048
(	O	O:0.999971
d	O	O:0.998977
,	O	O:0.999990
A.ndim	O	O:0.961877
)	O	O:0.999423
.	O	O:0.998724
	
I	O	O:0.999979
want	O	O:0.999891
to	O	O:0.999005
do	O	O:0.999998
this	O	O:0.999967
by	O	O:0.999972
dividing	O	O:0.999843
each	O	O:0.998568
histogram	O	O:0.999579
by	O	O:0.999942
its	O	O:0.999938
maximum	O	O:0.999762
value	O	O:0.999879
so	O	O:0.999989
all	O	O:0.999940
the	O	O:0.999952
distributions	O	O:0.999621
have	O	O:0.999762
the	O	O:0.999996
same	O	O:0.999850
scale	O	O:0.992639
.	O	O:0.999968
	
An	O	O:0.999885
obvious	O	O:0.999897
path	O	O:0.997503
would	O	O:0.999959
be	O	O:0.999991
to	O	O:0.999989
transpose	O	O:0.984845
the	O	O:0.999982
array	O	O:0.999074
so	O	O:0.999995
that	O	O:0.999858
the	O	O:0.999967
indices	O	O:0.999245
that	O	O:0.999822
I	O	O:0.999999
am	O	O:0.999996
selecting	O	O:0.997317
would	O	O:0.999907
come	O	O:0.999886
up	O	O:0.999982
first	O	O:0.998058
.	O	O:0.999641
	
Now	O	O:0.999706
,	O	O:0.999952
for	O	O:0.999976
mean	O	O:0.972607
calculations	O	O:0.998898
,	O	O:0.999998
those	O	O:0.999639
numeric	O	O:0.974822
IDs	O	O:0.999720
could	O	O:0.999792
be	O	O:0.999994
used	O	O:0.999868
as	O	O:0.999160
`"	O	O:0.999072
weights	O	O:0.944805
"`	O	O:0.999907
for	O	O:0.999477
binning	O	O:0.999795
with	O	O:0.993722
`	O	O:0.999815
np.bincount	B-API	B-API:0.907507
`	O	O:0.999927
,	O	O:0.999992
giving	O	O:0.999916
us	O	O:0.999931
the	O	O:0.999954
sum	O	O:0.998626
of	O	O:0.999989
data	O	O:0.999908
elements	O	O:0.999970
corresponding	O	O:0.999437
to	O	O:0.999986
each	O	O:0.999881
`	O	O:0.999978
ID	O	O:0.996606
`	O	O:0.999946
.	O	O:0.997941
	
However	O	O:0.998372
,	O	O:0.999987
what	O	O:0.999162
I	O	O:0.999997
need	O	O:0.999782
is	O	O:0.999965
a	O	O:0.999967
string	O	O:0.998509
containing	O	O:0.997942
all	O	O:0.999571
the	O	O:0.999959
elements	O	O:0.996847
in	O	O:0.999868
the	O	O:0.999979
list	O	O:0.984381
linked	O	O:0.999860
by	O	O:0.999772
'	O	O:0.999876
;	O	O:0.999980
'	O	O:0.999508
,	O	O:0.999989
not	O	O:0.999275
the	O	O:0.999924
list	O	O:0.982732
itself	O	O:0.999722
,	O	O:0.999959
so	O	O:0.999961
it	O	O:0.999949
seems	O	O:0.999990
like	O	O:0.999765
I	O	O:0.999999
have	O	O:0.999881
to	O	O:0.999962
sum	O	O:0.999916
all	O	O:0.999793
the	O	O:0.999969
elements	O	O:0.997604
in	O	O:0.999956
asString	O	O:0.999901
with	O	O:0.999464
another	O	O:0.996722
iteration	O	O:0.999538
?	O	O:0.999936
	
the	O	O:0.999765
output	O	O:0.997035
I	O	O:0.999980
need	O	O:0.998865
:	O	O:0.999973
`	O	O:0.999978
S	O	O:0.998712
=	O	O:0.999995
[	O	O:0.999964
2	O	O:0.999958
,	O	O:0.999979
5	O	O:0.999930
,	O	O:0.999953
8	O	O:0.999935
,	O	O:0.999956
11	O	O:0.999848
,	O	O:0.999953
14	O	O:0.999973
]`	O	O:0.999564
I	O	O:0.999969
thought	O	O:0.999889
something	O	O:0.999048
like	O	O:0.994277
:	O	O:0.999988
`	O	O:0.999928
S1	O	O:0.999104
=	O	O:0.999979
np.array	B-API	O:0.559225
(	O	O:0.999940
L	O	O:0.999800
[:	O	O:0.999960
]	O	O:0.999925
[	O	O:0.999906
1	O	O:0.999973
,	O	O:0.999981
0	O	O:0.999950
])`	O	O:0.997388
should	O	O:0.991074
work	O	O:0.998592
but	O	O:0.999944
whatever	O	O:0.999854
I	O	O:0.999993
try	O	O:0.999944
I	O	O:0.999984
have	O	O:0.999848
the	O	O:0.999776
error	O	O:0.999755
like	O	O:0.998719
:	O	O:0.999977
`	O	O:0.999911
TypeError	O	O:0.990229
:	O	O:0.999996
list	O	O:0.993555
indices	O	O:0.999741
must	O	O:0.998044
be	O	O:0.999965
integers	O	O:0.997910
,	O	O:0.999957
not	O	O:0.999837
tuple	O	O:0.989082
`	O	O:0.999901
.	O	O:0.998593
	
I	O	O:0.999970
need	O	O:0.999714
it	O	O:0.999831
because	O	O:0.999692
in	O	O:0.999937
the	O	O:0.999949
next	O	O:0.999784
part	O	O:0.998317
I	O	O:0.999998
will	O	O:0.999907
sum	O	O:0.984992
up	O	O:0.999979
this	O	O:0.999840
large	O	O:0.999264
np.array	B-API	B-API:0.560605
with	O	O:0.999779
some	O	O:0.999816
delta_array	O	O:0.999842
that	O	O:0.999877
has	O	O:0.999975
the	O	O:0.999979
same	O	O:0.999208
shape	O	O:0.999373
.	O	O:0.999955
	
Used	O	O:0.999257
reshape	B-API	O:0.601898
to	O	O:0.999992
make	O	O:0.999958
rows	O	O:0.999891
into	O	O:0.999757
columns	O	O:0.999771
.	O	O:0.999336
	
I	O	O:0.999864
understand	O	O:0.999906
that	O	O:0.998439
you	O	O:0.999931
could	O	O:0.999789
create	O	O:0.999923
an	O	O:0.999995
array	O	O:0.999929
of	O	O:0.999931
zeros	O	O:0.991019
and	O	O:0.999976
iteratively	O	O:0.999237
change	O	O:0.995780
the	O	O:0.999241
values	O	O:0.985715
in	O	O:0.999973
each	O	O:0.999509
column	O	O:0.997681
,	O	O:0.999988
but	O	O:0.999644
I	O	O:0.999976
also	O	O:0.997076
understand	O	O:0.999686
this	O	O:0.988210
is	O	O:0.999969
not	O	O:0.998358
an	O	O:0.999622
efficient	O	O:0.995976
method	O	O:0.995302
.	O	O:0.999672
	
I'm	O	O:0.999880
trying	O	O:0.999592
to	O	O:0.999726
implement	O	O:0.999945
the	O	O:0.999878
univariate	O	O:0.997784
gradient	O	O:0.999835
descent	O	O:0.999443
algorithm	O	O:0.999689
in	O	O:0.999786
python	O	O:0.990064
.	O	O:0.999734
	
numpy	O	O:0.994624
glossary	O	O:0.999844
says	O	O:0.999905
the	O	O:0.999956
sum	O	O:0.998020
along	O	O:0.999862
axis	O	O:0.999829
argument	O	O:0.999246
`	O	O:0.999936
axis=1	O	O:0.981976
`	O	O:0.999996
sums	O	O:0.999431
over	O	O:0.999991
rows	O	O:0.998503
:	O	O:0.999994
"	O	O:0.999995
we	O	O:0.999973
can	O	O:0.999746
sum	O	O:0.999971
each	O	O:0.999821
row	O	O:0.999979
of	O	O:0.999965
an	O	O:0.999865
array	O	O:0.999183
,	O	O:0.999965
in	O	O:0.999717
which	O	O:0.999830
case	O	O:0.999573
we	O	O:0.999992
operate	O	O:0.999894
along	O	O:0.999745
columns	O	O:0.999323
,	O	O:0.999986
or	O	O:0.999997
axis	O	O:0.999588
1	O	O:0.999917
"	O	O:0.999789
.	O	O:0.999411
	
It	O	O:0.999977
also	O	O:0.999725
prints	O	O:0.999863
out	O	O:0.999882
the	O	O:0.999456
new	O	O:0.998162
indices	O	O:0.994775
signature	O	O:0.999610
.	O	O:0.999762
	
At	O	O:0.999951
first	O	O:0.998658
,	O	O:0.999999
your	O	O:0.999175
`	O	O:0.999892
result	O	O:0.990343
`	O	O:0.999993
does	O	O:0.997212
not	O	O:0.999949
look	O	O:0.999902
like	O	O:0.999938
a	O	O:0.999962
complex	O	O:0.920337
FFT	O	O:0.999696
output	O	O:0.996956
	
debug	O	O:0.998537
performance	O	O:0.999915
diff	O	O:0.517525
of	O	O:0.999904
Same	O	O:0.999925
code	O	O:0.999505
on	O	O:0.999979
nearly	O	O:0.999853
same	O	O:0.999810
cpu	O	O:0.999898
/	O	O:0.999981
ram	O	O:0.998999
	
The	O	O:0.999720
HTML	O	O:0.999418
file	O	O:0.998662
generated	O	O:0.999833
by	O	O:0.999916
Cython	O	O:0.999698
indicates	O	O:0.999850
that	O	O:0.999783
the	O	O:0.999987
bottleneck	O	O:0.997142
is	O	O:0.999986
the	O	O:0.999913
dot	O	O:0.999363
products	O	O:0.998328
(	O	O:0.999978
which	O	O:0.999457
is	O	O:0.999992
expected	O	O:0.999875
of	O	O:0.999978
course	O	O:0.995110
)	O	O:0.999827
.	O	O:0.997938
	
`	O	O:0.999861
numpy.unique	B-API	B-API:0.994787
`	O	O:0.999986
with	O	O:0.998704
`	O	O:0.999978
return_index=True	O	O:0.951337
`	O	O:0.999973
will	O	O:0.999554
give	O	O:0.999961
you	O	O:0.999882
a	O	O:0.999998
list	O	O:0.995116
of	O	O:0.999962
indices	O	O:0.972656
to	O	O:0.999994
take	O	O:0.999965
from	O	O:0.999391
.	O	O:0.999751
	
I	O	O:0.999944
forgot	O	O:0.999813
exactly	O	O:0.996054
why	O	O:0.996978
,	O	O:0.999934
but	O	O:0.999969
there	O	O:0.998586
is	O	O:0.999915
a	O	O:0.999955
good	O	O:0.998391
reason	O	O:0.998304
why	O	O:0.999946
you	O	O:0.999828
calculate	O	O:0.999834
it	O	O:0.999995
as	O	O:0.999991
the	O	O:0.999929
ratio	O	O:0.997920
between	O	O:0.999463
these	O	O:0.999898
two	O	O:0.999861
averages	O	O:0.997060
,	O	O:0.999975
instead	O	O:0.999855
of	O	O:0.999978
directly	O	O:0.999750
averaging	O	O:0.999768
`	O	O:0.999439
fft	B-API	O:0.532003
(	O	O:0.999998
y	O	O:0.999638
)	O	O:0.999962
/	O	O:0.999415
fft	B-API	O:0.917819
(	O	O:0.999984
x	O	O:0.998766
)`	O	O:0.999764
.	O	O:0.999696
	
Do	O	O:0.999932
you	O	O:0.999776
really	O	O:0.998786
want	O	O:0.999933
this	O	O:0.999068
'	O	O:0.999988
roll	B-API	B-API:0.905312
'	O	O:0.999821
?	O	O:0.999921
	
By	O	O:0.999931
adding	O	O:0.999554
a	O	O:0.999953
nonzero	O	O:0.986305
number	O	O:0.999662
at	O	O:0.999962
the	O	O:0.999966
end	O	O:0.998128
of	O	O:0.999965
the	O	O:0.999917
array	O	O:0.999611
,	O	O:0.999996
you	O	O:0.999932
can	O	O:0.999944
still	O	O:0.999830
use	O	O:0.999964
np.nonzero	B-API	B-API:0.716905
to	O	O:0.999832
get	O	O:0.999996
your	O	O:0.999599
desired	O	O:0.998623
outcome	O	O:0.999228
.	O	O:0.999474
	
which	O	O:0.999542
simply	O	O:0.999417
sorts	O	O:0.999414
the	O	O:0.999884
terms	O	O:0.997897
and	O	O:0.999980
then	O	O:0.999842
takes	O	O:0.999864
the	O	O:0.999985
ones	O	O:0.995662
which	O	O:0.999616
aren't	O	O:0.999986
equal	O	O:0.999587
to	O	O:0.999971
the	O	O:0.999992
previous	O	O:0.997776
one	O	O:0.999672
.	O	O:0.999826
	
4	O	O:0.999375
:	O	O:0.999986
I	O	O:0.999988
am	O	O:0.999992
not	O	O:0.999781
sure	O	O:0.999958
about	O	O:0.999818
the	O	O:0.999687
indices	O	O:0.968267
,	O	O:0.999993
by	O	O:0.999972
writing	O	O:0.999886
couple	O	O:0.998030
of	O	O:0.999996
code	O	O:0.999836
lines	O	O:0.999356
I	O	O:0.999996
just	O	O:0.999959
able	O	O:0.999743
to	O	O:0.999981
get	O	O:0.999813
cluster	O	O:0.999389
indices	O	O:0.998014
based	O	O:0.999698
on	O	O:0.999835
fclusterdata	O	B-API:0.792728
.	O	O:0.999433
	
Matlab	O	O:0.999418
gives	O	O:0.999712
me	O	O:0.999976
a	O	O:0.999988
norm	O	O:0.628287
=	O	O:0.999978
2	O	O:0.999946
for	O	O:0.999975
your	O	O:0.997013
matrix	O	O:0.936122
.	O	O:0.999401
	
I	O	O:0.999975
first	O	O:0.999855
generated	O	O:0.999424
a	O	O:0.999937
labelled	O	O:0.999814
array	O	O:0.999372
of	O	O:0.999800
unique	O	O:0.991388
IDs	O	O:0.999614
for	O	O:0.999964
each	O	O:0.998964
discrete	O	O:0.990225
region	O	O:0.999123
,	O	O:0.999992
calculated	O	O:0.999855
sizes	O	O:0.998505
for	O	O:0.999990
each	O	O:0.999212
ID	O	O:0.999648
,	O	O:0.999967
masked	O	O:0.998508
the	O	O:0.999944
size	O	O:0.999723
array	O	O:0.999854
to	O	O:0.999971
focus	O	O:0.999725
only	O	O:0.999685
on	O	O:0.999992
size	O	O:0.999970
==	O	O:0.999983
1	O	O:0.999901
blobs	O	O:0.999518
,	O	O:0.999992
then	O	O:0.998970
index	O	O:0.999253
the	O	O:0.999945
original	O	O:0.997633
array	O	O:0.998951
and	O	O:0.999952
set	O	O:0.997868
IDs	O	O:0.999845
with	O	O:0.999863
a	O	O:0.999969
size	O	O:0.999878
==	O	O:0.999974
1	O	O:0.999951
to	O	O:0.999848
0	O	O:0.999917
:	O	O:0.999974
#CODE	O	O:0.999580
	
absolute	B-API	O:0.997031
(	O	O:0.999979
a	O	O:0.999967
-	O	O:0.999994
b	O	O:0.999300
)	O	O:0.999930
=	O	O:0.998916
(	O	O:0.999996
atol	O	O:0.989095
+	O	O:0.999964
rtol	O	O:0.986641
*	O	O:0.999935
absolute	B-API	O:0.998368
(	O	O:0.999991
b	O	O:0.999610
))	O	O:0.999520
	
Then	O	O:0.997002
I	O	O:0.999982
reshape	O	O:0.984853
this	O	O:0.999531
to	O	O:0.999996
form	O	O:0.999988
a	O	O:0.999976
2D	O	O:0.999953
numpy	O	O:0.996217
array	O	O:0.998148
.	O	O:0.999510
	
n=5	O	O:0.986378
(	O	O:0.999984
min	O	O:0.978038
length	O	O:0.999394
of	O	O:0.999954
sequence	O	O:0.993439
)	O	O:0.999763
	
I	O	O:0.999990
have	O	O:0.999690
written	O	O:0.999384
a	O	O:0.999943
function	O	O:0.998861
which	O	O:0.998840
contains	O	O:0.997997
nested	O	O:0.998830
loops	O	O:0.998748
and	O	O:0.999823
a	O	O:0.999943
conditional	O	O:0.957409
statement	O	O:0.999153
;	O	O:0.999994
the	O	O:0.999941
purpose	O	O:0.999004
of	O	O:0.999940
the	O	O:0.999960
loop	O	O:0.999279
is	O	O:0.999981
to	O	O:0.999927
return	O	O:0.999098
a	O	O:0.999988
list	O	O:0.995204
of	O	O:0.999967
indices	O	O:0.961224
for	O	O:0.999947
the	O	O:0.999707
nearest	O	O:0.989987
elements	O	O:0.999610
in	O	O:0.999990
array	O	O:0.999899
x	O	O:0.999738
when	O	O:0.998885
compared	O	O:0.999970
to	O	O:0.999996
array	O	O:0.999965
y	O	O:0.998922
.	O	O:0.999472
	
I	O	O:0.999966
also	O	O:0.999962
want	O	O:0.999837
to	O	O:0.999832
color	O	O:0.999989
the	O	O:0.999896
1D	O	O:0.999835
histogram	O	O:0.999769
bars	O	O:0.999955
according	O	O:0.999970
to	O	O:0.999818
the	O	O:0.999994
same	O	O:0.998876
normalization	O	O:0.998641
.	O	O:0.999971
	
If	O	O:0.999957
you	O	O:0.999731
are	O	O:0.999841
calling	O	O:0.996647
it	O	O:0.999981
with	O	O:0.999813
an	O	O:0.999932
empty	O	O:0.999504
matrix	O	O:0.989623
for	O	O:0.999853
[	O	O:0.999934
low	O	O:0.998670
,	O	O:0.999996
high	O	O:0.998412
]	O	O:0.999858
it	O	O:0.999678
will	O	O:0.999947
just	O	O:0.999772
use	O	O:0.999856
whatever	O	O:0.999224
the	O	O:0.998122
max	O	B-API:0.594617
and	O	O:0.999717
min	O	O:0.972339
values	O	O:0.997997
in	O	O:0.999937
the	O	O:0.999947
array	O	O:0.997298
are	O	O:0.999277
.	O	O:0.999594
	
Creating	O	O:0.999411
a	O	O:0.999926
class	O	O:0.999539
deriving	O	O:0.999949
from	O	O:0.997472
`	O	O:0.999948
ndarray	B-API	O:0.516774
`	O	O:0.999879
and	O	O:0.999073
overriding	O	O:0.999893
indexing	O	O:0.998836
such	O	O:0.999906
that	O	O:0.999790
the	O	O:0.999866
absolute	O	O:0.998875
indices	O	O:0.992736
are	O	O:0.999904
used	O	O:0.999255
.	O	O:0.997726
	
One	O	O:0.999815
solution	O	O:0.999458
is	O	O:0.999983
to	O	O:0.999956
sort	O	O:0.999870
both	O	O:0.998949
arrays	O	O:0.996814
(	O	O:0.999977
adding	O	O:0.996802
an	O	O:0.999613
index	O	O:0.999528
column	O	O:0.999724
so	O	O:0.999996
that	O	O:0.999916
the	O	O:0.999939
sorted	O	O:0.999280
arrays	O	O:0.999869
still	O	O:0.999129
contains	O	O:0.999633
the	O	O:0.999896
original	O	O:0.997882
indices	O	O:0.991961
)	O	O:0.999870
.	O	O:0.999231
	
Use	O	O:0.999069
`	O	O:0.999788
reshape	B-API	B-API:0.954300
`	O	O:0.999653
:	O	O:0.999861
#CODE	O	O:0.999861
	
What's	O	O:0.998990
wrong	O	O:0.999690
with	O	O:0.999284
the	O	O:0.999821
normal	O	O:0.981698
div	O	O:0.579059
/	O	O:0.999821
mod	O	O:0.992874
operations	O	O:0.999733
?	O	O:0.999916
	
You	O	O:0.999919
can	O	O:0.999754
use	O	O:0.999830
`	O	O:0.999291
argmin	B-API	B-API:0.972578
`	O	O:0.999983
to	O	O:0.999791
find	O	O:0.999985
the	O	O:0.999922
False	O	O:0.991914
values	O	O:0.995332
,	O	O:0.999878
and	O	O:0.999974
this	O	O:0.999534
will	O	O:0.999006
be	O	O:0.999773
faster	O	O:0.997362
and	O	O:0.999869
take	O	O:0.998598
less	O	O:0.998839
memory	O	O:0.999880
than	O	O:0.999365
using	O	O:0.998720
nonzero	B-API	O:0.744232
,	O	O:0.999544
but	O	O:0.999967
this	O	O:0.999076
is	O	O:0.999934
linear	O	O:0.996917
in	O	O:0.999956
the	O	O:0.999834
length	O	O:0.998719
of	O	O:0.999851
`	O	O:0.999954
a	O	O:0.999658
`	O	O:0.999780
.	O	O:0.995904
	
I'd	O	O:0.999916
like	O	O:0.999642
it	O	O:0.999956
to	O	O:0.999868
be	O	O:0.999998
like	O	O:0.999697
8x10^8	O	O:0.999115
or	O	O:0.999865
.8x10	O	O:0.925758
^9	O	O:0.999926
to	O	O:0.999979
save	O	O:0.999957
space	O	O:0.999785
instead	O	O:0.999918
of	O	O:0.999976
putting	O	O:0.996759
all	O	O:0.999702
those	O	O:0.999319
zeros	O	O:0.991550
.	O	O:0.999557
	
The	O	O:0.999947
one	O	O:0.999573
I	O	O:0.999969
pointed	O	O:0.999406
out	O	O:0.999607
in	O	O:0.999950
a	O	O:0.999937
comment	O	O:0.999107
to	O	O:0.999958
other	O	O:0.999976
answer	O	O:0.999966
as	O	O:0.999968
to	O	O:0.999899
encode	O	O:0.999887
the	O	O:0.999949
binary	O	O:0.999024
representation	O	O:0.999901
of	O	O:0.999980
the	O	O:0.999969
array	O	O:0.999862
as	O	O:0.999970
a	O	O:0.999883
Base64	O	O:0.999765
text	O	O:0.996036
block	O	O:0.997175
.	O	O:0.999544
	
due	O	O:0.999549
to	O	O:0.999939
broadcasting	O	O:0.999909
,	O	O:0.999982
you	O	O:0.999812
don't	O	O:0.999934
need	O	O:0.999692
to	O	O:0.999977
repeat	O	O:0.995176
duplicate	O	O:0.999276
indices	O	O:0.991571
,	O	O:0.999996
thus	O	O:0.998617
:	O	O:0.999963
#CODE	O	O:0.999583
	
Maybe	O	O:0.999533
`	O	O:0.999927
flatten()	B-API	B-API:0.994706
`	O	O:0.999932
the	O	O:0.999825
original	O	O:0.999357
array	O	O:0.999514
,	O	O:0.999999
then	O	O:0.999720
use	O/	O:0.999993
your	O	O:0.998891
1D	O	O:0.999829
solution	O	O:0.999809
,	O	O:0.999998
finally	O	O:0.999805
calculate	O	O:0.998082
the	O	O:0.999995
real	O	O:0.994566
nD	O	O:0.999965
indices	O	O:0.999283
using	O	O:0.999905
the	O	O:0.999163
original	O	O:0.984538
shape	O	O:0.999216
?	O	O:0.999972
	
Note	O	O:0.999906
that	O	O:0.999016
the	O	O:0.999984
diagonal	O	O:0.983732
is	O	O:0.999965
always	O	O:0.999876
zero	O	O:0.999826
since	O	O:0.998890
`	O	O:0.999961
mahalanobis	B-API	O:0.992810
(	O	O:0.999993
x	O	O:0.999600
,	O	O:0.999995
x	O	O:0.999884
)`	O	O:0.999857
equals	O	O:0.999910
zero	O	O:0.999636
for	O	O:0.999860
	
possible	O	O:0.999635
duplicate	O	O:0.999397
of	O	O:0.999890
[	O	O:0.999976
NumPy	O	O:0.999795
min	B-API	O:0.825683
/	O	O:0.999079
max	B-API	O:0.713783
in-place	O	O:0.999732
assignment	O	O:0.999496
]	O	O:0.999385
(	O	O:0.999827
#URL	O	O:0.999664
)	O	O:0.999459
	
Once	O	O:0.999190
the	O	O:0.999975
tree	O	O:0.999529
structure	O	O:0.999810
has	O	O:0.999962
been	O	O:0.999290
built	O	O:0.999590
,	O	O:0.999971
go	O	O:0.999754
back	O	O:0.998750
and	O	O:0.999950
collect	O	O:0.998393
all	O	O:0.998873
the	O	O:0.999868
branches	O	O:0.974751
and	O	O:0.999816
leaves	O	O:0.999571
into	O	O:0.999433
the	O	O:0.999968
array	O	O:0.993744
structure	O	O:0.998347
and	O	O:0.999941
by	O	O:0.999950
definition	O	O:0.997345
,	O	O:0.999995
they	O	O:0.999835
will	O	O:0.999069
be	O	O:0.999883
unique	O	O:0.992825
.	O	O:0.998781
	
I	O	O:0.999961
wrote	O	O:0.999832
the	O	O:0.999735
following	O	O:0.999361
code	O	O:0.998416
but	O	O:0.999947
the	O	O:0.999940
output	O	O:0.999716
only	O	O:0.999474
contains	O	O:0.999607
the	O	O:0.999967
ids	O	O:0.995667
(	O	O:0.999987
single	O	O:0.999820
column	O	O:0.999579
)	O	O:0.999813
.	O	O:0.998807
	
Maximum	O	O:0.994199
is	O	O:0.999964
always	O	O:0.999150
bigger	O	O:0.999953
than	O	O:0.998983
the	O	O:0.999731
minimum	O	O:0.982605
(	O	O:0.999998
more	O	O:0.999795
to	O	O:0.999991
the	O	O:0.999994
right	O	O:0.999606
on	O	O:0.999993
a	O	O:0.999985
1d	O	O:0.999980
axis	O	O:0.998647
,	O	O:0.999985
not	O	O:0.999900
by	O	O:0.999959
absolute	O	O:0.999939
value	O	O:0.999022
)	O	O:0.999778
.	O	O:0.998416
	
Note	O	O:0.999943
that	O	O:0.998294
`	O	O:0.999980
unq_count	O	O:0.953823
`	O	O:0.999981
doesn't	O	O:0.999540
count	O	O:0.999328
the	O	O:0.999992
occurrences	O	O:0.999209
of	O	O:0.999942
the	O	O:0.999965
last	O	O:0.998953
unique	O	O:0.999579
item	O	O:0.999217
,	O	O:0.999976
because	O	O:0.999892
that	O	O:0.995311
is	O	O:0.999986
not	O	O:0.999667
needed	O	O:0.999896
to	O	O:0.999963
split	O	O:0.963773
the	O	O:0.999896
index	O	O:0.997147
array	O	O:0.999021
.	O	O:0.999784
	
If	O	O:0.999960
yes	O	O:0.999797
,	O	O:0.999999
you	O	O:0.999981
can	O	O:0.999791
use	O	O:0.999980
the	O	O:0.999361
Linux	O	O:0.997989
terminal	O	O:0.999289
to	O	O:0.999989
strip	O	O:0.999944
quotes	O	O:0.999885
from	O	O:0.999845
the	O	O:0.999997
ends	O	O:0.999958
of	O	O:0.999991
the	O	O:0.999989
rows	O	O:0.999559
quickly	O	O:0.998344
.	O	O:0.999881
	
The	O	O:0.994620
append	B-API	B-API:0.725098
method	O	O:0.991858
for	O	O:0.999934
a	O	O:0.999955
numpy	O	O:0.995361
array	O	O:0.999583
returns	O	O:0.999899
a	O	O:0.999996
copy	O	O:0.988245
of	O	O:0.999984
the	O	O:0.999682
array	O	O:0.999723
with	O	O:0.999545
new	O	O:0.999601
items	O	O:0.999907
added	O	O:0.999906
to	O	O:0.999935
the	O	O:0.999923
end	O	O:0.987357
.	O	O:0.999671
	
I	O	O:0.999989
want	O	O:0.999916
to	O	O:0.999648
get	O	O:0.999968
the	O	O:0.999987
norm	B-API	B-API:0.725908
of	O	O:0.999993
this	O	O:0.999939
array	O	O:0.999948
using	O	O:0.999335
numpy	O	O:0.890690
.	O	O:0.997294
	
The	O	O:0.999959
only	O	O:0.999344
problem	O	O:0.999810
here	O	O:0.998672
is	O	O:0.999997
that	O	O:0.998571
I	O	O:0.999995
think	O	O:0.999217
it	O	O:0.999878
will	O	O:0.998764
append	O	O:0.975889
directly	O	O:0.999462
to	O	O:0.999971
the	O	O:0.999986
column	O	O:0.998213
,	O	O:0.999998
when	O	O:0.999526
I	O	O:0.999984
would	O	O:0.999877
prefer	O	O:0.998235
it	O	O:0.999986
to	O	O:0.999905
append	O	O:0.987152
to	O	O:0.999967
a	O	O:0.999997
new	O	O:0.998865
column	O	O:0.995310
.	O	O:0.999742
	
You	O	O:0.999605
don't	O	O:0.999856
need	O	O:0.998269
to	O	O:0.999772
import	O	O:0.999871
string	O	O:0.996466
,	O	O:0.999719
and	O	O:0.999942
you	O	O:0.999367
don't	O	O:0.999833
need	O	O:0.999670
to	O	O:0.999985
loop	O	O:0.999989
through	O	O:0.999754
all	O	O:0.999291
the	O	O:0.999867
lines	O	O:0.968931
and	O	O:0.999509
append	O	O:0.971521
text	O	O:0.997493
or	O	O:0.999979
count	O	O:0.990410
the	O	O:0.999967
characters	O	O:0.996024
.	O	O:0.999731
	
The	O	O:0.999977
transpose	O	O:0.910465
of	O	O:0.999937
the	O	O:0.999948
transpose	O	O:0.953522
of	O	O:0.999951
a	O	O:0.999919
matrix	O	O:0.982433
==	O	O:0.999934
that	O	O:0.997044
matrix	O	O:0.996780
,	O	O:0.999978
or	O	O:0.999887
,	O	O:0.999914
[	O	O:0.999994
A^T	O	O:0.998567
]	O	O:0.999886
^T	O	O:0.985503
==	O	O:0.999874
A	O	O:0.998980
.	O	O:0.999759
	
Currently	O	O:0.999469
I	O	O:0.999991
am	O	O:0.999987
looping	O	O:0.988363
through	O	O:0.999019
the	O	O:0.999501
arrays	O	O:0.993376
and	O	O:0.999863
using	O	O:0.999603
numpy.dstack	B-API	B-API:0.848860
to	O	O:0.999280
stack	O	O:0.995115
the	O	O:0.999871
1000	O	O:0.992771
arrays	O	O:0.999891
into	O	O:0.999916
a	O	O:0.999992
rather	O	O:0.998314
large	O	O:0.995823
3d	O	O:0.998485
array	O	O:0.995119
...	O	O:0.995860
and	O	O:0.999825
then	O	O:0.999800
will	O	O:0.999697
calculate	O	O:0.999690
the	O	O:0.999994
mean	O	O:0.994624
across	O	O:0.999902
the	O	O:0.999895
3rd	O	O:0.997297
(	O	O:0.999980
?	O	O:0.999996
)	O	O:0.999937
dimension	O	O:0.997149
.	O	O:0.999863
	
If	O	O:0.999963
you	O	O:0.999834
strip	O	O:0.998368
all	O	O:0.999747
these	O	O:0.999232
out	O	O:0.997804
and	O	O:0.999785
just	O	O:0.999756
call	O	O:0.957535
lapack	O	O:0.998492
in	O	O:0.999950
your	O	O:0.999394
for	O	O:0.999944
loop	O	O:0.995676
(	O	O:0.999984
since	O	O:0.999831
you	O	O:0.999970
already	O	O:0.999960
know	O	O:0.999879
the	O	O:0.999980
dimensions	O	O:0.994564
of	O	O:0.999979
your	O	O:0.998837
matrix	O	O:0.989139
and	O	O:0.999887
maybe	O	O:0.998997
know	O	O:0.999499
that	O	O:0.997919
it's	O	O:0.999925
real	O	O:0.973912
,	O	O:0.999991
not	O	O:0.999823
complex	O	O:0.993602
)	O	O:0.999905
,	O	O:0.999978
things	O	O:0.999861
run	O	O:0.999256
MUCH	O	O:0.998681
faster	O	O:0.998982
(	O	O:0.999842
Note	O	O:0.999868
that	O	O:0.999313
I've	O	O:0.999982
made	O	O:0.999867
my	O	O:0.999941
array	O	O:0.999279
larger	O	O:0.998632
)	O	O:0.995274
:	O	O:0.999622
#CODE	O	O:0.999722
	
First	O	O:0.999181
,	O	O:0.999975
you	O	O:0.999974
have	O	O:0.999575
a	O	O:0.999995
binomial	O	O:0.998202
response	O	O:0.995774
:	O	O:0.999970
having	O	O:0.999418
or	O	O:0.999908
not	O	O:0.999586
having	O	O:0.999939
a	O	O:0.999965
particular	O	O:0.995311
behavior	O	O:0.998756
.	O	O:0.999267
	
The	O	O:0.999969
call	O	O:0.986168
to	O	O:0.999883
`	O	O:0.999947
np.sqrt	B-API	B-API:0.992705
`	O	O:0.999935
,	O	O:0.999962
which	O	O:0.999868
is	O	O:0.999978
a	O	O:0.999977
Python	O	O:0.994706
function	O	O:0.999830
call	O	O:0.975827
,	O	O:0.999973
is	O	O:0.999909
killing	O	O:0.999022
your	O	O:0.999509
performance	O	O:0.999572
You	O	O:0.999971
are	O	O:0.999930
computing	O	O:0.999455
the	O	O:0.999675
square	O	O:0.999884
root	O	O:0.999877
of	O	O:0.999975
scalar	O	O:0.999531
floating	O	O:0.999606
point	O	O:0.998284
value	O	O:0.999775
,	O	O:0.999993
so	O	O:0.999989
you	O	O:0.999916
should	O	O:0.999885
use	O	O:0.999971
the	O	O:0.999276
`	O	O:0.999921
sqrt	B-API	O:0.663714
`	O	O:0.999985
function	O	O:0.999884
from	O	O:0.999977
the	O	O:0.999764
C	O	O:0.999968
math	O	O:0.999603
library	O	O:0.998311
.	O	O:0.999726
	
This	O	O:0.998605
would	O	O:0.999878
call	O	O:0.996815
the	O	O:0.999962
function	O	O:0.977618
`	O	O:0.999921
np.loadtxt	B-API	B-API:0.944881
`	O	O:0.999959
which	O	O:0.997481
would	O	O:0.999948
load	O	O:0.999812
the	O	O:0.999996
file	O	O:0.992281
`	O	O:0.999940
GPBUSD1d.txt	O	O:0.927550
'`	O	O:0.999892
and	O	O:0.998960
transpose	O	O:0.614151
(	O	O:0.999735
"	O	O:0.999745
unpack	O	B-API:0.503992
")	O	O:0.999227
it	O	O:0.999090
.	O	O:0.999799
	
You	O	O:0.999837
can't	O	O:0.999446
change	O	O:0.998787
the	O	O:0.999899
typing	O	O:0.998518
of	O	O:0.999929
the	O	O:0.999696
array	O	O:0.998954
in-place	O	O:0.998147
(	O	O:0.999967
unless	O	O:0.999608
I'm	O	O:0.999963
grossly	O	O:0.999423
mistaken	O	O:0.996918
)	O	O:0.999310
,	O	O:0.999916
but	O	O:0.999988
you	O	O:0.999815
can	O	O:0.999155
floor	B-API	O:0.985718
.	O	O:0.999755
	
Finally	O	O:0.998968
I	O	O:0.999994
just	O	O:0.999815
transpose	O	O:0.889815
the	O	O:0.999951
dataframe	O	O:0.999595
to	O	O:0.999957
get	O	O:0.999988
ids	O	O:0.999934
as	O	O:0.999992
rows	O	O:0.997729
and	O	O:0.999976
categories	O	O:0.998591
as	O	O:0.999911
columns	O	O:0.995022
.	O	O:0.999749
	
The	O	O:0.999901
following	O	O:0.999800
way	O	O:0.999753
of	O	O:0.999918
obtaining	O	O:0.999452
the	O	O:0.999728
unique	O	O:0.995883
elements	O	O:0.999078
in	O	O:0.999938
all	O	O:0.999827
sub-arrays	O	O:0.997145
is	O	O:0.999968
very	O	O:0.999579
fast	O	O:0.998166
:	O	O:0.999970
#CODE	O	O:0.999065
	
You	O	O:0.999892
can't	O	O:0.999409
use	O	O:0.999870
the	O	O:0.999741
numpy	O	O:0.988391
reshape	B-API	O:0.803229
for	O	O:0.999976
a	O	O:0.999975
simple	O	O:0.983000
reason	O	O:0.992995
:	O	O:0.999987
you	O	O:0.999978
have	O	O:0.999982
data	O	O:0.999989
duplicity	O	O:0.999750
in	O	O:0.999993
your	O	O:0.999750
original	O	O:0.998331
array	O	O:0.995405
(	O	O:0.999989
time	O	O:0.999261
and	O	O:0.999924
positions	O	O:0.985585
)	O	O:0.998766
and	O	O:0.999402
not	O	O:0.999600
in	O	O:0.999909
the	O	O:0.999729
result	O	O:0.998018
you	O	O:0.999841
want	O	O:0.999521
.	O	O:0.999748
	
So	O	O:0.999854
it	O	O:0.999968
does	O	O:0.999161
not	O	O:0.999943
make	O	O:0.999891
much	O	O:0.999904
sense	O	O:0.999901
to	O	O:0.999961
me	O	O:0.999990
to	O	O:0.999929
reshape	O	O:0.980594
it	O	O:0.999989
to	O	O:0.999989
a	O	O:0.999994
"	O	O:0.999651
1d-matrix	O	O:0.983877
"	O	O:0.999559
.	O	O:0.998961
	
Now	O	O:0.999752
create	O	O:0.997769
5-bit	O	O:0.999701
bitstrings	O	O:0.999880
from	O	O:0.999868
each	O	O:0.998194
integer	O	O:0.999671
and	O	O:0.999842
join	O	O:0.765887
them	O	O:0.998623
together	O	O:0.998554
:	O	O:0.999932
#CODE	O	O:0.999255
	
It	O	O:0.999755
would	O	O:0.999833
probably	O	O:0.999398
be	O	O:0.999997
just	O	O:0.999158
as	O	O:0.999984
much	O	O:0.999589
work	O	O:0.999609
to	O	O:0.999977
translate	O	O:0.999988
the	O	O:0.999932
top	O	O:0.997138
Matlab	O	O:0.999918
routine	O	O:0.999617
from	O	O:0.999458
Maurits	O	O:0.997942
.	O	O:0.999906
	
In	O	O:0.999924
the	O	O:0.999959
particular	O	O:0.999757
case	O	O:0.999783
of	O	O:0.999999
your	O	O:0.999799
example	O	O:0.999591
,	O	O:0.999990
where	O	O:0.999938
your	O	O:0.999325
unique	O	O:0.999210
values	O	O:0.996953
are	O	O:0.999771
sequential	O	O:0.998296
integers	O	O:0.999683
,	O	O:0.999998
you	O	O:0.999943
can	O	O:0.999821
use	O	O:0.999963
`	O	O:0.999890
find_objects	B-API	B-API:0.969977
`	O	O:0.999979
directly	O	O:0.994413
.	O	O:0.999887
	
axis=1	O	O:0.994894
refers	O	O:0.999160
to	O	O:0.999951
working	O	O:0.999967
on	O	O:0.999981
rows	O	O:0.999005
in	O	O:0.999996
this	O	O:0.999902
2d	O	O:0.999980
case	O	O:0.995584
(	O	O:0.999992
axis=0	O	O:0.997639
,	O	O:0.999960
in	O	O:0.999939
contrast	O	O:0.998457
,	O	O:0.999983
would	O	O:0.999911
be	O	O:0.999982
getting	O	O:0.999805
you	O	O:0.999623
the	O	O:0.999860
max	B-API	O:0.700023
in	O	O:0.999961
each	O	O:0.999889
column	O	O:0.999567
)	O	O:0.999677
	
There	O	O:0.998278
are	O	O:0.999983
many	O	O:0.998780
other	O	O:0.999559
`	O	O:0.999928
ufunc	B-API	B-API:0.889982
`	O	O:0.999899
,	O	O:0.999712
and	O	O:0.999959
other	O	O:0.999394
iteration	O	O:0.999568
modes	O	O:0.996621
-	O	O:0.999981
`	O	O:0.999969
accumulate	B-API	O:0.832044
`	O	O:0.999979
,	O	O:0.999860
`	O	O:0.999989
reduceat	B-API	B-API:0.976113
`	O	O:0.999940
.	O	O:0.999071
	
All	O	O:0.999580
diagonal	O	O:0.998847
elements	O	O:0.999708
will	O	O:0.999874
be	O	O:0.999991
of	O	O:0.999951
the	O	O:0.999909
form	O	O:0.999518
`	O	O:0.999928
s_i	O	O:0.987088
**	O	O:0.999893
2	O	O:0.999860
/	O	O:0.999877
s_i	O	O:0.989567
**	O	O:0.999573
2	O	O:0.999902
==	O	O:0.999969
1	O	O:0.998580
`	O	O:0.999866
.	O	O:0.998582
	
@USER	O	O:0.999208
In	O	O:0.999952
the	O	O:0.999946
example	O	O:0.998868
above	O	O:0.999925
,	O	O:0.999993
I	O	O:0.999995
get	O	O:0.999825
the	O	O:0.999804
following	O	O:0.998648
error	O	O:0.994017
:	O	O:0.999987
Non-broadcastable	O	O:0.998930
operand	O	O:0.999818
with	O	O:0.999685
shape	O	O:0.998274
(	O	O:0.999991
100	O	O:0.999529
)	O	O:0.999954
doesn't	O	O:0.998764
match	O	O:0.996412
the	O	O:0.999848
broadcast	B-API	O:0.962376
shape	O	O:0.998530
(	O	O:0.999985
100,100	O	O:0.997834
)	O	O:0.999536
	
is	O	O:0.999905
calculated	O	O:0.999117
such	O	O:0.999985
that	O	O:0.999221
all	O	O:0.998801
but	O	O:0.999662
the	O	O:0.999365
diagonal	O	O:0.977226
#CODE	O	O:0.999345
	
To	O	O:0.999967
compute	O	O:0.999548
the	O	O:0.999972
number	O	O:0.999204
of	O	O:0.999883
unique	O	O:0.999159
elements	O	O:0.999854
in	O	O:0.999970
a	O	O:0.999992
numpy	O	O:0.997950
array	O	O:0.999298
,	O	O:0.999997
you	O	O:0.999918
can	O	O:0.999859
use	O	O:0.999962
`	O	O:0.999849
unique	B-API	O:0.933182
(	O	O:0.999995
x	O	O:0.997667
)	O	O:0.999944
.size	O	B-API:0.801323
`	O	O:0.999977
or	O	O:0.999825
`	O	O:0.999900
len	B-API	B-API:0.964493
(	O	O:0.999984
unique	B-API	O:0.981973
(	O	O:0.999984
x	O	O:0.998898
))`	O	O:0.999393
(	O	O:0.999992
see	O	O:0.999879
`	O	O:0.999971
numpy.unique	B-API	B-API:0.976249
`	O	O:0.999890
)	O	O:0.999441
.	O	O:0.999556
	
Or	O	O:0.999725
would	O	O:0.999730
that	O	O:0.999946
basically	O	O:0.999934
require	O	O:0.998786
implementing	O	O:0.999706
the	O	O:0.999707
outer	O	O:0.999304
loop	O	O:0.998774
in	O	O:0.999913
Cython	O	O:0.999385
?	O	O:0.999957
	
For	O	O:0.999852
a	O	O:0.999844
tensor	O	O:0.994004
it	O	O:0.998716
is	O	O:0.999973
not	O	O:0.999584
clear	O	O:0.999785
how	O	O:0.999901
to	O	O:0.999960
define	O	O:0.999834
an	O	O:0.999951
inverse	O	O:0.999899
or	O	O:0.999985
a	O	O:0.999909
transpose	O	O:0.568535
.	O	O:0.999008
	
Second	O	O:0.998799
,	O	O:0.999989
you	O	O:0.999935
are	O	O:0.999967
doing	O	O:0.999832
transpose	B-API	O:0.791685
the	O	O:0.999811
hard	O	O:0.997787
way	O	O:0.999540
.	O	O:0.999738
	
Where	O	O:0.999871
does	O	O:0.998386
log	B-API	O:0.999528
(	O	O:0.999986
b	O	O:0.999641
,	O	O:0.999993
2	O	O:0.999921
)	O	O:0.999978
come	O	O:0.999313
from	O	O:0.999875
?	O	O:0.999938
	
(	O	O:0.999949
The	O	O:0.999966
values	O	O:0.998557
in	O	O:0.999956
the	O	O:0.999948
corners	O	O:0.993412
correspond	O	O:0.999893
to	O	O:0.999980
the	O	O:0.999996
diagonal	O	O:0.997954
elements	O	O:0.999674
.	O	O:0.999936
)	O	O:0.999838
	
I	O	O:0.999980
tried	O	O:0.999873
using	O	O:0.996498
the	O	O:0.995638
scipy.stat	B-API	O:0.896308
module	O	O:0.999102
by	O	O:0.999979
creating	O	O:0.999937
my	O	O:0.999765
numbers	O	O:0.999682
with	O	O:0.998885
`	O	O:0.999958
np.random.normal	B-API	B-API:0.976626
`	O	O:0.999918
,	O	O:0.999974
since	O	O:0.999893
it	O	O:0.999985
only	O	O:0.999954
takes	O	O:0.999915
data	O	O:0.999434
and	O	O:0.999859
not	O	O:0.999807
stat	O	O:0.531520
values	O	O:0.999529
like	O	O:0.999845
mean	O	O:0.990956
and	O	O:0.999827
std	O	O:0.951696
dev	O	O:0.974937
(	O	O:0.999934
is	O	O:0.999989
there	O	O:0.999749
any	O	O:0.999868
way	O	O:0.999837
to	O	O:0.999711
use	O	O:0.999981
these	O	O:0.998818
values	O	O:0.999356
directly	O	O:0.998601
)	O	O:0.999623
.	O	O:0.998252
	
The	O	O:0.999907
asymptotic	O	O:0.999752
complexity	O	O:0.999584
of	O	O:0.999995
both	O	O:0.999316
of	O	O:0.999988
the	O	O:0.998343
`	O	O:0.999821
matrix_rank	B-API	B-API:0.996459
`	O	O:0.999931
and	O	O:0.999177
`	O	O:0.999988
det	B-API	O:0.699088
`	O	O:0.999992
calls	O	O:0.996437
are	O	O:0.999996
therefore	O	O:0.996721
O	O	O:0.961130
(	O	O:0.999988
n^3	O	O:0.998730
)	O	O:0.999907
,	O	O:0.999980
the	O	O:0.999994
complexity	O	O:0.999442
of	O	O:0.999950
LU	O	O:0.999942
decomposition	O	O:0.999171
.	O	O:0.999674
	
I	O	O:0.999975
think	O	O:0.999881
the	O	O:0.999515
np.std()	B-API	B-API:0.999779
is	O	O:0.999954
just	O	O:0.999891
universal	O	O:0.998099
std	B-API	O:0.826367
.	O	O:0.999335
	
Golub	O	O:0.966581
and	O	O:0.999255
Van	O	O:0.999437
Loan	O	O:0.999684
also	O	O:0.999874
provide	O	O:0.999804
a	O	O:0.999977
way	O	O:0.999798
of	O	O:0.999932
storing	O	O:0.998815
a	O	O:0.999892
matrix	O	O:0.926517
in	O	O:0.999877
diagonal	O	O:0.998709
dominant	O	O:0.999332
form	O	O:0.999001
.	O	O:0.999751
	
I	O	O:0.999974
see	O	O:0.999969
no	O	O:0.999340
reason	O	O:0.999641
why	O	O:0.999825
`	O	O:0.999976
numpy	O	O:0.981353
`	O	O:0.999907
would	O	O:0.999684
need	O	O:0.999858
to	O	O:0.999998
make	O	O:0.999957
a	O	O:0.999996
copy	O	O:0.958816
for	O	O:0.999892
an	O	O:0.999161
operation	O	O:0.999621
like	O	O:0.999925
this	O	O:0.999871
,	O	O:0.999977
as	O	O:0.999990
long	O	O:0.999566
as	O	O:0.999951
it	O	O:0.999984
does	O	O:0.999628
the	O	O:0.999984
necessary	O	O:0.999549
checks	O	O:0.999606
for	O	O:0.999968
overlaps	O	O:0.997895
(	O	O:0.999985
though	O	O:0.999919
of	O	O:0.999971
course	O	O:0.998172
as	O	O:0.999973
others	O	O:0.999559
have	O	O:0.999426
noted	O	O:0.999490
,	O	O:0.999975
`	O	O:0.999966
resize	B-API	B-API:0.554801
`	O	O:0.999985
may	O	O:0.998137
itself	O	O:0.999971
have	O	O:0.999816
to	O	O:0.999985
allocate	O	O:0.999997
a	O	O:0.999983
new	O	O:0.999789
block	O	O:0.998830
of	O	O:0.999970
memory	O	O:0.987013
)	O	O:0.999627
.	O	O:0.996188
	
I	O	O:0.999972
found	O	O:0.999732
another	O	O:0.998141
stack	O	O:0.731373
question	O	O:0.998680
about	O	O:0.999941
this	O	O:0.999687
here	O	O:0.993964
,	O	O:0.999984
but	O	O:0.999884
I	O	O:0.999953
am	O	O:0.999959
not	O	O:0.999171
entirely	O	O:0.999949
sure	O	O:0.999634
how	O	O:0.999920
it	O	O:0.999941
was	O	O:0.999882
resolved	O	O:0.999573
,	O	O:0.999987
I'm	O	O:0.999982
still	O	O:0.999007
a	O	O:0.999974
little	O	O:0.992125
confused	O	O:0.996546
.	O	O:0.999187
	
Maybe	O	O:0.998756
`	O	O:0.999871
floor	B-API	B-API:0.505749
(	O	O:0.999954
arange	B-API	O:0.861658
(	O	O:0.999927
0	O	O:0.999896
,	O	O:0.999984
10	O	O:0.999798
,	O	O:0.999942
0.1	O	O:0.997473
))`	O	O:0.998888
?	O	O:0.999830
	
In	O	O:0.999794
python	O	O:0.998537
,	O	O:0.999986
I	O	O:0.999891
would	O	O:0.999964
like	O	O:0.999650
to	O	O:0.999991
convolve	O	O:0.951974
the	O	O:0.999977
two	O	O:0.999877
matrices	O	O:0.999665
along	O	O:0.999700
the	O	O:0.999728
second	O	O:0.998531
axis	O	O:0.999953
only	O	O:0.999225
.	O	O:0.999868
	
`	O	O:0.999949
view	B-API	O:0.915884
`	O	O:0.999974
is	O	O:0.999945
basically	O	O:0.999803
taking	O	O:0.999949
your	O	O:0.999001
two	O	O:0.999925
coordinates	O	O:0.999178
as	O	O:0.999990
a	O	O:0.999979
single	O	O:0.999192
variable	O	O:0.999935
that	O	O:0.999760
can	O	O:0.999907
be	O	O:0.999998
used	O	O:0.999920
to	O	O:0.999799
find	O	O:0.999860
the	O	O:0.999895
unique	O	O:0.995439
coordinates	O	O:0.959151
.	O	O:0.999797
	
Keep	O	O:0.994997
in	O	O:0.999889
mind	O	O:0.999700
that	O	O:0.999881
machine	O	O:0.999812
precision	O	O:0.999681
for	O	O:0.999974
a	O	O:0.999853
32-bit	O	O:0.998519
double	O	O:0.992035
is	O	O:0.999897
~	O	O:0.998381
10^-16	O	O:0.997783
,	O	O:0.999796
which	O	O:0.999524
will	O	O:0.999350
be	O	O:0.999985
an	O	O:0.999942
absolute	O	O:0.999682
limiting	O	O:0.968111
factor	O	O:0.988281
.	O	O:0.998868
	
Also	O	O:0.999062
,	O	O:0.999987
if	O	O:0.999977
there	O	O:0.997376
is	O	O:0.999994
then	O	O:0.998703
I	O	O:0.999996
could	O	O:0.999973
just	O	O:0.999283
append	O	O:0.932594
to	O	O:0.999762
the	O	O:0.999980
b	O	O:0.999046
and	O	O:0.999921
c	O	O:0.999093
arrays	O	O:0.999781
each	O	O:0.999639
time	O	O:0.999772
instead	O	O:0.999580
of	O	O:0.999931
overwriting	O	O:0.994525
and	O	O:0.999788
starting	O	O:0.999869
from	O	O:0.995520
scratch	O	O:0.999857
each	O	O:0.999891
loop	O	O:0.998731
.	O	O:0.999785
	
Use	O	O:0.998874
`	O	O:0.999738
multiprocessing.Process	B-API	B-API:0.994860
(	O	O:0.999983
target	O	O:0.999789
=	O	O:0.999990
somefunc	O	O:0.942320
,	O	O:0.999994
args	O	O:0.996743
=	O	O:0.999925
(	O	O:0.999990
sa	O	O:0.999464
,	O	O:0.999974
)`	O	O:0.999739
(	O	O:0.999835
and	O	O:0.999913
`	O	O:0.999979
start	O	O:0.931319
`	O	O:0.999979
,	O	O:0.999972
maybe	O	O:0.999628
`	O	O:0.999977
join	B-API	B-API:0.902320
`)	O	O:0.999970
to	O	O:0.999970
call	O	O:0.998758
`	O	O:0.999994
somefunc	O	B-API:0.648519
`	O	O:0.999987
in	O	O:0.999929
a	O	O:0.999995
separate	O	O:0.999738
process	O	O:0.990981
,	O	O:0.999997
passing	O	O:0.998952
the	O	O:0.999498
shared	O	O:0.998500
array	O	O:0.998523
.	O	O:0.999723
	
Take	O	O:0.999441
a	O	O:0.999992
look	O	O:0.997868
a	O	O:0.999976
the	O	O:0.999681
concatenate	B-API	B-API:0.814264
function	O	O:0.998472
.	O	O:0.999898
	
Unlike	O	O:0.998539
Joe	O	O:0.999958
Kington's	O	O:0.999711
answer	O	O:0.999484
,	O	O:0.999967
the	O	O:0.999914
benefit	O	O:0.996533
of	O	O:0.999995
this	O	O:0.998459
is	O	O:0.999998
that	O	O:0.999300
you	O	O:0.999885
don't	O	O:0.999956
need	O	O:0.999816
to	O	O:0.999984
know	O	O:0.999973
the	O	O:0.999978
original	O	O:0.999417
shape	O	O:0.999928
of	O	O:0.999995
the	O	O:0.999982
data	O	O:0.999811
in	O	O:0.999976
the	O	O:0.999799
`	O	O:0.999923
.mat	O	O:0.733865
`	O	O:0.999996
file	O	O:0.997929
,	O	O:0.999995
i.e.	O	O:0.999446
no	O	O:0.999899
need	O	O:0.999669
to	O	O:0.999962
reshape	O	O:0.985389
upon	O	O:0.999415
reading	O	O:0.998583
in	O	O:0.999437
.	O	O:0.999680
	
but	O	O:0.999098
I	O	O:0.999991
think	O	O:0.999384
,	O	O:0.999947
finding	O	O:0.999641
the	O	O:0.999789
local	O	O:0.987484
max	O	O:0.952033
can	O	O:0.999255
be	O	O:0.999997
simplified	O	O:0.999610
to	O	O:0.998642
:	O	O:0.999994
#CODE	O	O:0.999550
	
@USER	O	O:0.998541
`	O	O:0.999932
swapaxes	B-API	B-API:0.919352
`	O	O:0.999981
seemed	O	O:0.999581
to	O	O:0.999966
be	O	O:0.999997
indistinguishable	O	O:0.999965
from	O	O:0.998961
`	O	O:0.999947
transpose	B-API	O:0.789007
(	O	O:0.999988
0	O	O:0.999962
,	O	O:0.999985
2	O	O:0.999965
,	O	O:0.999977
1	O	O:0.999911
)`	O	O:0.999526
.	O	O:0.999363
	
Do	O	O:0.999936
gradient	B-API	O:0.999956
actually	O	O:0.999645
compute	O	O:0.999172
really	O	O:0.999596
a	O	O:0.999951
gradient	O	O:0.998292
?	O	O:0.999895
	
I	O	O:0.999833
would	O	O:0.999881
suggest	O	O:0.998186
to	O	O:0.999988
first	O	O:0.999942
program	O	O:0.998688
it	O	O:0.999982
with	O	O:0.999486
`	O	O:0.999778
np.nditer	B-API	B-API:0.881829
`	O	O:0.999664
and	O	O:0.999962
then	O	O:0.999888
translate	O	O:0.999529
it	O	O:0.999992
into	O	O:0.999512
C	O	O:0.999887
.	O	O:0.999251
	
As	O	O:0.999992
you	O	O:0.999877
can	O	O:0.999947
see	O	O:0.999992
,	O	O:0.999997
using	O	O:0.999805
the	O	O:0.999686
join	B-API	B-API:0.978470
function	O	O:0.999728
on	O	O:0.999934
the	O	O:0.999976
list	O	O:0.984333
(	O	O:0.999904
`	O	O:0.999909
binary_list	O	O:0.970653
`)	O	O:0.999863
works	O	O:0.998658
properly	O	O:0.998077
,	O	O:0.999992
but	O	O:0.999869
on	O	O:0.999920
the	O	O:0.999925
equivalent	O	O:0.999931
numpy	O	O:0.998612
array	O	O:0.999524
(	O	O:0.999944
`	O	O:0.999931
binary_split_array	O	O:0.964344
`)	O	O:0.999893
it	O	O:0.999510
doesn't	O	O:0.999721
:	O	O:0.999999
we	O	O:0.999993
can	O	O:0.999890
see	O	O:0.999994
the	O	O:0.999928
string	O	O:0.997093
returned	O	O:0.998783
is	O	O:0.999995
only	O	O:0.999667
72	O	O:0.999944
characters	O	O:0.999650
long	O	O:0.999705
instead	O	O:0.999756
of	O	O:0.999697
80	O	O:0.998492
.	O	O:0.999563
	
@USER	O	O:0.998643
.B	O	O:0.997376
.	O	O:0.999877
the	O	O:0.999945
above	O	O:0.999228
question	O	O:0.999077
is	O	O:0.999994
significantly	O	O:0.999885
different	O	O:0.999733
from	O	O:0.999800
mine	O	O:0.998301
;	O	O:0.999998
it	O	O:0.999966
asks	O	O:0.999624
for	O	O:0.999950
both	O	O:0.997611
min	B-API	O:0.642229
and	O	O:0.997882
max	B-API	B-API:0.590851
,	O	O:0.998072
and	O	O:0.999816
it	O	O:0.999572
is	O	O:0.999931
for	O	O:0.999526
2D	O	O:0.999688
matrix	O	O:0.850403
	
This	O	O:0.999796
will	O	O:0.999345
join	O	O:0.516372
the	O	O:0.999983
rows	O	O:0.996499
and	O	O:0.999887
write	O	O:0.999994
them	O	O:0.999831
to	O	O:0.999988
a	O	O:0.999994
new	O	O:0.997936
csv	O	O:0.986577
:	O	O:0.999976
#CODE	O	O:0.999171
	
The	O	O:0.999904
reason	O	O:0.995652
I	O	O:0.999997
have	O	O:0.999461
`	O	O:0.999726
-det	O	O:0.987995
(	O	O:0.999997
mat	O	O:0.999098
)`	O	O:0.999939
in	O	O:0.999826
the	O	O:0.999990
energy	O	O:0.998168
function	O	O:0.999561
is	O	O:0.999984
because	O	O:0.999548
the	O	O:0.999920
simulated	O	O:0.998244
annealing	O	O:0.993798
algorithm	O	O:0.999913
does	O	O:0.998315
minimization	O	O:0.999010
.	O	O:0.999816
	
Also	O	O:0.999068
is	O	O:0.999958
`	O	O:0.999917
x	O	O:0.993948
`	O	O:0.999969
unique	O	O:0.993173
?	O	O:0.999980
	
Pandas	O	O:0.998864
append	B-API	O:0.777136
filtered	O	O:0.998292
row	O	O:0.999912
to	O	O:0.999944
another	O	O:0.999923
DataFrame	O	O:0.989996
	
Again	O	O:0.998414
,	O	O:0.999982
the	O	O:0.999979
code	O	O:0.998866
notes	O	O:0.999827
that	O	O:0.999967
set	O	O:0.999955
of	O	O:0.999934
combinations	O	O:0.971954
is	O	O:0.999986
not	O	O:0.998506
unique	O	O:0.985865
;	O	O:0.999952
but	O	O:0.998512
it	O	O:0.999991
does	O	O:0.999739
have	O	O:0.999911
a	O	O:0.999985
unique	O	O:0.995797
subset	O	O:0.996260
,	O	O:0.999970
namely	O	O:0.999437
[[	O	O:0.999950
2	O	O:0.999935
3	O	O:0.999961
]	O	O:0.999783
,	O	O:0.999929
[	O	O:0.999995
0	O	O:0.999897
1	O	O:0.999907
]]	O	O:0.999858
,	O	O:0.999920
which	O	O:0.999930
as	O	O:0.999950
you	O	O:0.999937
just	O	O:0.999614
revealed	O	O:0.999906
,	O	O:0.999993
you	O	O:0.999982
do	O	O:0.999969
consider	O	O:0.999966
a	O	O:0.999989
valid	O	O:0.995704
combination	O	O:0.990959
.	O	O:0.999710
	
That	O	O:0.999574
concatenate	B-API	O:0.884481
action	O	O:0.999432
should	O	O:0.999819
be	O	O:0.999941
pretty	O	O:0.999433
fast	O	O:0.997765
.	O	O:0.999375
	
If	O	O:0.999918
you	O	O:0.999891
want	O	O:0.999873
to	O	O:0.999988
pass	O	O:0.999931
in	O	O:0.999985
the	O	O:0.999955
transpose	O	B-API:0.529281
,	O	O:0.999939
you'll	O	O:0.999920
need	O	O:0.999611
to	O	O:0.999978
set	O	O:0.999902
`	O	O:0.999966
rowvar	O	B-API:0.745706
`	O	O:0.999973
to	O	O:0.999835
zero	O	O:0.999846
.	O	O:0.999906
	
You	O	O:0.999867
can	O	O:0.999026
override	O	O:0.999938
this	O	O:0.999924
behavior	O	O:0.999967
by	O	O:0.999952
using	O	O:0.999405
the	O	O:0.998943
arguments	O	O:0.964046
`	O	O:0.999958
vmin	O	B-API:0.971327
`	O	O:0.999979
and	O	O:0.998449
`	O	O:0.999981
vmax	O	B-API:0.994409
`	O	O:0.999898
(	O	O:0.999962
or	O	O:0.999956
`	O	O:0.999991
norm	O	O:0.622729
`)	O	O:0.999992
of	O	O:0.999727
`	O	O:0.999846
imshow	B-API	B-API:0.967254
`	O	O:0.999838
.	O	O:0.996466
	
@USER	O	O:0.999199
,	O	O:0.999943
`	O	O:0.999981
cs	O	O:0.994214
`	O	O:0.999970
is	O	O:0.999822
sorted	O	O:0.999564
and	O	O:0.999766
`	O	O:0.999926
searchsorted()	B-API	B-API:0.996107
`	O	O:0.999944
exploits	O	O:0.999907
that	O	O:0.999973
to	O	O:0.999997
do	O	O:0.999994
a	O	O:0.999986
binary	O	O:0.991750
search	O	O:0.990954
-	O	O:0.999997
only	O	O:0.998817
`	O	O:0.999956
O	O	O:0.933034
(	O	O:0.999992
log	B-API	O:0.999559
(	O	O:0.999944
len	B-API	B-API:0.960778
(	O	O:0.999957
weights	O	O:0.969443
)))`	O	O:0.999356
comparisons	O	O:0.997847
are	O	O:0.999836
needed	O	O:0.997285
.	O	O:0.999134
	
Think	O	O:0.998954
`	O	O:0.999940
flatten	B-API	B-API:0.682070
`	O	O:0.999971
without	O	O:0.997907
the	O	O:0.999857
copy	O	O:0.733695
.	O	O:0.999789
	
In	O	O:0.999973
your	O	O:0.999755
case	O	O:0.999577
it	O	O:0.999984
looks	O	O:0.999950
like	O	O:0.999726
the	O	O:0.999534
weight	O	O:0.930456
arrays	O	O:0.999397
will	O	O:0.999721
have	O	O:0.999715
the	O	O:0.999991
same	O	O:0.999883
dimension	O	O:0.999934
as	O	O:0.999997
'	O	O:0.999935
A	O	O:0.999797
'	O	O:0.999962
,	O	O:0.999982
so	O	O:0.999988
you	O	O:0.999700
reshape	O	O:0.986593
them	O	O:0.999916
accordingly	O	O:0.998917
and	O	O:0.999815
multiply	O	O:0.788177
dx	O	O:0.975747
and	O	O:0.999833
dy	O	O:0.999381
by	O	O:0.999407
their	O	O:0.999011
individual	O	O:0.984704
weight	O	O:0.979735
vectors	O	O:0.990652
.	O	O:0.999539
	
Does	O	O:0.999688
this	O	O:0.999932
mean	O	O:0.997739
the	O	O:0.999960
standard	O	O:0.999631
error	O	O:0.999881
of	O	O:0.999968
the	O	O:0.999862
gradient	O	O:0.999385
or	O	O:0.999868
intercept	O	O:0.999417
?	O	O:0.999985
	
Also	O	O:0.999159
,	O	O:0.999991
the	O	O:0.999964
algo	O	O:0.999430
has	O	O:0.999988
a	O	O:0.999992
lot	O	O:0.999888
of	O	O:0.999943
matrices	O	O:0.971102
manipulation	O	O:0.998380
(	O	O:0.999977
fft	B-API	O:0.964926
,	O	O:0.999982
filters	O	O:0.999244
,	O	O:0.999968
etc	O	O:0.999898
.	O	O:0.999836
)	O	O:0.999927
,	O	O:0.999961
so	O	O:0.999993
using	O	O:0.999831
numpy	O	O:0.989226
/	O	O:0.999828
scipy	O	O:0.998608
should	O	O:0.998714
result	O	O:0.999579
in	O	O:0.999918
faster	O	O:0.999697
run	O	O:0.999643
time	O	O:0.998693
.	O	O:0.999735
	
You	O	O:0.999847
can	O	O:0.999379
broadcast	O	O:0.998054
that	O	O:0.999956
into	O	O:0.999831
an	O	O:0.999993
array	O	O:0.999335
using	O	O:0.999495
expressions	O	O:0.990786
,	O	O:0.999896
for	O	O:0.999863
example	O	O:0.988696
#CODE	O	O:0.998733
	
If	O	O:0.999966
I	O	O:0.999982
use	O	O:0.999909
the	O	O:0.997670
above	O	O:0.999684
test	O	O:0.978312
on	O	O:0.999992
the	O	O:0.999987
absolute	O	O:0.999912
values	O	O:0.999526
of	O	O:0.999987
the	O	O:0.999937
angles	O	O:0.989064
to	O	O:0.999945
be	O	O:0.999991
tested	O	O:0.999206
,	O	O:0.999977
everything	O	O:0.997631
	
The	O	O:0.999706
returned	O	O:0.999352
gradient	O	O:0.999512
hence	O	O:0.999228
has	O	O:0.999448
	
"	O	O:0.999717
In	O	O:0.999959
the	O	O:0.999969
first	O	O:0.999469
case	O	O:0.999502
the	O	O:0.999979
gradient	O	O:0.999660
is	O	O:0.999966
1	O	O:0.999928
mV	O	O:0.999431
/	O	O:0.999954
ms	O	O:0.988362
,	O	O:0.999987
in	O	O:0.999949
the	O	O:0.999336
second	O	O:0.999186
case	O	O:0.999656
it	O	O:0.999973
is	O	O:0.999989
50	O	O:0.999813
mV	O	O:0.998123
/	O	O:0.999836
ms	O	O:0.964688
.	O	O:0.999720
	
If	O	O:0.999930
True	O	O:0.995632
,	O	O:0.999993
uses	O	O:0.999733
the	O	O:0.999614
old	O	O:0.999785
behavior	O	O:0.999947
from	O	O:0.999737
Numeric	O	O:0.997598
,	O	O:0.999989
(	O	O:0.999981
correlate	B-API	O:0.928924
(	O	O:0.999997
a	O	O:0.999990
,	O	O:0.999989
v	O	O:0.999426
)	O	O:0.999940
==	O	O:0.999845
correlate	B-API	O:0.934070
(	O	O:0.999993
v	O	O:0.999812
,	O	O:0.999996
a	O	O:0.999974
)	O	O:0.999371
,	O	O:0.999501
and	O	O:0.999964
the	O	O:0.999730
conjugate	O	O:0.940421
is	O	O:0.999983
not	O	O:0.999882
taken	O	O:0.999719
for	O	O:0.999918
complex	O	O:0.992595
arrays	O	O:0.998143
)	O	O:0.999606
.	O	O:0.997035
	
Why	O	O:0.999807
don't	O	O:0.999637
you	O	O:0.999969
just	O	O:0.999767
compress	O	O:0.999980
the	O	O:0.999982
files	O	O:0.999554
with	O	O:0.999865
the	O	O:0.999925
built-in	O	O:0.997834
`	O	O:0.999992
gzip	O	O:0.982828
`	O	O:0.999993
module	O	O:0.990820
?	O	O:0.999980
	
So	O	O:0.999937
you	O	O:0.999956
need	O	O:0.999821
to	O	O:0.999980
write	O	O:0.999998
some	O	O:0.999003
function	O	O:0.999985
that	O	O:0.999950
convert	O	O:0.999714
a	O	O:0.999997
poly	O	O:0.561696
parameters	O	O:0.999322
array	O	O:0.999879
to	O	O:0.999981
a	O	O:0.999991
latex	O	O:0.991027
string	O	O:0.992339
,	O	O:0.999986
here	O	O:0.999271
is	O	O:0.999964
an	O	O:0.999827
example	O	O:0.994557
:	O	O:0.999966
#CODE	O	O:0.999637
	
In	O	O:0.999990
your	O	O:0.999818
example	O	O:0.999193
,	O	O:0.999992
the	O	O:0.999902
square	O	O:0.999617
root	O	O:0.998993
is	O	O:0.999994
calculated	O	O:0.999919
by	O	O:0.999992
evaluating	O	O:0.999693
the	O	O:0.999733
the	O	O:0.999819
module	O	O:0.991946
and	O	O:0.999945
the	O	O:0.999948
argument	O	O:0.999169
of	O	O:0.999988
your	O	O:0.999264
complex	O	O:0.997197
number	O	O:0.998561
(	O	O:0.999994
essentially	O	O:0.999781
via	O	O:0.999889
the	O	O:0.999932
log	B-API	O:0.993847
function	O	O:0.999174
,	O	O:0.999967
which	O	O:0.999816
returns	O	O:0.999019
log	B-API	O:0.997971
(	O	O:0.999992
module	O	O:0.997458
)	O	O:0.999884
+	O	O:0.999208
i	O	O:0.999996
phase	O	O:0.998265
)	O	O:0.999447
.	O	O:0.998652
	
I	O	O:0.999938
am	O	O:0.999986
trying	O	O:0.999018
to	O	O:0.999918
run	O	O:0.999878
hstack	B-API	B-API:0.512193
to	O	O:0.999992
join	O	O:0.967070
a	O	O:0.999997
column	O	O:0.999460
of	O	O:0.999934
integer	O	O:0.999215
values	O	O:0.999524
to	O	O:0.999838
a	O	O:1.000000
list	O	O:0.997268
of	O	O:0.999974
columns	O	O:0.991690
created	O	O:0.999956
by	O	O:0.999987
a	O	O:0.999947
TF-IDF	O	O:0.998349
(	O	O:0.999990
so	O	O:0.999991
I	O	O:0.999996
can	O	O:0.999991
eventually	O	O:0.999861
use	O	O:0.999974
all	O	O:0.998880
of	O	O:0.999927
these	O	O:0.995941
columns	O	O:0.999493
/	O	O:0.999940
features	O	O:0.998638
in	O	O:0.999992
a	O	O:0.999989
classifier	O	O:0.997298
)	O	O:0.999450
.	O	O:0.998178
	
How	O	O:0.999781
to	O	O:0.999978
pass	O	O:0.999915
these	O	O:0.998580
`	O	O:0.999988
norm	O	B-API:0.962284
`	O	O:0.999939
and	O	O:0.999331
`	O	O:0.999993
cmap	O	B-API:0.988488
`	O	O:0.999993
parameters	O	O:0.988086
in	O	O:0.999994
matplotlib	O	O:0.999829
to	O	O:0.999859
`	O	O:0.999986
plt.show	B-API	B-API:0.990220
`	O	O:0.999986
or	O	O:0.999830
`	O	O:0.999957
imshow()	B-API	B-API:0.987326
`	O	O:0.999916
?	O	O:0.999814
	
Forget	O	O:0.999600
about	O	O:0.999836
the	O	O:0.999688
C	O	O:0.998828
stack	O	O:0.884958
,	O	O:0.999994
numpy	O	O:0.999691
objects	O	O:0.998512
can't	O	O:0.999572
use	O	O:0.999868
it	O	O:0.999020
.	O	O:0.999049
	
You	O	O:0.999943
can	O	O:0.999613
use	O	O:0.999964
the	O	O:0.999489
append	B-API	B-API:0.890427
function	O	O:0.998900
as	O	O:0.999978
he	O	O:0.999969
has	O	O:0.999576
defined	O	O:0.998248
.	O	O:0.999434
	
This	O	O:0.999753
can	O	O:0.999827
be	O	O:0.999996
particularly	O	O:0.999707
tricky	O	O:0.999150
when	O	O:0.999093
trying	O	O:0.999828
to	O	O:0.999919
append	O	O:0.958492
to	O	O:0.999945
a	O	O:0.999998
numpy	O	O:0.998707
array	O	O:0.999484
quickly	O	O:0.998065
.	O	O:0.999032
	
I	O	O:0.999993
have	O	O:0.999919
a	O	O:0.999953
question	O	O:0.999882
regarding	O	O:0.999770
to	O	O:0.999921
the	O	O:0.999960
`	O	O:0.999865
fft	B-API	O:0.544767
`	O	O:0.999973
and	O	O:0.997553
`	O	O:0.999987
ifft	B-API	B-API:0.924186
`	O	O:0.999890
functions	O	O:0.992212
.	O	O:0.999881
	
So	O	O:0.999942
for	O	O:0.999845
now	O	O:0.999754
,	O	O:0.999955
I	O	O:0.999999
just	O	O:0.999551
changed	O	O:0.999499
the	O	O:0.999371
max	B-API	B-API:0.573092
(	O	O:0.999983
z	O	O:0.999900
)	O	O:0.999991
to	O	O:0.999964
a	O	O:0.999995
number	O	O:0.999739
that	O	O:0.998988
I	O	O:0.999999
know	O	O:0.999549
is	O	O:0.999956
the	O	O:0.998597
max	B-API	B-API:0.759718
(	O	O:0.999909
1567	O	O:0.998875
)	O	O:0.999791
.	O	O:0.998048
	
The	O	O:0.999503
`	O	O:0.999907
add	B-API	O:0.990823
`	O	O:0.999930
operation	O	O:0.999723
does	O	O:0.999940
not	O	O:0.999938
do	O	O:0.999977
the	O	O:0.999988
same	O	O:0.999909
thing	O	O:0.999939
as	O	O:0.999971
`	O	O:0.999978
join	B-API	B-API:0.982319
`	O	O:0.999942
.	O	O:0.998549
	
You	O	O:0.999842
don't	O	O:0.999853
specify	O	O:0.996191
`	O	O:0.999967
x	O	O:0.992981
`	O	O:0.999994
or	O	O:0.999890
`	O	O:0.999993
y	O	O:0.997840
`	O	O:0.999971
,	O	O:0.999747
and	O	O:0.999996
your	O	O:0.997084
`	O	O:0.999833
mat	O	O:0.920328
[:	O	O:0.999973
,	O	O:0.999942
i+1	O	O:0.998627
]`	O	O:0.999086
indexing	O	O:0.996310
will	O	O:0.998786
not	O	O:0.999243
work	O	O:0.999691
with	O	O:0.999935
a	O	O:0.999982
structured	O	O:0.999365
array	O	O:0.997751
.	O	O:0.999594
	
This	O	O:0.998886
is	O	O:0.999953
because	O	O:0.998537
in	O	O:0.999991
some	O	O:0.999740
cases	O	O:0.997639
it's	O	O:0.999932
not	O	O:0.999800
just	O	O:0.999253
NaNs	O	O:0.999616
and	O	O:0.999579
1s	O	O:0.999450
,	O	O:0.999915
but	O	O:0.999801
other	O	O:0.999131
integers	O	O:0.998713
,	O	O:0.999935
which	O	O:0.999798
gives	O	O:0.999497
a	O	O:0.999970
std	O	O:0.926841
>	O	O:0.999347
0	O	O:0.999410
.	O	O:0.999680
	
`	O	O:0.999808
fromiter	B-API	B-API:0.798759
`	O	O:0.999972
wants	O	O:0.999628
a	O	O:0.999958
1d	O	O:0.999844
input	O	O:0.997828
,	O	O:0.999991
e.g.	O	O:0.987344
`	O	O:0.999936
[	O	O:0.999933
1	O	O:0.999987
,	O	O:0.999984
2	O	O:0.999973
,	O	O:0.999971
3	O	O:0.999920
]`	O	O:0.999672
(	O	O:0.999963
or	O	O:0.999994
the	O	O:0.999896
generator	O	O:0.999662
equivalent	O	O:0.999346
)	O	O:0.999783
.	O	O:0.999376
	
read	O	O:0.997252
more	O	O:0.998112
:	O	O:0.999991
take()	B-API	B-API:0.960714
	
For	O	O:0.999935
this	O	O:0.999554
I'm	O	O:0.999962
using	O	O:0.999456
an	O	O:0.999752
instance	O	O:0.999577
of	O	O:0.999956
the	O	O:0.999230
`	O	O:0.999984
numpy	O	O:0.988268
`	O	O:0.999997
class	O	O:0.997868
`	O	O:0.999992
RandomState	B-API	B-API:0.910250
`	O	O:0.999890
.	O	O:0.999040
	
You	O	O:0.999903
can	O	O:0.999795
write	O	O:0.999898
a	O	O:0.999991
thinly	O	O:0.994768
wrapped	O	O:0.999650
subclass	O	O:0.995014
to	O	O:0.999842
`	O	O:0.999996
np.ndarray	B-API	B-API:0.997944
`	O	O:0.999859
.	O	O:0.999498
	
Using	O	O:0.991070
`	O	O:0.999265
ndarray.reshape	B-API	B-API:0.937680
`	O	O:0.999838
#CODE	O	O:0.997728
	
E.g.	O	O:0.998707
this	O	O:0.999264
works	O	O:0.999756
in	O	O:0.999891
the	O	O:0.999643
interpreter	O	O:0.997328
:	O	O:0.999933
`	O	O:0.999973
>>>	O	O:0.999329
a	O	O:0.999984
=	O	O:0.999869
np.arange	B-API	B-API:0.969112
(	O	O:0.999784
10	O	O:0.999925
,	O	O:0.999989
dtype=float	O	O:0.925388
)	O	O:0.999672
.resize	B-API	B-API:0.981390
(	O	O:0.999953
1	O	O:0.999913
,	O	O:0.999982
5	O	O:0.999981
)`	O	O:0.999875
,	O	O:0.999970
because	O	O:0.999863
the	O	O:0.999688
interpreter	O	O:0.999442
doesn't	O	O:0.999580
"	O	O:0.999969
see	O	O:0.999811
"	O	O:0.999945
the	O	O:0.999668
intermediate	O	O:0.998579
value	O	O:0.998791
.	O	O:0.999804
	
I	O	O:0.999935
attempted	O	O:0.999964
your	O	O:0.981329
suggestion	O	O:0.998878
but	O	O:0.999933
got	O	O:0.999385
stuck	O	O:0.998860
trying	O	O:0.999840
to	O	O:0.999908
iterate	O	O:0.999786
through	O	O:0.999798
the	O	O:0.999976
existing	O	O:0.996628
dtype	B-API	B-API:0.993248
.	O	O:0.999849
	
`	O	O:0.999362
numpy.setdiff1d	B-API	B-API:0.829781
(	O	O:0.999993
a	O	O:0.999993
,	O	O:0.999977
a	O	O:0.999948
[	O	O:0.999818
sel_id	O	O:0.992401
])`	O	O:0.999595
should	O	O:0.999230
do	O	O:0.999973
the	O	O:0.999962
trick	O	O:0.994794
.	O	O:0.999681
	
Instead	O	O:0.999790
of	O	O:0.999973
disabling	O	O:0.998582
the	O	O:0.999880
behavior	O	O:0.999714
you	O	O:0.999721
could	O	O:0.999780
try	O	O:0.999989
using	O	O:0.999004
np.select	B-API	B-API:0.999220
:	O	O:0.999268
	
+1	O	O:0.999912
I	O	O:0.999969
liked	O	O:0.999900
you	O	O:0.999000
approach	O	O:0.994692
,	O	O:0.999961
but	O	O:0.999890
how	O	O:0.999741
to	O	O:0.999985
make	O	O:0.999876
`	O	O:0.999975
np.copyto()	B-API	B-API:0.779299
`	O	O:0.999941
work	O	O:0.999416
with	O	O:0.999980
a	O	O:0.999971
memoryvew	O	O:0.994889
?	O	O:0.999931
	
Just	O	O:0.990825
import	O	O:0.997488
Decimal	O	O:0.832615
and	O	O:0.999319
for	O	O:0.999867
the	O	O:0.999402
printing	O	O:0.998928
just	O	O:0.998369
write	O	O:0.999856
print	O	O:0.990190
Decimal	O	O:0.914930
(	O	O:0.999940
ndarray	B-API	O:0.737064
[	O	O:0.999987
i	O	O:0.999983
])	O	O:0.999671
.	O	O:0.998033
	
Or	O	O:0.999952
,	O	O:0.999912
for	O	O:0.999983
that	O	O:0.997669
matter	O	O:0.999268
,	O	O:0.999876
numpy.genfromtxt	B-API	B-API:0.985728
.	O	O:0.998236
	
glad	O	O:0.998321
to	O	O:0.999973
hear	O	O:0.999898
it	O	O:0.999974
-	O	O:0.999990
I	O	O:0.999998
only	O	O:0.999963
recently	O	O:0.998339
found	O	O:0.999517
out	O	O:0.999957
about	O	O:0.996002
`	O	O:0.999747
np.einsum	B-API	B-API:0.986068
`	O	O:0.999894
myself	O	O:0.997060
,	O	O:0.999956
and	O	O:0.999789
it	O	O:0.999888
has	O	O:0.999658
rocked	O	O:0.999287
my	O	O:0.999273
world	O	O:0.999860
ever	O	O:0.999831
since	O	O:0.999069
	
The	O	O:0.999703
`	O	O:0.999953
dtype	B-API	B-API:0.997172
`	O	O:0.999984
could	O	O:0.995644
be	O	O:0.999998
deduced	O	O:0.999895
from	O	O:0.999088
one	O	O:0.998988
(	O	O:0.999993
or	O	O:0.999998
more	O	O:0.999729
)	O	O:0.999991
of	O	O:0.999822
the	O	O:0.999919
dictionary	O	O:0.996518
items	O	O:0.988751
:	O	O:0.999981
#CODE	O	O:0.999677
	
I	O	O:0.999955
didn't	O	O:0.999909
realize	O	O:0.986092
`	O	O:0.999882
array_split	B-API	B-API:0.973233
`	O	O:0.999936
existed	O	O:0.993784
!	O	O:0.999983
	
However	O	O:0.998969
,	O	O:0.999877
in	O	O:0.999988
that	O	O:0.999821
case	O	O:0.999812
,	O	O:0.999998
you	O	O:0.999827
could	O	O:0.999885
just	O	O:0.999922
do	O	O:0.999904
:	O	O:0.999988
(	O	O:0.999962
`	O	O:0.999974
searchsorted	B-API	B-API:0.749103
`	O	O:0.999992
uses	O	O:0.998268
bisection	O	O:0.999530
)	O	O:0.999782
#CODE	O	O:0.995031
	
Btw	O	O:0.999628
.	O	O:0.999976
you	O	O:0.999662
can	O	O:0.999919
also	O	O:0.999993
implicitly	O	O:0.999988
force	O	O:0.999408
the	O	O:0.999762
`	O	O:0.999932
dtype	B-API	B-API:0.994691
`	O	O:0.999995
to	O	O:0.999857
be	O	O:0.999997
`	O	O:0.999986
float	O	O:0.908061
`	O	O:0.999993
when	O	O:0.993015
using	O	O:0.999978
dots	O	O:0.979914
:	O	O:0.999908
#CODE	O	O:0.999227
	
dtypes	B-API	B-API:0.974020
.	O	O:0.999230
	
I	O	O:0.999932
would	O	O:0.999846
prefer	O	O:0.998762
using	O	O:0.999878
the	O	O:0.998382
xor	O	O:0.952594
ufunc	O	B-API:0.522345
I	O	O:0.999974
think	O	O:0.999576
,	O	O:0.999874
which	O	O:0.999265
is	O	O:0.999889
`	O	O:0.999928
bitwise_xor	B-API	O:0.906164
`	O	O:0.999891
(	O	O:0.999917
or	O	O:0.999975
`	O	O:0.999877
logical_xor	B-API	B-API:0.932473
`)	O	O:0.998306
:	O	O:0.999741
#CODE	O	O:0.999822
	
This	O	O:0.999086
is	O	O:0.999967
the	O	O:0.999980
root	O	O:0.999710
of	O	O:0.999969
why	O	O:0.999986
your	O	O:0.999249
`	O	O:0.999969
fromarrays	B-API	O:0.960179
`	O	O:0.999893
works	O	O:0.994937
,	O	O:0.999985
but	O	O:0.999933
not	O	O:0.999686
the	O	O:0.999759
`	O	O:0.999868
append_fields	O	B-API:0.990495
`	O	O:0.999878
.	O	O:0.999266
	
The	O	O:0.999862
dtype	B-API	B-API:0.990040
should	O	O:0.999167
be	O	O:0.999886
big	O	O:0.999537
endian	O	O:0.994978
.	O	O:0.999290
	
parameterArray	O	O:0.994107
+=	O	O:0.999447
line.split()	O	O:0.621365
\nline	O	O:0.999604
=	O	O:0.999982
self.inputBuffer.next()	O	O:0.912159
\	O	O:0.998935
nnp.parameterArray	O	O:0.994201
=	O	O:0.999953
np.array	B-API	B-API:0.745350
(	O	O:0.999991
parameterArray	O	O:0.997956
)	O	O:0.999738
	
As	O	O:0.999923
JoshAdel	O	O:0.999254
points	O	O:0.998509
out	O	O:0.999860
,	O	O:0.999914
`	O	O:0.999971
vectorize	B-API	B-API:0.602134
`	O	O:0.999986
wraps	O	O:0.998188
`	O	O:0.999987
frompyfunc	B-API	B-API:0.945006
`	O	O:0.999857
.	O	O:0.998714
	
Sorry	O	O:0.999062
,	O	O:0.999956
the	O	O:0.999972
line	O	O:0.995150
was	O	O:0.999865
output	O	O:0.999541
[	O	O:0.999984
i	O	O:0.999974
,	O	O:0.999997
j	O	O:0.999682
]	O	O:0.999904
=	O	O:0.999789
np.sum	B-API	B-API:0.797877
(	O	O:0.999897
ssd_difference	O	O:0.990697
[	O	O:0.999955
#URL	O	O:0.999742
(	O	O:0.999984
)	O	O:0.999870
)	O	O:0.999009
	
(	O	O:0.999960
or	O	O:0.999817
`	O	O:0.999926
np.array	B-API	B-API:0.542403
([[	O	O:0.999949
1	O	O:0.999933
]	O	O:0.999858
,	O	O:0.999934
[	O	O:0.999994
2	O	O:0.999904
]	O	O:0.999861
,	O	O:0.999904
[	O	O:0.999993
3	O	O:0.999883
]	O	O:0.999848
,	O	O:0.999903
[	O	O:0.999990
4	O	O:0.999785
]])	O	O:0.999472
.shape	B-API	B-API:0.931662
`)	O	O:0.998435
	
Thank	O	O:0.999688
you	O	O:0.999734
for	O	O:0.999963
the	O	O:0.999907
great	O	O:0.998728
tipp	O	O:0.999740
with	O	O:0.999356
`	O	O:0.999872
plt.hist	B-API	B-API:0.885009
(	O	O:0.999984
img.ravel()	O	O:0.891863
)`	O	O:0.999606
!	O	O:0.999896
	
The	O	O:0.999513
`	O	O:0.999948
recarray	B-API	B-API:0.567792
`	O	O:0.999984
class	O	O:0.998934
accepts	O	O:0.999964
an	O	O:0.999945
aligned	O	O:0.999517
parameter	O	O:0.990327
,	O	O:0.999886
but	O	O:0.999920
looks	O	O:0.999463
to	O	O:0.999951
lose	O	O:0.999875
it	O	O:0.999968
in	O	O:0.999899
`	O	O:0.999956
format_parser	B-API	O:0.964353
`	O	O:0.999880
.	O	O:0.997935
	
In	O	O:0.999971
case	O	O:0.999706
someone	O	O:0.999903
comes	O	O:0.999632
past	O	O:0.999920
this	O	O:0.999928
,	O	O:0.999994
numpy	O	O:0.996561
(	O	O:0.999993
as	O	O:0.999988
of	O	O:0.999963
1.8	O	O:0.998047
I	O	O:0.999997
think	O	O:0.999445
)	O	O:0.999711
support	O	O:0.925117
higher	O	O:0.999922
that	O	O:0.998489
2D	O	O:0.999976
generation	O	O:0.999819
of	O	O:0.999960
position	O	O:0.998435
grids	O	O:0.999633
with	O	O:0.999131
meshgrid	B-API	B-API:0.921018
.	O	O:0.999598
	
`	O	O:0.999723
numpy.random.choice	B-API	B-API:0.989130
`	O	O:0.999618
is	O	O:0.999903
not	O	O:0.999398
implemented	O	O:0.999477
in	O	O:0.999315
Python	O	O:0.998614
but	O	O:0.999932
in	O	O:0.999973
a	O	O:0.999479
`	O	O:0.999586
.pyx	O	B-API:0.941077
`	O	O:0.999984
file	O	O:0.997558
which	O	O:0.999973
needs	O	O:0.999810
to	O	O:0.999983
be	O	O:0.999998
compiled	O	O:0.999919
to	O	O:0.999941
C	O	O:0.999980
using	O	O:0.999189
Cython	O	O:0.987943
.	O	O:0.998639
	
A	O	O:0.999844
plain	O	O:0.988307
`	O	O:0.999954
.copy	B-API	B-API:0.971837
`	O	O:0.999920
did	O	O:0.999432
work	O	O:0.999432
for	O	O:0.999933
me	O	O:0.999831
.	O	O:0.999100
	
`	O	O:0.999618
A	O	O:0.999059
[	O	O:0.999984
np.ix_	B-API	B-API:0.741396
(	O	O:0.999976
x	O	O:0.999823
,	O	O:0.999996
y	O	O:0.999835
)]`	O	O:0.998175
	
einsum	B-API	B-API:0.965437
:	O	O:0.999976
5.2	O	O:0.998835
s	O	O:0.999699
	
10**423	O	O:0.997921
exceeds	O	O:0.999304
the	O	O:0.999790
largest	O	O:0.989854
int	O	O:0.999318
representable	O	O:0.999875
as	O	O:0.999971
an	O	O:0.999644
integer	O	O:0.997522
(	O	O:0.999973
or	O	O:0.999969
float	O	O:0.979456
)	O	O:0.999982
NumPy	O	O:0.998458
dtype	B-API	B-API:0.970063
,	O	O:0.999963
so	O	O:0.999962
there	O	O:0.999247
is	O	O:0.999989
no	O	O:0.999733
point	O	O:0.999700
in	O	O:0.999945
using	O	O:0.999413
NumPy	O	O:0.997612
here	O	O:0.984518
:	O	O:0.999915
`	O	O:0.999813
np.iinfo	B-API	B-API:0.989408
(	O	O:0.999954
'	O	O:0.999976
int64	O	O:0.996357
')	O	O:0.998494
.max	B-API	B-API:0.994081
<	O	O:0.999293
10**423	O	O:0.996198
`	O	O:0.999763
.	O	O:0.997875
	
Probably	O	O:0.997094
,	O	O:0.999831
better	O	O:0.999912
performance	O	O:0.993316
is	O	O:0.999975
by	O	O:0.999974
using	O	O:0.999336
`	O	O:0.998299
numpy.fromiter	B-API	B-API:0.980514
`	O	O:0.998825
:	O	O:0.999863
#CODE	O	O:0.999861
	
Why	O	O:0.999796
are	O	O:0.999852
the	O	O:0.999865
polyfit	B-API	B-API:0.784755
constants	O	O:0.999530
from	O	O:0.999917
the	O	O:0.999974
third	O	O:0.999847
case	O	O:0.999648
listed	O	O:0.999929
as	O	O:0.999940
NAN	O	O:0.968126
?	O	O:0.999917
	
Try	O	O:0.999593
`	O	O:0.999896
numpy.array_split	B-API	B-API:0.997596
`	O	O:0.999864
.	O	O:0.999211
	
Using	O	O:0.998023
np.repeat	B-API	B-API:0.963827
on	O	O:0.999706
sub-arrays	O	O:0.999344
	
shows	O	O:0.999748
that	O	O:0.999446
'	O	O:0.999945
region	O	O:0.999115
'	O	O:0.999972
has	O	O:0.999917
an	O	O:0.999838
`	O	O:0.999915
object	O	O:0.993746
`	O	O:0.999951
dtype	B-API	B-API:0.999173
:	O	O:0.999987
#CODE	O	O:0.998365
	
What	O	O:0.999223
I	O	O:0.999987
am	O	O:0.999983
looking	O	O:0.998119
for	O	O:0.999846
is	O	O:0.999976
something	O	O:0.999417
along	O	O:0.999092
the	O	O:0.999940
original	O	O:0.997331
functionality	O	O:0.999943
of	O	O:0.999848
`	O	O:0.999888
np.unique	B-API	B-API:0.964613
`	O	O:0.999825
#CODE	O	O:0.998709
	
In	O	O:0.999959
my	O	O:0.999681
opinion	O	O:0.998305
,	O	O:0.999955
np.matrix	B-API	B-API:0.864550
should	O	O:0.998039
override	O	O:0.999841
for	O	O:0.999829
addition	O	O:0.997721
and	O	O:0.999761
subtraction	O	O:0.999029
as	O	O:0.999894
well	O	O:0.992879
.	O	O:0.999552
	
or	O	O:0.999557
`	O	O:0.999861
np.vstack	B-API	B-API:0.966753
`	O	O:0.999961
,	O	O:0.999976
`	O	O:0.999988
np.dstack	B-API	B-API:0.972239
`	O	O:0.999928
`	O	O:0.999972
np.r_	B-API	O:0.740626
`	O	O:0.999977
,	O	O:0.999941
`	O	O:0.999986
np.c_	B-API	B-API:0.884913
`	O	O:0.999973
,	O	O:0.999939
`	O	O:0.999983
np.concatenate	B-API	B-API:0.882177
`	O	O:0.999995
depending	O	O:0.999677
on	O	O:0.999980
the	O	O:0.999940
desired	O	O:0.997391
shapes	O	O:0.965851
.	O	O:0.999833
	
TypeError	O	O:0.999798
when	O	O:0.997400
using	O	O:0.999774
SymPy	O	O:0.999464
matrices	O	O:0.959381
for	O	O:0.999329
numpy.linalg.eig	B-API	B-API:0.993032
	
Doing	O	O:0.994314
`	O	O:0.999255
a.astype	O	B-API:0.970499
(	O	O:0.999985
float	O	O:0.994918
)`	O	O:0.999990
actually	O	O:0.999725
creates	O	O:0.999832
a	O	O:0.999988
*	O	O:0.999732
new	O	O:0.998450
*	O	O:0.999787
ndarray	B-API	O:0.637657
which	O	O:0.999364
is	O	O:0.999955
of	O	O:0.999984
type	O	O:0.998223
`	O	O:0.999989
float	O	O:0.657878
`	O	O:0.999922
.	O	O:0.998026
	
Trying	O	O:0.999657
to	O	O:0.999882
vectorize	B-API	O:0.986734
the	O	O:0.999954
code	O	O:0.999769
also	O	O:0.999842
resulted	O	O:0.999815
in	O	O:0.999972
very	O	O:0.999896
poor	O	O:0.999537
performance	O	O:0.997812
,	O	O:0.999899
	
Also	O	O:0.999388
look	O	O:0.999214
into	O	O:0.999124
the	O	O:0.999908
genfromtxt	B-API	B-API:0.983976
and	O	O:0.999647
loadtxt	B-API	O:0.668267
family	O	O:0.987055
of	O	O:0.999943
Numpy	O	O:0.985475
functions	O	O:0.998775
.	O	O:0.999190
	
`	O	O:0.999932
coll	O	O:0.947212
[	O	O:0.999999
1	O	O:0.999960
]	O	O:0.999830
.set_color	B-API	B-API:0.981883
(	O	O:0.999952
"	O	O:0.999957
r	O	O:0.999514
")	O	O:0.999043
#	O	O:0.998165
this	O	O:0.999944
does	O	O:0.999559
not	O	O:0.999694
work	O	O:0.997169
,	O	O:0.999991
coll	O	O:0.977454
not	O	O:0.999600
indexable	O	O:0.999962
this	O	O:0.999916
way	O	O:0.999453
`	O	O:0.999504
	
The	O	O:0.999150
`	O	O:0.999904
testing.assert_equal	B-API	O:0.830168
`	O	O:0.999983
approach	O	O:0.991560
is	O	O:0.999940
almost	O	O:0.999303
good	O	O:0.998802
,	O	O:0.999905
except	O	O:0.999891
that	O	O:0.999195
it	O	O:0.999997
presumably	O	O:0.999844
fails	O	O:0.999901
if	O	O:0.999855
`	O	O:0.999930
__debug__	O	O:0.925243
`	O	O:0.999927
is	O	O:0.999839
False	O	O:0.994120
!	O	O:0.999931
	
I've	O	O:0.999645
just	O	O:0.997393
checked	O	O:0.998293
and	O	O:0.999672
found	O	O:0.998123
out	O	O:0.999921
that	O	O:0.999262
my	O	O:0.999837
implementation	O	O:0.998837
is	O	O:0.999975
about	O	O:0.997837
2.x	O	O:0.998663
times	O	O:0.998642
*	O	O:0.999850
faster	O	O:0.999789
*	O	O:0.999944
than	O	O:0.999506
using	O	O:0.999070
`	O	O:0.999550
numpy.convolve	B-API	B-API:0.999126
`	O	O:0.999723
.	O	O:0.998934
	
Not	O	O:0.999912
as	O	O:0.999972
concise	O	O:0.999303
as	O	O:0.999967
I	O	O:0.999881
wanted	O	O:0.999275
(	O	O:0.999772
I	O	O:0.999971
was	O	O:0.999975
experimenting	O	O:0.998024
with	O	O:0.998841
`	O	O:0.999962
mask_indices	B-API	O:0.953584
`	O	O:0.999961
)	O	O:0.997604
,	O	O:0.999819
but	O	O:0.999956
this	O	O:0.999510
will	O	O:0.999449
also	O	O:0.999851
do	O	O:0.999960
the	O	O:0.999620
work	O	O:0.942487
:	O	O:0.999974
#CODE	O	O:0.999885
	
The	O	O:0.999940
documentation	O	O:0.999646
of	O	O:0.999907
`	O	O:0.999820
numpy.nonzero()	B-API	B-API:0.715771
`	O	O:0.999980
describes	O	O:0.998463
how	O	O:0.999970
its	O	O:0.999633
result	O	O:0.999921
must	O	O:0.998792
be	O	O:0.999933
interpreted	O	O:0.998196
.	O	O:0.998766
	
scikits-learn	O	O:0.999581
pca	B-API	O:0.988314
dimension	O	O:0.999543
reduction	O	O:0.999526
issue	O	O:0.998804
	
`	O	O:0.999787
np.mean	B-API	B-API:0.890894
`	O	O:0.999956
can	O	O:0.999880
also	O	O:0.999994
preserve	O	O:0.999892
dimensions	O	O:0.995667
if	O	O:0.999765
needed	O	O:0.998022
.	O	O:0.998711
	
Are	O	O:0.999898
there	O	O:0.999792
alternatives	O	O:0.999739
to	O	O:0.999961
do	O	O:0.999994
the	O	O:0.999994
sorts	O	O:0.999179
of	O	O:0.999988
things	O	O:0.998947
`	O	O:0.999985
einsum	B-API	B-API:0.859249
`	O	O:0.999987
can	O	O:0.999067
do	O	O:0.999998
with	O	O:0.999953
sparse	O	O:0.999251
matrices	O	O:0.997900
?	O	O:0.999963
	
Your	O	O:0.999403
immediate	O	O:0.999791
problem	O	O:0.997196
is	O	O:0.999944
`	O	O:0.999817
numpy.putmask	B-API	B-API:0.996006
`	O	O:0.999786
.	O	O:0.999324
	
why	O	O:0.999576
not	O	O:0.996038
`	O	O:0.999930
np.array	B-API	B-API:0.953375
([	O	O:0.999963
o.value1	O	O:0.993499
for	O	O:0.999915
o	O	O:0.999769
in	O	O:0.999887
objects	O	O:0.998663
])`	O	O:0.999236
?	O	O:0.999862
	
In	O	O:0.999963
a	O	O:0.999966
comment	O	O:0.999155
to	O	O:0.999781
`	O	O:0.999992
@USER	O	O:0.998601
`	O	O:0.999993
s	O	O:0.999858
answer	O	O:0.999946
I	O	O:0.999985
suggested	O	O:0.999395
`	O	O:0.999627
np.delete	B-API	B-API:0.958518
`	O	O:0.999837
.	O	O:0.999632
	
I	O	O:0.999993
have	O	O:0.999945
a	O	O:0.999792
`	O	O:0.999940
numpy.ndarray	B-API	B-API:0.775129
`	O	O:0.999820
.	O	O:0.999012
	
I	O	O:0.999928
believe	O	O:0.999657
it	O	O:0.999936
comes	O	O:0.999915
down	O	O:0.999917
to	O	O:0.999993
the	O	O:0.999993
fact	O	O:0.999894
that	O	O:0.999861
Python	O	O:0.999986
calls	O	O:0.999958
a	O	O:0.999958
`	O	O:0.998412
__getitem__	B-API	B-API:0.989879
`	O	O:0.999876
on	O	O:0.999905
your	O	O:0.999891
objects	O	O:0.998515
and	O	O:0.999918
treats	O	O:0.999777
the	O	O:0.999709
entire	O	O:0.998732
block	O	O:0.999656
of	O	O:0.999997
code	O	O:0.999841
of	O	O:0.999968
`	O	O:0.999908
for	O	O:0.997924
`	O	O:0.999988
loop	O	O:0.997582
as	O	O:0.999980
an	O	O:0.999138
inline	O	B-API:0.708007
statement	O	O:0.995987
.	O	O:0.999192
	
In	O	O:0.999884
the	O	O:0.999908
Notes	O	O:0.999298
section	O	O:0.999698
to	O	O:0.999952
column_stack	B-API	B-API:0.609853
,	O	O:0.999979
it	O	O:0.999981
points	O	O:0.994991
out	O	O:0.999966
this	O	O:0.997868
:	O	O:0.999939
	
`	O	O:0.999507
logical_or	B-API	B-API:0.582461
(	O	O:0.999992
a	O	O:0.999964
,	O	O:0.999912
logical_or	B-API	O:0.722269
(	O	O:0.999944
b	O	O:0.999699
,	O	O:0.999995
c	O	O:0.999278
))`	O	O:0.998790
	
How	O	O:0.999790
about	O	O:0.999191
reading	O	O:0.999374
them	O	O:0.998849
in	O	O:0.999990
correctly	O	O:0.999693
as	O	O:0.999960
numpy.datetime64	O	O:0.919477
objects	O	O:0.998532
using	O	O:0.999219
numpy.loadtxt	B-API	B-API:0.998428
(	O	O:0.999973
they	O	O:0.999821
are	O	O:0.999859
coming	O	O:0.999853
from	O	O:0.999834
a	O	O:0.999965
csv	O	O:0.999943
file	O	O:0.999121
)	O	O:0.999883
?	O	O:0.999835
	
Also	O	O:0.999661
-	O	O:0.999993
I	O	O:0.999954
see	O	O:0.999997
that	O	O:0.999029
np.getfromtxt()	O	O:0.953542
has	O	O:0.999944
a	O	O:0.999991
'	O	O:0.999749
dtype	B-API	B-API:0.991068
'	O	O:0.999764
option	O	O:0.997373
which	O	O:0.999769
allows	O	O:0.999814
the	O	O:0.999970
user	O	O:0.999737
to	O	O:0.999955
specify	O	O:0.999951
the	O	O:0.999995
datatype	O	O:0.999643
of	O	O:0.999992
each	O	O:0.998388
column	O	O:0.999575
.	O	O:0.999695
	
No	O	O:0.999952
worries	O	O:0.998500
,	O	O:0.999990
the	O	O:0.999972
dtype	B-API	B-API:0.998199
is	O	O:0.999977
inferred	O	O:0.999632
as	O	O:0.999839
`	O	O:0.999862
int64	O	O:0.946724
`	O	O:0.999941
unless	O	O:0.994860
you	O	O:0.999982
pass	O	O:0.998836
it	O	O:0.999993
explicitly	O	O:0.999678
	
whats	O	O:0.999548
the	O	O:0.999919
result	O	O:0.999701
of	O	O:0.999875
`	O	O:0.999984
print	O	O:0.997458
a	O	O:0.999994
`	O	O:0.999761
after	O	O:0.997501
`	O	O:0.999982
a	O	O:0.999608
=	O	O:0.999974
np.loadtxt	B-API	B-API:0.927296
`	O	O:0.999496
	
Keep	O	O:0.995480
in	O	O:0.999900
mind	O	O:0.999862
that	O	O:0.998943
`	O	O:0.999972
np.cov	B-API	B-API:0.916156
`	O	O:0.999895
is	O	O:0.999987
basically	O	O:0.999951
doing	O	O:0.998694
`	O	O:0.999735
data.dot	O	O:0.797393
(	O	O:0.999993
data.T	O	O:0.992518
)`	O	O:0.999696
.	O	O:0.999448
	
If	O	O:0.999922
you	O	O:0.999893
want	O	O:0.999825
to	O	O:0.999941
vectorize	B-API	O:0.993617
operations	O	O:0.999843
,	O	O:0.999988
you	O	O:0.999985
need	O	O:0.999488
to	O	O:0.999986
think	O	O:0.999958
in	O	O:0.999992
terms	O	O:0.999821
of	O	O:0.999985
these	O	O:0.993110
higher	O	O:0.999584
dimensional	O	O:0.954207
arrays	O	O:0.995865
.	O	O:0.999271
	
Does	O	O:0.997475
`	O	O:0.999935
s2	O	O:0.999119
=	O	O:0.999981
pd.Series	B-API	B-API:0.891401
(	O	O:0.999986
s	O	O:0.999902
,	O	O:0.999994
dtype	B-API	B-API:0.942253
=o	O	O:0.999069
bject	O	O:0.948186
)`	O	O:0.999926
work	O	O:0.987562
?	O	O:0.999989
	
`	O	O:0.999716
PyArray_DATA	B-API	B-API:0.683633
`	O	O:0.999900
is	O	O:0.999768
defined	O	O:0.999219
in	O	O:0.999680
	
`	O	O:0.999867
a	O	O:0.998357
[:	O	O:0.999833
,	O	O:0.999807
:	O	O:0.999993
,	O	O:0.999986
5	O	O:0.999946
]	O	O:0.999875
.shape	B-API	B-API:0.906084
=	O	O:0.999881
(	O	O:0.999951
10	O	O:0.999905
,	O	O:0.999971
10	O	O:0.999950
,	O	O:0.999966
1	O	O:0.999938
)`	O	O:0.999425
	
Can	O	O:0.999835
you	O	O:0.999909
print	O	O:0.995137
`	O	O:0.999986
datas	O	O:0.997744
[	O	O:0.999998
0	O	O:0.999923
]	O	O:0.999952
.shape	B-API	B-API:0.976354
`	O	O:0.999827
?	O	O:0.999717
	
actually	O	O:0.999452
used	O	O:0.993909
is	O	O:0.999949
this	O	O:0.999661
line	O	O:0.999262
within	O	O:0.999368
the	O	O:0.999690
definition	O	O:0.999329
for	O	O:0.999898
`	O	O:0.999947
np.array_repr	B-API	O:0.732297
`	O	O:0.999813
	
That's	O	O:0.999661
why	O	O:0.999552
`	O	O:0.999933
dstack	B-API	B-API:0.981530
`	O	O:0.999965
behaves	O	O:0.997745
the	O	O:0.999969
way	O	O:0.998893
it	O	O:0.999977
does	O	O:0.999053
.	O	O:0.999923
	
>>>	O	O:0.996866
x	O	O:0.998672
=	O	O:0.999976
np.asanyarray	B-API	B-API:0.754832
(	O	O:0.999964
[	O	O:0.999993
]	O	O:0.999953
,	O	O:0.999951
dtype=	O	O:0.987878
'	O	O:0.999895
float64	O	O:0.992009
')	O	O:0.998402
	
This	O	O:0.999209
doesn't	O	O:0.999680
work	O	O:0.997888
for	O	O:0.999951
floating	O	O:0.999123
point	O	O:0.995126
types	O	O:0.962260
(	O	O:0.999958
it	O	O:0.999927
will	O	O:0.999566
not	O	O:0.999615
consider	O	O:0.999525
+	O	O:0.999687
0.0	O	O:0.988463
and	O	O:0.999851
-	O	O:0.999962
0.0	O	O:0.989802
the	O	O:0.999970
same	O	O:0.999363
value	O	O:0.999601
)	O	O:0.999971
,	O	O:0.999899
and	O	O:0.999716
`	O	O:0.999690
np.intersect1d	B-API	B-API:0.984854
`	O	O:0.999986
uses	O	O:0.998858
sorting	O	O:0.999775
,	O	O:0.999947
so	O	O:0.999986
it	O	O:0.999904
is	O	O:0.999985
has	O	O:0.999835
linearithmic	O	O:0.996075
,	O	O:0.999978
not	O	O:0.998811
linear	O	O:0.996539
,	O	O:0.999981
performance	O	O:0.995527
.	O	O:0.999458
	
But	O	O:0.999840
off	O	O:0.999608
course	O	O:0.991018
,	O	O:0.999959
isreal	B-API	O:0.684396
would	O	O:0.998950
be	O	O:0.999979
more	O	O:0.999823
readable	O	O:0.995789
:-)	O	O:0.999443
	
mshgrd	O	O:0.992208
=	O	O:0.999913
ax.pcolormesh	B-API	O:0.693247
(	O	O:0.999932
X	O	O:0.999824
,	O	O:0.999987
Y	O	O:0.999836
,	O	O:0.999989
Z	O	O:0.999533
)	O	O:0.999556
	
Otherwise	O	O:0.999173
,	O	O:0.999971
the	O	O:0.999964
performance	O	O:0.999272
advantages	O	O:0.999927
of	O	O:0.999990
using	O	O:0.999892
numpy	O	O:0.992772
are	O	O:0.999532
quickly	O	O:0.998966
nullified	O	O:0.992956
,	O	O:0.999993
regardless	O	O:0.999953
of	O	O:0.999943
how	O	O:0.999810
you	O	O:0.999890
implement	O	O:0.999970
your	O	O:0.999370
ringbuffer	B-API	O:0.997947
.	O	O:0.999635
	
The	O	O:0.999736
answer	O	O:0.998014
is	O	O:0.999173
numpy.clip	B-API	B-API:0.996292
#CODE	O	O:0.997840
	
Can	O	O:0.999883
you	O	O:0.999862
please	O	O:0.998984
go	O	O:0.999896
into	O	O:0.999969
more	O	O:0.999933
depth	O	O:0.999601
about	O	O:0.999873
nesting	O	O:0.998647
a	O	O:0.999891
recarray	B-API	O:0.930549
in	O	O:0.999882
another	O	O:0.999865
by	O	O:0.999924
using	O	O:0.999281
the	O	O:0.979111
np.object	O	B-API:0.932739
method	O	O:0.992157
?	O	O:0.999980
	
Why	O	O:0.999913
do	O	O:0.999881
you	O	O:0.999971
need	O	O:0.998747
`	O	O:0.999990
vectorize	B-API	O:0.789831
`	O	O:0.999971
for	O	O:0.999866
that	O	O:0.999602
?	O	O:0.999962
	
I	O	O:0.999938
did	O	O:0.999978
try	O	O:0.998094
gc.colletc()	O	O:0.782182
without	O	O:0.992751
success	O	O:0.991774
but	O	O:0.999884
adding	O	O:0.999938
a	O	O:0.998556
clf()	B-API	B-API:0.993315
inside	O	O:0.999123
the	O	O:0.999957
loop	O	O:0.999262
does	O	O:0.999752
the	O	O:0.999970
trick	O	O:0.998762
!	O	O:0.999955
	
not	O	O:0.999433
a	O	O:0.999980
bad	O	O:0.999514
solution	O	O:0.999420
;	O	O:0.999997
though	O	O:0.999191
I	O	O:0.999995
am	O	O:0.999967
somewhat	O	O:0.999873
wary	O	O:0.999968
of	O	O:0.999973
the	O	O:0.999963
performance	O	O:0.999111
of	O	O:0.999816
random.shuffle	B-API	B-API:0.957578
.	O	O:0.999651
	
date2num	B-API	B-API:0.802421
,	O	O:0.999850
ValueError	O	O:0.999501
:	O	O:0.999888
ordinal	O	O:0.999283
must	O	O:0.999797
be	O	O:0.999939
>	O	O:0.999945
=	O	O:0.999829
1	O	O:0.999677
	
And	O	O:0.999861
you	O	O:0.999798
could	O	O:0.999763
override	O	O:0.999809
`	O	O:0.999955
__mul__	B-API	B-API:0.976359
`	O	O:0.999963
,	O	O:0.999842
`	O	O:0.999984
__add__	B-API	B-API:0.990043
`	O	O:0.999971
,	O	O:0.999865
`	O	O:0.999983
__sub__	B-API	B-API:0.988403
`	O	O:0.999981
accordingly	O	O:0.985356
,	O	O:0.999992
but	O	O:0.999745
I	O	O:0.999975
don't	O	O:0.999870
know	O	O:0.999440
exactly	O	O:0.999485
how	O	O:0.999767
numpy-like	O	O:0.999819
you	O	O:0.999927
actually	O	O:0.999805
*	O	O:0.999937
need	O	O:0.996016
*	O	O:0.999987
this	O	O:0.999930
to	O	O:0.999981
be	O	O:0.999992
,	O	O:0.999995
so	O	O:0.999957
I	O	O:0.999987
can't	O	O:0.999950
say	O	O:0.999890
for	O	O:0.999967
sure	O	O:0.997902
.	O	O:0.999474
	
`	O	O:0.999820
np.array	B-API	B-API:0.805314
=	O	O:0.999978
partial	O	O:0.967562
(	O	O:0.999988
np.array	B-API	O:0.579064
,	O	O:0.999971
dtype=	O	O:0.998009
np.float32	O	O:0.906790
)`	O	O:0.999906
with	O	O:0.999295
`	O	O:0.999994
partial	O	O:0.979077
`	O	O:0.999999
from	O	O:0.999551
the	O	O:0.999970
`	O	O:0.999975
functools	O	O:0.995853
`	O	O:0.999988
module	O	O:0.990998
.	O	O:0.999842
	
A	O	O:0.999005
solution	O	O:0.999918
that	O	O:0.997343
worked	O	O:0.999950
uses	O	O:0.998453
griddata	B-API	B-API:0.841688
.	O	O:0.998868
	
Numpy	O	O:0.996312
1.7.0	O	O:0.990757
assert_array_almost_equal	B-API	B-API:0.972570
documentation	O	O:0.985174
	
You	O	O:0.999675
can	O	O:0.999755
read	O	O:0.998753
matlab	O	O:0.995735
(	O	O:0.999988
.mat	B-API	O:0.976767
)	O	O:0.999945
files	O	O:0.997478
in	O	O:0.999954
Python	O	O:0.998923
,	O	O:0.999964
try	O	O:0.999907
this	O	O:0.996754
:	O	O:0.999970
#CODE	O	O:0.999446
	
Thanks	O	O:0.999587
for	O	O:0.999832
the	O	O:0.999966
idea	O	O:0.999132
of	O	O:0.999819
genfromtxt()	B-API	B-API:0.987942
.	O	O:0.999593
	
If	O	O:0.999972
you	O	O:0.999773
are	O	O:0.999939
using	O	O:0.999876
numpy	O	O:0.985155
,	O	O:0.999801
for	O	O:0.999947
multidimensional	O	O:0.993392
lists	O	O:0.992770
`	O	O:0.999938
numpy.repeat	B-API	B-API:0.904004
`	O	O:0.999898
is	O	O:0.999982
your	O	O:0.999871
best	O	O:0.999377
bet	O	O:0.999666
.	O	O:0.999261
	
If	O	O:0.999945
the	O	O:0.999885
following	O	O:0.998819
equation	O	O:0.998389
is	O	O:0.999984
element-wise	O	O:0.999771
True	O	O:0.993775
,	O	O:0.999996
then	O	O:0.999683
allclose	B-API	O:0.899917
returns	O	O:0.998730
`	O	O:0.999919
True	O	O:0.953183
`	O	O:0.999764
:	O	O:0.999802
#CODE	O	O:0.999861
	
`	O	O:0.999767
np.vstack	B-API	B-API:0.989784
`	O	O:0.999991
just	O	O:0.999913
vertically	O	O:0.999969
stacks	O	O:0.999495
the	O	O:0.999903
arrays	O	O:0.998914
you	O	O:0.999962
pass	O	O:0.999085
to	O	O:0.999982
it	O	O:0.999991
,	O	O:0.999981
and	O	O:0.999960
so	O	O:0.999981
something	O	O:0.999926
else	O	O:0.999502
in	O	O:0.999995
your	O	O:0.999949
code	O	O:0.999896
may	O	O:0.999975
be	O	O:0.999987
cutting	O	O:0.997972
off	O	O:0.999727
the	O	O:0.999986
rest	O	O:0.999035
of	O	O:0.999990
the	O	O:0.999574
results	O	O:0.999205
inadvertently	O	O:0.998540
.	O	O:0.999811
	
If	O	O:0.999948
you	O	O:0.999953
move	O	O:0.999426
the	O	O:0.999992
line	O	O:0.998507
`	O	O:0.999974
np_verticies=	O	O:0.954049
np.array	B-API	O:0.629539
(	O	O:0.999989
verticies	O	O:0.997777
)`	O	O:0.999982
outside	O	O:0.999781
of	O	O:0.999906
`	O	O:0.999906
Fnumpy	O	B-API:0.867291
`	O	O:0.999807
and	O	O:0.999250
the	O	O:0.999979
timed	O	O:0.993233
section	O	O:0.999981
your	O	O:0.999200
results	O	O:0.999714
will	O	O:0.999223
be	O	O:0.999993
very	O	O:0.999467
different	O	O:0.990741
:	O	O:0.999901
#CODE	O	O:0.999349
	
`	O	O:0.999722
fromiter	B-API	B-API:0.642214
`'	O	O:0.999913
s	O	O:0.999922
example	O	O:0.998962
is	O	O:0.999975
essentially	O	O:0.999405
this	O	O:0.999138
:	O	O:0.999961
`	O	O:0.999768
np.fromiter	B-API	B-API:0.897579
((	O	O:0.999935
x*x	O	O:0.998537
for	O	O:0.999944
x	O	O:0.999214
in	O	O:0.999862
range	O	O:0.999056
(	O	O:0.999963
5	O	O:0.999842
))	O	O:0.999513
,	O	O:0.999923
int	O	O:0.999448
)`	O	O:0.999174
.	O	O:0.998601
	
In	O	O:0.999776
Python	O	O:0.999793
,	O	O:0.999981
I	O	O:0.999998
have	O	O:0.999859
a	O	O:0.999987
numpy.array	B-API	O:0.744563
of	O	O:0.999873
integers	O	O:0.997624
`	O	O:0.999959
[	O	O:0.999715
2	O	O:0.999971
,	O	O:0.999977
4	O	O:0.999940
,	O	O:0.999952
7	O	O:0.999935
,	O	O:0.999961
8	O	O:0.999944
,	O	O:0.999961
9	O	O:0.999947
,	O	O:0.999960
10	O	O:0.999871
,	O	O:0.999933
15	O	O:0.999901
,	O	O:0.999963
10	O	O:0.999913
8]	O	O:0.994116
`	O	O:0.999449
.	O	O:0.998536
	
I	O	O:0.999974
will	O	O:0.999233
go	O	O:0.999650
with	O	O:0.999793
newaxis	B-API	O:0.989700
then	O	O:0.998805
.	O	O:0.999963
	
pcolormesh	B-API	B-API:0.774461
returns	O	O:0.999625
a	O	O:0.999831
QuadMesh	B-API	B-API:0.755359
.	O	O:0.998303
	
And	O	O:0.999941
when	O	O:0.997574
I	O	O:0.999998
call	O	O:0.999802
each	O	O:0.999651
of	O	O:0.999811
the	O	O:0.998187
instructions	O	O:0.999562
inside	O	O:0.996588
f()	B-API	B-API:0.716747
individually	O	O:0.997253
it	O	O:0.999953
gives	O	O:0.999671
me	O	O:0.999988
an	O	O:0.999950
other	O	O:0.999480
result	O	O:0.996928
(	O	O:0.999943
which	O	O:0.999115
is	O	O:0.999958
correct	O	O:0.978181
):	O	O:0.999967
#CODE	O	O:0.998059
	
Here's	O	O:0.998672
one	O	O:0.999724
vectorized	O	O:0.998264
approach	O	O:0.999680
based	O	O:0.999407
on	O	O:0.999580
`	O	O:0.999920
np.einsum	B-API	B-API:0.951591
`	O	O:0.999795
-	O	O:0.999970
#CODE	O	O:0.999645
	
What's	O	O:0.999645
the	O	O:0.999728
`	O	O:0.999933
dtype	B-API	B-API:0.992972
`	O	O:0.999995
of	O	O:0.999606
these	O	O:0.999177
arrays	O	O:0.999366
?	O	O:0.999896
	
try	O	O:0.999748
adding	O	O:0.999875
a	O	O:0.999844
`	O	O:0.999799
show()	B-API	B-API:0.993745
`	O	O:0.999940
in	O	O:0.999886
the	O	O:0.999930
end	O	O:0.979570
	
`	O	O:0.999886
pandas.DataFrame	B-API	B-API:0.997943
`	O	O:0.999815
	
You	O	O:0.999869
can	O	O:0.999588
define	O	O:0.999957
your	O	O:0.999684
own	O	O:0.999904
types	O	O:0.999006
by	O	O:0.999984
creating	O	O:0.999917
a	O	O:0.999961
class	O	O:0.996796
and	O	O:0.999938
writing	O	O:0.999796
a	O	O:0.999000
`	O	O:0.999721
__add__	B-API	B-API:0.991176
`	O	O:0.999975
or	O	O:0.999330
`	O	O:0.999943
__sub__	B-API	B-API:0.994976
`	O	O:0.999725
method	O	O:0.983584
.	O	O:0.999861
	
On	O	O:0.999952
the	O	O:0.999717
other	O	O:0.999533
hand	O	O:0.999406
,	O	O:0.999998
if	O	O:0.999984
I	O	O:0.999975
did	O	O:0.999970
with	O	O:0.997115
`	O	O:0.999954
genfromtxt	B-API	B-API:0.911531
`	O	O:0.999973
,	O	O:0.999926
the	O	O:0.999987
third	O	O:0.998835
column	O	O:0.998666
is	O	O:0.999990
problem	O	O:0.998542
because	O	O:0.998798
it	O	O:0.999933
includes	O	O:0.999247
comma	O	O:0.997439
inside	O	O:0.999620
double-quota	O	O:0.994165
.	O	O:0.998630
	
Apparently	O	O:0.998767
,	O	O:0.999972
if	O	O:0.999986
there	O	O:0.998200
is	O	O:0.999962
no	O	O:0.999093
'	O	O:0.999961
missing_value	O	O:0.991377
'	O	O:0.999908
attribute	O	O:0.999799
Netcdf4	O	O:0.999809
defaults	O	O:0.999712
to	O	O:0.999971
a	O	O:0.999998
missing	O	O:0.999690
value	O	O:0.999773
appropriate	O	O:0.999502
for	O	O:0.999871
the	O	O:0.999780
dtype	B-API	B-API:0.998068
.	O	O:0.999528
	
do	O	O:0.999909
be	O	O:0.999981
aware	O	O:0.999924
that	O	O:0.999567
if	O	O:0.999966
you	O	O:0.999934
have	O	O:0.998996
NaNs	O	O:0.999774
,	O	O:0.999997
there	O	O:0.999617
is	O	O:0.999951
an	O	O:0.999878
equivalent	O	O:0.999728
np.nanstd	B-API	O:0.980049
with	O	O:0.999824
the	O	O:0.999945
similar	O	O:0.999892
ddof	O	B-API:0.639775
options	O	O:0.998717
	
[	O	O:0.999895
True	O	O:0.994660
,	O	O:0.999987
True	O	O:0.997412
]]	O	O:0.999770
,	O	O:0.999952
dtype	B-API	B-API:0.931231
=b	O	O:0.999235
ool	O	O:0.945094
)`	O	O:0.999739
	
@USER	O	O:0.999804
true	O	O:0.999451
,	O	O:0.999992
although	O	O:0.999086
`	O	O:0.999832
np.array	B-API	B-API:0.956011
([	O	O:0.999981
x	O	O:0.999002
for	O	O:0.999951
bb	O	O:0.999375
in	O	O:0.999942
b	O	O:0.999778
for	O	O:0.999926
x	O	O:0.998209
in	O	O:0.999883
bb	O	O:0.999620
])`	O	O:0.999875
will	O	O:0.998423
do	O	O:0.999972
the	O	O:0.999927
job	O	O:0.998000
.	O	O:0.999670
	
return	O	O:0.871524
matrix_power	B-API	B-API:0.811754
(	O	O:0.999973
self	O	O:0.998033
,	O	O:0.999995
other	O	O:0.999760
)	O	O:0.999445
	
vector	O	O:0.996208
=	O	O:0.999880
numpy.array	B-API	B-API:0.792245
(	O	O:0.999936
vector	O	O:0.997674
);	O	O:0.999250
	
If	O	O:0.999942
so	O	O:0.999989
then	O	O:0.999867
you	O	O:0.999930
should	O	O:0.999958
have	O	O:0.999948
no	O	O:0.999994
problem	O	O:0.999873
fitting	O	O:0.999890
the	O	O:0.998470
`	O	O:0.999838
numpy.fft.rfftfreq	B-API	B-API:0.998917
`	O	O:0.999772
method	O	O:0.999538
into	O	O:0.999988
your	O	O:0.999823
own	O	O:0.999829
code	O	O:0.999128
.	O	O:0.999856
	
This	O	O:0.999402
fails	O	O:0.998971
:	O	O:0.999963
`	O	O:0.999857
einsum	B-API	B-API:0.948409
(	O	O:0.999982
'	O	O:0.999886
i	O	O:0.999982
...,	O	O:0.978066
i	O	O:0.999933
...	O	O:0.994099
	
Python	O	O:0.994961
&	O	O:0.999778
Numpy	O	O:0.999336
-	O	O:0.999988
create	O	O:0.998814
dynamic	O	O:0.998896
,	O	O:0.999996
arbitrary	O	O:0.999840
subsets	O	O:0.998741
of	O	O:0.999911
ndarray	B-API	B-API:0.593582
	
For	O	O:0.999866
example	O	O:0.999247
,	O	O:0.999965
I	O	O:0.999999
have	O	O:0.999929
a	O	O:0.999905
`	O	O:0.999957
ndarray	B-API	B-API:0.912770
`	O	O:0.999991
that	O	O:0.989212
is	O	O:0.999960
:	O	O:0.999936
#CODE	O	O:0.999642
	
I	O	O:0.999965
went	O	O:0.999916
with	O	O:0.999535
the	O	O:0.999837
np.memmap	B-API	B-API:0.996034
because	O	O:0.998827
the	O	O:0.999995
performance	O	O:0.997712
is	O	O:0.999979
similar	O	O:0.999731
to	O	O:0.999936
hdf5	O	O:0.999740
and	O	O:0.999801
I	O	O:0.999988
already	O	O:0.999863
have	O	O:0.997850
numpy	O	O:0.996869
in	O	O:0.999916
production	O	O:0.994497
.	O	O:0.999801
	
its	O	O:0.996951
np.log	B-API	B-API:0.699385
not	O	O:0.997471
m.log	O	O:0.990128
	
what	O	O:0.998520
happens	O	O:0.999797
if	O	O:0.999967
you	O	O:0.999879
[	O	O:0.999889
`	O	O:0.999926
Py_INCREF	O	B-API:0.773099
(	O	O:0.999997
self	O	O:0.994763
)`]	O	O:0.999469
(	O	O:0.999947
#URL	O	O:0.999933
)	O	O:0.999875
after	O	O:0.997873
`	O	O:0.999937
.base	B-API	B-API:0.999030
`	O	O:0.999880
assignment	O	O:0.998761
?	O	O:0.999971
	
File	O	O:0.942166
"	O	O:0.999875
/	O	O:0.999638
usr	O	O:0.995016
/	O	O:0.999476
lib64	O	O:0.957175
/	O	O:0.999739
python2.6	O	O:0.856228
/	O	O:0.999819
site-packages	O	O:0.996301
/	O	O:0.999960
numpy	O	O:0.997801
/	O	O:0.999968
core	O	O:0.988986
/	O	O:0.999972
fromnumeric.py	O	O:0.950516
"	O	O:0.999586
,	O	O:0.999989
line	O	O:0.999486
806	O	O:0.999420
,	O	O:0.999932
in	O	O:0.999768
searchsorted	B-API	B-API:0.770357
	
why	O	O:0.998736
isn't	O	O:0.999697
the	O	O:0.999608
`	O	O:0.999852
ndarray	B-API	B-API:0.773548
`	O	O:0.999983
constructor	O	O:0.998172
mentioned	O	O:0.999930
here	O	O:0.999024
?	O	O:0.999961
	
>>>	O	O:0.996557
z	O	O:0.999192
=	O	O:0.999978
numpy.array	B-API	O:0.662297
([	O	O:0.999925
1	O	O:0.999851
,	O	O:0.999993
2	O	O:0.999929
]	O	O:0.999456
	
Is	O	O:0.999987
there	O	O:0.999101
an	O	O:0.999959
equivelent	O	O:0.999865
to	O	O:0.999911
`	O	O:0.999997
fseek	O	O:0.948067
`	O	O:0.999995
when	O	O:0.998920
using	O	O:0.999948
`	O	O:0.999896
fromfile	B-API	B-API:0.949130
`	O	O:0.999971
to	O	O:0.999952
skip	O	O:0.999953
the	O	O:0.999992
beginning	O	O:0.999136
of	O	O:0.999942
the	O	O:0.999891
file	O	O:0.999518
?	O	O:0.999964
	
The	O	O:0.999789
linear	O	O:0.999310
algebra	O	O:0.997946
functions	O	O:0.999013
are	O	O:0.999811
generally	O	O:0.999102
grouped	O	O:0.999288
in	O	O:0.999666
`	O	O:0.999917
numpy.linalg	B-API	O:0.877102
`	O	O:0.999855
.	O	O:0.999262
	
np.mean	B-API	B-API:0.986936
:	O	O:0.999899
#CODE	O	O:0.999888
	
As	O	O:0.999894
others	O	O:0.999629
have	O	O:0.999821
said	O	O:0.999846
,	O	O:0.999995
32-bit	O	O:0.999921
versions	O	O:0.999539
of	O	O:0.999983
numpy	O	O:0.998179
still	O	O:0.999061
support	O	O:0.997164
64-bit	O	O:0.997229
dtypes	B-API	B-API:0.946478
.	O	O:0.999348
	
`	O	O:0.999678
vstack	B-API	B-API:0.964784
`	O	O:0.999933
is	O	O:0.999957
coercing	O	O:0.999583
the	O	O:0.999992
type	O	O:0.999732
of	O	O:0.999955
`	O	O:0.999980
d	O	O:0.999139
`	O	O:0.999992
to	O	O:0.999680
the	O	O:1.000000
type	O	O:0.999824
of	O	O:0.999974
`	O	O:0.999982
e	O	O:0.997627
`	O	O:0.999943
.	O	O:0.998718
	
`	O	O:0.999731
df.plot	B-API	B-API:0.918467
`	O	O:0.999971
returns	O	O:0.997960
an	O	O:0.999937
AxesSubplot	O	O:0.997371
,	O	O:0.999967
which	O	O:0.999855
has	O	O:0.999965
a	O	O:0.999971
`	O	O:0.999792
axvspan	B-API	B-API:0.997155
`	O	O:0.999642
method	O	O:0.976854
.	O	O:0.999860
	
With	O	O:0.999539
the	O	O:0.999920
variables	O	O:0.996464
defined	O	O:0.999671
above	O	O:0.999876
,	O	O:0.999946
`	O	O:0.999779
np.searchsorted	B-API	B-API:0.959101
(	O	O:0.999974
lat	O	O:0.988027
,	O	O:0.999993
x	O	O:0.999707
)`	O	O:0.999668
is	O	O:0.999989
16x	O	O:0.999912
faster	O	O:0.999978
than	O	O:0.999702
the	O	O:0.999652
equivalent	O	O:0.999890
call	O	O:0.923434
`	O	O:0.999982
np.nanargmin	B-API	B-API:0.871381
((	O	O:0.999943
lat-x	O	O:0.997869
)	O	O:0.999852
**2	O	O:0.973792
)`	O	O:0.999915
on	O	O:0.999956
my	O	O:0.999911
computer	O	O:0.999704
.	O	O:0.999794
	
Pypy	O	O:0.998808
with	O	O:0.999635
iterators	O	O:0.996751
is	O	O:0.999992
still	O	O:0.993355
solving	O	O:0.999950
this	O	O:0.999612
about	O	O:0.999823
3x	O	O:0.999359
faster	O	O:0.999779
than	O	O:0.999418
CPython	O	O:0.997469
+	O	O:0.999843
Numpy	O	O:0.998707
,	O	O:0.999995
even	O	O:0.999678
when	O	O:0.999818
using	O	O:0.999701
`	O	O:0.999788
np.searchsorted	B-API	B-API:0.992328
`	O	O:0.999590
(	O	O:0.999970
see	O	O:0.999995
my	O	O:0.999951
solution	O	O:0.999595
)	O	O:0.999860
.	O	O:0.998691
	
and	O	O:0.998431
`	O	O:0.999675
hstack	B-API	B-API:0.994464
((	O	O:0.999984
a	O	O:0.999946
,	O	O:0.999981
z	O	O:0.999407
))`	O	O:0.998856
?	O	O:0.999854
	
Have	O	O:0.999257
you	O	O:0.999832
tried	O	O:0.999867
passing	O	O:0.990704
`	O	O:0.999710
interpolation=	O	O:0.998780
'	O	O:0.999975
nearest	O	O:0.996572
'`	O	O:0.999972
to	O	O:0.999630
`	O	O:0.999987
imshow	B-API	B-API:0.941560
`	O	O:0.999950
?	O	O:0.999706
	
`	O	O:0.999728
cumsum	B-API	B-API:0.982441
`	O	O:0.999967
might	O	O:0.998412
not	O	O:0.999958
be	O	O:0.999948
the	O	O:0.999972
best	O	O:0.998156
example	O	O:0.998689
.	O	O:0.999622
	
I	O	O:0.999970
think	O	O:0.999911
you're	O	O:0.998151
after	O	O:0.998504
`	O	O:0.999766
plt.axis	B-API	B-API:0.963400
([	O	O:0.999983
xmin	O	O:0.935858
,	O	O:0.999994
xmax	O	O:0.980606
,	O	O:0.999990
ymin	O	O:0.991139
,	O	O:0.999986
ymax	O	O:0.983774
])`	O	O:0.994120
:	O	O:0.999925
#CODE	O	O:0.999691
	
Is	O	O:0.999747
`	O	O:0.999736
(	O	O:0.999956
dry	O	O:0.999822
,	O	O:0.999994
unrch	O	O:0.997778
)	O	O:0.999853
=	O	O:0.999703
((	O	O:0.999964
G	O	O:0.999502
==	O	O:0.999976
3	O	O:0.999860
)	O	O:0.999887
.sum()	B-API	B-API:0.994258
,	O	O:0.999936
(	O	O:0.999979
G	O	O:0.999746
==	O	O:0.999986
1	O	O:0.999881
)	O	O:0.999927
.sum()	B-API	B-API:0.984339
)`	O	O:0.999934
more	O	O:0.997533
vectorized	O	O:0.999616
?	O	O:0.999948
	
Then	O	O:0.998218
,	O	O:0.999980
`	O	O:0.999957
np.array	B-API	B-API:0.978215
(	O	O:0.999945
np.matrix	B-API	B-API:0.804164
(	O	O:0.999909
s.strip	O	O:0.609347
(	O	O:0.999918
'	O	O:0.999832
[	O	O:0.999978
]')))`	O	O:0.999882
will	O	O:0.998938
do	O	O:0.999965
the	O	O:0.999989
same	O	O:0.999316
magic	O	O:0.996739
.	O	O:0.999949
	
I'm	O	O:0.999800
trying	O	O:0.999616
to	O	O:0.999918
vectorize	B-API	O:0.955506
Z	O	O:0.998078
,	O	O:0.999972
but	O	O:0.999855
I'm	O	O:0.999767
finding	O	O:0.999008
it	O	O:0.999726
rather	O	O:0.999926
difficult	O	O:0.999638
for	O	O:0.999900
a	O	O:0.999967
triple	O	O:0.990921
for	O	O:0.999846
loop	O	O:0.990573
.	O	O:0.999258
	
How	O	O:0.998518
would	O	O:0.999868
that	O	O:0.999707
be	O	O:0.999999
done	O	O:0.999516
using	O	O:0.998632
np.dot	B-API	B-API:0.966918
?	O	O:0.999083
	
I	O	O:0.999908
was	O	O:0.999956
surprised	O	O:0.998610
how	O	O:0.999903
descending	O	O:0.999886
sorting	O	O:0.999434
of	O	O:0.999889
np.array	B-API	O:0.868419
seem	O	O:0.999844
so	O	O:0.999971
un-pythonic	O	O:0.999176
.	O	O:0.999442
	
`	O	O:0.999761
numpy.genfromtxt	B-API	B-API:0.992514
`	O	O:0.999954
accepts	O	O:0.999442
generators	O	O:0.999901
,	O	O:0.999994
so	O	O:0.999998
you	O	O:0.999958
can	O	O:0.999961
chain	O	O:0.993543
`	O	O:0.999987
genfromtext	O	B-API:0.974884
`	O	O:0.999924
and	O	O:0.998047
`	O	O:0.999921
ifilter	O	B-API:0.992178
`	O	O:0.999381
:	O	O:0.999553
#CODE	O	O:0.999861
	
I	O	O:0.999973
also	O	O:0.999928
tried	O	O:0.999147
`	O	O:0.999679
df.query()	B-API	B-API:0.999898
`	O	O:0.999319
,	O	O:0.999917
but	O	O:0.999955
no	O	O:0.999761
much	O	O:0.998175
improvement	O	O:0.999408
.	O	O:0.998553
	
According	O	O:0.999573
to	O	O:0.999911
the	O	O:0.999974
documentation	O	O:0.988531
(	O	O:0.999984
e.g.	O	O:0.998484
,	O	O:0.999999
here	O	O:0.999755
)	O	O:0.999933
,	O	O:0.999828
`	O	O:0.999974
PyArray_SimpleNew	B-API	B-API:0.816456
`	O	O:0.999980
has	O	O:0.999754
a	O	O:0.999996
return	O	O:0.958269
of	O	O:0.999949
type	O	O:0.996455
`	O	O:0.999950
PyObject	O	O:0.995096
*	O	O:0.999568
`	O	O:0.999680
and	O	O:0.999910
thus	O	O:0.999964
the	O	O:0.999906
above	O	O:0.997809
should	O	O:0.999635
be	O	O:0.999992
perfectly	O	O:0.999795
fine	O	O:0.998512
.	O	O:0.999653
	
Edit	O	O:0.997839
:	O	O:0.999925
`	O	O:0.999952
np.where	B-API	B-API:0.888613
`	O	O:0.999752
is	O	O:0.999951
optional	O	O:0.998141
,	O	O:0.999981
thanks	O	O:0.999442
@USER	O	O:0.996876
.	O	O:0.999121
	
or	O	O:0.999951
with	O	O:0.998882
`	O	O:0.999952
numpy.concatenate	B-API	B-API:0.966632
`	O	O:0.999947
?	O	O:0.999961
	
@USER	O	O:0.999831
you	O	O:0.999781
can	O	O:0.999844
do	O	O:0.999990
it	O	O:0.999987
,	O	O:0.999984
it's	O	O:0.999974
easy	O	O:0.999872
with	O	O:0.999581
`	O	O:0.999932
np.histogram	B-API	B-API:0.937378
`	O	O:0.999869
.	O	O:0.999643
	
`	O	O:0.999847
numpy.base_repr	B-API	O:0.920083
`	O	O:0.999956
uses	O	O:0.999471
this	O	O:0.999059
,	O	O:0.999944
but	O	O:0.999903
only	O	O:0.999524
operates	O	O:0.999284
on	O	O:0.999956
scalars	O	O:0.999160
.	O	O:0.999853
	
Python	O	O:0.998939
apply_along_axis	B-API	B-API:0.665944
of	O	O:0.999769
multiple	O	O:0.993167
arrays	O	O:0.998286
	
`	O	O:0.999842
numpy.average()	B-API	B-API:0.997097
`	O	O:0.999976
has	O	O:0.999946
a	O	O:0.999981
weights	O	O:0.829944
option	O	O:0.993290
,	O	O:0.999981
but	O	O:0.999803
`	O	O:0.999877
numpy.std()	B-API	B-API:0.999809
`	O	O:0.999979
does	O	O:0.998242
not	O	O:0.999820
.	O	O:0.999856
	
I	O	O:0.999907
wanted	O	O:0.999837
to	O	O:0.999670
write	O	O:0.999881
`	O	O:0.999976
M.det()	O	O:0.553196
`	O	O:0.999977
instead	O	O:0.999462
of	O	O:0.999933
`	O	O:0.999679
numpy.linalg.det	B-API	B-API:0.747443
(	O	O:0.999980
M	O	O:0.999909
)`	O	O:0.999874
,	O	O:0.999688
	
I	O	O:0.999902
was	O	O:0.999807
working	O	O:0.999113
with	O	O:0.999377
something	O	O:0.999859
like	O	O:0.999507
```	O	O:0.999891
s	O	O:0.999314
=	O	O:0.999974
pd.DataFrame	B-API	B-API:0.912660
([	O	O:0.999927
'	O	O:0.999706
1	O	O:0.999888
'	O	O:0.999900
,	O	O:0.999978
'	O	O:0.999977
na	O	O:0.986836
'	O	O:0.999870
,	O	O:0.999990
'	O	O:0.999937
3	O	O:0.999740
'	O	O:0.999923
,	O	O:0.999981
'	O	O:0.999942
4	O	O:0.999746
'])	O	O:0.998404
.	O	O:0.998481
	
tested	O	O:0.998716
it	O	O:0.999958
a	O	O:0.999951
bit	O	O:0.998669
myself	O	O:0.992483
:	O	O:0.999959
sympy.sin	O	B-API:0.522750
is	O	O:0.999993
much	O	O:0.999236
slower	O	O:0.999975
than	O	O:0.996639
numpy.sin	B-API	B-API:0.824474
	
I	O	O:0.999857
was	O	O:0.999991
thinking	O	O:0.999622
of	O	O:0.999885
something	O	O:0.999760
like	O	O:0.999446
`	O	O:0.999966
frombuffer	B-API	B-API:0.942314
`	O	O:0.999756
.	O	O:0.998670
	
Tables	O	O:0.999770
have	O	O:0.999655
an	O	O:0.999449
append	B-API	B-API:0.538187
method	O	O:0.999635
that	O	O:0.999585
can	O	O:0.999888
easily	O	O:0.999734
add	O	O:0.999961
additional	O	O:0.999112
rows	O	O:0.996196
.	O	O:0.999577
	
@USER	O	O:0.999693
,	O	O:0.999954
I	O	O:0.999980
tested	O	O:0.999790
the	O	O:0.987147
append	B-API	B-API:0.742266
method	O	O:0.996607
of	O	O:0.999971
array	O	O:0.999587
by	O	O:0.999949
measure	O	O:0.949833
the	O	O:0.999954
time	O	O:0.999325
it	O	O:0.999990
cost	O	O:0.999895
,	O	O:0.999999
since	O	O:0.999730
resize	B-API	O:0.971078
the	O	O:0.999950
array	O	O:0.999607
will	O	O:0.998260
use	O	O:0.999934
more	O	O:0.999258
time	O	O:0.999138
.	O	O:0.999666
	
I	O	O:0.999980
think	O	O:0.999724
you	O	O:0.999844
need	O	O:0.999751
to	O	O:0.999983
use	O	O:0.999981
append	B-API	B-API:0.748445
function	O	O:0.997961
to	O	O:0.999899
append	B-API	O:0.937296
new	O	O:0.998461
array	O	O:0.999555
with	O	O:0.999885
previous	O	O:0.997527
array	O	O:0.999693
,	O	O:0.999992
asarray	B-API	B-API:0.864174
function	O	O:0.997259
converts	O	O:0.999609
input	O	O:0.999915
to	O	O:0.999933
array	O	O:0.999376
.	O	O:0.999588
	
I	O	O:0.999910
would	O	O:0.999911
store	O	O:0.996399
all	O	O:0.999987
your	O	O:0.999928
data	O	O:0.999724
in	O	O:0.999982
a	O	O:0.999866
python	O	O:0.997929
list	O	O:0.993604
and	O	O:0.999789
use	O	O:0.999361
the	O	O:0.996729
append	B-API	B-API:0.936842
function	O	O:0.997442
to	O	O:0.999957
add	O	O:0.999962
new	O	O:0.999087
measurement	O	O:0.995095
.	O	O:0.999533
	
The	O	O:0.999490
Series	O	O:0.982475
must	O	O:0.999397
also	O	O:0.999980
have	O	O:0.999959
a	O	O:0.999862
`	O	O:0.999988
name	O	O:0.995205
`	O	O:0.999995
to	O	O:0.999945
be	O	O:0.999999
used	O	O:0.999931
with	O	O:0.995904
`	O	O:0.999912
join	B-API	B-API:0.976817
`	O	O:0.999976
,	O	O:0.999776
which	O	O:0.999961
gets	O	O:0.998890
pulled	O	O:0.999790
in	O	O:0.999988
as	O	O:0.999987
a	O	O:0.999972
new	O	O:0.998039
field	O	O:0.995498
called	O	O:0.996899
`	O	O:0.999991
name	O	O:0.973514
`	O	O:0.999955
.	O	O:0.999399
	
NumPy	O	O:0.998684
by	O	O:0.999761
itself	O	O:0.999004
is	O	O:0.999987
a	O	O:0.999888
fairly	O	O:0.993979
low-level	O	O:0.998659
tool	O	O:0.989931
,	O	O:0.999873
and	O	O:0.999886
will	O	O:0.997281
be	O	O:0.999968
very	O	O:0.999910
much	O	O:0.999577
similar	O	O:0.999872
to	O	O:0.999907
using	O	O:0.999617
MATLAB	O	O:0.989431
.	O	O:0.999823
pandas	O	O:0.997200
on	O	O:0.999979
the	O	O:0.999764
other	O	O:0.999724
hand	O	O:0.999769
provides	O	O:0.999804
rich	O	O:0.999964
time	O	O:0.999970
series	O	O:0.999091
functionality	O	O:0.999803
,	O	O:0.999996
data	O	O:0.999823
alignment	O	O:0.999655
,	O	O:0.999984
NA-friendly	O	O:0.999633
statistics	O	O:0.997675
,	O	O:0.999972
groupby	B-API	B-API:0.690524
,	O	O:0.999927
merge	O	B-API:0.790711
and	O	O:0.999091
join	B-API	B-API:0.879347
methods	O	O:0.992826
,	O	O:0.999889
and	O	O:0.999958
lots	O	O:0.999765
of	O	O:0.999895
other	O	O:0.999104
conveniences	O	O:0.995918
.	O	O:0.999753
	
already	O	O:0.999451
have	O	O:0.998944
all	O	O:0.998877
header	O	O:0.999415
names	O	O:0.994125
listed	O	O:0.999923
then	O	O:0.999960
you	O	O:0.999967
can	O	O:0.999878
use	O	O:0.999931
"	O	O:0.999865
join	B-API	B-API:0.966242
"	O	O:0.999354
and	O	O:0.996927
	
Because	O	O:0.999646
these	O	O:0.998625
are	O	O:0.999570
irregular	O	O:0.998531
operations	O	O:0.999810
,	O	O:0.999973
I	O	O:0.999996
can't	O	O:0.999618
use	O	O:0.999687
merge	B-API	B-API:0.732674
/	O	O:0.999080
join	B-API	B-API:0.960611
.	O	O:0.999640
	
It	O	O:0.999872
should	O	O:0.999804
be	O	O:0.999987
a	O	O:0.999986
bit	O	O:0.997419
quicker	O	O:0.999742
just	O	O:0.996812
by	O	O:0.999966
not	O	O:0.999860
using	O	O:0.999710
so	O	O:0.999933
many	O	O:0.996170
intermediary	O	O:0.999399
bitstrings	O	O:0.998463
-	O	O:0.999983
it's	O	O:0.999773
all	O	O:0.999936
done	O	O:0.999577
in	O	O:0.999884
the	O	O:0.999516
join	B-API	B-API:0.976921
method	O	O:0.996159
.	O	O:0.999775
	
How	O	O:0.999905
can	O	O:0.999847
i	O	O:0.999997
use	O	O:0.999952
the	O	O:0.998790
unique	B-API	O:0.975712
(	O	O:0.999986
a	O	O:0.999973
,	O	O:0.999998
rows	O	O:0.999425
)	O	O:0.999969
from	O	O:0.999564
MATLab	O	O:0.999912
at	O	O:0.999950
python	O	O:0.991573
?	O	O:0.999964
	
If	O	O:0.999962
you	O	O:0.999713
convert	O	O:0.999883
your	O	O:0.999889
2D	O	O:0.999953
coordinates	O	O:0.997253
into	O	O:0.999737
`	O	O:0.999995
target_map	O	B-API:0.651130
`	O	O:0.999991
into	O	O:0.999069
flat	O	O:0.999760
indices	O	O:0.997555
into	O	O:0.999775
it	O	O:0.999996
using	O	O:0.997424
`	O	O:0.999241
np.ravel_multi_index	B-API	B-API:0.994520
`	O	O:0.999947
,	O	O:0.999996
you	O	O:0.999989
can	O	O:0.999868
use	O	O:0.999919
`	O	O:0.999881
np.unique	B-API	B-API:0.980387
`	O	O:0.999862
and	O	O:0.998475
`	O	O:0.999971
np.bincount	B-API	B-API:0.964269
`	O	O:0.999963
to	O	O:0.999879
speed	O	O:0.999995
things	O	O:0.999904
up	O	O:0.999974
quite	O	O:0.999740
a	O	O:0.999937
bit	O	O:0.993416
:	O	O:0.999943
#CODE	O	O:0.998974
	
To	O	O:0.999966
get	O	O:0.999650
the	O	O:0.999920
unobserved	O	O:0.997268
values	O	O:0.995793
filled	O	O:0.999664
,	O	O:0.999991
we'll	O	O:0.999550
use	O	O:0.999772
the	O	O:0.998611
`	O	O:0.999321
unstack	B-API	B-API:0.991587
`	O	O:0.999924
and	O	O:0.999560
`	O	O:0.999979
stack	B-API	B-API:0.931622
`	O	O:0.999953
methods	O	O:0.988941
.	O	O:0.999882
	
The	O	O:0.999830
actual	O	O:0.993910
RMS	O	O:0.999251
would	O	O:0.999564
be	O	O:0.999817
`	O	O:0.999983
norm	B-API	B-API:0.957787
(	O	O:0.999995
x	O	O:0.999663
)	O	O:0.999934
/	O	O:0.999894
sqrt	B-API	O:0.662476
(	O	O:0.999986
x.size	O	O:0.948948
)`	O	O:0.998415
,	O	O:0.999979
but	O	O:0.999975
for	O	O:0.999842
minimization	O	O:0.998685
the	O	O:0.999832
constant	O	O:0.993954
multiplier	O	O:0.995537
doesn't	O	O:0.999970
make	O	O:0.999611
any	O	O:0.999810
difference	O	O:0.998282
.	O	O:0.998605
	
You	O	O:0.999864
could	O	O:0.999649
check	O	O:0.995784
whether	O	O:0.999976
this	O	O:0.998993
is	O	O:0.999977
the	O	O:0.999797
case	O	O:0.994784
,	O	O:0.999983
and	O	O:0.999909
append	O	O:0.791025
to	O	O:0.999904
your	O	O:0.999898
sample	O	O:0.998543
in	O	O:0.999981
a	O	O:0.999994
loop	O	O:0.998421
if	O	O:0.999948
necessary	O	O:0.996939
.	O	O:0.998827
	
The	O	O:0.999857
above	O	O:0.999564
code	O	O:0.996502
works	O	O:0.998550
,	O	O:0.999971
but	O	O:0.999692
would	O	O:0.999285
be	O	O:0.999912
better	O	O:0.999978
to	O	O:0.999636
append	O	O:0.930929
the	O	O:0.999620
data_array	O	O:0.922387
retrieved	O	O:0.999959
from	O	O:0.999746
for	O	O:0.999995
loop	O	O:0.999886
directly	O	O:0.999839
into	O	O:0.999719
the	O	O:0.999991
numpy	O	O:0.996587
array	O	O:0.999340
rather	O	O:0.999972
than	O	O:0.999760
using	O	O:0.997116
python	O	O:0.991123
list	O	O:0.956227
.	O	O:0.999354
	
If	O	O:0.999887
you	O	O:0.999884
want	O	O:0.999682
an	O	O:0.999841
intersection	O	O:0.999831
between	O	O:0.999345
the	O	O:0.999926
two	O	O:0.998959
arrays	O	O:0.999970
you	O	O:0.999867
can	O	O:0.999955
loop	O	O:0.999939
;	O	O:0.999997
for	O	O:0.999573
i	O	O:0.999986
data	O	O:0.996904
:	O	O:0.999937
and	O	O:0.999951
get	O	O:0.999803
i	O	O:0.999990
from	O	O:0.999761
first	O	O:0.998841
array	O	O:0.999771
,	O	O:0.999880
and	O	O:0.999867
i	O	O:0.999985
from	O	O:0.996256
second	O	O:0.997931
array.But	O	O:0.996780
I'm	O	O:0.999680
not	O	O:0.999908
sure	O	O:0.999901
if	O	O:0.999969
I	O	O:0.999973
follow	O	O:0.999640
it	O	O:0.999894
correctly	O	O:0.999591
,	O	O:0.999992
you	O	O:0.999962
have	O	O:0.999932
some	O	O:0.999990
data	O	O:0.999949
which	O	O:0.999972
has	O	O:0.999943
0	O	O:0.999974
occurences	O	O:0.999466
in	O	O:0.999990
some	O	O:0.999956
columns	O	O:0.999850
of	O	O:0.999999
your	O	O:0.999715
array	O	O:0.999777
,	O	O:0.999993
if	O	O:0.999980
you	O	O:0.999514
append	O	O:0.878578
the	O	O:0.999844
other	O	O:0.999788
values	O	O:0.999740
to	O	O:0.999996
a	O	O:0.999999
new	O	O:0.999654
array	O	O:0.999124
the	O	O:0.999967
memory	O	O:0.998625
of	O	O:0.999942
where	O	O:0.997922
in	O	O:0.999989
the	O	O:0.999974
data	O	O:0.999819
those	O	O:0.999714
values	O	O:0.999902
came	O	O:0.999923
from	O	O:0.999765
is	O	O:0.999990
already	O	O:0.999908
automatically	O	O:0.998884
stored	O	O:0.995024
.	O	O:0.999069
	
(	O	O:0.999966
2	O	O:0.999918
)	O	O:0.999919
Collect	O	O:0.998980
the	O	O:0.999992
parts	O	O:0.996455
of	O	O:0.999976
the	O	O:0.999895
SQL	O	O:0.999438
command	O	O:0.998108
in	O	O:0.999897
a	O	O:0.999988
list	O	O:0.973236
and	O	O:0.999955
do	O	O:0.999883
a	O	O:0.999858
`	O	O:0.999797
str.join	B-API	B-API:0.996664
`	O	O:0.999963
in	O	O:0.999868
the	O	O:0.999950
end	O	O:0.995528
,	O	O:0.999986
to	O	O:0.999961
avoid	O	O:0.999973
allocating	O	O:0.999650
an	O	O:0.999688
increasingly	O	O:0.999888
long	O	O:0.999515
string	O	O:0.998860
each	O	O:0.999430
time	O	O:0.999666
(	O	O:0.999994
you	O	O:0.999845
can't	O	O:0.999931
really	O	O:0.999755
append	O	O:0.931381
to	O	O:0.999932
a	O	O:0.999991
string	O	O:0.994572
in	O	O:0.999853
Python	O	O:0.999710
as	O	O:0.999997
they	O	O:0.998996
are	O	O:0.999936
immutable	O	O:0.998622
)	O	O:0.999496
.	O	O:0.998155
	
append	O	B-API:0.683154
C	O	O:0.997821
:\	O	O:0.999356
libav\usr\bin\	O	O:0.998249
to	O	O:0.999970
the	O	O:0.999930
'	O	O:0.999764
Path	O	O:0.880904
'	O	O:0.999946
environment	O	O:0.999679
variable	O	O:0.993796
	
How	O	O:0.999827
to	O	O:0.999967
efficiently	O	O:0.999979
join	O	B-API:0.717057
a	O	O:0.999997
list	O	O:0.997731
of	O	O:0.999974
values	O	O:0.996476
to	O	O:0.999943
a	O	O:0.999999
list	O	O:0.993465
of	O	O:0.999920
intervals	O	O:0.997718
?	O	O:0.999958
	
The	O	O:0.999853
alignment	O	O:0.999661
angles	O	O:0.982207
may	O	O:0.999583
be	O	O:0.999878
unique	O	O:0.996898
,	O	O:0.999986
a	O	O:0.999971
discrete	O	O:0.980216
set	O	O:0.998678
,	O	O:0.999996
or	O	O:0.999986
a	O	O:0.999975
continuum	O	O:0.999465
as	O	O:0.999945
below	O	O:0.997866
.	O	O:0.999622
	
Alternatively	O	O:0.998856
,	O	O:0.999990
you	O	O:0.999936
could	O	O:0.999458
assign	O	O:0.999860
the	O	O:0.999984
flip	O	O:0.998263
cards	O	O:0.999794
their	O	O:0.999818
own	O	O:0.999745
unique	O	O:0.993424
IDs	O	O:0.999023
and	O	O:0.999854
store	O	O:0.999781
them	O	O:0.999295
in	O	O:0.999937
the	O	O:0.999930
same	O	O:0.999396
record	O	O:0.999956
array	O	O:0.999972
as	O	O:0.999991
the	O	O:0.999845
regular	O	O:0.998841
cards	O	O:0.999313
,	O	O:0.999997
as	O	O:0.999990
the	O	O:0.999858
properties	O	O:0.999394
seem	O	O:0.999940
to	O	O:0.999996
have	O	O:0.999978
the	O	O:0.999981
same	O	O:0.999731
names	O	O:0.999203
,	O	O:0.999995
and	O	O:0.999992
then	O	O:0.999882
have	O	O:0.999954
a	O	O:0.999974
`	O	O:0.999887
flip_id	O	O:0.965658
`	O	O:0.999952
field	O	O:0.998822
that	O	O:0.999759
would	O	O:0.999940
be	O	O:0.999995
some	O	O:0.999903
set	O	O:0.999524
value	O	O:0.999982
such	O	O:0.999955
as	O	O:0.999968
`	O	O:0.999817
0	O	O:0.999187
`	O	O:0.999989
or	O	O:0.997625
`	O	O:0.999975
None	O	O:0.988124
`	O	O:0.999985
for	O	O:0.999207
cards	O	O:0.997980
without	O	O:0.999726
flip	O	O:0.989013
aspects	O	O:0.993558
and	O	O:0.999907
then	O	O:0.999740
the	O	O:0.999978
ID	O	O:0.999820
of	O	O:0.999944
the	O	O:0.999931
flip	O	O:0.999743
card	O	O:0.999365
for	O	O:0.999994
those	O	O:0.999528
cards	O	O:0.999679
that	O	O:0.999848
do	O	O:0.999995
have	O	O:0.999930
a	O	O:0.999989
flip	O	O:0.993768
.	O	O:0.999598
	
You	O	O:0.999777
can	O	O:0.999067
notice	O	O:0.999759
that	O	O:0.999946
there	O	O:0.998977
is	O	O:0.999993
gray	O	O:0.997502
strip	O	O:0.997782
on	O	O:0.999913
top	O	O:0.995920
and	O	O:0.999949
on	O	O:0.999938
the	O	O:0.999633
left	O	O:0.979212
...	O	O:0.992843
	
Furthermore	O	O:0.998693
you	O	O:0.999904
then	O	O:0.999738
go	O	O:0.999968
and	O	O:0.999964
compute	O	O:0.998783
the	O	O:0.999979
norm	O	B-API:0.505845
of	O	O:0.999965
those	O	O:0.999868
three	O	O:0.999709
values	O	O:0.992418
.	O	O:0.999389
	
My	O	O:0.999927
question	O	O:0.999514
concerns	O	O:0.999773
iterating	O	O:0.999574
through	O	O:0.999748
the	O	O:0.999993
rows	O	O:0.999373
of	O	O:0.999984
a	O	O:0.999995
data	O	O:0.999685
frame	O	O:0.999373
and	O	O:0.999731
on	O	O:0.999993
each	O	O:0.998962
row	O	O:0.999975
setting	O	O:0.999846
a	O	O:0.999850
field	O	O:0.997043
based	O	O:0.998442
on	O	O:0.999825
information	O	O:0.999349
in	O	O:0.999981
a	O	O:0.999976
different	O	O:0.999785
data	O	O:0.999288
frame	O	O:0.999502
.	O	O:0.999577
	
EDIT	O	O:0.992812
:	O	O:0.999976
Adding	O	O:0.999550
logic	O	O:0.999482
to	O	O:0.999953
default	O	O:0.999958
empty	O	O:0.999658
strings	O	O:0.999864
to	O	O:0.999964
`	O	O:0.999997
0	O	O:0.999221
`	O	O:0.999991
,	O	O:0.999969
use	O	O:0.999982
a	O	O:0.999929
different	O	O:0.998719
value	O	O:0.999331
if	O	O:0.999914
you	O	O:0.999891
want	O	O:0.999458
to	O	O:0.999910
handle	O	O:0.999987
empty	O	O:0.999256
strings	O	O:0.999638
in	O	O:0.999887
`	O	O:0.999986
years	O	O:0.993650
`	O	O:0.999980
colomn	O	O:0.993325
differently	O	O:0.999663
#CODE	O	O:0.998896
	
I	O	O:0.999873
would	O	O:0.999734
suggest	O	O:0.999601
that	O	O:0.999954
you	O	O:0.999837
use	O	O:0.999872
2-dimensional	O	O:0.998561
numpy	O	O:0.995645
array	O	O:0.998023
.	O	O:0.999465
	
I	O	O:0.999896
renamed	O	O:0.999987
them	O	O:0.999451
to	O	O:0.999962
aa	O	O:0.999819
,	O	O:0.999958
ab	O	O:0.999292
and	O	O:0.998824
ac	O	O:0.998958
but	O	O:0.999681
still	O	O:0.997995
get	O	O:0.999108
the	O	O:0.999972
same	O	O:0.999257
error	O	O:0.999467
.	O	O:0.999934
	
In	O	O:0.999946
this	O	O:0.999923
last	O	O:0.999842
case	O	O:0.999325
,	O	O:0.999983
RAM	O	O:0.999968
usage	O	O:0.999860
fits	O	O:0.999494
the	O	O:0.999963
equivalent	O	O:0.999368
`	O	O:0.999967
chunk	O	O:0.994699
`	O	O:0.999995
size	O	O:0.997475
#CODE	O	O:0.999867
	
`	O	O:0.999901
pandas	O	O:0.969272
`	O	O:0.999969
,	O	O:0.999977
like	O	O:0.999757
`	O	O:0.999976
numpy	O	O:0.942012
`	O	O:0.999878
and	O	O:0.999950
many	O	O:0.999262
other	O	O:0.999547
modules	O	O:0.996560
,	O	O:0.999785
is	O	O:0.999984
not	O	O:0.997521
written	O	O:0.998783
in	O	O:0.999981
pure	O	O:0.996172
Python	O	O:0.999606
-	O	O:0.999994
it	O	O:0.999908
has	O	O:0.999978
components	O	O:0.996877
written	O	O:0.999313
in	O	O:0.999914
C	O	O:0.999275
and	O	O:0.999634
Cython	O	O:0.999869
that	O	O:0.999440
get	O	O:0.999008
compiled	O	O:0.999701
into	O	O:0.999328
version-	O	O:0.999223
and	O	O:0.999686
platform-specific	O	O:0.998947
libraries	O	O:0.997917
during	O	O:0.998357
the	O	O:0.999335
build	O	O:0.994894
process	O	O:0.972319
.	O	O:0.999788
	
It	O	O:0.999987
gave	O	O:0.999708
me	O	O:0.999981
the	O	O:0.999897
error	O	O:0.997061
:	O	O:0.999993
cqid	O	O:0.999824
=	O	O:0.999993
row	O	O:0.999778
[	O	O:0.999964
'	O	O:0.999970
ClearQuest	O	O:0.999219
ID	O	O:0.999774
']	O	O:0.999567
TypeError	O	O:0.992892
:	O	O:0.999958
string	O	O:0.996849
indices	O	O:0.999040
must	O	O:0.999420
be	O	O:0.999968
integers	O	O:0.997884
,	O	O:0.999978
not	O	O:0.996603
str	O	O:0.994824
...........	O	O:0.985840
	
The	O	O:0.999834
use	O	O:0.999906
case	O	O:0.980284
is	O	O:0.999997
that	O	O:0.998527
I	O	O:0.999998
have	O	O:0.999804
different	O	O:0.999766
time	O	O:0.999881
series	O	O:0.999422
coming	O	O:0.999853
from	O	O:0.999730
different	O	O:0.999892
data	O	O:0.999905
sources	O	O:0.996478
.	O	O:0.999814
	
How	O	O:0.999913
can	O	O:0.999306
I	O	O:0.999996
get	O	O:0.999887
pandas	O	O:0.991400
Timestamp	O	O:0.988955
offset	O	O:0.999758
by	O	O:0.999883
certain	O	O:0.998904
amount	O	O:0.999815
of	O	O:0.999852
months	O	O:0.993666
?	O	O:0.999964
	
I	O	O:0.999980
managed	O	O:0.999653
to	O	O:0.999763
get	O	O:0.999954
the	O	O:0.999931
stats	O	O:0.999575
by	O	O:0.999971
placing	O	O:0.999678
everything	O	O:0.998965
in	O	O:0.999558
nested	O	O:0.999398
dictionary	O	O:0.987700
,	O	O:0.999989
but	O	O:0.999790
I	O	O:0.999986
feel	O	O:0.999799
that	O	O:0.999764
there	O	O:0.999913
may	O	O:0.999892
be	O	O:0.999936
a	O	O:0.999982
much	O	O:0.997693
easier	O	O:0.999853
way	O	O:0.999612
to	O	O:0.999947
the	O	O:0.999976
approach	O	O:0.999570
by	O	O:0.999861
using	O	O:0.999759
pandas	O	O:0.994499
dataframes	O	O:0.994763
and	O	O:0.999430
groubpy	O	B-API:0.896215
.	O	O:0.997064
	
Just	O	O:0.999456
to	O	O:0.999971
get	O	O:0.999978
a	O	O:0.999996
sense	O	O:0.999557
of	O	O:0.999968
what	O	O:0.996991
I'm	O	O:0.999972
trying	O	O:0.999818
to	O	O:0.999610
achieve	O	O:0.999385
.	O	O:0.999583
	
Which	O	O:0.998299
is	O	O:0.999949
suspect	O	O:0.996633
is	O	O:0.999990
due	O	O:0.999761
to	O	O:0.999988
my	O	O:0.999994
data	O	O:0.999841
range	O	O:0.997246
,,	O	O:0.999555
but	O	O:0.999434
it	O	O:0.999938
may	O	O:0.999719
well	O	O:0.999026
be	O	O:0.999995
that	O	O:0.999544
I	O	O:0.999988
don't	O	O:0.999677
understand	O	O:0.998413
the	O	O:0.999787
other	O	O:0.999372
parameters	O	O:0.994611
.	O	O:0.999836
	
Your	O	O:0.998616
second	O	O:0.998576
one	O	O:0.999622
doesn't	O	O:0.999485
really	O	O:0.999786
make	O	O:0.999429
sense	O	O:0.999938
as	O	O:0.999971
an	O	O:0.999679
aggregation	O	O:0.998546
.	O	O:0.999544
	
How	O	O:0.999959
can	O	O:0.999626
I	O	O:0.999998
get	O	O:0.999643
the	O	O:0.999649
index	O	O:0.999138
of	O	O:0.999958
certain	O	O:0.999025
element	O	O:0.999984
of	O	O:0.999972
a	O	O:0.999862
Series	O	O:0.960920
in	O	O:0.999741
python	O	O:0.996647
pandas	O	O:0.997927
?	O	O:0.999950
	
(	O	O:0.999925
Very	O	O:0.999280
,	O	O:0.999997
very	O	O:0.999873
late	O	O:0.999928
reply	O	O:0.999501
-	O	O:0.999995
apologies	O	O:0.999061
.	O	O:0.999835
)	O	O:0.999813
That's	O	O:0.999803
true	O	O:0.999842
,	O	O:0.999989
you'd	O	O:0.999707
use	O	O:0.997897
the	O	O:0.997396
method	O	O:0.990144
EdChum	O	O:0.999783
suggested	O	O:0.999780
for	O	O:0.999912
longer	O	O:0.999888
lists	O	O:0.998823
of	O	O:0.999801
columns	O	O:0.986109
.	O	O:0.999885
	
If	O	O:0.999840
actual_sum	O	O:0.985492
and	O	O:0.999770
expected_to_date	O	O:0.995442
are	O	O:0.999746
equal	O	O:0.999000
,	O	O:0.999992
put	O	O:0.999904
a	O	O:0.999898
0	O	O:0.998701
	
`	O	O:0.999848
ts	O	O:0.998300
[	O	O:0.999994
ts	O	O:0.999926
[	O	O:0.999991
'	O	O:0.999985
values	O	O:0.999691
']	O	O:0.999921
0	O	O:0.999689
]`	O	O:0.999839
should	O	O:0.998843
produce	O	O:0.999502
the	O	O:0.999931
output	O	O:0.999552
you	O	O:0.999659
are	O	O:0.999907
looking	O	O:0.999587
for	O	O:0.999042
.	O	O:0.998957
	
And	O	O:0.999788
I	O	O:0.999982
get	O	O:0.999724
the	O	O:0.999224
counts	O	O:0.923088
:	O	O:0.999980
#CODE	O	O:0.999750
	
The	O	O:0.999824
standard	O	O:0.997352
deviation	O	O:0.998003
differs	O	O:0.998050
between	O	O:0.995671
pandas	O	O:0.997693
and	O	O:0.999864
numpy	O	O:0.985428
.	O	O:0.998553
	
I	O	O:0.999700
would	O	O:0.999959
like	O	O:0.999426
to	O	O:0.999992
get	O	O:0.999970
rid	O	O:0.999943
of	O	O:0.999972
the	O	O:0.999881
loops	O	O:0.999375
,	O	O:0.999976
if	O	O:0.999993
that	O	O:0.999213
is	O	O:0.999986
possible	O	O:0.996527
.	O	O:0.999763
	
If	O	O:0.999948
I	O	O:0.999978
change	O	O:0.999322
the	O	O:0.998546
names	O	O:0.998304
then	O	O:0.999921
there	O	O:0.999882
is	O	O:0.999994
nothing	O	O:0.995157
to	O	O:0.999877
reference	O	O:0.999823
.	O	O:0.999674
	
I	O	O:0.999980
even	O	O:0.999664
tried	O	O:0.999764
building	O	O:0.999882
from	O	O:0.998557
the	O	O:0.999696
git	O	O:0.998245
,	O	O:0.999977
but	O	O:0.999953
whatever	O	O:0.999740
I	O	O:0.999991
seem	O	O:0.999972
to	O	O:0.999915
do	O	O:0.999997
,	O	O:0.999995
I	O	O:0.999993
get	O	O:0.999807
the	O	O:0.999908
same	O	O:0.999091
error	O	O:0.998169
:	O	O:0.999993
#CODE	O	O:0.999682
	
I	O	O:0.999988
want	O	O:0.999938
to	O	O:0.999760
do	O	O:0.999994
the	O	O:0.999959
following	O	O:0.999383
operations	O	O:0.999734
on	O	O:0.999987
the	O	O:0.999996
data	O	O:0.999573
storage	O	O:0.998231
:	O	O:0.999978
	
How	O	O:0.999923
do	O	O:0.999785
I	O	O:0.999989
get	O	O:0.999867
it	O	O:0.999955
to	O	O:0.999993
actually	O	O:0.999987
show	O	O:0.999696
the	O	O:0.999933
graph	O	O:0.997947
?	O	O:0.999955
	
#URL	O	O:0.999775
shows	O	O:0.999817
a	O	O:0.999994
way	O	O:0.999862
to	O	O:0.999915
get	O	O:0.999976
the	O	O:0.999954
number	O	O:0.999129
of	O	O:0.999985
days	O	O:0.999817
in	O	O:0.999995
a	O	O:0.999986
month	O	O:0.996757
,	O	O:0.999975
making	O	O:0.998030
the	O	O:0.999565
rest	O	O:0.999609
more	O	O:0.999788
or	O	O:0.999993
less	O	O:0.999818
trivial	O	O:0.999670
as	O	O:0.999994
they	O	O:0.998982
don't	O	O:0.999884
vary	O	O:0.978108
.	O	O:0.999625
	
to	O	O:0.999879
create	O	O:0.999907
average	O	O:0.999822
values	O	O:0.999779
with	O	O:0.999649
an	O	O:0.999927
equidistant	O	O:0.998824
time-vector	O	O:0.998363
.	O	O:0.999652
	
I	O	O:0.999976
get	O	O:0.999927
something	O	O:0.999125
where	O	O:0.998537
all	O	O:0.999341
"	O	O:0.999957
newlines	O	O:0.992332
"	O	O:0.999908
are	O	O:0.999602
escaped	O	O:0.996902
.	O	O:0.999170
	
Reproducing	O	O:0.997133
without	O	O:0.999169
a	O	O:0.999940
data	O	O:0.999769
file	O	O:0.999252
,	O	O:0.999988
using	O	O:0.999637
Jeff's	O	O:0.984453
suggestion	O	O:0.977774
:	O	O:0.999962
#CODE	O	O:0.999200
	
However	O	O:0.999592
,	O	O:0.999867
I	O	O:0.999992
also	O	O:0.999891
want	O	O:0.999415
to	O	O:0.999640
get	O	O:0.999982
it	O	O:0.999966
on	O	O:0.999986
the	O	O:0.999992
basis	O	O:0.999897
of	O	O:0.999984
the	O	O:0.999496
`	O	O:0.999970
Group	O	O:0.967258
`	O	O:0.999991
variable	O	O:0.994959
,	O	O:0.999986
which	O	O:0.999922
means	O	O:0.998964
I	O	O:0.999987
don't	O	O:0.999948
want	O	O:0.999173
to	O	O:0.999917
get	O	O:0.999915
`	O	O:0.999964
Bob	O	O:0.996820
`'	O	O:0.999986
s	O	O:0.998737
`	O	O:0.999975
Value	O	O:0.971048
`	O	O:0.999983
based	O	O:0.996833
on	O	O:0.999991
the	O	O:0.999504
`	O	O:0.999906
Jared	O	O:0.998399
`'	O	O:0.999986
s	O	O:0.999467
`	O	O:0.999986
Value	O	O:0.975020
`	O	O:0.999948
,	O	O:0.999912
since	O	O:0.999971
those	O	O:0.999689
two	O	O:0.999947
records's	O	O:0.999210
`	O	O:0.999910
Group	O	O:0.992119
`	O	O:0.999992
value	O	O:0.994660
is	O	O:0.999993
different	O	O:0.999038
-	O	O:0.999968
I	O	O:0.999997
only	O	O:0.999780
compute	O	O:0.989901
it	O	O:0.999908
within	O	O:0.999847
each	O	O:0.999466
specific	O	O:0.998760
`	O	O:0.999971
Group	O	O:0.980476
`	O	O:0.999982
variable	O	O:0.978382
.	O	O:0.999888
	
I	O	O:0.999988
try	O	O:0.999971
to	O	O:0.999766
use	O	O:0.999976
jsonlint	O	O:0.998483
to	O	O:0.999912
validate	O	O:0.996889
these	O	O:0.999888
json	O	O:0.998345
files	O	O:0.999603
but	O	O:0.999896
encounter	O	O:0.999966
some	O	O:0.999088
error	O	O:0.999831
messages	O	O:0.998186
.	O	O:0.999623
	
The	O	O:0.999910
logic	O	O:0.999291
to	O	O:0.999930
arrive	O	O:0.999095
at	O	O:0.999984
that	O	O:0.999684
database	O	O:0.999894
is	O	O:0.999972
an	O	O:0.999799
intricate	O	O:0.999962
mix	O	O:0.989725
of	O	O:0.999787
Python	O	O:0.999249
processing	O	O:0.999144
and	O	O:0.999353
SQL	O	O:0.999659
joins	O	O:0.998710
done	O	O:0.999093
in	O	O:0.999869
sqlite3	O	O:0.997766
.	O	O:0.999461
	
I	O	O:0.999980
want	O	O:0.999777
to	O	O:0.999945
take	O	O:0.999995
advantage	O	O:0.999937
of	O	O:0.999960
the	O	O:0.999615
`	O	O:0.999960
str	O	O:0.983317
`	O	O:0.999997
accessor	O	O:0.999817
to	O	O:0.999991
split	O	O:0.995863
the	O	O:0.999982
data	O	O:0.999881
into	O	O:0.999922
two	O	O:0.999989
columns	O	O:0.999577
,	O	O:0.999996
such	O	O:0.999987
that	O	O:0.999811
the	O	O:0.999963
first	O	O:0.999087
column	O	O:0.998097
is	O	O:0.999956
,	O	O:0.999984
Name	O	O:0.999596
,	O	O:0.999952
contains	O	O:0.999727
the	O	O:0.999917
actual	O	O:0.998434
name	O	O:0.998312
(	O	O:0.999986
first	O	O:0.999962
name	O	O:0.999890
last	O	O:0.999858
name	O	O:0.999885
)	O	O:0.999787
,	O	O:0.999900
and	O	O:0.999951
the	O	O:0.999381
second	O	O:0.993517
column	O	O:0.997905
,	O	O:0.999991
Email	O	O:0.999128
,	O	O:0.999963
contains	O	O:0.999521
the	O	O:0.999968
email	O	O:0.999236
address	O	O:0.998805
)	O	O:0.999784
.	O	O:0.998997
	
In	O	O:0.999947
fact	O	O:0.999819
the	O	O:0.999984
only	O	O:0.998901
really	O	O:0.999617
relevant	O	O:0.999963
data	O	O:0.999933
needed	O	O:0.999901
for	O	O:0.999940
the	O	O:0.999982
plot	O	O:0.886748
is	O	O:0.999984
the	O	O:0.999914
first	O	O:0.997059
and	O	O:0.999695
second	O	O:0.998948
column	O	O:0.998257
,	O	O:0.999972
namely	O	O:0.997657
:	O	O:0.999925
`	O	O:0.999907
Compression	O	O:0.999467
Force	O	O:0.993550
`	O	O:0.999885
and	O	O:0.997981
`	O	O:0.999935
Compression	O	O:0.998422
Velocity	O	O:0.994648
`	O	O:0.999715
.	O	O:0.997514
	
How	O	O:0.999821
to	O	O:0.999905
get	O	O:0.999948
special	O	O:0.998917
characters	O	O:0.999791
from	O	O:0.999857
Excel	O	O:0.999437
to	O	O:0.999976
screen	O	O:0.999800
using	O	O:0.999816
pandas	O	O:0.981174
?	O	O:0.999866
	
And	O	O:0.999721
replace	O	O:0.974148
`'	O	O:0.999851
Month	O	O:0.988967
'`	O	O:0.999960
with	O	O:0.997737
`'	O	O:0.999883
Day	O	O:0.997070
'`	O	O:0.999870
below	O	O:0.991467
.	O	O:0.999807
	
But	O	O:0.999875
if	O	O:0.999905
you	O	O:0.999950
have	O	O:0.999585
a	O	O:0.999997
huge	O	O:0.999382
amount	O	O:0.999705
to	O	O:0.999974
data	O	O:0.999901
,	O	O:0.999989
it	O	O:0.999962
*	O	O:0.999838
might	O	O:0.999363
*	O	O:0.999872
be	O	O:0.999968
interesting	O	O:0.999800
to	O	O:0.999947
think	O	O:0.999966
of	O	O:0.999970
a	O	O:0.999985
more	O	O:0.998922
complex	O	O:0.998726
data	O	O:0.999855
model	O	O:0.995907
.	O	O:0.999790
	
What	O	O:0.999103
are	O	O:0.999720
you	O	O:0.999870
trying	O	O:0.999802
to	O	O:0.999959
do	O	O:0.999976
where	O	O:0.999983
this	O	O:0.999623
is	O	O:0.999984
the	O	O:0.999585
bottleneck	O	O:0.997547
?	O	O:0.999937
	
How	O	O:0.999939
can	O	O:0.999339
I	O	O:0.999990
change	O	O:0.999814
that	O	O:0.989040
and	O	O:0.999782
use	O	O:0.998987
insted	O	O:0.994146
the	O	O:0.999499
first	O	O:0.999504
line	O	O:0.999737
of	O	O:0.999959
output	O	O:0.999938
code	O	O:0.999937
as	O	O:0.999990
a	O	O:0.999930
column	O	O:0.992452
(	O	O:0.999882
In	O	O:0.999991
this	O	O:0.999917
case	O	O:0.999936
line	O	O:0.999553
10	O	O:0.999440
:	O	O:0.999948
Sub-Data	O	O:0.997629
Item	O	O:0.998616
...	O	O:0.998244
)	O	O:0.999259
	
My	O	O:0.999936
objective	O	O:0.999561
was	O	O:0.999898
to	O	O:0.999992
have	O	O:0.999989
a	O	O:0.999979
DTM	O	O:0.999971
like	O	O:0.999773
the	O	O:0.999931
one	O	O:0.999330
you	O	O:0.999810
get	O	O:0.999924
in	O	O:0.999978
R	O	O:0.999988
tm	O	O:0.998636
.	O	O:0.999383
	
So	O	O:0.999974
right	O	O:0.999688
now	O	O:0.999919
all	O	O:0.999823
the	O	O:0.999992
data	O	O:0.999649
comes	O	O:0.999878
from	O	O:0.999990
each	O	O:0.999169
iteration	O	O:0.999966
group	O	O:0.997290
,	O	O:0.999944
and	O	O:0.999895
all	O	O:0.999165
of	O	O:0.999909
its	O	O:0.994300
is	O	O:0.999973
transformed	O	O:0.999698
into	O	O:0.999705
one	O	O:0.999952
column	O	O:0.995942
vector	O	O:0.997041
.	O	O:0.999275
	
I	O	O:0.999943
am	O	O:0.999987
trying	O	O:0.999153
to	O	O:0.999971
get	O	O:0.999956
to	O	O:0.999983
the	O	O:0.999996
point	O	O:0.999793
where	O	O:0.999841
I	O	O:0.999997
can	O	O:0.999827
run	O	O:0.999013
#CODE	O	O:0.999663
	
While	O	O:0.999208
I	O	O:0.999978
don't	O	O:0.999834
get	O	O:0.999595
that	O	O:0.998308
warning	O	O:0.999661
with	O	O:0.997675
#CODE	O	O:0.998748
	
Thanks	O	O:0.998795
@USER	O	O:0.999824
-	O	O:0.999977
I	O	O:0.999987
mean	O	O:0.999559
that	O	O:0.999049
,	O	O:0.999997
if	O	O:0.999973
we	O	O:0.999985
do	O	O:0.999576
`	O	O:0.999990
A-B	O	O:0.992595
`	O	O:0.999972
we	O	O:0.999687
should	O	O:0.999977
only	O	O:0.999905
get	O	O:0.999892
the	O	O:0.999903
NaNs	O	O:0.999316
in	O	O:0.999887
`	O	O:0.999960
A	O	O:0.998105
`	O	O:0.999972
,	O	O:0.999203
and	O	O:0.999970
not	O	O:0.999468
the	O	O:0.999770
NaNs	O	O:0.999422
in	O	O:0.999865
`	O	O:0.999978
B	O	O:0.998034
`	O	O:0.999950
.	O	O:0.997371
	
I	O	O:0.999983
have	O	O:0.999928
three	O	O:0.998778
columns	O	O:0.999583
in	O	O:0.999990
my	O	O:0.999986
data	O	O:0.999853
set	O	O:0.999003
,	O	O:0.999993
namely	O	O:0.999214
"	O	O:0.999863
age	O	O:0.997612
"	O	O:0.999725
,	O	O:0.999716
"	O	O:0.999973
race	O	O:0.991004
"	O	O:0.999888
,	O	O:0.999931
"	O	O:0.999913
sex	O	O:0.989007
"	O	O:0.999733
,	O	O:0.999997
that	O	O:0.999580
I	O	O:0.999997
care	O	O:0.998108
about	O	O:0.998578
.	O	O:0.998850
	
Cannot	O	O:0.999568
get	O	O:0.999711
the	O	O:0.999959
average	O	O:0.999774
date	O	O:0.999838
using	O	O:0.999814
pandas	O	O:0.985868
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
All	O	O:0.999434
values	O	O:0.999240
ought	O	O:0.999576
to	O	O:0.999962
be	O	O:0.999989
integers	O	O:0.999627
,	O	O:0.999981
no	O	O:0.999614
floats	O	O:0.998001
.	O	O:0.999678
	
Note	O	O:0.993766
:	O	O:0.999990
this	O	O:0.999909
will	O	O:0.999474
get	O	O:0.999726
tripped	O	O:0.999559
up	O	O:0.999921
by	O	O:0.999987
some	O	O:0.999780
strings	O	O:0.999788
,	O	O:0.999999
so	O	O:0.999981
use	O	O:0.999967
with	O	O:0.997994
caution	O	O:0.977278
.	O	O:0.999916
	
The	O	O:0.999946
purpose	O	O:0.998986
of	O	O:0.999890
all	O	O:0.999793
these	O	O:0.999888
stuff	O	O:0.997265
is	O	O:0.999977
a	O	O:0.999943
geographical	O	O:0.910721
representation	O	O:0.999688
of	O	O:0.999992
data	O	O:0.999758
on	O	O:0.999990
a	O	O:0.999975
spatial	O	O:0.974035
grid	O	O:0.994090
.	O	O:0.999675
	
Since	O	O:0.999480
Name	O	O:0.997928
`	O	O:0.999942
C	O	O:0.996155
`	O	O:0.999995
does	O	O:0.995347
not	O	O:0.999991
have	O	O:0.999698
`	O	O:0.999984
3	O	O:0.999685
`	O	O:0.999995
or	O	O:0.999763
`	O	O:0.999987
5	O	O:0.999765
`	O	O:0.999989
in	O	O:0.999867
the	O	O:0.999983
column	O	O:0.994412
`	O	O:0.999985
Activity	O	O:0.978203
`	O	O:0.999989
,	O	O:0.999875
I	O	O:0.999996
do	O	O:0.999924
not	O	O:0.999806
want	O	O:0.999825
to	O	O:0.999692
get	O	O:0.999995
this	O	O:0.999985
data	O	O:0.999860
frame	O	O:0.999599
.	O	O:0.999653
	
Data	O	O:0.999124
has	O	O:0.999871
to	O	O:0.999963
be	O	O:0.999988
collected	O	O:0.999332
before	O	O:0.998945
local	O	O:0.998019
data	O	O:0.999823
frame	O	O:0.999433
is	O	O:0.999947
created	O	O:0.997032
.	O	O:0.999812
	
PANDAS	O	O:0.989104
:	O	O:0.999972
Extracting	O	O:0.999635
values	O	O:0.999709
from	O	O:0.999934
a	O	O:0.999980
column	O	O:0.999908
by	O	O:0.999971
applying	O	O:0.999701
a	O	O:0.999564
condition	O	O:0.995146
on	O	O:0.999970
other	O	O:0.999797
columnns	O	O:0.997643
	
If	O	O:0.999934
you	O	O:0.999959
try	O	O:0.999958
to	O	O:0.999985
produce	O	O:0.999794
the	O	O:0.999967
groups	O	O:0.999148
from	O	O:0.999938
my	O	O:0.999859
example	O	O:0.999938
you'll	O	O:0.999360
see	O	O:0.999986
what	O	O:0.999226
I	O	O:0.999995
mean	O	O:0.995004
.	O	O:0.999243
	
`	O	O:0.999901
pandas	O	O:0.969272
`	O	O:0.999969
,	O	O:0.999977
like	O	O:0.999757
`	O	O:0.999976
numpy	O	O:0.942012
`	O	O:0.999878
and	O	O:0.999950
many	O	O:0.999262
other	O	O:0.999547
modules	O	O:0.996560
,	O	O:0.999785
is	O	O:0.999984
not	O	O:0.997521
written	O	O:0.998783
in	O	O:0.999981
pure	O	O:0.996172
Python	O	O:0.999606
-	O	O:0.999994
it	O	O:0.999908
has	O	O:0.999978
components	O	O:0.996877
written	O	O:0.999313
in	O	O:0.999914
C	O	O:0.999275
and	O	O:0.999634
Cython	O	O:0.999869
that	O	O:0.999440
get	O	O:0.999008
compiled	O	O:0.999701
into	O	O:0.999328
version-	O	O:0.999223
and	O	O:0.999686
platform-specific	O	O:0.998947
libraries	O	O:0.997917
during	O	O:0.998357
the	O	O:0.999335
build	O	O:0.994894
process	O	O:0.972319
.	O	O:0.999788
	
Not	O	O:0.999954
sure	O	O:0.999682
how	O	O:0.999883
to	O	O:0.999971
get	O	O:0.999484
around	O	O:0.999618
this	O	O:0.999679
...	O	O:0.999449
pretty	O	O:0.998090
new	O	O:0.999233
to	O	O:0.999672
pandas	O	O:0.999293
.	O	O:0.999766
	
Here's	O	O:0.999069
the	O	O:0.999515
product	O	O:0.974533
:	O	O:0.999968
#CODE	O	O:0.999691
	
However	O	O:0.999734
,	O	O:0.999980
as	O	O:0.999987
the	O	O:0.999932
data	O	O:0.999592
became	O	O:0.999842
large	O	O:0.999675
,	O	O:0.999967
we	O	O:0.999865
played	O	O:0.996208
with	O	O:0.999825
SQLAlchemy	O	O:0.998666
/	O	O:0.999695
SQLite3	O	O:0.996035
.	O	O:0.999606
	
But	O	O:0.999899
this	O	O:0.999969
time	O	O:0.999752
I	O	O:0.999994
get	O	O:0.999774
another	O	O:0.996742
error	O	O:0.993487
:	O	O:0.999892
#CODE	O	O:0.999347
	
Makes	O	O:0.999591
the	O	O:0.999865
change	O	O:0.992875
the	O	O:0.999926
idea	O	O:0.998020
of	O	O:0.999981
trying	O	O:0.999622
to	O	O:0.999842
use	O	O:0.999992
this	O	O:0.999430
approach	O	O:0.999721
all	O	O:0.997478
together	O	O:0.998864
.	O	O:0.998657
	
For	O	O:0.999870
a	O	O:0.999936
generalized	O	O:0.998283
scenario	O	O:0.999644
where	O	O:0.999899
there	O	O:0.998550
are	O	O:0.999966
many	O	O:0.999215
different	O	O:0.999594
combinations	O	O:0.998407
of	O	O:0.999982
values	O	O:0.997133
under	O	O:0.998931
'	O	O:0.999621
COL1	O	O:0.970349
'	O	O:0.999508
and	O	O:0.999514
'	O	O:0.999833
COL3	O	O:0.858454
'	O	O:0.998320
,	O	O:0.999979
this	O	O:0.998295
works	O	O:0.999463
but	O	O:0.999053
is	O	O:0.999975
probably	O	O:0.993645
not	O	O:0.999898
nearly	O	O:0.999140
as	O	O:0.999980
efficient	O	O:0.999715
as	O	O:0.999989
it	O	O:0.999941
can	O	O:0.999626
be	O	O:0.999925
:	O	O:0.999980
#CODE	O	O:0.999305
	
Similarly	O	O:0.998985
in	O	O:0.999984
your	O	O:0.999809
example	O	O:0.999669
where	O	O:0.999586
you	O	O:0.999978
plot	O	O:0.988848
`	O	O:0.999984
col1	O	O:0.977321
,	O	O:0.999997
col2	O	O:0.990022
`	O	O:0.999963
differently	O	O:0.998212
based	O	O:0.999878
on	O	O:0.999780
`	O	O:0.999967
col3	O	O:0.957028
`	O	O:0.999959
,	O	O:0.999981
what	O	O:0.999925
if	O	O:0.999990
there	O	O:0.999892
are	O	O:0.999700
NA	O	O:0.998138
values	O	O:0.999527
that	O	O:0.999700
break	O	O:0.999781
the	O	O:0.999913
association	O	O:0.998011
between	O	O:0.992282
`	O	O:0.999973
col1	O	O:0.967610
,	O	O:0.999993
col2	O	O:0.995908
,	O	O:0.999984
col3	O	O:0.991061
`	O	O:0.999893
?	O	O:0.999844
	
For	O	O:0.999856
example	O	O:0.999052
,	O	O:0.999952
I	O	O:0.999997
want	O	O:0.999705
to	O	O:0.999935
take	O	O:0.999985
values	O	O:0.999912
from	O	O:0.999288
`	O	O:0.999960
col_3	O	O:0.920371
`	O	O:0.999971
and	O	O:0.997961
`	O	O:0.999961
col_4	O	B-API:0.634064
`	O	O:0.999950
and	O	O:0.998690
use	O	O:0.999996
them	O	O:0.998569
to	O	O:0.999952
generate	O	O:0.999951
a	O	O:0.999983
single	O	O:0.999093
values	O	O:0.996326
.	O	O:0.999510
	
The	O	O:0.999729
speed	O	O:0.999822
difference	O	O:0.998288
is	O	O:0.999958
astonishing	O	O:0.997168
.	O	O:0.998360
	
The	O	O:0.999737
summation	O	O:0.999519
in	O	O:0.999908
one	O	O:0.999891
group	O	O:0.995660
won't	O	O:0.999865
reduce	O	O:0.998409
the	O	O:0.999995
size	O	O:0.999869
of	O	O:0.999992
the	O	O:0.999871
result	O	O:0.999374
,	O	O:0.999991
the	O	O:0.999980
summation	O	O:0.999232
I	O	O:0.999997
want	O	O:0.999956
to	O	O:0.999892
do	O	O:0.999985
is	O	O:0.999985
across	O	O:0.999254
different	O	O:0.999195
groups	O	O:0.970901
.	O	O:0.999525
	
If	O	O:0.999952
you	O	O:0.999892
really	O	O:0.999533
prefer	O	O:0.999506
`	O	O:0.999908
1	O	O:0.999391
`'	O	O:0.999964
s	O	O:0.999586
and	O	O:0.999925
`	O	O:0.999919
0	O	O:0.998914
`'	O	O:0.999948
s	O	O:0.999712
replace	O	O:0.997954
the	O	O:0.999974
last	O	O:0.998923
line	O	O:0.999709
with	O	O:0.998705
:	O	O:0.999957
#CODE	O	O:0.999738
	
So	O	O:0.999967
traverse	O	O:0.999611
the	O	O:0.999960
data	O	O:0.999747
once	O	O:0.999708
and	O	O:0.999946
generate	O	O:0.999927
both	O	O:0.997728
arrays	O	O:0.999277
would	O	O:0.999249
be	O	O:0.999908
preferred	O	O:0.999057
.	O	O:0.999084
	
Im	O	O:0.999947
not	O	O:0.999711
fully	O	O:0.999858
adjusted	O	O:0.999882
to	O	O:0.999796
how	O	O:0.999976
Pandas	O	O:0.999787
is	O	O:0.999977
using	O	O:0.999672
matplotlib	O	O:0.996350
so	O	O:0.999862
i	O	O:0.999986
often	O	O:0.998795
switch	O	O:0.999507
to	O	O:0.999973
matplotlib	O	O:0.999899
myself	O	O:0.999605
if	O	O:0.999967
plots	O	O:0.997587
get	O	O:0.999891
more	O	O:0.999157
complicated	O	O:0.998755
,	O	O:0.999977
eg	O	O:0.999714
:	O	O:0.999923
#CODE	O	O:0.999721
	
The	O	O:0.999924
table	O	O:0.999659
that	O	O:0.999180
gives	O	O:0.999908
this	O	O:0.999941
message	O	O:0.999679
contains	O	O:0.999786
a	O	O:0.999981
few	O	O:0.999541
columns	O	O:0.996521
,	O	O:0.999999
none	O	O:0.999674
of	O	O:0.999994
them	O	O:0.999938
have	O	O:0.999956
data	O	O:0.999766
in	O	O:0.999996
them	O	O:0.999388
.	O	O:0.999752
	
so	O	O:0.999963
yes	O	O:0.999893
later	O	O:0.999924
i	O	O:0.999994
have	O	O:0.999642
open	O	O:0.995680
the	O	O:0.999973
file	O	O:0.997997
but	O	O:0.999927
thanks	O	O:0.999925
to	O	O:0.999907
pandas	O	O:0.999961
i	O	O:0.999998
can	O	O:0.999749
use	O	O:0.999980
the	O	O:0.999503
`	O	O:0.999742
chunksize	O	B-API:0.825548
`	O	O:0.999977
command	O	O:0.999174
to	O	O:0.999994
get	O	O:0.999926
the	O	O:0.999888
information	O	O:0.997932
i	O	O:0.999990
need	O	O:0.997854
.	O	O:0.999738
	
create	O	O:0.997817
column	O	O:0.999821
names	O	O:0.999893
by	O	O:0.999971
joining	O	O:0.999570
two	O	O:0.999691
labels	O	O:0.999889
of	O	O:0.999975
different	O	O:0.990642
levels	O	O:0.976966
with	O	O:0.999251
pandas	O	O:0.948825
	
@USER	O	O:0.999523
so	O	O:0.999893
how	O	O:0.999682
should	O	O:0.999765
i	O	O:0.999986
write	O	O:0.999938
it	O	O:0.999954
so	O	O:0.999997
that	O	O:0.999920
the	O	O:0.999979
program	O	O:0.998251
gives	O	O:0.999696
seq	O	O:0.999690
to	O	O:0.999941
'	O	O:0.999990
Hsequence	O	O:0.997641
'	O	O:0.999956
column	O	O:0.999796
when	O	O:0.998858
'	O	O:0.999979
Hcolumn	O	O:0.997932
'	O	O:0.999926
contains	O	O:0.999557
the	O	O:0.999989
title	O	O:0.999817
from	O	O:0.999883
fasta	O	O:0.999816
file	O	O:0.999909
?	O	O:0.999946
	
Also	O	O:0.998621
,	O	O:0.999985
in	O	O:0.999978
my	O	O:0.999629
larger	O	O:0.999896
directory	O	O:0.992428
,	O	O:0.999991
this	O	O:0.999208
is	O	O:0.999983
taking	O	O:0.997810
forever	O	O:0.999712
-	O	O:0.999979
as	O	O:0.999889
in	O	O:0.999866
,	O	O:0.999994
about	O	O:0.999890
a	O	O:0.999939
gig	O	O:0.997991
of	O	O:0.999902
CSVs	O	O:0.994201
is	O	O:0.999957
timing	O	O:0.999435
out	O	O:0.999727
for	O	O:0.999679
me	O	O:0.998697
(	O	O:0.999979
by	O	O:0.999970
my	O	O:0.999942
hand	O	O:0.999656
)	O	O:0.999976
at	O	O:0.999581
around	O	O:0.999227
20	O	O:0.999408
minutes	O	O:0.958913
.	O	O:0.999468
	
The	O	O:0.999939
key	O	O:0.997452
was	O	O:0.999899
unstacking	O	O:0.999454
the	O	O:0.999920
data	O	O:0.999205
first	O	O:0.996147
:	O	O:0.999989
#CODE	O	O:0.999620
	
I	O	O:0.999989
want	O	O:0.999916
to	O	O:0.999371
get	O	O:0.999971
the	O	O:0.999819
latitude	O	O:0.610893
and	O	O:0.999861
longitude	O	O:0.974461
coordinates	O	O:0.985618
for	O	O:0.999976
any	O	O:0.999929
one	O	O:0.999818
of	O	O:0.999960
the	O	O:0.999848
columns	O	O:0.998759
in	O	O:0.999982
the	O	O:0.999995
data	O	O:0.999871
frame	O	O:0.999834
below	O	O:0.999328
.	O	O:0.999902
	
Option	O	O:0.999678
values	O	O:0.998764
are	O	O:0.999831
restored	O	O:0.999909
automatically	O	O:0.999896
when	O	O:0.999581
you	O	O:0.999987
exit	O	O:0.999770
the	O	O:0.999855
`	O	O:0.999979
with	O	O:0.996763
`	O	O:0.999977
block	O	O:0.997509
.	O	O:0.999921
	
I	O	O:0.999982
am	O	O:0.999976
finding	O	O:0.999624
difficulty	O	O:0.998920
to	O	O:0.999982
plot	O	O:0.998256
reason	O	O:0.999897
every	O	O:0.999781
csv	O	O:0.999918
file	O	O:0.999400
starts	O	O:0.999815
with	O	O:0.999966
different	O	O:0.999872
date	O	O:0.999853
,	O	O:0.999993
that's	O	O:0.999966
the	O	O:0.999820
reason	O	O:0.996730
I	O	O:0.999958
was	O	O:0.999991
trying	O	O:0.999439
to	O	O:0.999555
convert	O	O:0.999835
into	O	O:0.999854
no	O	O:0.999981
.	O	O:0.999945
of	O	O:0.999993
days	O	O:0.999167
,	O	O:0.999995
so	O	O:0.999998
that	O	O:0.999915
I	O	O:0.999997
can	O	O:0.999983
plot	O	O:0.996738
all	O	O:0.999864
in	O	O:0.999971
one	O	O:0.999362
go	O	O:0.999874
with	O	O:0.999946
starting	O	O:0.999558
day	O	O:0.999925
-	O	O:0.999991
1	O	O:0.999838
,	O	O:0.999986
for	O	O:0.999931
example	O	O:0.984334
:	O	O:0.999981
-	O	O:0.999997
csv	O	O:0.999923
file	O	O:0.999797
2	O	O:0.999987
fall	O	O:0.997482
short	O	O:0.999808
as	O	O:0.999959
compared	O	O:0.999738
to	O	O:0.999975
csv	O	O:0.999992
file	O	O:0.999591
1	O	O:0.999857
.	O	O:0.999820
	
Most	O	O:0.999651
of	O	O:0.999939
the	O	O:0.999945
time	O	O:0.999975
you	O	O:0.999946
can	O	O:0.999942
get	O	O:0.999995
away	O	O:0.999967
with	O	O:0.999937
using	O	O:0.999632
something	O	O:0.998267
else	O	O:0.995692
...	O	O:0.997177
	
In	O	O:0.999979
that	O	O:0.999864
case	O	O:0.999068
the	O	O:0.999942
index	O	O:0.994554
is	O	O:0.999990
composed	O	O:0.999690
of	O	O:0.999986
integers	O	O:0.999898
from	O	O:0.999763
0	O	O:0.999932
to	O	O:0.999976
n	O	O:0.998391
:	O	O:0.999982
#CODE	O	O:0.999817
	
You	O	O:0.999960
have	O	O:0.999670
a	O	O:0.999989
difference	O	O:0.999107
between	O	O:0.997859
a	O	O:0.999986
mac	O	O:0.990258
and	O	O:0.999864
a	O	O:0.999915
pc	O	O:0.994047
,	O	O:0.999847
and	O	O:0.999847
*	O	O:0.999894
presumably	O	O:0.998064
*	O	O:0.999872
the	O	O:0.999927
same	O	O:0.999790
code	O	O:0.999378
.	O	O:0.999979
	
Suppose	O	O:0.999209
you	O	O:0.999911
want	O	O:0.999911
to	O	O:0.999959
find	O	O:0.999991
the	O	O:0.999974
row	O	O:0.999865
or	O	O:0.999997
rows	O	O:0.999803
where	O	O:0.999506
`	O	O:0.999995
beef	O	O:0.996536
`	O	O:0.999993
production	O	O:0.973429
was	O	O:0.999984
the	O	O:0.999768
highest	O	O:0.986801
.	O	O:0.999651
	
The	O	O:0.999904
number	O	O:0.999516
of	O	O:0.999776
columns	O	O:0.999463
may	O	O:0.999863
differ	O	O:0.994198
and	O	O:0.999731
so	O	O:0.999992
does	O	O:0.999588
the	O	O:0.999963
column	O	O:0.998995
names	O	O:0.998506
.	O	O:0.999891
	
How	O	O:0.999951
do	O	O:0.999818
I	O	O:0.999977
avoid	O	O:0.999852
that	O	O:0.992729
and	O	O:0.999803
rather	O	O:0.999610
generate	O	O:0.996930
it	O	O:0.999926
in	O	O:0.999987
a	O	O:0.999941
sparse	O	O:0.997581
matrix	O	O:0.973545
CSR	O	O:0.999377
format	O	O:0.998251
?	O	O:0.999921
	
I	O	O:0.999935
download	O	O:0.997522
and	O	O:0.999568
scrape	O	O:0.999247
a	O	O:0.999887
webpage	O	O:0.996606
for	O	O:0.999942
some	O	O:0.999835
data	O	O:0.999777
in	O	O:0.999953
TSV	O	O:0.999659
format	O	O:0.998485
.	O	O:0.999306
	
You	O	O:0.999858
can	O	O:0.999843
set	O	O:0.999815
parameter	O	O:0.999578
`	O	O:0.999950
labels=False	O	O:0.989258
`	O	O:0.999990
to	O	O:0.999817
get	O	O:0.999988
the	O	O:0.999843
integer	O	O:0.994876
representation	O	O:0.998823
#CODE	O	O:0.999454
	
it's	O	O:0.999282
not	O	O:0.999295
too	O	O:0.999991
much	O	O:0.999972
of	O	O:0.999986
a	O	O:0.999910
stretch	O	O:0.930368
to	O	O:0.999851
insert	O	O:0.983759
NaN's	O	O:0.999891
into	O	O:0.999675
the	O	O:0.999997
data	O	O:0.999057
using	O	O:0.999937
reindexing	O	O:0.999008
so	O	O:0.999959
that	O	O:0.999821
i	O	O:0.999967
get	O	O:0.999833
this	O	O:0.997625
:	O	O:0.999969
#CODE	O	O:0.999312
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
Data-driven	O	O:0.971359
DOM	O	O:0.999764
manipulation	O	O:0.997296
(	O	O:0.999989
maybe	O	O:0.999505
the	O	O:0.999869
hardest	O	O:0.999046
thing	O	O:0.999726
to	O	O:0.999974
wrap	O	O:0.999099
one's	O	O:0.999926
head	O	O:0.998862
around	O	O:0.998246
):	O	O:0.999997
your	O	O:0.999711
data	O	O:0.999968
gets	O	O:0.999427
transformed	O	O:0.999959
into	O	O:0.999274
DOM	O	O:0.999952
elements	O	O:0.994625
.	O	O:0.999541
	
Your	O	O:0.999267
regex	O	O:0.949443
is	O	O:0.999983
matching	O	O:0.997375
on	O	O:0.999942
all	O	O:0.997724
`	O	O:0.999961
-	O	O:0.999566
`	O	O:0.999969
characters	O	O:0.986424
:	O	O:0.999990
#CODE	O	O:0.999631
	
1	O	O:0.999805
)	O	O:0.999706
create	O	O:0.999295
additional	O	O:0.999523
columns	O	O:0.999876
with	O	O:0.999662
clock	O	O:0.999764
time	O	O:0.999980
headings	O	O:0.999927
for	O	O:0.999912
5	O	O:0.999747
minute	O	O:0.998017
intervals	O	O:0.999243
between	O	O:0.991186
9:30	O	O:0.988173
and	O	O:0.999439
4:00	O	O:0.949835
pm	O	O:0.997710
,	O	O:0.999984
so	O	O:0.999992
the	O	O:0.999987
headings	O	O:0.999811
of	O	O:0.999985
the	O	O:0.999989
data	O	O:0.999879
frame	O	O:0.999838
look	O	O:0.999420
like	O	O:0.999188
:	O	O:0.999930
	
`	O	O:0.999133
Index	O	B-API:0.844972
([	O	O:0.999955
u'id	O	O:0.994892
opinion	O	O:0.999362
']	O	O:0.999821
,	O	O:0.999829
dtype=	O	O:0.975536
'	O	O:0.999514
object	O	O:0.995657
')`	O	O:0.999826
Thanks	O	O:0.999487
for	O	O:0.999939
the	O	O:0.999733
response	O	O:0.985626
	
The	O	O:0.999795
end	O	O:0.997030
product	O	O:0.994819
would	O	O:0.999808
be	O	O:0.999967
ten	O	O:0.999904
timeseries	O	O:0.999183
plots	O	O:0.999471
with	O	O:0.999808
charted	O	O:0.998675
lines	O	O:0.999500
over	O	O:0.999983
time	O	O:0.999831
for	O	O:0.999986
each	O	O:0.997066
TID	O	O:0.999654
.	O	O:0.999496
	
And	O	O:0.999756
get	O	O:0.999561
the	O	O:0.999061
result	O	O:0.977101
:	O	O:0.999962
#CODE	O	O:0.999765
	
However	O	O:0.999639
,	O	O:0.999943
I	O	O:0.999992
still	O	O:0.999049
don't	O	O:0.999479
get	O	O:0.999778
why	O	O:0.999352
`	O	O:0.999896
iconv	O	O:0.787098
`	O	O:0.999972
messes	O	O:0.988202
it	O	O:0.999981
up	O	O:0.999620
.	O	O:0.999632
	
If	O	O:0.999926
you	O	O:0.999852
have	O	O:0.999906
huge	O	O:0.999791
CSV	O	O:0.999983
data	O	O:0.999689
,	O	O:0.999977
NYSOL's	O	O:0.999949
mcmd	O	O:0.990564
is	O	O:0.999970
the	O	O:0.999881
best	O	O:0.996352
.	O	O:0.999780
	
I	O	O:0.999877
get	O	O:0.999310
#CODE	O	O:0.996730
	
If	O	O:0.999952
I	O	O:0.999989
use	O	O:0.999956
a	O	O:0.999509
tweaked	O	O:0.997618
version	O	O:0.998047
of	O	O:0.999870
@USER	O	O:0.999391
'	O	O:0.999960
s	O	O:0.999871
suggestion	O	O:0.999690
below	O	O:0.999842
,	O	O:0.999979
I	O	O:0.999916
get	O	O:0.999924
this	O	O:0.999077
error	O	O:0.997478
:	O	O:0.999925
#CODE	O	O:0.999179
	
ValueError	O	O:0.996622
:	O	O:0.999933
Unknown	O	O:0.974219
format	O	O:0.999908
code	O	O:0.999754
'	O	O:0.999978
f	O	O:0.998661
'	O	O:0.999882
for	O	O:0.999852
object	O	O:0.998616
of	O	O:0.999952
type	O	O:0.998552
'	O	O:0.999977
str	O	O:0.992833
'	O	O:0.999874
-	O	O:0.999992
why	O	O:0.999963
do	O	O:0.999923
I	O	O:0.999989
get	O	O:0.999962
this	O	O:0.999247
the	O	O:0.999478
second	O	O:0.997896
time	O	O:0.999572
but	O	O:0.999931
not	O	O:0.999889
the	O	O:0.999810
first	O	O:0.999583
time	O	O:0.999820
?	O	O:0.999976
	
Any	O	O:0.999778
suggestion	O	O:0.999734
about	O	O:0.999725
the	O	O:0.999178
reason	O	O:0.988675
?	O	O:0.999964
	
I	O	O:0.999992
have	O	O:0.999916
a	O	O:0.999986
data	O	O:0.999796
set	O	O:0.997878
which	O	O:0.999756
has	O	O:0.999960
multiple	O	O:0.998839
columns	O	O:0.998599
,	O	O:0.999982
strings	O	O:0.997244
and	O	O:0.999618
integers	O	O:0.998747
	
is	O	O:0.999944
the	O	O:0.999570
condition	O	O:0.991592
,	O	O:0.999997
returning	O	O:0.999946
a	O	O:0.999940
booleans	O	O:0.999783
array	O	O:0.999676
of	O	O:0.999810
True	O	O:0.978866
/	O	O:0.999920
False	O	O:0.992618
for	O	O:0.999944
all	O	O:0.999154
values	O	O:0.997800
meeting	O	O:0.996086
the	O	O:0.999681
condition	O	O:0.981795
or	O	O:0.999963
not	O	O:0.999277
,	O	O:0.999990
and	O	O:0.999979
then	O	O:0.999406
the	O	O:0.999986
corresponding	O	O:0.997347
A	O	O:0.999909
values	O	O:0.999630
are	O	O:0.999806
selected	O	O:0.999244
	
I	O	O:0.999836
fixed	O	O:0.999932
this	O	O:0.998760
bug	O	O:0.999758
in	O	O:0.999730
0.11-dev	O	O:0.995729
in	O	O:0.999937
any	O	O:0.999780
event	O	O:0.994639
,	O	O:0.999943
see	O	O:0.999955
here	O	O:0.998132
:	O	O:0.999985
#URL	O	O:0.999886
thanks	O	O:0.999344
!	O	O:0.999925
	
To	O	O:0.999983
split	O	O:0.890111
`	O	O:0.999976
my_data2	O	O:0.674532
`	O	O:0.999990
into	O	O:0.998259
two	O	O:0.999991
arrays	O	O:0.999829
of	O	O:0.999905
roughly	O	O:0.995778
equal	O	O:0.999401
size	O	O:0.998186
:	O	O:0.999968
#CODE	O	O:0.999653
	
to	O	O:0.999921
get	O	O:0.999983
a	O	O:0.999948
`	O	O:0.999928
Series	O	O:0.901286
`	O	O:0.999994
of	O	O:0.997338
`	O	O:0.999993
list	O	O:0.982808
`	O	O:0.999998
s	O	O:0.999630
of	O	O:0.999974
strings	O	O:0.995408
.	O	O:0.999785
	
For	O	O:0.999882
example	O	O:0.997938
,	O	O:0.999991
you	O	O:0.999917
can't	O	O:0.999888
sum	O	O:0.999824
a	O	O:0.999991
mix	O	O:0.989510
of	O	O:0.999824
strings	O	O:0.990166
and	O	O:0.999715
floats	O	O:0.998574
in	O	O:0.998257
pandas	O	O:0.987570
but	O	O:0.999837
Excel	O	O:0.995937
would	O	O:0.999530
silently	O	O:0.999952
drop	O	O:0.995024
the	O	O:0.999890
string	O	O:0.997347
value	O	O:0.998266
and	O	O:0.999946
sum	O	O:0.998875
the	O	O:0.999336
floats	O	O:0.995119
.	O	O:0.999367
	
Notice	O	O:0.999464
how	O	O:0.999882
the	O	O:0.999932
values	O	O:0.996737
in	O	O:0.999955
the	O	O:0.999925
second	O	O:0.999550
column	O	O:0.999525
are	O	O:0.999973
no	O	O:0.999764
longer	O	O:0.999722
integers	O	O:0.999625
,	O	O:0.999955
as	O	O:0.999987
they	O	O:0.999582
were	O	O:0.999622
originally	O	O:0.998622
.	O	O:0.999633
	
I	O	O:0.999990
have	O	O:0.999894
a	O	O:0.999764
large	O	O:0.995657
but	O	O:0.999873
very	O	O:0.998518
sparse	O	O:0.994392
matrix	O	O:0.922908
(	O	O:0.999964
50,000	O	O:0.997762
rows*	O	O:0.999099
100,000	O	O:0.996619
columns	O	O:0.998964
,	O	O:0.999999
only	O	O:0.999941
10%	O	O:0.999859
of	O	O:0.999974
the	O	O:0.999855
values	O	O:0.998377
are	O	O:0.999928
known	O	O:0.998842
)	O	O:0.999846
.	O	O:0.997892
	
In	O	O:0.999852
python	O	O:0.999305
normally	O	O:0.999222
you	O	O:0.999468
don't	O	O:0.999881
need	O	O:0.998653
and	O	O:0.999928
you	O	O:0.999940
shouldn't	O	O:0.999807
use	O	O:0.999974
a	O	O:0.999967
semicolon	O	O:0.997857
at	O	O:0.999975
the	O	O:0.999933
end	O	O:0.997558
of	O	O:0.999918
the	O	O:0.999896
line	O	O:0.999024
.	O	O:0.999734
	
That's	O	O:0.999594
all	O	O:0.999857
data	O	O:0.999877
python	O	O:0.988915
is	O	O:0.999987
reading	O	O:0.993977
in	O	O:0.999901
,	O	O:0.999992
apparently	O	O:0.998332
:	O	O:0.999979
the	O	O:0.999911
16	O	O:0.999878
first	O	O:0.999506
lines	O	O:0.999457
,	O	O:0.999995
or	O	O:0.999979
at	O	O:0.999943
least	O	O:0.999419
I	O	O:0.999983
am	O	O:0.999934
not	O	O:0.999857
able	O	O:0.999965
to	O	O:0.999982
get	O	O:0.999971
the	O	O:0.999992
rest	O	O:0.999562
of	O	O:0.999995
data	O	O:0.999634
in	O	O:0.999939
.	O	O:0.999677
	
The	O	O:0.999931
problem	O	O:0.996242
is	O	O:0.999970
to	O	O:0.999940
find	O	O:0.999950
average	O	O:0.999935
values	O	O:0.998837
of	O	O:0.999886
temp1	O	O:0.979763
,	O	O:0.999964
temp2	O	O:0.989054
and	O	O:0.999705
temp3	O	O:0.999334
for	O	O:0.999819
a	O	O:0.999957
period	O	O:0.993088
of	O	O:0.999958
time	O	O:0.997963
(	O	O:0.999994
say	O	O:0.999951
,	O	O:0.999976
2	O	O:0.999997
days	O	O:0.999701
)	O	O:0.999987
over	O	O:0.999600
the	O	O:0.999975
same	O	O:0.998727
intervals	O	O:0.999659
(	O	O:0.999994
for	O	O:0.999985
that	O	O:0.999603
example	O	O:0.999314
-	O	O:0.999990
15	O	O:0.999933
minutes	O	O:0.993104
)	O	O:0.999725
.	O	O:0.998786
	
In	O	O:0.999980
generally	O	O:0.999078
I	O	O:0.999955
wonder	O	O:0.999784
if	O	O:0.999416
pandas	O	O:0.991052
should	O	O:0.999652
not	O	O:0.999793
at	O	O:0.999986
least	O	O:0.999542
throw	O	O:0.999779
a	O	O:0.999853
warning	O	O:0.997432
,	O	O:0.999879
afterall	O	O:0.999683
broadcasting	O	O:0.999520
the	O	O:0.999377
result	O	O:0.997818
to	O	O:0.999989
both	O	O:0.999964
columns	O	O:0.999567
should	O	O:0.999798
be	O	O:0.999982
almost	O	O:0.999433
never	O	O:0.999608
what	O	O:0.990545
is	O	O:0.999866
wanted	O	O:0.996531
.	O	O:0.999127
	
I	O	O:0.999942
get	O	O:0.999857
pandas	O	O:0.997542
error	O	O:0.999959
when	O	O:0.996064
I	O	O:0.999998
try	O	O:0.999952
to	O	O:0.999798
read	O	O:0.999560
HDF5	O	O:0.999536
format	O	O:0.999749
files	O	O:0.999930
that	O	O:0.999399
I	O	O:0.999999
have	O	O:0.999584
created	O	O:0.998712
with	O	O:0.999872
h5py	O	O:0.997584
.	O	O:0.999688
	
Additionally	O	O:0.999888
you	O	O:0.999893
can	O	O:0.999679
use	O	O:0.999944
numpys	O	O:0.989350
matrix	O	O:0.946819
#CODE	O	O:0.999023
	
I	O	O:0.999885
updated	O	O:0.999719
pandas	O	O:0.970933
'	O	O:0.999980
sudo	O	O:0.984294
pip	O	O:0.989202
install	O	O:0.992860
--	O	O:0.999957
upgrade	O	O:0.954653
pandas	O	O:0.996668
'	O	O:0.999903
,	O	O:0.999843
between	O	O:0.999798
both	O	O:0.999704
of	O	O:0.999986
these	O	O:0.998933
fixes	O	O:0.998644
,	O	O:0.999982
everything	O	O:0.995406
worked	O	O:0.994858
.	O	O:0.999515
	
Sorry	O	O:0.999068
can't	O	O:0.999501
reproduce	O	O:0.999669
nor	O	O:0.999243
understand	O	O:0.999709
your	O	O:0.999840
real	O	O:0.995493
problem	O	O:0.999349
,	O	O:0.999983
please	O	O:0.999642
post	O	O:0.990486
what	O	O:0.999910
you	O	O:0.999945
see	O	O:0.999953
in	O	O:0.999996
your	O	O:0.999460
question	O	O:0.998989
	
When	O	O:0.995977
I	O	O:0.999994
used	O	O:0.999740
'	O	O:0.999318
ethnicity	O	O:0.998981
'	O	O:0.999936
or	O	O:0.999913
'	O	O:0.999919
veteran	O	O:0.998942
'	O	O:0.999990
as	O	O:0.999991
a	O	O:0.999987
value	O	O:0.999849
my	O	O:0.999601
results	O	O:0.999520
came	O	O:0.999181
out	O	O:0.999979
really	O	O:0.998224
strange	O	O:0.994452
and	O	O:0.999677
didn't	O	O:0.999710
match	O	O:0.991393
my	O	O:0.999906
value	O	O:0.999608
counts	O	O:0.997118
numbers	O	O:0.995900
.	O	O:0.999645
	
`	O	O:0.999889
post_start	O	O:0.945703
`	O	O:0.999967
is	O	O:0.999985
the	O	O:0.999989
date	O	O:0.999959
that	O	O:0.999904
the	O	O:0.999997
employee	O	O:0.999533
started	O	O:0.999200
in	O	O:0.999943
the	O	O:0.999978
post	O	O:0.903489
,	O	O:0.999976
and	O	O:0.999925
`	O	O:0.999969
change_date	O	O:0.962796
`	O	O:0.999956
is	O	O:0.999988
the	O	O:0.999989
date	O	O:0.999959
that	O	O:0.999814
the	O	O:0.999997
post	O	O:0.992650
title	O	O:0.999644
was	O	O:0.999911
changed	O	O:0.998374
.	O	O:0.999396
	
How	O	O:0.999961
do	O	O:0.999817
I	O	O:0.999995
replace	O	O:0.997196
the	O	O:0.999892
ints	O	O:0.999763
with	O	O:0.999936
the	O	O:0.999947
float	O	O:0.996450
values	O	O:0.999937
from	O	O:0.999860
another	O	O:0.999678
column	O	O:0.998794
(	O	O:0.999982
by	O	O:0.999995
same	O	O:0.999884
row	O	O:0.999764
)	O	O:0.999847
,	O	O:0.999968
but	O	O:0.999977
leave	O	O:0.997895
all	O	O:0.998973
the	O	O:0.999848
nulls	O	O:0.986058
?	O	O:0.999968
	
There	O	O:0.999684
may	O	O:0.999897
be	O	O:0.999963
a	O	O:0.999994
more	O	O:0.996771
foolproof	O	O:0.999743
,	O	O:0.999956
cleaner	O	O:0.999866
way	O	O:0.999920
of	O	O:0.999977
computing	O	O:0.999723
date	O	O:0.999970
time	O	O:0.999957
differences	O	O:0.999486
in	O	O:0.999884
pandas	O	O:0.995596
.	O	O:0.999764
	
However	O	O:0.999694
,	O	O:0.999982
to	O	O:0.999969
get	O	O:0.999980
the	O	O:0.999948
row	O	O:0.999768
sum	O	O:0.998334
,	O	O:0.999995
one	O	O:0.999976
needs	O	O:0.999474
to	O	O:0.999983
specify	O	O:0.999848
axis=1	O	O:0.996807
.	O	O:0.999322
	
Using	O	O:0.998686
the	O	O:0.982116
second	O	O:0.997540
method	O	O:0.999113
I	O	O:0.999992
get	O	O:0.999892
the	O	O:0.999712
following	O	O:0.997994
error	O	O:0.991637
:	O	O:0.999972
#CODE	O	O:0.999655
	
Filter	O	O:0.999752
data	O	O:0.999755
to	O	O:0.999958
get	O	O:0.999995
only	O	O:0.999957
first	O	O:0.999977
day	O	O:0.999987
of	O	O:0.999952
the	O	O:0.999888
month	O	O:0.999810
rows	O	O:0.996911
	
(	O	O:0.999860
FYI	O	O:0.999957
if	O	O:0.999897
i	O	O:0.999962
insert	O	O:0.982474
a	O	O:0.999971
print	O	O:0.954940
print	O	O:0.944197
(	O	O:0.999997
vals	O	O:0.991462
)	O	O:0.999967
in	O	O:0.999832
the	O	O:0.999984
middle	O	O:0.978223
of	O	O:0.999963
that	O	O:0.999628
loop	O	O:0.999748
,	O	O:0.999975
it	O	O:0.999767
prints	O	O:0.997711
#CODE	O	O:0.999513
	
For	O	O:0.999953
days	O	O:0.999468
in	O	O:0.999975
a	O	O:0.999967
month	O	O:0.991907
(	O	O:0.999888
'	O	O:0.999786
2015-07	O	O:0.998242
'	O	O:0.999974
say	O	O:0.999882
)	O	O:0.999906
You	O	O:0.999710
could	O	O:0.998723
change	O	O:0.994249
#CODE	O	O:0.995395
	
Doesnt	O	O:0.999580
the	O	O:0.999846
frame	O	O:0.999825
variable	O	O:0.999183
get	O	O:0.999881
overwritten	O	O:0.999429
during	O	O:0.999814
each	O	O:0.998174
iteration	O	O:0.999778
in	O	O:0.999962
the	O	O:0.999898
loop	O	O:0.996765
?	O	O:0.999968
	
Any	O	O:0.999736
other	O	O:0.999892
advice	O	O:0.999668
I	O	O:0.999995
can	O	O:0.999897
leverage	O	O:0.999300
in	O	O:0.999937
the	O	O:0.999811
meantime	O	O:0.998280
?	O	O:0.999946
	
If	O	O:0.999666
`	O	O:0.999852
Change	O	O:0.997863
Closing	O	O:0.999154
Date	O	O:0.973107
`	O	O:0.999824
is	O	O:0.999881
True	O	O:0.998892
,	O	O:0.999981
I	O	O:0.999913
would	O	O:0.999940
like	O	O:0.999487
to	O	O:0.999987
add	O	O:0.999793
`	O	O:0.999945
Closing	O	O:0.996686
Date2	O	O:0.975775
`	O	O:0.999889
column	O	O:0.999195
into	O	O:0.999987
my	O	O:0.999985
new	O	O:0.998701
column	O	O:0.999335
with	O	O:0.999929
adding	O	O:0.998475
1	O	O:0.999854
year	O	O:0.998429
.	O	O:0.999775
	
If	O	O:0.999943
you	O	O:0.999391
REALLY	O	O:0.999847
want	O	O:0.999797
to	O	O:0.999879
get	O	O:0.999995
by	O	O:0.999969
a	O	O:0.999950
group	O	O:0.987814
individually	O	O:0.998905
#CODE	O	O:0.997442
	
but	O	O:0.999556
I	O	O:0.999982
get	O	O:0.999636
the	O	O:0.999355
error	O	O:0.988166
:	O	O:0.999953
#CODE	O	O:0.999651
	
I	O	O:0.999977
am	O	O:0.999981
new	O	O:0.998157
to	O	O:0.999968
pandas	O	O:0.999802
for	O	O:0.999989
data	O	O:0.999033
analysis	O	O:0.999681
and	O	O:0.999566
I	O	O:0.999971
just	O	O:0.998230
installed	O	O:0.999229
pandas	O	O:0.998063
with	O	O:0.999846
required	O	O:0.999382
dependencies	O	O:0.995150
(	O	O:0.999988
NumPy	O	O:0.999455
,	O	O:0.999956
python-dateutil	O	O:0.996667
,	O	O:0.999992
pytz	O	O:0.999006
,	O	O:0.999976
numexpr	O	O:0.997443
,	O	O:0.999940
bottleneck	O	O:0.998758
and	O	O:0.999915
matplotlib	O	O:0.996794
)	O	O:0.998881
.	O	O:0.997481
	
What	O	O:0.999631
do	O	O:0.999957
you	O	O:0.999955
get	O	O:0.999866
if	O	O:0.999985
you	O	O:0.999885
print	O	O:0.997243
that	O	O:0.999706
?	O	O:0.999980
	
Can't	O	O:0.999599
you	O	O:0.999344
use	O	O:0.999931
sets	O	O:0.993590
and	O	O:0.999456
intersections	O	O:0.988643
?	O	O:0.999774
	
is	O	O:0.999983
there	O	O:0.999574
a	O	O:0.999982
way	O	O:0.998196
to	O	O:0.999747
insert	O	O:0.992750
`	O	O:0.999988
s	O	O:0.996933
`	O	O:0.999998
into	O	O:0.998164
`	O	O:0.999999
df	O	O:0.935901
`	O	O:0.999977
without	O	O:0.998871
creating	O	O:0.999477
a	O	O:0.999946
reindexed	O	O:0.999966
copy	O	O:0.984460
of	O	O:0.999967
`	O	O:0.999971
df	O	O:0.989778
`	O	O:0.999984
first	O	O:0.994738
?	O	O:0.999988
	
I'm	O	O:0.999864
using	O	O:0.999370
python	O	O:0.952629
2.7.5	O	O:0.971410
(	O	O:0.999978
with	O	O:0.999678
all	O	O:0.999779
the	O	O:0.999984
packages	O	O:0.992279
in	O	O:0.999987
the	O	O:0.999954
python	O	O:0.990778
(	O	O:0.999988
x	O	O:0.999597
,	O	O:0.999999
y	O	O:0.999794
)	O	O:0.999868
bundle	O	O:0.718978
)	O	O:0.999834
,	O	O:0.999238
and	O	O:0.999968
running	O	O:0.999326
files	O	O:0.998210
from	O	O:0.999848
the	O	O:0.999414
command	O	O:0.998585
prompt	O	O:0.998049
.	O	O:0.999798
	
Any	O	O:0.999597
suggestions	O	O:0.998628
??	O	O:0.999809
	
This	O	O:0.999858
will	O	O:0.999377
never	O	O:0.999749
get	O	O:0.999798
the	O	O:0.999959
similar	O	O:0.999846
graph	O	O:0.999782
as	O	O:0.999975
the	O	O:0.999917
kernel	O	O:0.997396
estimate	O	O:0.999792
base	O	O:0.999853
of	O	O:0.999989
the	O	O:0.999860
original	O	O:0.999581
data	O	O:0.999784
,	O	O:0.999974
result	O	O:0.998942
:	O	O:0.999915
	
The	O	O:0.999714
working	O	O:0.999334
version	O	O:0.989671
I	O	O:0.999998
have	O	O:0.998127
is	O	O:0.999982
this	O	O:0.999747
one	O	O:0.998886
,	O	O:0.999979
but	O	O:0.999672
I	O	O:0.999988
feel	O	O:0.999709
there	O	O:0.994411
is	O	O:0.999979
potential	O	O:0.962109
for	O	O:0.999840
improvement	O	O:0.999069
,	O	O:0.999983
as	O	O:0.999933
I	O	O:0.999982
find	O	O:0.999926
my	O	O:0.998785
solution	O	O:0.999789
unreadable	O	O:0.999598
and	O	O:0.999855
I	O	O:0.999989
am	O	O:0.999903
unsure	O	O:0.994546
about	O	O:0.999099
how	O	O:0.999005
it	O	O:0.999668
would	O	O:0.999854
generalize	O	O:0.999637
to	O	O:0.999967
multiindexes	O	O:0.999627
#CODE	O	O:0.999481
	
Also	O	O:0.998858
,	O	O:0.999997
once	O	O:0.999853
you	O	O:0.999915
get	O	O:0.999949
to	O	O:0.999962
15	O	O:0.999984
points	O	O:0.996538
,	O	O:0.999991
you'll	O	O:0.999685
be	O	O:0.999991
able	O	O:0.999845
to	O	O:0.999951
upvote	O	O:0.999887
as	O	O:0.999952
well	O	O:0.996110
.	O	O:0.999752
	
You	O	O:0.999893
can	O	O:0.999935
then	O	O:0.999878
get	O	O:0.999962
the	O	O:0.999976
last	O	O:0.999318
first	O	O:0.999841
value	O	O:0.999920
by	O	O:0.999956
forward	O	O:0.999708
filling	O	O:0.998023
`	O	O:0.999915
first_values	O	O:0.946621
`	O	O:0.999955
,	O	O:0.999935
reindexing	O	O:0.999988
like	O	O:0.998013
`	O	O:0.999988
second_values	O	O:0.916400
`	O	O:0.999955
,	O	O:0.999960
stacking	O	O:0.999901
again	O	O:0.991891
and	O	O:0.999780
indexing	O	O:0.999764
into	O	O:0.999275
the	O	O:0.999949
result	O	O:0.996553
using	O	O:0.999600
the	O	O:0.999646
original	O	O:0.970850
`'	O	O:0.999954
time	O	O:0.999310
'	O	O:0.999981
,	O	O:0.999965
'	O	O:0.999896
second	O	O:0.998368
'`	O	O:0.999897
pairs	O	O:0.842090
:	O	O:0.999984
#CODE	O	O:0.999637
	
how	O	O:0.999681
do	O	O:0.999938
i	O	O:0.999993
avoid	O	O:0.999827
creating	O	O:0.999237
so	O	O:0.999992
many	O	O:0.999911
variables	O	O:0.999896
as	O	O:0.999969
I	O	O:0.999990
add	O	O:0.999968
columns	O	O:0.994172
together	O	O:0.999821
?	O	O:0.999966
	
Any	O	O:0.999777
suggestion	O	O:0.999531
on	O	O:0.999949
how	O	O:0.999902
to	O	O:0.999995
efficiently	O	O:0.999870
achieve	O	O:0.999842
this	O	O:0.999600
?	O	O:0.999963
	
I	O	O:0.999885
get	O	O:0.997405
:	O	O:0.999847
#CODE	O	O:0.999437
	
For	O	O:0.999784
instance	O	O:0.999743
,	O	O:0.999994
I	O	O:0.999998
can	O	O:0.999828
compute	O	O:0.999562
the	O	O:0.999992
value	O	O:0.999542
for	O	O:0.999982
data	O	O:0.999748
record	O	O:0.999355
3	O	O:0.999956
by	O	O:0.999976
taking	O	O:0.999701
`	O	O:0.999604
len	O	B-API:0.989924
(	O	O:0.999988
set	O	O:0.988985
([	O	O:0.999958
4	O	O:0.999544
,	O	O:0.999984
4	O	O:0.999935
,	O	O:0.999946
6	O	O:0.999899
,	O	O:0.999925
12	O	O:0.999883
]))`	O	O:0.986679
which	O	O:0.999430
gives	O	O:0.998801
3	O	O:0.999822
.	O	O:0.999679
	
@USER	O	O:0.999519
That's	O	O:0.999859
a	O	O:0.999972
great	O	O:0.996221
suggestion	O	O:0.998894
(	O	O:0.999975
for	O	O:0.999977
some	O	O:0.999493
use-cases	O	O:0.999214
)	O	O:0.999899
it	O	O:0.999444
should	O	O:0.999865
be	O	O:0.999977
its	O	O:0.999893
own	O	O:0.999558
answer	O	O:0.999475
(	O	O:0.999988
so	O	O:0.999974
I	O	O:0.999996
can	O	O:0.999873
upvote	O	O:0.999712
it	O	O:0.999904
)	O	O:0.999848
Though	O	O:0.998965
it	O	O:0.999992
does	O	O:0.999715
need	O	O:0.999843
tweak	O	O:0.999658
to	O	O:0.999992
multiply	O	O:0.996238
by	O	O:0.999848
100	O	O:0.998014
.	O	O:0.999516
	
python	O	O:0.995272
how	O	O:0.999909
to	O	O:0.999979
sum	O	O:0.999835
together	O	O:0.999958
all	O	O:0.999569
values	O	O:0.997746
within	O	O:0.998279
a	O	O:0.999952
time	O	O:0.999513
interval	O	O:0.999093
in	O	O:0.999902
datetime64	O	O:0.987144
?	O	O:0.999896
	
was	O	O:0.999814
trying	O	O:0.999658
to	O	O:0.999952
do	O	O:0.999990
a	O	O:0.999987
"	O	O:0.999789
for	O	O:0.999757
i	O	O:0.999952
in	O	O:0.999805
range	O	O:0.997996
(	O	O:0.999867
len	O	B-API:0.944693
(	O	O:0.999949
results	O	O:0.993782
))"	O	O:0.999669
before	O	O:0.998766
the	O	O:0.999910
"	O	O:0.999114
for	O	O:0.999930
item	O	O:0.999803
in	O	O:0.999684
results	O	O:0.997828
[	O	O:0.999989
i	O	O:0.999979
]"	O	O:0.999977
that	O	O:0.998578
you	O	O:0.999829
did	O	O:0.999448
but	O	O:0.999829
not	O	O:0.999342
working	O	O:0.999047
for	O	O:0.999423
me	O	O:0.999862
...	O	O:0.990635
	
But	O	O:0.999793
,	O	O:0.999963
on	O	O:0.999971
the	O	O:0.999798
other	O	O:0.999781
hand	O	O:0.999697
,	O	O:0.999996
if	O	O:0.999998
your	O	O:0.999795
columns	O	O:0.998391
aren't	O	O:0.999921
in	O	O:0.999944
the	O	O:0.999977
same	O	O:0.999424
order	O	O:0.999801
,	O	O:0.999999
then	O	O:0.999956
my	O	O:0.999941
suggestion	O	O:0.999118
won't	O	O:0.999817
work	O	O:0.992389
.	O	O:0.999783
	
When	O	O:0.998932
I	O	O:0.999994
execute	O	O:0.999898
the	O	O:0.999901
program	O	O:0.998117
for	O	O:0.999982
the	O	O:0.999996
data	O	O:0.999809
of	O	O:0.999966
the	O	O:0.999986
same	O	O:0.999933
day	O	O:0.999925
,	O	O:0.999997
processor	O	O:0.999959
time	O	O:0.999841
becomes	O	O:0.999916
long	O	O:0.999966
from	O	O:0.999600
the	O	O:0.999957
same	O	O:0.999842
point	O	O:0.998935
.	O	O:0.999959
	
I'm	O	O:0.999765
new	O	O:0.999565
to	O	O:0.999887
pandas	O	O:0.999581
,	O	O:0.999977
python	O	O:0.992967
,	O	O:0.999939
and	O	O:0.999856
scripting	O	O:0.998951
in	O	O:0.999452
general	O	O:0.996280
,	O	O:0.999991
so	O	O:0.999985
am	O	O:0.999977
still	O	O:0.999476
getting	O	O:0.999891
my	O	O:0.999909
head	O	O:0.999153
around	O	O:0.999637
the	O	O:0.999645
basics	O	O:0.987843
.	O	O:0.999622
	
You	O	O:0.999793
can	O	O:0.999489
,	O	O:0.999994
for	O	O:0.999977
example	O	O:0.998055
,	O	O:0.999964
use	O	O:0.999866
interpolation	O	O:0.998627
to	O	O:0.999931
get	O	O:0.999948
equally	O	O:0.999084
spaced	O	O:0.999605
datapoints	O	O:0.999931
out	O	O:0.999914
off	O	O:0.999967
your	O	O:0.999320
timeseries	O	O:0.996258
.	O	O:0.999760
	
What	O	O:0.998703
I	O	O:0.999913
was	O	O:0.999945
hoping	O	O:0.996199
for	O	O:0.999665
was	O	O:0.999823
to	O	O:0.999890
add	O	O:0.999992
up	O	O:0.999974
all	O	O:0.999695
of	O	O:0.999991
the	O	O:0.999798
frequencies	O	O:0.975349
across	O	O:0.999367
the	O	O:0.999912
websites	O	O:0.996378
and	O	O:0.999952
to	O	O:0.999970
create	O	O:0.999912
two	O	O:0.999861
columns	O	O:0.999468
:	O	O:0.999998
Column	O	O:0.999917
A	O	O:0.999973
with	O	O:0.999848
the	O	O:0.999531
word	O	O:0.994896
,	O	O:0.999964
and	O	O:0.999985
Column	O	O:0.999544
B	O	O:0.999883
with	O	O:0.999974
all	O	O:0.999265
of	O	O:0.999990
the	O	O:0.999643
frequencies	O	O:0.992785
added	O	O:0.999263
together	O	O:0.999682
.	O	O:0.999657
	
It	O	O:0.999969
does	O	O:0.998644
not	O	O:0.999673
work	O	O:0.998424
without	O	O:0.998862
dropping	O	O:0.978120
index	O	O:0.986305
.	O	O:0.999596
	
Now	O	O:0.999737
I	O	O:0.999941
was	O	O:0.999914
wondering	O	O:0.999174
how	O	O:0.999446
I	O	O:0.999993
could	O	O:0.999864
subtract	O	O:0.999855
my	O	O:0.999903
multi-year	O	O:0.999937
timeseries	O	O:0.998807
from	O	O:0.999917
this	O	O:0.999757
standard	O	O:0.999942
year	O	O:0.999482
,	O	O:0.999990
in	O	O:0.999968
order	O	O:0.999836
to	O	O:0.999980
get	O	O:0.999987
a	O	O:0.999985
timeseries	O	O:0.999509
that	O	O:0.999863
show	O	O:0.999032
which	O	O:0.999857
days	O	O:0.999817
were	O	O:0.999825
below	O	O:0.999797
or	O	O:0.999982
above	O	O:0.998121
it's	O	O:0.999613
standard	O	O:0.994125
.	O	O:0.999709
	
I	O	O:0.999958
may	O	O:0.999728
try	O	O:0.999494
installing	O	O:0.999546
an	O	O:0.999818
older	O	O:0.999868
version	O	O:0.999329
to	O	O:0.999965
find	O	O:0.999848
out	O	O:0.999967
what	O	O:0.999151
was	O	O:0.999970
actually	O	O:0.999763
getting	O	O:0.997377
calculated	O	O:0.993077
.	O	O:0.999776
	
Is	O	O:0.999985
there	O	O:0.999682
any	O	O:0.999735
disadvantage	O	O:0.996983
?	O	O:0.999802
	
The	O	O:0.999929
length	O	O:0.998092
of	O	O:0.999899
the	O	O:0.999643
frame	O	O:0.999570
is	O	O:0.999995
over	O	O:0.999770
2	O	O:0.999964
million	O	O:0.999212
rows	O	O:0.997298
and	O	O:0.999949
looping	O	O:0.999294
to	O	O:0.999638
extract	O	O:0.999693
the	O	O:0.999979
elements	O	O:0.998690
I	O	O:0.999998
need	O	O:0.999838
is	O	O:0.999977
a	O	O:0.999991
poor	O	O:0.994072
choice	O	O:0.996757
.	O	O:0.999457
	
edit	O	O:0.967964
I	O	O:0.999990
believe	O	O:0.999466
'	O	O:0.999848
endog	O	O:0.983682
'	O	O:0.999965
as	O	O:0.999962
defined	O	O:0.996521
is	O	O:0.999915
incorrect-I	O	O:0.998205
should	O	O:0.999850
be	O	O:0.999963
passing	O	O:0.998922
the	O	O:0.999706
values	O	O:0.997838
for	O	O:0.999899
which	O	O:0.999269
I	O	O:0.999994
want	O	O:0.999921
to	O	O:0.999616
predict	O	O:0.985021
;	O	O:0.999996
therefore	O	O:0.999251
I've	O	O:0.999890
created	O	O:0.999848
a	O	O:0.999996
date	O	O:0.999953
range	O	O:0.999825
of	O	O:0.999946
12	O	O:0.999405
periods	O	O:0.998910
past	O	O:0.998690
the	O	O:0.999980
last	O	O:0.998821
recorded	O	O:0.999860
value	O	O:0.998918
.	O	O:0.999863
	
@USER	O	O:0.999217
It	O	O:0.999917
should	O	O:0.999812
be	O	O:0.999988
a	O	O:0.999990
little	O	O:0.991273
quicker	O	O:0.999817
with	O	O:0.999362
a	O	O:0.999541
boolean	O	O:0.984174
index	O	O:0.999157
like	O	O:0.999815
that	O	O:0.995887
,	O	O:0.999958
but	O	O:0.999815
it	O	O:0.999988
does	O	O:0.999758
do	O	O:0.999991
a	O	O:0.999996
cast	O	O:0.979791
(	O	O:0.999997
timedelta	O	O:0.990375
)	O	O:0.999924
so	O	O:0.999723
I'm	O	O:0.999965
not	O	O:0.999137
100%	O	O:0.999943
sure	O	O:0.999419
on	O	O:0.999985
that	O	O:0.999353
.	O	O:0.999923
	
I	O	O:0.999979
still	O	O:0.999454
get	O	O:0.999109
the	O	O:0.999962
same	O	O:0.999237
TypeError	O	O:0.999970
message	O	O:0.999887
using	O	O:0.999678
the	O	O:0.999693
line	O	O:0.996964
you	O	O:0.999774
suggest	O	O:0.998251
.	O	O:0.999904
	
Use	O	O:0.999606
regex	O	O:0.997236
with	O	O:0.999331
`	O	O:0.999943
python	O	O:0.983223
`	O	O:0.999972
engine	O	O:0.990315
#CODE	O	O:0.999733
	
(	O	O:0.999886
it's	O	O:0.999941
pretty	O	O:0.998875
clear	O	O:0.999945
that	O	O:0.998489
`	O	O:0.999973
id	O	O:0.995569
`	O	O:0.999997
maps	O	O:0.998681
to	O	O:0.999877
`	O	O:0.999995
individual	O	O:0.957547
`	O	O:0.999847
,	O	O:0.999931
but	O	O:0.999962
I	O	O:0.999971
would	O	O:0.999561
clean	O	O:0.999391
that	O	O:0.999955
up	O	O:0.999981
too	O	O:0.999601
)	O	O:0.999884
.	O	O:0.997718
	
Being	O	O:0.999862
able	O	O:0.999652
to	O	O:0.999987
quickly	O	O:0.999972
determine	O	O:0.999226
the	O	O:0.999971
time	O	O:0.999908
difference	O	O:0.999444
between	O	O:0.998987
Order	O	O:0.999959
1	O	O:0.998916
and	O	O:0.999814
Order	O	O:0.999738
2	O	O:0.998523
(	O	O:0.999921
per	O	O:0.999775
PersonID	O	O:0.999684
)	O	O:0.999544
would	O	O:0.998816
be	O	O:0.999988
great	O	O:0.999151
too	O	O:0.999195
.	O	O:0.999720
	
Thus	O	O:0.999343
,	O	O:0.999974
if	O	O:0.999983
there	O	O:0.998696
is	O	O:0.999963
an	O	O:0.999848
update	O	O:0.996556
to	O	O:0.999981
some	O	O:0.999989
value	O	O:0.999948
on	O	O:0.999991
a	O	O:0.999987
memory	O	O:0.999758
page	O	O:0.992031
,	O	O:0.999986
that	O	O:0.999957
page	O	O:0.996529
is	O	O:0.999896
	
and	O	O:0.999517
make	O	O:0.999741
this	O	O:0.999749
a	O	O:0.999953
Series	O	O:0.809431
,	O	O:0.999961
mapping	O	O:0.999417
names	O	O:0.997615
to	O	O:0.999983
their	O	O:0.999984
respective	O	O:0.998514
numbers	O	O:0.972322
:	O	O:0.999983
#CODE	O	O:0.999779
	
That	O	O:0.996938
is	O	O:0.999968
,	O	O:0.999943
for	O	O:0.999974
each	O	O:0.995280
second	O	O:0.999835
there	O	O:0.999032
is	O	O:0.999976
a	O	O:0.999910
value	O	O:0.992437
and	O	O:0.999946
they	O	O:0.995704
should	O	O:0.998281
not	O	O:0.999680
be	O	O:0.999965
averaged	O	O:0.999464
,	O	O:0.999973
just	O	O:0.999499
grouped	O	O:0.999786
together	O	O:0.999953
to	O	O:0.999980
a	O	O:0.999996
new	O	O:0.998230
series	O	O:0.995056
..	O	O:0.999011
	
Specifically	O	O:0.998083
,	O	O:0.999843
in	O	O:0.999986
this	O	O:0.999872
case	O	O:0.999381
,	O	O:0.999982
I'd	O	O:0.999983
only	O	O:0.999840
like	O	O:0.999826
to	O	O:0.999998
drop	O	O:0.993116
row	O	O:0.999944
with	O	O:0.999717
Indices	O	O:0.998823
'	O	O:0.999868
1991-12-31	O	O:0.996307
'	O	O:0.999606
and	O	O:0.999571
'	O	O:0.999844
1992-01-31	O	O:0.988009
'	O	O:0.999427
.	O	O:0.999337
	
Or	O	O:0.999965
read	O	O:0.994313
it	O	O:0.999973
in	O	O:0.999996
directly	O	O:0.999931
as	O	O:0.999993
a	O	O:0.999952
csv	O	O:0.995522
,	O	O:0.999994
by	O	O:0.999964
appending	O	O:0.998873
'	O	O:0.999864
na	O	O:0.997039
'	O	O:0.999965
to	O	O:0.999926
the	O	O:0.999999
list	O	O:0.997487
of	O	O:0.999989
values	O	O:0.997981
to	O	O:0.999984
be	O	O:0.999990
considered	O	O:0.998285
NaN	O	O:0.960376
:	O	O:0.999948
#CODE	O	O:0.999031
	
I	O	O:0.999994
fail	O	O:0.998625
to	O	O:0.999908
see	O	O:0.999988
the	O	O:0.999910
corelation	O	O:0.994791
between	O	O:0.997621
"	O	O:0.999969
John	O	O:0.998986
"	O	O:0.999631
and	O	O:0.999889
the	O	O:0.999930
dates	O	O:0.972815
in	O	O:0.999923
the	O	O:0.999895
target	O	O:0.995656
.	O	O:0.999616
	
I	O	O:0.999909
get	O	O:0.998329
:	O	O:0.999767
	
The	O	O:0.999859
question	O	O:0.998323
is	O	O:0.999959
,	O	O:0.999985
how	O	O:0.999960
can	O	O:0.999252
I	O	O:0.999998
remove	O	O:0.999869
or	O	O:0.999525
filter	O	O:0.977991
out	O	O:0.999952
all	O	O:0.998969
entries	O	O:0.999433
that	O	O:0.999904
have	O	O:0.999976
frequency	O	O:0.999822
1	O	O:0.999695
?	O	O:0.999950
	
For	O	O:0.999853
all	O	O:0.999651
the	O	O:0.999835
other	O	O:0.998634
names	O	O:0.999880
that	O	O:0.999839
are	O	O:0.999990
not	O	O:0.999661
in	O	O:0.999968
the	O	O:0.999949
top	O	O:0.997807
ten	O	O:0.999928
frequencies	O	O:0.990002
I	O	O:0.999995
want	O	O:0.999936
to	O	O:0.999576
combine	O	O:0.999968
their	O	O:0.999889
number	O	O:0.999501
of	O	O:0.999951
occurences	O	O:0.999704
together	O	O:0.999964
under	O	O:0.999882
say	O	O:0.999771
the	O	O:0.999942
name	O	O:0.998801
"	O	O:0.999940
other	O	O:0.999739
"	O	O:0.999826
.	O	O:0.998724
	
You	O	O:0.999642
should	O	O:0.999508
get	O	O:0.999594
the	O	O:0.999958
following	O	O:0.994054
result	O	O:0.989602
:	O	O:0.999965
	
Which	O	O:0.998333
indeed	O	O:0.997941
is	O	O:0.999777
longer	O	O:0.996870
(	O	O:0.999973
50	O	O:0.999392
)	O	O:0.999982
than	O	O:0.999805
my	O	O:0.999970
number	O	O:0.999732
of	O	O:0.999906
columns	O	O:0.998121
/	O	O:0.999921
indices	O	O:0.981845
(	O	O:0.999987
25	O	O:0.999627
)	O	O:0.999595
.	O	O:0.998765
	
I	O	O:0.999983
am	O	O:0.999989
new	O	O:0.998243
to	O	O:0.999817
Python	O	O:0.999643
(	O	O:0.999918
and	O	O:0.999865
programming	O	O:0.997630
in	O	O:0.999530
general	O	O:0.993627
!	O	O:0.999975
)	O	O:0.999362
,	O	O:0.999972
trying	O	O:0.999865
to	O	O:0.999558
conduct	O	O:0.999927
some	O	O:0.999986
data	O	O:0.999957
analysis	O	O:0.999970
using	O	O:0.999507
Pandas	O	O:0.993949
.	O	O:0.997608
	
I	O	O:0.999675
would	O	O:0.999948
like	O	O:0.999504
to	O	O:0.999987
combine	O	O:0.999898
these	O	O:0.999563
columns	O	O:0.999715
into	O	O:0.999794
start	O	O:0.999889
time	O	O:0.990124
(	O	O:0.999972
index	O	O:0.997799
)	O	O:0.999848
and	O	O:0.999076
length	O	O:0.998022
in	O	O:0.999111
actual	O	O:0.980543
seconds	O	O:0.996635
.	O	O:0.999325
	
I'm	O	O:0.999808
looking	O	O:0.999486
to	O	O:0.999857
find	O	O:0.999843
,	O	O:0.999985
for	O	O:0.999979
each	O	O:0.998068
Census	O	O:0.999161
Block	O	O:0.999732
centroid	O	O:0.999295
,	O	O:0.999994
the	O	O:0.999978
distance	O	O:0.999178
to	O	O:0.999951
it's	O	O:0.999990
closest	O	O:0.998949
restaurant	O	O:0.999596
.	O	O:0.999585
	
You	O	O:0.999883
will	O	O:0.998785
get	O	O:0.999617
the	O	O:0.999900
exception	O	O:0.999224
"	O	O:0.999920
appended	O	O:0.999666
items	O	O:0.998715
do	O	O:0.999880
not	O	O:0.999753
match	O	O:0.995417
existing	O	O:0.999339
items	O	O:0.996806
in	O	O:0.999992
table	O	O:0.998285
!	O	O:0.999965
	
Honestly	O	O:0.998358
-	O	O:0.999957
we	O	O:0.999959
were	O	O:0.999809
going	O	O:0.999795
to	O	O:0.999982
originally	O	O:0.999967
do	O	O:0.999857
visualizations	O	O:0.999957
with	O	O:0.999583
it	O	O:0.999399
(	O	O:0.999994
heatmaps	O	O:0.999100
)	O	O:0.999708
-	O	O:0.999970
but	O	O:0.999942
for	O	O:0.999960
a	O	O:0.999892
lot	O	O:0.999623
of	O	O:0.999836
reasons	O	O:0.992247
we're	O	O:0.999727
now	O	O:0.999913
going	O	O:0.999791
to	O	O:0.999936
use	O	O:0.999685
D3	O	O:0.999594
...	O	O:0.980786
	
For	O	O:0.999859
example	O	O:0.997888
,	O	O:0.999993
if	O	O:0.999967
I	O	O:0.999994
say	O	O:0.999992
year	O	O:0.999226
,	O	O:0.999992
the	O	O:0.999936
entire	O	O:0.997059
column	O	O:0.999851
needs	O	O:0.999929
to	O	O:0.999995
be	O	O:0.999991
appended	O	O:0.999918
into	O	O:0.997774
a	O	O:0.999995
list	O	O:0.978893
like	O	O:0.999775
[	O	O:0.999905
1	O	O:0.999949
year	O	O:0.999842
,	O	O:0.999986
3	O	O:0.999962
minutes	O	O:0.998077
,	O	O:0.999986
2	O	O:0.999989
hours	O	O:0.998341
]	O	O:0.999858
.	O	O:0.998102
	
Anyone	O	O:0.999821
have	O	O:0.999715
any	O	O:0.999899
suggestions	O	O:0.999752
for	O	O:0.999851
how	O	O:0.999823
to	O	O:0.999776
accomplish	O	O:0.999982
this	O	O:0.999614
?	O	O:0.999965
	
Yeah	O	O:0.998731
I	O	O:0.999981
know	O	O:0.999376
it	O	O:0.999914
gives	O	O:0.998382
NaN	O	O:0.997683
padding	O	O:0.923563
,	O	O:0.999891
but	O	O:0.999990
only	O	O:0.999614
on	O	O:0.999936
the	O	O:0.999937
indices	O	O:0.996298
the	O	O:0.999948
joining	O	O:0.990793
is	O	O:0.999995
done	O	O:0.999758
over	O	O:0.999824
.	O	O:0.999497
	
The	O	O:0.999548
paired	O	O:0.998519
measurements	O	O:0.995861
should	O	O:0.999872
have	O	O:0.999641
the	O	O:0.999990
same	O	O:0.999770
month	O	O:0.999414
,	O	O:0.999999
just	O	O:0.999838
different	O	O:0.999662
years	O	O:0.995245
.	O	O:0.999777
	
You	O	O:0.999768
can	O	O:0.999480
get	O	O:0.999812
started	O	O:0.999495
on	O	O:0.999910
debugging	O	O:0.999937
this	O	O:0.999862
by	O	O:0.999982
just	O	O:0.999582
adding	O	O:0.999889
a	O	O:0.999977
line	O	O:0.998309
to	O	O:0.999988
your	O	O:0.999959
code	O	O:0.998664
and	O	O:0.999955
running	O	O:0.998364
again	O	O:0.955609
:	O	O:0.999945
#CODE	O	O:0.999041
	
When	O	O:0.998882
I	O	O:0.999993
run	O	O:0.999934
the	O	O:0.999918
solution	O	O:0.999658
I	O	O:0.999995
get	O	O:0.999964
the	O	O:0.999809
error	O	O:0.996837
.	O	O:0.999533
	
Then	O	O:0.997748
let's	O	O:0.999951
add	O	O:0.999934
a	O	O:0.999924
helper	O	O:0.996622
column	O	O:0.995693
,	O	O:0.999944
called	O	O:0.999091
Safe	O	O:0.999010
,	O	O:0.999978
that	O	O:0.999850
will	O	O:0.999846
be	O	O:0.999992
a	O	O:0.999991
concatenation	O	O:0.999216
of	O	O:0.999972
all	O	O:0.997584
the	O	O:0.999887
Safex	O	O:0.974731
columns	O	O:0.995363
.	O	O:0.999931
	
product	O	O:0.992004
1111	O	O:0.998993
non-null	O	O:0.968085
object	O	O:0.996591
	
In	O	O:0.999886
R	O	O:0.999982
,	O	O:0.999992
using	O	O:0.999849
the	O	O:0.998840
car	O	O:0.997462
package	O	O:0.997237
,	O	O:0.999994
there	O	O:0.999764
is	O	O:0.999970
a	O	O:0.999945
useful	O	O:0.993482
function	O	O:0.996869
`	O	O:0.999947
some	O	O:0.993080
(	O	O:0.999997
x	O	O:0.999798
,	O	O:0.999995
n	O	O:0.999874
)`	O	O:0.999855
which	O	O:0.999385
is	O	O:0.999994
similar	O	O:0.999376
to	O	O:0.999922
head	O	O:0.999887
but	O	O:0.999922
selects	O	O:0.999671
,	O	O:0.999882
in	O	O:0.999991
this	O	O:0.999836
example	O	O:0.999696
,	O	O:0.999986
10	O	O:0.999993
rows	O	O:0.999029
at	O	O:0.999980
random	O	O:0.999702
from	O	O:0.999274
x	O	O:0.997240
.	O	O:0.999914
	
The	O	O:0.999809
separator	O	O:0.992849
(	O	O:0.999914
between	O	O:0.999157
cells	O	O:0.999677
)	O	O:0.999914
is	O	O:0.999864
defined	O	O:0.999704
by	O	O:0.999899
the	O	O:0.999918
operating	O	O:0.998889
system	O	O:0.997743
(	O	O:0.999996
at	O	O:0.999986
least	O	O:0.998626
under	O	O:0.999599
Windows	O	O:0.995618
)	O	O:0.999608
,	O	O:0.999880
and	O	O:0.999968
when	O	O:0.997837
the	O	O:0.999792
system	O	O:0.998778
wide	O	O:0.999924
list	O	O:0.998954
separator	O	O:0.999947
differs	O	O:0.999290
from	O	O:0.999663
comma	O	O:0.994962
,	O	O:0.999996
pandas	O	O:0.996058
(	O	O:0.999985
or	O	O:0.999957
anything	O	O:0.999953
else	O	O:0.999322
I	O	O:0.999994
tried	O	O:0.999797
)	O	O:0.999083
cannot	O	O:0.991079
determine	O	O:0.999911
what	O	O:0.999517
separator	O	O:0.998971
should	O	O:0.999704
be	O	O:0.999958
used	O	O:0.998983
.	O	O:0.996728
	
Setting	O	O:0.999513
up	O	O:0.999834
a	O	O:0.999969
histogram	O	O:0.998684
with	O	O:0.999692
a	O	O:0.999921
range	O	O:0.996572
and	O	O:0.999778
an	O	O:0.999793
appropriate	O	O:0.992867
bin	O	O:0.998066
size	O	O:0.999753
is	O	O:0.999982
an	O	O:0.999765
unknown	O	O:0.989570
.	O	O:0.999529
	
Thanks	O	O:0.999204
TravisJ	O	O:0.999241
,	O	O:0.999965
I	O	O:0.999997
guess	O	O:0.999516
I	O	O:0.999903
was	O	O:0.999986
just	O	O:0.999261
struggling	O	O:0.999933
to	O	O:0.999910
get	O	O:0.999969
the	O	O:0.998776
(	O	O:0.999964
...	O	O:0.999568
something	O	O:0.999744
involving	O	O:0.998532
group	O	O:0.998338
...	O	O:0.998366
)	O	O:0.999665
in	O	O:0.999793
when	O	O:0.999692
i	O	O:0.999989
was	O	O:0.999977
using	O	O:0.999681
the	O	O:0.989141
ax=fig1	O	O:0.926713
....	O	O:0.922933
method	O	O:0.992162
.	O	O:0.999688
	
I	O	O:0.999972
am	O	O:0.999981
optimising	O	O:0.999337
the	O	O:0.999971
span	O	O:0.997217
of	O	O:0.999961
an	O	O:0.999918
exponential	O	O:0.999230
moving	O	O:0.994186
average	O	O:0.995401
and	O	O:0.999765
the	O	O:0.999860
number	O	O:0.997162
of	O	O:0.999813
lagged	O	O:0.995721
variables	O	O:0.999949
that	O	O:0.999708
I	O	O:0.999996
use	O	O:0.999908
in	O	O:0.998818
the	O	O:0.999287
regression	O	O:0.995790
.	O	O:0.999638
	
The	O	O:0.999866
error	O	O:0.999035
message	O	O:0.999748
that	O	O:0.998692
I	O	O:0.999992
get	O	O:0.998668
is	O	O:0.998580
:	O	O:0.999908
#CODE	O	O:0.999579
	
It	O	O:0.999910
doesn't	O	O:0.998969
however	O	O:0.999973
take	O	O:0.999887
advantage	O	O:0.999909
of	O	O:0.999886
the	O	O:0.999916
psql	O	O:0.996274
package	O	O:0.997778
in	O	O:0.999890
Pandas	O	O:0.999730
.	O	O:0.999537
	
On	O	O:0.999906
a	O	O:0.999988
much	O	O:0.998707
larger	O	O:0.999934
data	O	O:0.999187
set	O	O:0.987066
,	O	O:0.999998
this	O	O:0.999942
runs	O	O:0.999581
in	O	O:0.999927
790	O	O:0.999937
ms	O	O:0.992893
compared	O	O:0.999278
to	O	O:0.999956
1345	O	O:0.999924
ms	O	O:0.991474
for	O	O:0.999787
ajcr's	O	O:0.997914
and	O	O:0.999581
Primer's	O	O:0.998588
solutions	O	O:0.995108
.	O	O:0.999529
	
I've	O	O:0.999639
put	O	O:0.999180
together	O	O:0.999937
one	O	O:0.999871
approach	O	O:0.999379
to	O	O:0.999985
that	O	O:0.999805
solution	O	O:0.999985
that	O	O:0.999681
should	O	O:0.999930
scale	O	O:0.997495
relatively	O	O:0.999842
well	O	O:0.997296
.	O	O:0.999826
	
I	O	O:0.999789
was	O	O:0.999891
hoping	O	O:0.998287
there	O	O:0.998255
was	O	O:0.999762
an	O	O:0.999976
easy	O	O:0.999895
way	O	O:0.999955
to	O	O:0.999947
get	O	O:0.999970
the	O	O:0.999978
set	O	O:0.999484
of	O	O:0.999971
B	O	O:0.999919
values	O	O:0.999667
per	O	O:0.999941
each	O	O:0.999231
A	O	O:0.999930
value	O	O:0.999957
like	O	O:0.998028
`	O	O:0.999912
{	O	O:0.999672
'	O	O:0.999973
one	O	O:0.999591
'	O	O:0.999883
:[	O	O:0.999960
'	O	O:0.999826
A	O	O:0.999811
'	O	O:0.999950
,	O	O:0.999981
'	O	O:0.999964
B	O	O:0.999733
']	O	O:0.999903
,	O	O:0.999628
'	O	O:0.999959
two	O	O:0.999151
'	O	O:0.999968
:[	O	O:0.999959
'	O	O:0.999886
A	O	O:0.999901
']	O	O:0.999888
,	O	O:0.999474
'	O	O:0.999979
three	O	O:0.997971
'	O	O:0.999936
:[	O	O:0.999966
'	O	O:0.999906
B	O	O:0.999888
']	O	O:0.999875
}	O	O:0.779358
`	O	O:0.999917
but	O	O:0.999436
I	O	O:0.999995
don't	O	O:0.999747
see	O	O:0.999680
anything	O	O:0.999840
like	O	O:0.999761
that	O	O:0.999379
in	O	O:0.999941
the	O	O:0.999913
pandas	O	O:0.992617
documentation	O	O:0.998311
	
To	O	O:0.999963
avoid	O	O:0.997485
chained	O	O:0.997331
indexing	O	O:0.998751
,	O	O:0.999955
you	O	O:0.999952
need	O	O:0.999651
to	O	O:0.999987
get	O	O:0.999991
all	O	O:0.999980
your	O	O:0.999033
conditions	O	O:0.999627
into	O	O:0.999962
a	O	O:0.999997
single	O	O:0.998390
set	O	O:0.999263
of	O	O:0.999914
brackets	O	O:0.995954
.	O	O:0.999817
	
But	O	O:0.999900
trying	O	O:0.999714
to	O	O:0.999888
parse	O	O:0.999559
the	O	O:0.999888
column	O	O:0.999244
name	O	O:0.998822
and	O	O:0.999961
hierarchy	O	O:0.999859
and	O	O:0.999242
auto-generate	O	O:0.998619
the	O	O:0.999362
insertable	O	O:0.998866
thing	O	O:0.999368
with	O	O:0.998936
matching	O	O:0.993853
index	O	O:0.991700
is	O	O:0.999944
unpleasant	O	O:0.997960
.	O	O:0.999368
	
The	O	O:0.999824
seaborn	O	O:0.998189
package	O	O:0.998910
will	O	O:0.999128
allow	O	O:0.999847
you	O	O:0.999832
to	O	O:0.999979
plot	O	O:0.999809
long	O	O:0.999983
form	O	O:0.999971
data	O	O:0.999969
like	O	O:0.999815
you	O	O:0.999939
have	O	O:0.998111
without	O	O:0.999224
pivoting	O	O:0.983477
but	O	O:0.999635
pandas	O	O:0.998013
requires	O	O:0.980583
shared	O	O:0.993285
index	O	O:0.996613
and	O	O:0.999882
one	O	O:0.999900
column	O	O:0.998467
per	O	O:0.999729
plotted	O	O:0.999000
line	O	O:0.999858
by	O	O:0.999983
default	O	O:0.999252
so	O	O:0.999998
your	O	O:0.999926
solution	O	O:0.999776
is	O	O:0.999996
the	O	O:0.999845
correct	O	O:0.998178
one	O	O:0.999592
.	O	O:0.999723
	
Unable	O	O:0.999787
to	O	O:0.999803
filter	O	O:0.996689
out	O	O:0.999793
missing	O	O:0.991470
(	O	O:0.999944
NaN	O	O:0.997185
)	O	O:0.999913
location	O	O:0.999854
data	O	O:0.999942
while	O	O:0.998644
using	O	O:0.999379
Pandas	O	O:0.997017
and	O	O:0.998528
Geocoder	O	O:0.997946
modules	O	O:0.967846
in	O	O:0.999722
Python	O	O:0.997212
	
problem	O	O:0.992294
is	O	O:0.999979
the	O	O:0.999863
sum	O	O:0.996689
i	O	O:0.999974
now	O	O:0.999941
get	O	O:0.999176
is	O	O:0.999985
lined	O	O:0.998587
up	O	O:0.999726
in	O	O:0.999716
week	O	O:0.997019
intervals	O	O:0.999628
but	O	O:0.999899
not	O	O:0.999059
in	O	O:0.999900
the	O	O:0.999904
right	O	O:0.998575
sequence	O	O:0.998463
.	O	O:0.999994
this	O	O:0.999883
wouldn't	O	O:0.999944
be	O	O:0.999961
a	O	O:0.999928
problem	O	O:0.987815
but	O	O:0.999547
i	O	O:0.999988
need	O	O:0.999071
to	O	O:0.999976
get	O	O:0.999987
to	O	O:0.999981
the	O	O:0.999998
month	O	O:0.999559
of	O	O:0.999995
each	O	O:0.999792
date	O	O:0.999983
in	O	O:0.999987
order	O	O:0.999972
to	O	O:0.999971
do	O	O:0.999991
the	O	O:0.999989
next	O	O:0.999262
step	O	O:0.999758
i	O	O:0.999996
guess	O	O:0.999218
.	O	O:0.999653
	
How	O	O:0.999886
could	O	O:0.998940
I	O	O:0.999995
sum	O	O:0.999758
consecutive	O	O:0.997601
day	O	O:0.999935
values	O	O:0.999646
here	O	O:0.999583
,	O	O:0.999997
so	O	O:0.999978
I	O	O:0.999968
would	O	O:0.999945
get	O	O:0.999346
something	O	O:0.999894
like	O	O:0.999713
this	O	O:0.999820
?	O	O:0.999931
	
I	O	O:0.999819
changed	O	O:0.999950
this	O	O:0.999569
to	O	O:0.999983
use	O	O:0.999982
\t	O	O:0.999738
as	O	O:0.999935
the	O	O:0.999876
separator	O	O:0.990700
.	O	O:0.999501
	
It's	O	O:0.999530
possible	O	O:0.992297
,	O	O:0.999977
but	O	O:0.999903
if	O	O:0.999988
your	O	O:0.999880
data	O	O:0.999340
is	O	O:0.999978
organized	O	O:0.999384
it's	O	O:0.999969
very	O	O:0.999492
quick	O	O:0.999241
with	O	O:0.999779
shifting	O	O:0.998847
it	O	O:0.999679
	
@USER	O	O:0.998972
fixed	O	O:0.999049
,	O	O:0.999978
was	O	O:0.999947
a	O	O:0.999990
typo	O	O:0.996474
;	O	O:0.999998
this	O	O:0.999903
take	O	O:0.999887
a	O	O:0.999988
full	O	O:0.979647
uri	O	O:0.999043
	
Just	O	O:0.998980
get	O	O:0.999386
rid	O	O:0.999624
of	O	O:0.999906
it	O	O:0.999527
and	O	O:0.999917
reindent	O	O:0.999073
the	O	O:0.999798
loop	O	O:0.999884
body	O	O:0.999865
to	O	O:0.999983
the	O	O:0.999996
left	O	O:0.993945
one	O	O:0.999791
level	O	O:0.995698
.	O	O:0.999808
	
However	O	O:0.999678
,	O	O:0.999967
I	O	O:0.999995
still	O	O:0.999266
get	O	O:0.999382
the	O	O:0.999616
warning	O	O:0.993402
.	O	O:0.998825
	
For	O	O:0.999934
any	O	O:0.999277
x	O	O:0.997996
in	O	O:0.999826
dataset2	O	O:0.999938
it	O	O:0.999926
has	O	O:0.999929
mapped	O	O:0.999298
value	O	O:0.999205
in	O	O:0.999819
col2	O	O:0.976612
.	O	O:0.999645
	
but	O	O:0.999551
you	O	O:0.999898
then	O	O:0.999726
need	O	O:0.999950
to	O	O:0.999980
store	O	O:0.999949
these	O	O:0.999916
dfs	O	O:0.999931
somewhere	O	O:0.999430
which	O	O:0.999802
means	O	O:0.998612
either	O	O:0.999843
in	O	O:0.999711
a	O	O:0.999983
list	O	O:0.987643
or	O	O:0.999985
tuple	O	O:0.993371
or	O	O:0.999997
some	O	O:0.999654
other	O	O:0.999978
container	O	O:0.999930
or	O	O:0.999983
use	O	O:0.999916
a	O	O:0.999929
generator	O	O:0.966612
	
and	O	O:0.999791
so	O	O:0.999967
on	O	O:0.999930
for	O	O:0.999961
the	O	O:0.999933
remaining	O	O:0.997140
location	O	O:0.999606
categories	O	O:0.993361
.	O	O:0.999813
	
@USER	O	O:0.999535
do	O	O:0.999850
**	O	O:0.999907
all	O	O:0.998227
**	O	O:0.999930
the	O	O:0.999565
columns	O	O:0.998579
in	O	O:0.999991
the	O	O:0.999964
DF	O	O:0.999818
require	O	O:0.999509
that	O	O:0.999909
same	O	O:0.999947
replacement	O	O:0.999525
?	O	O:0.999982
	
did	O	O:0.999668
you	O	O:0.999866
get	O	O:0.999884
any	O	O:0.999856
warnings	O	O:0.998697
while	O	O:0.998718
installing	O	O:0.999880
numpy	O	O:0.997431
or	O	O:0.999930
pandas	O	O:0.996461
?	O	O:0.999983
	
This	O	O:0.999326
`	O	O:0.999988
df	O	O:0.980796
`	O	O:0.999994
consist	O	O:0.994723
of	O	O:0.999993
volume	O	O:0.999284
observations	O	O:0.999732
at	O	O:0.999984
every	O	O:0.998086
10	O	O:0.999750
second	O	O:0.998665
for	O	O:0.999727
22	O	O:0.999426
non-consecutive	O	O:0.998370
days	O	O:0.997574
.	O	O:0.999861
	
I've	O	O:0.999253
also	O	O:0.999641
included	O	O:0.999970
a	O	O:0.999892
section	O	O:0.998762
to	O	O:0.999955
immediately	O	O:0.999957
identify	O	O:0.999469
any	O	O:0.999778
redundant	O	O:0.999470
genes	O	O:0.999104
that	O	O:0.999823
don't	O	O:0.999981
have	O	O:0.999793
any	O	O:0.999648
SNPs	O	O:0.999932
that	O	O:0.999338
fall	O	O:0.989994
within	O	O:0.999741
their	O	O:0.997455
range	O	O:0.996634
.	O	O:0.998382
	
Using	O	O:0.999716
some	O	O:0.995889
string	O	O:0.999796
formatting	O	O:0.999897
to	O	O:0.999890
get	O	O:0.999754
the	O	O:0.999664
index	O	O:0.962243
,	O	O:0.999956
but	O	O:0.999905
works	O	O:0.999843
for	O	O:0.999931
any	O	O:0.999866
combination	O	O:0.997259
of	O	O:0.999848
months	O	O:0.987128
(	O	O:0.999994
as	O	O:0.999995
long	O	O:0.999849
as	O	O:0.999974
the	O	O:0.999851
first	O	O:0.999190
month	O	O:0.998445
is	O	O:0.999979
explicitly	O	O:0.999611
included	O	O:0.999379
)	O	O:0.999603
.	O	O:0.997487
	
Any	O	O:0.999737
suggestions	O	O:0.999036
please	O	O:0.996706
?	O	O:0.999947
	
I	O	O:0.999885
get	O	O:0.997405
:	O	O:0.999847
#CODE	O	O:0.999437
	
I	O	O:0.999875
understand	O	O:0.999930
that	O	O:0.999539
we	O	O:0.999984
can	O	O:0.999843
line	O	O:0.999998
them	O	O:0.999963
all	O	O:0.999558
together	O	O:0.999953
side	O	O:0.999723
by	O	O:0.999993
side	O	O:0.999901
so	O	O:0.999991
their	O	O:0.999924
dates	O	O:0.997148
match	O	O:0.957204
and	O	O:0.999982
loop	O	O:0.997769
row	O	O:0.999908
by	O	O:0.999758
row	O	O:0.998252
,	O	O:0.999948
but	O	O:0.999981
then	O	O:0.999665
when	O	O:0.999244
i	O	O:0.999998
have	O	O:0.999779
100k	O	O:0.998681
different	O	O:0.999637
securities	O	O:0.996702
,	O	O:0.999998
this	O	O:0.999761
is	O	O:0.999976
slow	O	O:0.998783
in	O	O:0.999947
memory	O	O:0.996308
.	O	O:0.999432
	
I	O	O:0.999675
would	O	O:0.999955
like	O	O:0.999669
to	O	O:0.999960
automate	O	O:0.999980
this	O	O:0.999979
table	O	O:0.999916
so	O	O:0.999991
If	O	O:0.999988
I	O	O:0.999988
change	O	O:0.999747
my	O	O:0.998673
parameters	O	O:0.995684
in	O	O:0.999974
my	O	O:0.999969
code	O	O:0.999832
,	O	O:0.999993
I	O	O:0.999996
get	O	O:0.999938
a	O	O:0.999907
new	O	O:0.999670
table	O	O:0.999019
with	O	O:0.999961
that	O	O:0.999292
new	O	O:0.999963
data	O	O:0.999293
.	O	O:0.999786
	
But	O	O:0.999613
I	O	O:0.999960
get	O	O:0.999371
,	O	O:0.999922
which	O	O:0.999509
I	O	O:0.999938
cannot	O	O:0.999064
understand	O	O:0.994226
,	O	O:0.999907
#CODE	O	O:0.999083
	
Here's	O	O:0.999069
the	O	O:0.999515
product	O	O:0.974533
:	O	O:0.999968
#CODE	O	O:0.999691
	
(	O	O:0.999930
My	O	O:0.999968
actual	O	O:0.997748
problem	O	O:0.999243
involves	O	O:0.999838
parsing	O	O:0.996761
strings	O	O:0.999320
into	O	O:0.999855
lists	O	O:0.999684
,	O	O:0.999991
then	O	O:0.999738
checking	O	O:0.999850
for	O	O:0.999985
presents	O	O:0.999783
of	O	O:0.999988
a	O	O:0.999931
1	O	O:0.999947
or	O	O:0.999856
0	O	O:0.999734
in	O	O:0.999775
one	O	O:0.999862
list	O	O:0.988679
and	O	O:0.999975
if	O	O:0.999833
so	O	O:0.999941
marking	O	O:0.999135
the	O	O:0.999892
cosponsoring	O	O:0.996283
element	O	O:0.999545
in	O	O:0.999987
the	O	O:0.999845
other	O	O:0.999731
list	O	O:0.999141
with	O	O:0.999956
a	O	O:0.999823
asterix	O	O:0.924122
,	O	O:0.999963
but	O	O:0.999797
I	O	O:0.999948
didn't	O	O:0.999878
want	O	O:0.998939
to	O	O:0.999812
put	O	O:0.999979
that	O	O:0.999388
in	O	O:0.999975
my	O	O:0.999825
example	O	O:0.994581
and	O	O:0.999804
it	O	O:0.999634
is	O	O:0.999955
long	O	O:0.997108
and	O	O:0.999713
harder	O	O:0.999734
to	O	O:0.998698
follow	O	O:0.999161
.	O	O:0.999505
	
What	O	O:0.998124
is	O	O:0.999986
the	O	O:0.999903
error	O	O:0.999598
you	O	O:0.999718
get	O	O:0.999630
?	O	O:0.999985
	
So	O	O:0.999974
first	O	O:0.999687
chunk	O	O:0.998499
is	O	O:0.999946
stored	O	O:0.999311
as	O	O:0.999864
integer	O	O:0.993150
and	O	O:0.999408
in	O	O:0.999654
second	O	O:0.997470
chunk	O	O:0.999617
gets	O	O:0.999057
NaN	O	O:0.997405
values	O	O:0.996033
and	O	O:0.999837
store	O	O:0.997204
cannot	O	O:0.997552
convert	O	O:0.999295
NaN	O	O:0.998308
to	O	O:0.999772
integer	O	O:0.999402
	
Just	O	O:0.999806
play	O	O:0.952389
around	O	O:0.999518
with	O	O:0.999544
it	O	O:0.999834
to	O	O:0.999967
get	O	O:0.999956
it	O	O:0.999958
right	O	O:0.999104
.	O	O:0.999849
	
I	O	O:0.999967
get	O	O:0.999863
the	O	O:0.999703
following	O	O:0.997959
error	O	O:0.991637
:	O	O:0.999972
#CODE	O	O:0.999655
	
Edit	O	O:0.993473
:	O	O:0.999986
Here's	O	O:0.999810
an	O	O:0.999989
example	O	O:0.999731
of	O	O:0.999990
generating	O	O:0.999818
a	O	O:0.999959
close-enough	O	O:0.999619
data	O	O:0.999789
set	O	O:0.999589
,	O	O:0.999996
so	O	O:0.999997
you	O	O:0.999943
can	O	O:0.999941
get	O	O:0.999990
some	O	O:0.999989
idea	O	O:0.999832
of	O	O:0.999995
what	O	O:0.997201
I	O	O:0.999996
mean	O	O:0.981252
:	O	O:0.999910
#CODE	O	O:0.999600
	
@USER	O	O:0.999853
that	O	O:0.999558
means	O	O:0.999747
you	O	O:0.999966
have	O	O:0.999635
non	O	O:0.999752
string	O	O:0.999677
values	O	O:0.998763
mixed	O	O:0.995527
in	O	O:0.999916
;	O	O:0.999988
you	O	O:0.999872
need	O	O:0.999860
to	O	O:0.999989
specify	O	O:0.999847
`	O	O:0.999980
na=True	O	O:0.992770
`	O	O:0.999992
or	O	O:0.999772
`	O	O:0.999971
na=False	O	O:0.985862
`	O	O:0.999994
depending	O	O:0.997781
on	O	O:0.999982
what	O	O:0.999889
those	O	O:0.999931
values	O	O:0.998719
are	O	O:0.999589
.	O	O:0.999954
see	O	O:0.999959
my	O	O:0.999889
edits	O	O:0.998442
.	O	O:0.999765
	
Preferably	O	O:0.999113
,	O	O:0.999962
use	O	O:0.999897
Pandas	O	O:0.998747
for	O	O:0.999795
the	O	O:0.999906
data	O	O:0.998311
structure	O	O:0.999391
and	O	O:0.999964
Python	O	O:0.999784
for	O	O:0.999868
the	O	O:0.999388
language	O	O:0.986023
.	O	O:0.999366
	
Then	O	O:0.999322
as	O	O:0.999988
in	O	O:0.999954
the	O	O:0.999946
first	O	O:0.998903
point	O	O:0.999641
,	O	O:0.999983
I	O	O:0.999965
would	O	O:0.999964
like	O	O:0.999867
to	O	O:0.999993
calculate	O	O:0.999927
the	O	O:0.999985
number	O	O:0.999214
of	O	O:0.999951
continuous	O	O:0.998879
up	O	O:0.999927
and	O	O:0.999980
down	O	O:0.999745
sequences	O	O:0.999702
from	O	O:0.999835
the	O	O:0.999951
previous	O	O:0.999499
point	O	O:0.998702
.	O	O:0.999834
	
0	O	O:0.999868
can	O	O:0.999858
be	O	O:0.999992
changed	O	O:0.999889
to	O	O:0.999874
1	O	O:0.999994
or	O	O:0.999965
other	O	O:0.999959
values	O	O:0.999439
later	O	O:0.999847
in	O	O:0.999942
the	O	O:0.999918
code	O	O:0.995320
	
and	O	O:0.999445
in	O	O:0.999808
the	O	O:0.999670
instance	O	O:0.999547
when	O	O:0.999266
i	O	O:0.999997
am	O	O:0.999999
able	O	O:0.999832
to	O	O:0.999984
set	O	O:0.999773
the	O	O:0.999978
index	O	O:0.999256
of	O	O:0.999992
the	O	O:0.999988
df	O	O:0.999590
to	O	O:0.999985
the	O	O:0.999996
range	O	O:0.999257
,	O	O:0.999994
the	O	O:0.999992
data	O	O:0.999636
in	O	O:0.999983
the	O	O:0.999971
4	O	O:0.999935
columns	O	O:0.999545
change	O	O:0.999719
to	O	O:0.999922
NaN	O	O:0.999269
since	O	O:0.999918
they	O	O:0.999949
have	O	O:0.999945
no	O	O:0.999980
data	O	O:0.999995
that	O	O:0.999935
matches	O	O:0.999850
the	O	O:0.999533
new	O	O:0.995398
index	O	O:0.993115
.	O	O:0.999823
	
(	O	O:0.999843
Note	O	O:0.999861
that	O	O:0.999901
this	O	O:0.999981
produces	O	O:0.999546
an	O	O:0.999951
unrealistically	O	O:0.999547
high	O	O:0.999290
number	O	O:0.999700
of	O	O:0.999865
flooding	O	O:0.998789
events	O	O:0.966682
,	O	O:0.999948
but	O	O:0.999777
that's	O	O:0.999921
just	O	O:0.999551
because	O	O:0.999951
of	O	O:0.999917
how	O	O:0.999632
the	O	O:0.999973
sample	O	O:0.999313
data	O	O:0.999408
is	O	O:0.999992
set	O	O:0.999036
up	O	O:0.999212
and	O	O:0.999696
not	O	O:0.999859
reflective	O	O:0.999819
of	O	O:0.999951
a	O	O:0.999950
typical	O	O:0.991665
pond	O	O:0.984443
,	O	O:0.999969
though	O	O:0.999232
I'm	O	O:0.999784
not	O	O:0.998421
an	O	O:0.999945
expert	O	O:0.999592
on	O	O:0.999981
pond	O	O:0.997853
flooding	O	O:0.999779
!	O	O:0.999900
)	O	O:0.999557
#CODE	O	O:0.997676
	
What	O	O:0.999181
output	O	O:0.999810
do	O	O:0.999903
you	O	O:0.999899
get	O	O:0.999772
from	O	O:0.999936
this	O	O:0.999721
?	O	O:0.999994
	
`	O	O:0.999908
Ideally	O	O:0.998862
,	O	O:0.999994
for	O	O:0.999965
the	O	O:0.999827
pages	O	O:0.985337
that	O	O:0.999932
have	O	O:0.999952
multiple	O	O:0.999876
groups	O	O:0.999405
of	O	O:0.999887
34	O	O:0.998324
,	O	O:0.999855
i'd	O	O:0.999993
like	O	O:0.999555
to	O	O:0.999973
add	O	O:0.999981
a	O	O:0.999979
suffix	O	O:0.994680
of	O	O:0.999853
_1	O	O:0.994418
,	O	O:0.999953
_2	O	O:0.998101
,	O	O:0.999887
_3	O	O:0.999535
,	O	O:0.999934
etc	O	O:0.999674
.	O	O:0.999514
	
That	O	O:0.999246
means	O	O:0.999796
duplicating	O	O:0.999681
values	O	O:0.998764
from	O	O:0.999954
cols	O	O:0.985345
`	O	O:0.999993
product_id	O	O:0.730652
`	O	O:0.999915
and	O	O:0.999576
tem_name	O	O:0.998745
`	O	O:0.999895
as	O	O:0.999981
long	O	O:0.999900
as	O	O:0.999991
there	O	O:0.998447
are	O	O:0.999749
items	O	O:0.993396
in	O	O:0.999981
list	O	O:0.983975
`	O	O:0.999980
prices	O	O:0.657182
`	O	O:0.999935
.	O	O:0.998241
	
cool	O	O:0.967145
,	O	O:0.999995
but	O	O:0.999868
I	O	O:0.999989
get	O	O:0.999813
a	O	O:0.999792
syntax	O	O:0.998779
error	O	O:0.998917
for	O	O:0.999372
	
problem	O	O:0.992294
is	O	O:0.999979
the	O	O:0.999863
sum	O	O:0.996689
i	O	O:0.999974
now	O	O:0.999941
get	O	O:0.999176
is	O	O:0.999985
lined	O	O:0.998587
up	O	O:0.999726
in	O	O:0.999716
week	O	O:0.997019
intervals	O	O:0.999628
but	O	O:0.999899
not	O	O:0.999059
in	O	O:0.999900
the	O	O:0.999904
right	O	O:0.998575
sequence	O	O:0.998463
.	O	O:0.999994
this	O	O:0.999883
wouldn't	O	O:0.999944
be	O	O:0.999961
a	O	O:0.999928
problem	O	O:0.987815
but	O	O:0.999547
i	O	O:0.999988
need	O	O:0.999071
to	O	O:0.999976
get	O	O:0.999987
to	O	O:0.999981
the	O	O:0.999998
month	O	O:0.999559
of	O	O:0.999995
each	O	O:0.999792
date	O	O:0.999983
in	O	O:0.999987
order	O	O:0.999972
to	O	O:0.999971
do	O	O:0.999991
the	O	O:0.999989
next	O	O:0.999262
step	O	O:0.999758
i	O	O:0.999996
guess	O	O:0.999218
.	O	O:0.999653
	
For	O	O:0.999967
empty	O	O:0.999633
date	O	O:0.999964
cells	O	O:0.999736
I	O	O:0.999997
am	O	O:0.999987
inserting	O	O:0.999473
a	O	O:0.999896
NaT	O	O:0.977400
,	O	O:0.999960
which	O	O:0.999319
I	O	O:0.999848
would	O	O:0.999947
have	O	O:0.999189
thought	O	O:0.999551
would	O	O:0.999811
be	O	O:0.999965
fine	O	O:0.999030
,	O	O:0.999947
but	O	O:0.999732
in	O	O:0.999635
Oracle	O	O:0.999791
that	O	O:0.998450
is	O	O:0.999991
becoming	O	O:0.999800
some	O	O:0.998562
weird	O	O:0.998804
invalid	O	O:0.999800
time	O	O:0.999959
that	O	O:0.999929
displays	O	O:0.999950
as	O	O:0.999915
"	O	O:0.999742
0001-255-255	O	O:0.990674
00:00	O	O:0.998429
:	O	O:0.999948
00	O	O:0.997611
"	O	O:0.999280
(	O	O:0.999884
Something	O	O:0.999910
like	O	O:0.998686
MAXINT	O	O:0.999598
or	O	O:0.999664
0	O	O:0.999859
being	O	O:0.999828
converted	O	O:0.999694
to	O	O:0.999976
a	O	O:0.999998
timestamp	O	O:0.998713
I'm	O	O:0.999842
guessing	O	O:0.999646
?	O	O:0.999789
)	O	O:0.999471
#CODE	O	O:0.997727
	
I	O	O:0.999700
would	O	O:0.999975
like	O	O:0.999612
to	O	O:0.999988
get	O	O:0.999936
the	O	O:0.999946
following	O	O:0.994279
result	O	O:0.987426
:	O	O:0.999977
#CODE	O	O:0.999767
	
so	O	O:0.999878
in	O	O:0.999938
all	O	O:0.999874
both	O	O:0.999418
suggestions	O	O:0.998720
below	O	O:0.996058
worked	O	O:0.999689
for	O	O:0.999614
me	O	O:0.999179
:	O	O:0.999851
	
I	O	O:0.999967
get	O	O:0.999881
the	O	O:0.999765
following	O	O:0.998386
error	O	O:0.998265
message	O	O:0.990876
:	O	O:0.999958
#CODE	O	O:0.999274
	
I	O	O:0.999900
would	O	O:0.999896
suggest	O	O:0.998615
using	O	O:0.999793
the	O	O:0.993675
duplicated	O	O:0.971325
method	O	O:0.998133
on	O	O:0.999957
the	O	O:0.999805
Pandas	O	O:0.998439
Index	O	B-API:0.518298
itself	O	O:0.990291
:	O	O:0.999974
#CODE	O	O:0.998978
	
I	O	O:0.999685
would	O	O:0.999974
like	O	O:0.999515
to	O	O:0.999992
group	O	O:0.999857
the	O	O:0.999975
x	O	O:0.994461
values	O	O:0.999573
into	O	O:0.999957
equal	O	O:0.999948
size	O	O:0.999699
bins	O	O:0.997578
,	O	O:0.999980
and	O	O:0.999791
for	O	O:0.999951
each	O	O:0.995999
bin	O	O:0.999435
take	O	O:0.999790
the	O	O:0.999934
average	O	O:0.999886
value	O	O:0.999339
of	O	O:0.999983
both	O	O:0.998654
x	O	O:0.999361
and	O	O:0.999836
y	O	O:0.999198
.	O	O:0.998916
	
For	O	O:0.999978
this	O	O:0.999953
data	O	O:0.999867
set	O	O:0.999415
the	O	O:0.999963
two	O	O:0.999616
numbers	O	O:0.998236
are	O	O:0.999782
always	O	O:0.999913
equal	O	O:0.993052
.	O	O:0.999236
	
Do	O	O:0.999899
you	O	O:0.999928
want	O	O:0.999948
to	O	O:0.999977
check	O	O:0.999939
if	O	O:0.999985
the	O	O:0.999983
value	O	O:0.997460
is	O	O:0.999976
in	O	O:0.999895
the	O	O:0.999840
provided	O	O:0.995490
bounds	O	O:0.921625
and	O	O:0.999916
return	O	O:0.992888
a	O	O:0.999475
boolean	O	O:0.989626
True	O	O:0.993573
/	O	O:0.999724
False	O	O:0.993566
array	O	O:0.999411
,	O	O:0.999982
or	O	O:0.999939
you	O	O:0.999858
want	O	O:0.999936
to	O	O:0.999952
represent	O	O:0.999997
your	O	O:0.999714
values	O	O:0.999323
in	O	O:0.999963
categories	O	O:0.991267
represented	O	O:0.999889
by	O	O:0.999933
those	O	O:0.998965
bounds	O	O:0.973118
?	O	O:0.999935
	
The	O	O:0.999828
series	O	O:0.992182
I'd	O	O:0.999984
like	O	O:0.999690
to	O	O:0.999922
get	O	O:0.999536
would	O	O:0.998884
contain	O	O:0.973440
:	O	O:0.999994
#CODE	O	O:0.999618
	
The	O	O:0.999957
error	O	O:0.998907
I	O	O:0.999927
get	O	O:0.996852
:	O	O:0.999823
#CODE	O	O:0.999391
	
How	O	O:0.999903
do	O	O:0.999878
you	O	O:0.999962
deal	O	O:0.998669
with	O	O:0.999960
apparently	O	O:0.999810
overlapping	O	O:0.999774
date	O	O:0.999482
ranges	O	O:0.997265
?	O	O:0.999978
	
There	O	O:0.998509
are	O	O:0.999979
more	O	O:0.999361
columns	O	O:0.999482
in	O	O:0.999989
the	O	O:0.999977
data	O	O:0.999933
that	O	O:0.999473
are	O	O:0.999985
not	O	O:0.999818
shown	O	O:0.999537
above	O	O:0.999614
,	O	O:0.999929
and	O	O:0.999695
using	O	O:0.999859
this	O	O:0.999481
code	O	O:0.998927
causes	O	O:0.998797
the	O	O:0.999925
non-numeric	O	O:0.984788
columns	O	O:0.999403
to	O	O:0.999999
drop	O	O:0.999256
off	O	O:0.999759
.	O	O:0.999484
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
python	O	O:0.977127
-	O	O:0.999996
trying	O	O:0.999381
to	O	O:0.999941
get	O	O:0.999964
a	O	O:0.999971
new	O	O:0.999295
pandas	O	O:0.995710
release	O	O:0.972190
	
In	O	O:0.999930
the	O	O:0.999953
process	O	O:0.983074
of	O	O:0.999989
creating	O	O:0.999632
an	O	O:0.999973
example	O	O:0.999736
with	O	O:0.999933
code	O	O:0.999758
,	O	O:0.999994
I	O	O:0.999993
managed	O	O:0.999025
to	O	O:0.999607
get	O	O:0.999914
it	O	O:0.999836
working	O	O:0.998658
.	O	O:0.999338
	
Can	O	O:0.999705
you	O	O:0.999929
post	O	O:0.991950
raw	O	O:0.999920
data	O	O:0.999628
and	O	O:0.999950
example	O	O:0.999710
code	O	O:0.999832
that	O	O:0.999751
demonstrates	O	O:0.999895
this	O	O:0.999777
'	O	O:0.999967
cutting	O	O:0.996767
'	O	O:0.999863
off	O	O:0.999085
	
Running	O	O:0.999650
your	O	O:0.999800
code	O	O:0.999676
on	O	O:0.999988
the	O	O:0.999976
sample	O	O:0.999671
data	O	O:0.999952
produces	O	O:0.999837
the	O	O:0.999996
same	O	O:0.998276
result	O	O:0.998909
.	O	O:0.999944
	
I	O	O:0.999980
want	O	O:0.999777
to	O	O:0.999908
take	O	O:0.999991
advantage	O	O:0.999940
of	O	O:0.999965
sortedness	O	O:0.997037
since	O	O:0.999881
with	O	O:0.999983
very	O	O:0.999849
large	O	O:0.999684
series	O	O:0.998522
merging	O	O:0.999484
when	O	O:0.997020
we	O	O:0.999988
know	O	O:0.999617
it's	O	O:0.999857
sorted	O	O:0.998768
should	O	O:0.999679
be	O	O:0.999933
linear	O	O:0.998164
in	O	O:0.999956
total	O	O:0.997560
length	O	O:0.999619
of	O	O:0.999838
the	O	O:0.998548
arrays	O	O:0.998981
,	O	O:0.999970
whereas	O	O:0.999812
any	O	O:0.999881
sort	O	O:0.997956
will	O	O:0.999331
be	O	O:0.999921
non-linear	O	O:0.996388
.	O	O:0.998802
	
What	O	O:0.999429
if	O	O:0.999961
you	O	O:0.999971
just	O	O:0.998987
changed	O	O:0.999411
the	O	O:0.999753
index	O	O:0.999711
from	O	O:0.999952
date	O	O:0.999940
/	O	O:0.999995
status	O	O:0.998367
to	O	O:0.999993
date	O	O:0.999981
/	O	O:0.999948
var1	O	O:0.995652
/	O	O:0.999734
status	O	O:0.972605
?	O	O:0.999964
	
which	O	O:0.998812
when	O	O:0.992353
imported	O	O:0.999935
into	O	O:0.999828
pandas	O	O:0.999889
data	O	O:0.999506
frames	O	O:0.997502
and	O	O:0.999961
each	O	O:0.999306
joined	O	O:0.999185
to	O	O:0.999978
a	O	O:0.999990
common	O	O:0.998623
timestamp	O	O:0.999372
,	O	O:0.999995
with	O	O:0.999942
a	O	O:0.999988
day	O	O:0.999921
of	O	O:0.999985
year	O	O:0.999169
field	O	O:0.999016
added	O	O:0.999717
,	O	O:0.999980
so	O	O:0.999971
looking	O	O:0.999514
something	O	O:0.999607
like	O	O:0.990583
:	O	O:0.999982
#CODE	O	O:0.999087
	
This	O	O:0.998984
works	O	O:0.999957
only	O	O:0.999614
if	O	O:0.999993
your	O	O:0.999452
object	O	O:0.997027
is	O	O:0.999994
table	O	O:0.998053
format	O	O:0.999226
(	O	O:0.999945
rather	O	O:0.999927
than	O	O:0.999517
fixed	O	O:0.999694
format	O	O:0.999021
)	O	O:0.999614
.	O	O:0.997839
	
Drop	O	O:0.997832
range	O	O:0.999703
of	O	O:0.999785
columns	O	O:0.998498
by	O	O:0.999952
labels	O	O:0.997509
	
You	O	O:0.999746
could	O	O:0.999288
put	O	O:0.996841
```	O	O:0.999404
[	O	O:0.999591
'	O	O:0.999963
col1	O	O:0.998034
']```	O	O:0.999513
at	O	O:0.999895
the	O	O:0.999826
end	O	O:0.994731
to	O	O:0.999956
get	O	O:0.999926
an	O	O:0.999906
int	O	O:0.995262
.	O	O:0.999643
	
Hence	O	O:0.999106
,	O	O:0.999980
the	O	O:0.999966
width	O	O:0.999370
of	O	O:0.999985
each	O	O:0.999723
bin	O	O:0.999885
over	O	O:0.999721
the	O	O:0.999841
interval	O	O:0.999133
from	O	O:0.999730
[	O	O:0.999972
-1	O	O:0.999993
,	O	O:0.999989
1	O	O:0.999973
]	O	O:0.999846
should	O	O:0.999319
be	O	O:0.999973
`	O	O:0.999937
2	O	O:0.999255
/	O	O:0.999915
10=	O	O:0.997603
0.20	O	O:0.983112
`	O	O:0.999838
;	O	O:0.999923
however	O	O:0.999605
,	O	O:0.999988
the	O	O:0.999899
graph	O	O:0.998625
does	O	O:0.999359
not	O	O:0.999975
have	O	O:0.999962
any	O	O:0.999937
bins	O	O:0.999853
with	O	O:0.999919
a	O	O:0.999971
width	O	O:0.999673
of	O	O:0.999541
0.20	O	O:0.915239
.	O	O:0.999478
	
For	O	O:0.999842
encoding	O	O:0.999768
training	O	O:0.999521
data	O	O:0.999959
you	O	O:0.999937
can	O	O:0.999903
use	O	O:0.999958
fit_transform	O	B-API:0.929348
which	O	O:0.999337
will	O	O:0.999488
discover	O	O:0.999716
the	O	O:0.999912
category	O	O:0.971372
labels	O	O:0.999188
and	O	O:0.999934
create	O	O:0.999391
appropriate	O	O:0.999805
dummy	O	O:0.996657
variables	O	O:0.996757
.	O	O:0.999565
	
I	O	O:0.999968
think	O	O:0.999723
you're	O	O:0.999316
confusing	O	O:0.999284
how	O	O:0.999936
to	O	O:0.999890
filter	O	O:0.999039
here	O	O:0.999402
,	O	O:0.999990
if	O	O:0.999974
you're	O	O:0.999713
looking	O	O:0.999431
for	O	O:0.999956
a	O	O:0.999938
specific	O	O:0.997023
value	O	O:0.999923
then	O	O:0.999081
`	O	O:0.999977
stock	O	O:0.985644
[	O	O:0.999992
stock	O	O:0.998784
[	O	O:0.999987
'	O	O:0.999972
Whs	O	O:0.999673
']	O	O:0.999902
==	O	O:0.999437
'	O	O:0.999648
VKO	O	O:0.995583
']`	O	O:0.999661
will	O	O:0.994233
return	O	O:0.998854
only	O	O:0.999711
the	O	O:0.999995
rows	O	O:0.998090
where	O	O:0.999888
that	O	O:0.999897
condition	O	O:0.998632
is	O	O:0.999986
satisfied	O	O:0.999586
,	O	O:0.999978
for	O	O:0.999991
your	O	O:0.999543
last	O	O:0.999816
part	O	O:0.999707
the	O	O:0.999798
reason	O	O:0.997578
you	O	O:0.999929
get	O	O:0.999860
an	O	O:0.999997
empty	O	O:0.999462
row	O	O:0.999551
is	O	O:0.999993
that	O	O:0.999739
you're	O	O:0.999933
slicing	O	O:0.999748
the	O	O:0.999930
first	O	O:0.998354
3	O	O:0.999980
rows	O	O:0.998579
and	O	O:0.999995
then	O	O:0.999858
comparing	O	O:0.999890
the	O	O:0.999954
first	O	O:0.998863
value	O	O:0.999859
with	O	O:0.999978
your	O	O:0.998488
string	O	O:0.998879
but	O	O:0.999852
the	O	O:0.999925
first	O	O:0.994476
string	O	O:0.999573
value	O	O:0.998408
is	O	O:0.999964
'	O	O:0.999444
VKO	O	O:0.995356
'	O	O:0.998794
and	O	O:0.999556
not	O	O:0.999247
'	O	O:0.999773
ZZZ	O	O:0.998648
'	O	O:0.999863
,	O	O:0.999980
you	O	O:0.999814
should	O	O:0.999188
do	O	O:0.999987
this	O	O:0.999901
:	O	O:0.999989
`	O	O:0.999940
stock	O	O:0.986904
[	O	O:0.999991
stock	O	O:0.998922
[	O	O:0.999987
'	O	O:0.999972
Whs	O	O:0.999673
']	O	O:0.999902
==	O	O:0.999486
'	O	O:0.999699
ZZZ	O	O:0.999649
']`	O	O:0.999936
to	O	O:0.999479
filter	O	O:0.998460
the	O	O:0.999789
resuls	O	O:0.996930
first	O	O:0.998334
	
I	O	O:0.999964
had	O	O:0.999808
changed	O	O:0.998965
the	O	O:0.999987
data	O	O:0.999491
on	O	O:0.999972
the	O	O:0.999985
local	O	O:0.994492
file	O	O:0.999059
.	O	O:0.999694
	
Note	O	O:0.999631
that	O	O:0.999899
this	O	O:0.999845
is	O	O:0.999991
slightly	O	O:0.999818
different	O	O:0.999808
as	O	O:0.999963
we	O	O:0.999953
are	O	O:0.999832
returning	O	O:0.999881
the	O	O:0.998649
first	O	O:0.995020
index	O	O:0.999181
here	O	O:0.998183
(	O	O:0.999959
and	O	O:0.999892
not	O	O:0.999698
the	O	O:0.999898
normally	O	O:0.994615
returned	O	O:0.999905
last	O	O:0.999003
,	O	O:0.999999
youy	O	O:0.998853
could	O	O:0.999723
do	O	O:0.999976
either	O	O:0.999795
)	O	O:0.999513
.	O	O:0.997853
	
I'm	O	O:0.999768
not	O	O:0.999940
sure	O	O:0.999747
how	O	O:0.999955
the	O	O:0.999908
archive	O	O:0.968834
block	O	O:0.998102
reading	O	O:0.996853
works	O	O:0.998531
and	O	O:0.999575
how	O	O:0.999915
much	O	O:0.999750
data	O	O:0.999886
it	O	O:0.999878
loads	O	O:0.999841
into	O	O:0.999704
memory	O	O:0.997673
,	O	O:0.999889
but	O	O:0.999836
it's	O	O:0.999595
clear	O	O:0.999789
that	O	O:0.999754
you	O	O:0.999909
will	O	O:0.999891
have	O	O:0.999974
to	O	O:0.999983
somehow	O	O:0.999990
control	O	O:0.998815
the	O	O:0.999998
size	O	O:0.999854
of	O	O:0.999987
the	O	O:0.999797
chunks	O	O:0.993555
.	O	O:0.999602
	
Regarding	O	O:0.999095
nesting	O	O:0.999355
of	O	O:0.999064
functions	O	O:0.998918
:	O	O:0.999996
if	O	O:0.999975
you	O	O:0.999952
believe	O	O:0.999897
a	O	O:0.999964
function	O	O:0.999569
has	O	O:0.999917
a	O	O:0.999964
general	O	O:0.988810
purpose	O	O:0.998745
or	O	O:0.999721
is	O	O:0.999952
reusable	O	O:0.998393
,	O	O:0.999996
then	O	O:0.999751
it	O	O:0.999951
should	O	O:0.999927
be	O	O:0.999993
defined	O	O:0.999784
at	O	O:0.999952
the	O	O:0.999933
top	O	O:0.998212
level	O	O:0.999678
of	O	O:0.999968
a	O	O:0.999948
module	O	O:0.998724
or	O	O:0.999967
some	O	O:0.999484
place	O	O:0.999830
where	O	O:0.999959
other	O	O:0.999888
functions	O	O:0.999731
can	O	O:0.999850
call	O	O:0.994990
it	O	O:0.999970
.	O	O:0.998826
	
I	O	O:0.999974
get	O	O:0.999817
an	O	O:0.999745
error	O	O:0.999489
saying	O	O:0.997952
:	O	O:0.999904
lambda	O	O:0.998412
(	O	O:0.999973
)	O	O:0.999958
takes	O	O:0.999880
exactly	O	O:0.999853
1	O	O:0.999735
argument	O	O:0.998640
(	O	O:0.999962
3	O	O:0.999962
given	O	O:0.998043
)	O	O:0.999859
	
You	O	O:0.999906
can	O	O:0.999730
get	O	O:0.999630
the	O	O:0.999995
list	O	O:0.996956
of	O	O:0.999947
columns	O	O:0.995761
with	O	O:0.999515
:	O	O:0.999947
#CODE	O	O:0.999727
	
One	O	O:0.999727
is	O	O:0.999931
I	O	O:0.999991
only	O	O:0.999834
wanted	O	O:0.999161
to	O	O:0.999925
get	O	O:0.999972
the	O	O:0.999995
mean	O	O:0.996844
of	O	O:0.999989
the	O	O:0.999985
next	O	O:0.999817
rows	O	O:0.999956
that	O	O:0.999959
relate	O	O:0.999988
to	O	O:0.999958
the	O	O:0.999998
same	O	O:0.999444
group	O	O:0.997462
.	O	O:0.999970
	
By	O	O:0.999526
default	O	O:0.999174
this	O	O:0.999898
will	O	O:0.999619
add	O	O:0.999941
a	O	O:0.999988
column	O	O:0.998034
of	O	O:0.999878
integers	O	O:0.994919
(	O	O:0.999991
because	O	O:0.999170
R	O	O:0.999991
factors	O	O:0.998540
are	O	O:0.999888
encoded	O	O:0.999554
as	O	O:0.999959
integers	O	O:0.998730
)	O	O:0.999680
.	O	O:0.997398
	
I	O	O:0.999938
am	O	O:0.999992
trying	O	O:0.999645
to	O	O:0.999957
calculate	O	O:0.999891
the	O	O:0.999981
percent	O	O:0.998019
change	O	O:0.999224
by	O	O:0.999945
month	O	O:0.999130
for	O	O:0.999957
each	O	O:0.996557
product	O	O:0.996586
.	O	O:0.999636
	
If	O	O:0.999856
i	O	O:0.999974
want	O	O:0.999923
only	O	O:0.997617
USA	O	O:0.999841
Equities	O	O:0.999402
vs	O	O:0.999940
all	O	O:0.999087
other	O	O:0.999892
equity	O	O:0.989908
and	O	O:0.999816
not	O	O:0.999543
the	O	O:0.999840
enitre	O	O:0.997453
89	O	O:0.999878
columns	O	O:0.999452
how	O	O:0.999970
do	O	O:0.999966
i	O	O:0.999995
do	O	O:0.999897
it	O	O:0.999947
?	O	O:0.999961
	
Pandas	O	O:0.995062
:	O	O:0.999971
Efficient	O	O:0.999874
way	O	O:0.999898
to	O	O:0.999959
get	O	O:0.999992
first	O	O:0.999463
row	O	O:0.999927
with	O	O:0.999295
element	O	O:0.999904
that	O	O:0.999714
is	O	O:0.999991
smaller	O	O:0.999966
than	O	O:0.999882
a	O	O:0.999980
given	O	O:0.997230
value	O	O:0.998952
	
I	O	O:0.999957
first	O	O:0.999261
thought	O	O:0.999462
this	O	O:0.999647
was	O	O:0.999926
a	O	O:0.999974
spacing	O	O:0.998431
issue	O	O:0.998729
in	O	O:0.999959
the	O	O:0.999855
columns	O	O:0.998138
values	O	O:0.999560
,	O	O:0.999999
so	O	O:0.999988
I	O	O:0.999989
replaced	O	O:0.999989
them	O	O:0.999235
with	O	O:0.999584
underscores	O	O:0.907251
,	O	O:0.999925
but	O	O:0.999708
it	O	O:0.999947
also	O	O:0.999242
doesn't	O	O:0.999887
work	O	O:0.993846
in	O	O:0.999951
columns	O	O:0.998894
which	O	O:0.999976
only	O	O:0.999870
contain	O	O:0.998967
a	O	O:0.999977
single	O	O:0.997137
word	O	O:0.996034
and	O	O:0.999905
no	O	O:0.999763
spaces	O	O:0.996842
?	O	O:0.999963
	
Are	O	O:0.999891
you	O	O:0.999864
getting	O	O:0.999742
the	O	O:0.999953
values	O	O:0.999564
from	O	O:0.999908
the	O	O:0.999939
GUI	O	O:0.999954
ok	O	O:0.999752
,	O	O:0.999958
but	O	O:0.999997
your	O	O:0.999377
calculations	O	O:0.997986
are	O	O:0.999936
returning	O	O:0.999293
nothin	O	O:0.936609
?	O	O:0.999967
	
This	O	O:0.996277
is	O	O:0.999971
not	O	O:0.999560
precisely	O	O:0.999760
what	O	O:0.999832
I'm	O	O:0.999781
after	O	O:0.998667
,	O	O:0.999955
but	O	O:0.999613
I	O	O:0.999976
think	O	O:0.998695
I'll	O	O:0.999635
have	O	O:0.999706
to	O	O:0.999970
write	O	O:0.999987
a	O	O:0.999996
loop	O	O:0.999499
top	O	O:0.997274
get	O	O:0.999763
that	O	O:0.997741
.	O	O:0.999830
	
Hence	O	O:0.999106
,	O	O:0.999980
the	O	O:0.999966
width	O	O:0.999370
of	O	O:0.999985
each	O	O:0.999723
bin	O	O:0.999885
over	O	O:0.999721
the	O	O:0.999841
interval	O	O:0.999133
from	O	O:0.999730
[	O	O:0.999972
-1	O	O:0.999993
,	O	O:0.999989
1	O	O:0.999973
]	O	O:0.999846
should	O	O:0.999319
be	O	O:0.999973
`	O	O:0.999937
2	O	O:0.999255
/	O	O:0.999915
10=	O	O:0.997603
0.20	O	O:0.983112
`	O	O:0.999838
;	O	O:0.999923
however	O	O:0.999605
,	O	O:0.999988
the	O	O:0.999899
graph	O	O:0.998625
does	O	O:0.999359
not	O	O:0.999975
have	O	O:0.999962
any	O	O:0.999937
bins	O	O:0.999853
with	O	O:0.999919
a	O	O:0.999971
width	O	O:0.999673
of	O	O:0.999541
0.20	O	O:0.915239
.	O	O:0.999478
	
I'm	O	O:0.999782
having	O	O:0.999705
a	O	O:0.999887
problem	O	O:0.998470
trying	O	O:0.999602
to	O	O:0.999906
get	O	O:0.999983
a	O	O:0.999986
character	O	O:0.999663
count	O	O:0.997888
column	O	O:0.999835
of	O	O:0.999971
the	O	O:0.999786
string	O	O:0.998350
values	O	O:0.998599
in	O	O:0.999936
another	O	O:0.999648
column	O	O:0.997223
,	O	O:0.999844
and	O	O:0.999852
haven't	O	O:0.998282
figured	O	O:0.998327
out	O	O:0.999804
how	O	O:0.999623
to	O	O:0.999944
do	O	O:0.999986
it	O	O:0.999990
efficiently	O	O:0.999052
.	O	O:0.999730
	
I	O	O:0.999994
think	O	O:0.999762
I	O	O:0.999962
get	O	O:0.999670
the	O	O:0.999688
idea	O	O:0.993429
.	O	O:0.999658
	
How	O	O:0.999959
can	O	O:0.999657
I	O	O:0.999998
get	O	O:0.999958
the	O	O:0.999852
position	O	O:0.996025
of	O	O:0.999950
index	O	O:0.996794
`	O	O:0.999987
18	O	O:0.997704
`	O	O:0.999949
?	O	O:0.999826
	
When	O	O:0.999190
using	O	O:0.999251
`	O	O:0.999842
groupy-apply	O	O:0.869274
`	O	O:0.999886
,	O	O:0.999847
instead	O	O:0.999962
of	O	O:0.999963
dropping	O	O:0.998314
the	O	O:0.999924
group	O	O:0.981999
key	O	O:0.998494
index	O	O:0.997221
using	O	O:0.997233
:	O	O:0.999714
#CODE	O	O:0.997900
	
No	O	O:0.999987
real	O	O:0.996984
advantage	O	O:0.999835
if	O	O:0.999981
there	O	O:0.998821
are	O	O:0.999857
just	O	O:0.999021
two	O	O:0.999842
categories	O	O:0.955940
:	O	O:0.999976
#CODE	O	O:0.999665
	
@USER	O	O:0.999409
I	O	O:0.999977
suspect	O	O:0.999836
something	O	O:0.999667
else	O	O:0.995843
is	O	O:0.999993
going	O	O:0.998839
on	O	O:0.999978
then	O	O:0.999029
,	O	O:0.999998
because	O	O:0.999935
when	O	O:0.997406
I	O	O:0.999997
memory	O	O:0.999856
profile	O	O:0.974046
this	O	O:0.999593
way	O	O:0.999036
(	O	O:0.999984
with	O	O:0.999331
`	O	O:0.999992
drop	O	O:0.972406
`)	O	O:0.999990
using	O	O:0.999246
the	O	O:0.999305
snippet	O	O:0.996873
that	O	O:0.999125
Michael	O	O:0.999719
Laszlo	O	O:0.999054
posted	O	O:0.999061
,	O	O:0.999966
I	O	O:0.999984
do	O	O:0.999950
not	O	O:0.999243
see	O	O:0.999917
memory	O	O:0.998365
growth	O	O:0.998157
.	O	O:0.999075
	
Of	O	O:0.999925
course	O	O:0.998731
you	O	O:0.999923
may	O	O:0.999742
not	O	O:0.999924
like	O	O:0.998869
the	O	O:0.999949
index	O	O:0.997801
as	O	O:0.999987
tuples	O	O:0.999146
;	O	O:0.999999
you	O	O:0.999706
could	O	O:0.999803
reset	O	O:0.999318
the	O	O:0.999817
index	O	O:0.994771
within	O	O:0.998095
the	O	O:0.999975
list	O	O:0.998222
comprehension	O	O:0.999909
to	O	O:0.999968
get	O	O:0.999983
the	O	O:0.999963
following	O	O:0.999422
if	O	O:0.999960
you	O	O:0.999802
prefer	O	O:0.998021
(	O	O:0.999984
for	O	O:0.999940
example	O	O:0.995523
,	O	O:0.999995
this	O	O:0.999959
if	O	O:0.999886
for	O	O:0.999986
part	O	O:0.989835
1	O	O:0.996725
):	O	O:0.999936
#CODE	O	O:0.998394
	
Here	O	O:0.996859
is	O	O:0.999972
how	O	O:0.999675
I	O	O:0.999989
am	O	O:0.999994
trying	O	O:0.999130
to	O	O:0.999945
get	O	O:0.999904
the	O	O:0.999945
output	O	O:0.999027
to	O	O:0.999877
look	O	O:0.999726
like	O	O:0.998488
:	O	O:0.999961
#CODE	O	O:0.999070
	
memory	O	O:0.996583
efficient	O	O:0.997448
Python	O	O:0.992480
(	O	O:0.999994
pandas	O	O:0.998212
)	O	O:0.999993
aggregates	O	O:0.999266
of	O	O:0.999989
categories	O	O:0.994636
from	O	O:0.999929
one	O	O:0.999859
csv	O	O:0.999979
file	O	O:0.999775
per	O	O:0.999644
period	O	O:0.994758
	
But	O	O:0.999905
this	O	O:0.999861
last	O	O:0.999882
line	O	O:0.999826
generate	O	O:0.999711
the	O	O:0.999893
error	O	O:0.999338
message	O	O:0.996144
:	O	O:0.999960
`	O	O:0.999964
no	O	O:0.999818
item	O	O:0.999955
named	O	O:0.999940
timestamp	O	O:0.997084
`	O	O:0.999857
.	O	O:0.997654
	
The	O	O:0.999854
problem	O	O:0.999572
here	O	O:0.998785
,	O	O:0.999993
well	O	O:0.999419
the	O	O:0.999834
biggest	O	O:0.995867
one	O	O:0.999897
,	O	O:0.999931
is	O	O:0.999998
that	O	O:0.999906
your	O	O:0.999781
`	O	O:0.999994
data	O	O:0.998844
`	O	O:0.999964
is	O	O:0.999877
string	O	O:0.996783
,	O	O:0.999968
not	O	O:0.999826
valid	O	O:0.999885
data	O	O:0.999935
structure	O	O:0.999769
,	O	O:0.999997
same	O	O:0.999917
thing	O	O:0.999527
with	O	O:0.999873
dictionary	O	O:0.995874
inside	O	O:0.999678
it	O	O:0.999907
,	O	O:0.999987
you	O	O:0.999954
creating	O	O:0.999545
strings	O	O:0.998668
,	O	O:0.999996
not	O	O:0.999976
data	O	O:0.999838
structures	O	O:0.999594
.	O	O:0.999875
	
I	O	O:0.999967
also	O	O:0.999947
want	O	O:0.999857
to	O	O:0.999844
create	O	O:0.999990
a	O	O:0.999994
new	O	O:0.999656
column	O	O:0.999892
that	O	O:0.999885
shows	O	O:0.999852
the	O	O:0.999954
difference	O	O:0.999226
in	O	O:0.999990
days	O	O:0.999558
between	O	O:0.999473
the	O	O:0.999865
end	O	O:0.956693
and	O	O:0.999909
begin	O	O:0.997888
dates	O	O:0.990535
.	O	O:0.999357
	
In	O	O:0.999905
the	O	O:0.999974
next	O	O:0.996139
column	O	O:0.999075
(	O	O:0.999996
B	O	O:0.999865
)	O	O:0.999967
,	O	O:0.999806
I	O	O:0.999997
want	O	O:0.999802
to	O	O:0.999530
create	O	O:0.999868
an	O	O:0.999955
indexed	O	O:0.999718
series	O	O:0.999760
that	O	O:0.999640
begins	O	O:0.999781
at	O	O:0.999865
1000	O	O:0.997405
based	O	O:0.999280
on	O	O:0.999921
the	O	O:0.999902
percent	O	O:0.998220
changes	O	O:0.996168
.	O	O:0.999833
	
I	O	O:0.999961
can't	O	O:0.999823
use	O	O:0.999655
fixed	O	O:0.998523
position	O	O:0.998061
to	O	O:0.999959
slice	O	O:0.997954
it	O	O:0.999906
.	O	O:0.999843
	
This	O	O:0.999894
gets	O	O:0.999766
you	O	O:0.999955
to	O	O:0.999992
where	O	O:0.999960
I	O	O:0.999992
am	O	O:0.999963
.	O	O:0.998685
	
I	O	O:0.999978
am	O	O:0.999957
using	O	O:0.999767
this	O	O:0.999632
to	O	O:0.999904
generate	O	O:0.999936
nodes	O	O:0.998292
in	O	O:0.999991
a	O	O:0.999988
graph	O	O:0.996922
,	O	O:0.999986
if	O	O:0.999887
x1	O	O:0.998970
,	O	O:0.999962
x2	O	O:0.999661
are	O	O:0.999673
not	O	O:0.999842
exactly	O	O:0.999736
equal	O	O:0.998483
,	O	O:0.999990
networkx	O	O:0.998891
recognizes	O	O:0.999971
them	O	O:0.999947
as	O	O:0.999994
different	O	O:0.999322
nodes	O	O:0.994584
,	O	O:0.999992
if	O	O:0.999953
x1=x2	O	O:0.999374
,	O	O:0.999971
i	O	O:0.999995
get	O	O:0.999629
a	O	O:0.999927
recombinant	O	O:0.999173
tree	O	O:0.998371
which	O	O:0.998961
is	O	O:0.999980
what	O	O:0.998628
i	O	O:0.999988
want	O	O:0.999102
.	O	O:0.998554
	
My	O	O:0.999943
example	O	O:0.992693
was	O	O:0.999821
not	O	O:0.999823
good	O	O:0.999698
enough	O	O:0.999849
,	O	O:0.999992
as	O	O:0.999995
your	O	O:0.999459
script	O	O:0.999869
smartly	O	O:0.999851
took	O	O:0.999749
the	O	O:0.999995
size	O	O:0.999925
from	O	O:0.999964
the	O	O:0.999988
length	O	O:0.999832
of	O	O:0.999957
the	O	O:0.999805
df	O	O:0.996373
.	O	O:0.999575
	
iPython's	O	O:0.998823
Rmagic	O	O:0.991473
is	O	O:0.999959
already	O	O:0.999726
able	O	O:0.999766
to	O	O:0.999956
perform	O	O:0.999755
an	O	O:0.999976
automagic	O	O:0.999754
conversion	O	O:0.999201
between	O	O:0.999260
the	O	O:0.999959
two	O	O:0.999373
in	O	O:0.999993
a	O	O:0.999986
number	O	O:0.999406
of	O	O:0.999639
situations	O	O:0.998829
,	O	O:0.999938
and	O	O:0.999919
might	O	O:0.999437
be	O	O:0.999928
a	O	O:0.999979
good	O	O:0.998118
way	O	O:0.999886
to	O	O:0.999951
get	O	O:0.999903
familiar	O	O:0.999911
with	O	O:0.999092
Python	O	O:0.997243
.	O	O:0.999841
	
So	O	O:0.999938
if	O	O:0.999993
your	O	O:0.999836
dataset	O	O:0.997977
is	O	O:0.999989
really	O	O:0.998825
large	O	O:0.999166
,	O	O:0.999973
perhaps	O	O:0.998839
store	O	O:0.999857
them	O	O:0.999881
first	O	O:0.999681
in	O	O:0.999919
on-disk	O	O:0.999535
database	O	O:0.999768
/	O	O:0.999939
HDF	O	O:0.999086
rather	O	O:0.999928
than	O	O:0.998953
csv	O	O:0.999608
file	O	O:0.999270
and	O	O:0.999951
sort	O	O:0.999673
them	O	O:0.999639
there	O	O:0.998368
,	O	O:0.999772
and	O	O:0.999930
then	O	O:0.999219
query	O	O:0.956286
.	O	O:0.999663
	
One	O	O:0.999749
had	O	O:0.999804
no	O	O:0.999955
problem	O	O:0.999864
at	O	O:0.999976
all	O	O:0.996081
(	O	O:0.999969
the	O	O:0.999874
xlsx	O	O:0.999045
file	O	O:0.999751
,	O	O:0.999999
example	O	O:0.999881
2	O	O:0.999845
)	O	O:0.999804
and	O	O:0.999776
the	O	O:0.999839
other	O	O:0.989768
(	O	O:0.999966
xls	O	O:0.999840
,	O	O:0.999999
example	O	O:0.999755
1	O	O:0.999899
)	O	O:0.999962
had	O	O:0.999829
a	O	O:0.999997
difference	O	O:0.998128
between	O	O:0.997405
the	O	O:0.999935
columns	O	O:0.984607
.	O	O:0.999818
	
then	O	O:0.999413
with	O	O:0.999968
the	O	O:0.999663
`	O	O:0.999875
sorted	O	O:0.997907
`	O	O:0.999935
function	O	O:0.998368
and	O	O:0.999939
`	O	O:0.999979
datetime	O	O:0.849453
`	O	O:0.999975
module	O	O:0.992062
(	O	O:0.999994
remember	O	O:0.999837
the	O	O:0.999773
`	O	O:0.999899
sorted	O	O:0.999028
`	O	O:0.999978
function	O	O:0.999417
change	O	O:0.999784
the	O	O:0.998814
`	O	O:0.999946
data	O	O:0.994453
`	O	O:0.999985
it	O	O:0.999986
self	O	O:0.998529
)	O	O:0.999891
#CODE	O	O:0.997627
	
BUT	O	O:0.999909
,	O	O:0.999975
I	O	O:0.999987
get	O	O:0.999797
the	O	O:0.998703
"	O	O:0.999622
SettingWithCopyWarning	O	O:0.997445
"	O	O:0.998795
:	O	O:0.999904
	
This	O	O:0.998511
is	O	O:0.999967
machine	O	O:0.998499
generated	O	O:0.999877
data	O	O:0.999150
.	O	O:0.999729
	
You	O	O:0.999803
can't	O	O:0.999531
use	O	O:0.999676
`	O	O:0.999895
or	O	O:0.996240
`	O	O:0.999975
with	O	O:0.999025
arrays	O	O:0.999727
,	O	O:0.999993
if	O	O:0.999965
you	O	O:0.999806
try	O	O:0.999958
this	O	O:0.999936
you	O	O:0.999953
get	O	O:0.999850
an	O	O:0.999982
error	O	O:0.999008
`	O	O:0.999890
ValueError	O	O:0.994839
:	O	O:0.999986
The	O	O:0.999982
truth	O	O:0.999903
value	O	O:0.999885
of	O	O:0.999966
a	O	O:0.999920
Series	O	O:0.945265
is	O	O:0.999930
ambiguous	O	O:0.998335
.	O	O:0.999485
	
Incidentally	O	O:0.996495
,	O	O:0.999997
this	O	O:0.999466
is	O	O:0.999976
the	O	O:0.999966
same	O	O:0.998348
result	O	O:0.999918
that	O	O:0.999975
you	O	O:0.999958
would	O	O:0.999831
get	O	O:0.999937
with	O	O:0.999952
the	O	O:0.999903
Spearman	O	O:0.998817
R	O	O:0.999993
coefficient	O	O:0.999878
as	O	O:0.999971
well	O	O:0.995145
.	O	O:0.999641
	
How	O	O:0.999887
could	O	O:0.999269
I	O	O:0.999998
do	O	O:0.999976
to	O	O:0.999978
have	O	O:0.999974
exactly	O	O:0.999901
one	O	O:0.999946
calendar	O	O:0.999932
year	O	O:0.999905
between	O	O:0.998718
dates	O	O:0.999151
in	O	O:0.999985
spite	O	O:0.999943
of	O	O:0.999989
leap	O	O:0.995993
years	O	O:0.999486
?	O	O:0.999930
	
"	O	O:0.999412
However	O	O:0.999460
,	O	O:0.999964
we	O	O:0.999957
still	O	O:0.998831
have	O	O:0.999910
one	O	O:0.999898
large	O	O:0.999696
difference	O	O:0.997556
.	O	O:0.999150
	
All	O	O:0.999878
that	O	O:0.999564
remains	O	O:0.999551
is	O	O:0.999982
to	O	O:0.999911
merged	O	O:0.999963
the	O	O:0.999981
contents	O	O:0.998926
of	O	O:0.999979
the	O	O:0.999882
second-level	O	O:0.997038
dictionaries	O	O:0.988809
:	O	O:0.999980
#CODE	O	O:0.999776
	
I	O	O:0.999939
am	O	O:0.999988
trying	O	O:0.999363
to	O	O:0.999953
create	O	O:0.999959
a	O	O:0.999993
single	O	O:0.999093
image	O	O:0.999908
with	O	O:0.999732
heatmaps	O	O:0.998917
representing	O	O:0.999859
the	O	O:0.999927
correlation	O	O:0.999780
of	O	O:0.999993
features	O	O:0.999110
of	O	O:0.999996
data	O	O:0.999794
points	O	O:0.998871
for	O	O:0.999977
each	O	O:0.999042
label	O	O:0.991084
separately	O	O:0.999478
.	O	O:0.999175
	
I	O	O:0.999977
have	O	O:0.999699
two	O	O:0.999629
Series	O	O:0.985221
which	O	O:0.999904
have	O	O:0.999849
a	O	O:0.999974
format	O	O:0.999731
equal	O	O:0.994747
to	O	O:0.999960
this	O	O:0.999531
:	O	O:0.999979
#CODE	O	O:0.999438
	
However	O	O:0.999290
,	O	O:0.999994
when	O	O:0.999542
I	O	O:0.999997
do	O	O:0.999997
the	O	O:0.999925
following	O	O:0.998142
,	O	O:0.999976
the	O	O:0.999963
error	O	O:0.999755
does	O	O:0.999368
not	O	O:0.999949
show	O	O:0.999852
up	O	O:0.999949
and	O	O:0.999898
I	O	O:0.999988
get	O	O:0.999577
the	O	O:0.999509
expected	O	O:0.995091
result	O	O:0.993077
:	O	O:0.999984
#CODE	O	O:0.999758
	
As	O	O:0.999975
brackets	O	O:0.999533
are	O	O:0.999995
part	O	O:0.999371
of	O	O:0.999956
the	O	O:0.999781
regex	O	O:0.987024
syntax	O	O:0.998983
if	O	O:0.999934
you're	O	O:0.999913
trying	O	O:0.999207
to	O	O:0.999874
match	O	O:0.997470
literal	O	O:0.999053
brackets	O	O:0.999547
you	O	O:0.999958
need	O	O:0.999488
to	O	O:0.999937
escape	O	O:0.999987
them	O	O:0.997915
:	O	O:0.999967
#CODE	O	O:0.999527
	
Yeah	O	O:0.999133
,	O	O:0.999946
the	O	O:0.999901
best	O	O:0.998789
idea	O	O:0.999691
I've	O	O:0.999085
had	O	O:0.999962
this	O	O:0.999628
whole	O	O:0.999922
time	O	O:0.999753
was	O	O:0.999981
to	O	O:0.999978
actually	O	O:0.999989
sign	O	O:0.999882
up	O	O:0.999974
to	O	O:0.999978
SO	O	O:0.999999
so	O	O:0.999989
I	O	O:0.999996
can	O	O:0.999987
post	O	O:0.998557
my	O	O:0.999986
own	O	O:0.999739
questions	O	O:0.999794
instead	O	O:0.999375
of	O	O:0.999963
trying	O	O:0.999401
to	O	O:0.999870
funble	O	O:0.999894
my	O	O:0.999841
way	O	O:0.999861
through	O	O:0.999518
problems	O	O:0.999605
by	O	O:0.999982
patching	O	O:0.999322
together	O	O:0.999855
answers	O	O:0.999892
to	O	O:0.999938
other	O	O:0.999983
peoples	O	O:0.997597
questions	O	O:0.999816
-	O	O:0.999996
sometimes	O	O:0.999954
what	O	O:0.999529
I	O	O:0.999997
need	O	O:0.999912
just	O	O:0.993301
isn't	O	O:0.999889
covered	O	O:0.999023
in	O	O:0.999929
other	O	O:0.999884
people's	O	O:0.998537
questions	O	O:0.998443
.	O	O:0.999747
	
But	O	O:0.999916
when	O	O:0.994271
I	O	O:0.999988
try	O	O:0.999750
and	O	O:0.997594
import	O	O:0.999253
pandas	O	O:0.989529
I	O	O:0.999940
get	O	O:0.995251
:	O	O:0.999832
#CODE	O	O:0.999381
	
However	O	O:0.999701
,	O	O:0.999975
I	O	O:0.999992
can't	O	O:0.999810
get	O	O:0.999703
the	O	O:0.999961
column	O	O:0.998966
to	O	O:0.999996
fill	O	O:0.994939
up	O	O:0.999987
with	O	O:0.999906
the	O	O:0.999935
appropriate	O	O:0.998588
user	O	O:0.999503
inputted	O	O:0.999835
value	O	O:0.998528
.	O	O:0.999492
	
Also	O	O:0.998590
I'm	O	O:0.999919
not	O	O:0.999545
getting	O	O:0.999548
any	O	O:0.999504
traceback	O	O:0.998215
messages	O	O:0.998498
but	O	O:0.999838
I	O	O:0.999995
think	O	O:0.997914
I	O	O:0.999990
have	O	O:0.999460
an	O	O:0.999976
idea	O	O:0.999909
of	O	O:0.999974
where	O	O:0.999532
my	O	O:0.999958
problem	O	O:0.999533
may	O	O:0.999702
be	O	O:0.999745
.	O	O:0.999302
	
Basically	O	O:0.998383
I'm	O	O:0.999903
trying	O	O:0.999605
to	O	O:0.999886
get	O	O:0.999695
at	O	O:0.999976
this	O	O:0.997190
:	O	O:0.999975
#CODE	O	O:0.999072
	
So	O	O:0.999988
this	O	O:0.998367
is	O	O:0.999989
not	O	O:0.999783
a	O	O:0.999986
fully	O	O:0.997455
working	O	O:0.997753
answer	O	O:0.987990
,	O	O:0.999897
but	O	O:0.999840
maybe	O	O:0.999748
it	O	O:0.999931
can	O	O:0.999844
be	O	O:0.999997
extended	O	O:0.999947
to	O	O:0.999966
ultimatively	O	O:0.999864
get	O	O:0.999667
you	O	O:0.999904
there	O	O:0.999038
.	O	O:0.999708
	
I	O	O:0.999989
have	O	O:0.999833
a	O	O:0.999935
pandas	O	O:0.995689
Series	O	O:0.987777
holding	O	O:0.999063
one	O	O:0.999843
numpy	O	O:0.999579
array	O	O:0.999680
per	O	O:0.999879
entry	O	O:0.994826
(	O	O:0.999996
same	O	O:0.999768
length	O	O:0.999354
for	O	O:0.999961
all	O	O:0.998789
entries	O	O:0.992407
)	O	O:0.999522
and	O	O:0.999162
I	O	O:0.999909
would	O	O:0.999803
like	O	O:0.998778
to	O	O:0.999926
convert	O	O:0.999936
this	O	O:0.999973
to	O	O:0.999989
a	O	O:0.999995
2D	O	O:0.999945
numpy	O	O:0.995451
array	O	O:0.998618
.	O	O:0.999511
	
For	O	O:0.999859
example	O	O:0.998572
,	O	O:0.999967
let's	O	O:0.999973
say	O	O:0.999685
I	O	O:0.999994
want	O	O:0.999946
to	O	O:0.998985
select	O	O:0.999759
50%	O	O:0.991253
(	O	O:0.999789
but	O	O:0.999971
this	O	O:0.999874
could	O	O:0.999313
change	O	O:0.997899
)	O	O:0.998583
.	O	O:0.995940
	
For	O	O:0.999959
this	O	O:0.999863
purpose	O	O:0.998163
I	O	O:0.999858
would	O	O:0.999978
like	O	O:0.999501
to	O	O:0.999991
find	O	O:0.999930
the	O	O:0.999981
soonest	O	O:0.999040
date	O	O:0.999498
(	O	O:0.999997
month	O	O:0.999756
)	O	O:0.999814
and	O	O:0.999772
from	O	O:0.999918
there	O	O:0.996740
start	O	O:0.999048
counting	O	O:0.998738
months	O	O:0.994179
and	O	O:0.999936
their	O	O:0.998915
averages	O	O:0.969856
.	O	O:0.998785
	
You've	O	O:0.998802
changed	O	O:0.999889
your	O	O:0.999902
data	O	O:0.999910
,	O	O:0.999995
so	O	O:0.999989
the	O	O:0.999953
script	O	O:0.999805
as	O	O:0.999943
written	O	O:0.998198
doesn't	O	O:0.999753
work	O	O:0.994546
.	O	O:0.999618
	
Hopefully	O	O:0.997980
you'll	O	O:0.999225
get	O	O:0.999629
an	O	O:0.999898
answer	O	O:0.999867
soon	O	O:0.997974
.	O	O:0.999628
	
This	O	O:0.999075
should	O	O:0.999731
get	O	O:0.999930
you	O	O:0.999952
to	O	O:0.999984
the	O	O:0.999995
point	O	O:0.998875
in	O	O:0.999996
your	O	O:0.999974
code	O	O:0.999905
where	O	O:0.999868
you	O	O:0.999808
start	O	O:0.999262
dropping	O	O:0.999347
columns	O	O:0.995237
and	O	O:0.999940
start	O	O:0.997555
concatenating	O	O:0.993969
.	O	O:0.999324
	
So	O	O:0.999894
,	O	O:0.999989
if	O	O:0.999943
k	O	O:0.999663
were	O	O:0.999784
equal	O	O:0.999692
to	O	O:0.999937
2	O	O:0.999955
,	O	O:0.999778
and	O	O:0.999930
this	O	O:0.999829
were	O	O:0.999670
my	O	O:0.999971
data	O	O:0.999622
frame	O	O:0.998594
:	O	O:0.999971
#CODE	O	O:0.999695
	
It	O	O:0.999987
seems	O	O:0.999878
as	O	O:0.999981
though	O	O:0.999712
the	O	O:0.999830
second	O	O:0.994743
approach	O	O:0.999381
,	O	O:0.999984
using	O	O:0.999635
"	O	O:0.998640
where	O	O:0.989230
"	O	O:0.999513
is	O	O:0.999962
only	O	O:0.999657
returning	O	O:0.999985
data	O	O:0.999870
from	O	O:0.999840
the	O	O:0.999987
last	O	O:0.999774
few	O	O:0.999950
appended	O	O:0.999871
files	O	O:0.998880
,	O	O:0.999988
while	O	O:0.999805
the	O	O:0.999947
first	O	O:0.999516
approach	O	O:0.999032
is	O	O:0.999929
returning	O	O:0.999738
much	O	O:0.999746
more	O	O:0.999833
data	O	O:0.999335
.	O	O:0.999687
	
I	O	O:0.999990
have	O	O:0.999769
to	O	O:0.999589
improve	O	O:0.999989
this	O	O:0.999910
to	O	O:0.999973
get	O	O:0.999973
rid	O	O:0.999841
of	O	O:0.999945
redundancy	O	O:0.998287
,	O	O:0.999965
and	O	O:0.999893
I	O	O:0.999950
am	O	O:0.999943
not	O	O:0.999592
sure	O	O:0.999883
how	O	O:0.999961
to	O	O:0.999980
go	O	O:0.999946
about	O	O:0.999941
this	O	O:0.998421
.	O	O:0.999585
	
Are	O	O:0.999758
you	O	O:0.999972
able	O	O:0.999779
to	O	O:0.999993
post	O	O:0.998687
raw	O	O:0.999935
data	O	O:0.999475
and	O	O:0.999984
code	O	O:0.999763
to	O	O:0.999868
reproduce	O	O:0.999981
this	O	O:0.999614
issue	O	O:0.999751
?	O	O:0.999934
	
The	O	O:0.999809
relative	O	O:0.999628
size	O	O:0.998968
between	O	O:0.999726
consecutive	O	O:0.997689
levels	O	O:0.908556
.	O	O:0.999372
	
This	O	O:0.999765
will	O	O:0.999891
potentially	O	O:0.999184
cater	O	O:0.998626
the	O	O:0.999945
corner	O	O:0.999605
cases	O	O:0.999208
if	O	O:0.999993
you	O	O:0.999919
happen	O	O:0.974646
to	O	O:0.999994
have	O	O:0.999855
conditions	O	O:0.999826
like	O	O:0.999622
:	O	O:0.999993
"	O	O:0.999960
value	O	O:0.999300
"	O	O:0.999876
360	O	O:0.999615
then	O	O:0.997738
+360	O	O:0.999901
else	O	O:0.997367
-360	O	O:0.998675
but	O	O:0.999923
the	O	O:0.999973
sequence	O	O:0.998452
of	O	O:0.999977
the	O	O:0.999851
update	O	O:0.998936
will	O	O:0.999274
cause	O	O:0.999847
the	O	O:0.999962
results	O	O:0.998876
reapply	O	O:0.996391
,	O	O:0.999989
ie	O	O:0.999963
.	O	O:0.999311
	
I'll	O	O:0.999045
put	O	O:0.999337
an	O	O:0.999963
example	O	O:0.999262
of	O	O:0.999979
what	O	O:0.999029
I'm	O	O:0.999976
suggesting	O	O:0.999835
in	O	O:0.999937
my	O	O:0.999689
answer	O	O:0.999226
.	O	O:0.998980
	
But	O	O:0.999796
you	O	O:0.999857
said	O	O:0.999786
you	O	O:0.999975
want	O	O:0.999980
only	O	O:0.999641
the	O	O:0.999996
time	O	O:0.999911
points	O	O:0.999799
from	O	O:0.999937
the	O	O:0.999967
longest	O	O:0.999061
`	O	O:0.999978
csv	O	O:0.986143
`	O	O:0.999980
.	O	O:0.998391
	
replacing	O	O:0.999517
this	O	O:0.999276
in	O	O:0.999977
code	O	O:0.999816
just	O	O:0.999939
drop	O	O:0.998181
those	O	O:0.999763
whole	O	O:0.999441
rows	O	O:0.998199
...	O	O:0.997671
	
Thank	O	O:0.999175
you	O	O:0.999627
for	O	O:0.999882
response	O	O:0.998158
and	O	O:0.999567
for	O	O:0.999929
helping	O	O:0.996553
me	O	O:0.999806
get	O	O:0.999433
to	O	O:0.999992
next	O	O:0.999966
level	O	O:0.999683
of	O	O:0.999961
pyhton	O	O:0.985083
,	O	O:0.999998
great	O	O:0.999593
stuff	O	O:0.998343
!	O	O:0.999946
	
For	O	O:0.999825
instance	O	O:0.999451
,	O	O:0.999995
you	O	O:0.999799
can	O	O:0.999689
insert	O	O:0.998828
new	O	O:0.999822
values	O	O:0.999288
into	O	O:0.998407
the	O	O:0.999797
index	O	O:0.885760
(	O	O:0.999915
and	O	O:0.999987
even	O	O:0.998877
choose	O	O:0.999488
what	O	O:0.999728
value	O	O:0.999587
it	O	O:0.999825
should	O	O:0.999729
have	O	O:0.992075
):	O	O:0.999977
#CODE	O	O:0.999312
	
What	O	O:0.998156
I	O	O:0.999994
need	O	O:0.999794
to	O	O:0.999922
do	O	O:0.999993
is	O	O:0.999998
to	O	O:0.999938
compute	O	O:0.999943
the	O	O:0.999935
average	O	O:0.999732
temperature	O	O:0.999047
for	O	O:0.999983
every	O	O:0.999054
run	O	O:0.999300
,	O	O:0.999994
averaging	O	O:0.999874
all	O	O:0.997525
the	O	O:0.999884
temperature	O	O:0.997431
measurements	O	O:0.999709
belonging	O	O:0.999940
to	O	O:0.999983
a	O	O:0.999988
run	O	O:0.995908
.	O	O:0.999624
	
@USER	O	O:0.999127
I	O	O:0.999983
get	O	O:0.998844
`	O	O:0.999617
Type	O	O:0.962726
Error	O	O:0.999679
:	O	O:0.999243
'	O	O:0.999970
bool	O	O:0.937078
'	O	O:0.999942
object	O	O:0.994364
is	O	O:0.999970
not	O	O:0.999741
callable	O	O:0.999399
`	O	O:0.999997
when	O	O:0.995291
I	O	O:0.999999
do	O	O:0.999996
that	O	O:0.997132
	
For	O	O:0.999977
your	O	O:0.999264
specific	O	O:0.999434
request	O	O:0.999777
of	O	O:0.999965
entries	O	O:0.994353
between	O	O:0.998499
12:00	O	O:0.999576
to	O	O:0.999740
13:00	O	O:0.999610
for	O	O:0.999963
every	O	O:0.999226
single	O	O:0.999754
day	O	O:0.999904
,	O	O:0.999998
you	O	O:0.999973
can	O	O:0.999881
fetch	O	O:0.999981
the	O	O:0.999989
rows	O	O:0.998023
with	O	O:0.998499
:	O	O:0.999985
#CODE	O	O:0.999845
	
Also	O	O:0.998986
,	O	O:0.999996
their	O	O:0.999572
order	O	O:0.999473
matters	O	O:0.984696
(	O	O:0.999999
they	O	O:0.999723
are	O	O:0.999737
sorted	O	O:0.999744
by	O	O:0.999957
decreasing	O	O:0.999744
standard	O	O:0.997056
deviation	O	O:0.999178
across	O	O:0.999946
rows	O	O:0.997098
and	O	O:0.999812
should	O	O:0.999424
appear	O	O:0.932897
in	O	O:0.999973
this	O	O:0.999635
order	O	O:0.999869
in	O	O:0.999899
the	O	O:0.999742
heatmap	O	O:0.942820
.	O	O:0.999848
)	O	O:0.999787
	
I'm	O	O:0.999832
not	O	O:0.999718
averse	O	O:0.999824
the	O	O:0.999898
reformatting	O	O:0.999363
the	O	O:0.999952
data	O	O:0.999732
in	O	O:0.999963
Pandas	O	O:0.999896
-->	O	O:0.999714
dumping	O	O:0.998066
to	O	O:0.999696
CSV	O	O:0.999898
-->	O	O:0.999235
importing	O	O:0.999025
to	O	O:0.999568
NetworkX	O	O:0.998439
,	O	O:0.999914
but	O	O:0.999828
it	O	O:0.999974
seems	O	O:0.999839
as	O	O:0.999995
if	O	O:0.999921
I	O	O:0.999976
should	O	O:0.999706
be	O	O:0.999990
able	O	O:0.999953
to	O	O:0.999953
generate	O	O:0.999980
the	O	O:0.999985
edges	O	O:0.994725
from	O	O:0.999337
the	O	O:0.999875
index	O	O:0.998589
and	O	O:0.999956
the	O	O:0.999988
nodes	O	O:0.998207
from	O	O:0.999876
the	O	O:0.999942
values	O	O:0.998768
.	O	O:0.999709
	
What	O	O:0.997780
is	O	O:0.999974
the	O	O:0.999850
simplest	O	O:0.999682
way	O	O:0.999931
to	O	O:0.999979
get	O	O:0.999990
a	O	O:0.999994
sum	O	O:0.997447
of	O	O:0.999994
only	O	O:0.999583
numbers	O	O:0.998939
across	O	O:0.999754
the	O	O:0.999971
entire	O	O:0.995941
frame	O	O:0.999729
?	O	O:0.999966
	
I	O	O:0.999982
think	O	O:0.999771
you	O	O:0.999908
mean	O	O:0.997397
a	O	O:0.999977
Lorenz	O	O:0.999257
plot	O	O:0.962576
:	O	O:0.999971
#URL	O	O:0.999766
This	O	O:0.999279
would	O	O:0.999945
make	O	O:0.999470
sense	O	O:0.999986
then	O	O:0.999755
as	O	O:0.999992
it	O	O:0.999977
requires	O	O:0.999908
a	O	O:0.999990
specific	O	O:0.999859
preordering	O	O:0.998323
of	O	O:0.999914
the	O	O:0.999853
data	O	O:0.999197
.	O	O:0.999723
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
Despite	O	O:0.999280
the	O	O:0.999919
title	O	O:0.999223
,	O	O:0.999991
similar	O	O:0.999989
problems	O	O:0.999805
can	O	O:0.999752
occur	O	O:0.999880
with	O	O:0.999697
other	O	O:0.999855
operating	O	O:0.999943
systems	O	O:0.999503
if	O	O:0.999961
you	O	O:0.999837
mix	O	O:0.961158
32-bit	O	O:0.998788
and	O	O:0.999865
64-fit	O	O:0.998091
versions	O	O:0.988529
.	O	O:0.999520
	
Use	O	O:0.999583
`	O	O:0.999935
select_as_coordinates	O	O:0.953388
`	O	O:0.999996
to	O	O:0.999977
actually	O	O:0.999992
execute	O	O:0.999918
your	O	O:0.999900
query	O	O:0.933730
;	O	O:0.999997
this	O	O:0.999345
returns	O	O:0.999906
an	O	O:0.999157
`	O	O:0.999972
Int64Index	O	O:0.997840
`	O	O:0.999994
of	O	O:0.999949
the	O	O:0.999975
row	O	O:0.999684
number	O	O:0.997380
(	O	O:0.999988
the	O	O:0.999991
coordinates	O	O:0.947173
)	O	O:0.999868
.	O	O:0.999540
	
Somehow	O	O:0.999591
create	O	O:0.999555
a	O	O:0.999997
mapping	O	O:0.997769
so	O	O:0.999969
that	O	O:0.999911
instead	O	O:0.999920
of	O	O:0.999968
the	O	O:0.999376
labels	O	O:0.999347
being	O	O:0.998921
29	O	O:0.999559
,	O	O:0.999962
30	O	O:0.999900
etc	O	O:0.998727
,	O	O:0.999998
they	O	O:0.999886
say	O	O:0.999718
"	O	O:0.999935
week	O	O:0.998911
29	O	O:0.999667
"	O	O:0.999790
,	O	O:0.999857
"	O	O:0.999924
Week	O	O:0.983494
30	O	O:0.999580
"	O	O:0.999759
etc	O	O:0.998128
.	O	O:0.999601
	
The	O	O:0.999804
fix	O	O:0.999481
you	O	O:0.999831
describe	O	O:0.998560
would	O	O:0.999769
work	O	O:0.999399
,	O	O:0.999998
of	O	O:0.999967
course	O	O:0.969853
,	O	O:0.999983
but	O	O:0.999985
then	O	O:0.998692
I	O	O:0.999990
could	O	O:0.999886
skip	O	O:0.998166
pandas	O	O:0.997965
all-together	O	O:0.999416
and	O	O:0.999785
directly	O	O:0.999692
plot	O	O:0.994033
the	O	O:0.999937
results	O	O:0.999097
of	O	O:0.999919
my	O	O:0.999894
individual	O	O:0.998277
simulations	O	O:0.998107
.	O	O:0.999376
	
These	O	O:0.999610
two	O	O:0.999767
timezones	O	O:0.999850
have	O	O:0.999551
different	O	O:0.999664
names	O	O:0.998681
but	O	O:0.999927
represent	O	O:0.999773
the	O	O:0.999824
same	O	O:0.999777
thing	O	O:0.999344
,	O	O:0.999989
however	O	O:0.999335
	
which	O	O:0.994941
would	O	O:0.999904
just	O	O:0.999596
change	O	O:0.999688
the	O	O:0.999844
last	O	O:0.999361
data	O	O:0.999889
point	O	O:0.998424
.	O	O:0.999888
	
What	O	O:0.999564
do	O	O:0.999921
you	O	O:0.999965
mean	O	O:0.997675
by	O	O:0.999991
reproducible	O	O:0.999683
example	O	O:0.999114
?	O	O:0.999976
	
But	O	O:0.999629
thought	O	O:0.988872
i'd	O	O:0.999956
make	O	O:0.997929
it	O	O:0.999909
clear	O	O:0.999862
what	O	O:0.999787
my	O	O:0.999947
next	O	O:0.999572
objective	O	O:0.999630
was	O	O:0.999812
,	O	O:0.999980
in	O	O:0.999989
case	O	O:0.999573
someone	O	O:0.999902
could	O	O:0.999805
illuminate	O	O:0.999961
a	O	O:0.999644
better	O	O:0.998916
method	O	O:0.998318
to	O	O:0.999825
get	O	O:0.999918
there	O	O:0.998750
.	O	O:0.999574
	
What	O	O:0.999181
output	O	O:0.999813
do	O	O:0.999920
you	O	O:0.999906
get	O	O:0.999888
when	O	O:0.999545
you	O	O:0.999992
just	O	O:0.999950
enter	O	O:0.991741
`	O	O:0.999984
pd	O	O:0.996591
`	O	O:0.999987
in	O	O:0.999903
the	O	O:0.999961
console	O	O:0.995647
?	O	O:0.999978
	
When	O	O:0.995748
I	O	O:0.999996
train	O	O:0.986586
on	O	O:0.999945
each	O	O:0.999862
label	O	O:0.995833
I	O	O:0.999994
get	O	O:0.999783
et	O	O:0.999520
better	O	O:0.999928
than	O	O:0.999639
73%	O	O:0.998993
on	O	O:0.999975
each	O	O:0.999304
label	O	O:0.988395
.	O	O:0.999697
	
but	O	O:0.999614
what	O	O:0.999218
value	O	O:0.999874
does	O	O:0.999407
it	O	O:0.999992
grab	O	O:0.999082
when	O	O:0.998894
indexing	O	O:0.999743
?	O	O:0.999994
in	O	O:0.999767
other	O	O:0.999744
words	O	O:0.999624
,	O	O:0.999988
if	O	O:0.999945
i'm	O	O:0.999965
just	O	O:0.999376
testing	O	O:0.999842
one	O	O:0.999872
side	O	O:0.999794
i'll	O	O:0.999847
get	O	O:0.999797
the	O	O:0.999919
value	O	O:0.999710
corresponding	O	O:0.999135
to	O	O:0.999996
that	O	O:0.999981
row	O	O:0.999947
if	O	O:0.999985
true	O	O:0.999786
.	O	O:0.999898
since	O	O:0.999925
both	O	O:0.999874
sides	O	O:0.998844
could	O	O:0.999409
be	O	O:0.999997
true	O	O:0.999498
and	O	O:0.999941
one	O	O:0.999701
of	O	O:0.999984
them	O	O:0.994423
is	O	O:0.999947
always	O	O:0.999625
true	O	O:0.999653
,	O	O:0.999935
which	O	O:0.999688
row's	O	O:0.999514
values	O	O:0.999300
will	O	O:0.999767
be	O	O:0.999952
selected	O	O:0.999667
?	O	O:0.999909
	
However	O	O:0.996952
,	O	O:0.999992
this	O	O:0.999785
is	O	O:0.999982
a	O	O:0.999968
bug	O	O:0.999821
as	O	O:0.999911
you	O	O:0.997481
should	O	O:0.999791
get	O	O:0.999865
an	O	O:0.999961
error	O	O:0.999239
.	O	O:0.999581
	
guys	O	O:0.999560
at	O	O:0.999941
least	O	O:0.999597
tell	O	O:0.999081
me	O	O:0.999928
why	O	O:0.999806
i	O	O:0.999984
am	O	O:0.999975
getting	O	O:0.998119
downvoted	O	O:0.999083
?	O	O:0.999959
	
In	O	O:0.999989
some	O	O:0.999840
cases	O	O:0.999745
the	O	O:0.999996
data	O	O:0.999764
might	O	O:0.999763
be	O	O:0.999995
out	O	O:0.999946
of	O	O:0.999929
sync	O	O:0.994206
which	O	O:0.999916
makes	O	O:0.998950
direct	O	O:0.999172
comparisons	O	O:0.999426
difficult	O	O:0.998513
.	O	O:0.999547
	
I	O	O:0.999675
would	O	O:0.999962
like	O	O:0.999637
to	O	O:0.999992
generate	O	O:0.999900
a	O	O:0.999982
matrix	O	O:0.989467
which	O	O:0.999376
contains	O	O:0.999483
the	O	O:0.999981
output	O	O:0.999612
of	O	O:0.999969
the	O	O:0.998905
function	O	O:0.999643
for	O	O:0.999979
every	O	O:0.999088
combination	O	O:0.999381
of	O	O:0.999886
X	O	O:0.997628
and	O	O:0.999785
Y	O	O:0.997516
.	O	O:0.998953
	
I'm	O	O:0.999889
trying	O	O:0.999746
to	O	O:0.999847
get	O	O:0.999958
the	O	O:0.999996
data	O	O:0.999853
to	O	O:0.999979
in	O	O:0.999998
the	O	O:0.999963
column	O	O:0.996548
"	O	O:0.999951
Structure	O	O:0.945623
"	O	O:0.999959
to	O	O:0.999808
repeat	O	O:0.994752
the	O	O:0.999890
row	O	O:0.999478
labels	O	O:0.999511
so	O	O:0.999973
it	O	O:0.999956
look	O	O:0.998556
like	O	O:0.999864
this	O	O:0.998091
:	O	O:0.999935
#CODE	O	O:0.998927
	
decision	O	O:0.998332
for	O	O:0.999966
single	O	O:0.999877
rows	O	O:0.999609
to	O	O:0.999981
get	O	O:0.999940
converted	O	O:0.999929
into	O	O:0.999930
a	O	O:0.999993
series	O	O:0.987514
-	O	O:0.999974
why	O	O:0.999839
not	O	O:0.999623
a	O	O:0.999890
	
I	O	O:0.999877
get	O	O:0.999310
#CODE	O	O:0.996730
	
More	O	O:0.999481
info	O	O:0.999076
as	O	O:0.999938
requested	O	O:0.997804
#CODE	O	O:0.998875
	
[	O	O:0.999928
Their	O	O:0.999877
product	O	O:0.999910
page	O	O:0.997428
]	O	O:0.999759
(	O	O:0.999934
#URL	O	O:0.999724
)	O	O:0.999926
holds	O	O:0.999472
the	O	O:0.999910
answer	O	O:0.997413
.	O	O:0.998675
	
Next	O	O:0.998970
,	O	O:0.999971
you	O	O:0.999950
wish	O	O:0.999845
to	O	O:0.999980
get	O	O:0.999988
the	O	O:0.999939
specific	O	O:0.998553
groups	O	O:0.998975
from	O	O:0.999976
this	O	O:0.998931
`	O	O:0.999993
grouped	O	O:0.984415
`	O	O:0.999903
object	O	O:0.980933
.	O	O:0.999845
	
To	O	O:0.999962
get	O	O:0.999452
datetime64	O	O:0.999397
that	O	O:0.999666
uses	O	O:0.999774
seconds	O	O:0.999513
directly	O	O:0.995344
:	O	O:0.999968
#CODE	O	O:0.999417
	
The	O	O:0.999963
only	O	O:0.997271
option	O	O:0.999727
you	O	O:0.999915
may	O	O:0.999952
have	O	O:0.999535
is	O	O:0.999993
to	O	O:0.999974
setup	O	O:0.999918
your	O	O:0.999975
data	O	O:0.999959
structures	O	O:0.999945
to	O	O:0.999984
be	O	O:0.999996
light	O	O:0.999358
weight	O	O:0.991037
so	O	O:0.999970
each	O	O:0.997419
worker	O	O:0.999120
isn't	O	O:0.998767
boated	O	O:0.999115
by	O	O:0.999949
redundant	O	O:0.999913
copies	O	O:0.998228
of	O	O:0.999986
the	O	O:0.999954
same	O	O:0.999958
data	O	O:0.999934
or	O	O:0.999998
excessive	O	O:0.999927
amounts	O	O:0.999906
of	O	O:0.999993
data	O	O:0.998246
which	O	O:0.999816
might	O	O:0.999573
be	O	O:0.999954
better	O	O:0.999858
off	O	O:0.999771
split	O	O:0.674482
across	O	O:0.999692
different	O	O:0.997438
workers	O	O:0.993624
.	O	O:0.999573
	
Inplace	O	O:0.999138
dropping	O	O:0.998782
seems	O	O:0.999666
more	O	O:0.999723
like	O	O:0.999677
idiomatic	O	O:0.999575
pandas	O	O:0.998100
to	O	O:0.999970
me	O	O:0.999996
than	O	O:0.999855
making	O	O:0.999686
a	O	O:0.999989
copy	O	O:0.989007
only	O	O:0.999757
to	O	O:0.999980
instantly	O	O:0.999988
garbage	O	O:0.998473
collect	O	O:0.998244
the	O	O:0.999848
now-defunct	O	O:0.994361
original	O	O:0.994626
.	O	O:0.999868
	
And	O	O:0.999829
fortunately	O	O:0.998833
,	O	O:0.999962
these	O	O:0.999887
days	O	O:0.999159
,	O	O:0.999974
`	O	O:0.999976
-pylab	O	O:0.995919
`	O	O:0.999961
has	O	O:0.999680
been	O	O:0.999395
deprecated	O	O:0.999636
and	O	O:0.999873
using	O	O:0.997983
`	O	O:0.994003
--	O	O:0.999446
matplotlib	O	O:0.990859
`	O	O:0.999630
and	O	O:0.999535
importing	O	O:0.999543
`	O	O:0.999771
pylab	O	O:0.956716
`	O	O:0.999995
manually	O	O:0.988360
is	O	O:0.999984
encouraged	O	O:0.998164
.	O	O:0.999651
	
Are	O	O:0.999816
you	O	O:0.999953
sure	O	O:0.999885
you	O	O:0.999932
don't	O	O:0.999979
mean	O	O:0.996554
`	O	O:0.999983
range	O	O:0.997548
(	O	O:0.999984
1	O	O:0.999943
,	O	O:0.999969
len	O	B-API:0.818536
(	O	O:0.999929
DF	O	O:0.999262
)):	O	O:0.998347
`	O	O:0.999865
?	O	O:0.999833
	
Where	O	O:0.998073
"	O	O:0.999885
timeblock	O	O:0.995867
"	O	O:0.999853
#1	O	O:0.999957
will	O	O:0.997123
include	O	O:0.999636
the	O	O:0.999892
first	O	O:0.997260
4:59	O	O:0.999799
minutes	O	O:0.998266
of	O	O:0.999930
observation	O	O:0.999244
period	O	O:0.998708
#1	O	O:0.999960
,	O	O:0.999885
#2	O	O:0.999981
will	O	O:0.995425
include	O	O:0.999368
5:00	O	O:0.937406
to	O	O:0.999792
9:59	O	O:0.999385
minutes	O	O:0.996361
...	O	O:0.999468
through	O	O:0.999547
to	O	O:0.999747
25:00	O	O:0.999343
and	O	O:0.999909
over	O	O:0.999604
,	O	O:0.999934
for	O	O:0.999968
each	O	O:0.994662
observation	O	O:0.998612
period	O	O:0.996116
.	O	O:0.999504
	
It	O	O:0.999911
seems	O	O:0.999907
like	O	O:0.999756
I'm	O	O:0.999964
maybe	O	O:0.999350
getting	O	O:0.998846
confused	O	O:0.996660
between	O	O:0.997063
the	O	O:0.999962
underlying	O	O:0.997785
data	O	O:0.995972
and	O	O:0.999955
views	O	O:0.998994
on	O	O:0.999734
it	O	O:0.999827
.	O	O:0.999786
	
When	O	O:0.996225
I	O	O:0.999994
try	O	O:0.999937
specifying	O	O:0.996978
index_col=0	O	O:0.970070
,	O	O:0.999992
as	O	O:0.999996
some	O	O:0.999743
examples	O	O:0.999786
in	O	O:0.999991
the	O	O:0.999963
documentation	O	O:0.999182
do	O	O:0.999969
,	O	O:0.999994
I	O	O:0.999997
get	O	O:0.999874
a	O	O:0.999778
"	O	O:0.999260
IndexError	O	O:0.987096
:	O	O:0.999950
list	O	O:0.977918
index	O	O:0.999761
out	O	O:0.999878
of	O	O:0.999948
range	O	O:0.996263
"	O	O:0.999907
error	O	O:0.997782
,	O	O:0.999927
which	O	O:0.999296
was	O	O:0.999940
a	O	O:0.999976
solution	O	O:0.999376
to	O	O:0.999938
several	O	O:0.999620
related	O	O:0.998541
questions	O	O:0.999550
but	O	O:0.999920
for	O	O:0.999974
some	O	O:0.994877
reason	O	O:0.993704
isn't	O	O:0.999811
working	O	O:0.999169
for	O	O:0.999621
me	O	O:0.999697
.	O	O:0.998975
	
That's	O	O:0.999864
what	O	O:0.998744
I	O	O:0.999993
thought	O	O:0.999901
about	O	O:0.998710
my	O	O:0.998311
original	O	O:0.996314
code	O	O:0.999599
but	O	O:0.999949
for	O	O:0.999979
some	O	O:0.997521
reason	O	O:0.999702
when	O	O:0.999773
I	O	O:0.999999
check	O	O:0.999460
len	O	B-API:0.987750
(	O	O:0.999983
Sframe	O	O:0.987170
)	O	O:0.999938
at	O	O:0.999946
the	O	O:0.999925
end	O	O:0.992058
in	O	O:0.999854
the	O	O:0.999962
main	O	O:0.998726
code	O	O:0.999441
,	O	O:0.999998
it	O	O:0.999993
still	O	O:0.998709
has	O	O:0.999986
the	O	O:0.999968
duplicate	O	O:0.999081
values	O	O:0.999853
even	O	O:0.999850
if	O	O:0.999974
the	O	O:0.999904
conditional	O	O:0.982565
statement	O	O:0.999782
applies	O	O:0.997787
option	O	O:0.999787
2	O	O:0.999947
to	O	O:0.999921
remove	O	O:0.999692
duplicates	O	O:0.995515
.	O	O:0.999787
	
The	O	O:0.999908
main	O	O:0.999449
thing	O	O:0.998885
I	O	O:0.999991
need	O	O:0.999711
to	O	O:0.999928
do	O	O:0.999994
is	O	O:0.999995
to	O	O:0.999956
group	O	O:0.999875
the	O	O:0.999985
days	O	O:0.998778
by	O	O:0.999986
week	O	O:0.999928
such	O	O:0.999993
that	O	O:0.999959
I	O	O:0.999993
can	O	O:0.999941
get	O	O:0.999955
sum	O	O:0.999699
of	O	O:0.999981
the	O	O:0.999980
data	O	O:0.999884
to	O	O:0.999971
be	O	O:0.999999
by	O	O:0.999970
week	O	O:0.998240
.	O	O:0.999615
	
To	O	O:0.999990
move	O	O:0.999131
the	O	O:0.999989
third	O	O:0.999419
row	O	O:0.999935
to	O	O:0.999982
the	O	O:0.999998
first	O	O:0.998856
,	O	O:0.999998
you	O	O:0.999962
can	O	O:0.999894
create	O	O:0.999831
an	O	O:0.999979
index	O	O:0.999775
moving	O	O:0.997212
the	O	O:0.999950
target	O	O:0.998820
row	O	O:0.999935
to	O	O:0.999979
the	O	O:0.999996
first	O	O:0.997533
element	O	O:0.999033
.	O	O:0.999706
	
So	O	O:0.999959
using	O	O:0.999971
your	O	O:0.997434
approach	O	O:0.997926
,	O	O:0.999980
how	O	O:0.999906
can	O	O:0.999147
I	O	O:0.999997
:	O	O:0.999999
1	O	O:0.999808
)	O	O:0.999990
plot	O	O:0.993487
the	O	O:0.999991
scores	O	O:0.991558
as	O	O:0.999987
a	O	O:0.999987
histogram	O	O:0.998753
in	O	O:0.999940
a	O	O:0.999951
memory-conscious	O	O:0.993467
way	O	O:0.998967
,	O	O:0.999896
and	O	O:0.999919
2	O	O:0.999856
)	O	O:0.999796
extract	O	O:0.996242
the	O	O:0.999934
scores	O	O:0.986767
belonging	O	O:0.999785
to	O	O:0.999980
the	O	O:0.999984
certain	O	O:0.998231
cell	O	O:0.999878
types	O	O:0.999452
to	O	O:0.999993
plot	O	O:0.999875
those	O	O:0.999806
as	O	O:0.999980
well	O	O:0.997372
?	O	O:0.999957
	
I	O	O:0.999992
have	O	O:0.999921
a	O	O:0.999908
CSV	O	O:0.999878
file	O	O:0.999536
,	O	O:0.999973
I	O	O:0.999975
wanted	O	O:0.999790
to	O	O:0.998522
filter	O	O:0.996991
it	O	O:0.999977
where	O	O:0.999349
I	O	O:0.999996
keep	O	O:0.999912
just	O	O:0.999838
rows	O	O:0.999932
where	O	O:0.999016
I	O	O:0.999999
have	O	O:0.999795
values	O	O:0.998396
in	O	O:0.999952
row	O	O:0.999822
"	O	O:0.999957
d	O	O:0.998791
"	O	O:0.999824
bigger	O	O:0.999919
then	O	O:0.997442
0	O	O:0.999829
.	O	O:0.999605
	
Simulations	O	O:0.998794
can	O	O:0.999575
be	O	O:0.999994
repeated	O	O:0.998867
for	O	O:0.999900
different	O	O:0.998764
scenarios	O	O:0.992735
and	O	O:0.999947
each	O	O:0.999712
one	O	O:0.999760
of	O	O:0.999959
these	O	O:0.998288
scenarios	O	O:0.999851
will	O	O:0.999503
produce	O	O:0.999448
a	O	O:0.999984
different	O	O:0.998856
hourly	O	O:0.990208
set	O	O:0.999529
of	O	O:0.999987
data	O	O:0.999019
for	O	O:0.999979
each	O	O:0.999641
room	O	O:0.992237
and	O	O:0.999952
each	O	O:0.999663
variable	O	O:0.992187
.	O	O:0.999514
	
To	O	O:0.999957
get	O	O:0.996172
around	O	O:0.999853
this	O	O:0.999401
,	O	O:0.999985
I'm	O	O:0.999930
passing	O	O:0.997904
in	O	O:0.999928
a	O	O:0.999995
large	O	O:0.998493
number	O	O:0.996157
for	O	O:0.999612
the	O	O:0.999812
max_results	O	O:0.959107
parameter	O	O:0.996003
and	O	O:0.999970
specifying	O	O:0.999956
a	O	O:0.999571
chunksize	O	B-API:0.800136
.	O	O:0.998676
	
You	O	O:0.999824
get	O	O:0.999898
back	O	O:0.999492
a	O	O:0.999983
float	O	O:0.966613
because	O	O:0.999889
each	O	O:0.999528
row	O	O:0.999946
contains	O	O:0.999816
a	O	O:0.999997
mix	O	O:0.992572
of	O	O:0.999572
`	O	O:0.999883
float	O	O:0.790674
`	O	O:0.999946
and	O	O:0.994710
`	O	O:0.999973
int	O	O:0.924544
`	O	O:0.999974
types	O	O:0.863479
.	O	O:0.999921
	
Should	O	O:0.999456
I	O	O:0.999986
use	O	O:0.999959
something	O	O:0.991639
different	O	O:0.982899
.	O	O:0.999177
	
The	O	O:0.999940
best	O	O:0.997458
would	O	O:0.999883
be	O	O:0.999969
to	O	O:0.999944
convert	O	O:0.999882
that	O	O:0.999898
one	O	O:0.999987
file	O	O:0.999875
to	O	O:0.999993
a	O	O:0.999997
an	O	O:0.999864
actual	O	O:0.996366
comma	O	O:0.988278
(	O	O:0.999977
semicolon	O	O:0.999690
or	O	O:0.999987
other	O	O:0.999554
)	O	O:0.999961
separated	O	O:0.999886
file	O	O:0.999792
or	O	O:0.999992
make	O	O:0.999302
sure	O	O:0.999979
that	O	O:0.999753
compound	O	O:0.999186
values	O	O:0.999024
are	O	O:0.999486
quoted	O	O:0.997331
(	O	O:0.999870
"	O	O:0.999743
Alabama	O	O:0.992359
County	O	O:0.989055
")	O	O:0.998949
and	O	O:0.999899
then	O	O:0.999822
specify	O	O:0.999641
the	O	O:0.999818
quotechar	O	O:0.988997
:	O	O:0.999953
#CODE	O	O:0.999650
	
I	O	O:0.999676
would	O	O:0.999973
like	O	O:0.999839
to	O	O:0.999992
calculate	O	O:0.999913
the	O	O:0.999991
average	O	O:0.999629
of	O	O:0.999991
time	O	O:0.999785
per	O	O:0.999978
org	O	O:0.999627
per	O	O:0.998871
cluster	O	O:0.998655
.	O	O:0.999553
	
I	O	O:0.999962
found	O	O:0.999832
a	O	O:0.999863
way	O	O:0.997778
which	O	O:0.998853
seems	O	O:0.999846
very	O	O:0.998831
inefficient	O	O:0.998203
(	O	O:0.999931
stacking	O	O:0.994494
and	O	O:0.999834
unstacking	O	O:0.995881
which	O	O:0.998319
will	O	O:0.996698
create	O	O:0.999853
many	O	O:0.999944
many	O	O:0.999600
columns	O	O:0.999451
in	O	O:0.999997
case	O	O:0.999885
of	O	O:0.999993
millions	O	O:0.999689
of	O	O:0.999990
categories	O	O:0.954156
)	O	O:0.999882
.	O	O:0.998458
	
I	O	O:0.999879
was	O	O:0.999979
going	O	O:0.996543
to	O	O:0.999863
suggest	O	O:0.999647
cumcount	O	B-API:0.799051
and	O	O:0.999925
tail	O	O:0.776115
(	O	O:0.999958
1	O	O:0.999757
)	O	O:0.999219
,	O	O:0.999895
but	O	O:0.999986
you're	O	O:0.999137
after	O	O:0.999489
something	O	O:0.999768
else	O	O:0.992943
(	O	O:0.999993
these	O	O:0.999070
would	O	O:0.999634
be	O	O:0.999992
much	O	O:0.999780
faster	O	O:0.999146
)	O	O:0.998454
.	O	O:0.991676
	
This	O	O:0.998978
is	O	O:0.999957
because	O	O:0.994018
working	O	O:0.999798
with	O	O:0.999721
dictionaries	O	O:0.997464
is	O	O:0.999983
so	O	O:0.999986
easy	O	O:0.999466
and	O	O:0.999987
thinking	O	O:0.999712
of	O	O:0.999943
them	O	O:0.999556
like	O	O:0.999786
simple	O	O:0.999744
dicts	O	O:0.999513
often	O	O:0.999592
means	O	O:0.999952
you	O	O:0.999949
can	O	O:0.999934
find	O	O:0.999982
a	O	O:0.999991
solution	O	O:0.999870
to	O	O:0.999958
an	O	O:0.999974
issue	O	O:0.999366
without	O	O:0.999582
having	O	O:0.993943
to	O	O:0.999869
get	O	O:0.999925
too	O	O:0.999919
deep	O	O:0.999684
into	O	O:0.999648
pandas	O	O:0.998877
.	O	O:0.999334
	
If	O	O:0.999821
you're	O	O:0.999691
trying	O	O:0.999553
to	O	O:0.999916
slice	O	O:0.999597
each	O	O:0.999890
string	O	O:0.999848
to	O	O:0.999953
get	O	O:0.999970
the	O	O:0.999973
substring	O	O:0.999692
from	O	O:0.999562
5	O	O:0.999986
to	O	O:0.999992
7	O	O:0.999988
,	O	O:0.999991
you	O	O:0.999980
need	O	O:0.999873
a	O	O:0.999921
`	O	O:0.999820
:	O	O:0.999606
`	O	O:0.999962
,	O	O:0.999975
not	O	O:0.999987
a	O	O:0.999910
`	O	O:0.999869
,	O	O:0.998803
`	O	O:0.999849
:	O	O:0.999691
#CODE	O	O:0.999884
	
However	O	O:0.999398
,	O	O:0.999975
since	O	O:0.999975
each	O	O:0.999806
of	O	O:0.999999
your	O	O:0.999634
new	O	O:0.999180
`	O	O:0.999958
DataFrames	O	O:0.991053
`	O	O:0.999975
is	O	O:0.999973
a	O	O:0.999997
summary	O	O:0.999477
of	O	O:0.999965
a	O	O:0.999942
single	O	O:0.998316
customer	O	O:0.999232
,	O	O:0.999971
I	O	O:0.999951
would	O	O:0.999710
suggest	O	O:0.997879
writing	O	O:0.999962
one	O	O:0.995483
function	O	O:0.999985
that	O	O:0.999766
can	O	O:0.999877
return	O	O:0.999562
all	O	O:0.999604
of	O	O:0.999995
your	O	O:0.998829
desired	O	O:0.998578
results	O	O:0.999499
in	O	O:0.999970
a	O	O:0.999987
single	O	O:0.993946
`	O	O:0.999950
Series	O	O:0.630817
`	O	O:0.999909
.	O	O:0.998725
	
I	O	O:0.999981
want	O	O:0.999876
to	O	O:0.999441
get	O	O:0.999989
statistics	O	O:0.999831
of	O	O:0.999844
debt_ratio	O	O:0.998763
based	O	O:0.999846
on	O	O:0.999981
subgroups	O	O:0.999491
of	O	O:0.999899
market_capitalization	O	O:0.969707
.	O	O:0.999759
	
Any	O	O:0.999783
ideas	O	O:0.997607
why	O	O:0.999957
this	O	O:0.999497
error	O	O:0.999775
might	O	O:0.999240
be	O	O:0.999963
showing	O	O:0.999722
up	O	O:0.999899
so	O	O:0.999987
I	O	O:0.999995
can	O	O:0.999931
know	O	O:0.999904
what	O	O:0.999929
to	O	O:0.999989
go	O	O:0.999977
after	O	O:0.999949
to	O	O:0.999816
fix	O	O:0.999823
?	O	O:0.999952
	
I	O	O:0.999914
believe	O	O:0.999641
it	O	O:0.999381
is	O	O:0.999983
getting	O	O:0.997777
at	O	O:0.999978
what	O	O:0.998683
I	O	O:0.999986
want	O	O:0.999479
.	O	O:0.994618
	
I	O	O:0.999888
haven't	O	O:0.999966
done	O	O:0.999189
any	O	O:0.999741
stress	O	O:0.911290
testing	O	O:0.997970
but	O	O:0.999114
I'd	O	O:0.999726
imagine	O	O:0.999485
this	O	O:0.999385
could	O	O:0.999212
get	O	O:0.999937
slow	O	O:0.999706
on	O	O:0.999995
very	O	O:0.999847
large	O	O:0.999566
DataFrames	O	O:0.989010
.	O	O:0.999291
	
Is	O	O:0.999990
there	O	O:0.999806
a	O	O:0.999978
quick	O	O:0.995423
way	O	O:0.999772
to	O	O:0.999975
sort	O	O:0.999892
my	O	O:0.999988
data	O	O:0.999977
by	O	O:0.999993
a	O	O:0.999990
given	O	O:0.991913
column	O	O:0.999890
that	O	O:0.999955
only	O	O:0.999966
takes	O	O:0.998386
chunks	O	O:0.999359
into	O	O:0.999514
account	O	O:0.992433
and	O	O:0.999223
doesn't	O	O:0.999494
require	O	O:0.995996
loading	O	O:0.999418
entire	O	O:0.998671
datasets	O	O:0.999338
in	O	O:0.999934
memory	O	O:0.998775
?	O	O:0.999936
	
Take	O	O:0.999346
a	O	O:0.999990
look	O	O:0.996362
at	O	O:0.999919
the	O	O:0.999662
regex	O	O:0.991208
docs	O	O:0.997848
.	O	O:0.999900
	
Any	O	O:0.999746
logic	O	O:0.998591
requirements	O	O:0.994994
(	O	O:0.999991
like	O	O:0.999903
comparing	O	O:0.999831
elem+1	O	O:0.998635
to	O	O:0.999994
elem	O	O:0.999291
)	O	O:0.999940
should	O	O:0.999371
be	O	O:0.999982
in	O	O:0.999990
your	O	O:0.999220
question	O	O:0.999741
so	O	O:0.999994
there	O	O:0.999388
is	O	O:0.999988
no	O	O:0.999140
confusion	O	O:0.998666
.	O	O:0.999862
	
I'd	O	O:0.999968
like	O	O:0.999714
to	O	O:0.999969
get	O	O:0.999837
a	O	O:0.999996
list	O	O:0.996920
as	O	O:0.999830
`	O	O:0.999511
[	O	O:0.999699
'	O	O:0.999991
abcd	O	O:0.994528
'	O	O:0.999919
,	O	O:0.999958
'	O	O:0.999990
ddse	O	O:0.996173
'	O	O:0.999940
,	O	O:0.999956
'	O	O:0.999923
123d	O	O:0.996192
'	O	O:0.999867
,	O	O:0.999979
'	O	O:0.999929
aaaaa*	O	O:0.996632
']`	O	O:0.998278
.	O	O:0.998174
	
but	O	O:0.999557
get	O	O:0.999595
the	O	O:0.999826
following	O	O:0.998348
error	O	O:0.994490
:	O	O:0.999958
	
I	O	O:0.999877
get	O	O:0.999310
#CODE	O	O:0.996730
	
Ideally	O	O:0.999483
the	O	O:0.999850
question	O	O:0.996185
would	O	O:0.999912
provide	O	O:0.999760
a	O	O:0.999991
self-contained	O	O:0.999860
piece	O	O:0.998889
of	O	O:0.999989
code	O	O:0.999558
generating	O	O:0.999950
the	O	O:0.999961
data	O	O:0.999632
structure	O	O:0.999807
,	O	O:0.999996
or	O	O:0.999994
even	O	O:0.999670
just	O	O:0.999934
something	O	O:0.999988
like	O	O:0.998903
`	O	O:0.999993
df	O	O:0.992455
=	O	O:0.999997
[[	O	O:0.999945
1	O	O:0.999946
,	O	O:0.999996
2	O	O:0.999965
]	O	O:0.999692
,	O	O:0.999883
[	O	O:0.999988
2	O	O:0.999922
,	O	O:0.999991
3	O	O:0.999938
]	O	O:0.999681
,	O	O:0.999884
[	O	O:0.999985
4	O	O:0.999896
,	O	O:0.999979
5	O	O:0.999927
]]`	O	O:0.998901
,	O	O:0.999956
enough	O	O:0.999824
to	O	O:0.999965
try	O	O:0.999982
to	O	O:0.999984
get	O	O:0.999970
an	O	O:0.999934
answer	O	O:0.999767
without	O	O:0.997503
diving	O	O:0.991347
into	O	O:0.998903
panda	O	O:0.996153
.	O	O:0.998767
	
I'm	O	O:0.999816
running	O	O:0.999847
daily	O	O:0.981185
simulations	O	O:0.999766
in	O	O:0.999959
a	O	O:0.999936
batch	O	O:0.994581
:	O	O:0.999984
I	O	O:0.999987
do	O	O:0.999972
365	O	O:0.999517
simluations	O	O:0.999346
to	O	O:0.999972
get	O	O:0.999946
results	O	O:0.999714
for	O	O:0.999973
a	O	O:0.999986
full	O	O:0.986207
year	O	O:0.998983
.	O	O:0.999338
	
I	O	O:0.999938
edited	O	O:0.999948
my	O	O:0.999350
answer	O	O:0.999901
to	O	O:0.999920
use	O	O:0.999980
capwords	O	O:0.996064
per	O	O:0.999979
your	O	O:0.999453
suggestion	O	O:0.999156
,	O	O:0.999999
that	O	O:0.999764
fixed	O	O:0.999888
the	O	O:0.999981
problem	O	O:0.993154
I	O	O:0.999980
missed	O	O:0.999799
where	O	O:0.997622
it	O	O:0.999915
capitalized	O	O:0.999598
the	O	O:0.999944
'	O	O:0.999906
s	O	O:0.999848
'	O	O:0.999946
in	O	O:0.999922
Guy's	O	O:0.998088
Name	O	O:0.993151
.	O	O:0.999287
	
Does	O	O:0.997429
not	O	O:0.999630
work	O	O:0.999534
exactly	O	O:0.999821
right	O	O:0.999958
since	O	O:0.999985
categories	O	O:0.998414
can	O	O:0.999969
be	O	O:0.999993
mixed	O	O:0.997345
like	O	O:0.999874
that	O	O:0.999566
so	O	O:0.999915
it	O	O:0.999979
will	O	O:0.999339
produce	O	O:0.999851
more	O	O:0.999320
duplications	O	O:0.998558
	
Essentially	O	O:0.999529
,	O	O:0.999930
I	O	O:0.999994
want	O	O:0.999755
to	O	O:0.999859
look	O	O:0.999944
at	O	O:0.999966
quintiles	O	O:0.995727
(	O	O:0.999989
since	O	O:0.999929
there	O	O:0.999813
are	O	O:0.999883
5	O	O:0.999974
days	O	O:0.999618
in	O	O:0.999973
a	O	O:0.999965
business	O	O:0.999753
week	O	O:0.999108
)	O	O:0.999969
rank	O	O:0.896039
1	O	O:0.999827
and	O	O:0.999392
5	O	O:0.999519
and	O	O:0.999652
see	O	O:0.999571
how	O	O:0.999915
they	O	O:0.999756
change	O	O:0.999161
from	O	O:0.999154
week	O	O:0.999261
to	O	O:0.999987
week	O	O:0.999862
.	O	O:0.999786
	
Doing	O	O:0.999488
this	O	O:0.999267
transformation	O	O:0.999513
for	O	O:0.999839
500,000	O	O:0.997918
file	O	O:0.999010
takes	O	O:0.999749
time	O	O:0.999778
.	O	O:0.999790
	
The	O	O:0.999706
requirement	O	O:0.996547
isn't	O	O:0.999919
easy	O	O:0.999673
to	O	O:0.999954
wrap	O	O:0.999819
once	O	O:0.999948
mind	O	O:0.999137
around	O	O:0.999858
,	O	O:0.999982
so	O	O:0.999987
sorry	O	O:0.999930
If	O	O:0.999989
I	O	O:0.999980
am	O	O:0.999959
not	O	O:0.999378
being	O	O:0.999773
clear	O	O:0.998399
.	O	O:0.999620
	
My	O	O:0.999931
question	O	O:0.998159
is	O	O:0.999978
,	O	O:0.999994
from	O	O:0.999663
`	O	O:0.999919
result	O	O:0.999130
`	O	O:0.999996
how	O	O:0.999909
can	O	O:0.999962
I	O	O:0.999999
get	O	O:0.999970
the	O	O:0.999228
column	O	O:0.999135
index	O	O:0.999728
of	O	O:0.999986
the	O	O:0.999957
first	O	O:0.999730
level	O	O:0.995582
as	O	O:0.999963
list	O	O:0.921115
:	O	O:0.999972
#CODE	O	O:0.998213
	
This	O	O:0.995617
function	O	O:0.999591
will	O	O:0.999786
then	O	O:0.999651
work	O	O:0.999725
out	O	O:0.999957
the	O	O:0.999941
maximum	O	O:0.973985
,	O	O:0.999974
minimum	O	O:0.997978
,	O	O:0.999903
and	O	O:0.999903
return	O	O:0.995932
rages	O	O:0.990961
of	O	O:0.999947
values	O	O:0.998392
based	O	O:0.999724
on	O	O:0.999960
the	O	O:0.999977
fact	O	O:0.999421
I	O	O:0.999995
want	O	O:0.999912
5	O	O:0.999666
categories	O	O:0.971064
:	O	O:0.999987
(	O	O:0.999982
1	O	O:0.999964
,	O	O:0.999994
2	O	O:0.999960
)	O	O:0.999703
,	O	O:0.999787
(	O	O:0.999985
3	O	O:0.999774
,	O	O:0.999991
4	O	O:0.999952
)	O	O:0.999697
,	O	O:0.999800
(	O	O:0.999987
5	O	O:0.999817
,	O	O:0.999990
6	O	O:0.999933
)	O	O:0.999682
,	O	O:0.999791
(	O	O:0.999987
7	O	O:0.999872
,	O	O:0.999983
8)	O	O:0.999099
,	O	O:0.999830
(	O	O:0.999983
9	O	O:0.999881
,	O	O:0.999990
10	O	O:0.999783
)	O	O:0.999339
.	O	O:0.998586
	
Any	O	O:0.999907
suggestions	O	O:0.999866
of	O	O:0.999950
a	O	O:0.999855
better	O	O:0.999403
way	O	O:0.999031
?	O	O:0.999673
	
In	O	O:0.999216
addition	O	O:0.999945
this	O	O:0.999641
is	O	O:0.999988
unlikely	O	O:0.998648
to	O	O:0.999943
be	O	O:0.999997
only	O	O:0.999971
time	O	O:0.999765
I	O	O:0.999999
have	O	O:0.999908
to	O	O:0.999820
do	O	O:0.999999
this	O	O:0.999926
so	O	O:0.999983
being	O	O:0.999984
able	O	O:0.999899
to	O	O:0.999880
change	O	O:0.999872
the	O	O:0.999541
numbers	O	O:0.976549
and	O	O:0.999893
columns	O	O:0.998676
i'm	O	O:0.999878
interested	O	O:0.999762
in	O	O:0.999573
would	O	O:0.999307
be	O	O:0.999969
good	O	O:0.999147
.	O	O:0.999472
	
And	O	O:0.999622
at	O	O:0.999959
that	O	O:0.999883
time	O	O:0.999960
i	O	O:0.999993
think	O	O:0.999777
the	O	O:0.999866
state	O	O:0.978455
becomes	O	O:0.999331
bad	O	O:0.999967
,	O	O:0.999989
so	O	O:0.999973
subsequent	O	O:0.999765
calls	O	O:0.999710
will	O	O:0.999919
lead	O	O:0.998201
to	O	O:0.999887
exceptions	O	O:0.999973
like	O	O:0.999692
these	O	O:0.997863
:	O	O:0.999919
#CODE	O	O:0.999225
	
Let	O	O:0.999885
me	O	O:0.999703
fix	O	O:0.999647
that	O	O:0.997531
and	O	O:0.999944
return	O	O:0.970629
to	O	O:0.999863
this	O	O:0.999953
issue	O	O:0.999795
,	O	O:0.999995
as	O	O:0.999924
I	O	O:0.999971
have	O	O:0.999942
read	O	O:0.998666
something	O	O:0.999896
about	O	O:0.999711
format	O	O:0.998983
changes	O	O:0.995489
between	O	O:0.990967
10	O	O:0.999768
and	O	O:0.998610
12	O	O:0.999064
.	O	O:0.997939
	
All	O	O:0.999713
the	O	O:0.999972
data	O	O:0.998324
,	O	O:0.999985
columns	O	O:0.999509
222	O	O:0.999149
and	O	O:0.999877
333	O	O:0.998528
are	O	O:0.999543
offset	O	O:0.999354
as	O	O:0.999744
required	O	O:0.994368
,	O	O:0.999925
but	O	O:0.999888
it	O	O:0.999762
isn't	O	O:0.999869
even	O	O:0.999368
the	O	O:0.999990
same	O	O:0.999969
size	O	O:0.999964
as	O	O:0.999998
the	O	O:0.999946
output	O	O:0.998905
in	O	O:0.999921
the	O	O:0.999942
first	O	O:0.998639
order	O	O:0.999379
.	O	O:0.999519
	
But	O	O:0.999915
I	O	O:0.999978
can	O	O:0.999938
only	O	O:0.998973
get	O	O:0.999911
this	O	O:0.998592
:	O	O:0.999973
#CODE	O	O:0.999293
	
I	O	O:0.999981
have	O	O:0.999891
summary-level	O	O:0.999667
data	O	O:0.999973
of	O	O:0.999981
the	O	O:0.999977
count	O	O:0.995861
of	O	O:0.999967
people	O	O:0.998884
by	O	O:0.999978
age	O	O:0.999468
group	O	O:0.991664
,	O	O:0.999992
city	O	O:0.990109
,	O	O:0.999971
income	O	O:0.999225
and	O	O:0.999182
the	O	O:0.999697
industry	O	O:0.989425
in	O	O:0.999479
which	O	O:0.999868
they	O	O:0.999806
work	O	O:0.998132
,	O	O:0.999976
or	O	O:0.999926
in	O	O:0.999958
this	O	O:0.999978
case	O	O:0.999935
four	O	O:0.999741
dimensions	O	O:0.991812
.	O	O:0.999492
	
@USER	O	O:0.994921
:	O	O:0.999965
Yes	O	O:0.999909
,	O	O:0.999997
it	O	O:0.999989
can	O	O:0.999953
as	O	O:0.999992
I	O	O:0.999996
said	O	O:0.999878
,	O	O:0.999894
"	O	O:0.999971
They	O	O:0.999441
all	O	O:0.999779
suck	O	O:0.984976
in	O	O:0.999752
different	O	O:0.999770
ways	O	O:0.997993
"	O	O:0.999744
.	O	O:0.999222
	
Error	O	O:0.990067
:	O	O:0.999977
list	O	O:0.991061
indices	O	O:0.999708
must	O	O:0.998105
be	O	O:0.999961
integers	O	O:0.997421
,	O	O:0.999951
not	O	O:0.998900
Series	O	O:0.888602
	
Just	O	O:0.998383
so	O	O:0.999979
that	O	O:0.999462
it	O	O:0.999994
does	O	O:0.999517
not	O	O:0.999984
fail	O	O:0.999455
silently	O	O:0.999942
if	O	O:0.999964
the	O	O:0.999777
wrong	O	O:0.999424
kind	O	O:0.999515
of	O	O:0.999997
data	O	O:0.999360
is	O	O:0.999975
passed	O	O:0.995417
in	O	O:0.999632
.	O	O:0.999625
	
If	O	O:0.999923
you	O	O:0.999895
want	O	O:0.999701
to	O	O:0.999989
take	O	O:0.999993
advantage	O	O:0.999911
of	O	O:0.999918
NumPy	O	O:0.997456
/	O	O:0.999836
Pandas	O	O:0.999783
to	O	O:0.999954
perform	O	O:0.999550
fast	O	O:0.999522
(	O	O:0.999997
er	O	O:0.999882
)	O	O:0.999909
calculations	O	O:0.998864
you	O	O:0.999992
must	O	O:0.999841
keep	O	O:0.999776
the	O	O:0.999988
data	O	O:0.999773
in	O	O:0.999971
a	O	O:0.999991
NumPy	O	O:0.999684
array	O	O:0.997269
or	O	O:0.999781
Pandas	O	O:0.998506
NDFrame	O	O:0.902716
.	O	O:0.998535
	
Your	O	O:0.999556
benchmark	O	O:0.944002
is	O	O:0.999980
actually	O	O:0.999083
too	O	O:0.999970
small	O	O:0.999714
to	O	O:0.999978
show	O	O:0.999781
the	O	O:0.999983
real	O	O:0.994170
difference	O	O:0.999569
.	O	O:0.999807
	
I	O	O:0.999862
was	O	O:0.999993
able	O	O:0.999360
to	O	O:0.999846
resolve	O	O:0.999959
this	O	O:0.999888
by	O	O:0.999972
opening	O	O:0.999669
/	O	O:0.999846
closing	O	O:0.999612
a	O	O:0.999941
connection	O	O:0.999311
each	O	O:0.999920
time	O	O:0.999875
i	O	O:0.999997
need	O	O:0.999821
to	O	O:0.999978
execute	O	O:0.999980
a	O	O:0.999988
query	O	O:0.899269
.	O	O:0.999472
	
I	O	O:0.999987
used	O	O:0.999960
a	O	O:0.999832
chunksize	O	O:0.595897
of	O	O:0.999922
4	O	O:0.999835
to	O	O:0.999991
make	O	O:0.999687
the	O	O:0.999892
grouping	O	O:0.999814
noticeable	O	O:0.997925
on	O	O:0.999968
the	O	O:0.999993
small	O	O:0.998978
dataset	O	O:0.999453
;	O	O:0.999989
you'll	O	O:0.999324
want	O	O:0.999756
to	O	O:0.999735
change	O	O:0.999839
it	O	O:0.999836
to	O	O:0.999916
90000	O	O:0.999777
for	O	O:0.999959
your	O	O:0.999828
real	O	O:0.989366
dataset	O	O:0.999208
.	O	O:0.999714
	
It's	O	O:0.998564
mostly	O	O:0.998204
trial	O	O:0.993824
and	O	O:0.999875
error	O	O:0.999169
for	O	O:0.999752
me	O	O:0.999659
,	O	O:0.999989
plus	O	O:0.999481
knowledge	O	O:0.999956
that	O	O:0.999959
you	O	O:0.999971
can	O	O:0.999961
do	O	O:0.999998
a	O	O:0.999994
lot	O	O:0.999808
just	O	O:0.999498
with	O	O:0.998878
```	O	O:0.999159
rank	O	O:0.866941
```	O	O:0.999169
and	O	O:0.997553
```	O	O:0.999601
count	O	O:0.644744
```	O	O:0.999583
,	O	O:0.999765
which	O	O:0.999522
are	O	O:0.999890
both	O	O:0.999505
pretty	O	O:0.999474
fast	O	O:0.998400
.	O	O:0.999523
	
And	O	O:0.999891
those	O	O:0.999350
columns	O	O:0.994608
which	O	O:0.999882
have	O	O:0.999856
differing	O	O:0.999266
values	O	O:0.983233
:	O	O:0.999970
#CODE	O	O:0.999639
	
(	O	O:0.999823
I	O	O:0.999993
will	O	O:0.999563
use	O	O:0.998989
logistic	O	O:0.989003
regression	O	O:0.996046
and	O	O:0.999576
random	O	O:0.997271
forest	O	O:0.997861
to	O	O:0.999966
do	O	O:0.999978
the	O	O:0.999952
prediction	O	O:0.998143
,	O	O:0.999981
which	O	O:0.999828
support	O	O:0.991122
sparse	O	O:0.998441
matrix	O	O:0.986942
.	O	O:0.999868
)	O	O:0.999888
Is	O	O:0.999975
there	O	O:0.999853
anyway	O	O:0.999685
to	O	O:0.999941
efficiently	O	O:0.999925
slicing	O	O:0.999800
a	O	O:0.999984
sparseDataFrame	O	O:0.999607
or	O	O:0.999914
for	O	O:0.999918
the	O	O:0.999888
whole	O	O:0.999097
process	O	O:0.993733
I	O	O:0.999998
am	O	O:0.999995
doing	O	O:0.994021
,	O	O:0.999975
it	O	O:0.999730
should	O	O:0.999457
be	O	O:0.999943
improved	O	O:0.999764
in	O	O:0.999668
anyway	O	O:0.998098
?	O	O:0.999877
	
I	O	O:0.999763
looked	O	O:0.999861
here	O	O:0.975242
,	O	O:0.999955
but	O	O:0.999979
when	O	O:0.998902
I	O	O:0.999979
ran	O	O:0.999986
that	O	O:0.997430
in	O	O:0.999942
iPython	O	O:0.998285
Notebook	O	O:0.999855
,	O	O:0.999945
I	O	O:0.999987
don't	O	O:0.999762
get	O	O:0.998628
anything	O	O:0.998426
.	O	O:0.998684
	
does	O	O:0.997862
not	O	O:0.999888
produce	O	O:0.999576
any	O	O:0.999935
difference	O	O:0.999557
in	O	O:0.999965
terms	O	O:0.999918
of	O	O:0.999987
file	O	O:0.999681
size	O	O:0.999917
than	O	O:0.999747
...	O	O:0.996702
	
You	O	O:0.999850
will	O	O:0.994290
either	O	O:0.999938
have	O	O:0.999772
to	O	O:0.999982
split	O	O:0.994928
the	O	O:0.999991
table	O	O:0.999657
up	O	O:0.999966
or	O	O:0.999984
choose	O	O:0.999134
another	O	O:0.999726
storage	O	O:0.998041
format	O	O:0.995828
.	O	O:0.999624
	
To	O	O:0.999968
get	O	O:0.999859
the	O	O:0.999958
number	O	O:0.998892
of	O	O:0.999939
groups	O	O:0.999870
you	O	O:0.999990
can	O	O:0.999649
use	O	O:0.999985
the	O	O:0.999893
ngroups	O	O:0.979727
attribute	O	O:0.997986
:	O	O:0.999976
#CODE	O	O:0.999649
	
this	O	O:0.999714
does	O	O:0.999195
not	O	O:0.999949
seem	O	O:0.999853
to	O	O:0.999941
work	O	O:0.999659
and	O	O:0.999923
I	O	O:0.999988
am	O	O:0.999933
not	O	O:0.999467
sure	O	O:0.999822
if	O	O:0.999939
it	O	O:0.999992
just	O	O:0.993402
is	O	O:0.999990
not	O	O:0.999704
possible	O	O:0.999856
,	O	O:0.999997
I	O	O:0.999988
can	O	O:0.999869
always	O	O:0.999926
generate	O	O:0.999910
separate	O	O:0.999897
dictionaries	O	O:0.999969
from	O	O:0.999960
a	O	O:0.999941
master	O	O:0.999950
dictionary	O	O:0.998746
to	O	O:0.999901
get	O	O:0.999668
around	O	O:0.999626
having	O	O:0.999529
to	O	O:0.999846
update	O	O:0.999795
data	O	O:0.999724
in	O	O:0.999992
multiple	O	O:0.998849
locations	O	O:0.993089
	
I	O	O:0.999977
want	O	O:0.999910
to	O	O:0.999418
compare	O	O:0.999903
these	O	O:0.999870
two	O	O:0.999965
data	O	O:0.999892
frames	O	O:0.999877
by	O	O:0.999918
row	O	O:0.999934
based	O	O:0.999350
on	O	O:0.999922
column	O	O:0.999167
Value	O	O:0.997864
and	O	O:0.999927
keep	O	O:0.999161
the	O	O:0.999798
row	O	O:0.999802
from	O	O:0.999844
first	O	O:0.999771
or	O	O:0.999994
second	O	O:0.999647
depending	O	O:0.999805
where	O	O:0.997972
the	O	O:0.999907
Value	O	O:0.987609
is	O	O:0.999827
bigger	O	O:0.998145
.	O	O:0.999699
	
Then	O	O:0.997978
,	O	O:0.999999
you	O	O:0.999967
can	O	O:0.999866
run	O	O:0.999884
`	O	O:0.999995
sudo	O	O:0.994459
port	O	O:0.993202
install	O	O:0.999278
py27-pandas	O	O:0.992370
`	O	O:0.999913
to	O	O:0.999523
get	O	O:0.999960
Python	O	O:0.999606
and	O	O:0.999984
all	O	O:0.999732
of	O	O:0.999909
the	O	O:0.998709
dependencies	O	O:0.994785
installed	O	O:0.999339
.	O	O:0.999702
	
See	O	O:0.999716
the	O	O:0.999564
shape	O	O:0.998978
method	O	O:0.999694
of	O	O:0.999934
the	O	O:0.999588
input	O	O:0.999601
array	O	O:0.998392
,	O	O:0.999888
and	O	O:0.999935
you	O	O:0.999142
should	O	O:0.999597
get	O	O:0.999877
something	O	O:0.999965
like	O	O:0.997739
`	O	O:0.999949
(	O	O:0.999587
N	O	O:0.999829
,	O	O:0.999983
)`	O	O:0.999219
and	O	O:0.999690
not	O	O:0.999330
`	O	O:0.999875
(	O	O:0.999900
N	O	O:0.999953
,	O	O:0.999992
1	O	O:0.999902
)`	O	O:0.999576
.	O	O:0.999407
	
So	O	O:0.999848
,	O	O:0.999986
will	O	O:0.999741
the	O	O:0.999902
lower	O	O:0.999100
value	O	O:0.999640
always	O	O:0.999913
come	O	O:0.999765
first	O	O:0.999433
,	O	O:0.999993
or	O	O:0.999903
could	O	O:0.999679
that	O	O:0.999917
change	O	O:0.999258
?	O	O:0.999811
	
and	O	O:0.999560
get	O	O:0.999494
the	O	O:0.999816
following	O	O:0.997924
error	O	O:0.993087
:	O	O:0.999958
	
In	O	O:0.999958
order	O	O:0.999862
to	O	O:0.999988
have	O	O:0.999849
the	O	O:0.999923
index	O	O:0.999261
the	O	O:0.999975
exact	O	O:0.999964
same	O	O:0.999976
as	O	O:0.999995
the	O	O:0.999990
first	O	O:0.998967
example	O	O:0.998789
you'd	O	O:0.999951
need	O	O:0.999810
to	O	O:0.999975
change	O	O:0.999831
to	O	O:0.999772
int	O	O:0.999906
from	O	O:0.999528
float	O	O:0.936222
.	O	O:0.999936
	
The	O	O:0.999821
graph	O	O:0.998547
bit	O	O:0.999243
is	O	O:0.999731
sorted	O	O:0.998202
but	O	O:0.999827
the	O	O:0.999959
part	O	O:0.985130
i'm	O	O:0.999946
finding	O	O:0.999927
hard	O	O:0.999029
is	O	O:0.999992
the	O	O:0.999956
fact	O	O:0.999812
the	O	O:0.999940
column	O	O:0.999746
headers	O	O:0.999918
can	O	O:0.999929
change	O	O:0.999901
so	O	O:0.999959
picking	O	O:0.999056
up	O	O:0.999935
their	O	O:0.999807
data	O	O:0.999567
without	O	O:0.999707
manually	O	O:0.994827
calling	O	O:0.999822
them	O	O:0.999141
is	O	O:0.999981
something	O	O:0.998969
I'm	O	O:0.999922
unable	O	O:0.999749
to	O	O:0.999893
do	O	O:0.999950
.	O	O:0.999880
	
If	O	O:0.999926
pytables	O	O:0.998212
used	O	O:0.999632
msgpack	O	O:0.991050
it	O	O:0.999576
would	O	O:0.999854
be	O	O:0.999969
easier	O	O:0.999939
for	O	O:0.999817
other	O	O:0.999830
languages	O	O:0.998623
to	O	O:0.999961
read	O	O:0.999875
the	O	O:0.999961
data	O	O:0.999724
but	O	O:0.999962
obviously	O	O:0.999874
their	O	O:0.999397
target	O	O:0.996556
is	O	O:0.999856
python	O	O:0.981431
.	O	O:0.999758
	
The	O	O:0.999873
company	O	O:0.998440
name	O	O:0.999866
may	O	O:0.999808
be	O	O:0.999992
variable	O	O:0.994790
length	O	O:0.990358
,	O	O:0.999854
it	O	O:0.999841
will	O	O:0.996469
however	O	O:0.999912
always	O	O:0.999964
be	O	O:0.999931
after	O	O:0.999635
the	O	O:0.999842
first	O	O:0.994270
`	O	O:0.999960
\s	O	O:0.996558
`	O	O:0.999949
	
To	O	O:0.999963
get	O	O:0.999705
the	O	O:0.999974
same	O	O:0.999928
form	O	O:0.999927
of	O	O:0.999996
broadcasting	O	O:0.999880
to	O	O:0.999940
occur	O	O:0.999818
like	O	O:0.999795
the	O	O:0.999969
diagram	O	O:0.998415
above	O	O:0.999885
shows	O	O:0.999716
we	O	O:0.999997
have	O	O:0.999797
to	O	O:0.999995
decompose	O	O:0.999968
to	O	O:0.999975
numpy	O	O:0.999822
arrays	O	O:0.999017
which	O	O:0.999833
then	O	O:0.999214
become	O	O:0.999926
anonymous	O	O:0.999804
data	O	O:0.996939
:	O	O:0.999967
#CODE	O	O:0.999696
	
I	O	O:0.999983
want	O	O:0.999921
to	O	O:0.999811
generate	O	O:0.999974
a	O	O:0.999993
plot	O	O:0.992505
showing	O	O:0.999876
these	O	O:0.999439
dates	O	O:0.997677
graphically	O	O:0.998119
.	O	O:0.999651
	
How	O	O:0.998789
is	O	O:0.999942
it	O	O:0.999975
possible	O	O:0.999825
to	O	O:0.999975
get	O	O:0.999974
the	O	O:0.999985
label	O	O:0.989249
of	O	O:0.999983
value	O	O:0.998836
'	O	O:0.999969
12	O	O:0.999379
'	O	O:0.999791
?	O	O:0.999936
	
You	O	O:0.999846
shall	O	O:0.998868
note	O	O:0.999839
that	O	O:0.996511
`	O	O:0.999960
and	O	O:0.994817
`	O	O:0.999921
and	O	O:0.995163
`	O	O:0.999982
or	O	O:0.998034
`	O	O:0.999894
are	O	O:0.999823
not	O	O:0.999955
appropriate	O	O:0.999773
for	O	O:0.999960
a	O	O:0.999985
vector	O	O:0.995590
of	O	O:0.999813
booleans	O	O:0.997833
,	O	O:0.999990
use	O	O:0.999387
`	O	O:0.997555
`	O	O:0.998459
and	O	O:0.999233
`	O	O:0.999974
|	O	O:0.987377
`	O	O:0.999886
instead	O	O:0.990735
.	O	O:0.999867
	
No	O	O:0.999636
,	O	O:0.999991
this	O	O:0.999974
table	O	O:0.998386
is	O	O:0.999981
used	O	O:0.999864
by	O	O:0.999905
a	O	O:0.999974
lot	O	O:0.999845
of	O	O:0.999907
other	O	O:0.999634
code	O	O:0.998314
(	O	O:0.999994
mostly	O	O:0.999253
C#	O	O:0.999944
)	O	O:0.999810
,	O	O:0.999977
I	O	O:0.999996
am	O	O:0.999990
just	O	O:0.998948
doing	O	O:0.999974
some	O	O:0.999791
data	O	O:0.999832
analysis	O	O:0.999926
on	O	O:0.999968
it	O	O:0.999986
from	O	O:0.999806
Python	O	O:0.999720
,	O	O:0.999998
so	O	O:0.999957
I'm	O	O:0.999936
not	O	O:0.999868
in	O	O:0.999987
a	O	O:0.999992
position	O	O:0.999455
to	O	O:0.999956
change	O	O:0.999806
the	O	O:0.999690
semantics	O	O:0.999418
/	O	O:0.999990
data	O	O:0.999854
structure	O	O:0.999776
.	O	O:0.999764
	
#	O	O:0.995089
Valid	O	O:0.999521
positions	O	O:0.989295
in	O	O:0.999921
output	O	O:0.999890
array	O	O:0.999578
to	O	O:0.999922
be	O	O:0.999977
changed	O	O:0.997070
	
Is	O	O:0.999991
there	O	O:0.999581
a	O	O:0.999953
bug	O	O:0.998641
in	O	O:0.999902
my	O	O:0.999908
code	O	O:0.999766
or	O	O:0.999948
is	O	O:0.999992
there	O	O:0.999538
another	O	O:0.999625
reason	O	O:0.996206
for	O	O:0.999766
the	O	O:0.999945
huge	O	O:0.994179
computation	O	O:0.999364
speed	O	O:0.999975
difference	O	O:0.999598
between	O	O:0.998956
those	O	O:0.999878
two	O	O:0.999919
lines	O	O:0.999485
of	O	O:0.999975
code	O	O:0.998517
?	O	O:0.999988
	
I	O	O:0.999976
also	O	O:0.999942
used	O	O:0.999879
a	O	O:0.999203
longer	O	O:0.965616
window	O	O:0.997103
because	O	O:0.995809
there	O	O:0.999638
were	O	O:0.999889
only	O	O:0.999448
15	O	O:0.999961
values	O	O:0.998702
per	O	O:0.999531
array	O	O:0.999219
but	O	O:0.999826
you	O	O:0.999681
seemed	O	O:0.999513
to	O	O:0.999965
be	O	O:0.999999
planning	O	O:0.999622
on	O	O:0.999928
using	O	O:0.999790
the	O	O:0.999830
last	O	O:0.984610
50	O	O:0.999951
days	O	O:0.996510
.	O	O:0.999886
	
I	O	O:0.999943
am	O	O:0.999992
trying	O	O:0.999115
to	O	O:0.999954
get	O	O:0.999984
the	O	O:0.999985
data	O	O:0.999884
into	O	O:0.999906
the	O	O:0.999992
following	O	O:0.997261
shape	O	O:0.992316
:	O	O:0.999983
#CODE	O	O:0.999735
	
I	O	O:0.999993
then	O	O:0.999826
get	O	O:0.999785
the	O	O:0.999945
following	O	O:0.998207
error	O	O:0.992978
:	O	O:0.999972
#CODE	O	O:0.999655
	
I	O	O:0.999977
want	O	O:0.999735
to	O	O:0.996182
:	O	O:1.000000
plot	O	O:0.999182
a	O	O:0.999997
heatmap	O	O:0.994196
of	O	O:0.999911
x	O	O:0.998466
,	O	O:0.999995
y	O	O:0.999499
and	O	O:0.999889
the	O	O:0.999954
colour	O	O:0.994704
is	O	O:0.999987
the	O	O:0.999909
z	O	O:0.999665
value	O	O:0.999477
..	O	O:0.999347
	
I'm	O	O:0.999865
also	O	O:0.999545
running	O	O:0.999219
python	O	O:0.961230
3.4	O	O:0.999615
and	O	O:0.999436
I	O	O:0.999967
didn't	O	O:0.999719
get	O	O:0.998784
any	O	O:0.999508
warning	O	O:0.999844
when	O	O:0.995739
I	O	O:0.999996
ran	O	O:0.999993
your	O	O:0.999697
code	O	O:0.999915
exactly	O	O:0.999932
as	O	O:0.999842
is	O	O:0.999823
.	O	O:0.999104
	
This	O	O:0.999907
does	O	O:0.999015
it	O	O:0.999983
in	O	O:0.999983
a	O	O:0.999981
one	O	O:0.996980
liner	O	O:0.997607
but	O	O:0.997595
is	O	O:0.999949
not	O	O:0.997601
so	O	O:0.999983
readable	O	O:0.998831
,	O	O:0.999994
basically	O	O:0.999899
it	O	O:0.999985
tests	O	O:0.999772
where	O	O:0.999820
the	O	O:0.999952
value	O	O:0.999731
counts	O	O:0.997579
for	O	O:0.999990
each	O	O:0.999621
column	O	O:0.997053
is	O	O:0.999994
equal	O	O:0.999438
to	O	O:0.999970
1	O	O:0.999991
,	O	O:0.999990
filters	O	O:0.999878
the	O	O:0.999173
resultant	O	O:0.999391
list	O	O:0.995774
out	O	O:0.999942
and	O	O:0.999791
uses	O	O:0.994960
the	O	O:0.999472
index	O	O:0.998703
as	O	O:0.999978
a	O	O:0.999896
boolean	O	O:0.988200
indec	O	O:0.967481
:	O	O:0.999944
#CODE	O	O:0.998896
	
I	O	O:0.999936
still	O	O:0.999099
think	O	O:0.998688
pandas	O	O:0.983234
is	O	O:0.999986
not	O	O:0.999465
correctly	O	O:0.999838
handling	O	O:0.999923
your	O	O:0.999609
empty	O	O:0.998930
column	O	O:0.998526
and	O	O:0.999930
you	O	O:0.999790
end	O	O:0.996453
up	O	O:0.999955
with	O	O:0.998526
either	O	O:0.999871
with	O	O:0.999732
5	O	O:0.999842
columns	O	O:0.999681
,	O	O:0.999991
or	O	O:0.999995
with	O	O:0.999230
6	O	O:0.999935
columns	O	O:0.996876
,	O	O:0.999989
but	O	O:0.999951
shifted	O	O:0.999671
one	O	O:0.999777
to	O	O:0.999975
the	O	O:0.999991
left	O	O:0.955689
.	O	O:0.999591
	
However	O	O:0.999652
,	O	O:0.999964
I	O	O:0.999993
am	O	O:0.999945
receiving	O	O:0.999695
this	O	O:0.999731
warning	O	O:0.999137
`	O	O:0.999808
/	O	O:0.999203
usr	O	O:0.998475
/	O	O:0.999808
local	O	O:0.929086
/	O	O:0.999887
lib	O	O:0.984315
/	O	O:0.999851
python2.7	O	O:0.784086
/	O	O:0.999820
dist-packages	O	O:0.988351
/	O	O:0.999892
pandas	O	O:0.997215
/	O	O:0.999978
core	O	O:0.862433
/	O	O:0.999794
index	O	O:0.993192
.	O	O:0.999723
	
It	O	O:0.999882
looks	O	O:0.999550
like	O	O:0.999950
this	O	O:0.999850
changed	O	O:0.999534
at	O	O:0.999974
some	O	O:0.999705
point	O	O:0.999376
;	O	O:0.999997
maybe	O	O:0.998086
he	O	O:0.999989
has	O	O:0.999794
an	O	O:0.999931
old	O	O:0.999933
version	O	O:0.999305
of	O	O:0.999960
pandas	O	O:0.997906
where	O	O:0.999311
S	O	O:0.997734
and	O	O:0.999832
Sec	O	O:0.995588
are	O	O:0.998954
no	O	O:0.999627
good	O	O:0.998311
.	O	O:0.999845
	
I	O	O:0.999970
have	O	O:0.999848
also	O	O:0.999767
heard	O	O:0.999896
of	O	O:0.999796
Orange	O	O:0.999263
library	O	O:0.996371
for	O	O:0.999413
imputation	O	O:0.985785
,	O	O:0.999917
but	O	O:0.999579
haven't	O	O:0.999368
had	O	O:0.999822
a	O	O:0.999979
chance	O	O:0.998732
to	O	O:0.999823
use	O	O:0.999956
it	O	O:0.999593
yet	O	O:0.999259
.	O	O:0.999675
	
I	O	O:0.999967
managed	O	O:0.999422
to	O	O:0.999797
find	O	O:0.999435
how	O	O:0.999977
this	O	O:0.999488
is	O	O:0.999949
almost	O	O:0.999271
done	O	O:0.994239
:	O	O:0.999918
#CODE	O	O:0.999381
	
For	O	O:0.999968
this	O	O:0.999678
purpose	O	O:0.998126
you	O	O:0.999834
need	O	O:0.999370
pandas	O	O:0.996732
-	O	O:0.999999
most	O	O:0.999033
popular	O	O:0.998945
python	O	O:0.998505
package	O	O:0.997371
for	O	O:0.998930
working	O	O:0.999129
with	O	O:0.998822
timeseries	O	O:0.997209
and	O	O:0.999905
another	O	O:0.999685
analytic	O	O:0.999419
data	O	O:0.997956
.	O	O:0.999274
	
well	O	O:0.990338
,	O	O:0.999995
what	O	O:0.999467
I	O	O:0.999982
am	O	O:0.999993
trying	O	O:0.998985
to	O	O:0.999969
do	O	O:0.999973
is	O	O:0.999993
to	O	O:0.999978
have	O	O:0.999977
all	O	O:0.999967
my	O	O:0.999875
results	O	O:0.999214
ready	O	O:0.999830
out	O	O:0.999938
of	O	O:0.999866
mysql	O	O:0.958351
,	O	O:0.999948
and	O	O:0.999955
then	O	O:0.999330
do	O	O:0.999976
different	O	O:0.999963
types	O	O:0.992587
of	O	O:0.999986
merging	O	O:0.998726
to	O	O:0.999937
get	O	O:0.999975
my	O	O:0.999905
plots	O	O:0.995272
.	O	O:0.999825
	
I	O	O:0.999960
agree	O	O:0.999758
with	O	O:0.995650
Chang	O	O:0.999779
that	O	O:0.999275
it	O	O:0.999898
would	O	O:0.999956
help	O	O:0.998130
to	O	O:0.999998
have	O	O:0.999971
a	O	O:0.999999
very	O	O:0.999824
clear	O	O:0.999969
example	O	O:0.999886
of	O	O:0.999919
how	O	O:0.999810
the	O	O:0.999972
exact	O	O:0.998507
alignment	O	O:0.999730
should	O	O:0.999568
be	O	O:0.999863
.	O	O:0.999650
	
You	O	O:0.999527
mention	O	O:0.997741
in	O	O:0.999929
update	O	O:0.991808
2	O	O:0.999904
above	O	O:0.999942
that	O	O:0.999379
you	O	O:0.999979
want	O	O:0.999914
to	O	O:0.999930
get	O	O:0.999990
the	O	O:0.999943
columns	O	O:0.991231
and	O	O:0.999952
the	O	O:0.999990
only	O	O:0.999345
way	O	O:0.999649
is	O	O:0.999974
opening	O	O:0.999724
the	O	O:0.999669
hdf	O	O:0.997174
.	O	O:0.999550
	
So	O	O:0.999941
where	O	O:0.999249
those	O	O:0.999263
indices	O	O:0.996838
don't	O	O:0.999772
match	O	O:0.991275
up	O	O:0.999126
(	O	O:0.999871
50	O	O:0.999619
,	O	O:0.999929
and	O	O:0.999918
51	O	O:0.999603
)	O	O:0.999559
,	O	O:0.999967
you	O	O:0.999955
get	O	O:0.998834
`	O	O:0.999973
NaN	O	O:0.985641
`	O	O:0.999997
as	O	O:0.999743
I	O	O:0.999951
would	O	O:0.999907
hope	O	O:0.994252
.	O	O:0.999885
	
However	O	O:0.999299
,	O	O:0.999979
if	O	O:0.999880
I	O	O:0.999993
save	O	O:0.999875
it	O	O:0.999977
as	O	O:0.999994
a	O	O:0.999955
csv	O	O:0.998955
file	O	O:0.997151
and	O	O:0.999483
reload	O	O:0.929102
it	O	O:0.999786
again	O	O:0.999791
,	O	O:0.999968
I	O	O:0.999982
got	O	O:0.999878
error	O	O:0.999040
message	O	O:0.992286
and	O	O:0.999414
the	O	O:0.999919
plot	O	O:0.646047
is	O	O:0.999979
not	O	O:0.999746
quite	O	O:0.999919
right	O	O:0.998773
either	O	O:0.999251
,	O	O:0.999933
#CODE	O	O:0.999170
	
My	O	O:0.999921
main	O	O:0.999208
goal	O	O:0.999179
is	O	O:0.999993
to	O	O:0.999917
match	O	O:0.995999
the	O	O:0.999840
index	O	O:0.998507
value	O	O:0.999974
from	O	O:0.999836
`	O	O:0.999990
ds2	O	O:0.995993
`	O	O:0.999995
into	O	O:0.996002
`	O	O:0.999997
ds1	O	O:0.917422
`	O	O:0.999815
and	O	O:0.999298
replace	O	O:0.994338
it	O	O:0.999955
with	O	O:0.999923
corresponding	O	O:0.999421
value	O	O:0.999915
,	O	O:0.999994
so	O	O:0.999972
the	O	O:0.999888
output	O	O:0.996261
would	O	O:0.999220
look	O	O:0.998702
like	O	O:0.999759
#CODE	O	O:0.998868
	
That	O	O:0.997843
would	O	O:0.999859
be	O	O:0.999987
a	O	O:0.999983
possibility	O	O:0.978461
but	O	O:0.999728
the	O	O:0.999917
problem	O	O:0.956994
is	O	O:0.999992
that	O	O:0.999880
each	O	O:0.999909
frame5	O	O:0.999739
has	O	O:0.999902
a	O	O:0.999936
different	O	O:0.989778
index	O	O:0.982293
.	O	O:0.999497
	
First	O	O:0.999066
,	O	O:0.999972
you	O	O:0.999945
need	O	O:0.999651
some	O	O:0.999974
kind	O	O:0.999945
of	O	O:0.999997
mapping	O	O:0.996598
of	O	O:0.999957
what	O	O:0.999506
makes	O	O:0.999533
up	O	O:0.999985
each	O	O:0.999089
level	O	O:0.996335
.	O	O:0.999641
	
PyTables	O	O:0.997429
3.1	O	O:0.987791
was	O	O:0.999958
just	O	O:0.998858
released	O	O:0.999990
that	O	O:0.999606
changes	O	O:0.999891
the	O	O:0.999983
file	O	O:0.999236
caching	O	O:0.999698
mechanism	O	O:0.999856
at	O	O:0.999986
least	O	O:0.998996
on	O	O:0.999988
a	O	O:0.999911
lower	O	O:0.998916
HDF5	O	O:0.993699
version	O	O:0.995313
,	O	O:0.999995
do	O	O:0.999975
to	O	O:0.999972
see	O	O:0.999998
your	O	O:0.999329
version	O	O:0.992349
:	O	O:0.999982
#CODE	O	O:0.999499
	
backfilling	O	O:0.948623
data	O	O:0.999916
from	O	O:0.999873
one	O	O:0.999763
column	O	O:0.999978
into	O	O:0.999681
another	O	O:0.999557
	
Also	O	O:0.999592
,	O	O:0.999979
I	O	O:0.999996
know	O	O:0.999720
I	O	O:0.999981
am	O	O:0.999989
missing	O	O:0.995969
patterns	O	O:0.998855
that	O	O:0.999915
may	O	O:0.999959
be	O	O:0.999926
useful	O	O:0.998601
because	O	O:0.998678
if	O	O:0.999937
a	O	O:0.999967
pattern	O	O:0.948433
exists	O	O:0.998654
between	O	O:0.993633
Variable_1	O	O:0.976126
and	O	O:0.997900
Variable_2	O	O:0.915405
and	O	O:0.997259
Variable_3	O	O:0.888191
and	O	O:0.998783
Variable_4	O	O:0.981253
are	O	O:0.999364
missing	O	O:0.999570
completely	O	O:0.998616
at	O	O:0.999959
random	O	O:0.993293
,	O	O:0.999993
then	O	O:0.999586
concatenating	O	O:0.999985
them	O	O:0.999893
as	O	O:0.999961
strings	O	O:0.998617
will	O	O:0.999716
not	O	O:0.999850
capture	O	O:0.998986
the	O	O:0.999956
pattern	O	O:0.937619
between	O	O:0.996143
Variable_1	O	O:0.994079
and	O	O:0.999370
Variable_2	O	O:0.966003
.	O	O:0.997934
	
Do	O	O:0.999924
you	O	O:0.999890
know	O	O:0.999922
what	O	O:0.999533
is	O	O:0.999981
the	O	O:0.999948
difference	O	O:0.996270
in	O	O:0.999978
this	O	O:0.999976
case	O	O:0.999229
between	O	O:0.999261
both	O	O:0.999408
?	O	O:0.999932
	
The	O	O:0.999959
goal	O	O:0.997100
is	O	O:0.999978
to	O	O:0.999977
take	O	O:0.999970
the	O	O:0.999955
2x2	O	O:0.999953
piece	O	O:0.999597
of	O	O:0.999988
df	O	O:0.996709
with	O	O:0.999313
index	O	O:0.989208
(	O	O:0.999979
4	O	O:0.999922
,	O	O:0.999987
5	O	O:0.999904
)	O	O:0.999695
and	O	O:0.999177
columns	O	O:0.997522
(	O	O:0.999963
'	O	O:0.999986
date	O	O:0.999825
'	O	O:0.999976
,	O	O:0.999978
'	O	O:0.999970
val	O	O:0.972905
')	O	O:0.999006
and	O	O:0.999109
replace	O	O:0.985801
it	O	O:0.999977
with	O	O:0.999932
a	O	O:0.999894
same-shaped	O	O:0.998998
,	O	O:0.999933
same-typed	O	O:0.999708
2x2	O	O:0.999193
block	O	O:0.998213
.	O	O:0.999658
	
Convert	O	O:0.993351
Matrix	O	O:0.740872
format	O	O:0.999685
to	O	O:0.999910
Column	O	O:0.999917
in	O	O:0.999889
Pandas	O	O:0.999590
	
`	O	O:0.999873
nan	O	O:0.877607
`	O	O:0.999974
is	O	O:0.999948
commonly	O	O:0.999858
used	O	O:0.999533
for	O	O:0.999888
this	O	O:0.998892
purpose	O	O:0.978222
,	O	O:0.999901
but	O	O:0.999963
here	O	O:0.999613
I'm	O	O:0.999950
actually	O	O:0.999954
just	O	O:0.999421
using	O	O:0.999761
the	O	O:0.999398
time	O	O:0.999576
that	O	O:0.999480
was	O	O:0.999984
already	O	O:0.999921
there	O	O:0.999534
if	O	O:0.999936
there	O	O:0.998764
isn't	O	O:0.999818
a	O	O:0.999914
new	O	O:0.997780
one	O	O:0.999350
defined	O	O:0.999124
for	O	O:0.999864
it	O	O:0.999857
in	O	O:0.999939
the	O	O:0.999816
`	O	O:0.999910
time_map	O	O:0.840846
`	O	O:0.999972
`	O	O:0.999984
dict	O	O:0.994714
`	O	O:0.999968
.	O	O:0.998843
	
I	O	O:0.999981
want	O	O:0.999869
to	O	O:0.999898
drop	O	O:0.999234
all	O	O:0.999928
values	O	O:0.984456
after	O	O:0.999130
index	O	O:0.995183
`	O	O:0.999893
5	O	O:0.998784
`	O	O:0.999977
because	O	O:0.997742
it	O	O:0.999989
has	O	O:0.999947
no	O	O:0.999896
values	O	O:0.992859
,	O	O:0.999948
but	O	O:0.999303
not	O	O:0.998912
index	O	O:0.997212
`	O	O:0.999978
2	O	O:0.999010
`	O	O:0.999987
,	O	O:0.999876
`	O	O:0.999989
3	O	O:0.996698
`	O	O:0.999960
.	O	O:0.998905
	
You	O	O:0.999484
should	O	O:0.999412
be	O	O:0.999991
able	O	O:0.999868
to	O	O:0.999869
uninstall	O	O:0.998633
Anaconda	O	O:0.993806
(	O	O:0.999941
it	O	O:0.999853
is	O	O:0.999998
only	O	O:0.999829
a	O	O:0.999998
directory	O	O:0.999044
)	O	O:0.999907
to	O	O:0.999790
reverse	O	O:0.999975
any	O	O:0.999645
changes	O	O:0.996023
.	O	O:0.999270
	
Since	O	O:0.999449
it	O	O:0.999846
is	O	O:0.999989
a	O	O:0.999991
very	O	O:0.999601
large	O	O:0.999898
data	O	O:0.999448
frame	O	O:0.999783
,	O	O:0.999964
I	O	O:0.999994
think	O	O:0.999176
it	O	O:0.999826
might	O	O:0.998787
be	O	O:0.999974
inefficient	O	O:0.999850
to	O	O:0.999938
do	O	O:0.999987
a	O	O:0.999991
loop	O	O:0.997130
and	O	O:0.999811
row	O	O:0.999893
by	O	O:0.999713
row	O	O:0.999673
extraction	O	O:0.998809
.	O	O:0.999821
	
Since	O	O:0.999334
the	O	O:0.999868
NumPy	O	O:0.999478
array	O	O:0.999081
has	O	O:0.999599
no	O	O:0.999635
index	O	O:0.998717
,	O	O:0.999996
there	O	O:0.999199
should	O	O:0.999544
be	O	O:0.999970
no	O	O:0.999531
"	O	O:0.999857
Unalignable	O	O:0.979246
boolean	O	O:0.994915
Series	O	O:0.973901
"	O	O:0.999881
problem	O	O:0.993471
.	O	O:0.999648
	
My	O	O:0.999964
guess	O	O:0.993362
is	O	O:0.999998
that	O	O:0.999285
I	O	O:0.999998
am	O	O:0.999926
either	O	O:0.999426
not	O	O:0.999826
applying	O	O:0.999878
the	O	O:0.999192
functions	O	O:0.999814
correctly	O	O:0.999831
for	O	O:0.999994
a	O	O:0.999987
column	O	O:0.997439
or	O	O:0.999965
the	O	O:0.999919
values	O	O:0.998474
I	O	O:0.999993
am	O	O:0.999994
getting	O	O:0.995052
arent	O	O:0.998852
integers	O	O:0.998526
.	O	O:0.999539
	
which	O	O:0.999459
gives	O	O:0.999437
you	O	O:0.999996
your	O	O:0.999984
date	O	O:0.999989
as	O	O:0.999984
a	O	O:0.999997
list	O	O:0.986105
arranged	O	O:0.999732
in	O	O:0.999781
the	O	O:0.999936
order	O	O:0.999476
of	O	O:0.999653
importance	O	O:0.997468
...	O	O:0.998241
	
I'm	O	O:0.999770
not	O	O:0.999869
sure	O	O:0.999879
what	O	O:0.999762
the	O	O:0.999984
difference	O	O:0.998323
was	O	O:0.999591
.	O	O:0.999834
	
The	O	O:0.999814
mongodb	O	O:0.997453
collection	O	O:0.998479
contains	O	O:0.999727
sensor	O	O:0.999918
values	O	O:0.995587
tagged	O	O:0.999809
with	O	O:0.999890
date	O	O:0.998164
and	O	O:0.999981
time	O	O:0.999725
.	O	O:0.999308
	
This	O	O:0.997134
should	O	O:0.998849
not	O	O:0.999941
make	O	O:0.999709
any	O	O:0.999884
difference	O	O:0.998616
.	O	O:0.998822
	
I	O	O:0.999685
would	O	O:0.999964
like	O	O:0.999549
to	O	O:0.999988
split	O	O:0.997047
that	O	O:0.999880
file	O	O:0.999979
into	O	O:0.999975
files	O	O:0.999983
of	O	O:0.999578
len	O	B-API:0.993957
(	O	O:0.999971
index	O	O:0.990843
)	O	O:0.999972
=	O	O:0.999904
2	O	O:0.999945
,	O	O:0.999980
using	O	O:0.998414
linux	O	O:0.708204
:	O	O:0.999771
#CODE	O	O:0.999055
	
You	O	O:0.999899
can	O	O:0.999729
coerce	O	O:0.999854
the	O	O:0.999929
response	O	O:0.999651
into	O	O:0.999910
a	O	O:1.000000
data	O	O:0.999888
frame	O	O:0.999624
after	O	O:0.999821
you	O	O:0.999609
get	O	O:0.998915
it	O	O:0.999882
.	O	O:0.999734
	
Oh	O	O:0.999971
wait	O	O:0.984321
,	O	O:0.999996
your	O	O:0.999275
matrix	O	O:0.997296
must	O	O:0.999787
already	O	O:0.999854
be	O	O:0.999920
in	O	O:0.999868
the	O	O:0.999977
form	O	O:0.999791
of	O	O:0.999992
differences	O	O:0.999851
from	O	O:0.999908
the	O	O:0.999952
mean	O	O:0.980022
(	O	O:0.999997
by	O	O:0.999991
column	O	O:0.999583
)	O	O:0.999896
?	O	O:0.999863
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
I	O	O:0.999967
get	O	O:0.999863
the	O	O:0.999703
following	O	O:0.997959
error	O	O:0.991637
:	O	O:0.999972
#CODE	O	O:0.999655
	
I	O	O:0.999986
am	O	O:0.999988
curious	O	O:0.998311
why	O	O:0.999989
doing	O	O:0.998061
`	O	O:0.999731
unique_df	O	B-API:0.647616
[	O	O:0.999988
i	O	O:0.999966
]	O	O:0.999972
=	O	O:0.999757
"	O	O:0.999931
AAA	O	O:0.998584
"`	O	O:0.999962
no	O	O:0.998748
longer	O	O:0.999948
modifies	O	O:0.999598
the	O	O:0.999972
data	O	O:0.999641
frame	O	O:0.999873
values	O	O:0.998404
.	O	O:0.999880
	
Unfortunately	O	O:0.998591
I	O	O:0.999984
get	O	O:0.999718
an	O	O:0.999811
error	O	O:0.999405
,	O	O:0.999908
and	O	O:0.999894
the	O	O:0.999679
shading	O	O:0.811800
doesn't	O	O:0.998487
work	O	O:0.995924
.	O	O:0.999820
	
The	O	O:0.999976
range	O	O:0.999570
of	O	O:0.999903
the	O	O:0.999520
values	O	O:0.998509
in	O	O:0.999654
`	O	O:0.999979
megaball	O	B-API:0.917314
`	O	O:0.999983
are	O	O:0.999855
from	O	O:0.999920
1	O	O:0.999914
to	O	O:0.999978
25	O	O:0.999960
,	O	O:0.999793
and	O	O:0.999972
this	O	O:0.999959
line	O	O:0.999501
of	O	O:0.999958
code	O	O:0.980642
:	O	O:0.999988
#CODE	O	O:0.999512
	
yes	O	O:0.998594
it	O	O:0.999798
works	O	O:0.999769
fine	O	O:0.999866
but	O	O:0.999867
I	O	O:0.999996
need	O	O:0.999343
to	O	O:0.999958
drop	O	O:0.996830
'	O	O:0.999898
2014-07-16	O	O:0.995758
14:24	O	O:0.995263
'	O	O:0.999873
thnx	O	O:0.996434
	
If	O	O:0.999927
you	O	O:0.999872
have	O	O:0.999907
more	O	O:0.999815
pressing	O	O:0.999913
things	O	O:0.999755
to	O	O:0.999969
do	O	O:0.999979
,	O	O:0.999997
you	O	O:0.999825
could	O	O:0.999812
temporarily	O	O:0.999914
rename	O	O:0.999308
it	O	O:0.999986
out	O	O:0.999982
of	O	O:0.999948
the	O	O:0.999813
way	O	O:0.999896
to	O	O:0.999926
get	O	O:0.999976
through	O	O:0.999947
your	O	O:0.999386
installs	O	O:0.999294
,	O	O:0.999994
then	O	O:0.998561
rename	O	O:0.999345
it	O	O:0.999970
back	O	O:0.999006
.	O	O:0.999831
	
As	O	O:0.999992
you	O	O:0.999920
can	O	O:0.999942
see	O	O:0.999988
,	O	O:0.999997
the	O	O:0.999982
lines	O	O:0.997904
overlap	O	O:0.998379
perfectly	O	O:0.999638
for	O	O:0.999969
the	O	O:0.999964
days	O	O:0.997643
where	O	O:0.999887
there	O	O:0.999396
is	O	O:0.999992
data	O	O:0.997788
:	O	O:0.999988
no	O	O:0.999954
original	O	O:0.999934
data	O	O:0.999814
is	O	O:0.999980
'	O	O:0.999884
changed	O	O:0.998141
'	O	O:0.999615
.	O	O:0.999361
	
I	O	O:0.999992
have	O	O:0.999908
a	O	O:0.999969
massive	O	O:0.998672
file	O	O:0.999825
with	O	O:0.999842
per	O	O:0.999830
timestamp	O	O:0.999826
survey	O	O:0.999955
data	O	O:0.999947
from	O	O:0.999714
about	O	O:0.999957
thousands	O	O:0.999859
of	O	O:0.999925
different	O	O:0.997367
people	O	O:0.991624
and	O	O:0.999949
over	O	O:0.999273
20	O	O:0.999831
different	O	O:0.997456
locations	O	O:0.982359
.	O	O:0.999577
	
So	O	O:0.999967
if	O	O:0.999951
you	O	O:0.999980
have	O	O:0.999819
a	O	O:0.999989
million	O	O:0.993591
items	O	O:0.999817
that	O	O:0.999608
,	O	O:0.999990
on	O	O:0.999962
average	O	O:0.998774
,	O	O:0.999985
belong	O	O:0.999605
to	O	O:0.999963
three	O	O:0.999909
categories	O	O:0.998839
each	O	O:0.999534
,	O	O:0.999999
then	O	O:0.999674
you	O	O:0.999988
need	O	O:0.999884
storage	O	O:0.999834
for	O	O:0.999975
the	O	O:0.999766
million	O	O:0.981927
items	O	O:0.999879
plus	O	O:0.999791
three	O	O:0.999729
million	O	O:0.997931
references	O	O:0.998340
.	O	O:0.999621
	
Given	O	O:0.988345
how	O	O:0.999821
the	O	O:0.999921
sample	O	O:0.981805
was	O	O:0.999912
built	O	O:0.999658
,	O	O:0.999998
there	O	O:0.999233
was	O	O:0.999881
a	O	O:0.999985
need	O	O:0.998710
to	O	O:0.999777
weight	O	O:0.999150
adjust	O	O:0.998847
the	O	O:0.999911
respondent	O	O:0.999477
data	O	O:0.999759
so	O	O:0.999996
that	O	O:0.999916
not	O	O:0.999968
every	O	O:0.999812
one	O	O:0.999675
is	O	O:0.999973
deemed	O	O:0.999493
as	O	O:0.999874
"	O	O:0.999897
equal	O	O:0.997432
"	O	O:0.999972
when	O	O:0.998378
performing	O	O:0.999768
the	O	O:0.999815
analysis	O	O:0.997978
.	O	O:0.999498
	
What	O	O:0.998309
I'm	O	O:0.999895
hoping	O	O:0.999527
to	O	O:0.999890
achieve	O	O:0.999784
is	O	O:0.999989
knowing	O	O:0.999113
where	O	O:0.999319
the	O	O:0.999881
first	O	O:0.997008
/	O	O:0.999986
last	O	O:0.999669
row	O	O:0.999971
of	O	O:0.999902
trimmed	O	O:0.999868
data	O	O:0.999647
is	O	O:0.999980
located	O	O:0.999884
so	O	O:0.999990
I	O	O:0.999994
can	O	O:0.999954
set	O	O:0.999834
up	O	O:0.999989
a	O	O:0.999967
for-loop	O	O:0.999684
to	O	O:0.999934
go	O	O:0.999950
through	O	O:0.999810
the	O	O:0.999967
data	O	O:0.998315
and	O	O:0.999878
perform	O	O:0.999769
mathematical	O	O:0.979541
calculations	O	O:0.999530
with	O	O:0.999828
the	O	O:0.999727
values	O	O:0.990920
and	O	O:0.999952
then	O	O:0.999848
send	O	O:0.999966
those	O	O:0.999516
results	O	O:0.999351
back	O	O:0.999774
into	O	O:0.999918
new	O	O:0.999958
columns	O	O:0.998514
attached	O	O:0.999990
directly	O	O:0.999755
to	O	O:0.999935
the	O	O:0.999999
same	O	O:0.999976
date	O	O:0.999987
as	O	O:1.000000
the	O	O:0.999993
date	O	O:0.999702
in	O	O:0.999925
question	O	O:0.999700
.	O	O:0.999864
	
Ultimately	O	O:0.998615
I	O	O:0.999989
want	O	O:0.999904
to	O	O:0.999521
be	O	O:1.000000
able	O	O:0.999885
to	O	O:0.999980
loop	O	O:0.999957
through	O	O:0.999784
the	O	O:0.999979
json	O	O:0.998811
to	O	O:0.999988
display	O	O:0.999954
the	O	O:0.999972
dates	O	O:0.976652
and	O	O:0.999946
corresponding	O	O:0.999185
values	O	O:0.971045
,	O	O:0.999982
but	O	O:0.999838
I	O	O:0.999994
cant	O	O:0.999470
do	O	O:0.999968
that	O	O:0.999776
until	O	O:0.999818
this	O	O:0.999927
error	O	O:0.999145
is	O	O:0.999977
no	O	O:0.998898
longer	O	O:0.999691
happening	O	O:0.997988
.	O	O:0.996961
	
They	O	O:0.999036
are	O	O:0.999778
however	O	O:0.999836
extremely	O	O:0.998970
useful	O	O:0.999738
once	O	O:0.999787
you	O	O:0.999863
get	O	O:0.999948
to	O	O:0.999975
grips	O	O:0.999834
with	O	O:0.999986
them	O	O:0.998026
.	O	O:0.999863
	
I	O	O:0.999980
know	O	O:0.999900
the	O	O:0.999700
values	O	O:0.986353
within	O	O:0.999480
the	O	O:0.999843
CSV	O	O:0.999094
are	O	O:0.999799
not	O	O:0.999728
all	O	O:0.999561
"	O	O:0.999915
NaN	O	O:0.986012
"	O	O:0.999966
so	O	O:0.999899
why	O	O:0.999985
does	O	O:0.998852
the	O	O:0.999898
output	O	O:0.998341
looks	O	O:0.999185
like	O	O:0.999882
this	O	O:0.999626
and	O	O:0.999912
how	O	O:0.999930
can	O	O:0.999296
I	O	O:0.999998
get	O	O:0.999969
the	O	O:0.999723
correct	O	O:0.997649
output	O	O:0.999900
with	O	O:0.999882
the	O	O:0.999773
numbers	O	O:0.997921
in	O	O:0.999992
reach	O	O:0.999947
of	O	O:0.999992
the	O	O:0.999939
rows	O	O:0.998453
?	O	O:0.999966
	
I've	O	O:0.999169
filtered	O	O:0.999911
my	O	O:0.999979
data	O	O:0.999926
as	O	O:0.999965
suggested	O	O:0.999897
here	O	O:0.996974
:	O	O:0.999986
With	O	O:0.999793
Pandas	O	O:0.999753
in	O	O:0.999895
Python	O	O:0.999560
,	O	O:0.999985
select	O	O:0.999395
the	O	O:0.999885
highest	O	O:0.999266
value	O	O:0.999886
row	O	O:0.999874
for	O	O:0.999968
each	O	O:0.998145
group	O	O:0.992333
#CODE	O	O:0.999307
	
I	O	O:0.999873
was	O	O:0.999996
able	O	O:0.999566
to	O	O:0.999969
get	O	O:0.999949
the	O	O:0.999988
more	O	O:0.999090
precise	O	O:0.999566
value	O	O:0.999842
in	O	O:0.999988
my	O	O:0.999857
previous	O	O:0.999487
environment	O	O:0.999909
by	O	O:0.999971
doing	O	O:0.998497
the	O	O:0.999781
incremental	O	O:0.984915
update	O	O:0.995818
to	O	O:0.999939
cumulative	O	O:0.999977
mean	O	O:0.998270
instead	O	O:0.999881
of	O	O:0.999984
taking	O	O:0.999163
a	O	O:0.999929
batch	O	O:0.994825
sum	O	O:0.986973
and	O	O:0.999253
divide	O	O:0.735956
.	O	O:0.998087
	
Then	O	O:0.998566
use	O	O:0.999966
the	O	O:0.999093
`	O	O:0.999608
~	O	O:0.998555
`	O	O:0.999993
to	O	O:0.999977
flip	O	O:0.999953
the	O	O:0.999939
bools	O	O:0.994431
.	O	O:0.999813
	
The	O	O:0.999864
above	O	O:0.999185
entire	O	O:0.998576
expression	O	O:0.998371
is	O	O:0.999980
therefore	O	O:0.999820
evaluating	O	O:0.999848
to	O	O:0.999869
an	O	O:0.999998
array	O	O:0.999855
of	O	O:0.999976
truth	O	O:0.998406
values	O	O:0.999501
,	O	O:0.999957
rather	O	O:0.999979
than	O	O:0.999752
a	O	O:0.999981
single	O	O:0.995620
`	O	O:0.999963
True	O	O:0.967005
`	O	O:0.999983
/	O	O:0.998330
`	O	O:0.999980
False	O	O:0.940630
`	O	O:0.999896
.	O	O:0.998178
	
For	O	O:0.999740
the	O	O:0.999768
multiprocessing	O	O:0.982435
:	O	O:0.999993
You	O	O:0.999992
can	O	O:0.999963
distribute	O	O:0.996061
the	O	O:0.999990
data	O	O:0.999934
sets	O	O:0.999847
across	O	O:0.999968
cores	O	O:0.999628
,	O	O:0.999997
do	O	O:0.999912
`	O	O:0.999969
partial_fit	O	B-API:0.987868
`	O	O:0.999977
,	O	O:0.999967
get	O	O:0.999918
the	O	O:0.999706
weight	O	O:0.986406
vectors	O	O:0.998435
,	O	O:0.999986
average	O	O:0.999991
them	O	O:0.998856
,	O	O:0.999992
distribute	O	O:0.999315
them	O	O:0.999798
to	O	O:0.999981
the	O	O:0.999990
estimators	O	O:0.999101
,	O	O:0.999993
do	O	O:0.999994
partial	O	O:0.997315
fit	O	O:0.998556
again	O	O:0.998715
.	O	O:0.999540
	
the	O	O:0.999958
size	O	O:0.999827
of	O	O:0.999975
Y	O	O:0.999408
is	O	O:0.999994
100e6	O	O:0.990743
x	O	O:0.998245
1	O	O:0.999681
	
Put	O	O:0.998927
I	O	O:0.999969
think	O	O:0.999884
that	O	O:0.996918
following	O	O:0.999969
this	O	O:0.999750
route	O	O:0.998023
would	O	O:0.999777
lead	O	O:0.999830
to	O	O:0.999930
an	O	O:0.999985
inefficient	O	O:0.999501
solution	O	O:0.999147
.	O	O:0.999765
	
Your	O	O:0.999703
example	O	O:0.999810
come	O	O:0.999826
at	O	O:0.999987
a	O	O:0.999967
good	O	O:0.999759
time	O	O:0.999810
for	O	O:0.999944
me	O	O:0.999905
,	O	O:0.999990
so	O	O:0.999984
I	O	O:0.999982
now	O	O:0.999991
have	O	O:0.999619
something	O	O:0.999957
concrete	O	O:0.999474
to	O	O:0.999984
train	O	O:0.998469
with	O	O:0.999548
.	O	O:0.999298
	
One	O	O:0.999968
thing	O	O:0.998886
I	O	O:0.999966
find	O	O:0.999902
very	O	O:0.998964
confortable	O	O:0.999219
with	O	O:0.999937
Numpy	O	O:0.998549
is	O	O:0.999981
the	O	O:0.999900
vectorization	O	O:0.999520
of	O	O:0.999919
operations	O	O:0.999837
with	O	O:0.999770
arrays	O	O:0.997723
(	O	O:0.999981
ie	O	O:0.999948
.	O	O:0.999977
the	O	O:0.999976
absence	O	O:0.999480
of	O	O:0.999963
any	O	O:0.999824
explicit	O	O:0.999790
looping	O	O:0.989072
)	O	O:0.999604
,	O	O:0.999503
and	O	O:0.999930
the	O	O:0.999579
implicit	O	O:0.985980
element-by-element	O	O:0.999939
behavior	O	O:0.999687
of	O	O:0.999921
operations	O	O:0.994671
.	O	O:0.999745
	
I	O	O:0.999961
suggest	O	O:0.999632
to	O	O:0.999787
set	O	O:0.999888
it	O	O:0.999982
to	O	O:0.999989
some	O	O:0.999993
reasonable	O	O:0.999923
upper	O	O:0.999528
limit	O	O:0.985635
,	O	O:0.999961
though	O	O:0.998409
.	O	O:0.999089
	
Gonna	O	O:0.999714
try	O	O:0.999734
to	O	O:0.999981
find	O	O:0.999926
another	O	O:0.999486
solution	O	O:0.999308
.	O	O:0.999656
	
Is	O	O:0.999930
it	O	O:0.999983
possible	O	O:0.999816
to	O	O:0.999988
construct	O	O:0.999983
a	O	O:0.999981
`	O	O:0.999973
numpy	O	O:0.958172
`	O	O:0.999980
matrix	O	O:0.995887
from	O	O:0.999980
a	O	O:0.999775
function	O	O:0.999696
?	O	O:0.999939
	
I	O	O:0.999986
have	O	O:0.999709
2D	O	O:0.999970
numpy	O	O:0.999152
array	O	O:0.998987
,	O	O:0.999992
with	O	O:0.999690
example	O	O:0.996988
shape	O	O:0.998719
:	O	O:0.999986
#CODE	O	O:0.999565
	
`	O	O:0.999843
grid	O	O:0.994786
[	O	O:0.999997
0	O	O:0.999988
]`	O	O:0.999963
can	O	O:0.999115
be	O	O:0.999999
used	O	O:0.999951
as	O	O:0.999935
a	O	O:0.999982
proxy	O	O:0.990493
for	O	O:0.999341
the	O	O:0.999299
index	O	O:0.978716
`	O	O:0.999960
i	O	O:0.999719
`	O	O:0.999980
,	O	O:0.999378
and	O	O:0.999825
	
Thank	O	O:0.999042
you	O	O:0.999717
Martijn	O	O:0.999535
:)	O	O:0.999970
-	O	O:0.999998
your	O	O:0.999832
are	O	O:0.999530
BIG	O	O:0.999641
help	O	O:0.978737
,	O	O:0.999889
and	O	O:0.999967
just	O	O:0.998296
one	O	O:0.999945
thing	O	O:0.999503
confuses	O	O:0.998997
me	O	O:0.999953
,	O	O:0.999987
how	O	O:0.999979
do	O	O:0.999779
I	O	O:0.999999
tell	O	O:0.999589
python	O	O:0.994306
to	O	O:0.999975
read	O	O:0.999798
all	O	O:0.999622
CDR	O	O:0.999920
records	O	O:0.997413
if	O	O:0.999915
record	O	O:0.999081
is	O	O:0.999869
907	O	O:0.999303
bytes	O	O:0.997892
long	O	O:0.998534
.	O	O:0.999295
	
I	O	O:0.999989
want	O	O:0.999917
to	O	O:0.999654
get	O	O:0.999981
the	O	O:0.999988
elements	O	O:0.999797
of	O	O:0.999994
a	O	O:0.999948
`	O	O:0.999988
numpy	O	O:0.951063
`	O	O:0.999981
array	O	O:0.999294
using	O	O:0.999202
an	O	O:0.997552
index	O	O:0.992594
array	O	O:0.999879
like	O	O:0.998819
so	O	O:0.999878
#CODE	O	O:0.999369
	
I	O	O:0.999959
can	O	O:0.999315
weight	O	O:0.999654
them	O	O:0.999894
how	O	O:0.999667
I	O	O:0.999995
want	O	O:0.999953
to	O	O:0.999712
as	O	O:1.000000
long	O	O:0.999824
as	O	O:0.999990
sum	O	O:0.998635
of	O	O:0.999970
their	O	O:0.998045
weights	O	O:0.998012
adds	O	O:0.999875
to	O	O:0.999918
1	O	O:0.999958
.	O	O:0.999737
	
I	O	O:0.999898
wanted	O	O:0.999666
to	O	O:0.999850
try	O	O:0.999993
to	O	O:0.999981
duplicate	O	O:0.999956
those	O	O:0.999928
performance	O	O:0.999872
gains	O	O:0.999912
when	O	O:0.999651
solving	O	O:0.999885
the	O	O:0.999961
distance	O	O:0.998692
between	O	O:0.997603
two	O	O:0.999978
equal	O	O:0.999419
sized	O	O:0.997073
arrays	O	O:0.997937
.	O	O:0.999465
	
Even	O	O:0.997272
if	O	O:0.999876
it	O	O:0.999395
worked	O	O:0.999537
,	O	O:0.999966
I	O	O:0.999933
would	O	O:0.999750
not	O	O:0.999061
expect	O	O:0.999951
any	O	O:0.999829
speed-up	O	O:0.999660
from	O	O:0.999819
this	O	O:0.999816
compared	O	O:0.999976
to	O	O:0.999948
an	O	O:0.999993
ordinary	O	O:0.999673
loop	O	O:0.998961
,	O	O:0.999994
since	O	O:0.999521
it	O	O:0.999984
needs	O	O:0.999881
to	O	O:0.999996
call	O	O:0.999408
a	O	O:0.999996
Python	O	O:0.988076
function	O	O:0.999414
for	O	O:0.999941
every	O	O:0.998525
entry	O	O:0.997789
.	O	O:0.999494
	
@USER	O	O:0.998239
,	O	O:0.999968
you're	O	O:0.999760
right	O	O:0.999134
,	O	O:0.999996
if	O	O:0.999971
you	O	O:0.999963
have	O	O:0.999739
to	O	O:0.999979
convert	O	O:0.999978
everything	O	O:0.999891
to	O	O:0.999930
ndarrays	O	O:0.999951
it's	O	O:0.999621
often	O	O:0.998836
not	O	O:0.999533
worth	O	O:0.999634
it	O	O:0.999813
.	O	O:0.999774
	
An	O	O:0.999913
example	O	O:0.997891
implementation	O	O:0.999663
without	O	O:0.999745
recalculating	O	O:0.994180
the	O	O:0.999832
distance	O	O:0.999699
array	O	O:0.998360
would	O	O:0.999491
be	O	O:0.999982
this	O	O:0.998865
:	O	O:0.999941
#CODE	O	O:0.999026
	
I	O	O:0.999986
need	O	O:0.999642
to	O	O:0.999865
return	O	O:0.999857
all	O	O:0.999497
of	O	O:0.999973
the	O	O:0.998984
points	O	O:0.996847
within	O	O:0.999759
a	O	O:0.999992
distance	O	O:0.999926
of	O	O:0.999892
X	O	O:0.999778
units	O	O:0.999136
from	O	O:0.999822
every	O	O:0.998814
point	O	O:0.999664
.	O	O:0.999633
	
EDIT	O	O:0.994443
:	O	O:0.999978
Actually	O	O:0.999887
renaming	O	O:0.999897
my	O	O:0.999595
package	O	O:0.999194
does	O	O:0.999175
not	O	O:0.999730
fix	O	O:0.999605
it	O	O:0.999805
.	O	O:0.999785
	
2	O	O:0.999705
)	O	O:0.999974
look	O	O:0.994701
at	O	O:0.999992
the	O	O:0.999699
lengths	O	O:0.925685
distance	O	O:0.997834
(	O	O:0.999983
point	O	O:0.999751
,	O	O:0.999986
centre	O	O:0.998889
,	O	O:0.999913
metric=	O	O:0.999679
...	O	O:0.999580
)	O	O:0.999930
of	O	O:0.999819
all	O	O:0.999149
the	O	O:0.999950
rays	O	O:0.977996
.	O	O:0.999782
	
Sorry	O	O:0.999174
,	O	O:0.999981
all	O	O:0.999503
are	O	O:0.999904
positive	O	O:0.998403
values	O	O:0.998676
greater	O	O:0.999977
than	O	O:0.999076
0	O	O:0.999626
.	O	O:0.999700
	
After	O	O:0.999975
that	O	O:0.999231
I	O	O:0.999992
convert	O	O:0.999290
the	O	O:0.999851
image	O	O:0.999415
to	O	O:0.999724
BGR	O	O:0.999958
model	O	O:0.989080
:	O	O:0.999957
#CODE	O	O:0.999243
	
How	O	O:0.999950
do	O	O:0.999827
I	O	O:0.999997
standardize	O	O:0.973972
a	O	O:0.999649
matrix	O	O:0.961501
?	O	O:0.999865
	
Speed	O	O:0.999532
can	O	O:0.999763
probably	O	O:0.999780
be	O	O:0.999965
increased	O	O:0.999901
by	O	O:0.999889
ensuring	O	O:0.999878
that	O	O:0.999159
the	O	O:0.999955
record	O	O:0.999403
array	O	O:0.999678
you	O	O:0.999985
pass	O	O:0.999449
to	O	O:0.999982
Cython	O	O:0.999940
is	O	O:0.999977
contiguous	O	O:0.996643
.	O	O:0.999872
	
fid	O	O:0.981343
is	O	O:0.999973
the	O	O:0.999963
file	O	O:0.999295
currently	O	O:0.999611
being	O	O:0.999813
looked	O	O:0.999340
at	O	O:0.999174
	
I'm	O	O:0.999732
guessing	O	O:0.998755
it's	O	O:0.999255
opening	O	O:0.999333
TWO	O	O:0.999880
filehandles	O	O:0.997814
per	O	O:0.999256
iteration	O	O:0.998930
,	O	O:0.999992
just	O	O:0.999644
based	O	O:0.999810
on	O	O:0.999965
the	O	O:0.999793
498	O	O:0.998326
(	O	O:0.999991
a	O	O:0.999987
bit	O	O:0.999921
less	O	O:0.999813
than	O	O:0.999744
half	O	O:0.991309
1024	O	O:0.996939
,	O	O:0.999844
and	O	O:0.999785
Python	O	O:0.996095
would	O	O:0.999779
have	O	O:0.999946
some	O	O:0.999942
files	O	O:0.999877
open	O	O:0.994103
itself	O	O:0.999504
(	O	O:0.999992
maybe	O	O:0.996438
25-odd	O	O:0.999621
?	O	O:0.999956
)	O	O:0.999625
.	O	O:0.998940
	
The	O	O:0.999946
idea	O	O:0.998668
is	O	O:0.999984
to	O	O:0.999959
count	O	O:0.999732
the	O	O:0.999979
number	O	O:0.999358
of	O	O:0.999986
occurrences	O	O:0.999617
of	O	O:0.999986
each	O	O:0.998231
transition	O	O:0.999853
,	O	O:0.999980
and	O	O:0.999856
use	O	O:0.999742
the	O	O:0.998987
counts	O	O:0.986393
in	O	O:0.999968
a	O	O:0.999991
vectorized	O	O:0.999637
update	O	O:0.995479
of	O	O:0.999885
the	O	O:0.999171
matrix	O	O:0.955851
.	O	O:0.999356
	
I	O	O:0.999975
kept	O	O:0.999978
them	O	O:0.999414
in	O	O:0.999957
to	O	O:0.999961
distinguish	O	O:0.999996
them	O	O:0.999948
from	O	O:0.999887
the	O	O:0.999597
`	O	O:0.999995
math	O	O:0.992215
`	O	O:0.999998
ones	O	O:0.997760
,	O	O:0.999989
which	O	O:0.999355
won't	O	O:0.999774
work	O	O:0.993463
for	O	O:0.999994
this	O	O:0.999684
approach	O	O:0.997851
.	O	O:0.998740
	
Powers	O	O:0.995517
of	O	O:0.999955
two	O	O:0.999377
are	O	O:0.999973
simple	O	O:0.999295
to	O	O:0.999910
compute	O	O:0.998316
,	O	O:0.999982
but	O	O:0.999934
mixed	O	O:0.995794
radix	O	O:0.999346
sizes	O	O:0.999040
can	O	O:0.999939
be	O	O:0.999982
faster	O	O:0.999728
and	O	O:0.999436
use	O	O:0.999178
less	O	O:0.981413
memory	O	O:0.990789
.	O	O:0.998784
	
The	O	O:0.999862
stars	O	O:0.996663
/	O	O:0.999991
dots	O	O:0.999411
are	O	O:0.999972
the	O	O:0.999792
`	O	O:0.999772
X	O	O:0.993360
`	O	O:0.999986
and	O	O:0.999364
`	O	O:0.999988
Y	O	O:0.994495
`	O	O:0.999974
plotted	O	O:0.993764
with	O	O:0.999938
two	O	O:0.999588
modifications	O	O:0.999950
,	O	O:0.999983
I	O	O:0.999987
removed	O	O:0.999679
the	O	O:0.999628
first	O	O:0.997956
position	O	O:0.997860
and	O	O:0.999961
added	O	O:0.999943
a	O	O:0.999913
false	O	O:0.997273
one	O	O:0.999608
to	O	O:0.999947
make	O	O:0.999984
this	O	O:0.999954
a	O	O:0.999996
full	O	O:0.998130
example	O	O:0.999602
of	O	O:0.999936
the	O	O:0.999734
sought	O	O:0.999468
algorithm	O	O:0.998638
.	O	O:0.999518
	
Please	O	O:0.999791
look	O	O:0.998124
at	O	O:0.999980
my	O	O:0.999743
EDIT	O	O:0.999362
2	O	O:0.999761
,	O	O:0.999990
where	O	O:0.999275
I	O	O:0.999988
described	O	O:0.999964
my	O	O:0.999472
problem	O	O:0.998409
with	O	O:0.999683
input	O	O:0.999128
data	O	O:0.999743
...	O	O:0.995409
and	O	O:0.999956
why	O	O:0.999727
I	O	O:0.999906
can't	O	O:0.999590
get	O	O:0.997041
matrix	O	O:0.985502
..	O	O:0.997659
	
pyqt	O	O:0.960504
:	O	O:0.999990
Convert	O	O:0.999872
numpy	O	O:0.999520
array	O	O:0.999753
to	O	O:0.999915
QImage	O	O:0.993170
	
To	O	O:0.999971
find	O	O:0.999560
the	O	O:0.999975
difference	O	O:0.997403
between	O	O:0.999698
your	O	O:0.999978
data	O	O:0.999736
and	O	O:0.999963
a	O	O:0.999979
point	O	O:0.987300
,	O	O:0.999922
you'd	O	O:0.999932
just	O	O:0.999407
do	O	O:0.999964
`	O	O:0.999995
data	O	O:0.999030
-	O	O:0.999999
point	O	O:0.997275
`	O	O:0.999909
.	O	O:0.998353
	
Unfortunately	O	O:0.999795
when	O	O:0.999330
numpy	O	O:0.999570
reads	O	O:0.999849
the	O	O:0.999956
19-digit	O	O:0.999432
number	O	O:0.999818
as	O	O:0.999988
a	O	O:0.999991
floating	O	O:0.998967
point	O	O:0.993586
number	O	O:0.998122
,	O	O:0.999989
there	O	O:0.997992
is	O	O:0.999931
not	O	O:0.999132
enough	O	O:0.999887
precision	O	O:0.999769
to	O	O:0.999982
get	O	O:0.999963
all	O	O:0.999731
the	O	O:0.999931
significant	O	O:0.997297
digits	O	O:0.997784
,	O	O:0.999997
so	O	O:0.999997
there	O	O:0.999514
is	O	O:0.999992
a	O	O:0.999965
rounding	O	O:0.998682
error	O	O:0.994597
.	O	O:0.999428
	
The	O	O:0.999906
exceptions	O	O:0.999032
are	O	O:0.999954
very	O	O:0.999932
rare	O	O:0.999528
,	O	O:0.999994
if	O	O:0.999974
any	O	O:0.998767
.	O	O:0.999165
	
I	O	O:0.999945
can't	O	O:0.999764
reproduce	O	O:0.999814
your	O	O:0.999880
problem	O	O:0.999259
on	O	O:0.999965
Linux	O	O:0.999562
using	O	O:0.999740
the	O	O:0.999864
same	O	O:0.998244
versions	O	O:0.999646
of	O	O:0.999986
numpy	O	O:0.993402
and	O	O:0.999804
python	O	O:0.994553
and	O	O:0.999856
a	O	O:0.999918
quickly	O	O:0.996580
made	O	O:0.999781
test	O	O:0.992380
file	O	O:0.998173
(	O	O:0.999994
with	O	O:0.999878
dos	O	O:0.999117
line	O	O:0.999897
endings	O	O:0.998174
,	O	O:0.999997
even	O	O:0.997496
)	O	O:0.999916
...	O	O:0.989597
	
I	O	O:0.999977
imagine	O	O:0.999545
I	O	O:0.999696
would	O	O:0.999971
have	O	O:0.999677
to	O	O:0.999990
use	O	O:0.999983
the	O	O:0.999683
uncompiled	O	O:0.962403
source	O	O:0.999683
provided	O	O:0.999828
from	O	O:0.999979
each	O	O:0.999600
of	O	O:0.999994
these	O	O:0.999415
three	O	O:0.999527
projects	O	O:0.996077
.	O	O:0.999549
	
However	O	O:0.999652
,	O	O:0.999964
I	O	O:0.999994
am	O	O:0.999979
checking	O	O:0.996356
optimization	O	O:0.999820
routine	O	O:0.997180
result	O	O:0.998446
,	O	O:0.999957
and	O	O:0.999958
sometimes	O	O:0.999787
power	O	O:0.997624
is	O	O:0.999975
negative	O	O:0.992860
,	O	O:0.999985
sometimes	O	O:0.999910
it	O	O:0.999789
is	O	O:0.999989
positive	O	O:0.989652
.	O	O:0.999750
	
What	O	O:0.999508
about	O	O:0.999921
array	O	O:0.999088
of	O	O:0.999611
arrays	O	O:0.999703
that	O	O:0.999755
contains	O	O:0.999925
some	O	O:0.999868
structures	O	O:0.999819
?	O	O:0.999985
	
The	O	O:0.999973
y	O	O:0.999921
data	O	O:0.999925
takes	O	O:0.999866
the	O	O:0.999995
shape	O	O:0.999770
of	O	O:0.999969
the	O	O:0.999894
triangle	O	O:0.999914
wave	O	O:0.999316
below	O	O:0.998857
.	O	O:0.999900
	
There	O	O:0.999104
are	O	O:0.999962
some	O	O:0.999867
algorithm	O	O:0.999967
to	O	O:0.999995
calculate	O	O:0.999816
faster	O	O:0.999987
the	O	O:0.999848
results	O	O:0.996525
for	O	O:0.999869
low	O	O:0.999183
valued	O	O:0.995141
matrix	O	O:0.786119
,	O	O:0.999832
but	O	O:0.999924
just	O	O:0.998997
google	O	O:0.970829
for	O	O:0.999949
this	O	O:0.998218
.	O	O:0.999419
	
Those	O	O:0.998312
are	O	O:0.999649
not	O	O:0.999148
random	O	O:0.997183
replacements	O	O:0.999416
by	O	O:0.999985
any	O	O:0.999804
means	O	O:0.996314
.	O	O:0.999429
	
I	O	O:0.999819
would	O	O:0.999923
suggest	O	O:0.998539
to	O	O:0.999996
make	O	O:0.999859
the	O	O:0.999970
library	O	O:0.998942
use	O	O:0.999643
an	O	O:0.995738
(	O	O:0.999977
NumPy-	O	O:0.999059
)	O	O:0.999928
array	O	O:0.999474
you	O	O:0.999874
allocate	O	O:0.999093
in	O	O:0.999720
Python	O	O:0.998195
and	O	O:0.999991
pass	O	O:0.998984
on	O	O:0.999955
to	O	O:0.999983
the	O	O:0.999985
library	O	O:0.991647
.	O	O:0.999705
	
For	O	O:0.999869
the	O	O:0.999812
simple	O	O:0.999430
case	O	O:0.999848
of	O	O:0.999976
"	O	O:0.999908
remove	O	O:0.998265
column	O	O:0.998847
3	O	O:0.999854
"	O	O:0.999899
,	O	O:0.999936
`	O	O:0.999976
delete	O	O:0.942779
`	O	O:0.999989
makes	O	O:0.999305
more	O	O:0.999937
sense	O	O:0.999916
;	O	O:0.999996
for	O	O:0.999807
a	O	O:0.999989
more	O	O:0.994690
complicated	O	O:0.999568
case	O	O:0.999434
,	O	O:0.999960
`	O	O:0.999996
take	O	O:0.989337
`	O	O:0.999997
probably	O	O:0.998513
makes	O	O:0.999944
more	O	O:0.999265
sense	O	O:0.999643
.	O	O:0.999658
	
I	O	O:0.999991
have	O	O:0.999818
an	O	O:0.999966
array	O	O:0.999887
of	O	O:0.999915
points	O	O:0.991698
in	O	O:0.999956
numpy	O	O:0.978983
:	O	O:0.999955
#CODE	O	O:0.999623
	
I	O	O:0.999981
have	O	O:0.999981
done	O	O:0.999767
7	O	O:0.999986
of	O	O:0.999938
the	O	O:0.999906
problems	O	O:0.998732
on	O	O:0.999940
Project	O	O:0.997738
Euler	O	O:0.999673
(	O	O:0.999971
nothing	O	O:0.996090
to	O	O:0.999957
brag	O	O:0.999855
about	O	O:0.997033
,	O	O:0.999758
but	O	O:0.999644
it	O	O:0.999823
might	O	O:0.999730
give	O	O:0.999897
you	O	O:0.999955
a	O	O:0.999934
better	O	O:0.999945
idea	O	O:0.999618
of	O	O:0.999962
where	O	O:0.996753
I	O	O:0.999974
stand	O	O:0.999382
in	O	O:0.999802
skills	O	O:0.998506
)	O	O:0.999706
.	O	O:0.996855
	
How	O	O:0.999964
do	O	O:0.999901
I	O	O:0.999996
find	O	O:0.999869
the	O	O:0.998932
length	O	O:0.985409
(	O	O:0.999971
or	O	O:0.999943
dimensions	O	O:0.997084
,	O	O:0.999999
size	O	O:0.999967
)	O	O:0.999985
of	O	O:0.999962
a	O	O:0.999975
numpy	O	O:0.992585
matrix	O	O:0.974856
in	O	O:0.999772
python	O	O:0.994728
?	O	O:0.999965
	
It's	O	O:0.999123
longer	O	O:0.999927
than	O	O:0.999653
the	O	O:0.999727
other	O	O:0.996421
answer	O	O:0.999741
but	O	O:0.999106
is	O	O:0.999994
more	O	O:0.995547
generic	O	O:0.998589
(	O	O:0.999988
can	O	O:0.999813
be	O	O:0.999996
used	O	O:0.999950
with	O	O:0.997728
values	O	O:0.999152
that	O	O:0.999218
are	O	O:0.999962
not	O	O:0.999829
strings	O	O:0.998381
)	O	O:0.999825
.	O	O:0.999139
	
I	O	O:0.999965
coded	O	O:0.999954
my	O	O:0.999793
own	O	O:0.999722
routine	O	O:0.999406
with	O	O:0.999629
Python	O	O:0.998644
/	O	O:0.999890
Numpy	O	O:0.995698
,	O	O:0.999821
and	O	O:0.999803
it	O	O:0.999425
is	O	O:0.999936
giving	O	O:0.999638
me	O	O:0.999943
a	O	O:0.999947
little	O	O:0.997169
bit	O	O:0.999939
different	O	O:0.998996
results	O	O:0.999239
from	O	O:0.999799
the	O	O:0.999865
MATLAB	O	O:0.999948
code	O	O:0.999811
somebody	O	O:0.999970
else	O	O:0.999785
did	O	O:0.999580
,	O	O:0.999974
and	O	O:0.999896
I	O	O:0.999975
am	O	O:0.999881
having	O	O:0.997011
hard	O	O:0.999904
time	O	O:0.999877
finding	O	O:0.999763
out	O	O:0.999654
where	O	O:0.998665
it	O	O:0.999737
is	O	O:0.999982
coming	O	O:0.999699
from	O	O:0.999842
because	O	O:0.999450
of	O	O:0.999991
different	O	O:0.998762
random	O	O:0.997692
draws	O	O:0.997097
.	O	O:0.999643
	
How	O	O:0.999777
can	O	O:0.999489
1,000,000	O	O:0.998487
4-byte	O	O:0.999806
ints	O	O:0.999637
be	O	O:0.999988
compressed	O	O:0.999749
any	O	O:0.999344
smaller	O	O:0.999311
?	O	O:0.999797
	
If	O	O:0.999984
this	O	O:0.999689
number	O	O:0.998886
is	O	O:0.999979
less	O	O:0.999930
than	O	O:0.999945
a	O	O:0.999994
third	O	O:0.999486
of	O	O:0.999921
the	O	O:0.999629
total	O	O:0.997429
I'll	O	O:0.999730
use	O	O:0.999955
my	O	O:0.998960
answer	O	O:0.999248
above	O	O:0.996179
.	O	O:0.998140
	
I	O	O:0.999981
have	O	O:0.999981
done	O	O:0.999767
7	O	O:0.999986
of	O	O:0.999938
the	O	O:0.999906
problems	O	O:0.998732
on	O	O:0.999940
Project	O	O:0.997738
Euler	O	O:0.999673
(	O	O:0.999971
nothing	O	O:0.996090
to	O	O:0.999957
brag	O	O:0.999855
about	O	O:0.997033
,	O	O:0.999758
but	O	O:0.999644
it	O	O:0.999823
might	O	O:0.999730
give	O	O:0.999897
you	O	O:0.999955
a	O	O:0.999934
better	O	O:0.999945
idea	O	O:0.999618
of	O	O:0.999962
where	O	O:0.996753
I	O	O:0.999974
stand	O	O:0.999382
in	O	O:0.999802
skills	O	O:0.998506
)	O	O:0.999706
.	O	O:0.996855
	
Apologies	O	O:0.997709
if	O	O:0.999988
this	O	O:0.999776
is	O	O:0.999988
a	O	O:0.999936
wrongly	O	O:0.996997
framed	O	O:0.999026
question	O	O:0.999488
or	O	O:0.999862
if	O	O:0.999967
this	O	O:0.999885
question	O	O:0.999296
was	O	O:0.999959
already	O	O:0.999549
asked	O	O:0.998931
earlier	O	O:0.998234
(	O	O:0.999907
I	O	O:0.999979
couldn't	O	O:0.999906
find	O	O:0.999173
it	O	O:0.999911
)	O	O:0.999687
	
If	O	O:0.999988
you	O	O:0.999876
can	O	O:0.999706
choose	O	O:0.999941
,	O	O:0.999993
I	O	O:0.999995
strongly	O	O:0.999322
recommend	O	O:0.993109
pandas	O	O:0.986736
:	O	O:0.999994
it	O	O:0.999955
has	O	O:0.999919
"	O	O:0.999822
column	O	O:0.998617
indexing	O	O:0.999338
"	O	O:0.999411
built-in	O	O:0.999584
plus	O	O:0.999579
a	O	O:0.999988
lot	O	O:0.999878
of	O	O:0.999932
other	O	O:0.998735
features	O	O:0.994913
.	O	O:0.999533
	
But	O	O:0.999858
this	O	O:0.999848
will	O	O:0.998449
iterate	O	O:0.998774
through	O	O:0.999428
the	O	O:0.999883
entire	O	O:0.996589
array	O	O:0.999248
and	O	O:0.999960
allocate	O	O:0.999924
a	O	O:0.999925
new	O	O:0.998961
array	O	O:0.997657
in	O	O:0.999919
memory	O	O:0.998937
containing	O	O:0.999584
the	O	O:0.999824
all	O	O:0.999446
the	O	O:0.999583
results	O	O:0.988073
,	O	O:0.999967
and	O	O:0.999991
only	O	O:0.999934
then	O	O:0.999648
check	O	O:0.999827
to	O	O:0.999968
see	O	O:0.999984
if	O	O:0.999971
it	O	O:0.999894
is	O	O:0.999979
empty	O	O:0.993657
.	O	O:0.999768
	
Since	O	O:0.999814
some	O	O:0.998918
askers	O	O:0.998588
and	O	O:0.999982
some	O	O:0.999237
answers	O	O:0.999842
both	O	O:0.999348
avoid	O	O:0.999756
that	O	O:0.999381
constraint	O	O:0.999855
,	O	O:0.999986
I	O	O:0.999994
encourage	O	O:0.999507
anyone	O	O:0.990829
who's	O	O:0.999799
here	O	O:0.991984
and	O	O:0.999863
doesn't	O	O:0.999631
mind	O	O:0.997439
having	O	O:0.999124
PIL	O	O:0.999689
to	O	O:0.999916
look	O	O:0.999175
below	O	O:0.999096
,	O	O:0.999946
and	O	O:0.999901
any	O	O:0.999429
non-PIL	O	O:0.989555
answers	O	O:0.993617
(	O	O:0.999984
new	O	O:0.999617
or	O	O:0.999952
old	O	O:0.999873
)	O	O:0.999971
to	O	O:0.999514
mention	O	O:0.999970
that	O	O:0.999890
they're	O	O:0.999904
a	O	O:0.999800
PIL-is-used	O	O:0.999690
type	O	O:0.999477
of	O	O:0.999915
answer	O	O:0.999093
,	O	O:0.999979
to	O	O:0.999913
distinguish	O	O:0.999931
themselves	O	O:0.999981
from	O	O:0.999791
answers	O	O:0.999782
meeting	O	O:0.999548
the	O	O:0.999624
original	O	O:0.993881
constraint	O	O:0.998953
.	O	O:0.999882
	
As	O	O:0.999912
I	O	O:0.999957
understand	O	O:0.999974
your	O	O:0.997409
question	O	O:0.999513
,	O	O:0.999992
you	O	O:0.999978
have	O	O:0.999873
a	O	O:0.999992
2D	O	O:0.999987
array	O	O:0.999543
of	O	O:0.999912
"	O	O:0.999773
z	O	O:0.999457
"	O	O:0.999879
values	O	O:0.999338
that	O	O:0.999706
ranges	O	O:0.999624
from	O	O:0.999885
some	O	O:0.999929
xmin	O	O:0.998767
to	O	O:0.999983
xmax	O	O:0.996575
,	O	O:0.999944
and	O	O:0.999988
ymin	O	O:0.986093
to	O	O:0.999927
ymax	O	O:0.997117
in	O	O:0.999985
each	O	O:0.999525
direction	O	O:0.999542
.	O	O:0.999722
	
The	O	O:0.999847
covariance	O	O:0.999749
matrix	O	O:0.998107
of	O	O:0.999983
a	O	O:0.999956
dataset	O	O:0.999247
A	O	O:0.998916
is	O	O:0.999953
:	O	O:0.999928
1	O	O:0.999929
/(	O	O:0.999808
N-1	O	O:0.996660
)	O	O:0.999860
*	O	O:0.997522
AA^T	O	O:0.997666
	
I	O	O:0.999994
have	O	O:0.999935
a	O	O:0.999920
large	O	O:0.990241
(	O	O:0.999779
500k	O	O:0.995064
by	O	O:0.999916
500k	O	O:0.995485
)	O	O:0.999791
,	O	O:0.999905
sparse	O	O:0.999259
matrix	O	O:0.923909
.	O	O:0.999247
	
I	O	O:0.999934
can't	O	O:0.999743
comment	O	O:0.999184
on	O	O:0.999990
a	O	O:0.999992
numpy	O	O:0.999344
array	O	O:0.999880
as	O	O:0.999940
I	O	O:0.999891
haven't	O	O:0.999895
used	O	O:0.997386
one	O	O:0.998016
before	O	O:0.968823
,	O	O:0.999979
but	O	O:0.999759
for	O	O:0.999952
using	O	O:0.997318
a	O	O:0.999928
list	O	O:0.963140
of	O	O:0.999890
lists	O	O:0.979980
Python	O	O:0.999880
already	O	O:0.998542
has	O	O:0.999719
built	O	O:0.998902
in	O	O:0.999878
support	O	O:0.958279
.	O	O:0.999560
	
If	O	O:0.999794
`	O	O:0.999945
finer_fxy	O	O:0.967634
`	O	O:0.999956
is	O	O:0.999775
stored	O	O:0.999774
in	O	O:0.999952
the	O	O:0.999893
probably-default	O	O:0.977462
`	O	O:0.999956
float64	O	O:0.991652
`	O	O:0.999985
s	O	O:0.997905
,	O	O:0.999999
this	O	O:0.999322
would	O	O:0.999874
take	O	O:0.999675
about	O	O:0.999872
64	O	O:0.999964
GiB	O	O:0.999522
of	O	O:0.999943
memory	O	O:0.991139
;	O	O:0.999990
not	O	O:0.996652
surprising	O	O:0.999963
that	O	O:0.999160
you're	O	O:0.999854
running	O	O:0.998672
out	O	O:0.999240
.	O	O:0.999211
	
Sebastian's	O	O:0.999311
solution	O	O:0.999804
for	O	O:0.999991
a	O	O:0.999969
way	O	O:0.997063
around	O	O:0.997324
the	O	O:0.999490
integer-values-only	O	O:0.987574
restriction	O	O:0.996433
and	O	O:0.999846
big-values	O	O:0.999336
problem	O	O:0.989319
.	O	O:0.999572
	
This	O	O:0.999672
allows	O	O:0.999799
the	O	O:0.999920
column	O	O:0.995849
to	O	O:0.999982
hold	O	O:0.999966
float	O	O:0.999105
values	O	O:0.999437
at	O	O:0.999949
first	O	O:0.997698
,	O	O:0.999940
and	O	O:0.999873
strings	O	O:0.993855
later	O	O:0.998692
.	O	O:0.999540
	
Efficient	O	O:0.999801
slicing	O	O:0.999573
of	O	O:0.999943
matrices	O	O:0.994986
using	O	O:0.999677
matrix	O	O:0.917331
multiplication	O	O:0.987146
,	O	O:0.999983
with	O	O:0.999292
Python	O	O:0.997636
,	O	O:0.999994
NumPy	O	O:0.999224
,	O	O:0.999911
SciPy	O	O:0.998125
	
Is	O	O:0.999990
there	O	O:0.999612
a	O	O:0.999995
more	O	O:0.995735
compact	O	O:0.998634
way	O	O:0.999840
to	O	O:0.999913
operate	O	O:0.999974
on	O	O:0.999976
array	O	O:0.999931
elements	O	O:0.999433
,	O	O:0.999946
without	O	O:0.999832
having	O	O:0.997480
to	O	O:0.999821
use	O	O:0.999970
the	O	O:0.999494
standard	O	O:0.990721
for	O	O:0.999973
loop	O	O:0.998578
.?	O	O:0.997943
	
Please	O	O:0.999791
look	O	O:0.990919
at	O	O:0.999988
this	O	O:0.998339
answer	O	O:0.999140
:	O	O:0.999797
#URL	O	O:0.997395
	
When	O	O:0.996171
I	O	O:0.999975
tried	O	O:0.999947
this	O	O:0.998893
,	O	O:0.999955
I	O	O:0.999978
got	O	O:0.999971
sort	O	O:0.996475
of	O	O:0.999956
similar	O	O:0.998793
shaped	O	O:0.998652
"	O	O:0.999945
tiles	O	O:0.997663
"	O	O:0.999975
of	O	O:0.999925
different	O	O:0.998792
colors	O	O:0.962498
rather	O	O:0.999962
than	O	O:0.998980
3	O	O:0.999782
Gaussian	O	O:0.999710
humps	O	O:0.998321
.	O	O:0.999780
	
I	O	O:0.999952
created	O	O:0.999796
the	O	O:0.999876
first	O	O:0.998572
array	O	O:0.999569
like	O	O:0.999808
this	O	O:0.998964
:	O	O:0.999907
	
(	O	O:0.999838
Note	O	O:0.999988
that	O	O:0.999734
I	O	O:0.999992
can't	O	O:0.999866
imagine	O	O:0.999384
any	O	O:0.999639
reason	O	O:0.993654
why	O	O:0.999932
this	O	O:0.999272
should	O	O:0.999747
be	O	O:0.999957
necessary	O	O:0.999428
.	O	O:0.999435
)	O	O:0.999579
	
SOLUTION	O	O:0.996814
:	O	O:0.999968
i	O	O:0.999996
have	O	O:0.999961
some	O	O:0.999849
scattered	O	O:0.999940
points	O	O:0.996976
(	O	O:0.999990
i	O	O:0.999986
don't	O	O:0.999913
know	O	O:0.998026
how	O	O:0.999982
many	O	O:0.995221
)	O	O:0.999741
and	O	O:0.998863
i	O	O:0.999990
want	O	O:0.998120
to	O	O:0.999494
reduce	O	O:0.999930
it	O	O:0.999984
to	O	O:0.999993
a	O	O:0.999995
8	O	O:0.999840
meaning	O	O:0.998995
point	O	O:0.998442
.	O	O:0.999980
one	O	O:0.999936
of	O	O:0.999964
the	O	O:0.999929
technique	O	O:0.999931
i	O	O:0.999991
can	O	O:0.999881
use	O	O:0.999959
is	O	O:0.999972
to	O	O:0.999831
clusterize	O	O:0.999987
them	O	O:0.999905
with	O	O:0.999988
some	O	O:0.999177
cluster	O	O:0.999904
algorithms	O	O:0.999704
.	O	O:0.999615
	
that	O	O:0.999705
blas	O	O:0.999578
is	O	O:0.999984
reference	O	O:0.999764
blas	O	O:0.999949
from	O	O:0.999875
netlib	O	O:0.996913
-	O	O:0.999998
the	O	O:0.999807
slowest	O	O:0.999513
blas	O	O:0.998488
around	O	O:0.998915
.	O	O:0.999871
install	O	O:0.998160
atlas	O	O:0.999570
or	O	O:0.999827
mkl	O	O:0.993062
instead	O	O:0.998744
.	O	O:0.999322
	
EDIT	O	O:0.995258
:	O	O:0.999954
Answer	O	O:0.999921
updated	O	O:0.999576
for	O	O:0.999929
a	O	O:0.999907
2D	O	O:0.999518
array	O	O:0.993138
.	O	O:0.999356
	
But	O	O:0.999859
you	O	O:0.999952
lose	O	O:0.999791
a	O	O:0.999993
lot	O	O:0.999684
of	O	O:0.999964
NumPy	O	O:0.996124
power	O	O:0.999776
that	O	O:0.998313
way	O	O:0.999615
.	O	O:0.999310
	
Because	O	O:0.998751
I	O	O:0.999984
view	O	O:0.996344
doesn't	O	O:0.998969
really	O	O:0.999861
have	O	O:0.999744
to	O	O:0.999976
do	O	O:0.999997
with	O	O:0.999932
filtering	O	O:0.996997
,	O	O:0.999982
but	O	O:0.999726
rather	O	O:0.999769
with	O	O:0.999661
different	O	O:0.999507
representation	O	O:0.999840
of	O	O:0.999969
the	O	O:0.999956
same	O	O:0.999874
data	O	O:0.999658
.	O	O:0.999959
	
@USER	O	O:0.996737
,	O	O:0.999960
not	O	O:0.999867
sure	O	O:0.999872
what	O	O:0.999815
you	O	O:0.999975
mean	O	O:0.999190
by	O	O:0.999975
"	O	O:0.999949
changing	O	O:0.999419
original	O	O:0.997542
values	O	O:0.995238
"	O	O:0.999677
.	O	O:0.999283
	
this	O	O:0.998762
could	O	O:0.999805
also	O	O:0.999950
be	O	O:0.999992
achieved	O	O:0.999544
elegantly	O	O:0.999668
with	O	O:0.999643
numpy's	O	O:0.997673
`	O	O:0.999981
where	O	O:0.998598
`	O	O:0.999894
function	O	O:0.993533
	
I	O	O:0.999987
need	O	O:0.999773
to	O	O:0.999945
specify	O	O:0.999980
datatypes	O	O:0.998759
for	O	O:0.999928
all	O	O:0.999634
numerical	O	O:0.958038
types	O	O:0.996491
since	O	O:0.999860
I	O	O:0.999999
care	O	O:0.999204
about	O	O:0.999446
int	O	O:0.995197
8/	O	O:0.999189
16	O	O:0.999441
/	O	O:0.999687
32	O	O:0.999899
,	O	O:0.999972
etc	O	O:0.998368
,	O	O:0.999975
but	O	O:0.999830
I	O	O:0.999849
would	O	O:0.999915
like	O	O:0.999567
to	O	O:0.999991
benefit	O	O:0.999971
from	O	O:0.999837
the	O	O:0.999942
auto	O	O:0.999465
string	O	O:0.999635
length	O	O:0.994766
detection	O	O:0.999813
that	O	O:0.998526
works	O	O:0.999967
if	O	O:0.999935
I	O	O:0.999992
don't	O	O:0.999932
specify	O	O:0.997423
datatypes	O	O:0.992029
.	O	O:0.999604
	
In	O	O:0.999917
the	O	O:0.999843
following	O	O:0.999661
trivial	O	O:0.984344
function	O	O:0.999893
,	O	O:0.999988
I	O	O:0.999998
have	O	O:0.999734
declared	O	O:0.999626
the	O	O:0.999983
numpy	O	O:0.997893
array	O	O:0.999509
argument	O	O:0.999758
`	O	O:0.999967
arr	O	O:0.995047
`	O	O:0.999986
using	O	O:0.997828
the	O	O:0.999375
buffer	O	O:0.930101
syntax	O	O:0.993394
.	O	O:0.998903
	
I	O	O:0.999912
remember	O	O:0.999967
that	O	O:0.999371
there	O	O:0.999826
was	O	O:0.999951
a	O	O:0.999954
smart	O	O:0.999074
trick	O	O:0.998624
about	O	O:0.999522
turning	O	O:0.997339
on	O	O:0.999710
and	O	O:0.999921
off	O	O:0.999937
the	O	O:0.999639
right	O	O:0.998613
intersections	O	O:0.998273
of	O	O:0.999993
rows	O	O:0.997645
and	O	O:0.999971
columns	O	O:0.999400
to	O	O:0.999986
turn	O	O:0.999965
off	O	O:0.999939
one-by-one	O	O:0.999945
all	O	O:0.999428
the	O	O:0.999875
lightbulbs	O	O:0.897768
,	O	O:0.999951
but	O	O:0.999857
it	O	O:0.999960
wont	O	O:0.999861
come	O	O:0.999941
back	O	O:0.999923
to	O	O:0.999987
my	O	O:0.999964
mind	O	O:0.999060
...	O	O:0.997712
	
However	O	O:0.999835
this	O	O:0.999901
code	O	O:0.999489
is	O	O:0.999994
to	O	O:0.999962
slow	O	O:0.999969
in	O	O:0.999980
the	O	O:0.999906
current	O	O:0.994764
version	O	O:0.997140
,	O	O:0.999988
and	O	O:0.999950
I	O	O:0.999981
am	O	O:0.999965
wondering	O	O:0.996345
wheater	O	O:0.999672
there	O	O:0.999263
is	O	O:0.999995
a	O	O:0.999874
faster	O	O:0.998745
solution	O	O:0.996830
.	O	O:0.999757
thanks	O	O:0.999166
!	O	O:0.999876
	
This	O	O:0.999048
would	O	O:0.999903
probably	O	O:0.999710
be	O	O:0.999979
the	O	O:0.999947
most	O	O:0.997567
efficient	O	O:0.999827
way	O	O:0.999915
to	O	O:0.999979
access	O	O:0.999974
a	O	O:0.999987
numpy	O	O:0.995248
array	O	O:0.999177
stored	O	O:0.999359
on	O	O:0.999934
disk	O	O:0.998669
.	O	O:0.999867
	
hmmmmm	O	O:0.980024
,	O	O:0.999984
probably	O	O:0.998575
it	O	O:0.999913
will	O	O:0.999716
help	O	O:0.999539
some	O	O:0.999899
others	O	O:0.999863
to	O	O:0.999990
sort	O	O:0.999904
dictionarys	O	O:0.999886
or	O	O:0.999980
to	O	O:0.999952
prevent	O	O:0.999974
from	O	O:0.999869
using	O	O:0.999545
commands	O	O:0.999836
like	O	O:0.998770
sorted	O	O:0.999814
=	O	O:0.999716
sorted	O	O:0.990904
(	O	O:0.999983
...	O	O:0.997810
)	O	O:0.999696
.	O	O:0.998230
	
The	O	O:0.999860
ticket	O	O:0.999277
simply	O	O:0.999777
spoke	O	O:0.999663
of	O	O:0.999948
random	O	O:0.991197
number	O	O:0.999256
seeding	O	O:0.999695
with	O	O:0.999426
64-bit	O	O:0.999092
,	O	O:0.999988
perhaps	O	O:0.999493
its	O	O:0.999933
referring	O	O:0.999949
to	O	O:0.999949
a	O	O:0.999998
different	O	O:0.999041
random	O	O:0.990449
number	O	O:0.998941
generator	O	O:0.993433
.	O	O:0.999581
	
Not	O	O:0.999827
really	O	O:0.999065
elegant	O	O:0.998888
at	O	O:0.999810
all	O	O:0.999499
but	O	O:0.999971
you	O	O:0.999568
can	O	O:0.999737
get	O	O:0.999990
close	O	O:0.997911
to	O	O:0.999991
what	O	O:0.999962
you	O	O:0.999967
want	O	O:0.999966
using	O	O:0.999851
a	O	O:0.999963
tuple	O	O:0.992583
to	O	O:0.999961
store	O	O:0.999886
pointers	O	O:0.999737
to	O	O:0.999979
the	O	O:0.999974
arrays	O	O:0.995851
.	O	O:0.999624
	
For	O	O:0.999950
example	O	O:0.998773
I	O	O:0.999987
am	O	O:0.999988
looking	O	O:0.995944
for	O	O:0.998803
4.2	O	O:0.993131
but	O	O:0.999636
I	O	O:0.999986
know	O	O:0.999209
in	O	O:0.999863
the	O	O:0.999865
array	O	O:0.999648
there	O	O:0.998023
is	O	O:0.999964
no	O	O:0.997645
4.2	O	O:0.998774
but	O	O:0.999562
I	O	O:0.999990
want	O	O:0.999623
to	O	O:0.999264
return	O	O:0.997566
the	O	O:0.999842
index	O	O:0.999118
of	O	O:0.999981
the	O	O:0.999956
value	O	O:0.999502
4.1	O	O:0.998097
instead	O	O:0.999565
of	O	O:0.999857
4.4	O	O:0.973857
.	O	O:0.999609
	
Print	O	O:0.996195
'	O	O:0.999888
Length	O	O:0.999928
of	O	O:0.999943
together	O	O:0.999004
'	O	O:0.999986
goes	O	O:0.999537
just	O	O:0.999569
before	O	O:0.999531
the	O	O:0.999700
matrix	O	O:0.978293
line	O	O:0.998628
.	O	O:0.999865
	
solve	O	O:0.999569
a	O	O:0.999980
nonlinear	O	O:0.997680
equation	O	O:0.999110
at	O	O:0.999961
several	O	O:0.995910
intermediate	O	O:0.999888
points	O	O:0.999541
of	O	O:0.999981
a	O	O:0.999883
calculation	O	O:0.994488
,	O	O:0.999987
not	O	O:0.999940
just	O	O:0.999692
as	O	O:0.999993
the	O	O:0.999931
final	O	O:0.987372
result	O	O:0.998405
.	O	O:0.999694
	
Find	O	O:0.996665
where	O	O:0.999215
they're	O	O:0.999767
located	O	O:0.999511
at	O	O:0.999756
(	O	O:0.999959
assumes	O	O:0.999627
the	O	O:0.999985
data	O	O:0.998712
is	O	O:0.999961
sorted	O	O:0.999367
!!	O	O:0.999682
):	O	O:0.999770
#CODE	O	O:0.998848
	
You	O	O:0.999867
need	O	O:0.998980
Python	O	O:0.999403
to	O	O:0.999995
keep	O	O:0.999952
track	O	O:0.999833
of	O	O:0.999996
your	O	O:0.999551
vector	O	O:0.998998
so	O	O:0.999986
that	O	O:0.999929
it	O	O:0.999993
can	O	O:0.999921
be	O	O:0.999995
deleted	O	O:0.999928
*	O	O:0.999575
after	O	O:0.999633
*	O	O:0.999776
the	O	O:0.999902
numpy	O	O:0.996703
array	O	O:0.998457
.	O	O:0.999806
	
I	O	O:0.999949
find	O	O:0.999971
that	O	O:0.998056
I	O	O:0.999999
have	O	O:0.999904
to	O	O:0.999906
first	O	O:0.999959
build	O	O:0.998507
a	O	O:0.999983
list	O	O:0.909609
and	O	O:0.999917
then	O	O:0.998886
cast	O	O:0.997772
it	O	O:0.999922
(	O	O:0.999986
using	O	O:0.999647
"	O	O:0.999713
array	O	O:0.995963
")	O	O:0.999870
to	O	O:0.999395
an	O	O:0.999993
array	O	O:0.998915
.	O	O:0.999656
	
I	O	O:0.999991
have	O	O:0.999817
an	O	O:0.999939
numpy	O	O:0.998466
one	O	O:0.999952
dimensional	O	O:0.998951
array	O	O:0.999511
c	O	O:0.999819
that	O	O:0.999020
is	O	O:0.999994
supposed	O	O:0.999834
to	O	O:0.999983
be	O	O:0.999986
filled	O	O:0.999853
with	O	O:0.999587
the	O	O:0.999943
contents	O	O:0.999014
of	O	O:0.999900
	
but	O	O:0.999577
the	O	O:0.999846
issue	O	O:0.996237
now	O	O:0.999650
,	O	O:0.999996
when	O	O:0.999767
I	O	O:0.999990
am	O	O:0.999998
trying	O	O:0.998870
to	O	O:0.999982
save	O	O:0.999956
the	O	O:0.999998
name	O	O:0.999854
of	O	O:0.999983
the	O	O:0.999994
file	O	O:0.999851
as	O	O:0.999989
well	O	O:0.999466
in	O	O:0.999985
the	O	O:0.999835
csv	O	O:0.998853
file	O	O:0.999655
like	O	O:0.999919
this	O	O:0.999396
:	O	O:0.999941
#CODE	O	O:0.999168
	
After	O	O:0.999821
you	O	O:0.999252
do	O	O:0.999986
this	O	O:0.999982
no	O	O:0.999935
matter	O	O:0.999842
where	O	O:0.999409
the	O	O:0.999759
template	O	O:0.997287
object	O	O:0.998883
is	O	O:0.999991
in	O	O:0.999969
a	O	O:0.999938
calculation	O	O:0.990188
.	O	O:0.999706
	
So	O	O:0.999947
the	O	O:0.999841
easiest	O	O:0.999574
thing	O	O:0.999826
to	O	O:0.999974
do	O	O:0.999976
would	O	O:0.999962
be	O	O:0.999976
to	O	O:0.999998
take	O	O:0.999960
a	O	O:0.999995
sample	O	O:0.997910
of	O	O:0.999960
say	O	O:0.999710
,	O	O:0.999975
1000	O	O:0.998682
points	O	O:0.995606
,	O	O:0.999994
from	O	O:0.999973
your	O	O:0.999682
data	O	O:0.999708
:	O	O:0.999985
#CODE	O	O:0.999734
	
Your	O	O:0.999646
array	O	O:0.999602
consists	O	O:0.998259
of	O	O:0.999431
:	O	O:0.999926
#CODE	O	O:0.999690
	
The	O	O:0.999935
final	O	O:0.995299
DF	O	O:0.999463
should	O	O:0.999832
have	O	O:0.999752
as	O	O:0.999999
many	O	O:0.999750
columns	O	O:0.999901
as	O	O:0.999991
all	O	O:0.999818
the	O	O:0.999982
df	O	O:0.993284
columns	O	O:0.999726
added	O	O:0.999897
together	O	O:0.999939
,	O	O:0.999976
so	O	O:0.999913
it	O	O:0.999947
grow	O	O:0.997895
additively	O	O:0.997198
and	O	O:0.999746
not	O	O:0.999369
be	O	O:0.999858
combinatorial	O	O:0.988331
.	O	O:0.999489
	
I'm	O	O:0.999833
sorting	O	O:0.999897
the	O	O:0.999961
cells	O	O:0.999437
of	O	O:0.999981
the	O	O:0.999744
matrix	O	O:0.997582
by	O	O:0.999944
the	O	O:0.999958
float	O	O:0.992257
value	O	O:0.999682
,	O	O:0.999998
producing	O	O:0.999596
a	O	O:0.999991
list	O	O:0.997558
of	O	O:0.999777
`	O	O:0.998936
(	O	O:0.999880
row	O	O:0.999859
,	O	O:0.999990
col	O	O:0.997602
,	O	O:0.999996
value	O	O:0.999812
)`	O	O:0.999829
tuples	O	O:0.990340
.	O	O:0.999915
	
Is	O	O:0.999927
it	O	O:0.999938
essential	O	O:0.999805
that	O	O:0.999793
you	O	O:0.999988
need	O	O:0.999902
a	O	O:0.999995
numpy	O	O:0.998393
array	O	O:0.998998
?	O	O:0.999936
	
Mh	O	O:0.997196
.	O	O:0.999555
but	O	O:0.999928
look	O	O:0.993653
at	O	O:0.999920
this	O	O:0.996392
:	O	O:0.999927
	
All	O	O:0.999680
variables	O	O:0.997721
are	O	O:0.999829
dependent	O	O:0.997874
on	O	O:0.999975
each	O	O:0.999251
other	O	O:0.999892
and	O	O:0.999868
I	O	O:0.999984
am	O	O:0.999987
only	O	O:0.998487
looking	O	O:0.999569
for	O	O:0.999900
local	O	O:0.978243
minima	O	O:0.999385
from	O	O:0.997064
the	O	O:0.999719
initial	O	O:0.998359
guess	O	O:0.998125
.	O	O:0.999803
	
The	O	O:0.999620
basic	O	O:0.998739
idea	O	O:0.998503
is	O	O:0.999972
to	O	O:0.999969
simply	O	O:0.999970
run	O	O:0.999762
all	O	O:0.999502
the	O	O:0.999972
usual	O	O:0.994152
steps	O	O:0.999786
of	O	O:0.999978
a	O	O:0.999995
root	O	O:0.997294
finder	O	O:0.999244
in	O	O:0.999954
parallel	O	O:0.998421
on	O	O:0.999989
a	O	O:0.999992
vector	O	O:0.999363
of	O	O:0.999932
variables	O	O:0.993473
,	O	O:0.999997
using	O	O:0.999976
a	O	O:0.997254
function	O	O:0.999785
that	O	O:0.999428
can	O	O:0.999778
be	O	O:0.999995
evaluated	O	O:0.999916
on	O	O:0.999968
a	O	O:0.999987
vector	O	O:0.998871
of	O	O:0.999886
variables	O	O:0.978179
and	O	O:0.999939
equivalent	O	O:0.999409
vector	O	O:0.985736
(	O	O:0.999990
s	O	O:0.999940
)	O	O:0.999977
of	O	O:0.999917
parameters	O	O:0.999611
that	O	O:0.999756
define	O	O:0.998648
the	O	O:0.999887
individual	O	O:0.997556
component	O	O:0.998693
functions	O	O:0.999469
.	O	O:0.999790
	
Hence	O	O:0.997952
,	O	O:0.999979
with	O	O:0.999826
NetworkX	O	O:0.998654
,	O	O:0.999998
you	O	O:0.999887
can	O	O:0.999680
put	O	O:0.999954
in	O	O:0.999969
an	O	O:0.999900
adjacency	O	O:0.998815
matrix	O	O:0.901624
and	O	O:0.999464
find	O	O:0.999078
out	O	O:0.999492
which	O	O:0.999437
authors	O	O:0.998990
are	O	O:0.999903
clustered	O	O:0.999204
together	O	O:0.999511
.	O	O:0.999643
	
The	O	O:0.999752
issue	O	O:0.999859
your	O	O:0.997947
having	O	O:0.999673
more	O	O:0.999217
likely	O	O:0.999053
is	O	O:0.999987
a	O	O:0.999806
python	O	O:0.997643
mmap	O	B-API:0.940160
issue	O	O:0.999012
,	O	O:0.999987
since	O	O:0.999438
python	O	O:0.999297
mmaps	O	O:0.999703
handle	O	O:0.999349
all	O	O:0.998963
the	O	O:0.999819
memory	O	O:0.990225
mapping	O	O:0.990743
and	O	O:0.999908
file	O	O:0.999814
closing	O	O:0.998643
for	O	O:0.999925
numpy	O	O:0.994115
memmaps	O	O:0.990176
.	O	O:0.999686
	
So	O	O:0.999924
far	O	O:0.999897
,	O	O:0.999984
I'm	O	O:0.999849
sticking	O	O:0.999557
with	O	O:0.997938
C++	O	O:0.999836
-	O	O:0.999992
on	O	O:0.999976
my	O	O:0.999969
tests	O	O:0.999808
,	O	O:0.999995
at	O	O:0.999986
least	O	O:0.996953
2	O	O:0.999967
orders	O	O:0.998838
of	O	O:0.999969
magnitude	O	O:0.997940
faster	O	O:0.999516
!	O	O:0.999851
	
Sorting	O	O:0.999590
ends	O	O:0.998862
up	O	O:0.999960
being	O	O:0.999551
the	O	O:0.999753
slowest	O	O:0.990559
step	O	O:0.999010
but	O	O:0.999926
it's	O	O:0.999961
still	O	O:0.991034
faster	O	O:0.999918
if	O	O:0.999949
m	O	O:0.997866
is	O	O:0.999976
large	O	O:0.999164
because	O	O:0.999054
the	O	O:0.999211
n*log	O	B-API:0.644351
(	O	O:0.999979
n	O	O:0.999671
)	O	O:0.999996
sort	O	O:0.994980
is	O	O:0.999986
faster	O	O:0.999811
than	O	O:0.996826
(	O	O:0.999945
n*m	O	O:0.994709
)	O	O:0.999715
.	O	O:0.999353
	
Basically	O	O:0.999455
,	O	O:0.999980
I	O	O:0.999994
am	O	O:0.999989
getting	O	O:0.997677
a	O	O:0.999979
memory	O	O:0.998632
error	O	O:0.999434
in	O	O:0.999759
python	O	O:0.995698
when	O	O:0.999357
trying	O	O:0.999736
to	O	O:0.999971
perform	O	O:0.999197
an	O	O:0.999909
algebraic	O	O:0.999818
operation	O	O:0.999922
on	O	O:0.999978
a	O	O:0.999985
numpy	O	O:0.993572
matrix	O	O:0.953379
.	O	O:0.999481
	
Surely	O	O:0.999434
there	O	O:0.999812
must	O	O:0.999736
be	O	O:0.999985
a	O	O:0.999974
way	O	O:0.999654
to	O	O:0.999949
populate	O	O:0.999828
a	O	O:0.999978
boost	O	O:0.998334
::	O	O:0.999942
python	O	O:0.978426
::	O	O:0.999974
numeric	O	O:0.884162
::	O	O:0.999972
array	O	O:0.999860
with	O	O:0.999976
data	O	O:0.999943
from	O	O:0.999958
a	O	O:0.999989
simple	O	O:0.999016
std	O	O:0.905628
::	O	O:0.999922
vector	O	O:0.993967
without	O	O:0.999397
having	O	O:0.993403
to	O	O:0.999826
get	O	O:0.999978
some	O	O:0.999635
3rd	O	O:0.999979
party	O	O:0.999385
library	O	O:0.998208
.	O	O:0.999597
	
Here	O	O:0.999540
again	O	O:0.999775
a	O	O:0.999965
if	O	O:0.999634
statement	O	O:0.999185
could	O	O:0.998842
do	O	O:0.999762
,	O	O:0.999996
but	O	O:0.999909
I	O	O:0.999987
am	O	O:0.999953
wondering	O	O:0.999117
if	O	O:0.999980
there	O	O:0.999435
is	O	O:0.999970
a	O	O:0.999705
workarouns	O	O:0.996937
and	O	O:0.999809
a	O	O:0.999946
Python	O	O:0.997918
library	O	O:0.998453
where	O	O:0.998297
negative	O	O:0.998018
exposant	O	O:0.997970
is	O	O:0.999946
allowed	O	O:0.998585
.	O	O:0.999431
	
The	O	O:0.999881
key	O	O:0.998803
point	O	O:0.999806
here	O	O:0.996113
is	O	O:0.999991
that	O	O:0.998410
Tabular	O	O:0.999415
and	O	O:0.999702
NumPy	O	O:0.999014
set	O	O:0.990850
certain	O	O:0.997950
standards	O	O:0.999378
for	O	O:0.999959
what	O	O:0.999745
counts	O	O:0.998519
as	O	O:0.999958
"	O	O:0.999931
fast	O	O:0.999089
"	O	O:0.999945
or	O	O:0.999579
"	O	O:0.999840
slow	O	O:0.998687
"	O	O:0.999792
--	O	O:0.999798
and	O	O:0.999828
then	O	O:0.999132
,	O	O:0.999993
force	O	O:0.999848
you	O	O:0.999858
to	O	O:0.999985
be	O	O:0.999998
explicit	O	O:0.999681
about	O	O:0.999360
operations	O	O:0.999935
that	O	O:0.999082
are	O	O:0.999987
going	O	O:0.999652
to	O	O:0.999932
be	O	O:0.999993
slow	O	O:0.999398
.	O	O:0.999679
	
Asume	O	O:0.999558
that	O	O:0.999903
your	O	O:0.999898
numpy	O	O:0.999172
module	O	O:0.997913
is	O	O:0.999971
located	O	O:0.998860
at	O	O:0.999868
/	O	O:0.999429
Users	O	O:0.994900
/	O	O:0.999768
Me	O	O:0.999957
/	O	O:0.999797
python	O	O:0.996811
/	O	O:0.999959
modules	O	O:0.997304
directory	O	O:0.998598
.	O	O:0.999437
	
I	O	O:0.999935
am	O	O:0.999973
not	O	O:0.999318
responsible	O	O:0.999959
from	O	O:0.999866
any	O	O:0.999909
brain	O	O:0.999871
damage	O	O:0.999443
resulting	O	O:0.999649
from	O	O:0.999589
attempting	O	O:0.999795
to	O	O:0.999766
understand	O	O:0.999974
this	O	O:0.999918
code	O	O:0.999012
.	O	O:0.999813
	
There	O	O:0.999661
a	O	O:0.999990
plenty	O	O:0.996487
of	O	O:0.999927
places	O	O:0.987554
where	O	O:0.999090
you're	O	O:0.999746
inadvertently	O	O:0.998491
creating	O	O:0.999659
additional	O	O:0.997393
temporary	O	O:0.998608
arrays	O	O:0.989775
,	O	O:0.999918
but	O	O:0.999794
they're	O	O:0.999422
mostly	O	O:0.992560
irrelevant	O	O:0.999651
,	O	O:0.999965
as	O	O:0.999980
they're	O	O:0.999295
overwhelmed	O	O:0.999192
by	O	O:0.999839
what	O	O:0.999944
goes	O	O:0.999670
on	O	O:0.999991
during	O	O:0.999640
the	O	O:0.999977
call	O	O:0.978147
to	O	O:0.999974
`	O	O:0.999985
select	O	O:0.989468
`	O	O:0.999956
.	O	O:0.998749
	
The	O	O:0.999896
fact	O	O:0.999923
that	O	O:0.999861
you	O	O:0.999935
are	O	O:0.999962
using	O	O:0.999170
`	O	O:0.999386
object	O	O:0.961808
`	O	O:0.999879
arrays	O	O:0.945791
(	O	O:0.999975
not	O	O:0.999886
very	O	O:0.999405
common	O	O:0.993090
and	O	O:0.999893
not	O	O:0.999772
very	O	O:0.999401
memory-efficient	O	O:0.999311
)	O	O:0.999960
presents	O	O:0.999426
a	O	O:0.999994
particular	O	O:0.997947
problem	O	O:0.997028
when	O	O:0.999547
trying	O	O:0.999894
to	O	O:0.999976
determine	O	O:0.998901
the	O	O:0.999924
index	O	O:0.998125
of	O	O:0.999966
non-None	O	O:0.999013
array	O	O:0.999740
items	O	O:0.998117
.	O	O:0.999400
	
where	O	O:0.998193
things	O	O:0.999757
improve	O	O:0.999576
as	O	O:0.999971
the	O	O:0.999856
number	O	O:0.998160
of	O	O:0.999948
bits	O	O:0.998541
increases	O	O:0.999780
.	O	O:0.999538
	
Really	O	O:0.997230
,	O	O:0.999944
4D	O	O:0.999945
arrays	O	O:0.997291
are	O	O:0.999959
just	O	O:0.997977
1D	O	O:0.999937
arrays	O	O:0.997628
in	O	O:0.999949
memory	O	O:0.998458
anyway	O	O:0.997650
(	O	O:0.999930
Unless	O	O:0.999759
you	O	O:0.999871
really	O	O:0.999837
have	O	O:0.999794
view	O	O:0.991234
objects	O	O:0.996460
,	O	O:0.999949
but	O	O:0.999884
it	O	O:0.999788
should	O	O:0.999149
still	O	O:0.998795
work	O	O:0.999611
with	O	O:0.999952
those	O	O:0.999527
as	O	O:0.999994
well	O	O:0.996739
)	O	O:0.999707
	
I'll	O	O:0.997580
add	O	O:0.999874
comments	O	O:0.999292
to	O	O:0.999958
explain	O	O:0.999872
things	O	O:0.999839
in	O	O:0.999983
a	O	O:0.999932
bit	O	O:0.997381
.	O	O:0.999396
	
I	O	O:0.999954
was	O	O:0.999965
assuming	O	O:0.999553
that	O	O:0.998955
the	O	O:0.999898
rgb	O	O:0.995357
and	O	O:0.999828
ycc	O	O:0.999446
matrices	O	O:0.997418
were	O	O:0.999897
just	O	O:0.999653
a	O	O:0.999978
matrix	O	O:0.991130
that	O	O:0.999562
had	O	O:0.999942
as	O	O:0.999997
many	O	O:0.999750
rows	O	O:0.999715
as	O	O:0.999964
pixels	O	O:0.997681
and	O	O:0.999947
a	O	O:0.999967
column	O	O:0.995069
per	O	O:0.999759
colour	O	O:0.998782
component	O	O:0.998478
.	O	O:0.999556
	
For	O	O:0.999873
example	O	O:0.998557
,	O	O:0.999990
suppose	O	O:0.999697
`	O	O:0.999966
a	O	O:0.999917
=	O	O:0.999994
ones	O	O:0.997141
((	O	O:0.999971
3	O	O:0.999908
,	O	O:0.999985
3	O	O:0.999911
))`	O	O:0.998302
.	O	O:0.999221
	
Therefore	O	O:0.998638
,	O	O:0.999969
n	O	O:0.997766
and	O	O:0.999887
m	O	O:0.999708
correspond	O	O:0.999174
to	O	O:0.999961
indices	O	O:0.999466
in	O	O:0.999966
the	O	O:0.999922
array	O	O:0.988276
,	O	O:0.999950
but	O	O:0.999738
I'm	O	O:0.999897
not	O	O:0.999810
sure	O	O:0.999570
how	O	O:0.999828
?	O	O:0.999972
	
Update	O	O:0.998494
:	O	O:0.999971
As	O	O:0.999992
mentioned	O	O:0.999567
in	O	O:0.999986
my	O	O:0.999748
comment	O	O:0.998845
below	O	O:0.999810
,	O	O:0.999983
I	O	O:0.999939
should	O	O:0.999872
have	O	O:0.994506
stated	O	O:0.999941
that	O	O:0.999492
I'm	O	O:0.999982
trying	O	O:0.999717
to	O	O:0.999461
do	O	O:0.999996
this	O	O:0.999946
on	O	O:0.999904
2D	O	O:0.999871
arrays	O	O:0.998249
,	O	O:0.999905
and	O	O:0.999926
therefore	O	O:0.999772
get	O	O:0.999487
a	O	O:0.999987
set	O	O:0.998305
of	O	O:0.999789
2D	O	O:0.999772
indices	O	O:0.996731
back	O	O:0.997283
.	O	O:0.999702
	
Need	O	O:0.999576
to	O	O:0.999916
add	O	O:0.999993
a	O	O:0.999987
check	O	O:0.987594
for	O	O:0.999967
that	O	O:0.989503
,	O	O:0.999968
but	O	O:0.999855
otherwise	O	O:0.999597
thanks	O	O:0.997739
!	O	O:0.999926
	
I	O	O:0.999980
think	O	O:0.999720
you	O	O:0.999722
just	O	O:0.999756
want	O	O:0.999685
`	O	O:0.999926
label	O	O:0.980605
==	O	O:0.999995
num	O	O:0.963551
`	O	O:0.999986
where	O	O:0.995952
`	O	O:0.999994
num	O	O:0.980367
`	O	O:0.999971
is	O	O:0.999986
the	O	O:0.999979
number	O	O:0.999431
of	O	O:0.999927
the	O	O:0.999756
object	O	O:0.999729
in	O	O:0.999752
`	O	O:0.999991
label	O	O:0.946020
`	O	O:0.999939
(	O	O:0.999875
the	O	O:0.999964
labeled	O	O:0.999712
array	O	O:0.998806
)	O	O:0.999712
.	O	O:0.998637
	
My	O	O:0.999947
question	O	O:0.998785
is	O	O:0.999993
how	O	O:0.999882
can	O	O:0.999887
I	O	O:0.999998
go	O	O:0.999990
thru	O	O:0.999645
the	O	O:0.999985
array	O	O:0.999452
to	O	O:0.999939
access	O	O:0.999960
the	O	O:0.999912
object	O	O:0.998425
in	O	O:0.999965
the	O	O:0.999935
array	O	O:0.998801
?	O	O:0.999939
	
The	O	O:0.999777
matrix	O	O:0.980342
in	O	O:0.999868
the	O	O:0.999922
example	O	O:0.999270
above	O	O:0.999636
is	O	O:0.999980
singular	O	O:0.996048
(	O	O:0.999989
determinant	O	O:0.999508
~	O	O:0.999825
0	O	O:0.999816
)	O	O:0.999809
.	O	O:0.997986
	
See	O	O:0.999675
the	O	O:0.999970
note	O	O:0.999217
at	O	O:0.999924
#URL	O	O:0.999557
	
would	O	O:0.998894
turn	O	O:0.999791
into	O	O:0.998884
either	O	O:0.999985
this	O	O:0.998766
array	O	O:0.993722
:	O	O:0.999923
#CODE	O	O:0.998963
	
Note	O	O:0.999688
that	O	O:0.999916
this	O	O:0.999900
is	O	O:0.999992
a	O	O:0.999887
bit	O	O:0.999916
more	O	O:0.999014
sophisticated	O	O:0.999883
than	O	O:0.999709
the	O	O:0.999946
simple	O	O:0.997053
do-it-yourself	O	O:0.997292
convolve-method	O	O:0.998443
,	O	O:0.999992
since	O	O:0.999818
it	O	O:0.999993
tries	O	O:0.999923
to	O	O:0.999967
handle	O	O:0.999932
the	O	O:0.999987
problems	O	O:0.998777
at	O	O:0.999974
the	O	O:0.999919
beginning	O	O:0.996507
and	O	O:0.999853
the	O	O:0.999944
end	O	O:0.996787
of	O	O:0.999958
the	O	O:0.999931
data	O	O:0.999899
by	O	O:0.999950
reflecting	O	O:0.999711
it	O	O:0.999550
(	O	O:0.999973
which	O	O:0.999901
may	O	O:0.999830
or	O	O:0.999960
may	O	O:0.999327
not	O	O:0.999740
work	O	O:0.997687
in	O	O:0.999995
your	O	O:0.999732
case	O	O:0.999755
...	O	O:0.999283
)	O	O:0.999606
.	O	O:0.997752
	
Usually	O	O:0.998065
,	O	O:0.999964
in	O	O:0.999972
numpy	O	O:0.998048
,	O	O:0.999992
you	O	O:0.999979
keep	O	O:0.999114
the	O	O:0.999979
string	O	O:0.999511
data	O	O:0.999847
in	O	O:0.999994
a	O	O:0.999994
separate	O	O:0.999394
array	O	O:0.998289
.	O	O:0.999699
	
Any	O	O:0.999778
idea	O	O:0.999098
what	O	O:0.999157
might	O	O:0.999657
be	O	O:0.999968
happening	O	O:0.999105
?	O	O:0.999771
	
but	O	O:0.999348
the	O	O:0.999965
size	O	O:0.994509
is	O	O:0.999982
wrong	O	O:0.999477
because	O	O:0.999112
i've	O	O:0.999840
assigned	O	O:0.999765
1000	O	O:0.998643
as	O	O:0.999943
the	O	O:0.999403
period	O	O:0.998102
size	O	O:0.999309
.	O	O:0.999876
	
This	O	O:0.999555
may	O	O:0.999684
not	O	O:0.999829
be	O	O:0.999989
perfectly	O	O:0.999129
pythonic	O	O:0.988043
(	O	O:0.999991
perhaps	O	O:0.999812
someone	O	O:0.999887
can	O	O:0.999972
think	O	O:0.999986
of	O	O:0.999994
a	O	O:0.999916
nicer	O	O:0.998923
implementation	O	O:0.999229
using	O	O:0.999814
generators	O	O:0.989742
or	O	O:0.999567
itertools	O	O:0.999040
?	O	O:0.999898
)	O	O:0.999180
but	O	O:0.999606
it	O	O:0.999792
is	O	O:0.999964
hard	O	O:0.999089
to	O	O:0.999973
imagine	O	O:0.999780
any	O	O:0.997429
method	O	O:0.999365
that	O	O:0.999466
relies	O	O:0.999187
on	O	O:0.999979
searching	O	O:0.999952
one	O	O:0.999945
point	O	O:0.999811
at	O	O:0.999976
a	O	O:0.999987
time	O	O:0.998591
beating	O	O:0.999711
this	O	O:0.999286
in	O	O:0.999818
speed	O	O:0.998325
.	O	O:0.999571
	
Thanks	O	O:0.999225
,	O	O:0.999994
your	O	O:0.999865
post	O	O:0.961144
helped	O	O:0.999915
me	O	O:0.999897
solve	O	O:0.999877
this	O	O:0.999891
problem	O	O:0.997776
.	O	O:0.999498
	
Now	O	O:0.999681
imagine	O	O:0.999717
that	O	O:0.999257
the	O	O:0.999970
next	O	O:0.999412
time	O	O:0.999977
step	O	O:0.999980
some	O	O:0.999961
values	O	O:0.999417
change	O	O:0.999325
,	O	O:0.999955
so	O	O:0.999614
should	O	O:0.999917
this	O	O:0.999878
picture	O	O:0.997926
.	O	O:0.999609
	
Since	O	O:0.999259
get_probability	O	B-API:0.943421
is	O	O:0.999992
a	O	O:0.999662
function	O	O:0.999378
,	O	O:0.999961
so	O	O:0.999976
what	O	O:0.999815
value	O	O:0.999307
is	O	O:0.999991
being	O	O:0.999177
passed	O	O:0.998985
to	O	O:0.999968
count	O	O:0.999162
parameter	O	O:0.999900
here	O	O:0.999213
???	O	O:0.999887
	
taking	O	O:0.998876
the	O	O:0.999877
sum	O	O:0.991729
for	O	O:0.999980
each	O	O:0.999155
column	O	O:0.998512
.	O	O:0.999708
	
You	O	O:0.999484
should	O	O:0.999432
be	O	O:0.999991
able	O	O:0.999865
to	O	O:0.999975
just	O	O:0.999957
load	O	O:0.999892
the	O	O:0.999931
entire	O	O:0.997083
thing	O	O:0.999564
into	O	O:0.999803
memory	O	O:0.999915
on	O	O:0.999921
a	O	O:0.999936
modern	O	O:0.996471
machine	O	O:0.993356
.	O	O:0.999102
	
What	O	O:0.998096
I	O	O:0.999992
want	O	O:0.999885
to	O	O:0.999780
do	O	O:0.999993
is	O	O:0.999998
to	O	O:0.999954
calculate	O	O:0.999946
the	O	O:0.999988
geographic	O	O:0.996872
distances	O	O:0.999820
between	O	O:0.999882
rows	O	O:0.999438
(	O	O:0.999991
with	O	O:0.999935
the	O	O:0.999939
special	O	O:0.992372
condition	O	O:0.999824
that	O	O:0.999954
the	O	O:0.999984
first	O	O:0.998633
element	O	O:0.997865
is	O	O:0.999950
always	O	O:0.999915
zero	O	O:0.999257
,	O	O:0.999987
at	O	O:0.999959
the	O	O:0.999799
starting	O	O:0.999530
point	O	O:0.996594
)	O	O:0.999869
.	O	O:0.999243
	
We	O	O:0.999984
can	O	O:0.999879
simply	O	O:0.999941
use	O	O:0.999958
the	O	O:0.999329
leastsq	O	B-API:0.978799
function	O	O:0.999617
to	O	O:0.999971
find	O	O:0.999916
the	O	O:0.999972
best	O	O:0.998906
coefficients	O	O:0.998003
.	O	O:0.999817
	
If	O	O:0.999796
the	O	O:0.999976
list	O	O:0.994568
of	O	O:0.999930
python	O	O:0.986963
objects	O	O:0.999719
doesn't	O	O:0.999847
grow	O	O:0.996894
at	O	O:0.999973
all	O	O:0.999785
from	O	O:0.999802
frame	O	O:0.999863
to	O	O:0.999993
frame	O	O:0.999983
,	O	O:0.999992
the	O	O:0.999989
leak	O	O:0.994945
is	O	O:0.999995
probably	O	O:0.999070
in	O	O:0.999990
the	O	O:0.999809
C	O	O:0.999929
code	O	O:0.999827
or	O	O:0.999992
the	O	O:0.999883
python-to-C	O	O:0.998162
link	O	O:0.995719
	
Any	O	O:0.998769
and	O	O:0.999670
all	O	O:0.998695
advice	O	O:0.995480
is	O	O:0.999918
greatly	O	O:0.994464
appreciated	O	O:0.998365
.	O	O:0.997660
	
Numpy	O	O:0.991735
:	O	O:0.999950
Is	O	O:0.999996
there	O	O:0.999749
an	O	O:0.999949
array	O	O:0.999854
size	O	O:0.999737
limit	O	O:0.981059
?	O	O:0.999969
	
Then	O	O:0.997013
do	O	O:0.999998
this	O	O:0.999808
after	O	O:0.999940
each	O	O:0.995027
calculation	O	O:0.996112
:	O	O:0.999995
for	O	O:0.999916
i	O	O:0.999978
in	O	O:0.999909
range	O	O:0.998810
(	O	O:0.999864
len	O	B-API:0.963455
(	O	O:0.999974
array	O	O:0.995001
)):	O	O:0.999601
array	O	O:0.998316
[	O	O:0.999992
i	O	O:0.999949
]	O	O:0.999931
[	O	O:0.999872
i	O	O:0.999996
]=	O	O:0.999826
0	O	O:0.998687
	
I	O	O:0.999981
know	O	O:0.999686
the	O	O:0.999850
random	O	O:0.933784
functions	O	O:0.998956
and	O	O:0.999895
numbers	O	O:0.999686
seem	O	O:0.998820
odd	O	O:0.999593
,	O	O:0.999955
but	O	O:0.999729
conceptually	O	O:0.999471
this	O	O:0.999771
still	O	O:0.996532
should	O	O:0.999235
work	O	O:0.997283
,	O	O:0.999992
as	O	O:0.999976
it	O	O:0.999247
worked	O	O:0.999709
when	O	O:0.998968
both	O	O:0.999897
were	O	O:0.999941
set	O	O:0.999375
to	O	O:0.999964
variables	O	O:0.999736
individually	O	O:0.999235
.	O	O:0.999736
	
@USER	O	O:0.999153
are	O	O:0.999979
your	O	O:0.999650
numbers	O	O:0.997952
in	O	O:0.999975
the	O	O:0.999990
range	O	O:0.998958
of	O	O:0.999855
-128	O	O:0.995261
to	O	O:0.999916
127	O	O:0.999871
before	O	O:0.999294
you	O	O:0.999709
convert	O	O:0.999890
them	O	O:0.999930
to	O	O:0.999951
8b	O	O:0.999990
it	O	O:0.999874
?	O	O:0.999982
	
In	O	O:0.999944
the	O	O:0.999783
future	O	O:0.997682
,	O	O:0.999967
how	O	O:0.999906
should	O	O:0.999667
I	O	O:0.999992
go	O	O:0.999916
about	O	O:0.999536
trying	O	O:0.998754
to	O	O:0.999849
find	O	O:0.999837
routines	O	O:0.999516
like	O	O:0.999931
this	O	O:0.999896
?	O	O:0.999923
	
At	O	O:0.999831
20,000	O	O:0.997837
elements	O	O:0.998700
,	O	O:0.999973
your	O	O:0.999284
method	O	O:0.994581
is	O	O:0.999983
about	O	O:0.998954
25%	O	O:0.994914
faster	O	O:0.997561
.	O	O:0.998585
	
I'll	O	O:0.995450
fix	O	O:0.998960
it	O	O:0.999968
just	O	O:0.999622
for	O	O:0.999982
you	O	O:0.999049
:P	O	O:0.999875
	
Then	O	O:0.996770
I	O	O:0.999993
convert	O	O:0.999633
it	O	O:0.999963
to	O	O:0.999988
a	O	O:0.999998
numpy	O	O:0.995356
array	O	O:0.994373
:	O	O:0.999964
#CODE	O	O:0.998958
	
Just	O	O:0.999383
throwing	O	O:0.999573
in	O	O:0.999910
my	O	O:0.999883
two	O	O:0.999900
cents	O	O:0.999857
you	O	O:0.999922
could	O	O:0.999547
do	O	O:0.999997
this	O	O:0.999980
pretty	O	O:0.999679
simply	O	O:0.997810
using	O	O:0.999810
list	O	O:0.933203
comprehension	O	O:0.998542
if	O	O:0.999425
it's	O	O:0.999727
always	O	O:0.999639
a	O	O:0.999956
2d	O	O:0.999489
array	O	O:0.999150
like	O	O:0.999772
that	O	O:0.998075
#CODE	O	O:0.999354
	
While	O	O:0.998946
its	O	O:0.999680
expected	O	O:0.999895
value	O	O:0.999933
here	O	O:0.999437
is	O	O:0.999994
zero	O	O:0.997378
,	O	O:0.999996
the	O	O:0.999949
particular	O	O:0.983602
realizations	O	O:0.999210
will	O	O:0.999737
fluctuate	O	O:0.999055
around	O	O:0.999819
that	O	O:0.999726
expected	O	O:0.999882
value	O	O:0.998894
.	O	O:0.999706
	
Then	O	O:0.997710
if	O	O:0.999986
each	O	O:0.999930
item	O	O:0.999261
is	O	O:0.999958
weighted	O	O:0.997849
with	O	O:0.999555
weight	O	O:0.974258
w_i	O	O:0.958736
,	O	O:0.999980
the	O	O:0.999848
"	O	O:0.999163
summed	O	O:0.999651
histogram	O	O:0.998833
"	O	O:0.999627
would	O	O:0.999614
have	O	O:0.999122
weight	O	O:0.997521
sum	O	O:0.992319
(	O	O:0.999974
i	O	O:0.999976
in	O	O:0.999977
items	O	O:0.999207
)	O	O:0.999809
w_i	O	O:0.710228
D_ij	O	O:0.966992
.	O	O:0.999106
	
This	O	O:0.998754
approach	O	O:0.998964
will	O	O:0.999697
take	O	O:0.999550
an	O	O:0.999956
overhead	O	O:0.999951
because	O	O:0.999823
of	O	O:0.999986
crating	O	O:0.998280
a	O	O:0.999984
new	O	O:0.999306
array	O	O:0.996521
in	O	O:0.999817
memory	O	O:0.989766
.	O	O:0.999340
	
"	O	O:0.999597
Eric's	O	O:0.999533
suggestion	O	O:0.999415
for	O	O:0.999789
revising	O	O:0.999807
this	O	O:0.999225
question	O	O:0.999737
is	O	O:0.999973
a	O	O:0.999942
good	O	O:0.998143
start	O	O:0.973704
,	O	O:0.999992
but	O	O:0.999861
I	O	O:0.999988
think	O	O:0.999600
the	O	O:0.999647
question	O	O:0.997959
"	O	O:0.999962
Given	O	O:0.998681
a	O	O:0.999982
Cartesian	O	O:0.998503
plane	O	O:0.995393
,	O	O:0.999986
how	O	O:0.999815
to	O	O:0.999964
discretize	O	O:0.999741
it	O	O:0.999977
in	O	O:0.999978
a	O	O:0.999963
matrix	O	O:0.989290
form	O	O:0.999290
?	O	O:0.999941
	
it	O	O:0.999562
is	O	O:0.999975
the	O	O:0.999980
same	O	O:0.999764
as	O	O:0.999998
long	O	O:0.999970
as	O	O:0.999980
you	O	O:0.999565
ignore	O	O:0.996314
precision	O	O:0.998892
issue	O	O:0.999568
-	O	O:0.999970
which	O	O:0.999458
matters	O	O:0.999819
quite	O	O:0.999859
often	O	O:0.999587
when	O	O:0.999690
you	O	O:0.999947
start	O	O:0.999293
taking	O	O:0.999953
exponential	O	O:0.997946
of	O	O:0.999905
numbers	O	O:0.982927
.	O	O:0.999769
	
Google	O	O:0.978242
Protocol	O	O:0.998219
Buffers	O	O:0.999521
support	O	O:0.992223
self-describing	O	O:0.999491
too	O	O:0.999630
,	O	O:0.999994
are	O	O:0.999794
pretty	O	O:0.998523
fast	O	O:0.991352
(	O	O:0.999934
but	O	O:0.999612
Python	O	O:0.999780
support	O	O:0.974970
is	O	O:0.999995
poor	O	O:0.998170
at	O	O:0.999922
present	O	O:0.999237
time	O	O:0.999543
,	O	O:0.999983
slow	O	O:0.998817
and	O	O:0.999954
buggy	O	O:0.998783
)	O	O:0.999137
.	O	O:0.993025
	
Not	O	O:0.999849
all	O	O:0.999839
people	O	O:0.995347
can	O	O:0.998345
install	O	O:0.999336
NumPy	O	O:0.999254
(	O	O:0.999876
or	O	O:0.999976
even	O	O:0.998638
Python	O	O:0.999947
:D	O	O:0.999993
)	O	O:0.999869
as	O	O:0.999982
many	O	O:0.998531
Blender	O	O:0.999865
users	O	O:0.996735
are	O	O:0.999916
just	O	O:0.996686
artists	O	O:0.998757
.	O	O:0.999454
	
All	O	O:0.999861
possible	O	O:0.999473
solutions	O	O:0.999680
are	O	O:0.999916
mentioned	O	O:0.999543
in	O	O:0.999925
the	O	O:0.999786
comments	O	O:0.995785
.	O	O:0.999833
	
I've	O	O:0.999665
also	O	O:0.999407
refined	O	O:0.999984
your	O	O:0.999165
approach	O	O:0.999909
to	O	O:0.999921
allow	O	O:0.999900
zooming	O	O:0.999599
in	O	O:0.999964
over	O	O:0.999975
a	O	O:0.999990
section	O	O:0.999558
of	O	O:0.999960
the	O	O:0.999889
data	O	O:0.999262
and	O	O:0.999918
to	O	O:0.999972
produce	O	O:0.999716
better	O	O:0.999892
results	O	O:0.999339
at	O	O:0.999925
the	O	O:0.999805
borders	O	O:0.871914
.	O	O:0.999598
	
I	O	O:0.999987
need	O	O:0.999773
to	O	O:0.999945
specify	O	O:0.999980
datatypes	O	O:0.998759
for	O	O:0.999928
all	O	O:0.999634
numerical	O	O:0.958038
types	O	O:0.996491
since	O	O:0.999860
I	O	O:0.999999
care	O	O:0.999204
about	O	O:0.999446
int	O	O:0.995197
8/	O	O:0.999189
16	O	O:0.999441
/	O	O:0.999687
32	O	O:0.999899
,	O	O:0.999972
etc	O	O:0.998368
,	O	O:0.999975
but	O	O:0.999830
I	O	O:0.999849
would	O	O:0.999915
like	O	O:0.999567
to	O	O:0.999991
benefit	O	O:0.999971
from	O	O:0.999837
the	O	O:0.999942
auto	O	O:0.999465
string	O	O:0.999635
length	O	O:0.994766
detection	O	O:0.999813
that	O	O:0.998526
works	O	O:0.999967
if	O	O:0.999935
I	O	O:0.999992
don't	O	O:0.999932
specify	O	O:0.997423
datatypes	O	O:0.992029
.	O	O:0.999604
	
I	O	O:0.999932
would	O	O:0.999914
appreciate	O	O:0.999688
any	O	O:0.999934
assistance	O	O:0.999841
you	O	O:0.999798
can	O	O:0.999765
offer	O	O:0.999882
.	O	O:0.999760
	
Let's	O	O:0.999788
say	O	O:0.999883
for	O	O:0.999985
example	O	O:0.997944
I	O	O:0.999996
have	O	O:0.999870
a	O	O:0.999924
matrix	O	O:0.980148
X	O	O:0.999033
which	O	O:0.999127
is	O	O:0.999948
my	O	O:0.999529
input	O	O:0.999111
.	O	O:0.999453
	
@USER	O	O:0.999305
-	O	O:0.999988
By	O	O:0.999965
the	O	O:0.999844
way	O	O:0.997079
,	O	O:0.999968
indexing	O	O:0.999919
returns	O	O:0.999749
a	O	O:0.999967
view	O	O:0.936368
(	O	O:0.999995
essentially	O	O:0.999911
a	O	O:0.999991
pointer	O	O:0.994553
)	O	O:0.999941
into	O	O:0.998964
the	O	O:0.999982
array	O	O:0.980387
.	O	O:0.999335
	
Note	O	O:0.999943
that	O	O:0.998193
`	O	O:0.999997
view	O	O:0.893539
`	O	O:0.999993
holds	O	O:0.998791
the	O	O:0.999998
same	O	O:0.999974
data	O	O:0.999974
as	O	O:0.999996
the	O	O:0.999972
original	O	O:0.997994
array	O	O:0.998916
!	O	O:0.999969
	
EDIT	O	O:0.992953
:	O	O:0.999962
What	O	O:0.999968
sort	O	O:0.998575
of	O	O:0.999978
sequence	O	O:0.996476
is	O	O:0.999976
it	O	O:0.999885
you're	O	O:0.999621
making	O	O:0.997500
?	O	O:0.999889
	
The	O	O:0.999876
relative	O	O:0.999535
error	O	O:0.999058
is	O	O:0.999993
less	O	O:0.999806
than	O	O:0.999689
2	O	O:0.999683
-24	O	O:0.999770
,	O	O:0.999928
which	O	O:0.999511
is	O	O:0.999929
1	O	O:0.999919
/	O	O:0.999907
2	O	O:0.999898
ULP	O	O:0.999523
divided	O	O:0.999712
by	O	O:0.999934
the	O	O:0.999940
smallest	O	O:0.999188
the	O	O:0.999984
value	O	O:0.999846
could	O	O:0.999874
be	O	O:0.999970
(	O	O:0.999994
the	O	O:0.999946
smallest	O	O:0.999536
value	O	O:0.999757
in	O	O:0.999946
the	O	O:0.999948
interval	O	O:0.998991
for	O	O:0.999972
a	O	O:0.999973
particular	O	O:0.995890
ULP	O	O:0.999200
,	O	O:0.999979
so	O	O:0.999984
the	O	O:0.999986
power	O	O:0.999761
of	O	O:0.999906
two	O	O:0.999790
that	O	O:0.999875
bounds	O	O:0.994077
it	O	O:0.999838
)	O	O:0.999596
.	O	O:0.998728
	
This	O	O:0.997990
is	O	O:0.999850
called	O	O:0.996950
matrix	O	O:0.989995
transposition	O	O:0.996272
.	O	O:0.999616
	
@USER	O	O:0.999519
The	O	O:0.999894
solutions	O	O:0.999885
there	O	O:0.999196
all	O	O:0.999963
make	O	O:0.999572
use	O	O:0.999807
of	O	O:0.999803
the	O	O:0.999419
fact	O	O:0.999882
that	O	O:0.999963
only	O	O:0.999950
a	O	O:0.999985
3x3	O	O:0.999452
sliding	O	O:0.931180
window	O	O:0.992732
is	O	O:0.999818
needed	O	O:0.985056
,	O	O:0.999981
but	O	O:0.999815
I	O	O:0.999992
need	O	O:0.999180
something	O	O:0.999440
that	O	O:0.999241
works	O	O:0.999946
for	O	O:0.999960
all	O	O:0.999868
sizes	O	O:0.998998
of	O	O:0.999908
templates	O	O:0.994398
.	O	O:0.999824
	
(	O	O:0.999839
0008	O	O:0.999414
,	O	O:0.999986
103e	O	O:0.998527
)	O	O:0.999718
Series	O	O:0.930659
Description	O	O:0.995365
LO	O	O:0.999877
:	O	O:0.999932
'	O	O:0.999866
Screen	O	O:0.996443
Save	O	O:0.999139
'	O	O:0.999548
	
@USER	O	O:0.999267
khanSever	O	O:0.998219
20k	O	O:0.995371
wouldn't	O	O:0.999864
be	O	O:0.999981
a	O	O:0.999991
problem	O	O:0.992862
for	O	O:0.999879
modern	O	O:0.995355
computers	O	O:0.998373
,	O	O:0.999989
if	O	O:0.999984
you	O	O:0.999725
are	O	O:0.999715
really	O	O:0.999560
thresholded	O	O:0.999844
by	O	O:0.999909
speed	O	O:0.998665
in	O	O:0.999953
this	O	O:0.999959
kind	O	O:0.999844
of	O	O:0.999884
computation	O	O:0.998951
,	O	O:0.999993
I	O	O:0.999964
would	O	O:0.999744
say	O	O:0.999970
that	O	O:0.999924
you	O	O:0.999822
shouldn't	O	O:0.999934
have	O	O:0.999719
had	O	O:0.999860
an	O	O:0.999972
inhomogenous	O	O:0.999913
data	O	O:0.999965
array	O	O:0.999769
to	O	O:0.999939
begin	O	O:0.999298
with	O	O:0.999581
.	O	O:0.999077
	
@USER	O	O:0.997867
Eweiwi	O	O:0.991501
:	O	O:0.999971
Did	O	O:0.999951
you	O	O:0.999941
find	O	O:0.999912
my	O	O:0.999931
answer	O	O:0.999854
anyway	O	O:0.998456
useful	O	O:0.991246
?	O	O:0.999661
	
You	O	O:0.999929
can	O	O:0.999858
now	O	O:0.999939
compute	O	O:0.999837
the	O	O:0.999900
function	O	O:0.999531
`	O	O:0.999973
f	O	O:0.989438
(	O	O:0.999998
x	O	O:0.999815
)`	O	O:0.999977
at	O	O:0.999985
any	O	O:0.999978
point	O	O:0.998970
`	O	O:0.999957
x	O	O:0.982418
`	O	O:0.999950
.	O	O:0.999384
	
BTW	O	O:0.996250
:	O	O:0.999997
this	O	O:0.999753
is	O	O:0.999992
a	O	O:0.999947
neat	O	O:0.991515
workaround	O	O:0.994391
,	O	O:0.999953
but	O	O:0.999861
if	O	O:0.999715
it	O	O:0.999937
were	O	O:0.999910
possible	O	O:0.999920
to	O	O:0.999985
use	O	O:0.999992
the	O	O:0.998976
`	O	O:0.999743
in	O	O:0.998037
`	O	O:0.999992
operator	O	O:0.998479
would	O	O:0.999944
have	O	O:0.999695
preferred	O	O:0.999929
,	O	O:0.999993
as	O	O:0.999967
in	O	O:0.999944
my	O	O:0.999313
"	O	O:0.999976
real	O	O:0.996434
case	O	O:0.999834
"	O	O:0.999954
I	O	O:0.999996
have	O	O:0.999836
a	O	O:0.999992
pool	O	O:0.993351
of	O	O:0.999987
roughly	O	O:0.996641
10	O	O:0.999859
values	O	O:0.996182
,	O	O:0.999980
non	O	O:0.999937
only	O	O:0.998273
`	O	O:0.999925
(	O	O:0.999907
6	O	O:0.999981
,	O	O:0.999992
8)	O	O:0.997913
`	O	O:0.999477
.	O	O:0.998937
	
In	O	O:0.999970
this	O	O:0.999953
example	O	O:0.999059
I	O	O:0.999990
want	O	O:0.999782
to	O	O:0.999416
return	O	O:0.999394
an	O	O:0.999956
array	O	O:0.999711
of	O	O:0.999867
[	O	O:0.999790
202	O	O:0.999614
203	O	O:0.999203
206	O	O:0.998585
210	O	O:0.998369
]	O	O:0.999256
	
So	O	O:0.999949
f	O	O:0.995771
(	O	O:0.999981
x	O	O:0.999544
,	O	O:0.999998
y	O	O:0.999896
)	O	O:0.999971
=	O	O:0.999888
0	O	O:0.999825
	
I	O	O:0.999960
present	O	O:0.999732
below	O	O:0.999123
a	O	O:0.999981
sample	O	O:0.989654
silhouette	O	O:0.999553
implementation	O	O:0.998961
in	O	O:0.999967
both	O	O:0.995937
MATLAB	O	O:0.998146
and	O	O:0.999405
Python	O	O:0.998508
/	O	O:0.999607
Numpy	O	O:0.990770
(	O	O:0.999984
keep	O	O:0.995495
in	O	O:0.999962
mind	O	O:0.999941
that	O	O:0.999861
I	O	O:0.999996
am	O	O:0.999996
more	O	O:0.990005
fluent	O	O:0.999784
in	O	O:0.999718
MATLAB	O	O:0.992943
):	O	O:0.999827
	
Python	O	O:0.997465
import	O	O:0.998813
Column	O	O:0.999720
Data	O	O:0.999521
from	O	O:0.999752
MySQL	O	O:0.999410
as	O	O:0.999981
Array	O	O:0.654384
	
This	O	O:0.998790
is	O	O:0.999990
just	O	O:0.998934
the	O	O:0.999981
partial	O	O:0.990739
count	O	O:0.999058
due	O	O:0.999985
to	O	O:0.999985
the	O	O:0.999980
34	O	O:0.999307
1-chips	O	O:0.997373
.	O	O:0.999823
	
I	O	O:0.999981
want	O	O:0.999848
to	O	O:0.999762
know	O	O:0.999974
how	O	O:0.999829
I	O	O:0.999762
should	O	O:0.999583
index	O	O:0.996235
/	O	O:0.999930
access	O	O:0.999876
some	O	O:0.999963
data	O	O:0.999955
programmatically	O	O:0.999784
in	O	O:0.999923
python	O	O:0.992772
.	O	O:0.999753
	
There	O	O:0.998648
is	O	O:0.999985
a	O	O:0.999976
short	O	O:0.999117
comment	O	O:0.999469
at	O	O:0.999980
the	O	O:0.999942
end	O	O:0.998019
of	O	O:0.999904
the	O	O:0.999677
introduction	O	O:0.999614
to	O	O:0.999964
SciPy	O	O:0.999882
documentation	O	O:0.996775
:	O	O:0.999947
	
What	O	O:0.999475
about	O	O:0.999706
the	O	O:0.999883
maximum	O	O:0.995420
value	O	O:0.999667
in	O	O:0.999986
the	O	O:0.999936
array	O	O:0.997673
?	O	O:0.999939
	
If	O	O:0.999976
you	O	O:0.999891
use	O	O:0.999792
a	O	O:0.999990
list	O	O:0.992129
of	O	O:0.999747
`	O	O:0.999138
True	O	O:0.985548
/	O	O:0.999952
False	O	O:0.967817
`	O	O:0.999855
,	O	O:0.999853
NumPy	O	O:0.999844
will	O	O:0.992366
interpret	O	O:0.999935
that	O	O:0.999929
as	O	O:0.999971
a	O	O:0.999996
list	O	O:0.996962
of	O	O:0.999939
`	O	O:0.999362
1	O	O:0.999830
/	O	O:0.999963
0	O	O:0.999887
`	O	O:0.999982
as	O	O:0.999717
integers	O	O:0.999393
,	O	O:0.999997
that	O	O:0.998758
is	O	O:0.999931
,	O	O:0.999956
indices	O	O:0.996962
,	O	O:0.999955
meaning	O	O:0.999838
that	O	O:0.999387
you	O	O:0.999947
'	O	O:0.999945
either	O	O:0.999845
get	O	O:0.999710
the	O	O:0.999826
second	O	O:0.998692
or	O	O:0.999980
first	O	O:0.999808
element	O	O:0.999955
of	O	O:0.999988
your	O	O:0.999080
array	O	O:0.998949
.	O	O:0.999508
	
But	O	O:0.999376
it's	O	O:0.999654
still	O	O:0.995613
an	O	O:0.999941
array	O	O:0.997431
and	O	O:0.999952
there	O	O:0.997148
is	O	O:0.999893
no	O	O:0.999647
difference	O	O:0.999705
in	O	O:0.999954
asymptotic	O	O:0.999412
complexity	O	O:0.997995
.	O	O:0.999573
	
Here's	O	O:0.999381
one	O	O:0.999474
way	O	O:0.998862
(	O	O:0.999984
same	O	O:0.999793
matrix	O	O:0.995415
as	O	O:0.999967
before	O	O:0.959011
):	O	O:0.999928
#CODE	O	O:0.996804
	
assume	O	O:0.997567
i	O	O:0.999987
have	O	O:0.998928
100	O	O:0.999740
points	O	O:0.998943
whose	O	O:0.999738
coordinates	O	O:0.988863
are	O	O:0.999917
random	O	O:0.993827
,	O	O:0.999850
	
If	O	O:0.999954
you	O	O:0.999925
just	O	O:0.999768
want	O	O:0.999952
the	O	O:0.999905
first	O	O:0.999541
one	O	O:0.999891
,	O	O:0.999986
use	O	O:0.999975
next	O	O:0.996571
with	O	O:0.998663
the	O	O:0.999975
list	O	O:0.996388
comprehension	O	O:0.999949
as	O	O:0.999992
a	O	O:0.999977
generator	O	O:0.995505
expression	O	O:0.995885
.	O	O:0.999642
	
So	O	O:0.999951
I	O	O:0.999988
am	O	O:0.999998
able	O	O:0.998985
to	O	O:0.999987
plot	O	O:0.999868
what	O	O:0.999729
I	O	O:0.999996
want	O	O:0.999977
onto	O	O:0.997737
my	O	O:0.999945
matrix	O	O:0.947043
	
By	O	O:0.999805
X3D	O	O:0.999426
,	O	O:0.999975
are	O	O:0.999934
you	O	O:0.999934
referring	O	O:0.999878
to	O	O:0.999947
the	O	O:0.999986
x3d	O	O:0.999881
standard	O	O:0.998837
for	O	O:0.999962
3d	O	O:0.999927
content	O	O:0.995006
,	O	O:0.999998
as	O	O:0.999989
at	O	O:0.999865
#URL	O	O:0.999844
If	O	O:0.999967
so	O	O:0.999968
,	O	O:0.999985
I	O	O:0.999959
would	O	O:0.999923
very	O	O:0.999491
much	O	O:0.999975
like	O	O:0.999916
to	O	O:0.999934
learn	O	O:0.999963
more	O	O:0.999527
of	O	O:0.999981
what	O	O:0.999677
you	O	O:0.999947
are	O	O:0.999963
doing	O	O:0.998698
--	O	O:0.999938
thanks	O	O:0.992645
	
Would	O	O:0.999054
it	O	O:0.999950
be	O	O:0.999984
prohibitvely	O	O:0.998090
wasteful	O	O:0.999375
to	O	O:0.999977
save	O	O:0.999991
them	O	O:0.999968
with	O	O:0.999976
a	O	O:0.999939
fixed	O	O:0.998795
width	O	O:0.999273
?	O	O:0.999903
	
BSD-licensed	O	O:0.998850
Python	O	O:0.998628
source	O	O:0.999941
code	O	O:0.999645
for	O	O:0.999983
surface	O	O:0.999839
fits	O	O:0.999748
can	O	O:0.999921
be	O	O:0.999995
found	O	O:0.999612
at	O	O:0.999509
	
...	O	O:0.989122
which	O	O:0.999447
returned	O	O:0.998296
`	O	O:0.999916
True	O	O:0.986743
`	O	O:0.999977
on	O	O:0.999964
each	O	O:0.999988
value	O	O:0.999972
of	O	O:0.999979
the	O	O:0.999696
array	O	O:0.997727
.	O	O:0.999458
	
I	O	O:0.999985
have	O	O:0.999785
two	O	O:0.999152
ordered	O	O:0.999895
numpy	O	O:0.990514
arrays	O	O:0.999443
and	O	O:0.999649
I	O	O:0.999986
want	O	O:0.999219
to	O	O:0.999016
interleave	O	O:0.999998
them	O	O:0.999660
so	O	O:0.999997
that	O	O:0.999697
I	O	O:0.999999
take	O	O:0.999894
one	O	O:0.999957
item	O	O:0.999950
from	O	O:0.999899
the	O	O:0.999947
first	O	O:0.999790
array	O	O:0.999413
,	O	O:0.999999
then	O	O:0.999847
another	O	O:0.999966
from	O	O:0.999753
the	O	O:0.999570
second	O	O:0.999440
,	O	O:0.999998
then	O	O:0.999978
back	O	O:0.999932
to	O	O:0.999988
the	O	O:0.999996
first	O	O:0.998442
-	O	O:0.999996
taking	O	O:0.999621
the	O	O:0.999941
next	O	O:0.997352
item	O	O:0.999970
that	O	O:0.999929
is	O	O:0.999993
larger	O	O:0.999904
than	O	O:0.999589
the	O	O:0.999920
one	O	O:0.999131
I	O	O:0.999997
just	O	O:0.999965
took	O	O:0.999872
from	O	O:0.999780
the	O	O:0.999503
second	O	O:0.998937
and	O	O:0.999926
so	O	O:0.999943
on	O	O:0.999868
.	O	O:0.999758
	
Did	O	O:0.999831
you	O	O:0.999945
look	O	O:0.999199
at	O	O:0.999978
the	O	O:0.999911
link	O	O:0.997521
in	O	O:0.999989
my	O	O:0.999932
answer	O	O:0.999945
to	O	O:0.999812
the	O	O:0.999944
SciPy	O	O:0.999876
page	O	O:0.996056
on	O	O:0.999967
Performance	O	O:0.999869
Python	O	O:0.998784
.	O	O:0.999745
	
If	O	O:0.999959
you	O	O:0.999883
want	O	O:0.999862
the	O	O:0.999827
column	O	O:0.999015
indices	O	O:0.999134
instead	O	O:0.999863
of	O	O:0.999981
the	O	O:0.999779
resulting	O	O:0.998261
square	O	O:0.998196
matrix	O	O:0.991171
,	O	O:0.999991
just	O	O:0.999621
replace	O	O:0.985257
`	O	O:0.999986
return	O	O:0.986973
B	O	O:0.999398
`	O	O:0.999992
with	O	O:0.992539
`	O	O:0.999938
return	O	O:0.982056
colset	O	O:0.991505
`	O	O:0.999926
.	O	O:0.997992
	
At	O	O:0.999922
the	O	O:0.999878
end	O	O:0.996988
of	O	O:0.999902
it	O	O:0.999826
all	O	O:0.998267
:	O	O:0.999958
#CODE	O	O:0.998667
	
Is	O	O:0.999986
there	O	O:0.999515
no	O	O:0.999959
equivalent	O	O:0.998839
function	O	O:0.999930
that	O	O:0.999934
gets	O	O:0.999432
the	O	O:0.999967
index	O	O:0.999005
of	O	O:0.999956
the	O	O:0.999947
last	O	O:0.999589
occurrence	O	O:0.999786
?	O	O:0.999944
	
I	O	O:0.999984
want	O	O:0.999881
to	O	O:0.999765
get	O	O:0.999995
a	O	O:0.999989
cartesian	O	O:0.998693
product	O	O:0.999890
of	O	O:0.999960
a	O	O:0.998658
[:	O	O:0.999501
:	O	O:0.999974
i	O	O:0.999975
]	O	O:0.999783
and	O	O:0.998169
b	O	O:0.997661
[:	O	O:0.999689
:	O	O:0.999988
j	O	O:0.999852
]	O	O:0.999995
from	O	O:0.998237
c	O	O:0.998778
.	O	O:0.999946
	
python	O	O:0.993077
/	O	O:0.999911
numpy	O	O:0.986226
:	O	O:0.999993
how	O	O:0.999940
to	O	O:0.999982
get	O	O:0.999960
2D	O	O:0.999988
array	O	O:0.999661
column	O	O:0.998841
length	O	O:0.996347
?	O	O:0.999888
	
Your	O	O:0.999283
example	O	O:0.997479
works	O	O:0.999628
for	O	O:0.999972
me	O	O:0.999978
if	O	O:0.999806
I	O	O:0.999990
sample	O	O:0.991943
around	O	O:0.995748
2**6	O	O:0.997250
points	O	O:0.978457
.	O	O:0.999524
	
NumPy's	O	O:0.999657
main	O	O:0.995379
object	O	O:0.999208
is	O	O:0.999958
the	O	O:0.999391
homogeneous	O	O:0.993230
multidimensional	O	O:0.996172
array	O	O:0.999129
.	O	O:0.999620
	
Pythonic	O	O:0.998175
way	O	O:0.999628
to	O	O:0.999816
import	O	O:0.999983
data	O	O:0.999960
from	O	O:0.999893
multiple	O	O:0.998866
files	O	O:0.999957
into	O	O:0.999789
an	O	O:0.999987
array	O	O:0.993563
	
The	O	O:0.999928
only	O	O:0.999854
thing	O	O:0.999255
I	O	O:0.999942
was	O	O:0.999969
going	O	O:0.997749
to	O	O:0.999848
add	O	O:0.999623
was	O	O:0.999938
this	O	O:0.999162
:	O	O:0.999985
#URL	O	O:0.999113
Indicated	O	O:0.999092
that	O	O:0.999916
this	O	O:0.999296
is	O	O:0.999976
not	O	O:0.999438
likely	O	O:0.999615
to	O	O:0.999840
change	O	O:0.997730
.	O	O:0.998846
	
i	O	O:0.999989
have	O	O:0.999844
a	O	O:0.999996
numpy	O	O:0.998467
array	O	O:0.999809
like	O	O:0.999743
the	O	O:0.999659
following	O	O:0.992616
#CODE	O	O:0.997764
	
I	O	O:0.999983
want	O	O:0.999912
to	O	O:0.999728
write	O	O:0.999982
a	O	O:0.999965
Boost-Python	O	O:0.999482
program	O	O:0.998726
to	O	O:0.999993
take	O	O:0.999978
a	O	O:0.999991
symbolic	O	O:0.999116
python	O	O:0.990378
function	O	O:0.999904
from	O	O:0.999385
user	O	O:0.999249
and	O	O:0.999928
evaluate	O	O:0.998501
its	O	O:0.999735
derivative	O	O:0.999880
in	O	O:0.999962
my	O	O:0.999866
program	O	O:0.995879
.	O	O:0.999654
	
Is	O	O:0.999991
there	O	O:0.999777
a	O	O:0.999968
way	O	O:0.990204
around	O	O:0.999273
this	O	O:0.999015
?	O	O:0.999903
	
Not	O	O:0.999952
sure	O	O:0.999874
if	O	O:0.999931
I	O	O:0.999974
explained	O	O:0.999967
this	O	O:0.999284
all	O	O:0.999432
really	O	O:0.998830
well	O	O:0.968276
,	O	O:0.999948
but	O	O:0.999923
just	O	O:0.998193
print	O	O:0.988762
out	O	O:0.999447
a_strided	O	O:0.536652
and	O	O:0.999616
you'll	O	O:0.998880
see	O	O:0.999822
what	O	O:0.999457
the	O	O:0.999834
result	O	O:0.994870
is	O	O:0.999896
and	O	O:0.999666
how	O	O:0.999958
easy	O	O:0.999862
this	O	O:0.999930
makes	O	O:0.998827
the	O	O:0.999690
operation	O	O:0.998333
.	O	O:0.999661
	
But	O	O:0.999947
when	O	O:0.997643
I	O	O:0.999992
start	O	O:0.999825
calling	O	O:0.993943
columns	O	O:0.999612
by	O	O:0.999986
their	O	O:0.999723
field	O	O:0.998839
names	O	O:0.998222
,	O	O:0.999989
screwy	O	O:0.999907
things	O	O:0.996861
happen	O	O:0.920802
.	O	O:0.999674
	
all	O	O:0.997541
I	O	O:0.999989
get	O	O:0.997325
is	O	O:0.999962
very	O	O:0.999820
high	O	O:0.999438
or	O	O:0.999967
inf	O	O:0.993241
numbers	O	O:0.995829
.	O	O:0.999336
	
If	O	O:0.999902
you're	O	O:0.999174
iterating	O	O:0.996006
through	O	O:0.998068
,	O	O:0.999953
and	O	O:0.999889
applying	O	O:0.999613
the	O	O:0.994159
function	O	O:0.999180
to	O	O:0.999832
_each_	O	O:0.999877
item	O	O:0.999686
,	O	O:0.999997
then	O	O:0.999650
,	O	O:0.999998
yeah	O	O:0.999834
,	O	O:0.999992
the	O	O:0.999994
numpy	O	O:0.974954
functions	O	O:0.999871
will	O	O:0.999859
be	O	O:0.999955
slower	O	O:0.999315
.	O	O:0.998727
	
Slicing	O	O:0.998931
does	O	O:0.997934
not	O	O:0.999980
copy	O	O:0.996729
the	O	O:0.999955
array	O	O:0.999736
into	O	O:0.999505
new	O	O:0.999898
memory	O	O:0.986445
(	O	O:0.999973
unlike	O	O:0.998640
delete	O	O:0.988994
)	O	O:0.999502
.	O	O:0.998822
	
And	O	O:0.999653
here's	O	O:0.999671
the	O	O:0.999516
filled	O	O:0.996799
version	O	O:0.981555
:	O	O:0.999981
#CODE	O	O:0.999744
	
This	O	O:0.999410
is	O	O:0.999983
a	O	O:0.999929
little	O	O:0.996979
bit	O	O:0.999808
annoying	O	O:0.999633
to	O	O:0.999705
do	O	O:0.999808
,	O	O:0.999995
but	O	O:0.999964
at	O	O:0.999965
least	O	O:0.999505
you	O	O:0.999891
can	O	O:0.998917
remove	O	O:0.999924
that	O	O:0.999938
annoying	O	O:0.999828
`	O	O:0.999902
==	O	O:0.999148
`	O	O:0.999976
easily	O	O:0.998400
,	O	O:0.999997
using	O	O:0.999366
sorting	O	O:0.952733
(	O	O:0.998943
and	O	O:0.999931
thats	O	O:0.999784
probably	O	O:0.999786
your	O	O:0.999595
speed	O	O:0.999505
killer	O	O:0.999442
)	O	O:0.999378
.	O	O:0.997410
	
I	O	O:0.999933
still	O	O:0.998349
haven't	O	O:0.999123
found	O	O:0.999191
an	O	O:0.999969
entirely	O	O:0.999800
satisfactory	O	O:0.999636
solution	O	O:0.998283
,	O	O:0.999979
but	O	O:0.999897
nevertheless	O	O:0.999859
there	O	O:0.998630
is	O	O:0.999994
something	O	O:0.999765
one	O	O:0.999845
can	O	O:0.999946
do	O	O:0.999995
to	O	O:0.999990
obtain	O	O:0.999963
the	O	O:0.999890
pointer	O	O:0.999592
with	O	O:0.999915
a	O	O:0.999976
lot	O	O:0.999957
less	O	O:0.998902
overhead	O	O:0.999584
in	O	O:0.999613
CPython	O	O:0.998936
.	O	O:0.999616
	
I	O	O:0.999972
also	O	O:0.999894
tried	O	O:0.999470
using	O	O:0.997326
NumPy	O	O:0.979268
masked	O	O:0.951534
arrays	O	O:0.991204
,	O	O:0.999966
with	O	O:0.999619
NaN	O	O:0.966390
fill_value	O	B-API:0.538899
,	O	O:0.999685
which	O	O:0.999854
also	O	O:0.998842
did	O	O:0.999934
not	O	O:0.998322
work	O	O:0.995068
.	O	O:0.999766
	
cartesian	O	O:0.986948
(	O	O:0.999992
split	O	O:0.894937
(	O	O:0.999995
a	O	O:0.999981
,	O	O:0.999954
3	O	O:0.999856
))`	O	O:0.998153
.	O	O:0.998963
	
I	O	O:0.999979
did	O	O:0.999959
a	O	O:0.999928
little	O	O:0.985999
further	O	O:0.999623
experimenting	O	O:0.981570
and	O	O:0.999549
found	O	O:0.999803
a	O	O:0.999965
numpy	O	O:0.995073
specific	O	O:0.998881
way	O	O:0.999919
to	O	O:0.999703
solve	O	O:0.999965
this	O	O:0.998601
:	O	O:0.999979
#CODE	O	O:0.999438
	
When	O	O:0.997918
you	O	O:0.999977
need	O	O:0.999602
to	O	O:0.999990
deal	O	O:0.999694
with	O	O:0.999957
exponential	O	O:0.993502
,	O	O:0.999997
you	O	O:0.999972
quickly	O	O:0.999088
go	O	O:0.999964
into	O	O:0.999852
under	O	O:0.999941
/	O	O:0.999918
over	O	O:0.999871
flow	O	O:0.999937
since	O	O:0.999939
the	O	O:0.999720
function	O	O:0.999897
grows	O	O:0.999833
so	O	O:0.999988
quickly	O	O:0.999318
.	O	O:0.999682
	
Long	O	O:0.999503
story	O	O:0.999043
short	O	O:0.996714
,	O	O:0.999981
not	O	O:0.999887
only	O	O:0.999929
does	O	O:0.999561
tabular	O	O:0.999875
not	O	O:0.999592
act	O	O:0.999780
like	O	O:0.999842
a	O	O:0.999983
spreadsheet	O	O:0.999230
out	O	O:0.999919
of	O	O:0.999802
the	O	O:0.999151
box	O	O:0.999580
,	O	O:0.999985
I	O	O:0.999991
can't	O	O:0.999951
find	O	O:0.999694
a	O	O:0.999984
way	O	O:0.999255
to	O	O:0.999947
make	O	O:0.999682
it	O	O:0.999911
work	O	O:0.995603
.	O	O:0.999787
	
What	O	O:0.999552
do	O	O:0.999923
you	O	O:0.999974
mean	O	O:0.993432
"	O	O:0.999975
two	O	O:0.999883
significant	O	O:0.999848
figures	O	O:0.992021
"	O	O:0.999891
?	O	O:0.999923
	
We	O	O:0.999944
put	O	O:0.998067
it	O	O:0.999950
in	O	O:0.999771
a	O	O:0.999973
list	O	O:0.935973
and	O	O:0.999819
double	O	O:0.980791
it	O	O:0.999140
.	O	O:0.999431
	
For	O	O:0.999914
example	O	O:0.999155
for	O	O:0.999952
value	O	O:0.999506
255	O	O:0.999680
the	O	O:0.999977
coordinates	O	O:0.982588
of	O	O:0.999980
the	O	O:0.999925
box	O	O:0.999078
around	O	O:0.999608
the	O	O:0.999915
value	O	O:0.997610
255	O	O:0.999688
will	O	O:0.999645
be	O	O:0.999982
upper	O	O:0.998565
left	O	O:0.967088
(	O	O:0.999908
0	O	O:0.999852
,	O	O:0.999984
0	O	O:0.999837
)	O	O:0.999778
and	O	O:0.999434
lower	O	O:0.999506
right	O	O:0.989401
(	O	O:0.999908
4	O	O:0.999918
,	O	O:0.999991
6	O	O:0.999872
)	O	O:0.999587
.	O	O:0.998680
	
Like	O	O:0.999478
in	O	O:0.999931
a	O	O:0.999990
java	O	O:0.998783
program	O	O:0.998222
,	O	O:0.999997
you	O	O:0.999938
can	O	O:0.999714
choose	O	O:0.999929
to	O	O:0.999984
start	O	O:0.999869
it	O	O:0.999974
up	O	O:0.999959
with	O	O:0.999679
,	O	O:0.999986
say	O	O:0.999961
,	O	O:0.999987
5GB	O	O:0.999769
of	O	O:0.999806
memory	O	O:0.990120
.	O	O:0.999717
	
However	O	O:0.999612
,	O	O:0.999989
due	O	O:0.999963
to	O	O:0.999973
the	O	O:0.999989
way	O	O:0.999871
the	O	O:0.999966
data	O	O:0.999804
points	O	O:0.999217
lie	O	O:0.998888
it	O	O:0.999988
does	O	O:0.998660
not	O	O:0.999967
give	O	O:0.999941
me	O	O:0.999993
a	O	O:0.999942
y-axis	O	O:0.999633
interception	O	O:0.999424
at	O	O:0.999908
0	O	O:0.999149
.	O	O:0.999533
	
I'd	O	O:0.999942
like	O	O:0.999460
to	O	O:0.999971
sort	O	O:0.998974
it	O	O:0.999982
such	O	O:0.999979
that	O	O:0.999943
my	O	O:0.999933
points	O	O:0.998022
are	O	O:0.999693
ordered	O	O:0.999790
by	O	O:0.999713
x-coordinate	O	O:0.999817
,	O	O:0.999876
and	O	O:0.999983
then	O	O:0.999742
by	O	O:0.999986
y	O	O:0.999903
in	O	O:0.999979
cases	O	O:0.999448
where	O	O:0.999894
the	O	O:0.999968
x	O	O:0.999593
coordinate	O	O:0.999717
is	O	O:0.999997
the	O	O:0.999982
same	O	O:0.998344
.	O	O:0.999763
	
Of	O	O:0.999729
course	O	O:0.999475
this	O	O:0.999946
will	O	O:0.999683
slow	O	O:0.999861
the	O	O:0.999953
program	O	O:0.999016
down	O	O:0.995101
,	O	O:0.999996
but	O	O:0.999966
at	O	O:0.999852
least	O	O:0.994086
it'll	O	O:0.997751
finish	O	O:0.988006
.	O	O:0.998673
	
Im	O	O:0.999809
writing	O	O:0.998381
it	O	O:0.999956
here	O	O:0.999802
because	O	O:0.999690
i	O	O:0.999995
cant	O	O:0.999517
put	O	O:0.999624
image	O	O:0.999848
in	O	O:0.999520
comment	O	O:0.993978
.	O	O:0.999728
	
In	O	O:0.999932
looking	O	O:0.999732
at	O	O:0.999630
`	O	O:0.999956
fill	O	B-API:0.731441
`	O	O:0.999989
,	O	O:0.999928
I	O	O:0.999995
saw	O	O:0.999987
that	O	O:0.996564
`	O	O:0.999981
repeat	O	B-API:0.543840
`	O	O:0.999991
suits	O	O:0.999679
my	O	O:0.999984
needs	O	O:0.999802
even	O	O:0.997762
better	O	O:0.999846
.	O	O:0.999564
	
Note	O	O:0.999938
that	O	O:0.999528
an	O	O:0.999913
array's	O	O:0.999895
base	O	O:0.999401
will	O	O:0.999819
be	O	O:0.999961
another	O	O:0.999644
array	O	O:0.996586
,	O	O:0.999978
even	O	O:0.998808
if	O	O:0.999978
it	O	O:0.999950
is	O	O:0.999974
a	O	O:0.999829
subset	O	O:0.973011
:	O	O:0.999932
#CODE	O	O:0.999187
	
If	O	O:0.999922
you	O	O:0.999922
have	O	O:0.999776
float	O	O:0.999225
data	O	O:0.999934
,	O	O:0.999995
or	O	O:0.999997
data	O	O:0.999598
spread	O	O:0.999762
over	O	O:0.999948
a	O	O:0.999995
huge	O	O:0.999419
range	O	O:0.999827
you	O	O:0.999687
can	O	O:0.999302
convert	O	O:0.999844
it	O	O:0.999988
to	O	O:0.999961
integers	O	O:0.999983
by	O	O:0.999960
doing	O	O:0.992977
:	O	O:0.999913
#CODE	O	O:0.998250
	
@USER	O	O:0.999051
,	O	O:0.999986
plaes	O	O:0.995913
recommend	O	O:0.999807
using	O	O:0.999930
a	O	O:0.999794
generator	O	O:0.941747
(	O	O:0.999970
parenthesis	O	O:0.994222
)	O	O:0.999945
instead	O	O:0.999729
of	O	O:0.999956
a	O	O:0.999931
list	O	O:0.936390
(	O	O:0.999988
brackets	O	O:0.996819
)	O	O:0.999949
in	O	O:0.999831
order	O	O:0.999863
to	O	O:0.999923
save	O	O:0.999889
memory	O	O:0.997850
and	O	O:0.999967
gain	O	O:0.999056
speed	O	O:0.999631
when	O	O:0.999045
managing	O	O:0.999897
high	O	O:0.999787
amounts	O	O:0.999866
of	O	O:0.999975
data	O	O:0.998458
.	O	O:0.999833
	
I	O	O:0.999980
want	O	O:0.999850
to	O	O:0.998931
divide	O	O:0.999313
this	O	O:0.999703
array	O	O:0.999920
into	O	O:0.998983
3	O	O:0.999981
blocks	O	O:0.996710
of	O	O:0.999973
size	O	O:0.998261
2x4	O	O:0.999805
,	O	O:0.999921
and	O	O:0.999971
then	O	O:0.999500
find	O	O:0.999774
the	O	O:0.999992
mean	O	O:0.994312
of	O	O:0.999982
all	O	O:0.999706
three	O	O:0.999626
blocks	O	O:0.992088
(	O	O:0.999978
so	O	O:0.999992
that	O	O:0.999958
the	O	O:0.999997
shape	O	O:0.999770
of	O	O:0.999966
the	O	O:0.999964
mean	O	O:0.986648
is	O	O:0.999966
2x4	O	O:0.999345
.	O	O:0.999720
	
(	O	O:0.999955
Have	O	O:0.999912
a	O	O:0.999994
look	O	O:0.997257
at	O	O:0.999977
the	O	O:0.999880
comments	O	O:0.998879
above	O	O:0.999864
the	O	O:0.999987
code	O	O:0.998709
for	O	O:0.999993
that	O	O:0.999076
portion	O	O:0.998662
.	O	O:0.999868
)	O	O:0.999488
	
That	O	O:0.997718
is	O	O:0.999984
because	O	O:0.996556
`	O	O:0.999914
fsolve	O	B-API:0.973249
`	O	O:0.999941
thinks	O	O:0.998730
it	O	O:0.999899
is	O	O:0.999967
looking	O	O:0.999501
for	O	O:0.999873
an	O	O:0.999937
array	O	O:0.999722
of	O	O:0.999907
length	O	O:0.981916
17	O	O:0.999962
that	O	O:0.998856
solves	O	O:0.999702
`	O	O:0.999986
p	O	O:0.881288
`	O	O:0.999950
.	O	O:0.998685
	
When	O	O:0.998955
there's	O	O:0.999964
a	O	O:0.999956
choice	O	O:0.996190
between	O	O:0.988434
working	O	O:0.999527
with	O	O:0.998415
NumPy	O	O:0.999328
array	O	O:0.997573
and	O	O:0.999793
numeric	O	O:0.978383
lists	O	O:0.995430
,	O	O:0.999995
the	O	O:0.999805
former	O	O:0.998082
are	O	O:0.999960
typically	O	O:0.998784
faster	O	O:0.999546
.	O	O:0.999041
	
Wait	O	O:0.999338
...	O	O:0.999204
why	O	O:0.999922
do	O	O:0.999887
you	O	O:0.999976
need	O	O:0.999644
the	O	O:0.999944
negative	O	O:0.997286
?	O	O:0.999960
	
But	O	O:0.999903
if	O	O:0.999966
a	O	O:0.999970
dense	O	O:0.993668
3d	O	O:0.999955
array	O	O:0.998334
representation	O	O:0.998301
isn't	O	O:0.999870
that	O	O:0.999787
much	O	O:0.999058
bigger	O	O:0.999582
,	O	O:0.999946
storing	O	O:0.999451
it	O	O:0.999930
as	O	O:0.999991
a	O	O:0.999931
chuncked	O	O:0.985886
and	O	O:0.999394
compressed	O	O:0.997120
hdf5	O	O:0.999276
array	O	O:0.998142
is	O	O:0.999987
probably	O	O:0.998412
the	O	O:0.999953
way	O	O:0.999591
to	O	O:0.999870
go	O	O:0.999936
.	O	O:0.999909
	
Index	O	O:0.658269
datetime	O	O:0.992560
in	O	O:0.999971
numpy	O	O:0.998772
array	O	O:0.997848
	
Is	O	O:0.999986
there	O	O:0.999256
an	O	O:0.999712
"	O	O:0.999947
expandable	O	O:0.998507
"	O	O:0.999918
matrix	O	O:0.998310
data	O	O:0.999862
structure	O	O:0.999875
available	O	O:0.999880
in	O	O:0.999941
a	O	O:0.999971
well	O	O:0.994507
tested	O	O:0.998737
module	O	O:0.994682
?	O	O:0.999865
	
You	O	O:0.999731
can	O	O:0.999670
make	O	O:0.999945
this	O	O:0.999835
one-liner	O	O:0.999940
reusable	O	O:0.998974
if	O	O:0.999978
you	O	O:0.999861
are	O	O:0.999880
going	O	O:0.999565
to	O	O:0.999824
repeat	O	O:0.989589
it	O	O:0.999983
a	O	O:0.999948
lot	O	O:0.996373
:	O	O:0.999943
#CODE	O	O:0.999080
	
Here's	O	O:0.999744
my	O	O:0.999767
array	O	O:0.998920
(	O	O:0.999940
rather	O	O:0.999629
,	O	O:0.999949
a	O	O:0.999952
method	O	O:0.996801
of	O	O:0.999907
generating	O	O:0.995759
representative	O	O:0.998429
test	O	O:0.964761
arrays	O	O:0.992341
):	O	O:0.999872
#CODE	O	O:0.997267
	
We	O	O:0.999941
need	O	O:0.999033
more	O	O:0.999420
information	O	O:0.999745
on	O	O:0.999994
your	O	O:0.999444
array	O	O:0.999200
.	O	O:0.999619
	
@USER	O	O:0.998451
:	O	O:0.999981
If	O	O:0.999989
the	O	O:0.999984
code	O	O:0.999263
all	O	O:0.999648
F77	O	O:0.999936
,	O	O:0.999982
why	O	O:0.999625
is	O	O:0.999959
the	O	O:0.999688
question	O	O:0.998818
tagged	O	O:0.999254
Python	O	O:0.999394
?	O	O:0.999972
	
It	O	O:0.999979
does	O	O:0.999776
that	O	O:0.999724
without	O	O:0.999935
densifying	O	O:0.984032
the	O	O:0.999347
matrix	O	O:0.958801
right	O	O:0.998505
?	O	O:0.999980
	
To	O	O:0.999981
speed	O	O:0.999863
up	O	O:0.999936
the	O	O:0.999898
program	O	O:0.998117
,	O	O:0.999972
I	O	O:0.999999
want	O	O:0.999924
to	O	O:0.999902
pass	O	O:0.999676
the	O	O:0.999879
index	O	O:0.999469
through	O	O:0.999728
a	O	O:0.999981
subroutine	O	O:0.994797
,	O	O:0.999979
but	O	O:0.999840
I	O	O:0.999957
cannot	O	O:0.999830
pass	O	O:0.990393
`	O	O:0.999704
[	O	O:0.999797
index	O	O:0.999754
[	O	O:0.999989
0	O	O:0.999960
]	O	O:0.999853
,	O	O:0.999319
:	O	O:0.999955
,	O	O:0.999929
index	O	O:0.999755
[	O	O:0.999988
1	O	O:0.999967
]	O	O:0.999726
,	O	O:0.999672
index	O	O:0.999451
[	O	O:0.999963
2	O	O:0.999946
]]`	O	O:0.999919
through	O	O:0.998961
a	O	O:0.999984
subroutine	O	O:0.999533
because	O	O:0.999180
I	O	O:0.999988
cannot	O	O:0.999887
pass	O	O:0.999085
the	O	O:0.999962
colon	O	O:0.988336
'	O	O:0.999837
:	O	O:0.999969
'	O	O:0.999932
.	O	O:0.999725
	
Any	O	O:0.999908
thoughts	O	O:0.999228
on	O	O:0.999960
what	O	O:0.999602
I'm	O	O:0.999988
doing	O	O:0.999429
wrong	O	O:0.998083
?	O	O:0.999645
	
This	O	O:0.999697
will	O	O:0.999582
be	O	O:0.999958
far	O	O:0.999940
,	O	O:0.999978
far	O	O:0.999762
faster	O	O:0.999917
than	O	O:0.999616
constantly	O	O:0.998345
reallocating	O	O:0.999894
the	O	O:0.999748
array	O	O:0.998565
inside	O	O:0.999533
the	O	O:0.999906
loop	O	O:0.992710
.	O	O:0.999751
	
How	O	O:0.999942
can	O	O:0.999543
I	O	O:0.999999
get	O	O:0.999977
a	O	O:0.999950
new	O	O:0.999426
array	O	O:0.999299
containing	O	O:0.999442
the	O	O:0.999893
values	O	O:0.998856
of	O	O:0.999975
specific	O	O:0.999802
attributes	O	O:0.999767
of	O	O:0.999938
those	O	O:0.997207
objects	O	O:0.998864
?	O	O:0.999909
	
Seriously	O	O:0.998348
,	O	O:0.999984
at	O	O:0.999979
least	O	O:0.999224
leave	O	O:0.999231
a	O	O:0.999964
note	O	O:0.980347
,	O	O:0.999979
but	O	O:0.999946
given	O	O:0.997566
the	O	O:0.999807
"	O	O:0.999919
complexity	O	O:0.999654
"	O	O:0.999987
of	O	O:0.999980
your	O	O:0.998029
actual	O	O:0.998444
request	O	O:0.997440
I'd	O	O:0.999888
say	O	O:0.999972
that	O	O:0.999028
you'll	O	O:0.999899
have	O	O:0.999436
better	O	O:0.999893
chances	O	O:0.999207
with	O	O:0.999852
a	O	O:0.999970
new	O	O:0.998555
question	O	O:0.997329
.	O	O:0.999715
	
and	O	O:0.999738
find	O	O:0.999511
the	O	O:0.999727
roots	O	O:0.998476
with	O	O:0.999746
numpy	O	O:0.988456
:	O	O:0.999989
#CODE	O	O:0.999691
	
I	O	O:0.999989
need	O	O:0.999886
to	O	O:0.999893
create	O	O:0.999988
a	O	O:0.999997
numpy	O	O:0.999723
array	O	O:0.999905
of	O	O:0.999873
N	O	O:0.998844
elements	O	O:0.997536
,	O	O:0.999978
but	O	O:0.999778
I	O	O:0.999993
want	O	O:0.999858
to	O	O:0.999516
access	O	O:0.999940
the	O	O:0.999500
	
I	O	O:0.999989
have	O	O:0.999891
allocated	O	O:0.999927
a	O	O:0.999993
chunk	O	O:0.998843
of	O	O:0.999956
double	O	O:0.997183
in	O	O:0.999984
a	O	O:0.999887
C	O	O:0.999024
library	O	O:0.997598
and	O	O:0.999553
I	O	O:0.999637
would	O	O:0.999906
like	O	O:0.999607
to	O	O:0.999987
create	O	O:0.999951
a	O	O:0.999997
numpy	O	O:0.997231
1D	O	O:0.999920
array	O	O:0.999506
based	O	O:0.998895
on	O	O:0.999985
that	O	O:0.999942
data	O	O:0.999943
;	O	O:0.999998
ideally	O	O:0.998723
I	O	O:0.999937
would	O	O:0.999910
like	O	O:0.999164
two	O	O:0.999883
versions	O	O:0.999397
one	O	O:0.999455
which	O	O:0.999953
only	O	O:0.999711
wraps	O	O:0.999921
the	O	O:0.999895
c_ptr	O	O:0.996927
readonly	O	O:0.999506
-	O	O:0.999996
letting	O	O:0.999736
the	O	O:0.999835
C	O	O:0.999150
layer	O	O:0.999903
retain	O	O:0.999632
ownership	O	O:0.999622
of	O	O:0.999962
the	O	O:0.999906
data	O	O:0.999173
,	O	O:0.999935
and	O	O:0.999979
one	O	O:0.999729
which	O	O:0.999058
copies	O	O:0.998717
the	O	O:0.999977
data	O	O:0.998519
.	O	O:0.999774
	
The	O	O:0.999897
code	O	O:0.997861
included	O	O:0.999683
in	O	O:0.999991
pypy	O	O:0.996832
is	O	O:0.999995
a	O	O:0.999940
new	O	O:0.999632
array	O	O:0.999223
class	O	O:0.997971
which	O	O:0.999895
tries	O	O:0.999731
to	O	O:0.999983
be	O	O:0.999994
compatible	O	O:0.999898
with	O	O:0.999908
numpy	O	O:0.996545
,	O	O:0.999959
IOW	O	O:0.999918
,	O	O:0.999981
it	O	O:0.999900
is	O	O:0.999989
a	O	O:0.999961
reimplementation	O	O:0.999816
from	O	O:0.999452
scratch	O	O:0.998644
,	O	O:0.999986
without	O	O:0.999952
many	O	O:0.988946
features	O	O:0.999589
from	O	O:0.999715
numpy	O	O:0.994364
.	O	O:0.999918
	
Like	O	O:0.999183
I	O	O:0.999986
say	O	O:0.999940
,	O	O:0.999919
I'm	O	O:0.999965
honestly	O	O:0.999473
struggling	O	O:0.999223
,	O	O:0.999976
any	O	O:0.999960
help	O	O:0.973321
would	O	O:0.999533
be	O	O:0.999992
much	O	O:0.999597
appreciated	O	O:0.996966
.	O	O:0.997389
	
with	O	O:0.999001
array	O	O:0.996220
.	O	O:0.999712
	
I'm	O	O:0.999644
not	O	O:0.999785
sure	O	O:0.999986
that	O	O:0.999808
I	O	O:0.999994
understand	O	O:0.999709
the	O	O:0.999847
difference	O	O:0.998394
between	O	O:0.998671
copying	O	O:0.999818
the	O	O:0.999677
matrix	O	O:0.906278
(	O	O:0.999990
example	O	O:0.999631
1	O	O:0.999966
)	O	O:0.999884
and	O	O:0.999774
copying	O	O:0.999715
the	O	O:0.999816
data	O	O:0.996670
(	O	O:0.999995
example	O	O:0.999863
2	O	O:0.999943
)	O	O:0.999820
.	O	O:0.998366
	
Does	O	O:0.999258
anybody	O	O:0.999907
know	O	O:0.999858
of	O	O:0.999942
a	O	O:0.999526
(	O	O:0.999917
common	O	O:0.999601
case	O	O:0.999824
)	O	O:0.999948
faster-than-linear	O	O:0.999667
way	O	O:0.999926
to	O	O:0.999888
find	O	O:0.999943
the	O	O:0.999990
endpoints	O	O:0.999579
of	O	O:0.999986
a	O	O:0.999958
boolean	O	O:0.999540
property	O	O:0.999634
of	O	O:0.999928
an	O	O:0.999615
array	O	O:0.999010
.	O	O:0.999455
	
Any	O	O:0.998526
unrecognized	O	O:0.998588
type	O	O:0.998426
will	O	O:0.997894
work	O	O:0.999600
this	O	O:0.999889
way	O	O:0.999954
,	O	O:0.999978
so	O	O:0.999968
you	O	O:0.999759
might	O	O:0.999911
want	O	O:0.999959
to	O	O:0.999953
use	O	O:0.999972
`	O	O:0.999911
myclass	O	O:0.795831
`	O	O:0.999988
instead	O	O:0.999000
of	O	O:0.999928
`	O	O:0.999822
object	O	O:0.990665
`	O	O:0.999907
.	O	O:0.997718
	
Iterate	O	O:0.999409
over	O	O:0.999799
vectors	O	O:0.999293
in	O	O:0.999932
a	O	O:0.999986
multidimensional	O	O:0.996389
numpy	O	O:0.997758
array	O	O:0.996053
	
This	O	O:0.999738
way	O	O:0.999972
you	O	O:0.999794
can	O	O:0.999952
load	O	O:0.999980
a	O	O:0.999997
large	O	O:0.999305
dataset	O	O:0.999753
from	O	O:0.999722
a	O	O:0.999980
textfile	O	O:0.999680
memory-efficiently	O	O:0.998943
while	O	O:0.999726
retaining	O	O:0.999688
all	O	O:0.999246
the	O	O:0.999941
convenient	O	O:0.998820
parsing	O	O:0.999878
features	O	O:0.999550
of	O	O:0.999986
the	O	O:0.999953
two	O	O:0.998449
functions	O	O:0.999558
.	O	O:0.999611
	
you	O	O:0.999762
may	O	O:0.999715
win	O	O:0.998758
few	O	O:0.999810
cycles	O	O:0.999485
if	O	O:0.999975
you	O	O:0.999949
multiply	O	O:0.947197
by	O	O:0.999910
inverse	O	O:0.999748
instead	O	O:0.999646
of	O	O:0.999953
dividing	O	O:0.998798
in	O	O:0.999752
floating-point	O	O:0.999524
performance	O	O:0.992549
.	O	O:0.999591
	
Without	O	O:0.999008
knowing	O	O:0.996392
the	O	O:0.999929
size	O	O:0.999657
or	O	O:0.999998
quantity	O	O:0.999573
of	O	O:0.999988
the	O	O:0.999779
images	O	O:0.999008
or	O	O:0.999989
the	O	O:0.999959
application	O	O:0.999751
of	O	O:0.999961
the	O	O:0.999836
algorithm	O	O:0.999487
(	O	O:0.999964
computer	O	O:0.999630
vision	O	O:0.999885
?	O	O:0.999983
)	O	O:0.999908
,	O	O:0.999960
I	O	O:0.999993
can't	O	O:0.999836
say	O	O:0.999778
how	O	O:0.999942
big	O	O:0.999864
a	O	O:0.999988
deal	O	O:0.982443
that	O	O:0.999915
kind	O	O:0.999851
of	O	O:0.999966
speedup	O	O:0.985995
is	O	O:0.999937
.	O	O:0.999093
	
Is	O	O:0.999987
there	O	O:0.999102
an	O	O:0.999986
easy	O	O:0.999638
way	O	O:0.999902
to	O	O:0.999971
sort	O	O:0.999602
these	O	O:0.999686
eigenvalues	O	O:0.975020
(	O	O:0.999888
and	O	O:0.999921
associated	O	O:0.999864
vectors	O	O:0.988466
)	O	O:0.999915
in	O	O:0.999532
order	O	O:0.999788
?	O	O:0.999902
	
You	O	O:0.999848
can	O	O:0.999954
pass	O	O:0.999833
a	O	O:0.999996
numpy	O	O:0.999050
array	O	O:0.998247
or	O	O:0.999914
matrix	O	O:0.990584
as	O	O:0.999975
an	O	O:0.999802
argument	O	O:0.999649
when	O	O:0.998933
initializing	O	O:0.999939
a	O	O:0.999937
sparse	O	O:0.990098
matrix	O	O:0.936730
.	O	O:0.999225
	
(	O	O:0.999781
For	O	O:0.999988
most	O	O:0.999506
common	O	O:0.999438
applications	O	O:0.999862
of	O	O:0.999896
quadratic	O	O:0.998381
forms	O	O:0.999912
q	O	O:0.999559
A	O	O:0.999756
,	O	O:0.999982
the	O	O:0.999887
matrix	O	O:0.967053
A	O	O:0.999653
is	O	O:0.999989
symmetric	O	O:0.998598
,	O	O:0.999987
or	O	O:0.999990
even	O	O:0.998483
symmetric	O	O:0.999966
positive	O	O:0.999294
definite	O	O:0.999335
,	O	O:0.999987
so	O	O:0.999996
feel	O	O:0.999894
free	O	O:0.999962
to	O	O:0.999924
assume	O	O:0.999993
that	O	O:0.998769
either	O	O:0.999959
one	O	O:0.999926
of	O	O:0.999968
these	O	O:0.997141
is	O	O:0.999985
the	O	O:0.999833
case	O	O:0.997421
,	O	O:0.999991
if	O	O:0.999979
it	O	O:0.999982
matters	O	O:0.998908
for	O	O:0.999994
your	O	O:0.997916
answer	O	O:0.999496
.	O	O:0.999563
)	O	O:0.998844
	
I	O	O:0.999976
think	O	O:0.999769
you	O	O:0.999611
might	O	O:0.999717
find	O	O:0.999876
the	O	O:0.999757
`	O	O:0.999971
flat	O	O:0.889592
`	O	O:0.999965
method	O	O:0.992827
useful	O	O:0.998395
.	O	O:0.998066
	
Now	O	O:0.999959
that	O	O:0.999429
we	O	O:0.999990
have	O	O:0.999656
both	O	O:0.999780
the	O	O:0.999944
starting	O	O:0.991241
and	O	O:0.999782
ending	O	O:0.999766
values	O	O:0.995684
,	O	O:0.999997
we	O	O:0.999993
can	O	O:0.999497
use	O	O:0.999979
the	O	O:0.999877
indices	O	O:0.930417
function	O	O:0.999748
from	O	O:0.999965
this	O	O:0.999881
question	O	O:0.999952
to	O	O:0.999975
get	O	O:0.999954
an	O	O:0.999987
array	O	O:0.999878
of	O	O:0.999903
selector	O	O:0.969522
indices	O	O:0.970717
:	O	O:0.999952
#CODE	O	O:0.999415
	
10	O	O:0.998030
(	O	O:0.999941
i	O	O:0.999992
?	O	O:0.999996
1	O	O:0.999923
)	O	O:0.999938
K	O	O:0.999228
,	O	O:0.999998
where	O	O:0.998149
K	O	O:0.999745
=	O	O:0.999990
k	O	O:0.998938
/	O	O:0.999797
(	O	O:0.999978
n	O	O:0.999812
?	O	O:0.999996
1	O	O:0.999856
)	O	O:0.999831
.	O	O:0.998817
	
This	O	O:0.999768
identifies	O	O:0.999223
which	O	O:0.999912
rows	O	O:0.999806
have	O	O:0.999847
any	O	O:0.999948
element	O	O:0.999283
which	O	O:0.997765
are	O	O:0.999528
True	O	O:0.992128
#CODE	O	O:0.998704
	
Broadcasting	O	O:0.998652
is	O	O:0.999919
a	O	O:0.999973
more	O	O:0.998440
general	O	O:0.995940
way	O	O:0.999744
to	O	O:0.999957
fill	O	O:0.979001
an	O	O:0.999952
array	O	O:0.999279
and	O	O:0.999782
I	O	O:0.999851
would	O	O:0.999696
guess	O	O:0.994694
is	O	O:0.999988
slower	O	O:0.999717
or	O	O:0.999985
equal	O	O:0.998465
to	O	O:0.999979
the	O	O:0.999998
very	O	O:0.999357
narrow	O	O:0.999311
use	O	O:0.999990
case	O	O:0.999717
of	O	O:0.999814
`	O	O:0.999953
fill	O	B-API:0.776061
`	O	O:0.999925
.	O	O:0.997774
	
By	O	O:0.999368
"	O	O:0.999568
not	O	O:0.999579
replicating	O	O:0.999885
data	O	O:0.999690
"	O	O:0.999967
I	O	O:0.999993
am	O	O:0.999991
assuming	O	O:0.998387
you	O	O:0.999834
mean	O	O:0.982519
"	O	O:0.999977
not	O	O:0.999504
allocating	O	O:0.999941
more	O	O:0.997744
memory	O	O:0.997177
"	O	O:0.999635
.	O	O:0.998209
	
Can	O	O:0.999713
you	O	O:0.999944
post	O	O:0.994484
all	O	O:0.999834
/	O	O:0.999995
more	O	O:0.999109
of	O	O:0.999990
the	O	O:0.999928
data	O	O:0.999579
?	O	O:0.999965
	
The	O	O:0.999758
scoring	O	O:0.998844
matrix	O	O:0.919003
would	O	O:0.999368
be	O	O:0.999981
trivial	O	O:0.999634
,	O	O:0.999984
as	O	O:0.999961
the	O	O:0.999331
"	O	O:0.999892
distance	O	O:0.999265
"	O	O:0.999893
between	O	O:0.998498
two	O	O:0.999903
numbers	O	O:0.992074
is	O	O:0.999982
just	O	O:0.999622
their	O	O:0.999901
difference	O	O:0.997430
.	O	O:0.999062
	
Contours	O	O:0.998731
around	O	O:0.999636
scipy	O	O:0.999513
labeled	O	O:0.998698
regions	O	O:0.997390
in	O	O:0.999961
a	O	O:0.999937
2D	O	O:0.999855
grid	O	O:0.979104
	
Why	O	O:0.999825
doesn't	O	O:0.999586
the	O	O:0.999962
shape	O	O:0.999631
of	O	O:0.999989
my	O	O:0.999939
numpy	O	O:0.999749
array	O	O:0.999096
change	O	O:0.995930
?	O	O:0.999587
	
Mind	O	O:0.999570
also	O	O:0.998778
the	O	O:0.999932
indexing	O	O:0.997873
starts	O	O:0.999543
at	O	O:0.999958
`	O	O:0.999973
0	O	O:0.998287
`	O	O:0.999901
	
I	O	O:0.999993
have	O	O:0.999929
a	O	O:0.999978
vague	O	O:0.998981
feeling	O	O:0.999810
that	O	O:0.997289
I	O	O:0.999990
might	O	O:0.999923
have	O	O:0.999727
seen	O	O:0.999898
a	O	O:0.999992
question	O	O:0.998988
addressing	O	O:0.999925
this	O	O:0.999073
problem	O	O:0.987398
,	O	O:0.999981
but	O	O:0.999758
I	O	O:0.999937
can't	O	O:0.999503
find	O	O:0.999079
it	O	O:0.999899
now	O	O:0.999421
.	O	O:0.999689
	
If	O	O:0.999949
you	O	O:0.999917
know	O	O:0.999445
which	O	O:0.999986
rows	O	O:0.999571
are	O	O:0.999964
to	O	O:0.999987
be	O	O:0.999990
deleted	O	O:0.999081
,	O	O:0.999995
just	O	O:0.999726
extract	O	O:0.999808
the	O	O:0.999965
other	O	O:0.999936
rows	O	O:0.998066
(	O	O:0.999989
you	O	O:0.999990
need	O	O:0.999294
)	O	O:0.999924
and	O	O:0.999882
create	O	O:0.999887
a	O	O:0.999958
new	O	O:0.999016
array	O	O:0.994707
.	O	O:0.999447
	
If	O	O:0.999979
there	O	O:0.998109
is	O	O:0.999988
any	O	O:0.999229
other	O	O:0.999907
way	O	O:0.999372
I	O	O:0.999994
guess	O	O:0.999562
I	O	O:0.999994
have	O	O:0.999905
to	O	O:0.999894
do	O	O:0.999997
that	O	O:0.999632
.	O	O:0.999896
	
I	O	O:0.999993
have	O	O:0.999831
a	O	O:0.999857
matrix	O	O:0.971128
,	O	O:0.999940
say	O	O:0.999807
#CODE	O	O:0.998453
	
You	O	O:0.999825
might	O	O:0.999442
find	O	O:0.999189
out	O	O:0.999941
the	O	O:0.999564
distribution	O	O:0.997722
information	O	O:0.999833
using	O	O:0.999600
`	O	O:0.999510
cat	O	O:0.836106
/	O	O:0.999974
etc	O	O:0.999594
/	O	O:0.999941
*-release	O	O:0.997503
`	O	O:0.999878
;)	O	O:0.999368
	
I	O	O:0.999888
was	O	O:0.999947
wondering	O	O:0.998782
if	O	O:0.999873
anyone	O	O:0.999839
found	O	O:0.998779
a	O	O:0.999948
good	O	O:0.993694
workaround	O	O:0.999748
,	O	O:0.999991
as	O	O:0.999993
my	O	O:0.999352
real-world	O	O:0.999774
problem	O	O:0.999689
of	O	O:0.999990
iterating	O	O:0.998614
over	O	O:0.999842
the	O	O:0.999960
Cartesian-product	O	O:0.999469
of	O	O:0.999973
the	O	O:0.999973
rows	O	O:0.999083
in	O	O:0.999991
very	O	O:0.999893
large	O	O:0.999651
arrays	O	O:0.997337
is	O	O:0.999954
so	O	O:0.999930
slow	O	O:0.999763
it's	O	O:0.999914
impeding	O	O:0.998904
progress	O	O:0.996901
.	O	O:0.999620
	
I	O	O:0.999991
have	O	O:0.999839
an	O	O:0.999970
array	O	O:0.999928
of	O	O:0.999949
x	O	O:0.998119
,	O	O:0.999996
y	O	O:0.999833
,	O	O:0.999980
z	O	O:0.999887
distances	O	O:0.999263
and	O	O:0.999782
I	O	O:0.999998
need	O	O:0.999600
to	O	O:0.999848
find	O	O:0.999955
the	O	O:0.999980
differences	O	O:0.996279
between	O	O:0.999551
each	O	O:0.999912
vector	O	O:0.999852
from	O	O:0.999819
one	O	O:0.999376
another	O	O:0.999627
.	O	O:0.999504
	
The	O	O:0.999959
code	O	O:0.999650
above	O	O:0.999877
finds	O	O:0.999891
parts	O	O:0.997770
where	O	O:0.999902
there	O	O:0.999781
are	O	O:0.999887
at	O	O:0.999867
least	O	O:0.993435
MIN_SILENCE	O	O:0.994291
consecutive	O	O:0.997336
elements	O	O:0.999464
smaller	O	O:0.999949
than	O	O:0.999012
SILENCE_THRESHOLD	O	O:0.980506
.	O	O:0.999415
	
The	O	O:0.999973
list	O	O:0.991284
of	O	O:0.999807
indices	O	O:0.951209
will	O	O:0.999300
always	O	O:0.999830
be	O	O:0.999963
ascending	O	O:0.998916
,	O	O:0.999860
never	O	O:0.999798
have	O	O:0.999114
duplicates	O	O:0.995445
,	O	O:0.999988
but	O	O:0.999949
may	O	O:0.999875
have	O	O:0.999448
gaps	O	O:0.999905
like	O	O:0.999935
the	O	O:0.999938
example	O	O:0.988507
.	O	O:0.999680
	
Any	O	O:0.999611
ideas	O	O:0.998642
?	O	O:0.999926
	
sum	O	O:0.966665
function	O	O:0.999594
in	O	O:0.999898
python	O	O:0.988338
	
All	O	O:0.998162
globals	O	O:0.999385
hold	O	O:0.996488
either	O	O:0.999738
values	O	O:0.998216
referenced	O	O:0.999746
by	O	O:0.999957
those	O	O:0.999773
tuples	O	O:0.999426
or	O	O:0.999944
are	O	O:0.999942
lists	O	O:0.999727
of	O	O:0.999916
tuples	O	O:0.983267
.	O	O:0.999793
	
You	O	O:0.999844
can	O	O:0.999943
pass	O	O:0.998638
a	O	O:0.999997
list	O	O:0.997053
or	O	O:0.999956
an	O	O:0.999765
array	O	O:0.999696
as	O	O:0.999965
indexes	O	O:0.995533
to	O	O:0.999987
any	O	O:0.999983
np	O	O:0.999506
array	O	O:0.997138
.	O	O:0.999836
	
The	O	O:0.999887
array	O	O:0.999097
I'm	O	O:0.999908
using	O	O:0.998952
is	O	O:0.999845
quite	O	O:0.996144
large	O	O:0.994929
(	O	O:0.999924
3500x3500	O	O:0.995904
)	O	O:0.999903
,	O	O:0.999958
so	O	O:0.999993
I'm	O	O:0.999947
wondering	O	O:0.999859
where	O	O:0.997111
the	O	O:0.999974
best	O	O:0.999557
place	O	O:0.998942
to	O	O:0.999967
load	O	O:0.999961
it	O	O:0.999944
is	O	O:0.999972
for	O	O:0.999922
repeated	O	O:0.997170
use	O	O:0.998109
.	O	O:0.997897
	
Basically	O	O:0.997970
,	O	O:0.999972
it	O	O:0.999975
comes	O	O:0.999862
down	O	O:0.999923
to	O	O:0.999989
checking	O	O:0.999944
before	O	O:0.999096
you	O	O:0.999693
add	O	O:0.999388
.	O	O:0.999676
	
I	O	O:0.999992
have	O	O:0.999891
a	O	O:0.999974
simple	O	O:0.985781
function	O	O:0.998757
called	O	O:0.998927
get_gradient	O	O:0.984134
which	O	O:0.999666
takes	O	O:0.999869
a	O	O:0.999995
numpy	O	O:0.999371
array	O	O:0.999620
of	O	O:0.999919
[[	O	O:0.999811
x	O	O:0.999367
,	O	O:0.999996
y	O	O:0.999833
,	O	O:0.999958
Vx	O	O:0.999134
,	O	O:0.999957
Vy	O	O:0.999846
]]	O	O:0.999044
and	O	O:0.998158
returns	O	O:0.998377
(	O	O:0.999412
should	O	O:0.999563
return	O	O:0.993774
)	O	O:0.999895
an	O	O:0.999958
array	O	O:0.999846
of	O	O:0.999812
[[	O	O:0.999525
Vx	O	O:0.998759
,	O	O:0.999983
Vy	O	O:0.999836
,	O	O:0.999914
Ax	O	O:0.999287
,	O	O:0.999976
Ay	O	O:0.999556
]]	O	O:0.999019
.	O	O:0.998133
	
I	O	O:0.999765
found	O	O:0.999845
this	O	O:0.999415
post	O	O:0.913418
:	O	O:0.999953
Python	O	O:0.998807
:	O	O:0.999997
finding	O	O:0.999567
an	O	O:0.999797
element	O	O:0.999754
in	O	O:0.999949
an	O	O:0.999931
array	O	O:0.998170
	
So	O	O:0.999928
,	O	O:0.999963
are	O	O:0.999876
VBOs	O	O:0.998997
simply	O	O:0.998796
not	O	O:0.999889
meant	O	O:0.999700
to	O	O:0.999959
be	O	O:0.999999
that	O	O:0.999574
big	O	O:0.999717
(	O	O:0.999993
I	O	O:0.999976
somehow	O	O:0.999917
doubt	O	O:0.998871
that	O	O:0.999805
VBOs	O	O:0.999767
could	O	O:0.999801
only	O	O:0.999962
have	O	O:0.999309
around	O	O:0.999733
17k	O	O:0.999802
triangles	O	O:0.999753
each	O	O:0.999111
)	O	O:0.999907
?	O	O:0.999811
	
`	O	O:0.999926
flags	O	O:0.991800
`	O	O:0.999994
parameter	O	O:0.999083
leads	O	O:0.999890
to	O	O:0.999902
`	O	O:0.999993
TypeError	O	O:0.998979
`	O	O:0.999945
if	O	O:0.999572
input	O	O:0.999956
array	O	O:0.991871
is	O	O:0.999908
not	O	O:0.998450
contiguous	O	O:0.999039
.	O	O:0.999821
	
I	O	O:0.999984
then	O	O:0.999961
have	O	O:0.999799
a	O	O:0.999979
2nd	O	O:0.999867
array	O	O:0.999377
similar	O	O:0.999379
to	O	O:0.999666
#CODE	O	O:0.999865
	
Convert	O	O:0.996275
a	O	O:0.999992
list	O	O:0.997087
of	O	O:0.999928
2D	O	O:0.999682
numpy	O	O:0.997688
arrays	O	O:0.999658
to	O	O:0.999959
one	O	O:0.999954
3D	O	O:0.999986
numpy	O	O:0.998357
array	O	O:0.999476
?	O	O:0.999948
	
I'm	O	O:0.999943
currently	O	O:0.999523
a	O	O:0.999989
grad	O	O:0.873375
student	O	O:0.997133
at	O	O:0.999731
Harvard	O	O:0.996242
and	O	O:0.999772
a	O	O:0.999979
good	O	O:0.994432
friend	O	O:0.998685
of	O	O:0.999937
mine	O	O:0.998818
went	O	O:0.999905
there	O	O:0.997495
(	O	O:0.999983
he	O	O:0.999710
would	O	O:0.999757
have	O	O:0.999721
graduated	O	O:0.999964
two	O	O:0.999846
or	O	O:0.999990
three	O	O:0.999438
years	O	O:0.999703
ago	O	O:0.999935
,	O	O:0.999994
as	O	O:0.999973
he	O	O:0.999874
is	O	O:0.999992
currently	O	O:0.999812
a	O	O:0.999958
second-year	O	O:0.999599
grad	O	O:0.841342
student	O	O:0.999807
here	O	O:0.999507
at	O	O:0.999904
Harvard	O	O:0.999090
with	O	O:0.999843
me	O	O:0.999649
)	O	O:0.999745
.	O	O:0.999031
	
I'm	O	O:0.999749
not	O	O:0.999820
clear	O	O:0.999745
on	O	O:0.999972
how	O	O:0.999947
you	O	O:0.999938
are	O	O:0.999888
wanting	O	O:0.999533
to	O	O:0.999883
plot	O	O:0.998825
it	O	O:0.999700
,	O	O:0.999969
but	O	O:0.999920
it	O	O:0.999796
sound	O	O:0.999496
like	O	O:0.999646
you'll	O	O:0.999870
need	O	O:0.999436
to	O	O:0.999936
select	O	O:0.999992
some	O	O:0.999965
values	O	O:0.999914
of	O	O:0.999996
a	O	O:0.999932
column	O	O:0.996622
.	O	O:0.999460
	
The	O	O:0.999895
issue	O	O:0.999509
I	O	O:0.999986
am	O	O:0.999950
running	O	O:0.997172
in	O	O:0.999976
to	O	O:0.999872
is	O	O:1.000000
that	O	O:0.999817
the	O	O:0.999997
array	O	O:0.999475
can	O	O:0.999873
be	O	O:0.999987
larger	O	O:0.999981
than	O	O:0.998193
3gb	O	O:0.998876
in	O	O:0.999943
size	O	O:0.998949
(	O	O:0.999996
these	O	O:0.999371
are	O	O:0.999876
huge	O	O:0.998740
images	O	O:0.996699
)	O	O:0.999869
and	O	O:0.998307
I	O	O:0.999997
need	O	O:0.999130
to	O	O:0.999268
segment	O	O:0.999999
them	O	O:0.999929
prior	O	O:0.999368
to	O	O:0.999911
ingesting	O	O:0.999991
them	O	O:0.997752
.	O	O:0.999682
	
The	O	O:0.999229
latter	O	O:0.999182
might	O	O:0.998912
be	O	O:0.999736
faster	O	O:0.999558
because	O	O:0.997248
it	O	O:0.999846
doesn't	O	O:0.999790
produce	O	O:0.999108
the	O	O:0.999943
intermediate	O	O:0.997940
`	O	O:0.999958
x**2	O	O:0.992478
`	O	O:0.999987
array	O	O:0.993347
.	O	O:0.999852
	
Any	O	O:0.999538
suggestions	O	O:0.998861
?	O	O:0.999904
	
"	O	O:0.999612
A	O	O:0.999981
copy	O	O:0.997873
of	O	O:0.999935
arr	O	O:0.999189
with	O	O:0.999767
the	O	O:0.999802
elements	O	O:0.999068
specified	O	O:0.999937
by	O	O:0.999969
obj	O	O:0.998900
removed	O	O:0.997289
.	O	O:0.999472
	
is	O	O:0.999835
not	O	O:0.999505
it	O	O:0.999956
another	O	O:0.999902
copy	O	O:0.949313
?	O	O:0.999967
	
NOTE	O	O:0.997111
:	O	O:0.999993
the	O	O:0.999907
row	O	O:0.999681
has	O	O:0.999704
"	O	O:0.999825
:	O	O:0.999972
"	O	O:0.999599
,	O	O:0.999930
but	O	O:0.999879
the	O	O:0.999145
"	O	O:0.995771
:	O	O:0.999965
"	O	O:0.999996
does	O	O:0.999854
mean	O	O:0.997653
the	O	O:0.999991
dict	O	O:0.991929
'	O	O:0.999786
:	O	O:0.999980
'	O	O:0.999933
.	O	O:0.999729
	
If	O	O:0.999907
,	O	O:0.999973
for	O	O:0.999981
some	O	O:0.998145
reason	O	O:0.999174
,	O	O:0.999992
I	O	O:0.999966
would	O	O:0.999933
only	O	O:0.999757
save	O	O:0.999891
one	O	O:0.999970
dictionary	O	O:0.999841
then	O	O:0.999849
every	O	O:0.999791
script	O	O:0.999375
loading	O	O:0.999893
this	O	O:0.999768
file	O	O:0.999777
with	O	O:0.999743
pickle	O	O:0.581988
would	O	O:0.999958
mess	O	O:0.999890
up	O	O:0.999995
the	O	O:0.999974
order	O	O:0.999815
of	O	O:0.999950
the	O	O:0.999831
stored	O	O:0.999738
variables	O	O:0.994293
.	O	O:0.999765
	
You	O	O:0.999394
might	O	O:0.999235
also	O	O:0.999827
want	O	O:0.999839
to	O	O:0.999962
take	O	O:0.999983
a	O	O:0.999995
look	O	O:0.994955
at	O	O:0.999906
Anvil	O	O:0.989407
,	O	O:0.999901
announcement	O	O:0.999714
here	O	O:0.995372
.	O	O:0.999651
	
The	O	O:0.999856
other	O	O:0.999317
way	O	O:0.999964
that	O	O:0.998910
I	O	O:0.999998
know	O	O:0.999629
is	O	O:0.999942
to	O	O:0.999900
convert	O	O:0.999806
Y	O	O:0.999694
to	O	O:0.999980
list	O	O:0.999333
iteratively	O	O:0.999216
.	O	O:0.998675
	
This	O	O:0.998649
is	O	O:0.999972
especially	O	O:0.999332
helpful	O	O:0.999495
since	O	O:0.999607
it	O	O:0.999964
includes	O	O:0.999757
the	O	O:0.999807
import	O	O:0.995066
commands	O	O:0.992041
and	O	O:0.999958
info	O	O:0.999377
on	O	O:0.999946
how	O	O:0.999861
to	O	O:0.999980
write	O	O:0.999970
to	O	O:0.999986
file	O	O:0.999922
.	O	O:0.999861
	
But	O	O:0.999948
actually	O	O:0.999359
I	O	O:0.999937
am	O	O:0.999986
not	O	O:0.998861
so	O	O:0.999995
sure	O	O:0.999990
that	O	O:0.999985
from	O	O:0.999961
where	O	O:0.999798
you	O	O:0.999974
are	O	O:0.999885
now	O	O:0.999821
,	O	O:0.999990
using	O	O:0.999817
sparse	O	O:0.990974
matrices	O	O:0.989066
will	O	O:0.999610
gain	O	O:0.999677
you	O	O:0.999973
any	O	O:0.999730
speed-up	O	O:0.999203
.	O	O:0.999294
	
Upon	O	O:0.999225
deeper	O	O:0.999897
examination	O	O:0.999706
of	O	O:0.999972
the	O	O:0.999850
relationship	O	O:0.998405
between	O	O:0.998060
the	O	O:0.999959
python	O	O:0.996800
printout	O	O:0.998956
and	O	O:0.999915
the	O	O:0.999967
structure	O	O:0.999106
of	O	O:0.999964
my	O	O:0.999916
underlying	O	O:0.999928
data	O	O:0.999673
,	O	O:0.999991
I	O	O:0.999996
see	O	O:0.999987
that	O	O:0.999363
the	O	O:0.999945
python	O	O:0.996237
print	O	O:0.988102
command	O	O:0.997185
is	O	O:0.999977
saying	O	O:0.999761
that	O	O:0.999830
there	O	O:0.999777
are	O	O:0.999839
two	O	O:0.999934
empty	O	O:0.999793
columns	O	O:0.999526
at	O	O:0.999991
the	O	O:0.999973
end	O	O:0.998218
of	O	O:0.999960
the	O	O:0.999794
array	O	O:0.998671
.	O	O:0.999394
	
How	O	O:0.999848
to	O	O:0.999951
convert	O	O:0.999881
a	O	O:0.999956
simple	O	O:0.999787
list	O	O:0.998861
of	O	O:0.999934
lists	O	O:0.998033
into	O	O:0.999943
a	O	O:0.999990
numppy	O	O:0.969307
array	O	O:0.998165
?	O	O:0.999929
	
Django	O	O:0.998778
has	O	O:0.999959
a	O	O:0.999984
library	O	O:0.997354
for	O	O:0.999941
encapsulating	O	O:0.998562
all	O	O:0.999187
the	O	O:0.999954
database	O	O:0.996369
work	O	O:0.999360
into	O	O:0.999954
Python	O	O:0.999987
classes	O	O:0.994305
,	O	O:0.999994
so	O	O:0.999992
you	O	O:0.999835
don't	O	O:0.999982
have	O	O:0.999841
to	O	O:0.999991
mess	O	O:0.999993
with	O	O:0.999954
raw	O	O:0.998467
SQL	O	O:0.999962
until	O	O:0.997582
you	O	O:0.999959
have	O	O:0.999776
to	O	O:0.999995
do	O	O:0.999998
something	O	O:0.999974
really	O	O:0.996785
clever	O	O:0.999329
.	O	O:0.999599
	
So	O	O:0.999894
I	O	O:0.999987
got	O	O:0.999956
numpy	O	O:0.992690
,	O	O:0.999989
scipy	O	O:0.999149
,	O	O:0.999935
IPython	O	O:0.999005
,	O	O:0.999904
and	O	O:0.999865
matplotlib	O	O:0.995145
working	O	O:0.997190
(	O	O:0.999977
I	O	O:0.999987
can	O	O:0.999878
import	O	O:0.999707
all	O	O:0.999840
four	O	O:0.999564
with	O	O:0.997892
"	O	O:0.999653
import	O	O:0.998556
_	O	O:0.996499
)"	O	O:0.998241
.	O	O:0.999059
	
@USER	O	O:0.998016
`	O	O:0.999620
new	O	O:0.998845
type	O	O:0.999830
not	O	O:0.999862
compatible	O	O:0.999847
with	O	O:0.999849
array	O	O:0.998072
.	O	O:0.999753
	
Is	O	O:0.999985
there	O	O:0.999731
any	O	O:0.999835
way	O	O:0.999805
to	O	O:0.999648
do	O	O:0.999996
this	O	O:0.999902
in	O	O:0.999889
Python	O	O:0.999248
?	O	O:0.999959
	
Then	O	O:0.999714
you	O	O:0.999975
can	O	O:0.999773
choose	O	O:0.999975
many	O	O:0.999569
methods	O	O:0.999437
to	O	O:0.999950
visualize	O	O:0.999418
it	O	O:0.999797
.	O	O:0.999745
	
Numpy	O	O:0.998283
Array	O	O:0.721747
to	O	O:0.999581
base64	O	O:0.999496
and	O	O:0.999948
back	O	O:0.998668
to	O	O:0.999897
Numpy	O	O:0.999897
Array	O	O:0.784230
-	O	O:0.999943
Python	O	O:0.997199
	
In	O	O:0.999961
each	O	O:0.999560
iteration	O	O:0.999912
of	O	O:0.999944
Gibbs	O	O:0.997602
sampling	O	O:0.999430
,	O	O:0.999951
we	O	O:0.999982
remove	O	O:0.993777
one	O	O:0.999552
(	O	O:0.999989
current	O	O:0.998080
)	O	O:0.999938
word	O	O:0.995189
,	O	O:0.999997
sample	O	O:0.999622
a	O	O:0.999950
new	O	O:0.999711
topic	O	O:0.996123
for	O	O:0.999969
that	O	O:0.998667
word	O	O:0.999585
according	O	O:0.999902
to	O	O:0.999964
a	O	O:0.999986
posterior	O	O:0.998451
conditional	O	O:0.996691
probability	O	O:0.999155
distribution	O	O:0.999546
inferred	O	O:0.999932
from	O	O:0.999736
the	O	O:0.999288
LDA	O	O:0.999954
model	O	O:0.993766
,	O	O:0.999965
and	O	O:0.999803
update	O	O:0.955978
word-topic	O	O:0.999189
counts	O	O:0.996937
,	O	O:0.999996
as	O	O:0.999934
follows	O	O:0.991010
:	O	O:0.999966
#CODE	O	O:0.999624
	
I	O	O:0.999972
am	O	O:0.999978
getting	O	O:0.992349
weird	O	O:0.999558
errors	O	O:0.999905
when	O	O:0.998885
I	O	O:0.999999
try	O	O:0.999988
to	O	O:0.999812
convert	O	O:0.999803
a	O	O:0.999982
black	O	O:0.987294
and	O	O:0.999830
white	O	O:0.997469
PIL	O	O:0.999749
image	O	O:0.999875
to	O	O:0.999952
a	O	O:0.999998
numpy	O	O:0.996238
array	O	O:0.997933
.	O	O:0.999636
	
Numpy	O	O:0.996777
arrays	O	O:0.999798
have	O	O:0.999767
a	O	O:0.999909
`	O	O:0.999974
copy	O	B-API:0.842264
`	O	O:0.999968
method	O	O:0.990329
which	O	O:0.999977
you	O	O:0.999881
can	O	O:0.999908
use	O	O:0.999967
for	O	O:0.999822
just	O	O:0.999537
this	O	O:0.999742
purpose	O	O:0.993998
.	O	O:0.999415
	
Actually	O	O:0.999009
I	O	O:0.999948
could	O	O:0.999449
not	O	O:0.999792
test	O	O:0.995058
with	O	O:0.999955
big	O	O:0.998918
K	O	O:0.999746
,	O	O:0.999975
d	O	O:0.999225
and	O	O:0.999818
N	O	O:0.999943
as	O	O:0.999901
I	O	O:0.999888
was	O	O:0.999959
going	O	O:0.998835
out	O	O:0.999790
of	O	O:0.999661
memory	O	O:0.986053
.	O	O:0.999661
	
With	O	O:0.999608
all	O	O:0.999422
of	O	O:0.999963
these	O	O:0.990579
options	O	O:0.999713
you	O	O:0.999962
have	O	O:0.999900
to	O	O:0.999997
pay	O	O:0.999990
a	O	O:0.999978
JNA	O	O:0.997574
tax	O	O:0.994696
...	O	O:0.999487
all	O	O:0.999599
of	O	O:0.999992
your	O	O:0.999640
data	O	O:0.999961
has	O	O:0.999968
to	O	O:0.999966
be	O	O:0.999979
copied	O	O:0.999137
before	O	O:0.999543
it	O	O:0.999960
can	O	O:0.999643
be	O	O:0.999991
processed	O	O:0.999109
.	O	O:0.999242
	
Useless	O	O:0.997899
because	O	O:0.999031
it	O	O:0.999950
ignores	O	O:0.999546
the	O	O:0.999926
"	O	O:0.999913
cross	O	O:0.999167
platform	O	O:0.999800
issues	O	O:0.998873
,	O	O:0.999980
proprietary	O	O:0.999718
tool	O	O:0.996763
chains	O	O:0.998598
,	O	O:0.999981
certification	O	O:0.999197
gates	O	O:0.995617
,	O	O:0.999978
licensed	O	O:0.999766
technologies	O	O:0.990789
,	O	O:0.999923
and	O	O:0.999785
stringent	O	O:0.998991
performance	O	O:0.998557
requirements	O	O:0.999882
on	O	O:0.999993
top	O	O:0.999725
of	O	O:0.999989
the	O	O:0.998746
issues	O	O:0.999298
with	O	O:0.999680
legacy	O	O:0.995680
codebases	O	O:0.995233
and	O	O:0.999726
workforce	O	O:0.999681
availability	O	O:0.966874
"	O	O:0.999258
(	O	O:0.999826
John	O	O:0.999819
Carmack	O	O:0.994685
)	O	O:0.999954
that	O	O:0.999582
op	O	O:0.999818
is	O	O:0.999984
probably	O	O:0.995986
facing	O	O:0.998646
.	O	O:0.998019
	
And	O	O:0.999947
that	O	O:0.999731
the	O	O:0.999985
values	O	O:0.999076
of	O	O:0.999942
all	O	O:0.998038
(	O	O:0.999994
x	O	O:0.998447
,	O	O:0.999998
y	O	O:0.999942
)	O	O:0.999975
pairs	O	O:0.989193
are	O	O:0.999931
given	O	O:0.993410
.	O	O:0.999634
	
Is	O	O:0.999848
is	O	O:0.999992
possible	O	O:0.999080
to	O	O:0.999995
have	O	O:0.999977
a	O	O:0.999974
3-D	O	O:0.999660
record	O	O:0.999367
array	O	O:0.999263
in	O	O:0.999933
numpy	O	O:0.995074
?	O	O:0.999951
	
However	O	O:0.999293
,	O	O:0.999968
the	O	O:0.999956
evidence	O	O:0.997797
suggests	O	O:0.999917
that	O	O:0.999824
you've	O	O:0.999983
encountered	O	O:0.999238
an	O	O:0.999963
issue	O	O:0.999512
of	O	O:0.999982
this	O	O:0.999528
sort	O	O:0.994736
.	O	O:0.999604
	
There's	O	O:0.997481
_way_	O	O:0.999315
less	O	O:0.997337
overhead	O	O:0.999969
this	O	O:0.999520
way	O	O:0.999649
.	O	O:0.999017
	
I'm	O	O:0.999451
having	O	O:0.999701
trouble	O	O:0.998094
figuring	O	O:0.999449
out	O	O:0.999631
what	O	O:0.999728
kind	O	O:0.999284
of	O	O:0.999997
test	O	O:0.941116
I	O	O:0.999995
need	O	O:0.999866
here	O	O:0.996851
,	O	O:0.999972
and	O	O:0.999780
the	O	O:0.999920
best	O	O:0.998436
numpy	O	O:0.999118
/	O	O:0.999925
scipy	O	O:0.999795
/	O	O:0.999963
R	O	O:0.999889
function	O	O:0.999900
to	O	O:0.999921
use	O	O:0.999945
for	O	O:0.999386
these	O	O:0.999269
kinds	O	O:0.999098
of	O	O:0.999575
issues	O	O:0.989112
.	O	O:0.999688
	
I	O	O:0.999988
have	O	O:0.999824
see	O	O:0.999866
people	O	O:0.999341
using	O	O:0.999873
dictionaries	O	O:0.955347
,	O	O:0.999874
but	O	O:0.999834
the	O	O:0.999455
arrays	O	O:0.994589
are	O	O:0.999797
large	O	O:0.997136
and	O	O:0.998786
filled	O	O:0.998071
with	O	O:0.999076
both	O	O:0.997652
positive	O	O:0.994564
and	O	O:0.999858
negative	O	O:0.996355
floats	O	O:0.994407
.	O	O:0.999578
	
How	O	O:0.999928
can	O	O:0.999453
I	O	O:0.999998
speed	O	O:0.999959
up	O	O:0.999093
iteration	O	O:0.999250
through	O	O:0.999814
this	O	O:0.999783
transformed	O	O:0.999867
numpy	O	O:0.997027
array	O	O:0.998596
?	O	O:0.999938
	
This	O	O:0.998665
is	O	O:0.999976
may	O	O:0.999696
not	O	O:0.999806
be	O	O:0.999919
the	O	O:0.999963
best	O	O:0.998857
way	O	O:0.999939
to	O	O:0.999776
solve	O	O:0.999974
this	O	O:0.999691
but	O	O:0.999985
have	O	O:0.999812
a	O	O:0.999988
look	O	O:0.997879
at	O	O:0.999956
the	O	O:0.999225
following	O	O:0.995923
...	O	O:0.983009
	
All	O	O:0.999173
in	O	O:0.999895
all	O	O:0.999137
,	O	O:0.999983
I	O	O:0.999961
would	O	O:0.999742
go	O	O:0.999737
with	O	O:0.999897
the	O	O:0.999371
#CODE	O	O:0.998688
	
This	O	O:0.996600
is	O	O:0.999982
not	O	O:0.999721
a	O	O:0.999989
matter	O	O:0.999594
of	O	O:0.999884
style	O	O:0.931886
.	O	O:0.999936
without	O	O:0.998425
the	O	O:0.998940
list	O	O:0.877607
(	O	O:0.999979
_	O	O:0.995175
)	O	O:0.999898
it	O	O:0.999944
does	O	O:0.999743
not	O	O:0.999914
even	O	O:0.999799
work	O	O:0.999742
at	O	O:0.999996
last	O	O:0.999571
for	O	O:0.999965
the	O	O:0.999913
case	O	O:0.995320
i	O	O:0.999995
have	O	O:0.999952
that	O	O:0.999953
y	O	O:0.999898
is	O	O:0.999982
an	O	O:0.999875
array	O	O:0.999137
itself	O	O:0.996984
	
(	O	O:0.999941
at	O	O:0.999928
least	O	O:0.997015
it	O	O:0.999958
gives	O	O:0.999523
me	O	O:0.999978
an	O	O:0.999980
error	O	O:0.999797
stating	O	O:0.999732
that	O	O:0.999367
the	O	O:0.999969
'	O	O:0.999878
as	O	O:0.999955
'	O	O:0.999878
is	O	O:0.999968
reserved	O	O:0.999363
in	O	O:0.999861
python	O	O:0.998044
2.6	O	O:0.999571
)	O	O:0.999930
Am	O	O:0.999890
I	O	O:0.999979
correct	O	O:0.999587
?	O	O:0.999808
	
Did	O	O:0.999707
you	O	O:0.999884
try	O	O:0.999926
looking	O	O:0.999819
at	O	O:0.999961
numpy	O	O:0.996601
for	O	O:0.999911
matlab	O	O:0.996985
users	O	O:0.997889
manuals	O	O:0.981786
,	O	O:0.999969
like	O	O:0.998773
:	O	O:0.999960
#URL	O	O:0.998794
	
I	O	O:0.999578
would	O	O:0.999676
not	O	O:0.999717
try	O	O:0.999976
to	O	O:0.999983
process	O	O:0.997953
`	O	O:0.999987
arr	O	O:0.994034
`	O	O:0.999950
in	O	O:0.999335
place	O	O:0.998759
-	O	O:0.999995
it	O	O:0.999946
seems	O	O:0.999986
that	O	O:0.999936
a	O	O:0.999992
new	O	O:0.999586
array	O	O:0.998305
is	O	O:0.999973
created	O	O:0.997519
under	O	O:0.999507
the	O	O:0.999896
hood	O	O:0.993021
in	O	O:0.999993
most	O	O:0.999868
cases	O	O:0.999428
anyway	O	O:0.999429
.	O	O:0.999451
	
Now	O	O:0.999713
you	O	O:0.999797
must	O	O:0.999055
initialize	O	O:0.999961
each	O	O:0.999828
element	O	O:0.999920
of	O	O:0.999968
the	O	O:0.999937
numpy	O	O:0.999072
array	O	O:0.999639
to	O	O:0.999989
be	O	O:0.999996
an	O	O:0.999880
1-d	O	O:0.999915
numpy	O	O:0.997446
array	O	O:0.993011
:	O	O:0.999962
#CODE	O	O:0.999154
	
The	O	O:0.999863
easiest	O	O:0.998327
way	O	O:0.996752
around	O	O:0.999799
this	O	O:0.999358
is	O	O:0.999964
to	O	O:0.999972
just	O	O:0.999954
use	O	O:0.999977
a	O	O:0.999952
numpy	O	O:0.994865
array	O	O:0.998002
,	O	O:0.999980
instead	O	O:0.999764
of	O	O:0.999965
a	O	O:0.999934
numpy	O	O:0.989386
matrix	O	O:0.832607
:	O	O:0.999927
#CODE	O	O:0.999293
	
I	O	O:0.999939
am	O	O:0.999980
trying	O	O:0.998899
to	O	O:0.999937
create	O	O:0.999885
an	O	O:0.999972
affinity	O	O:0.999896
matrix	O	O:0.994361
for	O	O:0.999675
an	O	O:0.999663
image	O	O:0.997483
.	O	O:0.999437
	
to	O	O:0.999761
handle	O	O:0.999847
the	O	O:0.999976
error	O	O:0.999633
cases	O	O:0.994858
and	O	O:0.999954
the	O	O:0.999908
return	O	O:0.947340
value	O	O:0.996132
,	O	O:0.999999
they	O	O:0.999603
are	O	O:0.999813
not	O	O:0.999684
related	O	O:0.999821
to	O	O:0.999973
the	O	O:0.999995
array	O	O:0.998474
assignment	O	O:0.999274
.	O	O:0.999479
	
Saving	O	O:0.998217
a	O	O:0.999881
Numpy	O	O:0.999312
array	O	O:0.999611
as	O	O:0.999887
an	O	O:0.999575
image	O	O:0.997613
(	O	O:0.999961
instructions	O	O:0.998877
)	O	O:0.999702
	
Using	O	O:0.999634
this	O	O:0.998767
,	O	O:0.999972
I	O	O:0.999997
know	O	O:0.999630
I	O	O:0.999974
am	O	O:0.999982
calculating	O	O:0.993772
r-squared	O	O:0.999890
correctly	O	O:0.999577
for	O	O:0.999933
linear	O	O:0.992481
best-fit	O	O:0.996435
(	O	O:0.999939
degree	O	O:0.999671
equals	O	O:0.999704
1	O	O:0.999801
)	O	O:0.999677
.	O	O:0.998816
	
No	O	O:0.999974
expert	O	O:0.999661
on	O	O:0.999955
the	O	O:0.999922
topic	O	O:0.984219
,	O	O:0.999940
but	O	O:0.999986
this	O	O:0.999609
is	O	O:0.999971
some	O	O:0.999824
kind	O	O:0.999882
of	O	O:0.999974
adjency	O	O:0.989358
matrix	O	O:0.964144
(	O	O:0.999933
#URL	O	O:0.999142
)	O	O:0.999637
.	O	O:0.998957
	
about	O	O:0.998140
15	O	O:0.999876
times	O	O:0.996096
faster	O	O:0.999897
using	O	O:0.998845
broadcast	O	O:0.530908
	
Arrays	O	O:0.807064
to	O	O:0.999882
Matrix	O	O:0.979283
numpy	O	O:0.993130
	
but	O	O:0.999619
it	O	O:0.999946
appears	O	O:0.998771
to	O	O:0.999968
only	O	O:0.999990
take	O	O:0.999799
square	O	O:0.999891
matrices	O	O:0.995541
.	O	O:0.999637
	
Any	O	O:0.999934
idea	O	O:0.998543
how	O	O:0.999983
that	O	O:0.999820
can	O	O:0.999921
be	O	O:0.999998
done	O	O:0.999669
?	O	O:0.999950
	
In	O	O:0.999981
your	O	O:0.999891
code	O	O:0.999741
,	O	O:0.999992
`	O	O:0.999981
a	O	O:0.999700
[	O	O:0.999983
condition	O	O:0.996309
]	O	O:0.999729
[	O	O:0.999792
index	O	O:0.999669
]`	O	O:0.999923
returns	O	O:0.999510
the	O	O:0.999975
value	O	O:0.999613
in	O	O:0.999964
a	O	O:0.999782
,	O	O:0.999986
but	O	O:0.999737
I	O	O:0.999983
want	O	O:0.999700
the	O	O:0.998372
INDEX	O	O:0.996968
in	O	O:0.999965
a	O	O:0.999975
,	O	O:0.999973
so	O	O:0.999995
that	O	O:0.999602
`	O	O:0.999993
a	O	O:0.999877
[	O	O:0.999990
INDEX	O	O:0.997853
]	O	O:0.999979
=	O	O:0.999830
a	O	O:0.999977
[	O	O:0.999953
condition	O	O:0.994651
]	O	O:0.999739
[	O	O:0.999685
index	O	O:0.998892
]`	O	O:0.999686
.	O	O:0.998588
	
Any	O	O:0.999826
database	O	O:0.999974
that	O	O:0.999671
can	O	O:0.999936
create	O	O:0.999404
an	O	O:0.999920
index	O	O:0.999708
will	O	O:0.999510
provide	O	O:0.999579
relatively	O	O:0.999930
fast	O	O:0.998974
look-ups	O	O:0.999111
(	O	O:0.999986
depending	O	O:0.999394
on	O	O:0.999840
how	O	O:0.999987
many	O	O:0.999807
millions	O	O:0.999833
of	O	O:0.999939
records	O	O:0.998836
you're	O	O:0.999911
storing	O	O:0.998551
)	O	O:0.999441
.	O	O:0.998649
	
Actually	O	O:0.998881
,	O	O:0.999946
the	O	O:0.999966
best	O	O:0.998939
way	O	O:0.999894
to	O	O:0.999915
manage	O	O:0.999948
packages	O	O:0.997818
on	O	O:0.999970
OS	O	O:0.999989
X	O	O:0.999109
is	O	O:0.999969
[	O	O:0.999956
Homebrew	O	O:0.999490
]	O	O:0.999797
(	O	O:0.999856
#URL	O	O:0.999625
)	O	O:0.998261
(	O	O:0.999888
not	O	O:0.999821
Fink	O	O:0.999576
or	O	O:0.999890
MacPorts	O	O:0.998636
:))	O	O:0.999921
-	O	O:0.999941
which	O	O:0.999765
unfortunately	O	O:0.999857
lists	O	O:0.997728
neither	O	O:0.999532
NumPy	O	O:0.998512
now	O	O:0.999841
SciPy	O	O:0.999661
at	O	O:0.999947
the	O	O:0.999535
current	O	O:0.998639
time	O	O:0.999501
.	O	O:0.999850
	
I	O	O:0.999675
would	O	O:0.999960
like	O	O:0.999129
to	O	O:0.999996
keep	O	O:0.999247
`	O	O:0.999979
xcoords	O	B-API:0.844271
`	O	O:0.999995
a	O	O:0.999971
numpy	O	O:0.999436
array	O	O:0.999538
if	O	O:0.999955
possible	O	O:0.995241
.	O	O:0.999964
what	O	O:0.999834
do	O	O:0.999960
you	O	O:0.999990
mean	O	O:0.992724
'	O	O:0.999980
adding	O	O:0.999991
them	O	O:0.999580
to	O	O:0.999855
the	O	O:0.999855
object	O	O:0.997189
before	O	O:0.999030
it	O	O:0.999894
is	O	O:0.999978
returned	O	O:0.999141
'	O	O:0.999818
?	O	O:0.999959
	
But	O	O:0.999502
I	O	O:0.999985
just	O	O:0.999827
need	O	O:0.998864
to	O	O:0.999967
sort	O	O:0.999823
out	O	O:0.999873
which	O	O:0.999582
points	O	O:0.998131
to	O	O:0.999986
send	O	O:0.999951
for	O	O:0.999992
a	O	O:0.999970
complete	O	O:0.996474
graph	O	O:0.997587
.	O	O:0.999619
	
how	O	O:0.999887
do	O	O:0.999954
I	O	O:0.999992
calculate	O	O:0.999958
that	O	O:0.999698
an	O	O:0.999996
array	O	O:0.999821
of	O	O:0.999928
python	O	O:0.998092
numpy	O	O:0.999576
or	O	O:0.999990
me	O	O:0.999980
of	O	O:0.999978
all	O	O:0.999642
the	O	O:0.999946
calculate	O	O:0.991873
decimals	O	O:0.997850
and	O	O:0.999952
not	O	O:0.999781
skip	O	O:0.996865
like	O	O:0.999094
.	O	O:0.999244
	
It	O	O:0.999883
will	O	O:0.997972
support	O	O:0.997831
it	O	O:0.999954
on	O	O:0.999956
the	O	O:0.999984
next	O	O:0.997648
release	O	O:0.985388
.	O	O:0.999860
	
Python	O	O:0.999624
lists	O	O:0.999360
are	O	O:0.999706
defined	O	O:0.999354
with	O	O:0.999091
square	O	O:0.999192
brackets	O	O:0.999431
,	O	O:0.999959
and	O	O:0.999782
we	O	O:0.999971
want	O	O:0.999457
to	O	O:0.999977
generate	O	O:0.999933
a	O	O:0.999998
list	O	O:0.998182
of	O	O:0.999952
lists	O	O:0.965589
(	O	O:0.999986
where	O	O:0.999566
each	O	O:0.999867
piece	O	O:0.999495
contains	O	O:0.999934
one	O	O:0.999968
of	O	O:0.999994
your	O	O:0.998768
defined	O	O:0.999853
segments	O	O:0.997921
)	O	O:0.999752
.	O	O:0.998847
	
The	O	O:0.999696
biggest	O	O:0.997337
gotcha	O	O:0.998921
for	O	O:0.999834
me	O	O:0.999207
was	O	O:0.999904
that	O	O:0.999232
almost	O	O:0.999924
every	O	O:0.997239
standard	O	O:0.998645
operator	O	O:0.999274
is	O	O:0.999976
overloaded	O	O:0.999853
to	O	O:0.999986
distribute	O	O:0.996438
across	O	O:0.999822
the	O	O:0.999940
array	O	O:0.995009
.	O	O:0.999532
	
I	O	O:0.999988
want	O	O:0.999943
to	O	O:0.999725
combine	O	O:0.999959
the	O	O:0.999915
two	O	O:0.999884
into	O	O:0.999892
a	O	O:0.999995
mutli-dimensional	O	O:0.995734
numpy	O	O:0.997046
array	O	O:0.997403
.	O	O:0.999510
	
where	O	O:0.987161
`	O	O:0.999917
nlooks	O	O:0.946560
`	O	O:0.999950
and	O	O:0.999034
`	O	O:0.999991
dfactor	O	O:0.951576
`	O	O:0.999969
are	O	O:0.998416
scalars	O	O:0.999585
and	O	O:0.999658
`	O	O:0.999974
Ic	O	O:0.988592
`	O	O:0.999937
is	O	O:0.999799
the	O	O:0.999944
unfiltered	O	O:0.999197
array	O	O:0.997306
.	O	O:0.999616
	
In	O	O:0.999942
a	O	O:0.999941
10x5x5	O	O:0.992755
matrix	O	O:0.993623
with	O	O:0.999311
`	O	O:0.999836
x	O	O:0.998776
[	O	O:0.999992
0	O	O:0.999962
,	O	O:0.999965
:	O	O:0.999990
,	O	O:0.999979
:]	O	O:0.999962
=	O	O:0.999896
0	O	O:0.999968
`	O	O:0.999969
I	O	O:0.999792
would	O	O:0.999971
expect	O	O:0.999561
a	O	O:0.999988
result	O	O:0.997112
of	O	O:0.998734
:	O	O:0.999880
#CODE	O	O:0.999634
	
For	O	O:0.999751
example	O	O:0.997691
:	O	O:0.999976
I	O	O:0.999999
have	O	O:0.999947
a	O	O:0.999969
=	O	O:0.999977
array	O	O:0.996819
([	O	O:0.999918
123	O	O:0.987615
,	O	O:0.999969
412	O	O:0.998599
,	O	O:0.999953
444	O	O:0.999083
])	O	O:0.998285
	
While	O	O:0.999373
it	O	O:0.999965
often	O	O:0.998026
results	O	O:0.999699
in	O	O:0.999983
a	O	O:0.999991
massive	O	O:0.996397
speedup	O	O:0.999155
to	O	O:0.999963
eliminate	O	O:0.999807
for	O	O:0.999925
loops	O	O:0.998226
and	O	O:0.999961
take	O	O:0.999688
advantage	O	O:0.999702
of	O	O:0.999914
numpy	O	O:0.983816
built-ins	O	O:0.999615
/	O	O:0.999736
vectorization	O	O:0.996310
.	O	O:0.999775
	
If	O	O:0.999861
I	O	O:0.999977
understand	O	O:0.999881
correctly	O	O:0.998453
you	O	O:0.999977
have	O	O:0.999838
a	O	O:0.999989
three	O	O:0.999752
dimensional	O	O:0.996223
array	O	O:0.999087
,	O	O:0.999952
something	O	O:0.999632
like	O	O:0.987752
:	O	O:0.999982
#CODE	O	O:0.999257
	
@USER	O	O:0.997028
:	O	O:0.999988
where	O	O:0.999337
is	O	O:0.999995
a	O	O:0.999965
new	O	O:0.999637
array	O	O:0.997135
created	O	O:0.997918
?	O	O:0.999913
	
array	O	O:0.995130
([	O	O:0.999879
41	O	O:0.998017
,	O	O:0.999965
32	O	O:0.999977
,	O	O:0.999915
41	O	O:0.999861
,	O	O:0.999934
33	O	O:0.999892
,	O	O:0.999933
42	O	O:0.999887
,	O	O:0.999933
32	O	O:0.999971
,	O	O:0.999932
42	O	O:0.999854
,	O	O:0.999962
33	O	O:0.999818
])	O	O:0.998156
	
Any	O	O:0.999855
idea	O	O:0.999278
when	O	O:0.996098
it	O	O:0.999984
will	O	O:0.999804
be	O	O:0.999979
ready	O	O:0.998419
?	O	O:0.999929
	
I	O	O:0.999932
see	O	O:0.999957
you've	O	O:0.999659
taken	O	O:0.999879
care	O	O:0.999622
of	O	O:0.999991
my	O	O:0.999920
edge	O	O:0.999629
issues	O	O:0.998927
,	O	O:0.999983
although	O	O:0.999977
your	O	O:0.997384
filter	O	O:0.992910
size	O	O:0.999191
is	O	O:0.999983
hardcoded	O	O:0.998956
;)	O	O:0.999887
.	O	O:0.998123
	
If	O	O:0.999873
you	O	O:0.999533
open	O	O:0.995849
idle	O	O:0.998757
and	O	O:0.999990
type	O	O:0.998007
`	O	O:0.999701
import	O	O:0.995537
matplotlib	O	O:0.997763
`	O	O:0.999762
it	O	O:0.999141
shouldn't	O	O:0.999942
return	O	O:0.994139
an	O	O:0.999860
error	O	O:0.999058
	
No	O	O:0.999974
expert	O	O:0.999661
on	O	O:0.999955
the	O	O:0.999922
topic	O	O:0.984219
,	O	O:0.999940
but	O	O:0.999986
this	O	O:0.999609
is	O	O:0.999971
some	O	O:0.999824
kind	O	O:0.999882
of	O	O:0.999974
adjency	O	O:0.989358
matrix	O	O:0.964144
(	O	O:0.999933
#URL	O	O:0.999142
)	O	O:0.999637
.	O	O:0.998957
	
Edit	O	O:0.998237
:	O	O:0.999981
If	O	O:0.999986
it's	O	O:0.999942
a	O	O:0.999978
floating	O	O:0.998789
point	O	O:0.995563
issue	O	O:0.999079
,	O	O:0.999986
what	O	O:0.999923
sort	O	O:0.998729
of	O	O:0.999988
floating	O	O:0.999302
point	O	O:0.999340
error	O	O:0.999912
mistakes	O	O:0.999644
a	O	O:0.999918
number	O	O:0.999555
much	O	O:0.999591
less	O	O:0.999978
than	O	O:0.999801
1	O	O:0.999960
as	O	O:0.999980
one	O	O:0.999601
around	O	O:0.998685
8	O	O:0.999758
?	O	O:0.999895
	
The	O	O:0.999804
question	O	O:0.998452
was	O	O:0.999931
about	O	O:0.999573
how	O	O:0.999782
to	O	O:0.999979
slice	O	O:0.999574
if	O	O:0.999979
the	O	O:0.999984
rank	O	O:0.784322
is	O	O:0.999989
not	O	O:0.999906
known	O	O:0.999882
at	O	O:0.999960
the	O	O:0.999989
time	O	O:0.999812
I	O	O:0.999992
write	O	O:0.999922
the	O	O:0.999897
code	O	O:0.997601
.	O	O:0.999844
	
I	O	O:0.999984
think	O	O:0.999605
a	O	O:0.999215
typical	O	O:0.884313
method	O	O:0.996106
is	O	O:0.999953
to	O	O:0.999795
always	O	O:0.999980
double	O	O:0.999063
the	O	O:0.999942
size	O	O:0.999462
,	O	O:0.999996
when	O	O:0.999822
you	O	O:0.999970
really	O	O:0.999828
don't	O	O:0.999917
know	O	O:0.999536
how	O	O:0.999874
large	O	O:0.998500
things	O	O:0.999135
will	O	O:0.997610
be	O	O:0.999782
.	O	O:0.999492
	
This	O	O:0.999556
script	O	O:0.998259
is	O	O:0.999960
mainly	O	O:0.995838
intended	O	O:0.999839
to	O	O:0.999811
demonstrate	O	O:0.999930
building	O	O:0.998675
an	O	O:0.999909
independent	O	O:0.997813
python	O	O:0.996326
in	O	O:0.999980
your	O	O:0.999711
home	O	O:0.998575
directory	O	O:0.999464
,	O	O:0.999972
and	O	O:0.999912
assumes	O	O:0.998915
the	O	O:0.999422
system	O	O:0.997195
you're	O	O:0.999859
building	O	O:0.999858
on	O	O:0.999971
has	O	O:0.999926
the	O	O:0.999945
proper	O	O:0.998288
dependencies	O	O:0.997089
already	O	O:0.998402
installed	O	O:0.997724
,	O	O:0.999807
but	O	O:0.999869
it	O	O:0.999952
at	O	O:0.999925
least	O	O:0.999481
points	O	O:0.999240
you	O	O:0.999664
in	O	O:0.999965
the	O	O:0.999962
right	O	O:0.998510
direction	O	O:0.999519
.	O	O:0.999863
	
and	O	O:0.999246
use	O	O:0.999451
the	O	O:0.998475
information	O	O:0.993694
on	O	O:0.999937
the	O	O:0.999971
size	O	O:0.999758
inclued	O	O:0.999321
in	O	O:0.999985
the	O	O:0.999977
filename	O	O:0.999896
to	O	O:0.999952
restore	O	O:0.999772
the	O	O:0.999936
initial	O	O:0.996639
shape	O	O:0.998971
	
Hmm	O	O:0.999650
I	O	O:0.999986
added	O	O:0.999855
for	O	O:0.999702
first	O	O:0.998908
example	O	O:0.997977
,	O	O:0.999982
did	O	O:0.999940
you	O	O:0.999903
know	O	O:0.999771
how	O	O:0.999956
to	O	O:0.999993
copy	O	O:0.999643
from	O	O:0.999912
IDE	O	O:0.999907
exactly	O	O:0.999946
with	O	O:0.998868
commas	O	O:0.992124
and	O	O:0.999967
everything	O	O:0.998146
..?	O	O:0.939949
	
@USER	O	O:0.994684
:	O	O:0.999977
Your	O	O:0.999594
answer	O	O:0.999651
will	O	O:0.999368
give	O	O:0.999691
false	O	O:0.999814
positives	O	O:0.997871
in	O	O:0.999960
the	O	O:0.999893
event	O	O:0.998033
that	O	O:0.999853
one	O	O:0.999953
or	O	O:0.999984
more	O	O:0.965508
(	O	O:0.999961
but	O	O:0.999874
not	O	O:0.999925
all	O	O:0.999733
)	O	O:0.999979
of	O	O:0.999569
the	O	O:0.999926
elements	O	O:0.999653
in	O	O:0.999931
B	O	O:0.999929
matches	O	O:0.999857
with	O	O:0.999951
one	O	O:0.999921
of	O	O:0.999989
the	O	O:0.999962
rows	O	O:0.999525
in	O	O:0.999874
A	O	O:0.999866
.	O	O:0.999842
	
I	O	O:0.999675
would	O	O:0.999973
like	O	O:0.999705
to	O	O:0.999987
average	O	O:0.999968
the	O	O:0.999750
2	O	O:0.999786
different	O	O:0.999256
arrays	O	O:0.998295
contained	O	O:0.999153
within	O	O:0.994859
`	O	O:0.999815
record	O	O:0.986692
`	O	O:0.999929
.	O	O:0.998623
	
I	O	O:0.999987
need	O	O:0.999652
to	O	O:0.999781
constrained	O	O:0.999924
minimization	O	O:0.999902
of	O	O:0.999996
some	O	O:0.999803
data	O	O:0.999810
(	O	O:0.999997
ie	O	O:0.999986
so	O	O:0.999999
that	O	O:0.999922
I	O	O:0.999998
get	O	O:0.999896
the	O	O:0.999835
minimum	O	O:0.994902
value	O	O:0.999574
within	O	O:0.999910
a	O	O:0.999952
certain	O	O:0.997661
range	O	O:0.998544
)	O	O:0.999258
.	O	O:0.996246
	
In	O	O:0.999969
this	O	O:0.999914
case	O	O:0.999768
,	O	O:0.999988
I	O	O:0.999929
would	O	O:0.999954
like	O	O:0.999399
to	O	O:0.999980
return	O	O:0.989993
the	O	O:0.999690
index	O	O:0.995014
2	O	O:0.999673
(	O	O:0.999989
2nd	O	O:0.999940
row	O	O:0.999495
)	O	O:0.999725
.	O	O:0.998958
	
a	O	O:0.999781
32	O	O:0.999968
bits	O	O:0.999363
process	O	O:0.994613
can	O	O:0.999960
only	O	O:0.999926
access	O	O:0.999553
around	O	O:0.999643
4	O	O:0.999913
GB	O	O:0.999914
of	O	O:0.999828
memory	O	O:0.990964
.	O	O:0.999663
	
How	O	O:0.999941
do	O	O:0.999841
I	O	O:0.999993
find	O	O:0.999802
out	O	O:0.999689
,	O	O:0.999979
if	O	O:0.999965
the	O	O:0.999935
numpy	O	O:0.993713
BLAS	O	O:0.999875
libraries	O	O:0.999638
are	O	O:0.999967
availalbe	O	O:0.999429
as	O	O:0.999930
dynamically-loadable	O	O:0.999049
?	O	O:0.999945
	
(	O	O:0.999994
they	O	O:0.999817
are	O	O:0.999892
at	O	O:0.999981
same	O	O:0.999905
scale	O	O:0.993727
)	O	O:0.999907
	
Now	O	O:0.999939
simply	O	O:0.999439
create	O	O:0.999502
a	O	O:0.999972
new	O	O:0.999340
array	O	O:0.993235
and	O	O:0.999637
multiply	O	B-API:0.788318
:	O	O:0.999701
#CODE	O	O:0.999008
	
Take	O	O:0.998910
a	O	O:0.999983
look	O	O:0.985819
at	O	O:0.999972
this	O	O:0.998898
Project	O	O:0.994729
Euler	O	O:0.999464
problem	O	O:0.983194
:	O	O:0.999951
#URL	O	O:0.999115
	
Python	O	O:0.994901
:	O	O:0.999992
how	O	O:0.999947
to	O	O:0.999993
store	O	O:0.999959
a	O	O:0.999987
numpy	O	O:0.998755
multidimensional	O	O:0.996957
array	O	O:0.999272
in	O	O:0.999724
PyTables	O	O:0.998344
?	O	O:0.999939
	
How	O	O:0.999832
can	O	O:0.999412
i	O	O:0.999998
load	O	O:0.999757
all	O	O:0.999213
24	O	O:0.999903
joblib	O	O:0.995821
files	O	O:0.998923
in	O	O:0.999949
one	O	O:0.999845
program	O	O:0.998294
without	O	O:0.999756
any	O	O:0.995854
errors	O	O:0.997254
?	O	O:0.999850
	
Where	O	O:0.999384
I'm	O	O:0.999943
stuck	O	O:0.997644
is	O	O:0.999987
what	O	O:0.999746
the	O	O:0.999881
wrapper	O	O:0.999777
code	O	O:0.997734
should	O	O:0.999966
then	O	O:0.999786
look	O	O:0.999947
like	O	O:0.999847
to	O	O:0.999994
pass	O	O:0.999870
a	O	O:0.999983
MxN	O	O:0.999958
numpy	O	O:0.999253
array	O	O:0.999403
to	O	O:0.999930
the	O	O:0.999928
**	O	O:0.998204
coords1	O	O:0.989553
and	O	O:0.999900
**	O	O:0.999780
coords2	O	O:0.974489
arguments	O	O:0.997775
.	O	O:0.999346
	
I	O	O:0.999990
have	O	O:0.999841
created	O	O:0.999624
a	O	O:0.999996
numpy	O	O:0.996739
2d	O	O:0.999982
array	O	O:0.998816
of	O	O:0.999982
type	O	O:0.996824
string	O	O:0.999204
called	O	O:0.995043
'	O	O:0.999979
minutes_array	O	O:0.921416
'	O	O:0.999970
with	O	O:0.999830
the	O	O:0.999937
first	O	O:0.999662
column	O	O:0.999628
as	O	O:0.999988
unix	O	O:0.996249
timestamps	O	O:0.999508
rounded	O	O:0.999700
to	O	O:0.999951
the	O	O:0.999989
nearest	O	O:0.995189
minute	O	O:0.999722
covering	O	O:0.999972
every	O	O:0.999767
minute	O	O:0.999930
from	O	O:0.999859
the	O	O:0.999979
start	O	O:0.999582
of	O	O:0.999980
the	O	O:0.999911
sensor	O	O:0.999980
timeseries	O	O:0.999407
to	O	O:0.999985
the	O	O:0.999985
end	O	O:0.997967
with	O	O:0.999917
three	O	O:0.999908
empty	O	O:0.999851
columns	O	O:0.999673
to	O	O:0.999987
be	O	O:0.999988
filled	O	O:0.999906
with	O	O:0.999942
data	O	O:0.999942
from	O	O:0.999989
each	O	O:0.999885
of	O	O:0.999998
the	O	O:0.999785
3	O	O:0.999940
sensors	O	O:0.999254
where	O	O:0.999784
available	O	O:0.999638
.	O	O:0.999468
	
Which	O	O:0.999619
can	O	O:0.999514
be	O	O:0.999998
done	O	O:0.999891
in	O	O:0.999826
O	O	O:0.980536
(	O	O:0.999990
n	O	O:0.997833
)	O	O:0.999618
,	O	O:0.999943
but	O	O:0.999994
your	O	O:0.998751
answer	O	O:0.999818
requires	O	O:0.997945
O	O	O:0.963539
(	O	O:0.999997
mn	O	O:0.995159
)	O	O:0.999922
,	O	O:0.999971
where	O	O:0.999934
m	O	O:0.995203
is	O	O:0.999996
size	O	O:0.999864
of	O	O:0.998936
window	O	O:0.995461
.	O	O:0.999447
	
Somehow	O	O:0.998172
I	O	O:0.999971
always	O	O:0.999921
thought	O	O:0.999665
you	O	O:0.999738
can	O	O:0.999777
load	O	O:0.999953
the	O	O:0.999959
shared	O	O:0.999007
library	O	O:0.998294
compiled	O	O:0.999899
with	O	O:0.999963
any	O	O:0.999166
compiler	O	O:0.999185
.	O	O:0.999388
	
`	O	O:0.999855
array	O	O:0.996129
=[	O	O:0.999968
'	O	O:0.999624
NaN	O	O:0.996130
'	O	O:0.999846
,	O	O:0.999955
'	O	O:0.999936
20	O	O:0.999512
'	O	O:0.999858
,	O	O:0.999941
'	O	O:0.999924
383.333	O	O:0.984748
'	O	O:0.999862
,	O	O:0.999960
'	O	O:0.999942
NaN	O	O:0.989732
'	O	O:0.999867
,	O	O:0.999952
'	O	O:0.999942
NaN	O	O:0.989761
'	O	O:0.999867
,	O	O:0.999952
'	O	O:0.999942
NaN	O	O:0.989455
'	O	O:0.999863
,	O	O:0.999963
'	O	O:0.999937
5	O	O:0.999737
'	O	O:0.999907
,	O	O:0.999972
'	O	O:0.999925
100	O	O:0.998266
'	O	O:0.999879
,	O	O:0.999933
'	O	O:0.999929
129	O	O:0.998206
'	O	O:0.999876
,	O	O:0.999920
'	O	O:0.999925
122.5	O	O:0.984917
'	O	O:0.999866
,	O	O:0.999958
'	O	O:0.999942
NaN	O	O:0.989732
'	O	O:0.999879
,	O	O:0.999955
'	O	O:0.999931
NaN	O	O:0.985653
']`	O	O:0.998167
	
array	O	O:0.995500
,	O	O:0.999870
and	O	O:0.999969
then	O	O:0.999379
use	O	O:0.999700
`	O	O:0.999941
view	O	O:0.701895
`	O	O:0.999984
to	O	O:0.999938
turn	O	O:0.999940
it	O	O:0.999994
into	O	O:0.999938
a	O	O:0.999995
structured	O	O:0.996749
array	O	O:0.998041
,	O	O:0.999894
and	O	O:0.999957
then	O	O:0.998321
use	O	O:0.999466
	
and	O	O:0.999654
so	O	O:0.999960
all	O	O:0.998922
we	O	O:0.999990
need	O	O:0.998135
to	O	O:0.999990
do	O	O:0.999962
is	O	O:0.999887
:	O	O:0.999936
#CODE	O	O:0.999707
	
Any	O	O:0.999952
clue	O	O:0.999621
to	O	O:0.999860
why	O	O:0.999997
this	O	O:0.999163
is	O	O:0.999972
happening	O	O:0.998444
?	O	O:0.999866
	
I	O	O:0.999979
think	O	O:0.999813
the	O	O:0.999696
definition	O	O:0.999390
used	O	O:0.999819
in	O	O:0.999939
the	O	O:0.999940
field	O	O:0.998160
of	O	O:0.999979
statistics	O	O:0.999099
is	O	O:0.999998
the	O	O:0.999947
value	O	O:0.999236
in	O	O:0.999954
the	O	O:0.999977
middle	O	O:0.995367
of	O	O:0.999994
your	O	O:0.999870
data	O	O:0.999987
array	O	O:0.999118
after	O	O:0.999768
it	O	O:0.999709
has	O	O:0.999924
been	O	O:0.995298
sorted	O	O:0.999615
.	O	O:0.999249
	
Dense	O	O:0.999182
covariance	O	O:0.999918
matrices	O	O:0.999003
of	O	O:0.999990
that	O	O:0.999796
size	O	O:0.999938
suggest	O	O:0.999015
operations	O	O:0.999979
that	O	O:0.999790
run	O	O:0.999846
forever	O	O:0.999638
!	O	O:0.999916
	
In	O	O:0.999971
this	O	O:0.999920
case	O	O:0.999116
,	O	O:0.999953
I'd	O	O:0.999979
like	O	O:0.999470
it	O	O:0.999940
to	O	O:0.999935
return	O	O:0.999536
a	O	O:0.999962
density	O	O:0.998715
that's	O	O:0.999912
essentially	O	O:0.998318
peaked	O	O:0.999747
completely	O	O:0.999822
at	O	O:0.999981
a	O	O:0.999994
difference	O	O:0.999843
of	O	O:0.999820
0	O	O:0.999482
,	O	O:0.999994
with	O	O:0.999695
no	O	O:0.999857
mass	O	O:0.999949
everywhere	O	O:0.999967
else	O	O:0.999389
.	O	O:0.999776
	
If	O	O:0.999948
the	O	O:0.999940
array	O	O:0.997641
is	O	O:0.999970
doubles	O	O:0.990097
(	O	O:0.999994
remember	O	O:0.999742
python	O	O:0.998409
floats	O	O:0.999910
are	O	O:0.999744
C	O	O:0.999789
doubles	O	O:0.999158
by	O	O:0.999968
default	O	O:0.999128
)	O	O:0.999982
then	O	O:0.998654
you	O	O:0.999997
have	O	O:0.999810
to	O	O:0.999995
think	O	O:0.999990
a	O	O:0.999989
bit	O	O:0.999354
harder	O	O:0.999782
as	O	O:0.999875
==	O	O:0.999069
is	O	O:0.999899
not	O	O:0.999350
really	O	O:0.999918
safe	O	O:0.999766
or	O	O:0.999986
what	O	O:0.999469
you	O	O:0.999977
want	O	O:0.999853
for	O	O:0.999922
floating	O	O:0.999540
point	O	O:0.994878
values	O	O:0.995195
.	O	O:0.999603
	
They	O	O:0.999147
all	O	O:0.999671
have	O	O:0.999612
their	O	O:0.999200
strengths	O	O:0.999287
and	O	O:0.999639
weaknesses	O	O:0.989830
.	O	O:0.998584
	
numpy	O	O:0.998926
array	O	O:0.999834
of	O	O:0.999978
chars	O	O:0.998062
to	O	O:0.999956
string	O	O:0.998898
	
matrix	O	O:0.966832
rank	O	O:0.820813
:	O	O:0.999961
#CODE	O	O:0.999506
	
This	O	O:0.999755
slows	O	O:0.999945
down	O	O:0.999608
for	O	O:0.999982
large	O	O:0.998566
sigma	O	O:0.792681
,	O	O:0.999974
at	O	O:0.999858
which	O	O:0.999368
point	O	O:0.999208
using	O	O:0.999428
FFT-based	O	O:0.993876
smoothing	O	O:0.997516
might	O	O:0.999033
be	O	O:0.999801
faster	O	O:0.999017
.	O	O:0.998308
	
What	O	O:0.997780
is	O	O:0.999980
the	O	O:0.999763
fastest	O	O:0.999095
way	O	O:0.999911
to	O	O:0.999869
iterate	O	O:0.999931
through	O	O:0.999749
all	O	O:0.999393
one	O	O:0.999836
dimensional	O	O:0.990118
sub-arrays	O	O:0.999860
of	O	O:0.999962
an	O	O:0.999756
n	O	O:0.999827
dimensional	O	O:0.996677
array	O	O:0.999678
in	O	O:0.999724
python	O	O:0.987430
.	O	O:0.999737
	
This	O	O:0.998316
works	O	O:0.996654
,	O	O:0.999953
but	O	O:0.999822
it's	O	O:0.999744
really	O	O:0.997804
slow	O	O:0.999270
.	O	O:0.999769
	
If	O	O:0.999956
I	O	O:0.999988
create	O	O:0.999877
a	O	O:0.999965
simple	O	O:0.998675
array	O	O:0.999471
like	O	O:0.999850
this	O	O:0.999500
in	O	O:0.999847
Python	O	O:0.999165
I'm	O	O:0.999993
able	O	O:0.999639
to	O	O:0.999978
read	O	O:0.999950
the	O	O:0.999976
values	O	O:0.998837
in	O	O:0.999984
the	O	O:0.999916
C	O	O:0.999842
code	O	O:0.998005
:	O	O:0.999982
	
In	O	O:0.999673
an	O	O:0.999937
ideal	O	O:0.997994
world	O	O:0.999342
,	O	O:0.999989
the	O	O:0.999832
function	O	O:0.999434
or	O	O:0.999982
class	O	O:0.998236
would	O	O:0.999981
support	O	O:0.998335
overlap	O	O:0.983414
between	O	O:0.999429
the	O	O:0.999969
divisions	O	O:0.997615
in	O	O:0.999897
the	O	O:0.999889
input	O	O:0.999332
matrix	O	O:0.982331
too	O	O:0.999255
.	O	O:0.999914
	
My	O	O:0.999967
problem	O	O:0.993692
is	O	O:0.999985
different	O	O:0.999443
because	O	O:0.997803
I	O	O:0.999995
need	O	O:0.999713
to	O	O:0.999870
find	O	O:0.999967
**	O	O:0.999882
all	O	O:0.998889
**	O	O:0.999900
the	O	O:0.999835
roots	O	O:0.999400
of	O	O:0.999992
my	O	O:0.999125
function	O	O:0.999884
,	O	O:0.999991
on	O	O:0.999982
a	O	O:0.999917
given	O	O:0.995497
interval	O	O:0.998463
.	O	O:0.999496
	
How	O	O:0.999938
can	O	O:0.999740
I	O	O:0.999998
create	O	O:0.999928
a	O	O:0.999945
PyArrayObject	O	O:0.995621
from	O	O:0.999877
this	O	O:0.999797
structure	O	O:0.999949
,	O	O:0.999995
specially	O	O:0.999949
how	O	O:0.999918
I	O	O:0.999997
can	O	O:0.999949
create	O	O:0.999911
a	O	O:0.999999
numpy	O	O:0.998411
array	O	O:0.999631
that	O	O:0.999882
hold	O	O:0.998844
3	O	O:0.999816
object	O	O:0.999075
(	O	O:0.999982
off	O	O:0.999858
course	O	O:0.998877
3	O	O:0.999912
is	O	O:0.999977
an	O	O:0.999908
example	O	O:0.999942
here	O	O:0.999453
)	O	O:0.999797
(	O	O:0.999992
each	O	O:0.999669
of	O	O:0.999997
them	O	O:0.998481
is	O	O:0.999989
an	O	O:0.999920
array	O	O:0.999129
)	O	O:0.999465
	
x	O	O:0.995708
:	O	O:0.999996
a	O	O:0.999998
numpy	O	O:0.997313
2d	O	O:0.999945
array	O	O:0.997170
	
Thanks	O	O:0.999524
for	O	O:0.999764
the	O	O:0.999770
info	O	O:0.977498
.	O	O:0.999833
	
How	O	O:0.999525
would	O	O:0.999773
you	O	O:0.999866
avoid	O	O:0.999919
the	O	O:0.999972
loop	O	O:0.997776
in	O	O:0.999984
the	O	O:0.999949
case	O	O:0.999857
that	O	O:0.999945
all	O	O:0.999947
entries	O	O:0.999533
in	O	O:0.998906
`	O	O:0.999995
repl	O	O:0.995830
`	O	O:0.999992
are	O	O:0.999452
the	O	O:0.999987
same	O	O:0.998702
?	O	O:0.999979
	
Pulling	O	O:0.999151
data	O	O:0.999900
from	O	O:0.999934
a	O	O:0.999993
numpy	O	O:0.999226
array	O	O:0.997084
	
There's	O	O:0.998867
no	O	O:0.999878
effective	O	O:0.999828
difference	O	O:0.998330
(	O	O:0.999993
they	O	O:0.999926
both	O	O:0.999736
return	O	O:0.991577
views	O	O:0.998490
into	O	O:0.999720
the	O	O:0.999984
original	O	O:0.995852
array	O	O:0.998916
)	O	O:0.999820
.	O	O:0.998712
	
Thanks	O	O:0.999751
for	O	O:0.999916
all	O	O:0.999010
the	O	O:0.999940
tips	O	O:0.991948
!	O	O:0.999976
	
remove	O	O:0.997499
zero	O	O:0.998914
lines	O	O:0.999455
2-D	O	O:0.999953
numpy	O	O:0.997756
array	O	O:0.996928
	
Instead	O	O:0.999717
of	O	O:0.999967
using	O	O:0.995182
`	O	O:0.999742
PyInt_AsLong	O	O:0.683590
`	O	O:0.999943
,	O	O:0.999886
use	O	O:0.999979
the	O	O:0.997267
`	O	O:0.999717
PyArray_*	O	O:0.969092
`	O	O:0.999940
functions	O	O:0.999181
provided	O	O:0.999894
by	O	O:0.999973
Numpy's	O	O:0.999711
C	O	O:0.999751
API	O	O:0.999971
to	O	O:0.999947
access	O	O:0.999930
the	O	O:0.999990
data	O	O:0.999183
;	O	O:0.999995
in	O	O:0.999949
particular	O	O:0.999472
,	O	O:0.999989
see	O	O:0.999766
section	O	O:0.999733
Array	O	O:0.918618
API	O	O:0.999316
.	O	O:0.999372
	
Well	O	O:0.998722
,	O	O:0.999949
I	O	O:0.999989
tried	O	O:0.999871
dividing	O	O:0.998671
by	O	O:0.999818
the	O	O:0.999844
largest	O	O:0.997745
place	O	O:0.998494
value	O	O:0.999467
.	O	O:0.999851
	
All	O	O:0.999644
of	O	O:0.999961
those	O	O:0.997751
numpys	O	O:0.999252
are	O	O:0.999724
linked	O	O:0.999741
to	O	O:0.999934
the	O	O:0.999974
system	O	O:0.999412
Accelerate	O	O:0.999608
framework	O	O:0.997748
:	O	O:0.999986
#CODE	O	O:0.999607
	
and	O	O:0.998800
I	O	O:0.999989
wish	O	O:0.999825
to	O	O:0.999822
create	O	O:0.999958
a	O	O:0.999996
third	O	O:0.999571
array	O	O:0.999720
with	O	O:0.999838
each	O	O:0.998544
element	O	O:0.999982
from	O	O:0.999437
`	O	O:0.999987
b	O	O:0.999758
`	O	O:0.999997
appearing	O	O:0.997253
`	O	O:0.999982
a	O	O:0.999751
`	O	O:0.999988
times	O	O:0.993429
in	O	O:0.999993
the	O	O:0.999929
new	O	O:0.999262
array	O	O:0.999198
,	O	O:0.999984
as	O	O:0.999623
:	O	O:0.999878
#CODE	O	O:0.999589
	
I	O	O:0.999963
can	O	O:0.999915
imagine	O	O:0.999889
a	O	O:0.999990
number	O	O:0.999264
of	O	O:0.999953
approaches	O	O:0.999441
to	O	O:0.999887
storing	O	O:0.999989
both	O	O:0.999405
of	O	O:0.999989
these	O	O:0.999759
data	O	O:0.999891
formats	O	O:0.998545
,	O	O:0.999995
ranging	O	O:0.999920
from	O	O:0.999363
storing	O	O:0.999732
the	O	O:0.999978
metadata	O	O:0.999523
with	O	O:0.999876
the	O	O:0.999389
`	O	O:0.999960
AttributeSet	O	O:0.994139
`	O	O:0.999997
class	O	O:0.998283
for	O	O:0.999998
each	O	O:0.996687
`	O	O:0.999962
Array	O	O:0.544390
`	O	O:0.999968
/	O	O:0.997473
`	O	O:0.999983
CArray	O	B-API:0.666284
`	O	O:0.999984
to	O	O:0.999934
using	O	O:0.999997
a	O	O:0.999141
`	O	O:0.999715
Table	O	O:0.996166
`	O	O:0.999979
for	O	O:0.999919
all	O	O:0.999886
of	O	O:0.999882
the	O	O:0.999105
metadata	O	O:0.996715
.	O	O:0.999509
	
I	O	O:0.999988
want	O	O:0.999965
to	O	O:0.999760
calculate	O	O:0.999972
the	O	O:0.999990
average	O	O:0.999800
of	O	O:0.999984
four	O	O:0.999528
neighbors	O	O:0.999850
in	O	O:0.999928
a	O	O:0.999994
huge	O	O:0.997632
array	O	O:0.997471
.	O	O:0.999424
	
Suppress	O	O:0.998438
Scientific	O	O:0.996885
Notation	O	O:0.998878
in	O	O:0.999913
Numpy	O	O:0.997884
When	O	O:0.997601
Creating	O	O:0.998614
Array	O	O:0.714495
From	O	O:0.997286
Nested	O	O:0.996537
List	O	O:0.998339
	
I	O	O:0.999988
want	O	O:0.999910
to	O	O:0.999740
find	O	O:0.999970
the	O	O:0.999941
vector	O	O:0.998518
x	O	O:0.998887
'	O	O:0.999965
such	O	O:0.999984
that	O	O:0.999716
Ax	O	O:0.999191
'	O	O:0.999802
is	O	O:0.999994
as	O	O:0.999984
close	O	O:0.996088
as	O	O:0.999993
possible	O	O:0.998927
to	O	O:0.999795
	
And	O	O:0.999877
the	O	O:0.999818
dataset	O	O:0.997277
in	O	O:0.999950
question	O	O:0.999173
is	O	O:0.999967
beyond	O	O:0.998779
doubt	O	O:0.998879
particular	O	O:0.985489
:	O	O:0.999976
There	O	O:0.999929
certainly	O	O:0.999380
is	O	O:0.999978
an	O	O:0.999728
upper	O	O:0.995847
bound	O	O:0.997928
and	O	O:0.999920
a	O	O:0.999879
precision	O	O:0.979830
.	O	O:0.999417
	
Only	O	O:0.999688
integers	O	O:0.999699
can	O	O:0.999650
be	O	O:0.999995
used	O	O:0.999893
as	O	O:0.999868
array	O	O:0.997572
or	O	O:0.999700
matrix	O	O:0.924697
indices	O	O:0.990110
.	O	O:0.999615
	
I	O	O:0.999907
can't	O	O:0.999761
find	O	O:0.998513
it	O	O:0.999960
online	O	O:0.999741
anywhere	O	O:0.998990
.	O	O:0.999624
	
I	O	O:0.999957
will	O	O:0.999761
try	O	O:0.999894
your	O	O:0.999843
code	O	O:0.995520
,	O	O:0.999995
but	O	O:0.999906
I	O	O:0.999966
am	O	O:0.999974
also	O	O:0.999594
going	O	O:0.999913
to	O	O:0.999899
try	O	O:0.999983
writing	O	O:0.999851
a	O	O:0.999964
simple	O	O:0.998732
C	O	O:0.999879
extension	O	O:0.999887
to	O	O:0.999985
simply	O	O:0.999972
do	O	O:0.999954
the	O	O:0.999939
reading	O	O:0.986911
,	O	O:0.999980
math	O	O:0.999636
,	O	O:0.999957
and	O	O:0.999940
drawing	O	O:0.997808
all	O	O:0.996223
in	O	O:0.999920
one	O	O:0.999330
place	O	O:0.994590
.	O	O:0.999810
	
Are	O	O:0.999920
there	O	O:0.999297
any	O	O:0.999708
good	O	O:0.998951
greedy	O	O:0.996610
implementations	O	O:0.999686
to	O	O:0.999714
solve	O	O:0.999987
this	O	O:0.999919
or	O	O:0.999993
am	O	O:0.999928
I	O	O:0.999992
on	O	O:0.999997
my	O	O:0.999820
own	O	O:0.999925
to	O	O:0.999796
implement	O	O:0.999984
this	O	O:0.999594
?	O	O:0.999953
	
The	O	O:0.999934
problem	O	O:0.993052
is	O	O:0.999995
that	O	O:0.999006
for	O	O:0.999982
the	O	O:0.999646
array	O	O:0.995460
input	O	O:0.999412
,	O	O:0.999991
SWIG	O	O:0.999476
complains	O	O:0.999800
that	O	O:0.999948
there	O	O:0.999663
is	O	O:0.999973
no	O	O:0.999260
typemap	O	O:0.991015
.	O	O:0.999754
	
Is	O	O:0.999820
`	O	O:0.999933
column_array_to_add	O	O:0.980303
`	O	O:0.999987
another	O	O:0.998054
2D	O	O:0.999974
array	O	O:0.996878
,	O	O:0.999988
or	O	O:0.999787
is	O	O:0.999959
it	O	O:0.999988
a	O	O:0.999983
1D	O	O:0.999905
column	O	O:0.999262
array	O	O:0.999859
,	O	O:0.999989
as	O	O:0.999958
the	O	O:0.999932
name	O	O:0.998682
implies	O	O:0.999017
?	O	O:0.999989
	
the	O	O:0.999928
sum	O	O:0.998879
of	O	O:0.999983
a	O	O:0.999928
triple-product	O	O:0.997425
(	O	O:0.999964
element-wise	O	O:0.999290
)	O	O:0.999619
.	O	O:0.999072
	
I	O	O:0.999979
ran	O	O:0.999940
a	O	O:0.999920
simple	O	O:0.994722
speed	O	O:0.999883
test	O	O:0.986874
comparing	O	O:0.999796
numpy	O	O:0.991374
and	O	O:0.999013
python	O	O:0.999211
list	O	O:0.982256
comprehension	O	O:0.997836
,	O	O:0.999877
and	O	O:0.999638
apparently	O	O:0.999562
list	O	O:0.970778
comprehension	O	O:0.999482
was	O	O:0.999109
faster	O	O:0.998810
.	O	O:0.998904
	
That	O	O:0.998267
is	O	O:0.999973
why	O	O:0.999939
your	O	O:0.999325
sample	O	O:0.999160
loop	O	O:0.999260
has	O	O:0.999970
been	O	O:0.998215
collapsed	O	O:0.999886
to	O	O:0.999966
read	O	O:0.999786
in	O	O:0.999973
the	O	O:0.999985
full	O	O:0.996782
sample	O	O:0.997867
for	O	O:0.999954
the	O	O:0.999847
receiver	O	O:0.995683
and	O	O:0.999729
channel	O	O:0.998563
in	O	O:0.999902
one	O	O:0.999318
large	O	O:0.998961
read	O	O:0.985005
.	O	O:0.999469
	
Something	O	O:0.999714
like	O	O:0.999096
the	O	O:0.999939
following	O	O:0.997727
iterator	O	O:0.998695
should	O	O:0.999673
get	O	O:0.998387
around	O	O:0.999938
both	O	O:0.999207
of	O	O:0.999924
these	O	O:0.996724
problems	O	O:0.992440
:	O	O:0.999950
#CODE	O	O:0.999430
	
I	O	O:0.999967
appreciate	O	O:0.999687
any	O	O:0.998440
input	O	O:0.999037
on	O	O:0.999829
this	O	O:0.999419
...	O	O:0.998321
	
Do	O	O:0.999933
you	O	O:0.999803
really	O	O:0.999857
need	O	O:0.999714
to	O	O:0.999975
find	O	O:0.999994
such	O	O:0.999950
a	O	O:0.999962
weird	O	O:0.998688
thing	O	O:0.997728
?	O	O:0.999854
	
Any	O	O:0.999868
particular	O	O:0.997626
reason	O	O:0.998586
you	O	O:0.999785
don't	O	O:0.999936
want	O	O:0.999934
to	O	O:0.999949
use	O	O:0.999996
a	O	O:0.999932
straightforward	O	O:0.996189
approach	O	O:0.998925
?	O	O:0.999863
	
The	O	O:0.999945
advantage	O	O:0.999790
of	O	O:0.999960
numpy	O	O:0.988127
is	O	O:0.999989
the	O	O:0.999936
support	O	O:0.994411
of	O	O:0.999972
slicing	O	O:0.999401
at	O	O:0.999989
different	O	O:0.997127
levels	O	O:0.796701
.	O	O:0.999020
	
An	O	O:0.999717
implementation	O	O:0.998737
,	O	O:0.999973
however	O	O:0.999476
,	O	O:0.999640
is	O	O:0.999976
not	O	O:0.998834
really	O	O:0.999871
open	O	O:0.991812
to	O	O:0.999911
interpretation	O	O:0.999919
.	O	O:0.999773
	
Python	O	O:0.999245
numpy	O	O:0.998063
masked	O	O:0.997572
array	O	O:0.998064
initialization	O	O:0.997618
	
You	O	O:0.999945
can	O	O:0.998923
further	O	O:0.999847
optimize	O	O:0.999758
by	O	O:0.999973
exploiting	O	O:0.999631
array-order	O	O:0.999541
alignment	O	O:0.999814
to	O	O:0.999850
reduce	O	O:0.999483
excess	O	O:0.999527
memory	O	O:0.999456
consumption	O	O:0.999239
caused	O	O:0.999772
by	O	O:0.999957
copying	O	O:0.998559
the	O	O:0.999811
original	O	O:0.991208
arrays	O	O:0.998565
.	O	O:0.999761
	
For	O	O:0.999865
example	O	O:0.998364
,	O	O:0.999992
any	O	O:0.999882
vector	O	O:0.996976
(	O	O:0.999973
of	O	O:0.999981
the	O	O:0.999940
appropriate	O	O:0.999794
dimension	O	O:0.999723
)	O	O:0.999978
can	O	O:0.999802
be	O	O:0.999997
an	O	O:0.999991
eigenvector	O	O:0.999772
of	O	O:0.999895
the	O	O:0.999466
identity	O	O:0.998811
matrix	O	O:0.962273
.	O	O:0.999343
	
The	O	O:0.999787
normal	O	O:0.974393
64-bit	O	O:0.998795
double-precision	O	O:0.998799
floating	O	O:0.999581
point	O	O:0.998422
has	O	O:0.999932
least	O	O:0.998792
positive	O	O:0.998023
normal	O	O:0.983013
value	O	O:0.999643
2.2E-308	O	O:0.992219
;	O	O:0.999980
storing	O	O:0.998521
logs	O	O:0.999014
gives	O	O:0.999831
you	O	O:0.999849
an	O	O:0.999982
effective	O	O:0.999799
least	O	O:0.999197
positive	O	O:0.998585
normal	O	O:0.933985
1E-	O	O:0.997858
(	O	O:0.999960
1.7E308	O	O:0.975014
)	O	O:0.999571
.	O	O:0.998426
	
index	O	O:0.997448
set	O	O:0.998444
for	O	O:0.999991
each	O	O:0.998993
position	O	O:0.999211
in	O	O:0.999792
the	O	O:0.999525
index	O	O:0.989297
arrays	O	O:0.998368
.	O	O:0.999761
	
I	O	O:0.999971
am	O	O:0.999978
wondering	O	O:0.998344
if	O	O:0.999924
reassigning	O	O:0.999827
temp	O	O:0.987009
[	O	O:0.999996
]	O	O:0.999984
to	O	O:0.999909
a	O	O:0.999998
1-element	O	O:0.998885
shorter	O	O:0.999086
vector	O	O:0.999045
each	O	O:0.999801
time	O	O:0.999714
is	O	O:0.999986
slow	O	O:0.999342
,	O	O:0.999964
would	O	O:0.999756
it	O	O:0.999979
be	O	O:0.999987
faster	O	O:0.999953
to	O	O:0.999908
pre-allocate	O	O:0.999869
a	O	O:0.999970
96-3	O	O:0.990039
length	O	O:0.999542
list	O	O:0.995965
of	O	O:0.999960
vectors	O	O:0.996428
of	O	O:0.999949
length	O	O:0.992291
96	O	O:0.999555
,	O	O:0.999809
95	O	O:0.999976
,	O	O:0.999666
94	O	O:0.999936
...	O	O:0.999233
to	O	O:0.999852
3	O	O:0.999977
?	O	O:0.999966
	
What	O	O:0.997368
would	O	O:0.999673
we	O	O:0.999982
do	O	O:0.999939
,	O	O:0.999997
if	O	O:0.999940
we	O	O:0.999904
wanted	O	O:0.999294
to	O	O:0.999945
change	O	O:0.999852
values	O	O:0.992319
at	O	O:0.999874
indexes	O	O:0.992527
which	O	O:0.999257
are	O	O:0.999962
multiple	O	O:0.999363
of	O	O:0.999965
given	O	O:0.997544
n	O	O:0.999282
,	O	O:0.999997
like	O	O:0.999915
a	O	O:0.999971
[	O	O:0.999928
2	O	O:0.999924
]	O	O:0.999946
,	O	O:0.999904
a	O	O:0.999985
[	O	O:0.999926
4	O	O:0.999925
]	O	O:0.999962
,	O	O:0.999927
a	O	O:0.999988
[	O	O:0.999936
6	O	O:0.999908
]	O	O:0.999968
,	O	O:0.999965
a	O	O:0.999987
[8	O	O:0.997167
]	O	O:0.999839
.....	O	O:0.988864
for	O	O:0.999728
n=2	O	O:0.991038
?	O	O:0.999832
	
Thanks	O	O:0.999756
for	O	O:0.999918
all	O	O:0.999438
the	O	O:0.999661
python	O	O:0.987968
guidance	O	O:0.999101
!	O	O:0.999965
	
I'm	O	O:0.999623
not	O	O:0.999681
really	O	O:0.998823
pro	O	O:0.999533
Matlab	O	O:0.998457
,	O	O:0.999940
but	O	O:0.999858
surely	O	O:0.999312
Stata	O	O:0.998894
can't	O	O:0.999668
be	O	O:0.999980
so	O	O:0.999974
bad	O	O:0.999946
as	O	O:0.999986
to	O	O:0.999939
require	O	O:0.999747
`	O	O:0.999980
adoedit	O	O:0.983309
`	O	O:0.999997
just	O	O:0.997496
to	O	O:0.999993
know	O	O:0.999944
what	O	O:0.999829
algorithm	O	O:0.999833
it	O	O:0.999914
is	O	O:0.999969
using	O	O:0.998930
?	O	O:0.999651
	
This	O	O:0.999753
can	O	O:0.999810
be	O	O:0.999987
found	O	O:0.999848
relatively	O	O:0.999515
easily	O	O:0.999474
by	O	O:0.999981
just	O	O:0.999571
looking	O	O:0.999885
at	O	O:0.999937
points	O	O:0.998169
where	O	O:0.999540
the	O	O:0.999937
potential	O	O:0.995233
exceeds	O	O:0.999913
a	O	O:0.999982
certain	O	O:0.996270
threshold	O	O:0.996805
.	O	O:0.999513
	
Negative	O	O:0.999486
indices	O	O:0.980278
are	O	O:0.999853
interpreted	O	O:0.999888
as	O	O:0.999985
counting	O	O:0.999823
from	O	O:0.999878
the	O	O:0.999972
end	O	O:0.999637
of	O	O:0.999970
the	O	O:0.999880
array	O	O:0.998269
	
I	O	O:0.999910
was	O	O:0.999959
using	O	O:0.995608
unsigned	O	O:0.963989
int	O	O:0.987178
indices	O	O:0.993591
to	O	O:0.999910
speed	O	O:0.999978
up	O	O:0.999906
access	O	O:0.999684
according	O	O:0.999597
to	O	O:0.999014
:	O	O:0.999994
#URL	O	O:0.999487
	
I've	O	O:0.999357
tried	O	O:0.999537
to	O	O:0.999883
vectorise	O	O:0.999806
it	O	O:0.999963
using	O	O:0.999453
numpy	O	O:0.981319
but	O	O:0.998114
I'm	O	O:0.999861
not	O	O:0.998433
really	O	O:0.999818
sure	O	O:0.999705
how	O	O:0.999937
to	O	O:0.999981
do	O	O:0.999995
it	O	O:0.999988
given	O	O:0.999832
that	O	O:0.999877
the	O	O:0.999934
matrix	O	O:0.974606
/	O	O:0.999784
2D	O	O:0.999923
array	O	O:0.999894
gets	O	O:0.999468
changed	O	O:0.999030
on	O	O:0.999981
each	O	O:0.998453
iteration	O	O:0.999696
.	O	O:0.999760
	
Numpy	O	O:0.999079
slicing	O	O:0.999059
x	O	O:0.998171
,	O	O:0.999995
y	O	O:0.999897
,	O	O:0.999987
z	O	O:0.999934
array	O	O:0.999276
for	O	O:0.999976
variable	O	O:0.996767
z	O	O:0.996816
	
I	O	O:0.999675
would	O	O:0.999963
like	O	O:0.999547
to	O	O:0.999971
convert	O	O:0.998813
(	O	O:0.999994
a	O	O:0.999995
more	O	O:0.998419
complicated	O	O:0.999943
form	O	O:0.999975
of	O	O:0.999926
)	O	O:0.999879
the	O	O:0.999663
follwing	O	O:0.998218
Matlab	O	O:0.998985
code	O	O:0.998812
#CODE	O	O:0.999751
	
I	O	O:0.999992
have	O	O:0.999849
a	O	O:0.999953
NumPy	O	O:0.999524
array	O	O:0.994801
'	O	O:0.999838
boolarr	O	O:0.997073
'	O	O:0.999945
of	O	O:0.999524
boolean	O	O:0.997881
type	O	O:0.999382
.	O	O:0.999750
	
If	O	O:0.999915
you	O	O:0.999919
have	O	O:0.999908
only	O	O:0.999775
integers	O	O:0.999987
that	O	O:0.999726
are	O	O:0.999879
between	O	O:0.994763
0	O	O:0.999893
and	O	O:0.999686
n	O	O:0.993661
(	O	O:0.999904
if	O	O:0.999957
not	O	O:0.999724
its	O	O:0.999883
no	O	O:0.999982
problem	O	O:0.999564
to	O	O:0.999991
generalize	O	O:0.999939
to	O	O:0.999981
any	O	O:0.999968
integer	O	O:0.999678
range	O	O:0.997193
unless	O	O:0.995168
its	O	O:0.999924
very	O	O:0.999870
sparse	O	O:0.999296
)	O	O:0.999870
,	O	O:0.999909
the	O	O:0.999984
most	O	O:0.997988
efficient	O	O:0.999880
way	O	O:0.999770
is	O	O:0.999993
the	O	O:0.999919
use	O	O:0.999525
of	O	O:0.999920
take	O	O:0.997933
/	O	O:0.999918
fancy	O	O:0.992911
indexing	O	O:0.994180
:	O	O:0.999814
#CODE	O	O:0.999117
	
Instead	O	O:0.999690
of	O	O:0.999868
2D	O	O:0.999900
coordinates	O	O:0.992347
,	O	O:0.999991
I	O	O:0.999943
use	O	O:0.999690
index	O	O:0.966957
for	O	O:0.999948
every	O	O:0.999267
elements	O	O:0.999059
in	O	O:0.999921
the	O	O:0.999720
matrix	O	O:0.914552
.	O	O:0.999423
	
I	O	O:0.999973
already	O	O:0.999790
tried	O	O:0.998378
converting	O	O:0.998019
the	O	O:0.999916
cols	O	O:0.987294
to	O	O:0.999861
int	O	O:0.999642
but	O	O:0.999962
that	O	O:0.999338
didn't	O	O:0.999746
solve	O	O:0.998931
it	O	O:0.999802
.	O	O:0.999708
	
Although	O	O:0.999107
I'm	O	O:0.999959
sure	O	O:0.999918
there	O	O:0.999013
are	O	O:0.999874
methods	O	O:0.998533
for	O	O:0.999926
applying	O	O:0.996611
RK	O	O:0.999760
to	O	O:0.999875
an	O	O:0.999982
equation	O	O:0.999964
such	O	O:0.999876
as	O	O:0.999994
this	O	O:0.999509
,	O	O:0.999977
I	O	O:0.999981
didn't	O	O:0.999874
find	O	O:0.998834
any	O	O:0.999970
evidence	O	O:0.999628
of	O	O:0.999988
them	O	O:0.999022
in	O	O:0.999898
_Numerical	O	O:0.893129
Recipes_	O	O:0.971903
,	O	O:0.999964
which	O	O:0.999482
I	O	O:0.999992
think	O	O:0.999838
qualifies	O	O:0.999642
that	O	O:0.999873
topic	O	O:0.999847
as	O	O:0.999993
relatively	O	O:0.999406
obscure	O	O:0.998695
;-)	O	O:0.999678
	
When	O	O:0.998601
facing	O	O:0.999828
a	O	O:0.999914
big	O	O:0.996809
computation	O	O:0.997029
,	O	O:0.999951
it	O	O:0.999966
will	O	O:0.998734
run	O	O:0.999882
tests	O	O:0.999754
using	O	O:0.999836
several	O	O:0.982488
implementations	O	O:0.998628
to	O	O:0.999858
find	O	O:0.999879
out	O	O:0.999921
which	O	O:0.998600
is	O	O:0.999968
the	O	O:0.999740
fastest	O	O:0.999278
one	O	O:0.999850
on	O	O:0.999979
our	O	O:0.999971
computer	O	O:0.999655
at	O	O:0.999978
this	O	O:0.998974
moment	O	O:0.997284
.	O	O:0.998865
	
Use	O	O:0.999816
an	O	O:0.999962
array	O	O:0.999748
of	O	O:0.999954
floating	O	O:0.998372
point	O	O:0.998128
numbers	O	O:0.992455
instead	O	O:0.997446
.	O	O:0.999792
	
`	O	O:0.999956
numpy	O	O:0.978876
`	O	O:0.999975
slicing	O	O:0.998301
operations	O	O:0.999927
probably	O	O:0.999446
involve	O	O:0.999270
`	O	O:0.999945
for	O	O:0.998794
`	O	O:0.999988
loops	O	O:0.998162
at	O	O:0.999997
some	O	O:0.999331
level	O	O:0.991100
,	O	O:0.999977
but	O	O:0.999438
they're	O	O:0.999289
implemented	O	O:0.997904
in	O	O:0.999804
c	O	O:0.996611
,	O	O:0.999965
and	O	O:0.999955
provide	O	O:0.998648
a	O	O:0.999802
linear	O	O:0.999200
time	O	O:0.999583
solution	O	O:0.998592
for	O	O:0.999976
this	O	O:0.998722
.	O	O:0.999383
	
I	O	O:0.999984
have	O	O:0.999811
one	O	O:0.999127
question	O	O:0.999244
:	O	O:0.999992
Is	O	O:0.999996
there	O	O:0.999942
only	O	O:0.999771
one	O	O:0.999884
way	O	O:0.999928
to	O	O:0.999957
do	O	O:0.999994
addition	O	O:0.999960
of	O	O:0.999928
two	O	O:0.998272
matrix	O	O:0.995381
?	O	O:0.999860
	
@USER	O	O:0.999298
It	O	O:0.999906
is	O	O:0.999955
now	O	O:0.999510
supported	O	O:0.999862
,	O	O:0.999991
at	O	O:0.999955
least	O	O:0.997727
in	O	O:0.999986
my	O	O:0.999210
version	O	O:0.991489
(	O	O:0.999984
1.7.1	O	O:0.994610
)	O	O:0.999647
.	O	O:0.998569
	
I	O	O:0.999991
know	O	O:0.999750
I	O	O:0.999968
could	O	O:0.999859
start	O	O:0.999409
a	O	O:0.999991
number	O	O:0.998980
of	O	O:0.999965
times	O	O:0.998834
at	O	O:0.999983
random	O	O:0.972485
locations	O	O:0.993981
but	O	O:0.999512
I'm	O	O:0.999660
not	O	O:0.999881
able	O	O:0.999929
to	O	O:0.999976
do	O	O:0.999997
that	O	O:0.999911
with	O	O:0.999984
what	O	O:0.999573
I	O	O:0.999998
am	O	O:0.999990
currently	O	O:0.995251
working	O	O:0.999589
on	O	O:0.999196
and	O	O:0.999980
have	O	O:0.999817
to	O	O:0.999942
use	O	O:0.999991
on	O	O:0.999887
of	O	O:0.999931
these	O	O:0.999738
minimisers	O	O:0.999796
out	O	O:0.999942
of	O	O:0.999856
the	O	O:0.998951
box	O	O:0.997483
.	O	O:0.999560
	
For	O	O:0.999851
small	O	O:0.999405
displacements	O	O:0.999193
of	O	O:0.999678
around	O	O:0.998789
4-5	O	O:0.999337
pixels	O	O:0.991968
,	O	O:0.999989
the	O	O:0.999966
direction	O	O:0.999364
of	O	O:0.999952
vector	O	O:0.998608
calculated	O	O:0.999910
seems	O	O:0.999888
to	O	O:0.999966
be	O	O:0.999999
fine	O	O:0.998819
,	O	O:0.999974
but	O	O:0.999964
the	O	O:0.999972
magnitude	O	O:0.998769
of	O	O:0.999957
the	O	O:0.999875
vector	O	O:0.997922
is	O	O:0.999949
too	O	O:0.999766
small	O	O:0.998386
(	O	O:0.999976
that's	O	O:0.999912
why	O	O:0.999799
I	O	O:0.999981
had	O	O:0.999952
to	O	O:0.999956
multiply	O	O:0.992383
u	O	O:0.999704
,	O	O:0.999979
v	O	O:0.999920
by	O	O:0.999796
3	O	O:0.999928
before	O	O:0.999038
plotting	O	O:0.999968
them	O	O:0.997271
)	O	O:0.999797
.	O	O:0.998019
	
However	O	O:0.999653
,	O	O:0.999870
I	O	O:0.999985
will	O	O:0.999800
need	O	O:0.998913
to	O	O:0.999962
access	O	O:0.999969
all	O	O:0.999761
waveforms	O	O:0.999342
at	O	O:0.999967
some	O	O:0.999684
point	O	O:0.998883
.	O	O:0.999809
	
I've	O	O:0.997681
find	O	O:0.999316
this	O	O:0.999060
:	O	O:0.999930
#URL	O	O:0.999636
but	O	O:0.999960
when	O	O:0.998343
I	O	O:0.999997
try	O	O:0.999966
to	O	O:0.998882
install	O	O:0.999945
this	O	O:0.999785
I	O	O:0.999990
get	O	O:0.999801
an	O	O:0.999451
error	O	O:0.995534
:	O	O:0.999954
#CODE	O	O:0.999342
	
yes	O	O:0.999778
,	O	O:0.999994
I	O	O:0.999996
can	O	O:0.999843
assume	O	O:0.998853
either	O	O:0.999979
that	O	O:0.998776
I	O	O:0.999998
have	O	O:0.999876
g	O	O:0.999285
explicitly	O	O:0.999840
or	O	O:0.999997
that	O	O:0.999884
I	O	O:0.999998
can	O	O:0.999935
sample	O	O:0.999291
x	O	O:0.999903
according	O	O:0.999906
to	O	O:0.999934
g	O	O:0.999043
.	O	O:0.999726
	
`	O	O:0.999940
example	O	O:0.994120
`	O	O:0.999983
is	O	O:0.999964
a	O	O:0.999987
structured	O	O:0.999345
array	O	O:0.999818
consisting	O	O:0.999520
of	O	O:0.999868
two	O	O:0.999743
elements	O	O:0.999733
(	O	O:0.999887
`	O	O:0.999943
(	O	O:0.999917
1	O	O:0.999985
,	O	O:0.999988
2	O	O:0.999955
,	O	O:0.999965
3	O	O:0.999935
)`	O	O:0.999695
and	O	O:0.998582
`	O	O:0.999939
(	O	O:0.999564
4	O	O:0.999977
,	O	O:0.999974
5	O	O:0.999955
,	O	O:0.999975
6	O	O:0.999932
)`)	O	O:0.998627
,	O	O:0.999985
each	O	O:0.999412
element	O	O:0.998586
(	O	O:0.999989
or	O	O:0.999945
'	O	O:0.999894
record	O	O:0.999701
')	O	O:0.999908
having	O	O:0.997406
3	O	O:0.999602
fields	O	O:0.994101
.	O	O:0.999649
	
If	O	O:0.999891
i	O	O:0.999989
have	O	O:0.999690
two	O	O:0.999897
variables	O	O:0.999634
-	O	O:0.999984
where	O	O:0.999940
they	O	O:0.999718
either	O	O:0.999846
are	O	O:0.999879
a	O	O:0.999940
1d	O	O:0.999953
array	O	O:0.999519
of	O	O:0.999974
values	O	O:0.994217
length	O	O:0.999175
n	O	O:0.998340
,	O	O:0.999981
or	O	O:0.999991
are	O	O:0.999839
a	O	O:0.999990
single	O	O:0.999031
value	O	O:0.999601
,	O	O:0.999981
how	O	O:0.999896
do	O	O:0.999913
i	O	O:0.999998
loop	O	O:0.999612
through	O	O:0.999985
them	O	O:0.999380
so	O	O:0.999996
that	O	O:0.999770
I	O	O:0.999999
get	O	O:0.999941
n	O	O:0.997491
values	O	O:0.997974
returned	O	O:0.999635
.	O	O:0.999393
	
For	O	O:0.999932
each	O	O:0.998829
point	O	O:0.999297
in	O	O:0.999981
array	O	O:0.999271
A	O	O:0.999909
,	O	O:0.999957
I	O	O:0.999996
need	O	O:0.999688
to	O	O:0.999915
find	O	O:0.999919
how	O	O:0.999981
many	O	O:0.999014
points	O	O:0.999066
in	O	O:0.999981
array	O	O:0.999698
B	O	O:0.999598
are	O	O:0.999650
within	O	O:0.999623
a	O	O:0.999866
certain	O	O:0.998432
distance	O	O:0.999860
of	O	O:0.999868
it	O	O:0.999542
.	O	O:0.999800
	
It	O	O:0.999982
does	O	O:0.988123
,	O	O:0.999992
but	O	O:0.999840
somehow	O	O:0.999523
it	O	O:0.999772
is	O	O:0.999977
8	O	O:0.999967
times	O	O:0.999132
slower	O	O:0.999980
than	O	O:0.999748
copying	O	O:0.999477
to	O	O:0.999980
numpy	O	O:0.999853
array	O	O:0.999794
:(	O	O:0.999992
I	O	O:0.999980
suppose	O	O:0.999933
the	O	O:0.999613
regular	O	O:0.997085
python	O	O:0.998034
overhead	O	O:0.999858
slows	O	O:0.999799
things	O	O:0.999909
down	O	O:0.999753
much	O	O:0.999932
more	O	O:0.999939
than	O	O:0.999868
a	O	O:0.999972
copy	O	O:0.899216
...	O	O:0.997003
	
It	O	O:0.999923
all	O	O:0.999649
depends	O	O:0.998952
on	O	O:0.999905
its	O	O:0.999898
dependencies	O	O:0.998969
.	O	O:0.999662
	
Is	O	O:0.999991
there	O	O:0.999776
a	O	O:0.999970
way	O	O:0.998474
to	O	O:0.999977
make	O	O:0.999862
an	O	O:0.999986
array	O	O:0.999815
of	O	O:0.999986
such	O	O:0.998653
strings	O	O:0.999491
?	O	O:0.999888
	
`	O	O:0.999849
grid	O	O:0.996289
[	O	O:0.999997
1	O	O:0.999988
]`	O	O:0.999966
can	O	O:0.999486
be	O	O:0.999999
used	O	O:0.999955
as	O	O:0.999935
a	O	O:0.999982
proxy	O	O:0.990493
for	O	O:0.999361
the	O	O:0.999323
index	O	O:0.984875
`	O	O:0.999982
j	O	O:0.995312
`	O	O:0.999975
.	O	O:0.998655
	
After	O	O:0.999915
doing	O	O:0.998446
so	O	O:0.999940
,	O	O:0.999962
I	O	O:0.999990
discovered	O	O:0.999930
that	O	O:0.999605
if	O	O:0.999969
I	O	O:0.999996
tried	O	O:0.999787
to	O	O:0.999832
open	O	O:0.998223
the	O	O:0.999941
IPython	O	O:0.998305
HTML	O	O:0.999780
Notebook	O	O:0.999576
I	O	O:0.999986
got	O	O:0.999929
the	O	O:0.999521
error	O	O:0.997270
message	O	O:0.984403
:	O	O:0.999956
#CODE	O	O:0.999613
	
(	O	O:0.999965
the	O	O:0.999816
new	O	O:0.998912
matrix	O	O:0.961313
would	O	O:0.999961
have	O	O:0.999825
n-2	O	O:0.999930
rows	O	O:0.999663
m-2	O	O:0.999843
columns	O	O:0.999061
)	O	O:0.999751
.	O	O:0.998930
	
and	O	O:0.998364
duplicate	O	O:0.998246
index	O	O:0.999157
values	O	O:0.999611
at	O	O:0.999955
the	O	O:0.999941
correpsonding	O	O:0.994827
sites	O	O:0.994571
within	O	O:0.998342
	
I	O	O:0.999933
found	O	O:0.999931
that	O	O:0.997438
the	O	O:0.999982
best	O	O:0.999285
way	O	O:0.999946
to	O	O:0.999942
produce	O	O:0.999938
small	O	O:0.999660
pdf	O	O:0.999693
files	O	O:0.998310
is	O	O:0.999969
to	O	O:0.999990
save	O	O:0.999982
as	O	O:0.999976
eps	O	O:0.999546
in	O	O:0.999950
matplotlib	O	O:0.995843
and	O	O:0.999965
then	O	O:0.999182
use	O	O:0.999756
epstopdf	O	B-API:0.930059
.	O	O:0.997449
	
You	O	O:0.999852
could	O	O:0.999554
rearrange	O	O:0.999197
the	O	O:0.999933
image	O	O:0.999696
to	O	O:0.999971
put	O	O:0.999919
the	O	O:0.999922
(	O	O:0.999902
0	O	O:0.999972
,	O	O:0.999997
0	O	O:0.999968
)	O	O:0.999909
in	O	O:0.999782
the	O	O:0.999923
middle	O	O:0.988430
with	O	O:0.999846
some	O	O:0.999403
matrix	O	O:0.996965
manipulation	O	O:0.998768
.	O	O:0.999744
	
Please	O	O:0.999508
,	O	O:0.999979
see	O	O:0.999913
the	O	O:0.999954
next	O	O:0.997298
example	O	O:0.997207
:	O	O:0.999984
	
A	O	O:0.997110
function	O	O:0.999894
that	O	O:0.999825
broadcasts	O	O:0.999968
a	O	O:0.999931
scalar	O	O:0.995480
operation	O	O:0.999914
over	O	O:0.999678
an	O	O:0.999959
array	O	O:0.998700
is	O	O:0.999964
called	O	O:0.998526
a	O	O:0.999993
universal	O	O:0.836500
function	O	O:0.998830
,	O	O:0.999975
or	O	O:0.999877
ufunc	O	B-API:0.738380
.	O	O:0.999625
	
may	O	O:0.999064
not	O	O:0.999717
exist	O	O:0.996908
until	O	O:0.999607
the	O	O:0.999949
datasets	O	O:0.999591
get	O	O:0.999847
quite	O	O:0.999831
big	O	O:0.999300
(	O	O:0.999980
maybe	O	O:0.998664
you'll	O	O:0.999878
need	O	O:0.999661
at	O	O:0.999972
least	O	O:0.999149
10,000	O	O:0.999813
rows	O	O:0.998281
per	O	O:0.999948
data	O	O:0.999957
set	O	O:0.997529
)	O	O:0.999819
.	O	O:0.998561
	
Magic	O	O:0.997963
answers	O	O:0.998946
like	O	O:0.999888
this	O	O:0.999392
are	O	O:0.999714
not	O	O:0.999191
really	O	O:0.998896
helpful	O	O:0.997677
because	O	O:0.999958
they	O	O:0.999868
don't	O	O:0.999841
solve	O	O:0.999739
the	O	O:0.999922
problem	O	O:0.992323
.	O	O:0.999706
	
I	O	O:0.999944
think	O	O:0.999917
what	O	O:0.997280
I	O	O:0.999970
was	O	O:0.999988
missing	O	O:0.979050
is	O	O:0.999992
that	O	O:0.999153
I	O	O:0.999996
really	O	O:0.999939
have	O	O:0.999411
a	O	O:0.999935
3	O	O:0.999946
dimensional	O	O:0.994741
array	O	O:0.998851
,	O	O:0.999915
48x365x3	O	O:0.994401
.	O	O:0.998963
	
I	O	O:0.999989
load	O	O:0.999885
a	O	O:0.999978
some	O	O:0.999450
machine	O	O:0.999591
learning	O	O:0.999948
data	O	O:0.999941
from	O	O:0.999921
a	O	O:0.999985
csv	O	O:0.999836
file	O	O:0.998818
.	O	O:0.999709
	
So	O	O:0.999823
I	O	O:0.999994
have	O	O:0.999791
it	O	O:0.999771
running	O	O:0.998857
(	O	O:0.999986
or	O	O:0.999989
at	O	O:0.999924
least	O	O:0.999789
that	O	O:0.999423
assignment	O	O:0.998591
isn't	O	O:0.999686
throwing	O	O:0.999363
an	O	O:0.999655
error	O	O:0.997851
and	O	O:0.999739
it's	O	O:0.999826
compiling	O	O:0.995368
)	O	O:0.999493
!	O	O:0.999743
	
@USER	O	O:0.998663
The	O	O:0.999967
first	O	O:0.996516
function	O	O:0.998092
is	O	O:0.999978
taking	O	O:0.999411
chunks	O	O:0.997591
of	O	O:0.999837
200	O	O:0.999147
items	O	O:0.999866
from	O	O:0.999871
your	O	O:0.999726
huge	O	O:0.999859
array	O	O:0.999117
,	O	O:0.999925
and	O	O:0.999814
copying	O	O:0.999406
those	O	O:0.998668
chunks	O	O:0.999166
to	O	O:0.999975
a	O	O:0.999995
new	O	O:0.998226
,	O	O:0.999982
even	O	O:0.999885
more	O	O:0.999645
ginormous	O	O:0.999686
array	O	O:0.998633
.	O	O:0.999488
	
@USER	O	O:0.994542
:	O	O:0.999978
With	O	O:0.999507
`	O	O:0.999966
where	O	O:0.984801
`	O	O:0.999978
it	O	O:0.999818
looks	O	O:0.999955
definitely	O	O:0.999870
nice	O	O:0.995838
,	O	O:0.999978
but	O	O:0.999979
have	O	O:0.999710
you	O	O:0.999729
consider	O	O:0.999955
also	O	O:0.999922
the	O	O:0.999976
implications	O	O:0.998943
to	O	O:0.999981
performance	O	O:0.999943
when	O	O:0.999330
implementing	O	O:0.999976
with	O	O:0.999592
`	O	O:0.999936
where	O	O:0.994007
`	O	O:0.999973
?	O	O:0.999818
	
Anyone	O	O:0.999405
any	O	O:0.999710
idea	O	O:0.998267
what	O	O:0.999756
this	O	O:0.999887
means	O	O:0.999320
?!	O	O:0.999891
	
Assuming	O	O:0.999599
you	O	O:0.999406
are	O	O:0.999945
using	O	O:0.999788
g++	O	O:0.995250
to	O	O:0.999405
compile	O	O:0.999423
...	O	O:0.999854
have	O	O:0.999707
you	O	O:0.999859
had	O	O:0.999983
different	O	O:0.999297
results	O	O:0.999097
in	O	O:0.999983
any	O	O:0.999892
way	O	O:0.999856
when	O	O:0.996481
experimenting	O	O:0.999837
with	O	O:0.999743
compiler	O	O:0.999191
optimization	O	O:0.999877
flags	O	O:0.998406
?	O	O:0.999962
	
With	O	O:0.999686
the	O	O:0.999948
overhead	O	O:0.999677
of	O	O:0.999978
the	O	O:0.999990
data	O	O:0.999954
structure	O	O:0.999929
you	O	O:0.999958
could	O	O:0.999919
be	O	O:0.999996
looking	O	O:0.999652
at	O	O:0.999746
usage	O	O:0.999708
much	O	O:0.997106
higher	O	O:0.999396
than	O	O:0.999615
that	O	O:0.999575
--	O	O:0.999995
I	O	O:0.999959
can't	O	O:0.999941
say	O	O:0.999711
how	O	O:0.999924
much	O	O:0.999848
because	O	O:0.999671
I	O	O:0.999987
don't	O	O:0.999938
know	O	O:0.997794
the	O	O:0.999900
memory	O	O:0.995757
model	O	O:0.990347
behind	O	O:0.999122
SciPy	O	O:0.999507
/	O	O:0.999565
numpy	O	O:0.988449
.	O	O:0.999703
	
I	O	O:0.999990
have	O	O:0.999849
serious	O	O:0.999212
doubt	O	O:0.999860
that	O	O:0.999782
adding	O	O:0.999835
two	O	O:0.999531
numpy	O	O:0.998359
arrays	O	O:0.998986
is	O	O:0.999986
a	O	O:0.999902
bottleneck	O	O:0.999828
that	O	O:0.999902
you	O	O:0.999958
can	O	O:0.999890
solve	O	O:0.999966
rewriting	O	O:0.999893
things	O	O:0.999608
in	O	O:0.999889
C	O	O:0.998774
.	O	O:0.999683
	
Where	O	O:0.999788
exactly	O	O:0.997557
is	O	O:0.999984
the	O	O:0.999900
error	O	O:0.999276
occurring	O	O:0.999310
?	O	O:0.999879
	
I	O	O:0.999980
frequently	O	O:0.999897
convert	O	O:0.979554
16-bit	O	O:0.999781
grayscale	O	O:0.999102
image	O	O:0.999949
data	O	O:0.999841
to	O	O:0.999863
8-b	O	O:0.999989
it	O	O:0.999963
image	O	O:0.999971
data	O	O:0.999886
for	O	O:0.999928
display	O	O:0.993996
.	O	O:0.999055
	
Reduce	O	O:0.997257
it	O	O:0.999974
to	O	O:0.999995
a	O	O:0.999995
1	O	O:0.999877
/	O	O:0.999848
10	O	O:0.999830
resolution	O	O:0.999591
,	O	O:0.999993
find	O	O:0.999781
the	O	O:0.999943
one	O	O:0.999200
white	O	O:0.999556
pixel	O	O:0.997263
,	O	O:0.999985
and	O	O:0.999973
then	O	O:0.999192
you	O	O:0.999988
have	O	O:0.999939
a	O	O:0.999986
precise	O	O:0.999724
idea	O	O:0.999798
of	O	O:0.999965
where	O	O:0.998578
to	O	O:0.999975
search	O	O:0.999422
for	O	O:0.999950
the	O	O:0.999467
centroid	O	O:0.993570
.	O	O:0.999736
	
I	O	O:0.999979
ran	O	O:0.999872
a	O	O:0.999991
test	O	O:0.990968
to	O	O:0.999967
compare	O	O:0.999636
the	O	O:0.999964
times	O	O:0.995997
,	O	O:0.999978
and	O	O:0.999838
found	O	O:0.999775
that	O	O:0.996996
my	O	O:0.999753
method	O	O:0.997459
is	O	O:0.999919
faster	O	O:0.999797
by	O	O:0.999970
quite	O	O:0.999425
a	O	O:0.999943
bit	O	O:0.994229
,	O	O:0.999927
but	O	O:0.999498
Freddie	O	O:0.997404
Witherdon	O	O:0.996318
'	O	O:0.999955
s	O	O:0.999914
suggestion	O	O:0.999315
is	O	O:0.999997
even	O	O:0.993318
faster	O	O:0.999725
.	O	O:0.999269
	
I	O	O:0.999926
couldn't	O	O:0.999905
find	O	O:0.998610
it	O	O:0.999950
in	O	O:0.999976
the	O	O:0.999807
OLS	O	O:0.999533
recipe	O	O:0.996927
(	O	O:0.999978
#URL	O	O:0.999652
)	O	O:0.999637
.	O	O:0.998957
	
convert	O	O:0.993388
binary	O	O:0.999322
string	O	O:0.999184
to	O	O:0.999911
numpy	O	O:0.999813
array	O	O:0.998467
	
How	O	O:0.999805
to	O	O:0.999971
know	O	O:0.999922
where	O	O:0.999301
warning	O	O:0.999845
come	O	O:0.999644
from	O	O:0.999798
in	O	O:0.999856
Python	O	O:0.999600
	
How	O	O:0.999950
do	O	O:0.999862
I	O	O:0.999995
add	O	O:0.999961
a	O	O:0.999954
title	O	O:0.998825
to	O	O:0.999969
my	O	O:0.999970
MatPlotLib	O	O:0.999472
basemap	O	O:0.989239
?	O	O:0.999957
	
It	O	O:0.999880
might	O	O:0.999625
help	O	O:0.998393
issue	O	O:0.999855
of	O	O:0.999944
things	O	O:0.999257
refusing	O	O:0.997613
to	O	O:0.999407
update	O	O:0.998816
,	O	O:0.999973
and	O	O:0.999932
at	O	O:0.999926
the	O	O:0.999569
least	O	O:0.991199
it	O	O:0.999941
will	O	O:0.999611
be	O	O:0.999943
faster	O	O:0.999331
.	O	O:0.998638
	
For	O	O:0.999828
future	O	O:0.998861
use	O	O:0.999675
you	O	O:0.997328
should	O	O:0.999312
really	O	O:0.999405
find	O	O:0.999348
out	O	O:0.999895
why	O	O:0.999747
it	O	O:0.998952
is	O	O:0.999952
installed	O	O:0.999768
in	O	O:0.999981
a	O	O:0.999887
location	O	O:0.999726
that	O	O:0.998153
isn't	O	O:0.999614
searched	O	O:0.999803
by	O	O:0.999819
python	O	O:0.999277
by	O	O:0.999892
default	O	O:0.996064
.	O	O:0.999627
	
I've	O	O:0.999515
done	O	O:0.999751
that	O	O:0.998765
and	O	O:0.999963
I'm	O	O:0.999935
still	O	O:0.997078
getting	O	O:0.998909
the	O	O:0.999861
same	O	O:0.999347
error	O	O:0.999622
-	O	O:0.999999
it	O	O:0.999955
can't	O	O:0.999875
find	O	O:0.999891
the	O	O:0.999926
sip	O	O:0.999165
module	O	O:0.997408
.	O	O:0.999639
	
ImportError	O	O:0.998177
:	O	O:0.999931
DLL	O	O:0.999521
load	O	O:0.997483
failed	O	O:0.997814
:	O	O:0.999975
The	O	O:0.999921
specified	O	O:0.999826
module	O	O:0.996202
could	O	O:0.999425
not	O	O:0.999890
be	O	O:0.999944
found	O	O:0.997884
.	O	O:0.999342
	
This	O	O:0.999560
has	O	O:0.999714
happened	O	O:0.999706
previously	O	O:0.988178
(	O	O:0.999950
and	O	O:0.999666
I	O	O:0.999904
was	O	O:0.999849
not	O	O:0.999771
able	O	O:0.999803
to	O	O:0.999952
get	O	O:0.999760
around	O	O:0.999768
it	O	O:0.999766
)	O	O:0.999651
.	O	O:0.998675
	
@USER	O	O:0.997747
SObolev	O	O:0.990503
:	O	O:0.999994
Histograms	O	O:0.999951
of	O	O:0.999974
the	O	O:0.999906
values	O	O:0.997842
falling	O	O:0.998568
within	O	O:0.999582
a	O	O:0.999990
range	O	O:0.998739
of	O	O:0.999956
keys	O	O:0.990775
where	O	O:0.999853
each	O	O:0.999438
bin	O	O:0.998253
is	O	O:0.999986
of	O	O:0.999941
size	O	O:0.999017
0.1	O	O:0.995352
	
Also	O	O:0.999302
,	O	O:0.999968
now	O	O:0.999970
that	O	O:0.998815
I	O	O:0.999998
look	O	O:0.999621
at	O	O:0.999814
it	O	O:0.999809
,	O	O:0.999988
the	O	O:0.999817
y-axis	O	O:0.998930
limits	O	O:0.997911
haven't	O	O:0.999941
been	O	O:0.998374
set	O	O:0.999508
right	O	O:0.997956
.	O	O:0.999740
	
I've	O	O:0.998400
looked	O	O:0.999222
for	O	O:0.999941
various	O	O:0.997547
solutions	O	O:0.999726
to	O	O:0.999981
my	O	O:0.999966
problem	O	O:0.999057
but	O	O:0.999859
can't	O	O:0.999659
get	O	O:0.999608
any	O	O:0.999853
help	O	O:0.976427
.	O	O:0.999502
	
I	O	O:0.999990
normally	O	O:0.999557
use	O	O:0.999759
something	O	O:0.999817
akin	O	O:0.998505
to	O	O:0.999977
the	O	O:0.999991
following	O	O:0.995607
for	O	O:0.999972
this	O	O:0.999868
purpose	O	O:0.995542
and	O	O:0.999869
the	O	O:0.999774
result	O	O:0.990908
is	O	O:0.999976
a	O	O:0.999989
very	O	O:0.999820
nice	O	O:0.999884
plot	O	O:0.997293
where	O	O:0.999545
x1	O	O:0.999265
,	O	O:0.999935
x2	O	O:0.999449
and	O	O:0.999664
x3	O	O:0.999614
are	O	O:0.999559
defined	O	O:0.999833
as	O	O:0.999897
follows	O	O:0.997908
	
And	O	O:0.999514
I	O	O:0.999995
have	O	O:0.999911
all	O	O:0.999233
of	O	O:0.999993
them	O	O:0.994037
installed	O	O:0.999647
.	O	O:0.999197
	
When	O	O:0.995378
I	O	O:0.999997
save	O	O:0.999911
these	O	O:0.999641
plots	O	O:0.999352
to	O	O:0.999954
pdf	O	O:0.999601
,	O	O:0.999986
it	O	O:0.999991
takes	O	O:0.999780
a	O	O:0.999993
long	O	O:0.999920
time	O	O:0.999832
to	O	O:0.999876
write	O	O:0.999869
,	O	O:0.999954
and	O	O:0.999945
reading	O	O:0.998814
the	O	O:0.999742
pdf	O	O:0.988127
is	O	O:0.999989
even	O	O:0.997300
worse	O	O:0.999852
.	O	O:0.999615
	
Seems	O	O:0.999869
like	O	O:0.999642
a	O	O:0.999985
security	O	O:0.999256
setting	O	O:0.999541
on	O	O:0.999845
OS	O	O:0.999954
X	O	O:0.998832
is	O	O:0.999975
preventing	O	O:0.997607
it	O	O:0.999825
,	O	O:0.999942
and	O	O:0.999929
the	O	O:0.999869
quick	O	O:0.989317
fix	O	O:0.999855
seems	O	O:0.999929
to	O	O:0.999994
be	O	O:0.999998
to	O	O:0.999969
run	O	O:0.999935
apache	O	O:0.999761
as	O	O:0.999939
root	O	O:0.997066
.	O	O:0.999756
	
Any	O	O:0.999792
ideas	O	O:0.999524
how	O	O:0.999728
to	O	O:0.999976
deal	O	O:0.998854
with	O	O:0.999980
this	O	O:0.999807
problem	O	O:0.999465
?	O	O:0.999945
	
If	O	O:0.999918
I	O	O:0.999961
remove	O	O:0.999483
the	O	O:0.995764
function	O	O:0.996167
and	O	O:0.999866
put	O	O:0.998465
its	O	O:0.999944
body	O	O:0.999921
back	O	O:0.999373
under	O	O:0.999749
the	O	O:0.999801
"	O	O:0.999581
if	O	O:0.999960
name	O	O:0.999821
==	O	O:0.999895
'	O	O:0.999975
main	O	O:0.996717
'"	O	O:0.999902
block	O	O:0.995545
,	O	O:0.999973
it	O	O:0.999948
works	O	O:0.999863
as	O	O:0.999964
expected	O	O:0.999072
(	O	O:0.999995
like	O	O:0.999744
in	O	O:0.999948
the	O	O:0.999832
original	O	O:0.999504
code	O	O:0.999046
)	O	O:0.999940
.	O	O:0.999335
	
Seems	O	O:0.999886
like	O	O:0.999770
a	O	O:0.999992
bit	O	O:0.999146
of	O	O:0.999952
searching	O	O:0.994701
would	O	O:0.999707
have	O	O:0.999616
turned	O	O:0.999838
up	O	O:0.999858
[	O	O:0.999972
how	O	O:0.999928
to	O	O:0.999983
set	O	O:0.999921
custom	O	O:0.999800
ticks	O	O:0.999506
]	O	O:0.999899
(	O	O:0.999873
#URL	O	O:0.999842
)	O	O:0.999917
,	O	O:0.999971
where	O	O:0.999879
the	O	O:0.999844
defined	O	O:0.993226
`	O	O:0.999969
t11	O	O:0.988933
`	O	O:0.999980
is	O	O:0.999933
where	O	O:0.999761
you	O	O:0.999676
would	O	O:0.999669
write	O	O:0.999894
out	O	O:0.999945
A	O	O:0.999903
,	O	O:0.999970
B	O	O:0.999767
,	O	O:0.999955
C	O	O:0.999474
,	O	O:0.999966
and	O	O:0.999692
D	O	O:0.998280
.	O	O:0.999141
	
@USER	O	O:0.997512
,	O	O:0.999990
that	O	O:0.999123
would	O	O:0.999882
require	O	O:0.999354
to	O	O:0.999993
have	O	O:0.999990
root	O	O:0.999691
access	O	O:0.998538
(	O	O:0.999997
sudo	O	O:0.994256
)	O	O:0.999955
which	O	O:0.998199
i	O	O:0.999996
dont	O	O:0.999838
have	O	O:0.998228
!	O	O:0.999977
	
Any	O	O:0.999809
suggestions	O	O:0.998080
how	O	O:0.999980
this	O	O:0.999874
can	O	O:0.999705
work	O	O:0.999279
?	O	O:0.999981
	
Any	O	O:0.999911
help	O	O:0.981723
would	O	O:0.999790
be	O	O:0.999967
appreciated	O	O:0.999557
in	O	O:0.999356
understanding	O	O:0.999667
what	O	O:0.998402
I	O	O:0.999992
am	O	O:0.999984
missing	O	O:0.985434
.	O	O:0.999385
	
How	O	O:0.999956
can	O	O:0.999675
I	O	O:0.999997
add	O	O:0.999980
the	O	O:0.998165
`	O	O:0.999744
P_g	O	B-API:0.927447
`	O	O:0.999986
values	O	O:0.998857
from	O	O:0.999980
each	O	O:0.999555
section	O	O:0.999985
to	O	O:0.999989
their	O	O:0.999970
respective	O	O:0.999093
column	O	O:0.998404
?	O	O:0.999983
	
Is	O	O:0.999984
there	O	O:0.999830
any	O	O:0.999797
other	O	O:0.999567
python	O	O:0.993233
package	O	O:0.999589
that	O	O:0.996811
would	O	O:0.999934
help	O	O:0.995022
?	O	O:0.999988
	
I'm	O	O:0.999803
having	O	O:0.999738
a	O	O:0.999940
problem	O	O:0.995960
,	O	O:0.999992
where	O	O:0.999395
I	O	O:0.999976
can't	O	O:0.999957
do	O	O:0.999960
a	O	O:0.999996
step	O	O:0.999515
graph	O	O:0.999861
of	O	O:0.999930
2	O	O:0.999912
lists	O	O:0.998952
I	O	O:0.999993
have	O	O:0.998568
,	O	O:0.999949
in	O	O:0.999966
which	O	O:0.998852
I	O	O:0.999984
need	O	O:0.999954
list	O	O:0.972221
`	O	O:0.999993
x	O	O:0.990759
`	O	O:0.999996
to	O	O:0.999966
be	O	O:0.999999
the	O	O:0.999967
x	O	O:0.997945
values	O	O:0.997865
,	O	O:0.999995
in	O	O:0.999941
which	O	O:0.999898
each	O	O:0.999127
`	O	O:0.999967
x	O	O:0.997345
[	O	O:0.999997
j	O	O:0.999915
]`	O	O:0.999957
value	O	O:0.999479
will	O	O:0.999337
add	O	O:0.999947
with	O	O:0.999362
`	O	O:0.999813
x	O	O:0.998777
[	O	O:0.999994
j+1	O	O:0.999863
]`	O	O:0.999978
value	O	O:0.998700
for	O	O:0.999988
each	O	O:0.999069
step	O	O:0.997291
.	O	O:0.999785
	
The	O	O:0.999878
best	O	O:0.999678
thing	O	O:0.998718
would	O	O:0.998795
we	O	O:0.999971
if	O	O:0.999971
one	O	O:0.999909
could	O	O:0.999297
integrate	O	O:0.993039
it	O	O:0.999989
into	O	O:0.999919
the	O	O:0.999997
label	O	O:0.976079
of	O	O:0.999983
the	O	O:0.999693
colorbar	O	O:0.999566
(	O	O:0.999994
to	O	O:0.999987
say	O	O:0.999998
the	O	O:0.999970
color	O	O:0.999857
means	O	O:0.999542
A	O	O:0.999935
in	O	O:0.999992
units	O	O:0.998519
of	O	O:0.999954
B	O	O:0.999889
where	O	O:0.999512
B	O	O:0.999738
includes	O	O:0.999854
the	O	O:0.999949
order	O	O:0.999718
of	O	O:0.999976
magnitude	O	O:0.998610
)	O	O:0.999865
.	O	O:0.998064
	
ive	O	O:0.999678
tried	O	O:0.999627
to	O	O:0.999761
fix	O	O:0.999746
it	O	O:0.999972
with	O	O:0.999920
setting	O	O:0.999446
ax	O	O:0.968431
limits	O	O:0.994991
but	O	O:0.999935
that	O	O:0.999580
does	O	O:0.998782
not	O	O:0.999698
work	O	O:0.997095
.	O	O:0.999783
	
@USER	O	O:0.998590
:	O	O:0.999968
I	O	O:0.999992
added	O	O:0.999959
some	O	O:0.998191
more	O	O:0.999411
info	O	O:0.997941
and	O	O:0.999988
also	O	O:0.999764
a	O	O:0.999989
code	O	O:0.995354
used	O	O:0.998804
.	O	O:0.998072
	
If	O	O:0.999866
I	O	O:0.999958
wanted	O	O:0.999660
to	O	O:0.999936
make	O	O:0.999949
a	O	O:0.999977
combined	O	O:0.999009
image	O	O:0.999917
like	O	O:0.999507
the	O	O:0.999925
one	O	O:0.999484
shown	O	O:0.998943
below	O	O:0.998805
(	O	O:0.999995
original	O	O:0.996554
source	O	O:0.999965
here	O	O:0.999528
)	O	O:0.999900
,	O	O:0.999705
	
When	O	O:0.998469
you	O	O:0.999816
**	O	O:0.999714
add	O	O:0.999502
**	O	O:0.999723
two	O	O:0.998771
**	O	O:0.999916
random	O	O:0.989702
variables**	O	O:0.998936
,	O	O:0.999987
the	O	O:0.999957
resulting	O	O:0.999386
density	O	O:0.997027
is	O	O:0.999993
the	O	O:0.999759
**	O	O:0.998678
convolution	O	O:0.998693
**	O	O:0.999963
of	O	O:0.999949
their	O	O:0.998695
**	O	O:0.999130
densities**	O	O:0.977031
.	O	O:0.999537
	
This	O	O:0.999913
made	O	O:0.999588
the	O	O:0.999928
program	O	O:0.995816
work	O	O:0.999786
just	O	O:0.999869
as	O	O:0.999994
in	O	O:0.999824
Windows	O	O:0.998975
,	O	O:0.999967
without	O	O:0.999885
any	O	O:0.995958
other	O	O:0.999581
modifications	O	O:0.998759
necessary	O	O:0.997793
.	O	O:0.999298
	
Using	O	O:0.998221
PySide	O	O:0.994892
in	O	O:0.999968
place	O	O:0.998094
of	O	O:0.999984
PyQt4	O	O:0.998521
results	O	O:0.999021
in	O	O:0.999910
the	O	O:0.999972
same	O	O:0.998933
behavior	O	O:0.999579
.	O	O:0.999926
	
However	O	O:0.999342
,	O	O:0.999971
the	O	O:0.999905
first	O	O:0.999733
item	O	O:0.999930
appears	O	O:0.999865
to	O	O:0.999979
be	O	O:0.999997
a	O	O:0.999936
float	O	O:0.872685
#CODE	O	O:0.998613
	
The	O	O:0.999973
code	O	O:0.999565
below	O	O:0.999804
loads	O	O:0.999773
the	O	O:0.999807
image	O	O:0.999229
data	O	O:0.999537
hosted	O	O:0.999261
on	O	O:0.999915
github	O	O:0.997488
and	O	O:0.999884
plots	O	O:0.989644
it	O	O:0.998727
:	O	O:0.999963
#CODE	O	O:0.999468
	
I	O	O:0.999954
reduce	O	O:0.999714
the	O	O:0.999793
values	O	O:0.997825
to	O	O:0.999937
months	O	O:0.999888
using	O	O:0.998278
:	O	O:0.999599
#CODE	O	O:0.998113
	
That	O	O:0.997952
would	O	O:0.999768
solve	O	O:0.999734
Question	O	O:0.999831
1	O	O:0.999752
.	O	O:0.999516
	
I	O	O:0.999962
modified	O	O:0.999736
you	O	O:0.999369
code	O	O:0.998584
,	O	O:0.999977
and	O	O:0.999985
it	O	O:0.999962
can	O	O:0.999512
product	O	O:0.999893
the	O	O:0.999986
same	O	O:0.999782
ticks	O	O:0.999499
now	O	O:0.999922
.	O	O:0.999808
	
`'	O	O:0.998560
$\xi$	O	O:0.990448
(	O	O:0.999995
r	O	O:0.999551
)	O	O:0.999743
M$_{200}$	O	O:0.964946
13.4	O	O:0.967072
'`	O	O:0.996478
:	O	O:0.999949
several	O	O:0.998447
`	O	O:0.999977
$	O	O:0.997508
`	O	O:0.999979
,	O	O:0.999970
where	O	O:0.999892
you	O	O:0.999018
should	O	O:0.999916
have	O	O:0.999966
only	O	O:0.999861
one	O	O:0.999836
.	O	O:0.999741
	
I	O	O:0.999991
just	O	O:0.999816
completed	O	O:0.999810
a	O	O:0.999983
brute	O	O:0.997823
force	O	O:0.999831
test	O	O:0.978037
running	O	O:0.999708
through	O	O:0.999355
all	O	O:0.999809
permutations	O	O:0.996120
of	O	O:0.999901
[	O	O:0.999955
0	O	O:0.999986
,	O	O:0.999980
1	O	O:0.999930
,	O	O:0.999965
2	O	O:0.999965
,	O	O:0.999961
3	O	O:0.999928
,	O	O:0.999968
4	O	O:0.999955
,	O	O:0.999988
5	O	O:0.999978
]	O	O:0.999908
for	O	O:0.999738
the	O	O:0.999890
tmp_planes	O	O:0.973877
,	O	O:0.999989
a	O	O:0.999998
total	O	O:0.997796
of	O	O:0.999917
720	O	O:0.998811
different	O	O:0.998572
arrangements	O	O:0.982499
.	O	O:0.999398
	
The	O	O:0.999843
way	O	O:0.999671
to	O	O:0.999683
fix	O	O:0.999947
it	O	O:0.999864
is	O	O:0.999993
using	O	O:0.999619
pip	O	O:0.932544
,	O	O:0.999940
as	O	O:0.999907
mentioned	O	O:0.998387
by	O	O:0.999770
@USER	O	O:0.999022
.	O	O:0.999164
	
Do	O	O:0.999927
you	O	O:0.999976
mean	O	O:0.998753
a	O	O:0.999998
scatterplot	O	O:0.999350
of	O	O:0.999994
your	O	O:0.998596
dataset	O	O:0.998938
instead	O	O:0.999016
?	O	O:0.999940
	
Plotting	O	O:0.995821
subplots	O	O:0.999266
with	O	O:0.999900
secondary	O	O:0.999721
continuous	O	O:0.999096
y-axis	O	O:0.999939
across	O	O:0.999745
all	O	O:0.999642
subplots	O	O:0.997972
	
However	O	O:0.999682
,	O	O:0.999915
I	O	O:0.999996
want	O	O:0.999845
to	O	O:0.999629
be	O	O:1.000000
able	O	O:0.999755
to	O	O:0.999984
call	O	O:0.999414
something	O	O:0.999951
or	O	O:0.999701
write	O	O:0.999834
some	O	O:0.999960
code	O	O:0.999707
which	O	O:0.999987
then	O	O:0.999853
skips	O	O:0.999992
any	O	O:0.999956
value	O	O:0.999469
in	O	O:0.999906
the	O	O:0.999920
array	O	O:0.996516
which	O	O:0.999022
would	O	O:0.999302
cause	O	O:0.999934
this	O	O:0.999973
error	O	O:0.999655
,	O	O:0.999988
then	O	O:0.999024
ignoring	O	O:0.999982
that	O	O:0.999604
row	O	O:0.999879
altogether	O	O:0.999732
.	O	O:0.999406
	
Any	O	O:0.999911
help	O	O:0.980624
would	O	O:0.999777
be	O	O:0.999949
appreciated	O	O:0.999023
.	O	O:0.997721
	
You	O	O:0.999616
are	O	O:0.999787
typing	O	O:0.999799
your	O	O:0.999720
code	O	O:0.999798
in	O	O:0.999989
at	O	O:0.999946
the	O	O:0.999888
bash	O	O:0.982700
(	O	O:0.999995
terminal	O	O:0.998421
)	O	O:0.999975
prompt	O	O:0.987390
,	O	O:0.999993
not	O	O:0.999483
the	O	O:0.999654
Python	O	O:0.998356
interpreter	O	O:0.999713
prompt	O	O:0.995222
.	O	O:0.999615
	
Also	O	O:0.999302
,	O	O:0.999993
if	O	O:0.999925
you	O	O:0.999978
take	O	O:0.999765
a	O	O:0.999997
look	O	O:0.997312
at	O	O:0.999950
Rob's	O	O:0.995865
answer	O	O:0.998792
,	O	O:0.999962
its	O	O:0.999882
far	O	O:0.999951
simpler	O	O:0.999950
than	O	O:0.999545
the	O	O:0.999968
example	O	O:0.999570
shown	O	O:0.999683
on	O	O:0.999995
the	O	O:0.999915
website	O	O:0.997455
.	O	O:0.999598
	
MPL	O	O:0.999309
is	O	O:0.999979
a	O	O:0.999932
big	O	O:0.998900
project	O	O:0.998284
with	O	O:0.999932
lots	O	O:0.999311
of	O	O:0.999982
moving	O	O:0.993755
parts	O	O:0.995376
,	O	O:0.999987
any	O	O:0.999944
help	O	O:0.995168
keep	O	O:0.999905
them	O	O:0.999932
up	O	O:0.999756
is	O	O:0.999910
appreciated	O	O:0.996225
.	O	O:0.999036
	
I	O	O:0.999980
am	O	O:0.999995
less	O	O:0.998077
certain	O	O:0.999769
if	O	O:0.999986
I	O	O:0.999998
am	O	O:0.999983
solving	O	O:0.999321
the	O	O:0.999876
correct	O	O:0.998881
problem	O	O:0.998367
.	O	O:0.999803
	
I	O	O:0.999970
am	O	O:0.999986
having	O	O:0.999039
a	O	O:0.999977
problem	O	O:0.996781
getting	O	O:0.999493
matplotlib	O	O:0.997457
to	O	O:0.999879
work	O	O:0.999727
well	O	O:0.999390
with	O	O:0.999914
interactive	O	O:0.995200
plotting	O	O:0.998364
...	O	O:0.999335
what	O	O:0.999498
I	O	O:0.999995
see	O	O:0.999881
is	O	O:0.999993
that	O	O:0.998050
after	O	O:0.999984
displaying	O	O:0.999833
a	O	O:0.999842
few	O	O:0.999755
frames	O	O:0.999704
of	O	O:0.999975
my	O	O:0.999807
simulated	O	O:0.999802
data	O	O:0.999805
matplotlib	O	O:0.996773
hangs-and	O	O:0.999474
doesn't	O	O:0.999847
display	O	O:0.998990
any	O	O:0.999851
more	O	O:0.995237
.	O	O:0.999407
	
If	O	O:0.999926
anyone	O	O:0.999586
has	O	O:0.999814
any	O	O:0.999783
idea	O	O:0.999650
,	O	O:0.999987
I	O	O:0.999994
appreciate	O	O:0.999752
the	O	O:0.999582
help	O	O:0.978942
.	O	O:0.999783
	
You	O	O:0.999927
can	O	O:0.999884
populate	O	O:0.999737
a	O	O:0.999989
general	O	O:0.991316
2d	O	O:0.999932
array	O	O:0.998836
by	O	O:0.999710
:	O	O:0.999989
Zhu	O	O:0.999983
shows	O	O:0.999818
in	O	O:0.999978
the	O	O:0.999905
answer	O	O:0.998768
below	O	O:0.995875
.	O	O:0.999624
	
Have	O	O:0.999531
a	O	O:0.999981
look	O	O:0.984890
at	O	O:0.999973
this	O	O:0.999164
example	O	O:0.989168
:	O	O:0.999924
#CODE	O	O:0.999498
	
That	O	O:0.998361
way	O	O:0.999528
,	O	O:0.999970
it	O	O:0.999875
is	O	O:0.999991
possible	O	O:0.999553
to	O	O:0.999987
see	O	O:0.999986
2	O	O:0.999995
dots	O	O:0.999645
on	O	O:0.999980
the	O	O:0.999979
same	O	O:0.999689
place	O	O:0.997144
.	O	O:0.999970
	
This	O	O:0.999839
error	O	O:0.999919
shows	O	O:0.999878
up	O	O:0.999958
when	O	O:0.999358
the	O	O:0.999995
size	O	O:0.999941
of	O	O:0.999984
a	O	O:0.999917
and	O	O:0.999824
b	O	O:0.993952
(	O	O:0.999948
taking	O	O:0.999780
from	O	O:0.999514
above	O	O:0.999843
example	O	O:0.999876
)	O	O:0.999553
is	O	O:0.999935
not	O	O:0.999614
the	O	O:0.999968
same	O	O:0.999320
-	O	O:0.999996
so	O	O:0.999989
,	O	O:0.999997
128	O	O:0.999676
x-values	O	O:0.999410
here	O	O:0.999114
should	O	O:0.999917
be	O	O:0.999968
plotted	O	O:0.998682
against	O	O:0.997869
128	O	O:0.998481
y-values	O	O:0.983858
.	O	O:0.999351
	
[	O	O:0.999905
These	O	O:0.999715
should	O	O:0.999794
all	O	O:0.999577
be	O	O:0.999874
installed	O	O:0.999627
into	O	O:0.999144
/	O	O:0.999939
usr	O	O:0.987003
/	O	O:0.999788
local	O	O:0.885471
/	O	O:0.999770
Cellar	O	O:0.991266
,	O	O:0.999968
which	O	O:0.998800
is	O	O:0.999972
the	O	O:0.999596
default	O	O:0.997878
install	O	O:0.997403
location	O	O:0.999864
for	O	O:0.999877
homebrew	O	O:0.997320
.	O	O:0.999750
]	O	O:0.999647
	
I'm	O	O:0.999711
trying	O	O:0.998969
to	O	O:0.999966
make	O	O:0.999437
an	O	O:0.999983
exponential	O	O:0.999165
fit	O	O:0.999515
to	O	O:0.999964
find	O	O:0.999923
the	O	O:0.999861
Lyapunov	O	O:0.999623
Exponent	O	O:0.998983
of	O	O:0.999988
this	O	O:0.999942
data	O	O:0.999844
,	O	O:0.999967
however	O	O:0.999896
,	O	O:0.999922
I	O	O:0.999997
keep	O	O:0.997482
getting	O	O:0.999366
this	O	O:0.999320
error	O	O:0.997521
:	O	O:0.999925
#CODE	O	O:0.999139
	
So	O	O:0.999911
I	O	O:0.999991
wrote	O	O:0.999858
an	O	O:0.999439
argument	O	O:0.999351
`	O	O:0.999915
origin=	O	O:0.998121
'	O	O:0.999973
lower	O	O:0.998344
'`	O	O:0.999561
.	O	O:0.996901
	
Note	O	O:0.999960
that	O	O:0.999313
I	O	O:0.999993
don't	O	O:0.999904
reduce	O	O:0.998655
to	O	O:0.999880
2	O	O:0.999995
,	O	O:0.999980
I	O	O:0.999992
reduce	O	O:0.999331
to	O	O:0.999299
10000	O	O:0.999445
,	O	O:0.999919
and	O	O:0.999975
then	O	O:0.999387
extract	O	O:0.999605
the	O	O:0.999977
first	O	O:0.996405
2	O	O:0.999796
.	O	O:0.999639
	
which	O	O:0.999822
you	O	O:0.999924
can	O	O:0.999763
run	O	O:0.999934
with	O	O:0.999980
this	O	O:0.999732
sample	O	O:0.999480
code	O	O:0.995576
:	O	O:0.999987
#CODE	O	O:0.999483
	
Try	O	O:0.999895
converting	O	O:0.999878
your	O	O:0.998965
the	O	O:0.999957
pandas	O	O:0.999557
data	O	O:0.999946
series	O	O:0.999463
to	O	O:0.999994
lists	O	O:0.999907
or	O	O:0.999991
numpy	O	O:0.996107
array	O	O:0.999735
before	O	O:0.998893
plotting	O	O:0.994147
.	O	O:0.998370
	
If	O	O:0.999938
I	O	O:0.999985
de-homogenize	O	O:0.999934
only	O	O:0.998320
the	O	O:0.999985
last	O	O:0.999670
column	O	O:0.999943
I	O	O:0.999997
can	O	O:0.999971
find	O	O:0.999870
the	O	O:0.999982
center	O	O:0.999886
of	O	O:0.999964
where	O	O:0.999230
the	O	O:0.999973
ellipse	O	O:0.996435
was	O	O:0.999837
projected	O	O:0.996997
,	O	O:0.999991
but	O	O:0.999805
I	O	O:0.999818
would	O	O:0.999922
like	O	O:0.999555
to	O	O:0.999989
see	O	O:0.999994
some	O	O:0.999739
shape	O	O:0.999878
information	O	O:0.999850
as	O	O:0.999969
well	O	O:0.993326
.	O	O:0.999667
	
Ignoring	O	O:0.998670
a	O	O:0.999898
problem	O	O:0.994653
doesn't	O	O:0.999020
fix	O	O:0.998473
it	O	O:0.999596
.	O	O:0.999723
	
Will	O	O:0.996718
add	O	O:0.999786
the	O	O:0.999864
code	O	O:0.994365
.	O	O:0.999850
	
I	O	O:0.999936
found	O	O:0.999933
that	O	O:0.998349
in	O	O:0.999983
the	O	O:0.999910
folder	O	O:0.998654
C	O	O:0.998712
:\	O	O:0.999203
Program	O	O:0.991523
Files\Python27\DLLs	O	O:0.999668
I	O	O:0.999987
cann't	O	O:0.999893
find	O	O:0.999153
the	O	O:0.999902
_socket	O	O:0.994701
file	O	O:0.997899
	
The	O	O:0.999636
index	O	O:0.990224
is	O	O:0.999794
zero-based	O	O:0.995943
.	O	O:0.999371
	
The	O	O:0.999788
image	O	O:0.999597
ggd4	O	O:0.997730
for	O	O:0.999718
the	O	O:0.999985
test	O	O:0.953657
can	O	O:0.999875
be	O	O:0.999997
downloaded	O	O:0.999940
from	O	O:0.995060
:	O	O:0.999920
	
Load	O	O:0.998709
the	O	O:0.999956
data	O	O:0.999510
sets	O	O:0.999626
individually	O	O:0.999848
,	O	O:0.999966
and	O	O:0.999923
then	O	O:0.999607
plot	O	O:0.999067
each	O	O:0.999541
one	O	O:0.999826
individually	O	O:0.998901
.	O	O:0.999588
	
Have	O	O:0.999208
you	O	O:0.999427
looked	O	O:0.999087
at	O	O:0.999944
mplot3d	O	O:0.996090
on	O	O:0.999932
matplotlib	O	O:0.998777
?	O	O:0.999958
	
The	O	O:0.999915
columns	O	O:0.998330
are	O	O:0.999780
floats	O	O:0.999475
,	O	O:0.999963
I'm	O	O:0.999959
not	O	O:0.999746
using	O	O:0.998881
the	O	O:0.999395
index	O	O:0.989216
of	O	O:0.999849
integers	O	O:0.997825
.	O	O:0.999881
	
Incidentally	O	O:0.996818
(	O	O:0.999974
for	O	O:0.999872
someone	O	O:0.999166
reading	O	O:0.999598
this	O	O:0.999712
in	O	O:0.999983
the	O	O:0.999893
future	O	O:0.999222
as	O	O:0.999965
you	O	O:0.999925
know	O	O:0.999964
yours	O	O:0.999833
)	O	O:0.999957
if	O	O:0.999877
you	O	O:0.999980
need	O	O:0.999248
to	O	O:0.999977
find	O	O:0.999997
your	O	O:0.999792
current	O	O:0.999559
Python	O	O:0.999857
version	O	O:0.999899
you	O	O:0.999930
can	O	O:0.999706
simply	O	O:0.999991
type	O	O:0.999724
`	O	O:0.999977
python	O	O:0.994349
-V	O	O:0.999700
`	O	O:0.999861
in	O	O:0.999758
the	O	O:0.999636
command	O	O:0.998285
line	O	O:0.999249
and	O	O:0.999886
it'll	O	O:0.999102
return	O	O:0.981014
the	O	O:0.999283
details	O	O:0.996667
,	O	O:0.999983
for	O	O:0.999938
example	O	O:0.999701
mine	O	O:0.997840
returns	O	O:0.998963
:	O	O:0.999921
	
The	O	O:0.999966
code	O	O:0.998143
is	O	O:0.999981
located	O	O:0.999202
at	O	O:0.999631
	
find	O	O:0.999332
the	O	O:0.999989
file	O	O:0.999810
from	O	O:0.999849
the	O	O:0.999977
link	O	O:0.998848
	
@USER	O	O:0.993658
:	O	O:0.999975
What	O	O:0.999922
do	O	O:0.999968
you	O	O:0.999969
mean	O	O:0.994887
?	O	O:0.999987
	
Thank	O	O:0.998967
you	O	O:0.999672
in	O	O:0.999969
advance	O	O:0.999825
for	O	O:0.999959
any	O	O:0.999919
help	O	O:0.998226
you	O	O:0.999709
can	O	O:0.999952
give	O	O:0.999953
me	O	O:0.999948
	
how	O	O:0.999850
i	O	O:0.999986
can	O	O:0.999700
add	O	O:0.999965
vector	O	O:0.998852
arrows	O	O:0.999263
starting	O	O:0.999916
from	O	O:0.998195
0	O	O:0.999943
,	O	O:0.999991
0	O	O:0.999852
and	O	O:0.999887
end	O	O:0.998678
at	O	O:0.999881
the	O	O:0.999622
points	O	O:0.998330
that	O	O:0.999459
i	O	O:0.999995
want	O	O:0.999691
?	O	O:0.999837
	
If	O	O:0.999953
you	O	O:0.999887
want	O	O:0.999821
the	O	O:0.999899
sum	O	O:0.983412
(	O	O:0.999986
not	O	O:0.999634
the	O	O:0.999985
integral	O	O:0.999138
)	O	O:0.999965
to	O	O:0.999883
be	O	O:0.999996
one	O	O:0.999314
#CODE	O	O:0.998077
	
As	O	O:0.999900
I	O	O:0.999995
have	O	O:0.999811
no	O	O:0.999901
idea	O	O:0.999708
how	O	O:0.999981
long	O	O:0.999415
`	O	O:0.999958
data_all	O	O:0.859679
`	O	O:0.999946
is	O	O:0.999910
,	O	O:0.999993
I	O	O:0.999996
created	O	O:0.999718
a	O	O:0.999618
(	O	O:0.999977
random	O	O:0.993763
)	O	O:0.999919
array	O	O:0.997562
,	O	O:0.999957
which	O	O:0.999084
in	O	O:0.999947
my	O	O:0.999952
case	O	O:0.999202
turned	O	O:0.999915
out	O	O:0.999862
to	O	O:0.999977
give	O	O:0.999964
a	O	O:0.999986
2D	O	O:0.999893
array	O	O:0.999495
with	O	O:0.999663
512	O	O:0.997561
columns	O	O:0.997669
(	O	O:0.999989
lucky	O	O:0.999951
shot	O	O:0.999250
)	O	O:0.999754
.	O	O:0.999062
	
Do	O	O:0.999918
you	O	O:0.999963
mean	O	O:0.996813
something	O	O:0.999893
like	O	O:0.999788
this	O	O:0.999437
:	O	O:0.999918
	
Can	O	O:0.999684
you	O	O:0.999949
copy	O	O:0.980427
and	O	O:0.999985
paste	O	O:0.998390
the	O	O:0.999967
code	O	O:0.999720
lines	O	O:0.999462
described	O	O:0.999854
in	O	O:0.999994
your	O	O:0.999060
comment	O	O:0.998950
,	O	O:0.999983
please	O	O:0.998594
?	O	O:0.999907
	
When	O	O:0.997176
I	O	O:0.999982
print	O	O:0.999261
this	O	O:0.999406
in	O	O:0.999783
A3	O	O:0.990637
(	O	O:0.999951
good	O	O:0.999904
size	O	O:0.999763
)	O	O:0.999952
it	O	O:0.999858
still	O	O:0.999035
almost	O	O:0.999893
unreadable	O	O:0.999277
because	O	O:0.999422
the	O	O:0.999941
letters	O	O:0.987305
are	O	O:0.999870
stacking	O	O:0.999370
in	O	O:0.999982
each	O	O:0.999090
other	O	O:0.999645
.	O	O:0.999601
	
I	O	O:0.999985
mean	O	O:0.997908
my	O	O:0.999909
grid	O	O:0.997503
is	O	O:0.999975
20	O	O:0.999737
units	O	O:0.994254
in	O	O:0.999951
x	O	O:0.999142
direction	O	O:0.999632
however	O	O:0.999896
,	O	O:0.999993
my	O	O:0.999854
resulting	O	O:0.999762
plot	O	O:0.978923
is	O	O:0.999989
10	O	O:0.999822
units	O	O:0.995703
in	O	O:0.999964
x	O	O:0.998784
direction	O	O:0.999868
with	O	O:0.999894
replica	O	O:0.999751
plot	O	O:0.999480
from	O	O:0.999860
10	O	O:0.999948
to	O	O:0.999974
20	O	O:0.999976
units	O	O:0.984284
.	O	O:0.999677
	
Now	O	O:0.999819
how	O	O:0.999664
to	O	O:0.999954
plot	O	O:0.999264
[	O	O:0.999988
M	O	O:0.999918
,	O	O:0.999990
F	O	O:0.999878
+	O	O:0.999894
other	O	O:0.999447
]	O	O:0.999803
	
To	O	O:0.999960
specify	O	O:0.999901
that	O	O:0.999827
you	O	O:0.999957
want	O	O:0.999868
the	O	O:0.999820
first	O	O:0.999253
interval	O	O:0.998347
filled	O	O:0.999773
with	O	O:0.998964
"	O	O:0.999957
pure	O	O:0.996723
"	O	O:0.999966
black	O	O:0.993977
,	O	O:0.999990
set	O	O:0.998389
`	O	O:0.999798
vmin=mean	O	O:0.979724
(	O	O:0.999997
lvls	O	O:0.997905
[:	O	O:0.999985
1	O	O:0.999868
])`	O	O:0.999697
in	O	O:0.999971
your	O	O:0.999651
example	O	O:0.997930
.	O	O:0.999738
	
Your	O	O:0.999157
Data	O	O:0.998972
looks	O	O:0.998722
pretty	O	O:0.998977
good	O	O:0.998846
without	O	O:0.999789
any	O	O:0.998429
filtering	O	O:0.998661
,	O	O:0.999976
your	O	O:0.999436
"	O	O:0.999935
outlieres	O	O:0.998160
"	O	O:0.999930
all	O	O:0.999826
have	O	O:0.999589
a	O	O:0.999977
very	O	O:0.999234
big	O	O:0.999747
error	O	O:0.998754
and	O	O:0.999351
won't	O	O:0.999113
affect	O	O:0.998411
the	O	O:0.999669
fit	O	O:0.991456
much	O	O:0.998294
.	O	O:0.999809
	
This	O	O:0.999394
is	O	O:0.999984
a	O	O:0.999985
terribly	O	O:0.999378
unclear	O	O:0.998164
answer	O	O:0.999391
,	O	O:0.999953
at	O	O:0.999941
least	O	O:0.999743
some	O	O:0.999644
comment	O	O:0.998763
in	O	O:0.999974
the	O	O:0.999984
code	O	O:0.999346
or	O	O:0.999993
explanation	O	O:0.999810
of	O	O:0.999964
why	O	O:0.999891
this	O	O:0.999857
helps	O	O:0.999722
floating	O	O:0.999453
point	O	O:0.998850
error	O	O:0.999091
would	O	O:0.999534
be	O	O:0.999976
nice	O	O:0.999113
.	O	O:0.999457
	
I	O	O:0.999984
produce	O	O:0.999612
a	O	O:0.999951
histogram	O	O:0.999380
where	O	O:0.998944
I	O	O:0.999991
put	O	O:0.999854
the	O	O:0.999399
weights	O	O:0.939162
in	O	O:0.999968
the	O	O:0.999905
parameter	O	O:0.997309
#CODE	O	O:0.998983
	
Besides	O	O:0.999485
,	O	O:0.999980
I	O	O:0.999993
see	O	O:0.999989
that	O	O:0.999673
you	O	O:0.999972
use	O	O:0.999769
`	O	O:0.999971
numpy	O	O:0.959972
`	O	O:0.999979
in	O	O:0.999953
your	O	O:0.999969
code	O	O:0.999851
,	O	O:0.999998
so	O	O:0.999995
you	O	O:0.999817
can	O	O:0.999945
save	O	O:0.999822
and	O	O:0.999987
load	O	O:0.999880
file	O	O:0.999804
by	O	O:0.999901
`	O	O:0.999993
numpy	O	O:0.969608
`	O	O:0.999997
with	O	O:0.999620
a	O	O:0.999998
more	O	O:0.999035
compact	O	O:0.999098
codes	O	O:0.998966
like	O	O:0.999956
this	O	O:0.999898
without	O	O:0.999521
using	O	O:0.996789
the	O	O:0.996307
`	O	O:0.999368
csv	O	O:0.970996
`	O	O:0.999985
module	O	O:0.992351
.	O	O:0.999842
	
Usually	O	O:0.999582
these	O	O:0.999749
sorts	O	O:0.999577
of	O	O:0.999959
simple	O	O:0.999268
array	O	O:0.999793
reshaping	O	O:0.999842
operations	O	O:0.999557
can	O	O:0.999859
be	O	O:0.999999
done	O	O:0.999877
in	O	O:0.999977
a	O	O:0.999992
couple	O	O:0.998522
of	O	O:0.999946
lines	O	O:0.997007
with	O	O:0.999864
Numpy	O	O:0.999060
,	O	O:0.999993
so	O	O:0.999941
I	O	O:0.999995
feel	O	O:0.999941
like	O	O:0.999286
I'm	O	O:0.999968
missing	O	O:0.998465
something	O	O:0.994975
.	O	O:0.999106
	
I	O	O:0.999960
don't	O	O:0.999897
see	O	O:0.999853
any	O	O:0.999902
way	O	O:0.999812
I	O	O:0.999971
could	O	O:0.999770
do	O	O:0.999954
that	O	O:0.999534
.	O	O:0.999842
	
Look	O	O:0.999439
at	O	O:0.999902
the	O	O:0.999896
docs	O	O:0.984046
:	O	O:0.999974
#CODE	O	O:0.999710
	
To	O	O:0.999889
fix	O	O:0.999952
that	O	O:0.999530
we	O	O:0.999997
turn	O	O:0.999506
the	O	O:0.999976
frame	O	O:0.999827
off	O	O:0.999892
on	O	O:0.999966
`	O	O:0.999989
ax1	O	O:0.994945
`	O	O:0.999943
(	O	O:0.999963
so	O	O:0.999998
we	O	O:0.999996
can	O	O:0.999926
see	O	O:0.999989
`	O	O:0.999988
ax2	O	O:0.994144
`)	O	O:0.999664
.	O	O:0.997396
	
At	O	O:0.999908
one	O	O:0.999911
point	O	O:0.999372
I	O	O:0.999966
was	O	O:0.999992
able	O	O:0.999201
to	O	O:0.999968
trick	O	O:0.999818
it	O	O:0.999988
into	O	O:0.999840
working	O	O:0.999983
from	O	O:0.998707
the	O	O:0.999937
console	O	O:0.999291
by	O	O:0.999977
installing	O	O:0.999967
some	O	O:0.999855
thing	O	O:0.999746
in	O	O:0.999941
the	O	O:0.999829
virtualenv	O	O:0.982264
,	O	O:0.999975
but	O	O:0.999881
other	O	O:0.999895
things	O	O:0.999812
only	O	O:0.999573
in	O	O:0.999903
the	O	O:0.999863
global	O	O:0.967728
namespace	O	O:0.991123
,	O	O:0.999988
but	O	O:0.999946
I	O	O:0.999961
forgot	O	O:0.999427
how	O	O:0.998275
I	O	O:0.999971
did	O	O:0.999840
it	O	O:0.999192
.	O	O:0.999674
	
(	O	O:0.999958
Technically	O	O:0.999883
we	O	O:0.999981
could	O	O:0.999828
skip	O	O:0.999847
the	O	O:0.999850
`	O	O:0.999463
FigureCanvas	O	B-API:0.953775
`	O	O:0.999651
,	O	O:0.999863
but	O	O:0.999915
it	O	O:0.999937
will	O	O:0.998681
be	O	O:0.999977
needed	O	O:0.999746
as	O	O:0.999985
soon	O	O:0.999870
as	O	O:0.999969
we	O	O:0.999990
want	O	O:0.999666
to	O	O:0.999985
save	O	O:0.999947
the	O	O:0.999988
plot	O	O:0.996773
to	O	O:0.999974
an	O	O:0.999995
image	O	O:0.999825
,	O	O:0.999967
etc	O	O:0.999731
.	O	O:0.999515
)	O	O:0.999704
#CODE	O	O:0.996941
	
But	O	O:0.999911
how	O	O:0.999892
can	O	O:0.998905
I	O	O:1.000000
make	O	O:0.999898
plt	O	O:0.999066
do	O	O:0.999863
all	O	O:0.999981
this	O	O:0.999803
stuff	O	O:0.998327
?	O	O:0.999949
	
From	O	O:0.999869
your	O	O:0.999810
piece	O	O:0.999115
of	O	O:0.999984
code	O	O:0.999109
it	O	O:0.999995
seems	O	O:0.999917
to	O	O:0.999968
me	O	O:0.999999
that	O	O:0.999595
`	O	O:0.999990
clust_data	O	O:0.921163
`	O	O:0.999961
is	O	O:0.999972
already	O	O:0.999561
a	O	O:0.999997
list	O	O:0.994800
of	O	O:0.999953
lists	O	O:0.995939
with	O	O:0.999896
the	O	O:0.999221
correct	O	O:0.999131
shape	O	O:0.999016
and	O	O:0.999991
that	O	O:0.999246
`	O	O:0.999967
cellText	O	O:0.955133
`	O	O:0.999916
after	O	O:0.999010
being	O	O:0.999509
filled	O	O:0.995910
is	O	O:0.999982
going	O	O:0.999464
to	O	O:0.999963
be	O	O:0.999993
the	O	O:0.999991
same	O	O:0.999754
of	O	O:0.999956
`	O	O:0.999983
clust_data	O	O:0.865190
`	O	O:0.999925
.	O	O:0.998520
	
Anaconda	O	O:0.997350
doesn't	O	O:0.999667
by	O	O:0.999901
default	O	O:0.999682
load	O	O:0.998935
pylab	O	O:0.999656
into	O	O:0.999868
IPython	O	O:0.999958
so	O	O:0.999994
you	O	O:0.999969
can	O	O:0.999900
choose	O	O:0.999949
the	O	O:0.999981
backend	O	O:0.993864
after	O	O:0.999822
launching	O	O:0.998204
IPython	O	O:0.995144
.	O	O:0.999481
	
Most	O	O:0.998623
likely	O	O:0.997858
I'll	O	O:0.999540
have	O	O:0.997563
graphs	O	O:0.999501
with	O	O:0.999651
longer	O	O:0.998370
labels	O	O:0.997862
and	O	O:0.999878
if	O	O:0.999799
I	O	O:0.999952
put	O	O:0.999944
them	O	O:0.999544
near	O	O:0.999621
lines	O	O:0.994709
,	O	O:0.999979
it'll	O	O:0.999523
look	O	O:0.997611
messy	O	O:0.996130
.	O	O:0.999486
	
The	O	O:0.999928
lines	O	O:0.996460
are	O	O:0.999630
random	O	O:0.991288
within	O	O:0.997118
ranges	O	O:0.998915
that	O	O:0.999830
cause	O	O:0.999918
clustering	O	O:0.999945
of	O	O:0.999971
lines	O	O:0.998134
;	O	O:0.999998
a	O	O:0.999957
behavior	O	O:0.999203
I	O	O:0.999922
wanted	O	O:0.998998
to	O	O:0.998972
verify	O	O:0.999376
.	O	O:0.999602
	
have	O	O:0.999543
those	O	O:0.999889
lists	O	O:0.999680
all	O	O:0.999574
the	O	O:0.999968
same	O	O:0.997205
length	O	O:0.999286
aka	O	O:0.999899
would	O	O:0.998938
it	O	O:0.999972
be	O	O:0.999996
directly	O	O:0.999755
compatible	O	O:0.999321
witha	O	O:0.999053
2d	O	O:0.999939
numpy	O	O:0.997690
array	O	O:0.999530
?	O	O:0.999949
	
Any	O	O:0.999691
assistance	O	O:0.998527
will	O	O:0.998460
be	O	O:0.999941
appreciated	O	O:0.997676
.	O	O:0.997754
	
I	O	O:0.999993
have	O	O:0.999607
another	O	O:0.998978
working	O	O:0.999762
project	O	O:0.995216
where	O	O:0.999800
the	O	O:0.999943
toolbar	O	O:0.996709
is	O	O:0.999974
in	O	O:0.999907
the	O	O:0.999989
same	O	O:0.999911
panel	O	O:0.998750
as	O	O:0.999998
the	O	O:0.999834
canvas	O	O:0.992814
,	O	O:0.999990
and	O	O:0.999890
I	O	O:0.999985
think	O	O:0.999824
that	O	O:0.999075
might	O	O:0.999756
be	O	O:0.999977
the	O	O:0.999933
key	O	O:0.999307
difference	O	O:0.999362
between	O	O:0.998438
the	O	O:0.999973
two	O	O:0.996187
.	O	O:0.999812
	
any	O	O:0.998909
of	O	O:0.999649
#CODE	O	O:0.995126
	
Which	O	O:0.999698
way	O	O:0.999168
is	O	O:0.999944
the	O	O:0.999889
easiest	O	O:0.998536
to	O	O:0.999978
load	O	O:0.999951
all	O	O:0.999950
txt	O	O:0.999777
files	O	O:0.997342
?	O	O:0.999945
	
(	O	O:0.999815
Note	O	O:0.999980
that	O	O:0.999615
F	O	O:0.999546
is	O	O:0.999990
not	O	O:0.999228
given	O	O:0.999118
in	O	O:0.999981
the	O	O:0.999969
data	O	O:0.996637
,	O	O:0.999975
but	O	O:0.999941
you	O	O:0.999911
gave	O	O:0.999511
it	O	O:0.999994
as	O	O:0.999983
an	O	O:0.999978
example	O	O:0.998818
)	O	O:0.999732
	
Now	O	O:0.999557
I	O	O:0.999993
need	O	O:0.999572
to	O	O:0.999487
put	O	O:0.999981
this	O	O:0.999947
plot	O	O:0.996343
in	O	O:0.999968
a	O	O:0.999940
PyQt	O	O:0.998963
form	O	O:0.998204
.	O	O:0.999484
	
Where	O	O:0.997379
is	O	O:0.999975
the	O	O:0.999696
URL	O	O:0.999442
API	O	O:0.999784
documented	O	O:0.999398
?	O	O:0.999913
	
Are	O	O:0.999915
there	O	O:0.999825
any	O	O:0.999508
other	O	O:0.996968
option	O	O:0.998246
?	O	O:0.999944
	
You	O	O:0.999912
need	O	O:0.999800
some	O	O:0.999748
criteria	O	O:0.999843
to	O	O:0.999975
select	O	O:0.999933
out	O	O:0.999961
the	O	O:0.999118
"	O	O:0.999928
best	O	O:0.998715
"	O	O:0.999968
in	O	O:0.999972
your	O	O:0.998721
context	O	O:0.994317
.	O	O:0.999747
	
What	O	O:0.999616
do	O	O:0.999942
you	O	O:0.999983
mean	O	O:0.998702
when	O	O:0.999920
you	O	O:0.999994
say	O	O:0.999979
`	O	O:0.999983
the	O	O:0.999796
first	O	O:0.999755
histogram	O	O:0.999689
will	O	O:0.999712
be	O	O:0.999993
the	O	O:0.999970
first	O	O:0.999424
column	O	O:0.999820
as	O	O:0.999988
the	O	O:0.999952
x	O	O:0.999229
values	O	O:0.999367
plotted	O	O:0.999819
against	O	O:0.999817
the	O	O:0.999892
second	O	O:0.999261
column	O	O:0.999809
as	O	O:0.999993
the	O	O:0.999950
y-values	O	O:0.974177
`	O	O:0.999803
.	O	O:0.999409
	
Unfortunately	O	O:0.999125
I	O	O:0.999953
don't	O	O:0.999954
have	O	O:0.999020
any	O	O:0.999936
experience	O	O:0.999755
doing	O	O:0.999899
this	O	O:0.999878
so	O	O:0.999779
won't	O	O:0.999866
be	O	O:0.999993
able	O	O:0.999779
to	O	O:0.999953
help	O	O:0.997668
.	O	O:0.999810
	
A	O	O:0.999856
sample	O	O:0.999267
of	O	O:0.999980
my	O	O:0.999968
data	O	O:0.999848
to	O	O:0.999969
plot	O	O:0.992943
:	O	O:0.999986
#CODE	O	O:0.999726
	
Also	O	O:0.999514
,	O	O:0.999985
I	O	O:0.999973
do	O	O:0.999903
not	O	O:0.999690
want	O	O:0.999711
user	O	O:0.999563
intermediation	O	O:0.999354
at	O	O:0.999927
all	O	O:0.995514
!	O	O:0.999938
	
Rather	O	O:0.999747
than	O	O:0.999594
put	O	O:0.999498
together	O	O:0.999913
an	O	O:0.999959
example	O	O:0.999825
from	O	O:0.999405
scratch	O	O:0.999129
,	O	O:0.999998
there's	O	O:0.999915
an	O	O:0.999893
excellent	O	O:0.999968
example	O	O:0.999068
of	O	O:0.999994
this	O	O:0.999231
written	O	O:0.999256
by	O	O:0.999919
Paul	O	O:0.999558
Ivanov	O	O:0.999413
in	O	O:0.999905
the	O	O:0.999933
matplotlib	O	O:0.997692
examples	O	O:0.995994
(	O	O:0.999992
It's	O	O:0.999992
only	O	O:0.999675
in	O	O:0.999971
the	O	O:0.999918
current	O	O:0.997800
git	O	O:0.999792
tip	O	O:0.999884
,	O	O:0.999990
as	O	O:0.999940
it	O	O:0.999719
was	O	O:0.999991
only	O	O:0.999805
committed	O	O:0.999962
a	O	O:0.999978
few	O	O:0.999444
months	O	O:0.995750
ago	O	O:0.999370
.	O	O:0.999679
It's	O	O:0.999795
not	O	O:0.999573
on	O	O:0.999968
the	O	O:0.999908
webpage	O	O:0.998526
yet	O	O:0.999795
.	O	O:0.999898
)	O	O:0.999814
.	O	O:0.998291
	
what	O	O:0.999220
to	O	O:0.999969
do	O	O:0.999997
next	O	O:0.999432
?	O	O:0.999970
	
I	O	O:0.999961
think	O	O:0.999718
you'll	O	O:0.998669
find	O	O:0.999466
you	O	O:0.999862
get	O	O:0.999325
better	O	O:0.999975
help	O	O:0.997261
if	O	O:0.999973
you	O	O:0.999945
describe	O	O:0.998435
*	O	O:0.999949
what	O	O:0.999126
*	O	O:0.999863
you're	O	O:0.999846
trying	O	O:0.999795
to	O	O:0.999940
do	O	O:0.999983
,	O	O:0.999990
rather	O	O:0.999966
than	O	O:0.999548
*	O	O:0.999758
how	O	O:0.999844
*	O	O:0.999898
you	O	O:0.999899
want	O	O:0.999897
to	O	O:0.999953
do	O	O:0.999990
it	O	O:0.999946
.	O	O:0.999712
	
(	O	O:0.999899
ie	O	O:0.999993
save	O	O:0.999845
etc	O	O:0.999810
)	O	O:0.999887
.	O	O:0.999328
ill	O	O:0.999964
have	O	O:0.999801
a	O	O:0.999988
look	O	O:0.998390
at	O	O:0.999953
the	O	O:0.999833
toolkits	O	O:0.995378
:D	O	O:0.999908
	
in	O	O:0.999939
place	O	O:0.996915
of	O	O:0.999888
#CODE	O	O:0.998167
	
You	O	O:0.999814
could	O	O:0.999795
cast	O	O:0.999583
the	O	O:0.999992
array	O	O:0.999471
to	O	O:0.999868
a	O	O:0.999996
list	O	O:0.949886
:	O	O:0.999968
#CODE	O	O:0.998427
	
Add	O	O:0.999311
as	O	O:0.999995
many	O	O:0.999131
symlinks	O	O:0.999880
to	O	O:0.999975
the	O	O:0.999999
directory	O	O:0.999618
as	O	O:0.999963
you	O	O:0.999855
wish	O	O:0.999673
,	O	O:0.999981
it	O	O:0.999989
gives	O	O:0.999739
you	O	O:0.999760
fine-grained	O	O:0.999905
control	O	O:0.998704
over	O	O:0.999876
which	O	O:0.999870
packages	O	O:0.998443
you	O	O:0.999962
want	O	O:0.999853
to	O	O:0.999982
make	O	O:0.999948
accessible	O	O:0.999547
.	O	O:0.999509
	
In	O	O:0.999918
the	O	O:0.999799
end	O	O:0.997270
,	O	O:0.999982
I	O	O:0.999995
found	O	O:0.999755
out	O	O:0.999898
that	O	O:0.999422
the	O	O:0.999972
problem	O	O:0.996551
was	O	O:0.999917
simply	O	O:0.999809
that	O	O:0.999882
matplotlib	O	O:0.998407
could	O	O:0.999265
not	O	O:0.999921
find	O	O:0.999835
any	O	O:0.999800
backend	O	O:0.998283
for	O	O:0.999771
plotting	O	O:0.988344
.	O	O:0.998087
	
Please	O	O:0.999329
change	O	O:0.999386
your	O	O:0.999597
title	O	O:0.999524
to	O	O:0.999979
describe	O	O:0.999986
your	O	O:0.999552
_actual_	O	O:0.994419
issue	O	O:0.998954
.	O	O:0.999504
	
If	O	O:0.999938
you	O	O:0.999400
did	O	O:0.999935
not	O	O:0.999820
create	O	O:0.999832
one	O	O:0.999984
when	O	O:0.999450
you	O	O:0.999920
installed	O	O:0.999979
matplotlib	O	O:0.999259
,	O	O:0.999997
you	O	O:0.999936
can	O	O:0.999284
get	O	O:0.999997
this	O	O:0.999988
template	O	O:0.999935
from	O	O:0.999743
the	O	O:0.999951
matplotlib	O	O:0.999148
source	O	O:0.999765
,	O	O:0.999997
or	O	O:0.999996
from	O	O:0.999105
the	O	O:0.999978
matplotlib	O	O:0.999000
website	O	O:0.998334
.	O	O:0.999740
	
I	O	O:0.999983
am	O	O:0.999995
sorry	O	O:0.999556
to	O	O:0.999993
be	O	O:0.999995
so	O	O:0.999985
needy	O	O:0.985118
,	O	O:0.999990
but	O	O:0.999843
I	O	O:0.999985
really	O	O:0.999673
cant	O	O:0.998881
find	O	O:0.999857
any	O	O:0.999631
useful	O	O:0.997377
information	O	O:0.995720
anywhere	O	O:0.996898
.	O	O:0.999142
	
Or	O	O:0.999881
is	O	O:0.999988
there	O	O:0.999001
another	O	O:0.999812
way	O	O:0.999809
to	O	O:0.999789
change	O	O:0.999767
the	O	O:0.999851
size	O	O:0.998214
?	O	O:0.999976
	
I	O	O:0.999972
did	O	O:0.999952
find	O	O:0.998546
the	O	O:0.999944
way	O	O:0.999506
to	O	O:0.999982
make	O	O:0.999962
my	O	O:0.999887
images	O	O:0.996377
almost	O	O:0.999920
what	O	O:0.998165
I	O	O:0.999822
wanted	O	O:0.999716
with	O	O:0.965654
:	O	O:0.999913
#CODE	O	O:0.999717
	
any	O	O:0.999458
idea	O	O:0.998063
?	O	O:0.999891
	
@USER	O	O:0.999055
:	O	O:0.999986
I	O	O:0.999994
suppose	O	O:0.999929
the	O	O:0.999778
specific	O	O:0.999192
way	O	O:0.999633
I	O	O:0.999994
have	O	O:0.999862
it	O	O:0.999920
set	O	O:0.999691
up	O	O:0.999651
would	O	O:0.999618
work	O	O:0.998328
better	O	O:0.999965
if	O	O:0.999972
you	O	O:0.999383
had	O	O:0.999659
,	O	O:0.999995
say	O	O:0.999975
,	O	O:0.999993
a	O	O:0.999962
1000x1000	O	O:0.993079
matrix	O	O:0.977515
,	O	O:0.999979
as	O	O:0.999961
it	O	O:0.999971
lets	O	O:0.999937
numpy	O	O:0.999897
pick	O	O:0.995375
how	O	O:0.999941
the	O	O:0.999991
tics	O	O:0.997611
should	O	O:0.999860
be	O	O:0.999957
spaced	O	O:0.998129
.	O	O:0.999022
	
As	O	O:0.999989
you	O	O:0.999775
can	O	O:0.999855
see	O	O:0.999987
it	O	O:0.999997
only	O	O:0.999856
covers	O	O:0.999983
half	O	O:0.999744
of	O	O:0.999958
the	O	O:0.999262
matrix	O	O:0.955761
.	O	O:0.999356
	
You	O	O:0.999764
iterate	O	O:0.998209
the	O	O:0.999811
items	O	O:0.999061
in	O	O:0.999861
`	O	O:0.999980
glass	O	O:0.960283
`	O	O:0.999880
,	O	O:0.999808
but	O	O:0.999997
then	O	O:0.999750
compare	O	O:0.999585
to	O	O:0.999989
the	O	O:0.999962
whole	O	O:0.999389
list	O	O:0.998762
instead	O	O:0.999979
of	O	O:0.999943
to	O	O:0.999934
the	O	O:0.999994
current	O	O:0.988813
`	O	O:0.999993
item	O	O:0.998135
`	O	O:0.999976
	
If	O	O:0.999977
that	O	O:0.999435
helps	O	O:0.999240
,	O	O:0.999999
this	O	O:0.999746
is	O	O:0.999983
the	O	O:0.999654
process	O	O:0.997583
that	O	O:0.999830
I	O	O:0.999999
am	O	O:0.999997
doing	O	O:0.996034
to	O	O:0.999963
save	O	O:0.998184
and	O	O:0.999942
plot	O	O:0.943535
:	O	O:0.999948
#CODE	O	O:0.999477
	
Please	O	O:0.999543
consider	O	O:0.999467
answering	O	O:0.999974
your	O	O:0.998685
own	O	O:0.999686
question	O	O:0.999698
or	O	O:0.999972
removing	O	O:0.999299
it	O	O:0.999978
all	O	O:0.999851
together	O	O:0.999923
if	O	O:0.999836
you	O	O:0.999899
feel	O	O:0.997311
it	O	O:0.999989
does	O	O:0.999615
not	O	O:0.999762
add	O	O:0.999749
.	O	O:0.999631
	
Now	O	O:0.999491
"	O	O:0.999922
print	O	O:0.975888
zi	O	O:0.998634
"	O	O:0.999837
gives	O	O:0.999313
me	O	O:0.999967
an	O	O:0.999821
array	O	O:0.999762
like	O	O:0.997641
before	O	O:0.994874
but	O	O:0.999889
with	O	O:0.999179
nan	O	O:0.939452
everywhere	O	O:0.999439
.	O	O:0.999821
	
Im	O	O:0.999866
not	O	O:0.999881
by	O	O:0.999971
computer	O	O:0.999806
to	O	O:0.999979
test	O	O:0.993776
.	O	O:0.999871
	
I	O	O:0.999980
want	O	O:0.999838
to	O	O:0.999667
put	O	O:0.999983
my	O	O:0.999892
custom	O	O:0.998242
datetime	O	O:0.986610
format	O	O:0.999309
but	O	O:0.999965
when	O	O:0.996577
I	O	O:0.999990
tried	O	O:0.999978
my	O	O:0.999310
custom	O	O:0.998598
date	O	O:0.999914
format	O	O:0.999572
is	O	O:0.999994
overlapped	O	O:0.999823
over	O	O:0.999937
the	O	O:0.999981
date	O	O:0.999699
given	O	O:0.999669
by	O	O:0.999987
default	O	O:0.999657
by	O	O:0.999900
pandas	O	O:0.999377
plot	O	O:0.986311
.	O	O:0.999688
	
Change	O	O:0.999408
formatting	O	O:0.999435
on	O	O:0.999910
datetime	O	O:0.999022
ticks	O	O:0.999845
when	O	O:0.999857
plotting	O	O:0.999895
daily	O	O:0.997593
mean	O	O:0.997137
with	O	O:0.999791
Pandas	O	O:0.999566
/	O	O:0.999918
matplotlib	O	O:0.989236
	
Any	O	O:0.999764
other	O	O:0.999855
way	O	O:0.999820
to	O	O:0.999960
get	O	O:0.999989
a	O	O:0.999984
similar	O	O:0.998544
effect	O	O:0.999186
?	O	O:0.999920
	
If	O	O:0.999976
you	O	O:0.999856
see	O	O:0.999958
the	O	O:0.999971
right	O	O:0.999842
side	O	O:0.999862
,	O	O:0.999996
the	O	O:0.999995
size	O	O:0.998524
is	O	O:0.999969
changed	O	O:0.998473
.	O	O:0.999728
	
How	O	O:0.999922
can	O	O:0.999565
I	O	O:0.999993
select	O	O:0.999954
multiple	O	O:0.999383
data	O	O:0.999624
points	O	O:0.998647
with	O	O:0.999771
matplotlib	O	O:0.987678
and	O	O:0.999785
export	O	O:0.880766
it	O	O:0.999688
?	O	O:0.999935
	
Two	O	O:0.999868
steps	O	O:0.999465
to	O	O:0.999935
sketch	O	O:0.998481
an	O	O:0.999983
idea	O	O:0.999655
to	O	O:0.999936
solve	O	O:0.999971
this	O	O:0.999210
:	O	O:0.999971
	
This	O	O:0.997586
is	O	O:0.999970
not	O	O:0.999750
necessarily	O	O:0.999466
the	O	O:0.999840
nicest	O	O:0.999303
possible	O	O:0.999831
way	O	O:0.999975
of	O	O:0.999964
doing	O	O:0.997768
things	O	O:0.998295
,	O	O:0.999661
and	O	O:0.999874
you	O	O:0.999698
may	O	O:0.999557
bump	O	O:0.999557
into	O	O:0.999560
resolution	O	O:0.999947
problems	O	O:0.999127
,	O	O:0.999992
as	O	O:0.999985
well	O	O:0.996825
(	O	O:0.999992
check	O	O:0.999203
the	O	O:0.999997
size	O	O:0.999844
of	O	O:0.999988
the	O	O:0.999607
`	O	O:0.999963
mayavi	O	O:0.961301
`	O	O:0.999861
window	O	O:0.994265
)	O	O:0.999824
.	O	O:0.998609
	
Is	O	O:0.999990
there	O	O:0.999823
a	O	O:0.999991
way	O	O:0.999736
I	O	O:0.999973
can	O	O:0.999871
get	O	O:0.999642
y=x	O	O:0.931562
to	O	O:0.999979
show	O	O:0.999966
up	O	O:0.999989
even	O	O:0.999865
if	O	O:0.999987
I	O	O:0.999988
don't	O	O:0.999966
have	O	O:0.997684
a	O	O:0.999999
list	O	O:0.998725
of	O	O:0.999974
all	O	O:0.997136
the	O	O:0.999860
points	O	O:0.998599
that	O	O:0.999695
I	O	O:0.999996
plotted	O	O:0.999491
?	O	O:0.999766
	
Knowing	O	O:0.998641
all	O	O:0.999490
that	O	O:0.999299
,	O	O:0.999997
your	O	O:0.999755
example	O	O:0.997968
becomes	O	O:0.994855
:	O	O:0.999984
#CODE	O	O:0.999475
	
Any	O	O:0.999425
Ideas	O	O:0.999771
what	O	O:0.999431
might	O	O:0.999688
be	O	O:0.999988
the	O	O:0.999888
problem	O	O:0.991143
?	O	O:0.999949
	
It	O	O:0.999821
appear	O	O:0.997305
that	O	O:0.999464
these	O	O:0.999846
disappear	O	O:0.999538
when	O	O:0.998676
I	O	O:0.999994
add	O	O:0.999988
the	O	O:0.998960
`	O	O:0.999376
facecolors=UWR	O	O:0.982684
(	O	O:0.999996
heatmap	O	O:0.997297
)`	O	O:0.999993
property	O	O:0.999242
to	O	O:0.999995
the	O	O:0.999966
`	O	O:0.999946
surf	O	B-API:0.982364
(	O	O:0.999997
...	O	O:0.999485
)`	O	O:0.999673
.	O	O:0.998917
	
Can	O	O:0.999828
you	O	O:0.999947
post	O	O:0.995308
the	O	O:0.999990
full	O	O:0.992549
traceback	O	O:0.999567
?	O	O:0.999960
	
The	O	O:0.999676
full	O	O:0.998672
list	O	O:0.998687
of	O	O:0.999960
positions	O	O:0.881929
is	O	O:0.999973
given	O	O:0.998206
here	O	O:0.999313
:	O	O:0.999973
#URL	O	O:0.999267
	
unutbu's	O	O:0.995573
answer	O	O:0.998661
should	O	O:0.997399
fix	O	O:0.998800
it	O	O:0.999962
everywhere	O	O:0.999251
.	O	O:0.999721
	
how	O	O:0.999760
can	O	O:0.999516
i	O	O:0.999994
insert	O	O:0.982831
the	O	O:0.999939
plot	O	O:0.971052
returned	O	O:0.999969
by	O	O:0.999790
create_predef_plot	O	O:0.999678
into	O	O:0.999189
f2	O	O:0.999318
#CODE	O	O:0.996288
	
And	O	O:0.999849
the	O	O:0.999839
formatted	O	O:0.999567
ones	O	O:0.991759
(	O	O:0.999993
Used	O	O:0.999989
as	O	O:0.999975
_id	O	O:0.998413
of	O	O:0.999972
the	O	O:0.999964
documents	O	O:0.998306
after	O	O:0.999798
using	O	O:0.998766
aggregation	O	O:0.912031
):	O	O:0.999464
#CODE	O	O:0.994876
	
Any	O	O:0.999896
packages	O	O:0.998526
you	O	O:0.999711
accidentally	O	O:0.999815
installed	O	O:0.999877
for	O	O:0.999794
other	O	O:0.999156
Python	O	O:0.998131
installations	O	O:0.999328
,	O	O:0.999992
just	O	O:0.999430
reinstall	O	O:0.999950
them	O	O:0.999432
for	O	O:0.999831
MacPorts	O	O:0.997517
.	O	O:0.998985
	
However	O	O:0.999509
,	O	O:0.999944
other	O	O:0.999893
programs	O	O:0.999876
seem	O	O:0.999947
to	O	O:0.999994
be	O	O:0.999992
ok	O	O:0.999987
with	O	O:0.999587
filling	O	O:0.999303
almost	O	O:0.999299
all	O	O:0.999590
the	O	O:0.999811
memory	O	O:0.989881
before	O	O:0.999031
the	O	O:0.999979
swap	O	O:0.980766
is	O	O:0.999984
used	O	O:0.998998
.	O	O:0.999248
	
I'm	O	O:0.999617
not	O	O:0.999901
sure	O	O:0.999803
how	O	O:0.999926
to	O	O:0.999904
tackle	O	O:0.999975
this	O	O:0.999889
problem	O	O:0.997718
and	O	O:0.999850
any	O	O:0.999850
help	O	O:0.988719
or	O	O:0.999936
direction	O	O:0.998199
would	O	O:0.999861
be	O	O:0.999995
very	O	O:0.999720
appreciated	O	O:0.997049
.	O	O:0.998394
	
i	O	O:0.999905
looked	O	O:0.999575
at	O	O:0.999974
sage	O	O:0.998693
,	O	O:0.999989
the	O	O:0.999904
source	O	O:0.999647
code	O	O:0.998807
is	O	O:0.999998
huge	O	O:0.997973
,	O	O:0.999996
does	O	O:0.999479
it	O	O:0.999969
support	O	O:0.998444
python	O	O:0.999752
out	O	O:0.999971
of	O	O:0.999798
the	O	O:0.998991
box	O	O:0.998725
?	O	O:0.999943
	
If	O	O:0.999967
any	O	O:0.999563
one	O	O:0.999763
know	O	O:0.998625
about	O	O:0.999684
it	O	O:0.999919
then	O	O:0.999310
please	O	O:0.999943
reply	O	O:0.999194
me	O	O:0.999883
.	O	O:0.999453
	
I'll	O	O:0.999654
have	O	O:0.999579
a	O	O:0.999983
look	O	O:0.996926
at	O	O:0.999862
it	O	O:0.999323
	
The	O	O:0.999940
main	O	O:0.997363
issue	O	O:0.998573
is	O	O:0.999993
that	O	O:0.999416
you	O	O:0.999885
can't	O	O:0.999960
make	O	O:0.999814
UI	O	O:0.999991
changes	O	O:0.999851
from	O	O:0.999880
a	O	O:0.999990
separate	O	O:0.999965
process	O	O:0.997784
from	O	O:0.999902
the	O	O:0.999982
main	O	O:0.998750
UI	O	O:0.999977
thread	O	O:0.998995
(	O	O:0.999990
the	O	O:0.999864
one	O	O:0.999950
that	O	O:0.999934
all	O	O:0.999968
of	O	O:0.999996
your	O	O:0.997574
Qt	O	O:0.999994
calls	O	O:0.998918
are	O	O:0.999946
in	O	O:0.998615
)	O	O:0.999401
.	O	O:0.998265
	
I	O	O:0.999974
say	O	O:0.999942
"	O	O:0.999799
quick	O	O:0.996214
fix	O	O:0.999252
"	O	O:0.999908
because	O	O:0.999653
there	O	O:0.999276
are	O	O:0.999966
more	O	O:0.998254
changes	O	O:0.999857
that	O	O:0.999633
could	O	O:0.999847
be	O	O:0.999977
recommended	O	O:0.998782
.	O	O:0.998911
	
Maybe	O	O:0.999815
look	O	O:0.998024
at	O	O:0.999957
the	O	O:0.999611
scikit-learn	O	O:0.999813
docs	O	O:0.998392
for	O	O:0.999914
inspiration	O	O:0.998915
?	O	O:0.999889
	
Labels	O	O:0.999696
are	O	O:0.999881
located	O	O:0.999674
at	O	O:0.999942
the	O	O:0.999660
right	O	O:0.998964
place	O	O:0.984941
,	O	O:0.999978
but	O	O:0.999968
label	O	O:0.858521
is	O	O:0.999944
not	O	O:0.996812
correct	O	O:0.998634
.	O	O:0.999775
	
I	O	O:0.999965
ran	O	O:0.999909
the	O	O:0.999772
following	O	O:0.999838
code	O	O:0.999507
to	O	O:0.999989
get	O	O:0.999984
two	O	O:0.999891
plots	O	O:0.999877
next	O	O:0.999472
to	O	O:0.999994
each	O	O:0.999868
other	O	O:0.999427
(	O	O:0.999988
it	O	O:0.999948
is	O	O:0.999990
a	O	O:0.999970
minimal	O	O:0.988731
working	O	O:0.999461
example	O	O:0.999484
that	O	O:0.999956
you	O	O:0.999954
can	O	O:0.999944
copy	O	O:0.945345
):	O	O:0.999988
#CODE	O	O:0.998911
	
here	O	O:0.997142
is	O	O:0.999982
the	O	O:0.999965
code	O	O:0.999849
where	O	O:0.999875
I	O	O:0.999989
create	O	O:0.999785
the	O	O:0.999915
plot	O	O:0.986500
and	O	O:0.999980
a	O	O:0.999995
picture	O	O:0.985820
of	O	O:0.999939
this	O	O:0.994816
:	O	O:0.999964
	
Admittedly	O	O:0.998732
,	O	O:0.999973
I'm	O	O:0.999915
new	O	O:0.998967
to	O	O:0.999296
pandas	O	O:0.999342
but	O	O:0.999859
it	O	O:0.999840
seems	O	O:0.999925
like	O	O:0.999775
at	O	O:0.999979
every	O	O:0.999783
turn	O	O:0.999516
I	O	O:0.999991
am	O	O:0.999967
stopped	O	O:0.993216
,	O	O:0.999996
by	O	O:0.999984
my	O	O:0.999890
ignorance	O	O:0.999767
no	O	O:0.999914
doubt	O	O:0.995081
,	O	O:0.999979
but	O	O:0.999635
it's	O	O:0.999574
getting	O	O:0.996878
tiresome	O	O:0.998510
.	O	O:0.999645
	
Are	O	O:0.999931
all	O	O:0.999658
of	O	O:0.999989
your	O	O:0.998369
modes	O	O:0.998554
needed	O	O:0.999893
to	O	O:0.999953
demonstrate	O	O:0.999965
the	O	O:0.999944
problem	O	O:0.997984
?	O	O:0.999969
	
Note	O	O:0.999921
that	O	O:0.999561
the	O	O:0.999966
explicit	O	O:0.999314
masking	O	O:0.998141
is	O	O:0.999988
no	O	O:0.999704
longer	O	O:0.999929
necessary	O	O:0.998968
in	O	O:0.999835
matplotlib	O	O:0.999436
master	O	O:0.999684
as	O	O:0.999911
arrays	O	O:0.998697
are	O	O:0.999575
now	O	O:0.999400
masked	O	O:0.998159
automatically	O	O:0.999603
internally	O	O:0.998197
.	O	O:0.999276
	
(	O	O:0.999881
The	O	O:0.999978
disadvantage	O	O:0.995066
is	O	O:0.999925
that	O	O:0.998396
this	O	O:0.999760
method	O	O:0.995237
is	O	O:0.999980
much	O	O:0.999222
less	O	O:0.999326
flexible	O	O:0.998040
.	O	O:0.995811
):	O	O:0.999916
#CODE	O	O:0.998235
	
Python	O	O:0.994140
&	O	O:0.999519
Matplotlib	O	O:0.997942
:	O	O:0.999996
creating	O	O:0.999877
a	O	O:0.999981
chart	O	O:0.998528
first	O	O:0.996774
and	O	O:0.999722
showing	O	O:0.998972
it	O	O:0.999877
at	O	O:0.999976
a	O	O:0.999810
second	O	O:0.994885
moment	O	O:0.992513
	
Put	O	O:0.997160
#CODE	O	O:0.997986
	
If	O	O:0.999964
you	O	O:0.999898
require	O	O:0.999767
a	O	O:0.999985
completely	O	O:0.998966
manual	O	O:0.983836
installation	O	O:0.999157
,	O	O:0.999980
you	O	O:0.999088
should	O	O:0.999878
give	O	O:0.999869
those	O	O:0.999811
instructions	O	O:0.999887
a	O	O:0.999933
thorough	O	O:0.998461
read	O	O:0.989472
.	O	O:0.999467
	
Take	O	O:0.998910
a	O	O:0.999983
look	O	O:0.985616
at	O	O:0.999981
this	O	O:0.999442
example	O	O:0.996618
.	O	O:0.999245
	
I	O	O:0.999979
tried	O	O:0.999784
something	O	O:0.998146
like	O	O:0.999538
that	O	O:0.999765
already	O	O:0.995259
,	O	O:0.999957
but	O	O:0.999943
when	O	O:0.996262
I	O	O:0.999995
plot	O	O:0.999812
each	O	O:0.999751
data	O	O:0.999899
point	O	O:0.999614
individually	O	O:0.999880
in	O	O:0.999978
a	O	O:0.999918
for-loop	O	O:0.999229
,	O	O:0.999957
I	O	O:0.999990
see	O	O:0.999955
no	O	O:0.999795
way	O	O:0.999974
to	O	O:0.999956
use	O	O:0.999986
a	O	O:0.999822
colormap	O	O:0.913932
and	O	O:0.999933
colorbar	O	O:0.999507
for	O	O:0.999928
all	O	O:0.998815
of	O	O:0.999974
them	O	O:0.991399
.	O	O:0.999791
	
Here's	O	O:0.998679
how	O	O:0.999737
to	O	O:0.999965
do	O	O:0.999980
it	O	O:0.999951
:	O	O:0.999996
if	O	O:0.999986
you	O	O:0.999898
find	O	O:0.999921
that	O	O:0.999927
an	O	O:0.999977
answer	O	O:0.999836
has	O	O:0.999852
been	O	O:0.997947
helpful	O	O:0.999766
to	O	O:0.999941
you	O	O:0.999954
,	O	O:0.999997
then	O	O:0.999965
move	O	O:0.999987
your	O	O:0.999973
mouse	O	O:0.999884
over	O	O:0.999926
the	O	O:0.999919
upper	O	O:0.990267
left-hand	O	O:0.996909
corner	O	O:0.999623
of	O	O:0.999993
that	O	O:0.998116
answer	O	O:0.999892
(	O	O:0.999961
where	O	O:0.999178
the	O	O:0.999860
answer	O	O:0.999268
"	O	O:0.999901
score	O	O:0.985719
"	O	O:0.999974
appears	O	O:0.996008
between	O	O:0.991843
two	O	O:0.999965
gray	O	O:0.999778
triangles	O	O:0.998093
)	O	O:0.999592
.	O	O:0.998672
	
Can	O	O:0.999830
you	O	O:0.999711
recommend	O	O:0.999545
any	O	O:0.999925
tutorial	O	O:0.998835
for	O	O:0.999835
MATLAB	O	O:0.998621
speakers	O	O:0.998394
?	O	O:0.999932
	
The	O	O:0.999299
second	O	O:0.999754
plot	O	O:0.996324
keeps	O	O:0.999820
rescaling	O	O:0.999707
the	O	O:0.999657
x-axis	O	O:0.999742
for	O	O:0.999954
me	O	O:0.999957
,	O	O:0.999979
losing	O	O:0.999923
the	O	O:0.999879
overview	O	O:0.999323
of	O	O:0.999974
the	O	O:0.999965
full	O	O:0.999169
column	O	O:0.999138
1	O	O:0.999976
plot	O	O:0.989071
.	O	O:0.999822
	
Thanks	O	O:0.999554
for	O	O:0.999943
the	O	O:0.999607
answer	O	O:0.999055
,	O	O:0.999912
I	O	O:0.999989
searched	O	O:0.999873
for	O	O:0.999574
event	O	O:0.995040
handling	O	O:0.995335
examples	O	O:0.997617
but	O	O:0.999565
could	O	O:0.999509
not	O	O:0.999707
find	O	O:0.999297
it	O	O:0.999929
(	O	O:0.999992
I	O	O:0.999995
am	O	O:0.999992
newbie	O	O:0.998392
to	O	O:0.999982
python	O	O:0.999813
)	O	O:0.999988
,	O	O:0.999956
can	O	O:0.999950
you	O	O:0.999915
please	O	O:0.999814
send	O	O:0.999770
me	O	O:0.999994
link	O	O:0.999821
to	O	O:0.999986
at	O	O:0.999994
least	O	O:0.998944
one	O	O:0.999950
such	O	O:0.999512
example	O	O:0.998001
.	O	O:0.999161
	
You	O	O:0.999771
can	O	O:0.999581
find	O	O:0.999545
it	O	O:0.999988
here	O	O:0.999058
.	O	O:0.999826
	
(	O	O:0.999897
I	O	O:0.999997
know	O	O:0.999810
I	O	O:0.999946
add	O	O:0.999924
nothing	O	O:0.984533
new	O	O:0.990196
,	O	O:0.999961
but	O	O:0.999913
the	O	O:0.999816
straightforward	O	O:0.995517
answer	O	O:0.999650
should	O	O:0.999667
be	O	O:0.999986
visible	O	O:0.998555
)	O	O:0.999396
.	O	O:0.998350
	
So	O	O:0.999954
,	O	O:0.999975
I	O	O:0.999989
don't	O	O:0.999922
even	O	O:0.999258
know	O	O:0.999905
where	O	O:0.999786
to	O	O:0.999919
start	O	O:0.999546
looking	O	O:0.998429
	
When	O	O:0.996279
I	O	O:0.999998
try	O	O:0.999986
to	O	O:0.999849
run	O	O:0.999958
the	O	O:0.999969
example	O	O:0.999195
script	O	O:0.999779
at	O	O:0.999907
	
Thanks	O	O:0.999511
for	O	O:0.999985
your	O	O:0.998451
comment	O	O:0.998997
,	O	O:0.999980
I	O	O:0.999996
have	O	O:0.999553
put	O	O:0.999388
everything	O	O:0.999836
,	O	O:0.999947
I	O	O:0.999989
wanna	O	O:0.999784
plot	O	O:0.856988
(	O	O:0.999992
years	O	O:0.999080
,	O	O:0.999985
Frequency_accidents_years	O	O:0.997676
,	O	O:0.999976
regions	O	O:0.997321
)	O	O:0.999507
	
Via	O	O:0.999280
`	O	O:0.999896
apt-get	O	O:0.874827
`	O	O:0.999893
,	O	O:0.999856
I've	O	O:0.999870
tried	O	O:0.999278
installing	O	O:0.998284
ffmpeg	O	O:0.989609
,	O	O:0.999989
every	O	O:0.997817
codec	O	O:0.996860
imaginable	O	O:0.999499
,	O	O:0.999889
and	O	O:0.999935
even	O	O:0.999180
tried	O	O:0.999840
to	O	O:0.999943
compile	O	O:0.999376
ffmpeg	O	O:0.999911
from	O	O:0.999071
source	O	O:0.998544
.	O	O:0.999918
	
@USER	O	O:0.998468
This	O	O:0.999599
isn't	O	O:0.999716
a	O	O:0.999930
bug	O	O:0.990859
,	O	O:0.999961
but	O	O:0.999885
a	O	O:0.999923
design	O	O:0.977390
choice	O	O:0.997555
.	O	O:0.999448
	
The	O	O:0.999427
left-hand	O	O:0.999370
side	O	O:0.999450
can	O	O:0.999421
,	O	O:0.999996
however	O	O:0.999880
,	O	O:0.999973
contain	O	O:0.999500
any	O	O:0.999922
number	O	O:0.999434
of	O	O:0.999808
elements	O	O:0.997558
,	O	O:0.999928
and	O	O:0.999846
provided	O	O:0.998804
it	O	O:0.999799
is	O	O:0.999988
a	O	O:0.999994
tuple	O	O:0.999493
of	O	O:0.999973
variables	O	O:0.996836
the	O	O:0.999897
unpacking	O	O:0.998025
will	O	O:0.999029
take	O	O:0.999762
place	O	O:0.998261
.	O	O:0.999825
	
You	O	O:0.999896
want	O	O:0.999694
to	O	O:0.999942
look	O	O:0.999906
at	O	O:0.999982
the	O	O:0.999360
OO	O	O:0.999931
interface	O	O:0.997528
,	O	O:0.999990
not	O	O:0.999930
the	O	O:0.999894
state	O	O:0.983994
machine	O	O:0.999692
interface	O	O:0.999847
for	O	O:0.999940
matplotlib	O	O:0.991804
.	O	O:0.998888
	
This	O	O:0.998138
would	O	O:0.999800
be	O	O:0.999913
an	O	O:0.999933
interesting	O	O:0.999810
thing	O	O:0.999183
to	O	O:0.999900
add	O	O:0.999980
to	O	O:0.999959
the	O	O:0.999987
emerging	O	O:0.998865
thoughts	O	O:0.999743
about	O	O:0.999861
semantic	O	O:0.997684
objects	O	O:0.997268
in	O	O:0.999892
mpl	O	O:0.997322
.	O	O:0.999639
	
Maybe	O	O:0.999651
you	O	O:0.999580
could	O	O:0.999947
post	O	O:0.999393
a	O	O:0.999998
sample	O	O:0.997948
of	O	O:0.999992
your	O	O:0.999862
data	O	O:0.999895
array	O	O:0.999496
?	O	O:0.999951
	
I	O	O:0.999819
believe	O	O:0.999930
this	O	O:0.997957
is	O	O:0.999978
because	O	O:0.998862
I'm	O	O:0.999957
plotting	O	O:0.997765
the	O	O:0.999491
image	O	O:0.998304
wrong	O	O:0.998080
and	O	O:0.999612
so	O	O:0.999978
it	O	O:0.999865
is	O	O:0.999994
plotting	O	O:0.998907
all	O	O:0.999768
the	O	O:0.999993
data	O	O:0.999728
as	O	O:0.999955
0	O	O:0.999890
.	O	O:0.999805
	
Try	O	O:0.999702
running	O	O:0.999638
with	O	O:0.997418
`	O	O:0.999932
python	O	O:0.995026
-X	O	O:0.999892
faulthandler	O	O:0.993743
`	O	O:0.999800
and	O	O:0.999500
see	O	O:0.999976
if	O	O:0.999932
you	O	O:0.999934
get	O	O:0.999647
a	O	O:0.999988
useful	O	O:0.999407
traceback	O	O:0.999033
at	O	O:0.999851
the	O	O:0.999764
segfault	O	O:0.996370
.	O	O:0.999635
	
Notice	O	O:0.999164
how	O	O:0.999927
only	O	O:0.999330
one	O	O:0.999973
body	O	O:0.999616
has	O	O:0.999973
been	O	O:0.996821
coloured	O	O:0.999598
,	O	O:0.999990
all	O	O:0.999580
other	O	O:0.999885
disjoint	O	O:0.997876
polygons	O	O:0.998911
remain	O	O:0.997967
white	O	O:0.996965
:	O	O:0.999947
	
Thanks	O	O:0.999077
@USER	O	O:0.999231
,	O	O:0.999985
All	O	O:0.999687
I	O	O:0.999987
want	O	O:0.999863
set	O	O:0.994228
a	O	O:0.999992
plot	O	O:0.985976
title	O	O:0.999789
based	O	O:0.999739
on	O	O:0.999891
the	O	O:0.999935
what	O	O:0.999476
user	O	O:0.999746
is	O	O:0.999991
selected	O	O:0.999718
on	O	O:0.999953
the	O	O:0.999972
plot	O	O:0.988381
,	O	O:0.999995
for	O	O:0.999993
example	O	O:0.999337
if	O	O:0.999926
the	O	O:0.999989
plot	O	O:0.991683
shows	O	O:0.999966
a	O	O:0.999999
data	O	O:0.999959
from	O	O:0.999507
'	O	O:0.999826
Jan	O	O:0.999721
2012	O	O:0.998730
'	O	O:0.999928
to	O	O:0.999753
'	O	O:0.999985
July	O	O:0.997340
2014	O	O:0.997522
'	O	O:0.999923
dynamically	O	O:0.999721
want	O	O:0.999851
to	O	O:0.999892
set	O	O:0.999934
the	O	O:0.999982
title	O	O:0.999310
to	O	O:0.999899
'	O	O:0.999990
Years	O	O:0.998942
'	O	O:0.999878
and	O	O:0.999892
if	O	O:0.999965
the	O	O:0.999817
user	O	O:0.999141
selects	O	O:0.999841
from	O	O:0.999582
'	O	O:0.999938
May	O	O:0.999971
2014	O	O:0.998092
'	O	O:0.999874
to	O	O:0.999773
'	O	O:0.999985
July	O	O:0.997252
2014	O	O:0.996936
'	O	O:0.999958
then	O	O:0.999617
dynamically	O	O:0.999974
want	O	O:0.999856
to	O	O:0.999905
set	O	O:0.999943
the	O	O:0.999982
title	O	O:0.999310
to	O	O:0.999899
'	O	O:0.999990
Months	O	O:0.998813
'	O	O:0.999899
and	O	O:0.999893
if	O	O:0.999965
the	O	O:0.999817
user	O	O:0.999141
selects	O	O:0.999841
from	O	O:0.999465
'	O	O:0.999944
July	O	O:0.999204
2014	O	O:0.998034
'	O	O:0.999891
to	O	O:0.999767
'	O	O:0.999987
July	O	O:0.997191
2104	O	O:0.998730
'	O	O:0.999958
then	O	O:0.999616
dynamically	O	O:0.999974
want	O	O:0.999856
to	O	O:0.999905
set	O	O:0.999943
the	O	O:0.999982
title	O	O:0.999310
to	O	O:0.999906
'	O	O:0.999994
Days	O	O:0.996436
'	O	O:0.999810
.	O	O:0.999583
	
I	O	O:0.999680
would	O	O:0.999958
like	O	O:0.999276
to	O	O:0.999994
know	O	O:0.999967
if	O	O:0.999952
I	O	O:0.999997
have	O	O:0.999880
a	O	O:0.999964
triangular	O	O:0.998614
marker	O	O:0.997301
,	O	O:0.999692
is	O	O:0.999946
it	O	O:0.999954
possible	O	O:0.999680
to	O	O:0.999962
control	O	O:0.999339
its	O	O:0.999866
orientation	O	O:0.999698
?	O	O:0.999955
	
I	O	O:0.999989
like	O	O:0.999839
to	O	O:0.999938
sort	O	O:0.999417
these	O	O:0.999908
points	O	O:0.997813
row	O	O:0.999970
by	O	O:0.999886
row	O	O:0.999543
.	O	O:0.999539
	
Before	O	O:0.998987
comparing	O	O:0.998439
between	O	O:0.998043
these	O	O:0.999635
two	O	O:0.999240
PDFs	O	O:0.999832
,	O	O:0.999952
I	O	O:0.999931
would	O	O:0.999945
like	O	O:0.999690
to	O	O:0.999975
compare	O	O:0.999036
original	O	O:0.999913
time	O	O:0.999898
series	O	O:0.998281
and	O	O:0.999953
the	O	O:0.999949
series	O	O:0.995450
of	O	O:0.999910
Gaussian	O	O:0.999848
distributed	O	O:0.999530
numbers	O	O:0.998887
with	O	O:0.999691
the	O	O:0.999887
standard	O	O:0.997085
deviation	O	O:0.995630
and	O	O:0.999991
mean	O	O:0.997705
from	O	O:0.999299
original	O	O:0.996900
wind	O	O:0.999970
velocity	O	O:0.999578
series	O	O:0.997283
.	O	O:0.999617
	
I	O	O:0.999934
will	O	O:0.999918
like	O	O:0.999349
create	O	O:0.999851
a	O	O:0.999985
alpha	O	O:0.902101
channel	O	O:0.994878
,	O	O:0.999944
for	O	O:0.999957
explanation	O	O:0.997880
I	O	O:0.999992
put	O	O:0.999897
a	O	O:0.999805
example	O	O:0.975983
:	O	O:0.999915
	
The	O	O:0.999403
function	O	O:0.998152
is	O	O:0.999975
supposed	O	O:0.999530
to	O	O:0.999940
be	O	O:0.999981
smooth	O	O:0.998157
and	O	O:0.999669
connect	O	O:0.998465
at	O	O:0.999688
0	O	O:0.999668
and	O	O:0.999867
2	O	O:0.999914
pi	O	O:0.989525
in	O	O:0.999957
the	O	O:0.999974
y	O	O:0.999848
range	O	O:0.999635
of	O	O:0.999875
(	O	O:0.999913
0	O	O:0.999896
,	O	O:0.999986
2pi	O	O:0.997311
)	O	O:0.999699
not	O	O:0.999444
touching	O	O:0.999701
0	O	O:0.999409
and	O	O:0.999460
2pi	O	O:0.994586
.	O	O:0.998049
	
I	O	O:0.999991
have	O	O:0.999887
run	O	O:0.999766
a	O	O:0.999987
similar	O	O:0.997902
script	O	O:0.998527
before	O	O:0.994335
,	O	O:0.999959
and	O	O:0.999670
I	O	O:0.999974
think	O	O:0.999232
I've	O	O:0.999101
imported	O	O:0.999592
all	O	O:0.999230
the	O	O:0.999861
relevant	O	O:0.995060
modules	O	O:0.994616
.	O	O:0.999968
	
The	O	O:0.999742
sample	O	O:0.995200
image	O	O:0.999621
makes	O	O:0.999394
things	O	O:0.999197
clear	O	O:0.998696
.	O	O:0.999552
	
Take	O	O:0.996861
Care	O	O:0.999122
,	O	O:0.999942
George	O	O:0.999210
	
I	O	O:0.999952
don't	O	O:0.999968
know	O	O:0.999279
of	O	O:0.999978
any	O	O:0.999417
movie	O	O:0.996833
format	O	O:0.999762
that	O	O:0.998451
is	O	O:0.999960
vector	O	O:0.993702
based	O	O:0.980863
(	O	O:0.999962
but	O	O:0.999696
I	O	O:0.999987
don't	O	O:0.999912
know	O	O:0.999344
a	O	O:0.999966
lot	O	O:0.999457
about	O	O:0.999591
video	O	O:0.994513
codecs	O	O:0.997642
)	O	O:0.999743
.	O	O:0.998442
	
I	O	O:0.999932
can't	O	O:0.999854
find	O	O:0.998949
anything	O	O:0.999901
like	O	O:0.999808
that	O	O:0.999160
in	O	O:0.999911
the	O	O:0.999805
galery	O	O:0.977926
and	O	O:0.999860
all	O	O:0.999819
my	O	O:0.999913
attempts	O	O:0.999597
do	O	O:0.999977
deal	O	O:0.998982
with	O	O:0.999919
the	O	O:0.999859
colorbar	O	O:0.998164
failed	O	O:0.999018
.	O	O:0.999665
	
I	O	O:0.999978
encourage	O	O:0.999914
you	O	O:0.999334
to	O	O:0.999994
try	O	O:0.999998
all	O	O:0.999908
of	O	O:0.999970
the	O	O:0.999547
great	O	O:0.999338
ideas	O	O:0.999886
people	O	O:0.998345
are	O	O:0.999901
telling	O	O:0.998662
you	O	O:0.998547
,	O	O:0.999956
and	O	O:0.999837
I'm	O	O:0.999841
interested	O	O:0.999798
to	O	O:0.999952
see	O	O:0.999989
if	O	O:0.999995
any	O	O:0.999896
of	O	O:0.999987
them	O	O:0.998366
work	O	O:0.997530
!	O	O:0.999942
	
Have	O	O:0.999345
you	O	O:0.999828
tried	O	O:0.999762
setting	O	O:0.999942
your	O	O:0.998133
backend	O	O:0.999532
to	O	O:0.999955
SVG	O	O:0.999966
so	O	O:0.999995
that	O	O:0.999959
all	O	O:0.999959
of	O	O:0.999992
your	O	O:0.997953
images	O	O:0.999032
are	O	O:0.999823
in	O	O:0.999820
vector	O	O:0.995828
format	O	O:0.998624
?	O	O:0.999915
	
I	O	O:0.999978
appreciate	O	O:0.999865
any	O	O:0.999468
help	O	O:0.991143
:)	O	O:0.999814
	
Would	O	O:0.999305
be	O	O:0.999932
better	O	O:0.999935
to	O	O:0.999849
change	O	O:0.999364
the	O	O:0.999723
title	O	O:0.988736
	
My	O	O:0.999933
csv	O	O:0.990244
is	O	O:0.999983
like	O	O:0.994610
:	O	O:0.999983
id	O	O:0.999520
,	O	O:0.999978
author	O	O:0.999670
,	O	O:0.999975
title	O	O:0.998963
,	O	O:0.999976
language	O	O:0.998558
	
After	O	O:0.999813
making	O	O:0.999396
all	O	O:0.999095
of	O	O:0.999970
the	O	O:0.999178
changes	O	O:0.996696
listed	O	O:0.998842
in	O	O:0.999968
steps	O	O:0.997420
2	O	O:0.999840
and	O	O:0.999374
3	O	O:0.999049
(	O	O:0.999765
and	O	O:0.999919
correcting	O	O:0.999783
the	O	O:0.999950
spelling	O	O:0.999541
of	O	O:0.999886
the	O	O:0.999975
title	O	O:0.999393
)	O	O:0.999977
,	O	O:0.999968
I	O	O:0.999998
get	O	O:0.999774
the	O	O:0.999600
following	O	O:0.997743
very-reasonable-looking	O	O:0.998561
plot	O	O:0.925138
:	O	O:0.999985
	
When	O	O:0.997850
I	O	O:0.999998
look	O	O:0.999627
at	O	O:0.999874
the	O	O:0.999955
plot	O	O:0.969229
,	O	O:0.999994
the	O	O:0.999976
x	O	O:0.998788
range	O	O:0.999942
ends	O	O:0.999883
up	O	O:0.999972
being	O	O:0.999948
from	O	O:0.999385
0	O	O:0.999876
to	O	O:0.999967
12000	O	O:0.998935
.	O	O:0.999611
	
It	O	O:0.999847
was	O	O:0.999941
still	O	O:0.999381
at	O	O:0.999957
-1	O	O:0.999887
when	O	O:0.997179
I	O	O:0.999993
saw	O	O:0.999936
it	O	O:0.999184
.	O	O:0.999699
	
when	O	O:0.997194
the	O	O:0.999922
bad	O	O:0.999858
points	O	O:0.999150
are	O	O:0.999917
deleted	O	O:0.999623
,	O	O:0.999989
the	O	O:0.999984
user	O	O:0.999579
can	O	O:0.999725
click	O	O:0.991068
on	O	O:0.999995
different	O	O:0.999901
buttons	O	O:0.999867
to	O	O:0.999988
classify	O	O:0.999897
the	O	O:0.999897
source	O	O:0.995192
(	O	O:0.999995
lets	O	O:0.999909
say	O	O:0.999969
"	O	O:0.999966
star	O	O:0.998580
"	O	O:0.999884
,	O	O:0.999881
"	O	O:0.999919
galaxy	O	O:0.993390
"	O	O:0.999769
,	O	O:0.999875
"	O	O:0.999901
whatever	O	O:0.998341
")	O	O:0.998537
.	O	O:0.998591
	
Your	O	O:0.999203
`	O	O:0.999900
Z	O	O:0.994861
`	O	O:0.999976
'	O	O:0.999688
array	O	O:0.999853
'	O	O:0.999909
is	O	O:0.999991
actually	O	O:0.999193
a	O	O:0.999995
list	O	O:0.993433
of	O	O:0.999963
numpy	O	O:0.990183
arrays	O	O:0.999768
of	O	O:0.999978
different	O	O:0.994275
lengths	O	O:0.916581
.	O	O:0.999350
	
when	O	O:0.997678
the	O	O:0.999929
2D	O	O:0.999975
array	O	O:0.997426
is	O	O:0.999985
viewed	O	O:0.999763
as	O	O:0.999986
a	O	O:0.999938
color	O	O:0.995774
	
I	O	O:0.999917
looked	O	O:0.999807
through	O	O:0.998090
the	O	O:0.999774
examples	O	O:0.994961
in	O	O:0.999922
MatPlotLib	O	O:0.999937
or	O	O:0.999920
R	O	O:0.999672
and	O	O:0.999991
they	O	O:0.999146
all	O	O:0.999759
seem	O	O:0.999807
to	O	O:0.999939
already	O	O:0.999925
start	O	O:0.998831
with	O	O:0.999770
random	O	O:0.999726
data	O	O:0.999973
to	O	O:0.999985
generate	O	O:0.999971
the	O	O:0.999895
image	O	O:0.998822
.	O	O:0.999597
	
Filtering	O	O:0.997627
spreads	O	O:0.997941
out	O	O:0.999767
the	O	O:0.999593
information	O	O:0.992290
and	O	O:0.999942
makes	O	O:0.998656
the	O	O:0.999832
inner	O	O:0.999334
contours	O	O:0.998134
disappear	O	O:0.994800
.	O	O:0.999758
	
This	O	O:0.998461
is	O	O:0.999985
probably	O	O:0.999085
related	O	O:0.999852
to	O	O:0.999943
upgrading	O	O:0.999955
the	O	O:0.999668
library	O	O:0.991440
,	O	O:0.999907
and	O	O:0.999840
having	O	O:0.999560
old	O	O:0.999810
versions	O	O:0.999637
of	O	O:0.999948
the	O	O:0.999806
javascript	O	O:0.998917
hanging	O	O:0.994992
around	O	O:0.996558
.	O	O:0.999632
	
can	O	O:0.999590
you	O	O:0.999970
explain	O	O:0.999967
your	O	O:0.999975
data	O	O:0.999901
format	O	O:0.999877
in	O	O:0.999976
a	O	O:0.999876
little	O	O:0.998414
more	O	O:0.997259
detail	O	O:0.973846
and	O	O:0.999962
give	O	O:0.999034
us	O	O:0.999981
some	O	O:0.999867
copy	O	O:0.979018
/	O	O:0.999986
paste-able	O	O:0.998871
code	O	O:0.999945
to	O	O:0.999993
create	O	O:0.999977
a	O	O:0.999996
toy	O	O:0.999858
version	O	O:0.999491
of	O	O:0.999870
it	O	O:0.999668
?	O	O:0.999974
	
'	O	O:0.999385
To	O	O:0.999990
open	O	O:0.988094
"	O	O:0.999951
Python	O	O:0.999219
,	O	O:0.999980
"	O	O:0.999906
you	O	O:0.999823
need	O	O:0.999416
to	O	O:0.999952
install	O	O:0.999733
X11	O	O:0.999792
'	O	O:0.999125
.	O	O:0.999590
	
@USER	O	O:0.996868
:	O	O:0.999991
You	O	O:0.999989
can	O	O:0.999964
certainly	O	O:0.999837
change	O	O:0.999643
the	O	O:0.999584
exact	O	O:0.998640
shape	O	O:0.999901
by	O	O:0.999985
modifying	O	O:0.999864
the	O	O:0.999433
factor	O	O:0.995480
"	O	O:0.999816
3	O	O:0.999624
"	O	O:0.999982
in	O	O:0.999966
front	O	O:0.999849
of	O	O:0.999965
the	O	O:0.999611
lower	O	O:0.997584
branch	O	O:0.948678
.	O	O:0.999401
	
Downvotes	O	O:0.999152
are	O	O:0.999946
due	O	O:0.999943
to	O	O:0.999966
the	O	O:0.999998
lack	O	O:0.999354
of	O	O:0.999962
research	O	O:0.999568
effort	O	O:0.999254
(	O	O:0.999984
if	O	O:0.999964
you	O	O:0.999978
look	O	O:0.998760
at	O	O:0.999989
the	O	O:0.999853
reasons	O	O:0.997553
for	O	O:0.999906
downvotes	O	O:0.997104
,	O	O:0.999919
it	O	O:0.999987
says	O	O:0.999290
"	O	O:0.999958
This	O	O:0.999762
question	O	O:0.999889
does	O	O:0.999583
not	O	O:0.999915
show	O	O:0.999923
any	O	O:0.999849
research	O	O:0.999747
effort	O	O:0.996760
")	O	O:0.999373
.	O	O:0.998014
	
As	O	O:0.999941
for	O	O:0.999855
the	O	O:0.999935
matplotlib	O	O:0.992349
version	O	O:0.997899
1.1.0	O	O:0.998846
,	O	O:0.999988
it's	O	O:0.999901
a	O	O:0.999948
really	O	O:0.999247
easy	O	O:0.999141
install	O	O:0.997106
,	O	O:0.999983
at	O	O:0.999946
least	O	O:0.997699
on	O	O:0.999983
my	O	O:0.999708
by-now-quite	O	O:0.999194
old	O	O:0.999743
Lucid	O	O:0.999468
it's	O	O:0.999840
no	O	O:0.999942
problem	O	O:0.999718
at	O	O:0.999957
all	O	O:0.996626
.	O	O:0.999497
	
Numpy	O	O:0.994863
index	O	O:0.998821
out	O	O:0.999932
of	O	O:0.999950
range	O	O:0.998196
error	O	O:0.998337
	
Though	O	O:0.998529
I	O	O:0.999993
want	O	O:0.999869
to	O	O:0.998643
add	O	O:0.999997
that	O	O:0.999870
manually	O	O:0.999744
saving	O	O:0.999843
the	O	O:0.999857
chart	O	O:0.999468
from	O	O:0.999392
Qt	O	O:0.999975
Widget	O	O:0.999909
is	O	O:0.999928
OK	O	O:0.999855
.	O	O:0.999448
	
Without	O	O:0.999498
seeing	O	O:0.999846
any	O	O:0.999688
of	O	O:0.999925
the	O	O:0.999662
existing	O	O:0.999840
plotting	O	O:0.993181
functions	O	O:0.999701
,	O	O:0.999994
how	O	O:0.999975
am	O	O:0.999934
I	O	O:0.999993
supposed	O	O:0.999977
to	O	O:0.999902
know	O	O:0.999942
how	O	O:0.999938
similar	O	O:0.999788
or	O	O:0.999972
different	O	O:0.999897
they	O	O:0.999605
are	O	O:0.999745
?	O	O:0.999904
	
You	O	O:0.999911
can	O	O:0.999549
use	O	O:0.999964
spline	O	O:0.999274
to	O	O:0.999894
fit	O	O:0.999676
the	O	O:0.999586
[	O	O:0.999986
blue	O	O:0.999725
curve	O	O:0.999733
-	O	O:0.999999
peak	O	O:0.999255
/	O	O:0.999948
2	O	O:0.999837
]	O	O:0.999823
,	O	O:0.999197
and	O	O:0.999972
then	O	O:0.998794
find	O	O:0.999321
it's	O	O:0.999793
roots	O	O:0.988423
:	O	O:0.999977
#CODE	O	O:0.999659
	
I	O	O:0.999957
had	O	O:0.999932
to	O	O:0.999856
add	O	O:0.999955
`	O	O:0.999942
colorbar	O	O:0.989038
(	O	O:0.999995
im2	O	O:0.999382
)`	O	O:0.999983
right	O	O:0.997631
after	O	O:0.999980
the	O	O:0.999940
definition	O	O:0.999152
of	O	O:0.999742
im2	O	O:0.995706
...	O	O:0.997552
	
Creating	O	O:0.997240
sample	O	O:0.994414
data	O	O:0.999620
#CODE	O	O:0.999575
	
The	O	O:0.999888
numbers	O	O:0.996522
choose	O	O:0.996724
now	O	O:0.999982
many	O	O:0.999010
decimal	O	O:0.993866
places	O	O:0.997432
you	O	O:0.999878
want	O	O:0.999095
and	O	O:0.999905
the	O	O:0.999981
e	O	O:0.998613
chooses	O	O:0.998937
scientific	O	O:0.999302
notation	O	O:0.998379
.	O	O:0.999751
	
To	O	O:0.999986
clear	O	O:0.999818
up	O	O:0.999940
the	O	O:0.999945
code	O	O:0.999660
,	O	O:0.999995
I	O	O:0.999997
put	O	O:0.998975
the	O	O:0.999309
individual	O	O:0.999012
plotting	O	O:0.998813
functions	O	O:0.999509
for	O	O:0.999967
the	O	O:0.999855
six	O	O:0.998764
or	O	O:0.999954
so	O	O:0.999992
groups	O	O:0.999917
of	O	O:0.999944
subplots	O	O:0.999541
into	O	O:0.999861
separate	O	O:0.999970
submodules	O	O:0.996573
and	O	O:0.999987
call	O	O:0.998816
them	O	O:0.999874
with	O	O:0.998949
the	O	O:0.998725
arrays	O	O:0.999771
they	O	O:0.999911
need	O	O:0.999360
for	O	O:0.999968
plotting	O	O:0.998908
purposes	O	O:0.981157
.	O	O:0.999737
	
You	O	O:0.999939
have	O	O:0.999716
given	O	O:0.999505
us	O	O:0.999985
a	O	O:0.999993
list	O	O:0.992019
of	O	O:0.999922
requirements	O	O:0.973037
,	O	O:0.999962
but	O	O:0.999927
what	O	O:0.999689
have	O	O:0.999396
you	O	O:0.999982
tried	O	O:0.999936
to	O	O:0.999974
solve	O	O:0.999994
your	O	O:0.999825
own	O	O:0.999903
problem	O	O:0.999080
?	O	O:0.999960
	
For	O	O:0.999961
that	O	O:0.999312
purpose	O	O:0.999554
,	O	O:0.999981
I	O	O:0.999998
have	O	O:0.999746
put	O	O:0.999217
the	O	O:0.999971
following	O	O:0.992215
command	O	O:0.998108
in	O	O:0.999992
a	O	O:0.999964
for	O	O:0.999668
loop	O	O:0.973954
:	O	O:0.999923
#CODE	O	O:0.998834
	
I	O	O:0.999978
work	O	O:0.999696
at	O	O:0.999919
a	O	O:0.999984
large	O	O:0.996453
company	O	O:0.934976
and	O	O:0.999522
do	O	O:0.999642
not	O	O:0.999836
have	O	O:0.999667
admin	O	O:0.999510
rights	O	O:0.998049
.	O	O:0.999599
	
Note	O	O:0.999827
that	O	O:0.999147
it	O	O:0.999996
only	O	O:0.999649
detect	O	O:0.999594
truly	O	O:0.999791
equal	O	O:0.999417
placements	O	O:0.999393
,	O	O:0.999990
if	O	O:0.999985
you	O	O:0.999032
would	O	O:0.999904
have	O	O:0.999965
values	O	O:0.999959
of	O	O:0.999892
`	O	O:0.999924
[	O	O:0.999904
0	O	O:0.999957
,	O	O:0.999976
0.00001	O	O:0.983937
,	O	O:0.999939
2	O	O:0.999942
,	O	O:0.999971
10	O	O:0.999841
]`	O	O:0.999144
,	O	O:0.999988
they	O	O:0.999638
would	O	O:0.999773
probably	O	O:0.999628
still	O	O:0.999204
overlap	O	O:0.925846
.	O	O:0.999425
	
Suppose	O	O:0.998711
I	O	O:0.999995
have	O	O:0.999910
a	O	O:0.999941
triangle	O	O:0.999870
mesh	O	O:0.996314
defined	O	O:0.999869
by	O	O:0.999824
X	O	O:0.999758
,	O	O:0.999965
Y	O	O:0.999393
,	O	O:0.999980
and	O	O:0.999848
Z	O	O:0.999401
,	O	O:0.999982
the	O	O:0.999851
3D	O	O:0.999943
coordinates	O	O:0.996800
of	O	O:0.999996
a	O	O:0.999988
point	O	O:0.998953
cloud	O	O:0.998383
,	O	O:0.999998
each	O	O:0.999847
a	O	O:0.999989
vector	O	O:0.999049
of	O	O:0.999811
length	O	O:0.991114
n	O	O:0.995805
,	O	O:0.999854
and	O	O:0.999865
UVW	O	O:0.999465
,	O	O:0.999976
a	O	O:0.999934
2D	O	O:0.998969
m-x-3	O	O:0.992243
matrix	O	O:0.987782
in	O	O:0.999369
which	O	O:0.999925
each	O	O:0.999624
row	O	O:0.999892
is	O	O:0.999989
a	O	O:0.999990
triplet	O	O:0.998662
of	O	O:0.999732
indices	O	O:0.994857
into	O	O:0.999842
the	O	O:0.999987
point	O	O:0.989254
cloud	O	O:0.998502
.	O	O:0.999890
	
I	O	O:0.999939
am	O	O:0.999988
trying	O	O:0.999350
to	O	O:0.999962
create	O	O:0.999932
a	O	O:0.999997
plot	O	O:0.995415
with	O	O:0.999842
vertical	O	O:0.995390
bars	O	O:0.999892
equal	O	O:0.999716
to	O	O:0.999987
score	O	O:0.998489
length	O	O:0.999159
,	O	O:0.999935
AND	O	O:0.999944
with	O	O:0.999751
a	O	O:0.999961
radiobutton	O	O:0.998453
which	O	O:0.999721
enables	O	O:0.999514
the	O	O:0.999957
user	O	O:0.999795
to	O	O:0.999878
choose	O	O:0.999742
which	O	O:0.999900
level	O	O:0.998359
scores	O	O:0.991862
he	O	O:0.999920
/	O	O:0.999850
she	O	O:0.999928
wants	O	O:0.999826
to	O	O:0.999944
see	O	O:0.999989
,	O	O:0.999993
as	O	O:0.999985
such	O	O:0.997344
:	O	O:0.999962
	
The	O	O:0.999626
2nd	O	O:0.999844
set	O	O:0.998770
of	O	O:0.999974
data	O	O:0.999565
will	O	O:0.999816
also	O	O:0.999824
include	O	O:0.999858
the	O	O:0.999921
first	O	O:0.999377
as	O	O:0.999928
written	O	O:0.993607
in	O	O:0.999994
this	O	O:0.999688
snippet	O	O:0.998344
(	O	O:0.999979
looking	O	O:0.998739
for	O	O:0.999897
good	O	O:0.998843
way	O	O:0.999890
to	O	O:0.999893
delete	O	O:0.999203
it	O	O:0.999985
that	O	O:0.999869
doesn't	O	O:0.999946
cause	O	O:0.999839
problems	O	O:0.999661
later	O	O:0.999974
down	O	O:0.999030
the	O	O:0.999984
line	O	O:0.997584
)	O	O:0.999838
.	O	O:0.999088
	
So	O	O:0.999937
you	O	O:0.999956
need	O	O:0.999762
to	O	O:0.999980
add	O	O:0.999982
`	O	O:0.999977
u	O	O:0.983427
`	O	O:0.999822
:	O	O:0.999816
#CODE	O	O:0.999861
	
Regardless	O	O:0.998293
,	O	O:0.999995
once	O	O:0.999937
you	O	O:0.999747
get	O	O:0.999948
used	O	O:0.999856
to	O	O:0.999738
it	O	O:0.999990
,	O	O:0.999978
I	O	O:0.999992
find	O	O:0.999432
it	O	O:0.999960
much	O	O:0.999751
easier	O	O:0.999926
to	O	O:0.999849
write	O	O:0.999959
reusable	O	O:0.999933
plotting	O	O:0.998872
functions	O	O:0.999799
in	O	O:0.999888
python	O	O:0.998928
with	O	O:0.999891
matplotlib	O	O:0.999265
than	O	O:0.999555
in	O	O:0.999815
Matlab	O	O:0.999081
.	O	O:0.999529
	
Now	O	O:0.999720
,	O	O:0.999981
you	O	O:0.999545
should	O	O:0.999636
be	O	O:0.999998
able	O	O:0.999957
to	O	O:0.999974
get	O	O:0.999968
all	O	O:0.999856
the	O	O:0.999968
libraries	O	O:0.996147
you	O	O:0.999927
need	O	O:0.999952
just	O	O:0.999926
as	O	O:0.999996
easily	O	O:0.999081
,	O	O:0.999987
using	O	O:0.999496
,	O	O:0.999675
too	O	O:0.998934
,	O	O:0.999968
Macports	O	O:0.998358
.	O	O:0.999385
	
I	O	O:0.999925
believe	O	O:0.999946
that	O	O:0.999348
I'm	O	O:0.999971
using	O	O:0.999896
the	O	O:0.998412
TK	O	O:0.999223
backend	O	O:0.995005
;	O	O:0.999976
I'm	O	O:0.999722
not	O	O:0.999844
married	O	O:0.998768
to	O	O:0.999975
that	O	O:0.999907
choice	O	O:0.998548
,	O	O:0.999967
but	O	O:0.999553
it's	O	O:0.999782
not	O	O:0.999349
clear	O	O:0.999892
how	O	O:0.999847
I	O	O:0.999928
should	O	O:0.999851
install	O	O:0.990062
other	O	O:0.999827
backends	O	O:0.996477
.	O	O:0.999669
	
What	O	O:0.991290
is	O	O:0.999987
this	O	O:0.999366
float	O	O:0.985048
,	O	O:0.999913
and	O	O:0.999919
how	O	O:0.999803
can	O	O:0.998971
I	O	O:0.999997
convert	O	O:0.999722
it	O	O:0.999970
to	O	O:0.999992
a	O	O:0.999998
datetime	O	O:0.987730
?	O	O:0.999942
	
xtics	O	O:0.993673
and	O	O:0.999904
ytics	O	O:0.999442
labels	O	O:0.996654
because	O	O:0.999931
they	O	O:0.999299
appear	O	O:0.994659
for	O	O:0.999757
all	O	O:0.999233
values	O	O:0.997628
of	O	O:0.999819
xPoints	O	O:0.991792
and	O	O:0.999905
yPoints	O	O:0.988616
(	O	O:0.999993
they	O	O:0.999849
overlap	O	O:0.937832
)	O	O:0.999555
.	O	O:0.998909
	
matplotlib	O	O:0.977631
(	O	O:0.999973
equal	O	O:0.999708
unit	O	O:0.999784
length	O	O:0.996565
)	O	O:0.999083
	
Is	O	O:0.999985
there	O	O:0.999686
any	O	O:0.999613
reason	O	O:0.998913
why	O	O:0.999698
I	O	O:0.999975
can't	O	O:0.999674
do	O	O:0.999944
this	O	O:0.999850
?	O	O:0.999957
	
I	O	O:0.999987
am	O	O:0.999989
using	O	O:0.999141
the	O	O:0.999770
following	O	O:0.999122
codes	O	O:0.998545
to	O	O:0.999989
generate	O	O:0.999987
the	O	O:0.999905
square	O	O:0.999786
wave	O	O:0.999185
format	O	O:0.999454
[	O	O:0.999983
Eg	O	O:0.999942
:	O	O:0.999998
from	O	O:0.999715
0	O	O:0.999995
till	O	O:0.999837
5	O	O:0.999963
]	O	O:0.999955
using	O	O:0.996681
for	O	O:0.999504
loop	O	O:0.970328
.	O	O:0.998824
	
Can	O	O:0.999867
you	O	O:0.999785
reduce	O	O:0.999637
the	O	O:0.999969
extent	O	O:0.863285
of	O	O:0.999967
you	O	O:0.999883
problem	O	O:0.999903
by	O	O:0.999986
calculating	O	O:0.999662
something	O	O:0.999927
akin	O	O:0.999755
to	O	O:0.999994
a	O	O:0.999998
density	O	O:0.997457
,	O	O:0.999987
reducing	O	O:0.999873
millions	O	O:0.998502
of	O	O:0.999989
line	O	O:0.999802
segments	O	O:0.999859
to	O	O:0.999988
maybe	O	O:0.999984
a	O	O:0.999969
few	O	O:0.999426
hundred	O	O:0.999046
or	O	O:0.999982
a	O	O:0.999866
few	O	O:0.999707
thousand	O	O:0.999690
data	O	O:0.999693
points	O	O:0.995430
?	O	O:0.999974
	
array	O	O:0.999732
erroneously	O	O:0.997721
filled	O	O:0.999662
with	O	O:0.999559
the	O	O:0.999951
same	O	O:0.999751
value	O	O:0.999401
	
You	O	O:0.999927
can	O	O:0.999642
change	O	O:0.999632
the	O	O:0.999462
`	O	O:0.999135
reduce_C_function	O	B-API:0.979161
`	O	O:0.999955
option	O	O:0.999697
if	O	O:0.999988
you	O	O:0.999944
want	O	O:0.999822
something	O	O:0.999811
different	O	O:0.999946
than	O	O:0.999863
a	O	O:0.999979
simple	O	O:0.996073
average	O	O:0.998010
.	O	O:0.998998
	
The	O	O:0.999859
whole	O	O:0.999419
traceback	O	O:0.997876
is	O	O:0.999943
rather	O	O:0.997958
large	O	O:0.997713
but	O	O:0.999577
seems	O	O:0.999601
to	O	O:0.999888
revolve	O	O:0.998073
around	O	O:0.999871
this	O	O:0.999925
part	O	O:0.994671
(	O	O:0.999990
if	O	O:0.999761
I	O	O:0.999987
read	O	O:0.998763
it	O	O:0.999919
correctly	O	O:0.996258
):	O	O:0.999957
#CODE	O	O:0.998478
	
Matplotlib	O	O:0.988380
:	O	O:0.999966
WebAgg	O	O:0.998638
backend	O	O:0.998778
doesn't	O	O:0.999878
show	O	O:0.999850
any	O	O:0.999810
figures	O	O:0.994812
	
While	O	O:0.999781
this	O	O:0.999513
seems	O	O:0.999963
what	O	O:0.999322
I	O	O:0.999978
was	O	O:0.999979
looking	O	O:0.995894
for	O	O:0.999519
,	O	O:0.999821
I'm	O	O:0.999861
not	O	O:0.999797
lucky	O	O:0.999670
finding	O	O:0.999863
any	O	O:0.998721
proper	O	O:0.998817
documentation	O	O:0.995398
for	O	O:0.999420
webagg	O	O:0.990833
.	O	O:0.998027
	
If	O	O:0.999820
I	O	O:0.999991
were	O	O:0.999828
you	O	O:0.999164
,	O	O:0.999987
I'd	O	O:0.999985
start	O	O:0.997845
from	O	O:0.999948
this	O	O:0.999939
example	O	O:0.999940
to	O	O:0.999968
see	O	O:0.999994
where	O	O:0.999656
do	O	O:0.999968
these	O	O:0.999912
lines	O	O:0.998518
start	O	O:0.998915
showing	O	O:0.999522
up	O	O:0.999117
.	O	O:0.999559
	
According	O	O:0.999335
to	O	O:0.999821
efiring	O	O:0.999067
,	O	O:0.999969
matplotlib	O	O:0.999813
does	O	O:0.999171
not	O	O:0.999747
support	O	O:0.998682
NumPy	O	O:0.999565
datetime64	O	O:0.983041
objects	O	O:0.989721
(	O	O:0.999978
at	O	O:0.999915
least	O	O:0.998515
not	O	O:0.999814
yet	O	O:0.999461
)	O	O:0.999672
.	O	O:0.998519
	
At	O	O:0.999943
least	O	O:0.998529
on	O	O:0.999989
my	O	O:0.999693
system	O	O:0.999170
(	O	O:0.999963
OSX	O	O:0.999758
,	O	O:0.999969
Python	O	O:0.999299
2.7	O	O:0.999000
,	O	O:0.999976
mpl	O	O:0.999120
1.1.0	O	O:0.996486
)	O	O:0.999891
,	O	O:0.999904
I	O	O:0.999991
don't	O	O:0.999931
have	O	O:0.999152
any	O	O:0.999541
issues	O	O:0.999645
with	O	O:0.999546
panning	O	O:0.991828
,	O	O:0.999973
etc	O	O:0.999689
.	O	O:0.999521
	
Yeah	O	O:0.999604
,	O	O:0.999937
I	O	O:0.999974
understand	O	O:0.999092
why	O	O:0.997988
Pylab	O	O:0.998722
exists	O	O:0.997117
,	O	O:0.999852
and	O	O:0.999833
why	O	O:0.999497
it	O	O:0.999904
seems	O	O:0.999860
so	O	O:0.999989
attractive	O	O:0.999921
to	O	O:0.999954
people	O	O:0.999806
moving	O	O:0.999359
over	O	O:0.999834
from	O	O:0.998974
MATLAB	O	O:0.997497
,	O	O:0.999995
but	O	O:0.999948
over	O	O:0.999721
the	O	O:0.999848
long	O	O:0.999938
term	O	O:0.997461
I	O	O:0.999997
feel	O	O:0.999946
like	O	O:0.999185
it's	O	O:0.999929
a	O	O:0.999899
net	O	O:0.999144
negative	O	O:0.994073
because	O	O:0.998846
it	O	O:0.999973
makes	O	O:0.998949
it	O	O:0.999964
harder	O	O:0.999953
to	O	O:0.999953
share	O	O:0.999928
code	O	O:0.999874
with	O	O:0.999707
and	O	O:0.999716
get	O	O:0.999902
help	O	O:0.996129
from	O	O:0.999902
everyone	O	O:0.998682
who	O	O:0.999929
isn't	O	O:0.999866
using	O	O:0.998812
it	O	O:0.996564
.	O	O:0.998305
	
How	O	O:0.999932
can	O	O:0.999434
I	O	O:0.999997
get	O	O:0.999088
around	O	O:0.999169
this	O	O:0.999356
?	O	O:0.999926
	
Function	O	O:0.999630
of	O	O:0.999921
Numpy	O	O:0.997711
Array	O	O:0.928355
with	O	O:0.995855
if-statement	O	O:0.997496
	
By	O	O:0.999875
default	O	O:0.998464
it	O	O:0.999992
sets	O	O:0.999731
the	O	O:0.999935
(	O	O:0.999951
0	O	O:0.999967
,	O	O:0.999996
0	O	O:0.999976
)	O	O:0.999971
element	O	O:0.999367
of	O	O:0.999989
the	O	O:0.999848
array	O	O:0.999067
in	O	O:0.999951
the	O	O:0.999904
upper	O	O:0.999124
left	O	O:0.972711
corner	O	O:0.998293
.	O	O:0.999648
	
I	O	O:0.999983
appreciate	O	O:0.999896
any	O	O:0.998952
help	O	O:0.994339
with	O	O:0.999846
this	O	O:0.998905
.	O	O:0.999846
	
At	O	O:0.999880
the	O	O:0.999893
moment	O	O:0.998396
I	O	O:0.999994
do	O	O:0.999987
a	O	O:0.999944
for	O	O:0.999759
loop	O	O:0.985983
and	O	O:0.999861
plot	O	O:0.989636
each	O	O:0.998062
point	O	O:0.995226
:	O	O:0.999956
#CODE	O	O:0.999544
	
What	O	O:0.999372
I	O	O:0.999991
currently	O	O:0.999915
have	O	O:0.998581
to	O	O:0.999920
convert	O	O:0.999550
it	O	O:0.999768
:	O	O:0.999980
#CODE	O	O:0.999708
	
You	O	O:0.999235
should	O	O:0.999812
post	O	O:0.996730
your	O	O:0.999839
new	O	O:0.999880
code	O	O:0.998117
and	O	O:0.999946
the	O	O:0.999618
**	O	O:0.997482
full	O	O:0.983402
**	O	O:0.999892
traceback	O	O:0.999402
in	O	O:0.999927
another	O	O:0.999072
question	O	O:0.998090
.	O	O:0.999398
	
I	O	O:0.999917
don't	O	O:0.999923
want	O	O:0.998367
to	O	O:0.999970
make	O	O:0.999967
any	O	O:0.999790
translations	O	O:0.998934
/	O	O:0.999898
shifts	O	O:0.999335
to	O	O:0.999989
the	O	O:0.999997
data	O	O:0.999283
itself	O	O:0.998948
(	O	O:0.999995
it's	O	O:0.999946
a	O	O:0.999990
large	O	O:0.998588
dataset	O	O:0.997305
,	O	O:0.999985
etc	O	O:0.999745
)	O	O:0.999893
,	O	O:0.999955
so	O	O:0.999983
I'd	O	O:0.999962
be	O	O:0.999975
looking	O	O:0.999700
to	O	O:0.999707
do	O	O:0.999991
this	O	O:0.999967
with	O	O:0.999953
some	O	O:0.999304
matplotlib-trickery	O	O:0.998709
.	O	O:0.999730
	
Raster	O	O:0.997907
to	O	O:0.999839
Numpy	O	O:0.999868
Array	O	O:0.883276
-	O	O:0.999984
how	O	O:0.999853
to	O	O:0.999983
change	O	O:0.999934
a	O	O:0.999926
default	O	O:0.998638
color-scheme	O	O:0.999851
of	O	O:0.999956
a	O	O:0.999939
matplotlib	O	O:0.999213
plot	O	O:0.932066
	
or	O	O:0.999623
invert	O	O:0.997400
the	O	O:0.999692
Y-axis	O	O:0.990153
:	O	O:0.999950
#CODE	O	O:0.999747
	
So	O	O:0.999934
,	O	O:0.999994
a	O	O:0.999983
solution	O	O:0.998115
is	O	O:0.999993
simply	O	O:0.999695
to	O	O:0.999975
create	O	O:0.999769
a	O	O:0.999999
list	O	O:0.998868
of	O	O:0.999951
all	O	O:0.990761
objects	O	O:0.999659
that	O	O:0.999205
will	O	O:0.999709
be	O	O:0.999940
refreshed	O	O:0.999019
,	O	O:0.999879
and	O	O:0.999902
to	O	O:0.999868
call	O	O:0.999120
this	O	O:0.999803
`	O	O:0.999768
remove	O	O:0.708976
`	O	O:0.999899
method	O	O:0.994346
for	O	O:0.999994
everyone	O	O:0.998927
of	O	O:0.999983
them	O	O:0.994338
:	O	O:0.999964
	
The	O	O:0.999921
best	O	O:0.999265
choice	O	O:0.999334
is	O	O:0.999955
to	O	O:0.999971
make	O	O:0.999990
your	O	O:0.999569
widgets	O	O:0.999594
in	O	O:0.999972
the	O	O:0.999943
order	O	O:0.999556
you	O	O:0.999774
wish	O	O:0.999994
them	O	O:0.999970
to	O	O:0.999947
appear	O	O:0.996873
.	O	O:0.999059
	
Python	O	O:0.995516
:	O	O:0.999988
How	O	O:0.999979
to	O	O:0.999987
generate	O	O:0.999987
a	O	O:0.999993
power	O	O:0.999301
law	O	O:0.999112
graph	O	O:0.993928
	
Unfortunately	O	O:0.999142
the	O	O:0.999434
broken	O	O:0.978083
command	O	O:0.995917
is	O	O:0.999991
also	O	O:0.999844
preventing	O	O:0.999932
me	O	O:0.999853
from	O	O:0.999343
tryig	O	O:0.999715
this	O	O:0.999965
,	O	O:0.999982
so	O	O:0.999941
I'll	O	O:0.999910
have	O	O:0.999875
to	O	O:0.999917
fix	O	O:0.999995
that	O	O:0.999718
first	O	O:0.999601
.	O	O:0.999750
	
(	O	O:0.999924
`	O	O:0.999970
1	O	O:0.999848
`	O	O:0.999984
is	O	O:0.999960
the	O	O:0.999966
the	O	O:0.999153
start	O	O:0.987267
index	O	O:0.999570
,	O	O:0.999994
`	O	O:0.999991
2	O	O:0.999472
`	O	O:0.999969
is	O	O:0.999810
the	O	O:0.999936
increment	O	O:0.992545
)	O	O:0.999838
In	O	O:0.999894
contrast	O	O:0.999758
,	O	O:0.999970
`	O	O:0.999904
x	O	O:0.942866
[:	O	O:0.999971
:	O	O:0.999993
-1	O	O:0.999847
]`	O	O:0.999965
just	O	O:0.999519
specifies	O	O:0.999913
an	O	O:0.999954
increment	O	O:0.999400
of	O	O:0.999907
`	O	O:0.999829
-1	O	O:0.997119
`	O	O:0.999940
,	O	O:0.999992
thus	O	O:0.999983
reversing	O	O:0.999859
the	O	O:0.999761
array	O	O:0.997121
.	O	O:0.999530
	
One	O	O:0.999760
way	O	O:0.995780
around	O	O:0.999700
this	O	O:0.996946
is	O	O:0.999983
not	O	O:0.999633
to	O	O:0.999963
use	O	O:0.999973
the	O	O:0.999812
pandas	O	O:0.961838
`	O	O:0.999991
plot	O	B-API:0.530750
`	O	O:0.999951
method	O	O:0.958991
,	O	O:0.999995
but	O	O:0.999934
to	O	O:0.999982
directly	O	O:0.999926
the	O	O:0.999961
matplotlib's	O	O:0.994491
`	O	O:0.999990
plot	O	O:0.984502
`	O	O:0.999961
function	O	O:0.996272
.	O	O:0.999907
	
where	O	O:0.993579
`	O	O:0.999899
numctrl_ccm90	O	O:0.828596
`	O	O:0.999933
and	O	O:0.999343
`	O	O:0.999988
numctrl_ucp90	O	O:0.897848
`	O	O:0.999976
are	O	O:0.999647
the	O	O:0.999960
widgets	O	O:0.999580
corresponding	O	O:0.999451
to	O	O:0.999978
the	O	O:0.999994
collimated	O	O:0.998975
counts	O	O:0.999233
at	O	O:0.999986
-90deg	O	O:0.997255
and	O	O:0.999701
the	O	O:0.999677
uncollimated	O	O:0.985032
counts	O	O:0.994193
+90deg	O	O:0.999391
etc	O	O:0.999402
.	O	O:0.999603
	
Any	O	O:0.999896
tips	O	O:0.998990
?	O	O:0.999950
	
I	O	O:0.999933
would	O	O:0.999877
appreciate	O	O:0.999563
any	O	O:0.999766
comment	O	O:0.999395
or	O	O:0.999832
suggestion	O	O:0.997921
.	O	O:0.999869
	
I	O	O:0.999939
looked	O	O:0.999867
at	O	O:0.998546
`	O	O:0.999800
masked_array	O	B-API:0.988016
`	O	O:0.999879
which	O	O:0.991455
is	O	O:0.999991
different	O	O:0.996550
.	O	O:0.999405
	
Without	O	O:0.999214
having	O	O:0.998115
all	O	O:0.998572
the	O	O:0.999947
code	O	O:0.993630
listed	O	O:0.999828
,	O	O:0.999985
I	O	O:0.999986
had	O	O:0.999836
to	O	O:0.999964
make	O	O:0.999990
some	O	O:0.999859
assumptions	O	O:0.999831
about	O	O:0.999839
the	O	O:0.999866
data	O	O:0.997578
and	O	O:0.999896
about	O	O:0.999924
what	O	O:0.997909
you	O	O:0.998621
wanted	O	O:0.998740
.	O	O:0.999447
	
You	O	O:0.999953
mean	O	O:0.967023
`	O	O:0.999945
Axes3D	O	O:0.996992
`	O	O:0.999927
is	O	O:0.999948
different	O	O:0.999948
from	O	O:0.998329
`	O	O:0.999945
axes3d	O	O:0.998751
`	O	O:0.999934
?	O	O:0.999802
	
If	O	O:0.999961
you	O	O:0.999607
already	O	O:0.999823
have	O	O:0.998581
python	O	O:0.992900
and	O	O:0.999923
gfortran	O	O:0.991940
and	O	O:0.999846
such	O	O:0.999250
,	O	O:0.999985
jump	O	O:0.994166
in	O	O:0.999942
at	O	O:0.999966
the	O	O:0.999953
point	O	O:0.998768
where	O	O:0.999285
you	O	O:0.999912
need	O	O:0.999114
.	O	O:0.999786
	
Maybe	O	O:0.999538
you	O	O:0.999922
know	O	O:0.999848
a	O	O:0.999990
fix	O	O:0.994827
for	O	O:0.999945
this	O	O:0.999198
?	O	O:0.999893
	
How	O	O:0.999926
can	O	O:0.999555
I	O	O:0.999987
fix	O	O:0.999964
this	O	O:0.998356
?	O	O:0.999971
	
The	O	O:0.999902
background	O	O:0.996501
is	O	O:0.999989
that	O	O:0.999515
the	O	O:0.999970
array's	O	O:0.999598
values	O	O:0.998318
represent	O	O:0.999912
the	O	O:0.999932
water	O	O:0.999845
depth	O	O:0.999859
of	O	O:0.999989
a	O	O:0.999904
square	O	O:0.999367
grid	O	O:0.990690
.	O	O:0.999589
	
And	O	O:0.999882
try	O	O:0.999887
debugging	O	O:0.999529
one	O	O:0.999915
step	O	O:0.999798
at	O	O:0.999984
a	O	O:0.999983
time	O	O:0.996697
:	O	O:0.999996
make	O	O:0.999866
sure	O	O:0.999841
you	O	O:0.999940
have	O	O:0.999923
good	O	O:0.999960
data	O	O:0.999957
before	O	O:0.999660
you	O	O:0.999970
try	O	O:0.999768
to	O	O:0.999989
plot	O	O:0.998484
it	O	O:0.999949
.	O	O:0.999834
	
What	O	O:0.999753
do	O	O:0.999951
you	O	O:0.999977
mean	O	O:0.997454
the	O	O:0.999939
"	O	O:0.999909
label	O	O:0.956854
"	O	O:0.999926
?	O	O:0.999838
	
To	O	O:0.999915
do	O	O:0.999987
this	O	O:0.999970
we	O	O:0.999993
ll	O	O:0.999768
use	O	O:0.999906
the	O	O:0.998784
standard	O	O:0.982288
y=mx+b	O	O:0.999919
line	O	O:0.999763
equation	O	O:0.999968
where	O	O:0.999907
m	O	O:0.998853
is	O	O:0.999976
the	O	O:0.999963
line	O	O:0.999465
s	O	O:0.999948
slope	O	O:0.999630
and	O	O:0.999984
b	O	O:0.998753
is	O	O:0.999897
the	O	O:0.999948
line	O	O:0.999437
s	O	O:0.999890
y-intercept	O	O:0.999500
.	O	O:0.999769
	
If	O	O:0.999983
you	O	O:0.999851
check	O	O:0.998938
the	O	O:0.999964
Matplotlib	O	O:0.999817
example	O	O:0.999373
for	O	O:0.999990
the	O	O:0.999766
function	O	O:0.999352
you	O	O:0.999905
are	O	O:0.999956
using	O	O:0.999809
,	O	O:0.999777
you	O	O:0.999463
will	O	O:0.997665
notice	O	O:0.999906
they	O	O:0.999920
use	O	O:0.999971
a	O	O:0.999373
similar	O	O:0.997031
methodology	O	O:0.984327
:	O	O:0.999930
build	O	O:0.998167
empty	O	O:0.998087
matrix	O	O:0.949742
and	O	O:0.999866
fill	O	O:0.713862
it	O	O:0.999962
with	O	O:0.999763
strings	O	O:0.998894
built	O	O:0.999908
with	O	O:0.999862
the	O	O:0.994948
interpolation	O	O:0.996746
method	O	O:0.997390
.	O	O:0.999637
	
But	O	O:0.999844
the	O	O:0.999766
question	O	O:0.998433
still	O	O:0.998742
remains-	O	O:0.999711
how	O	O:0.999951
do	O	O:0.999939
I	O	O:0.999990
fix	O	O:0.999669
it	O	O:0.999552
?	O	O:0.999966
	
Based	O	O:0.999210
on	O	O:0.999833
the	O	O:0.999982
plot	O	O:0.996069
selection	O	O:0.999875
I	O	O:0.999999
want	O	O:0.999964
to	O	O:0.999607
set	O	O:0.999912
the	O	O:0.999978
plot	O	O:0.993378
title	O	O:0.999852
,	O	O:0.999999
so	O	O:0.999975
I	O	O:0.999998
need	O	O:0.999928
to	O	O:0.999954
know	O	O:0.999984
the	O	O:0.999956
current	O	O:0.997785
x	O	O:0.999713
-axis	O	O:0.999991
value	O	O:0.999831
after	O	O:0.999830
the	O	O:0.999946
plot	O	O:0.922423
is	O	O:0.999979
shown	O	O:0.998226
.	O	O:0.999898
	
I	O	O:0.999987
have	O	O:0.999832
tried	O	O:0.999260
the	O	O:0.999884
following	O	O:0.996705
code	O	O:0.995189
but	O	O:0.999993
this	O	O:0.999961
creates	O	O:0.996259
2	O	O:0.999955
separate	O	O:0.999198
charts	O	O:0.999253
but	O	O:0.999894
I	O	O:0.999864
would	O	O:0.999229
like	O	O:0.999680
this	O	O:0.999961
all	O	O:0.999155
on	O	O:0.999950
one	O	O:0.999414
chart	O	O:0.998615
.	O	O:0.999771
	
Any	O	O:0.999712
advice	O	O:0.997110
would	O	O:0.999407
be	O	O:0.999978
greatly	O	O:0.999203
appreciated	O	O:0.995655
.	O	O:0.997355
	
How	O	O:0.999926
can	O	O:0.999405
I	O	O:0.999996
add	O	O:0.999981
colorbar	O	O:0.996556
to	O	O:0.999985
this	O	O:0.999988
code	O	O:0.999671
?	O	O:0.999977
	
I'm	O	O:0.999673
reading	O	O:0.999055
in	O	O:0.999936
a	O	O:0.999990
file	O	O:0.998916
with	O	O:0.999843
several	O	O:0.997946
columns	O	O:0.999064
,	O	O:0.999999
each	O	O:0.999908
of	O	O:0.999922
which	O	O:0.999282
contains	O	O:0.999095
around	O	O:0.999606
100	O	O:0.999100
values	O	O:0.996537
between	O	O:0.990846
1	O	O:0.999895
and	O	O:0.999275
10	O	O:0.999361
.	O	O:0.998039
	
But	O	O:0.999739
for	O	O:0.999890
the	O	O:0.999532
all	O	O:0.998777
three	O	O:0.999760
plots	O	O:0.996506
We	O	O:0.999997
have	O	O:0.999773
same	O	O:0.999943
temperature	O	O:0.999601
T=4K	O	O:0.999091
.	O	O:0.999442
	
I've	O	O:0.999716
downloaded	O	O:0.999885
a	O	O:0.999974
number	O	O:0.998308
of	O	O:0.999880
nifty	O	O:0.998946
programs	O	O:0.997812
and	O	O:0.999787
utilities	O	O:0.987134
(	O	O:0.998897
and	O	O:0.999901
info	O	O:0.999520
sites	O	O:0.998874
)	O	O:0.999888
/	O	O:0.999711
quantum	O	O:0.997831
gis	O	O:0.999571
,	O	O:0.999980
virtual	O	O:0.996736
terrain	O	O:0.996953
project	O	O:0.998233
,	O	O:0.999990
grass	O	O:0.995554
,	O	O:0.999984
I'm	O	O:0.999941
looking	O	O:0.999368
to	O	O:0.999917
get	O	O:0.999934
an	O	O:0.999975
xyz	O	O:0.999066
csv	O	O:0.999771
file	O	O:0.999960
into	O	O:0.999907
a	O	O:0.999988
format	O	O:0.999144
that	O	O:0.999740
these	O	O:0.999950
tools	O	O:0.999743
can	O	O:0.999633
use	O	O:0.999805
.	O	O:0.999024
	
I	O	O:0.999992
have	O	O:0.999842
all	O	O:0.999377
the	O	O:0.999984
plots	O	O:0.990786
as	O	O:0.999988
several	O	O:0.999015
modules	O	O:0.999175
in	O	O:0.999874
python	O	O:0.994902
/	O	O:0.999957
matplotlib	O	O:0.998708
already	O	O:0.999378
coded	O	O:0.999079
,	O	O:0.999978
so	O	O:0.999978
that's	O	O:0.999806
perfect	O	O:0.996894
.	O	O:0.999775
	
At	O	O:0.999985
some	O	O:0.999545
level	O	O:0.995129
,	O	O:0.999999
this	O	O:0.999431
is	O	O:0.999993
purely	O	O:0.998750
a	O	O:0.999973
matter	O	O:0.998772
of	O	O:0.999842
taste	O	O:0.991779
and	O	O:0.999951
depends	O	O:0.999407
a	O	O:0.999948
bit	O	O:0.998735
on	O	O:0.999964
what	O	O:0.999757
you	O	O:0.999948
are	O	O:0.999963
doing	O	O:0.998623
.	O	O:0.999184
	
I	O	O:0.999944
really	O	O:0.999809
want	O	O:0.998809
to	O	O:0.999981
plot	O	O:0.999678
all	O	O:0.999851
the	O	O:0.999915
points	O	O:0.991069
in	O	O:0.999975
my	O	O:0.999906
matrix	O	O:0.998197
instead	O	O:0.999708
of	O	O:0.999911
the	O	O:0.999013
(	O	O:0.999979
M-1	O	O:0.998565
)	O	O:0.999927
x	O	O:0.994990
(	O	O:0.999992
N-1	O	O:0.997593
)	O	O:0.999531
.	O	O:0.998695
	
I	O	O:0.999983
want	O	O:0.999877
to	O	O:0.999767
set	O	O:0.999966
a	O	O:0.999977
colour	O	O:0.999367
scheme	O	O:0.999786
for	O	O:0.999952
my	O	O:0.999691
python	O	O:0.997901
plots	O	O:0.999244
,	O	O:0.999977
so	O	O:0.999990
that	O	O:0.999978
they	O	O:0.999945
don't	O	O:0.999718
repeat	O	O:0.898991
the	O	O:0.999971
same	O	O:0.998891
colour	O	O:0.999914
like	O	O:0.999995
they	O	O:0.999827
are	O	O:0.999740
for	O	O:0.999545
A	O	O:0.999536
and	O	O:0.999723
H	O	O:0.999427
in	O	O:0.999891
the	O	O:0.999712
top	O	O:0.998253
plot	O	O:0.997692
shown	O	O:0.999554
below	O	O:0.999578
.	O	O:0.999738
	
I've	O	O:0.999520
got	O	O:0.999880
a	O	O:0.999966
2D	O	O:0.999941
numpy	O	O:0.995616
array	O	O:0.999794
with	O	O:0.999886
1.0e6	O	O:0.991154
as	O	O:0.999983
the	O	O:0.999948
no	O	O:0.999943
data	O	O:0.999929
value	O	O:0.999762
.	O	O:0.999886
	
Is	O	O:0.999979
this	O	O:0.999897
what	O	O:0.999741
you	O	O:0.999931
mean	O	O:0.995751
?	O	O:0.999984
	
This	O	O:0.998329
is	O	O:0.999921
somewhat	O	O:0.999527
based	O	O:0.999794
on	O	O:0.999953
guesswork	O	O:0.998181
,	O	O:0.999998
since	O	O:0.999721
I	O	O:0.999966
can't	O	O:0.999981
test	O	O:0.966902
it	O	O:0.999992
with	O	O:0.999141
`	O	O:0.999963
matplotlib	O	O:0.991493
`	O	O:0.999862
,	O	O:0.999895
but	O	O:0.999981
something	O	O:0.999527
along	O	O:0.998769
these	O	O:0.999225
lines	O	O:0.991631
might	O	O:0.998280
work	O	O:0.983523
:	O	O:0.999968
#CODE	O	O:0.999784
	
Here	O	O:0.997177
is	O	O:0.999988
some	O	O:0.999343
sample	O	O:0.999709
code	O	O:0.999890
resembling	O	O:0.999869
my	O	O:0.999806
case	O	O:0.995463
:	O	O:0.999985
#CODE	O	O:0.999618
	
This	O	O:0.998897
is	O	O:0.999980
the	O	O:0.999688
result	O	O:0.998132
for	O	O:0.999924
printing	O	O:0.999784
every	O	O:0.999591
item	O	O:0.999706
in	O	O:0.999943
the	O	O:0.999199
xyz	O	O:0.992547
list	O	O:0.980598
and	O	O:0.999941
piping	O	O:0.988263
it	O	O:0.999903
into	O	O:0.999856
a	O	O:0.999997
file	O	O:0.990902
.	O	O:0.999634
	
Or	O	O:0.999868
is	O	O:0.999982
your	O	O:0.999801
plot	O	O:0.995949
supposed	O	O:0.999920
to	O	O:0.999972
be	O	O:0.999995
an	O	O:0.999961
average	O	O:0.999757
or	O	O:0.999942
something	O	O:0.997915
?	O	O:0.999951
	
I	O	O:0.999981
just	O	O:0.998839
wasn't	O	O:0.999920
sure	O	O:0.999674
if	O	O:0.999985
changing	O	O:0.999931
some	O	O:0.999763
plotting	O	O:0.998589
functions	O	O:0.999326
around	O	O:0.997518
would	O	O:0.999646
help	O	O:0.980554
.	O	O:0.999896
	
I	O	O:0.999961
agree	O	O:0.999871
with	O	O:0.998686
you	O	O:0.995295
,	O	O:0.999995
but	O	O:0.999873
I	O	O:0.999993
just	O	O:0.999733
tried	O	O:0.999048
to	O	O:0.999949
make	O	O:0.999934
code	O	O:0.999337
which	O	O:0.999970
uses	O	O:0.999886
as	O	O:0.999942
few	O	O:0.999888
less	O	O:0.999131
well-known	O	O:0.999902
features	O	O:0.999251
of	O	O:0.999832
`	O	O:0.999962
matplotlib	O	O:0.981840
`	O	O:0.999911
.	O	O:0.997798
	
You	O	O:0.999792
could	O	O:0.999508
add	O	O:0.999982
a	O	O:0.999978
URL	O	O:0.999697
to	O	O:0.999891
the	O	O:0.999972
image	O	O:0.999423
,	O	O:0.999994
so	O	O:0.999980
someone	O	O:0.999946
with	O	O:0.999860
enough	O	O:0.999824
reputation	O	O:0.999761
can	O	O:0.999521
upload	O	O:0.999916
it	O	O:0.999970
to	O	O:0.999988
your	O	O:0.999981
post	O	O:0.972714
.	O	O:0.999895
	
'	O	O:0.999929
plot	O	O:0.990976
'	O	O:0.999986
shows	O	O:0.999927
me	O	O:0.999986
a	O	O:0.999983
line	O	O:0.999276
interconnecting	O	O:0.999434
all	O	O:0.999445
data	O	O:0.999554
points	O	O:0.978853
,	O	O:0.999973
but	O	O:0.999904
not	O	O:0.999707
the	O	O:0.999970
data	O	O:0.999651
points	O	O:0.999499
themselves	O	O:0.999775
(	O	O:0.999984
unless	O	O:0.999728
there's	O	O:0.999960
a	O	O:0.999977
way	O	O:0.999509
I	O	O:0.999959
don't	O	O:0.999963
know	O	O:0.999259
of	O	O:0.999831
)	O	O:0.998692
.	O	O:0.999020
	
Did	O	O:0.999779
you	O	O:0.999618
add	O	O:0.999951
matplotlib	O	O:0.999572
to	O	O:0.999987
your	O	O:0.999861
PYTHONPATH	O	O:0.755220
?	O	O:0.999935
	
I	O	O:0.999977
have	O	O:0.999748
successfully	O	O:0.997823
edited	O	O:0.998197
and	O	O:0.999683
put	O	O:0.998314
it	O	O:0.999648
in	O	O:0.999915
my	O	O:0.999908
code	O	O:0.997610
and	O	O:0.999800
works	O	O:0.999839
fine	O	O:0.992494
,	O	O:0.999976
but	O	O:0.999955
my	O	O:0.999919
problem	O	O:0.987726
is	O	O:0.999998
that	O	O:0.999252
I	O	O:0.999996
can't	O	O:0.999897
show	O	O:0.999580
multiple	O	O:0.999876
lines	O	O:0.999807
of	O	O:0.999993
data	O	O:0.999530
in	O	O:0.999962
the	O	O:0.999972
plot	O	O:0.988163
,	O	O:0.999985
I	O	O:0.999998
want	O	O:0.999934
to	O	O:0.999863
show	O	O:0.999984
up	O	O:0.999978
to	O	O:0.999949
10	O	O:0.999990
lines	O	O:0.997957
in	O	O:0.999981
my	O	O:0.999583
graph	O	O:0.998887
but	O	O:0.999871
I'm	O	O:0.999930
getting	O	O:0.999003
a	O	O:0.999961
lot	O	O:0.999784
of	O	O:0.999917
errors	O	O:0.999380
when	O	O:0.998831
I	O	O:0.999999
try	O	O:0.999984
to	O	O:0.999569
add	O	O:0.999995
them	O	O:0.998930
.	O	O:0.999652
	
That	O	O:0.997757
is	O	O:0.999947
correct	O	O:0.997072
,	O	O:0.999993
it	O	O:0.999990
draws	O	O:0.999743
a	O	O:0.999998
line	O	O:0.999863
from	O	O:0.999907
the	O	O:0.999921
lower	O	O:0.999957
left	O	O:0.996381
to	O	O:0.999972
the	O	O:0.999995
upper	O	O:0.998984
right	O	O:0.999794
of	O	O:0.999975
the	O	O:0.999984
plot	O	O:0.995519
as	O	O:0.999947
stated	O	O:0.999397
in	O	O:0.999989
my	O	O:0.999566
answer	O	O:0.999169
.	O	O:0.998980
	
The	O	O:0.999927
problem	O	O:0.997398
arises	O	O:0.999814
when	O	O:0.998686
I	O	O:0.999995
select	O	O:0.999966
a	O	O:0.999966
subset	O	O:0.998314
of	O	O:0.999938
the	O	O:0.999907
data	O	O:0.999871
based	O	O:0.999732
on	O	O:0.999977
the	O	O:0.999983
time	O	O:0.999562
,	O	O:0.999976
ie	O	O:0.999913
:	O	O:0.999965
#CODE	O	O:0.999607
	
Do	O	O:0.999910
you	O	O:0.999957
have	O	O:0.999876
any	O	O:0.999949
suggestion	O	O:0.999918
to	O	O:0.999817
fix	O	O:0.999982
this	O	O:0.999699
?	O	O:0.999976
	
I	O	O:0.999976
think	O	O:0.999636
I'm	O	O:0.999872
going	O	O:0.999516
to	O	O:0.999922
start	O	O:0.999940
from	O	O:0.999908
scratch	O	O:0.999672
so	O	O:1.000000
that	O	O:0.999831
I	O	O:0.999998
know	O	O:0.999897
what	O	O:0.998812
I'm	O	O:0.999813
doing	O	O:0.999677
but	O	O:0.998460
I	O	O:0.999936
need	O	O:0.999708
help	O	O:0.984428
on	O	O:0.999991
where	O	O:0.999698
to	O	O:0.999957
start	O	O:0.999133
.	O	O:0.999809
	
It	O	O:0.999928
was	O	O:0.999935
a	O	O:0.999969
simplified	O	O:0.999526
example	O	O:0.999759
since	O	O:0.999661
I	O	O:0.999992
didn't	O	O:0.999983
have	O	O:0.999811
your	O	O:0.999982
code	O	O:0.999894
at	O	O:0.999982
the	O	O:0.999954
time	O	O:0.998242
.	O	O:0.999672
	
The	O	O:0.999630
question	O	O:0.999692
does	O	O:0.999187
not	O	O:0.999597
define	O	O:0.998591
matrix	O	O:0.996616
very	O	O:0.999404
well	O	O:0.997082
:	O	O:0.999971
"	O	O:0.999950
matrix	O	O:0.995405
of	O	O:0.999934
values	O	O:0.992150
"	O	O:0.999900
,	O	O:0.999874
"	O	O:0.999953
matrix	O	O:0.987238
of	O	O:0.999980
data	O	O:0.998346
"	O	O:0.999828
.	O	O:0.999364
	
The	O	O:0.999857
algorithm	O	O:0.999467
returns	O	O:0.999449
an	O	O:0.999968
array	O	O:0.999894
of	O	O:0.999911
ranges	O	O:0.966816
,	O	O:0.999999
then	O	O:0.999710
I	O	O:0.999985
create	O	O:0.999835
several	O	O:0.999305
histograms	O	O:0.999872
for	O	O:0.999932
the	O	O:0.999978
same	O	O:0.999154
dataset	O	O:0.999838
using	O	O:0.999978
different	O	O:0.995424
ranges	O	O:0.871917
.	O	O:0.999206
	
(	O	O:0.999925
Since	O	O:0.999764
all	O	O:0.999079
you're	O	O:0.999791
saying	O	O:0.998704
now	O	O:0.998968
is	O	O:0.999982
"	O	O:0.999752
I	O	O:0.999957
have	O	O:0.999886
this	O	O:0.998103
equation	O	O:0.998937
and	O	O:0.999737
it	O	O:0.999845
doesn't	O	O:0.998985
work	O	O:0.995682
"	O	O:0.999896
,	O	O:0.999985
we	O	O:0.999960
don't	O	O:0.999690
have	O	O:0.999118
enough	O	O:0.999918
info	O	O:0.999645
to	O	O:0.999841
answer	O	O:0.999981
this	O	O:0.998116
and	O	O:0.999134
it's	O	O:0.999847
not	O	O:0.999652
a	O	O:0.999960
question	O	O:0.999949
that	O	O:0.999807
can	O	O:0.999908
be	O	O:0.999982
answered	O	O:0.999820
.	O	O:0.999502
)	O	O:0.999178
	
This	O	O:0.997645
method	O	O:0.999439
generalizes	O	O:0.999417
to	O	O:0.999980
any	O	O:0.999992
number	O	O:0.999830
of	O	O:0.999947
rows	O	O:0.997785
(	O	O:0.999994
or	O	O:0.999991
dimensions	O	O:0.989585
)	O	O:0.999865
.	O	O:0.999143
	
Another	O	O:0.999818
possibility	O	O:0.986486
would	O	O:0.999764
be	O	O:0.999973
to	O	O:0.999993
put	O	O:0.999942
a	O	O:0.999962
tuple	O	O:0.995640
into	O	O:0.999363
flist	O	O:0.988172
:	O	O:0.999877
#CODE	O	O:0.999070
	
I	O	O:0.999970
downloaded	O	O:0.999811
the	O	O:0.999846
100meg	O	O:0.999365
datafiles	O	O:0.999852
from	O	O:0.999925
the	O	O:0.999983
full	O	O:0.996822
Basemap	O	O:0.997319
distro	O	O:0.997564
.	O	O:0.999852
	
Do	O	O:0.999905
you	O	O:0.999955
have	O	O:0.999931
any	O	O:0.999895
other	O	O:0.999950
ideas	O	O:0.999556
to	O	O:0.999901
handle	O	O:0.999922
that	O	O:0.999549
?	O	O:0.999985
	
This	O	O:0.999889
controls	O	O:0.998762
whether	O	O:0.999907
the	O	O:0.999966
data	O	O:0.999701
limits	O	O:0.999581
or	O	O:0.999981
the	O	O:0.999894
bounding	O	O:0.997072
rectangle's	O	O:0.999716
shape	O	O:0.999880
are	O	O:0.999978
changed	O	O:0.999632
when	O	O:0.998954
the	O	O:0.999930
aspect	O	O:0.998599
/	O	O:0.999825
limits	O	O:0.998515
are	O	O:0.999850
changed	O	O:0.994604
.	O	O:0.999107
	
Could	O	O:0.999636
you	O	O:0.999795
be	O	O:0.999998
able	O	O:0.999807
to	O	O:0.999983
give	O	O:0.999968
me	O	O:0.999993
some	O	O:0.999900
hints	O	O:0.999893
how	O	O:0.999974
to	O	O:0.999950
solve	O	O:0.999986
this	O	O:0.999824
?	O	O:0.999978
	
like	O	O:0.999428
you	O	O:0.999805
could	O	O:0.999049
in	O	O:0.999973
MATLAB	O	O:0.999742
,	O	O:0.999983
as	O	O:0.999989
well	O	O:0.999249
as	O	O:0.999983
having	O	O:0.999117
all	O	O:0.999465
the	O	O:0.999967
features	O	O:0.990563
of	O	O:0.999791
	
I	O	O:0.999963
tried	O	O:0.999839
setting	O	O:0.997862
all	O	O:0.998256
x-values	O	O:0.999188
to	O	O:0.999873
'	O	O:0.999991
1	O	O:0.999803
'	O	O:0.999366
,	O	O:0.999959
but	O	O:0.999907
it	O	O:0.999923
turns	O	O:0.999735
out	O	O:0.999944
as	O	O:0.999986
kind	O	O:0.999671
of	O	O:0.999984
a	O	O:0.999884
2d-diagram	O	O:0.996716
,	O	O:0.999924
anyway	O	O:0.998007
:	O	O:0.999809
	
This	O	O:0.998985
is	O	O:0.999974
the	O	O:0.999904
hacky	O	O:0.999480
way	O	O:0.999933
to	O	O:0.999917
fix	O	O:0.999995
your	O	O:0.999553
aspect	O	O:0.999805
ratio	O	O:0.999656
on	O	O:0.999948
the	O	O:0.999815
image	O	O:0.998283
.	O	O:0.999539
	
Is	O	O:0.999887
Anaconda's	O	O:0.999898
main	O	O:0.998576
advantage	O	O:0.999897
then	O	O:0.999813
that	O	O:0.999932
one	O	O:0.999952
has	O	O:0.999974
essentially	O	O:0.999661
all	O	O:0.999474
one	O	O:0.998765
would	O	O:0.999261
need	O	O:0.998670
,	O	O:0.999987
without	O	O:0.999780
needing	O	O:0.993532
continuously	O	O:0.997897
to	O	O:0.999913
pip	O	O:0.999053
this	O	O:0.999705
and	O	O:0.999837
pip	O	O:0.992038
that	O	O:0.997814
?	O	O:0.999958
	
Just	O	O:0.998975
for	O	O:0.999879
the	O	O:0.999168
record	O	O:0.993671
,	O	O:0.999985
there's	O	O:0.999948
no	O	O:0.999943
need	O	O:0.999694
to	O	O:0.999992
jump	O	O:0.999795
through	O	O:0.999930
all	O	O:0.999802
of	O	O:0.999969
those	O	O:0.995510
hoops	O	O:0.999865
with	O	O:0.999106
PIL	O	O:0.999124
.	O	O:0.999663
	
I'll	O	O:0.999407
play	O	O:0.996392
with	O	O:0.999448
Dermen's	O	O:0.999695
link	O	O:0.999089
as	O	O:0.999983
well	O	O:0.992102
,	O	O:0.999990
but	O	O:0.999914
at	O	O:0.999922
the	O	O:0.999404
moment	O	O:0.996855
the	O	O:0.999929
most	O	O:0.998713
pressing	O	O:0.999916
problem	O	O:0.992158
is	O	O:0.999983
not	O	O:0.998898
having	O	O:0.999852
the	O	O:0.999959
data	O	O:0.999657
points	O	O:0.999634
be	O	O:0.999992
all	O	O:0.999906
squished	O	O:0.997120
together	O	O:0.999596
because	O	O:0.999738
the	O	O:0.999931
spacing	O	O:0.996569
between	O	O:0.996650
the	O	O:0.999992
ticks	O	O:0.994495
is	O	O:0.999994
very	O	O:0.999931
very	O	O:0.999884
small	O	O:0.995267
.	O	O:0.999692
	
This	O	O:0.999168
is	O	O:0.999957
perfect	O	O:0.993280
,	O	O:0.999985
though	O	O:0.999395
I'm	O	O:0.999701
not	O	O:0.999838
sure	O	O:0.999928
exactly	O	O:0.999913
where	O	O:0.998878
I	O	O:0.999989
went	O	O:0.999156
wrong	O	O:0.996551
...	O	O:0.993407
	
you	O	O:0.999721
can	O	O:0.999950
manually	O	O:0.999966
set	O	O:0.999827
the	O	O:0.999996
size	O	O:0.999856
of	O	O:0.999984
the	O	O:0.999922
colorbar	O	O:0.999613
using	O	O:0.996467
:	O	O:0.999733
#CODE	O	O:0.998704
	
Plotting	O	O:0.996333
values	O	O:0.996880
From	O	O:0.999823
a	O	O:0.999949
Array	O	O:0.715719
in	O	O:0.999505
Real	O	O:0.999444
time	O	O:0.999840
using	O	O:0.999691
matplotlib	O	O:0.988935
in	O	O:0.998849
Python	O	O:0.996156
	
I	O	O:0.999913
will	O	O:0.999729
also	O	O:0.999342
gladly	O	O:0.999705
accept	O	O:0.999043
any	O	O:0.999786
examples	O	O:0.999318
where	O	O:0.999324
someone	O	O:0.999690
has	O	O:0.999939
built	O	O:0.999812
up	O	O:0.999972
any	O	O:0.999416
other	O	O:0.999421
distribution	O	O:0.997169
.	O	O:0.999695
	
How	O	O:0.999969
sure	O	O:0.999806
are	O	O:0.999913
you	O	O:0.999972
that	O	O:0.999787
the	O	O:0.999995
code	O	O:0.999256
*	O	O:0.999990
runs	O	O:0.999904
at	O	O:0.999973
all*	O	O:0.998988
?	O	O:0.999902
	
I	O	O:0.999865
was	O	O:0.999976
temporarily	O	O:0.999175
disappeared	O	O:0.999606
at	O	O:0.999972
my	O	O:0.999922
day	O	O:0.999865
job	O	O:0.999324
!	O	O:0.999912
	
In	O	O:0.999757
addition	O	O:0.999206
,	O	O:0.999987
you'll	O	O:0.998991
find	O	O:0.999846
that	O	O:0.999454
`	O	O:0.999996
pylab	O	O:0.991175
`	O	O:0.999993
leaves	O	O:0.997217
a	O	O:0.999992
generous	O	O:0.997253
,	O	O:0.999971
often	O	O:0.999484
undesirable	O	O:0.998785
,	O	O:0.999987
whitespace	O	O:0.998825
around	O	O:0.998899
the	O	O:0.999849
image	O	O:0.994663
.	O	O:0.999450
	
Force	O	O:0.997924
plot	O	O:0.990720
to	O	O:0.999996
have	O	O:0.999970
a	O	O:0.999986
special	O	O:0.999179
size	O	O:0.999951
or	O	O:0.999980
to	O	O:0.999912
increase	O	O:0.999975
the	O	O:0.999959
distance	O	O:0.998758
between	O	O:0.998651
subplots	O	O:0.999741
	
If	O	O:0.999980
you	O	O:0.999931
do	O	O:0.999963
all	O	O:0.999949
the	O	O:0.999979
data	O	O:0.998590
processing	O	O:0.998947
beforehand	O	O:0.999637
,	O	O:0.999983
and	O	O:0.999902
provide	O	O:0.995746
the	O	O:0.998704
(	O	O:0.999969
nearly	O	O:0.998777
)	O	O:0.999952
finished	O	O:0.999339
product	O	O:0.998046
.	O	O:0.999472
	
To	O	O:0.999981
make	O	O:0.999520
it	O	O:0.999979
clearer	O	O:0.999498
I	O	O:0.999997
want	O	O:0.999930
to	O	O:0.999469
get	O	O:0.999982
the	O	O:0.999844
x-axis	O	O:0.998649
and	O	O:0.999913
the	O	O:0.999929
y-axis	O	O:0.999810
range	O	O:0.999692
so	O	O:0.999994
as	O	O:0.999994
to	O	O:0.999970
find	O	O:0.999947
the	O	O:0.999970
mid	O	O:0.988302
point	O	O:0.999837
of	O	O:0.999961
the	O	O:0.999885
grid	O	O:0.992947
.	O	O:0.999717
	
and	O	O:0.999296
you	O	O:0.999412
might	O	O:0.999633
want	O	O:0.999906
to	O	O:0.999867
add	O	O:0.999998
the	O	O:0.999951
ax	O	O:0.988733
to	O	O:0.999964
the	O	O:0.999992
colorbar	O	O:0.998617
.	O	O:0.999780
	
The	O	O:0.999823
question	O	O:0.995807
is	O	O:0.999888
:	O	O:0.999980
Why	O	O:0.999996
does	O	O:0.999738
the	O	O:0.999785
`	O	O:0.999960
matplotlibrc	O	O:0.734531
`	O	O:0.999993
file	O	O:0.999782
have	O	O:0.999858
an	O	O:0.999956
invalid	O	O:0.998794
backend	O	O:0.996134
(	O	O:0.999923
`	O	O:0.999966
pyside	O	O:0.995015
`)	O	O:0.999985
value	O	O:0.998865
in	O	O:0.999987
the	O	O:0.999915
first	O	O:0.998865
place	O	O:0.997545
?	O	O:0.999973
	
Is	O	O:0.999994
that	O	O:0.999748
a	O	O:0.999979
bug	O	O:0.997275
(	O	O:0.999888
could	O	O:0.998661
not	O	O:0.999952
find	O	O:0.999877
any	O	O:0.999938
reports	O	O:0.998889
to	O	O:0.999991
this	O	O:0.999973
)	O	O:0.999969
,	O	O:0.999985
a	O	O:0.999982
feature	O	O:0.971909
(	O	O:0.999944
?!	O	O:0.999981
)	O	O:0.999744
or	O	O:0.999534
	
I'm	O	O:0.999674
not	O	O:0.999916
sure	O	O:0.999756
how	O	O:0.999918
you	O	O:0.999972
want	O	O:0.999898
to	O	O:0.999932
convert	O	O:0.999987
your	O	O:0.999963
data	O	O:0.998930
,	O	O:0.999991
but	O	O:0.999953
if	O	O:0.999910
you	O	O:0.999889
have	O	O:0.999117
irregular	O	O:0.999985
line	O	O:0.999886
lengths	O	O:0.979863
,	O	O:0.999982
the	O	O:0.999909
easiest	O	O:0.997869
way	O	O:0.999689
would	O	O:0.999882
be	O	O:0.999983
something	O	O:0.999737
like	O	O:0.999058
this	O	O:0.998426
:	O	O:0.999930
#CODE	O	O:0.999237
	
No	O	O:0.999888
worries	O	O:0.999199
,	O	O:0.999976
I	O	O:0.999987
was	O	O:0.999953
coming	O	O:0.994579
at	O	O:0.999988
this	O	O:0.999939
from	O	O:0.999863
a	O	O:0.999931
radio	O	O:0.998161
perspective	O	O:0.999355
not	O	O:0.999667
a	O	O:0.999981
gamma-ray	O	O:0.997376
one	O	O:0.998639
.	O	O:0.999398
	
How	O	O:0.999926
can	O	O:0.999555
I	O	O:0.999987
fix	O	O:0.999964
this	O	O:0.998356
?	O	O:0.999971
	
Is	O	O:0.999942
not	O	O:0.999861
there	O	O:0.999877
any	O	O:0.999746
wx	O	O:0.999837
example	O	O:0.997124
in	O	O:0.999994
your	O	O:0.999675
iPython	O	O:0.999033
distribution	O	O:0.999641
?	O	O:0.999938
	
Hmm	O	O:0.999676
,	O	O:0.999987
sorry	O	O:0.999668
,	O	O:0.999995
maybe	O	O:0.999348
I	O	O:0.999974
wasn't	O	O:0.999879
clear	O	O:0.997357
-	O	O:0.999990
colours	O	O:0.975138
[	O	O:0.999994
li	O	O:0.999266
,	O	O:0.999984
:]	O	O:0.999957
only	O	O:0.998976
substitutes	O	O:0.999876
the	O	O:0.999952
tuple	O	O:0.992955
with	O	O:0.999513
index	O	O:0.998343
"	O	O:0.999979
li	O	O:0.996675
"	O	O:0.999231
,	O	O:0.999951
but	O	O:0.999649
I	O	O:0.999991
need	O	O:0.999407
to	O	O:0.999930
substitute	O	O:0.999196
all	O	O:0.999561
tuples	O	O:0.999490
with	O	O:0.999158
indices	O	O:0.976787
in	O	O:0.999956
this	O	O:0.999891
list	O	O:0.995094
called	O	O:0.997592
"	O	O:0.999506
indices	O	O:0.910985
"	O	O:0.999329
(	O	O:0.999769
and	O	O:0.999463
li=length	O	O:0.987585
(	O	O:0.999884
indices	O	O:0.991809
))	O	O:0.999287
	
I've	O	O:0.999439
also	O	O:0.998983
tried	O	O:0.999753
installing	O	O:0.994349
1.3.0	O	O:0.995194
through	O	O:0.999560
pip	O	O:0.974638
as	O	O:0.999987
well	O	O:0.999267
as	O	O:0.999940
source	O	O:0.996348
.	O	O:0.999533
	
Any	O	O:0.999901
help	O	O:0.978858
would	O	O:0.999539
be	O	O:0.999990
much	O	O:0.999594
appreciated	O	O:0.996966
.	O	O:0.997389
	
Maybe	O	O:0.999232
you	O	O:0.999934
need	O	O:0.999788
to	O	O:0.999966
rescale	O	O:0.999987
with	O	O:0.999823
1	O	O:0.999903
/	O	O:0.999957
30000	O	O:0.999385
to	O	O:0.999991
be	O	O:0.999995
at	O	O:0.999953
the	O	O:0.999725
right	O	O:0.999606
place	O	O:0.998188
on	O	O:0.999997
your	O	O:0.999860
graph	O	O:0.998959
.	O	O:0.999731
	
Changing	O	O:0.999685
this	O	O:0.997403
would	O	O:0.999668
require	O	O:0.997536
low-level	O	O:0.999566
tweaking	O	O:0.998724
.	O	O:0.998533
	
I've	O	O:0.999665
also	O	O:0.999407
refined	O	O:0.999984
your	O	O:0.999165
approach	O	O:0.999909
to	O	O:0.999921
allow	O	O:0.999900
zooming	O	O:0.999599
in	O	O:0.999964
over	O	O:0.999975
a	O	O:0.999990
section	O	O:0.999558
of	O	O:0.999960
the	O	O:0.999889
data	O	O:0.999262
and	O	O:0.999918
to	O	O:0.999972
produce	O	O:0.999716
better	O	O:0.999892
results	O	O:0.999339
at	O	O:0.999925
the	O	O:0.999805
borders	O	O:0.871914
.	O	O:0.999598
	
Any	O	O:0.999911
help	O	O:0.980624
would	O	O:0.999777
be	O	O:0.999949
appreciated	O	O:0.999023
.	O	O:0.997721
	
Can	O	O:0.999667
someone	O	O:0.999810
help	O	O:0.998840
me	O	O:0.999995
sort	O	O:0.997700
out	O	O:0.999968
the	O	O:0.999826
issue	O	O:0.998890
resulting	O	O:0.999244
to	O	O:0.999972
such	O	O:0.999993
an	O	O:0.999957
error	O	O:0.998067
.	O	O:0.999600
	
Is	O	O:0.999985
there	O	O:0.999731
any	O	O:0.999763
way	O	O:0.999791
,	O	O:0.999981
I	O	O:0.999990
can	O	O:0.999972
save	O	O:0.999872
a	O	O:0.999995
magnified	O	O:0.999205
version	O	O:0.997844
for	O	O:0.999858
proper	O	O:0.997822
visualisation	O	O:0.996481
later	O	O:0.999546
?	O	O:0.999902
	
So	O	O:0.999895
let's	O	O:0.999928
say	O	O:0.999879
I	O	O:0.999995
only	O	O:0.999960
need	O	O:0.992526
`	O	O:0.999962
4402	O	O:0.998704
x	O	O:0.999537
4410	O	O:0.894234
`	O	O:0.999977
but	O	O:0.999257
I	O	O:0.999996
don't	O	O:0.999829
know	O	O:0.991248
the	O	O:0.999513
index	O	O:0.980294
.	O	O:0.999686
	
I	O	O:0.999953
had	O	O:0.999925
to	O	O:0.999878
upgrade	O	O:0.998369
to	O	O:0.999976
most	O	O:0.999892
recent	O	O:0.999834
MPL	O	O:0.999912
to	O	O:0.999970
find	O	O:0.999900
the	O	O:0.999743
subplots	O	O:0.999105
method	O	O:0.999761
of	O	O:0.999969
pylab	O	O:0.987092
.	O	O:0.999798
	
averaging	O	O:0.999450
elements	O	O:0.999016
in	O	O:0.999973
a	O	O:0.999963
matrix	O	O:0.988851
with	O	O:0.999568
the	O	O:0.999806
corresponding	O	O:0.998626
elements	O	O:0.999796
in	O	O:0.999960
another	O	O:0.999511
matrix	O	O:0.919456
(	O	O:0.999916
in	O	O:0.999950
python	O	O:0.996989
)	O	O:0.999772
	
We	O	O:0.999966
consider	O	O:0.998304
now	O	O:0.999981
that	O	O:0.998775
`	O	O:0.999975
--	O	O:0.999967
pylab	O	O:0.997254
`	O	O:0.999977
was	O	O:0.999735
a	O	O:0.999988
mistake	O	O:0.969330
,	O	O:0.999830
but	O	O:0.999922
that	O	O:0.998923
it	O	O:0.999888
was	O	O:0.999948
still	O	O:0.999370
really	O	O:0.999802
usefull	O	O:0.998528
at	O	O:0.999879
the	O	O:0.999848
beginning	O	O:0.998991
of	O	O:0.999573
IPython	O	O:0.995752
.	O	O:0.999900
	
Is	O	O:0.999991
there	O	O:0.999777
a	O	O:0.999988
way	O	O:0.999357
to	O	O:0.999748
increase	O	O:0.999865
the	O	O:0.999906
thickness	O	O:0.998028
and	O	O:0.999990
size	O	O:0.999914
of	O	O:0.999964
ticks	O	O:0.997680
in	O	O:0.999948
matplotlib	O	O:0.996651
without	O	O:0.999252
having	O	O:0.996315
to	O	O:0.999880
write	O	O:0.999957
a	O	O:0.999992
long	O	O:0.999907
piece	O	O:0.998646
of	O	O:0.999952
code	O	O:0.998698
like	O	O:0.999936
this	O	O:0.998143
:	O	O:0.999922
#CODE	O	O:0.999076
	
Or	O	O:0.999981
you	O	O:0.999610
could	O	O:0.999744
define	O	O:0.999859
column	O	O:0.999656
'	O	O:0.999978
date_obj	O	O:0.998261
'	O	O:0.999970
as	O	O:0.999863
the	O	O:0.999902
index	O	O:0.997971
of	O	O:0.999993
your	O	O:0.999780
data	O	O:0.999492
:	O	O:0.999978
#CODE	O	O:0.999640
	
Am	O	O:0.999892
I	O	O:0.999986
missing	O	O:0.999855
something	O	O:0.996436
,	O	O:0.999959
or	O	O:0.999994
have	O	O:0.999392
you	O	O:0.999992
left	O	O:0.999326
out	O	O:0.999954
all	O	O:0.998938
the	O	O:0.999967
plot	O	O:0.937079
commands	O	O:0.999660
?	O	O:0.999991
	
This	O	O:0.999059
is	O	O:0.999988
my	O	O:0.999892
first	O	O:0.999736
attempt	O	O:0.999681
at	O	O:0.999786
python	O	O:0.987812
,	O	O:0.999960
however	O	O:0.998630
,	O	O:0.999854
and	O	O:0.999935
am	O	O:0.999961
still	O	O:0.993881
finding	O	O:0.999739
out	O	O:0.998992
how	O	O:0.999293
it	O	O:0.999794
works	O	O:0.999845
,	O	O:0.999992
so	O	O:0.999985
please	O	O:0.999550
put	O	O:0.999764
me	O	O:0.999972
right	O	O:0.998357
if	O	O:0.999982
this	O	O:0.999951
idea	O	O:0.999010
is	O	O:0.999975
fundamentally	O	O:0.997999
flawed	O	O:0.998805
!	O	O:0.999876
	
Finally	O	O:0.998468
,	O	O:0.999977
here's	O	O:0.999920
a	O	O:0.999957
sample	O	O:0.997072
portion	O	O:0.999376
of	O	O:0.999973
an	O	O:0.999309
old	O	O:0.999510
(	O	O:0.999977
bad	O	O:0.999770
)	O	O:0.999987
data	O	O:0.999494
file	O	O:0.998695
:	O	O:0.999977
#CODE	O	O:0.999576
	
If	O	O:0.999965
you	O	O:0.999785
you	O	O:0.999973
have	O	O:0.999957
any	O	O:0.999948
questions	O	O:0.999830
,	O	O:0.999987
please	O	O:0.999833
leave	O	O:0.999334
a	O	O:0.999907
comment	O	O:0.986596
.	O	O:0.999521
	
Where	O	O:0.999796
exactly	O	O:0.997752
is	O	O:0.999981
the	O	O:0.999850
problem	O	O:0.995842
?	O	O:0.999953
	
The	O	O:0.999948
last	O	O:0.999081
dutch	O	O:0.998454
sentence	O	O:0.999953
does	O	O:0.999834
mean	O	O:0.998524
something	O	O:0.999935
like	O	O:0.997200
:	O	O:0.999991
The	O	O:0.999979
system	O	O:0.999678
can't	O	O:0.999626
find	O	O:0.999859
the	O	O:0.999933
specified	O	O:0.999733
file	O	O:0.998474
.	O	O:0.999867
	
This	O	O:0.998475
is	O	O:0.999997
nice	O	O:0.999412
of	O	O:0.999997
them	O	O:0.999618
,	O	O:0.999987
as	O	O:0.999963
not	O	O:0.999095
all	O	O:0.999769
Windows	O	O:0.999597
users	O	O:0.999442
have	O	O:0.999496
C++	O	O:0.999941
compilers	O	O:0.999715
available	O	O:0.999600
.	O	O:0.999567
	
The	O	O:0.999987
root	O	O:0.999615
of	O	O:0.999962
the	O	O:0.999940
problem	O	O:0.993046
is	O	O:0.999990
that	O	O:0.999710
matplotlib	O	O:0.999968
tries	O	O:0.999463
to	O	O:0.999941
put	O	O:0.999875
all	O	O:0.999904
bins	O	O:0.998878
on	O	O:0.999943
the	O	O:0.999962
plot	O	O:0.972593
.	O	O:0.999823
	
This	O	O:0.999611
question	O	O:0.999624
has	O	O:0.999987
probably	O	O:0.999763
a	O	O:0.999983
totally	O	O:0.997832
simple	O	O:0.992876
solution	O	O:0.999823
but	O	O:0.999752
I	O	O:0.999995
just	O	O:0.998470
can't	O	O:0.999283
find	O	O:0.999162
it	O	O:0.999864
.	O	O:0.999762
	
Any	O	O:0.999744
suggestions	O	O:0.998168
would	O	O:0.999654
be	O	O:0.999957
awesome	O	O:0.999463
.	O	O:0.998748
	
In	O	O:0.999745
non-interactive	O	O:0.999632
mode	O	O:0.999049
,	O	O:0.999996
display	O	O:0.999095
all	O	O:0.998676
figures	O	O:0.997074
and	O	O:0.999731
block	O	O:0.999626
until	O	O:0.995254
the	O	O:0.999064
	
This	O	O:0.998996
is	O	O:0.999951
all	O	O:0.999866
very	O	O:0.999833
new	O	O:0.999442
to	O	O:0.999912
me	O	O:0.999978
.	O	O:0.999583
	
1	O	O:0.999465
)	O	O:0.999881
Let's	O	O:0.999831
assume	O	O:0.999265
I	O	O:0.999998
take	O	O:0.999594
1	O	O:0.999917
sample	O	O:0.997425
`	O	O:0.999977
x	O	O:0.997064
=	O	O:0.999997
[	O	O:0.999990
1	O	O:0.999976
,	O	O:0.999995
2	O	O:0.999984
]`	O	O:0.999966
from	O	O:0.999429
the	O	O:0.999951
dataset	O	O:0.998770
	
I	O	O:0.999991
have	O	O:0.999884
a	O	O:0.999929
4d	O	O:0.999934
or	O	O:0.999764
higher	O	O:0.999118
ellipsoid	O	O:0.999417
in	O	O:0.999774
matrix	O	O:0.994939
form	O	O:0.998544
(	O	O:0.999915
which	O	O:0.999923
form	O	O:0.999372
is	O	O:0.999988
important	O	O:0.998992
)	O	O:0.999523
.	O	O:0.998132
	
I	O	O:0.999974
didn't	O	O:0.999831
look	O	O:0.996963
into	O	O:0.999829
the	O	O:0.999955
documentation	O	O:0.994924
,	O	O:0.999991
simply	O	O:0.999834
used	O	O:0.999727
the	O	O:0.999663
dot	O	O:0.998910
completion	O	O:0.999750
on	O	O:0.999986
the	O	O:0.999898
handle	O	O:0.992132
	
Here	O	O:0.997299
is	O	O:0.999995
your	O	O:0.999177
example	O	O:0.999537
with	O	O:0.999845
those	O	O:0.998441
modifications	O	O:0.997788
and	O	O:0.999861
also	O	O:0.999871
with	O	O:0.999905
a	O	O:0.999747
single	O	O:0.998857
layout	O	O:0.999833
computed	O	O:0.999587
at	O	O:0.999887
the	O	O:0.999722
beginning	O	O:0.999680
that	O	O:0.997919
is	O	O:0.999978
reused	O	O:0.999486
in	O	O:0.999898
the	O	O:0.999905
loop	O	O:0.992421
.	O	O:0.999750
	
I	O	O:0.999920
now	O	O:0.999593
understand	O	O:0.999656
that	O	O:0.999149
I	O	O:0.999998
need	O	O:0.999926
to	O	O:0.999929
generate	O	O:0.999979
all	O	O:0.999844
the	O	O:0.999989
triplets	O	O:0.994431
across	O	O:0.999799
the	O	O:0.999981
three	O	O:0.998873
tables	O	O:0.997478
(	O	O:0.999997
to	O	O:0.999992
cover	O	O:0.999965
all	O	O:0.999922
the	O	O:0.999932
combinations	O	O:0.975460
)	O	O:0.999864
.	O	O:0.999320
	
i	O	O:0.999980
dont	O	O:0.999810
know	O	O:0.999354
how	O	O:0.999889
array	O	O:0.997733
concatenation	O	O:0.998582
works	O	O:0.999861
on	O	O:0.999976
numpy	O	O:0.998088
arrays	O	O:0.998610
	
I	O	O:0.999921
can't	O	O:0.999971
seem	O	O:0.999788
to	O	O:0.999979
get	O	O:0.999967
my	O	O:0.999926
head	O	O:0.998290
around	O	O:0.999629
why	O	O:0.999804
it	O	O:0.999915
doesn't	O	O:0.999898
show	O	O:0.999734
the	O	O:0.999969
value	O	O:0.999669
128	O	O:0.999739
as	O	O:0.999990
grey	O	O:0.999787
with	O	O:0.999801
I	O	O:0.999995
have	O	O:0.999863
chosen	O	O:0.998619
the	O	O:0.999993
cmap	O	B-API:0.776119
to	O	O:0.999984
be	O	O:0.999995
gray-scale	O	O:0.998728
.	O	O:0.999312
	
what	O	O:0.999407
do	O	O:0.999962
you	O	O:0.999979
mean	O	O:0.999158
with	O	O:0.999887
%s	O	O:0.999649
?	O	O:0.999974
	
If	O	O:0.999978
that	O	O:0.997256
isn't	O	O:0.999947
what	O	O:0.999295
you	O	O:0.999867
want	O	O:0.999895
,	O	O:0.999975
I	O	O:0.999987
would	O	O:0.999750
recommend	O	O:0.999539
doing	O	O:0.999918
something	O	O:0.999717
where	O	O:0.998632
you	O	O:0.999924
create	O	O:0.999875
a	O	O:0.999988
PNG	O	O:0.999958
image	O	O:0.999631
of	O	O:0.999931
what	O	O:0.998835
you	O	O:0.999951
do	O	O:0.999978
want	O	O:0.999912
,	O	O:0.999983
create	O	O:0.999943
a	O	O:0.999933
child	O	O:0.997700
QLabel	O	O:0.998062
,	O	O:0.999874
and	O	O:0.999950
move	O	O:0.998915
the	O	O:0.999711
child	O	O:0.993070
widget	O	O:0.998162
around	O	O:0.999181
in	O	O:0.999982
your	O	O:0.998549
mouseMoveEvent	O	O:0.994284
.	O	O:0.999489
	
Any	O	O:0.999755
suggestion	O	O:0.998382
is	O	O:0.999901
welcome	O	O:0.997630
.	O	O:0.999511
	
I	O	O:0.999760
was	O	O:0.999971
trying	O	O:0.998548
to	O	O:0.999900
add	O	O:0.999987
a	O	O:0.999964
custom	O	O:0.952625
widget	O	O:0.999777
into	O	O:0.999522
qtdesginer	O	O:0.999895
using	O	O:0.998398
following	O	O:0.996679
code	O	O:0.985580
#CODE	O	O:0.999332
	
source	O	O:0.995502
:	O	O:0.999957
#URL	O	O:0.999361
	
As	O	O:0.999926
has	O	O:0.999927
been	O	O:0.998335
pointed	O	O:0.999568
out	O	O:0.999837
above	O	O:0.996010
,	O	O:0.999979
this	O	O:0.999845
will	O	O:0.998411
get	O	O:0.999941
more	O	O:0.999670
complicated	O	O:0.999731
if	O	O:0.999967
the	O	O:0.999969
both	O	O:0.998635
the	O	O:0.999972
y	O	O:0.998428
graphs	O	O:0.999812
were	O	O:0.999864
defined	O	O:0.999731
at	O	O:0.999982
different	O	O:0.999302
x	O	O:0.997834
points	O	O:0.993414
.	O	O:0.999806
	
@USER	O	O:0.999081
Simoes	O	O:0.992607
,	O	O:0.999991
what	O	O:0.999779
happens	O	O:0.998996
is	O	O:0.999989
you	O	O:0.999924
have	O	O:0.999625
Nan's	O	O:0.999902
in	O	O:0.999976
various	O	O:0.999411
places	O	O:0.997474
in	O	O:0.999993
your	O	O:0.999651
array	O	O:0.999259
?	O	O:0.999944
	
An	O	O:0.999945
example	O	O:0.997746
script	O	O:0.999868
with	O	O:0.999888
generated	O	O:0.999955
data	O	O:0.999885
rather	O	O:0.999973
than	O	O:0.999496
the	O	O:0.999960
real	O	O:0.997968
data	O	O:0.999431
is	O	O:0.999913
:	O	O:0.999975
#CODE	O	O:0.999616
	
Also	O	O:0.998704
,	O	O:0.999978
it's	O	O:0.999627
harder	O	O:0.999672
to	O	O:0.999963
reproduce	O	O:0.999904
across	O	O:0.999886
multiple	O	O:0.999531
machines	O	O:0.992460
(	O	O:0.999996
even	O	O:0.999371
if	O	O:0.999993
that	O	O:0.999935
just	O	O:0.999733
means	O	O:0.999701
"	O	O:0.999980
my	O	O:0.999350
current	O	O:0.999220
machine	O	O:0.998035
,	O	O:0.999903
and	O	O:0.999940
the	O	O:0.999816
new	O	O:0.992426
laptop	O	O:0.996179
I'll	O	O:0.999854
have	O	O:0.998530
18	O	O:0.999823
months	O	O:0.999815
from	O	O:0.999730
now	O	O:0.999788
when	O	O:0.999879
I've	O	O:0.999952
forgotten	O	O:0.999550
how	O	O:0.999854
to	O	O:0.999956
solve	O	O:0.999958
it	O	O:0.999931
")	O	O:0.999713
.	O	O:0.999105
	
The	O	O:0.999740
words	O	O:0.997748
'	O	O:0.999744
non-default	O	O:0.996303
'	O	O:0.999689
and	O	O:0.999469
'	O	O:0.999894
normal	O	O:0.949514
'	O	O:0.999803
are	O	O:0.999873
mine	O	O:0.999046
-	O	O:0.999981
I'm	O	O:0.999865
not	O	O:0.999887
sure	O	O:0.999772
what	O	O:0.999954
they	O	O:0.999963
mean	O	O:0.995509
yet	O	O:0.999703
.	O	O:0.999690
	
(	O	O:0.999979
think	O	O:0.999617
of	O	O:0.999981
it	O	O:0.999968
as	O	O:0.999993
a	O	O:0.999987
unit	O	O:0.999102
square	O	O:0.998982
)	O	O:0.999351
	
This	O	O:0.999894
code	O	O:0.999926
uses	O	O:0.999927
a	O	O:0.999969
Counter	O	O:0.810913
to	O	O:0.999919
count	O	O:0.999708
the	O	O:0.999978
number	O	O:0.998874
of	O	O:0.999832
instances	O	O:0.999825
that	O	O:0.999856
an	O	O:0.999887
object	O	O:0.998689
occurs	O	O:0.999670
in	O	O:0.999938
an	O	O:0.999926
array	O	O:0.997289
(	O	O:0.999883
in	O	O:0.999986
this	O	O:0.999975
case	O	O:0.999909
counting	O	O:0.999935
the	O	O:0.999898
number	O	O:0.998568
of	O	O:0.999973
times	O	O:0.999426
an	O	O:0.999985
integer	O	O:0.998353
is	O	O:0.999927
in	O	O:0.999814
your	O	O:0.999923
list	O	O:0.988820
)	O	O:0.999798
.	O	O:0.994346
	
In	O	O:0.999871
the	O	O:0.999894
image	O	O:0.999498
above	O	O:0.999175
I'm	O	O:0.999922
trying	O	O:0.999799
to	O	O:0.999793
extract	O	O:0.999562
iso-value	O	O:0.999787
25	O	O:0.999963
from	O	O:0.999757
the	O	O:0.999916
scalar	O	O:0.999847
field	O	O:0.999820
of	O	O:0.999970
f	O	O:0.995510
(	O	O:0.999986
x	O	O:0.999407
,	O	O:0.999996
y	O	O:0.999910
)=	O	O:0.999075
x^3+y^3	O	O:0.995965
.	O	O:0.999684
	
Is	O	O:0.999984
there	O	O:0.999831
any	O	O:0.999808
other	O	O:0.999869
way	O	O:0.999862
I	O	O:0.999971
can	O	O:0.999975
plot	O	O:0.999118
my	O	O:0.999934
result	O	O:0.999588
continuously	O	O:0.998938
?	O	O:0.999969
	
at	O	O:0.999951
lag	O	O:0.999808
0	O	O:0.999794
,	O	O:0.999972
the	O	O:0.999839
ACF	O	O:0.998755
is	O	O:0.999903
0.5	O	O:0.985282
.	O	O:0.999762
	
The	O	O:0.999900
example	O	O:0.999332
talks	O	O:0.999370
about	O	O:0.999957
a	O	O:0.999937
fit	O	O:0.997054
to	O	O:0.999951
power	O	O:0.999849
law	O	O:0.995591
,	O	O:0.999983
but	O	O:0.999958
clearly	O	O:0.999310
a	O	O:0.999931
straight	O	O:0.999811
line	O	O:0.999636
could	O	O:0.999692
be	O	O:0.999998
done	O	O:0.999710
as	O	O:0.999963
well	O	O:0.994326
.	O	O:0.999571
	
As	O	O:0.999920
I	O	O:0.999976
see	O	O:0.999960
it	O	O:0.999874
,	O	O:0.999978
I	O	O:0.999989
could	O	O:0.999091
resolve	O	O:0.991973
and	O	O:0.999959
make	O	O:0.998089
it	O	O:0.999883
work	O	O:0.999423
if	O	O:0.999967
I	O	O:0.999995
could	O	O:0.999687
adjust	O	O:0.998914
the	O	O:0.999972
line	O	O:0.998164
spacing	O	O:0.999562
/	O	O:0.999834
height	O	O:0.999825
to	O	O:0.999984
be	O	O:0.999998
less	O	O:0.999881
than	O	O:0.999882
what	O	O:0.999533
the	O	O:0.999975
font	O	O:0.999359
requests	O	O:0.997057
.	O	O:0.999860
	
tells	O	O:0.999466
the	O	O:0.999816
writer	O	O:0.999205
to	O	O:0.999972
temporarily	O	O:0.999993
save	O	O:0.999913
the	O	O:0.999955
frames	O	O:0.999588
to	O	O:0.999989
disc	O	O:0.999983
before	O	O:0.999860
composing	O	O:0.999786
the	O	O:0.999810
movie	O	O:0.996575
,	O	O:0.999981
which	O	O:0.999745
side-steps	O	O:0.999793
the	O	O:0.999933
problem	O	O:0.994567
.	O	O:0.999693
	
Select	O	O:0.997786
starting	O	O:0.999405
color	O	O:0.998842
in	O	O:0.999981
matplotlib	O	O:0.998773
colormap	O	O:0.982821
	
I	O	O:0.999914
know	O	O:0.999939
this	O	O:0.999618
question	O	O:0.999448
is	O	O:0.999987
a	O	O:0.999945
couple	O	O:0.997461
years	O	O:0.998582
old	O	O:0.998760
,	O	O:0.999958
but	O	O:0.999935
since	O	O:0.999844
there	O	O:0.998343
is	O	O:0.999992
no	O	O:0.999637
accepted	O	O:0.999807
answer	O	O:0.999235
,	O	O:0.999894
I'll	O	O:0.996464
add	O	O:0.999660
what	O	O:0.997472
works	O	O:0.999780
for	O	O:0.999942
me	O	O:0.999711
.	O	O:0.998975
	
include	O	O:0.999107
the	O	O:0.999983
piece	O	O:0.997805
of	O	O:0.999977
the	O	O:0.999983
code	O	O:0.999850
where	O	O:0.999679
you	O	O:0.999972
make	O	O:0.999943
call	O	O:0.996248
to	O	O:0.999967
`	O	O:0.999955
mpl_connect	O	B-API:0.993437
`	O	O:0.999835
	
Is	O	O:0.999985
there	O	O:0.999694
any	O	O:0.999929
ready	O	O:0.999099
to	O	O:0.999917
use	O	O:0.999611
function	O	O:0.999109
based	O	O:0.999242
on	O	O:0.999928
python's	O	O:0.998860
matplolib	O	O:0.998963
?	O	O:0.999949
	
-2	O	O:0.997031
is	O	O:0.999990
high	O	O:0.997789
of	O	O:0.999931
indices	O	O:0.989601
range	O	O:0.998184
and	O	O:0.999943
then	O	O:0.999140
low	O	O:0.999835
of	O	O:0.999913
indices	O	O:0.983188
range	O	O:0.998546
	
Any	O	O:0.999512
insight	O	O:0.999460
you	O	O:0.999751
could	O	O:0.999282
provide	O	O:0.999939
that	O	O:0.999139
would	O	O:0.999959
help	O	O:0.998754
get	O	O:0.999971
me	O	O:0.999948
started	O	O:0.999465
the	O	O:0.999922
proper	O	O:0.997850
way	O	O:0.999326
would	O	O:0.999776
be	O	O:0.999974
fantastic	O	O:0.999189
.	O	O:0.998928
	
(	O	O:0.999981
I	O	O:0.999987
can	O	O:0.999982
open	O	O:0.998954
a	O	O:0.999996
new	O	O:0.999274
question	O	O:0.999249
if	O	O:0.999920
that's	O	O:0.999943
perferable	O	O:0.986307
)	O	O:0.999695
	
For	O	O:0.999880
example	O	O:0.997378
,	O	O:0.999984
here's	O	O:0.999961
a	O	O:0.999954
simple	O	O:0.999481
bit	O	O:0.999892
of	O	O:0.999969
code	O	O:0.999517
that	O	O:0.999985
sets	O	O:0.999959
up	O	O:0.999904
a	O	O:0.999996
list	O	O:0.991979
of	O	O:0.999814
colors	O	O:0.944853
based	O	O:0.999922
on	O	O:0.999848
whether	O	O:0.999741
the	O	O:0.999983
data	O	O:0.998188
is	O	O:0.999991
positive	O	O:0.998029
or	O	O:0.999968
negative	O	O:0.972646
:	O	O:0.999973
#CODE	O	O:0.999731
	
With	O	O:0.999772
that	O	O:0.999677
example	O	O:0.999974
data	O	O:0.999860
I	O	O:0.999985
was	O	O:0.999978
getting	O	O:0.989084
"	O	O:0.999847
shape	O	O:0.999344
mismatch	O	O:0.999370
"	O	O:0.999746
errors	O	O:0.992247
.	O	O:0.999618
	
Then	O	O:0.996821
,	O	O:0.999993
I'd	O	O:0.999938
use	O	O:0.999800
POV-Ray	O	O:0.998182
or	O	O:0.999840
Blender	O	O:0.999500
to	O	O:0.999965
model	O	O:0.999854
the	O	O:0.999973
planes	O	O:0.988333
at	O	O:0.999958
whatever	O	O:0.999868
angles	O	O:0.986539
,	O	O:0.999993
spheres	O	O:0.998501
for	O	O:0.999951
the	O	O:0.999719
round	O	B-API:0.792565
things	O	O:0.997080
(	O	O:0.999986
planets	O	O:0.999112
?	O	O:0.999984
)	O	O:0.999683
.	O	O:0.999125
	
So	O	O:0.999809
,	O	O:0.999998
thus	O	O:0.999886
far	O	O:0.999903
,	O	O:0.999992
all	O	O:0.999052
I	O	O:0.999987
produce	O	O:0.989352
is	O	O:0.999395
:	O	O:0.999896
	
I'm	O	O:0.999879
hoping	O	O:0.999780
I	O	O:0.999973
can	O	O:0.999962
find	O	O:0.999943
a	O	O:0.999949
funciton	O	O:0.996829
(	O	O:0.999964
or	O	O:0.999944
build	O	O:0.999475
one	O	O:0.999870
)	O	O:0.999965
that	O	O:0.999868
does	O	O:0.999812
new_ids_arr	O	O:0.999217
=	O	O:0.999951
new_ids	O	O:0.989437
*	O	O:0.998681
new_ids^Transpose	O	O:0.997244
...	O	O:0.999419
or	O	O:0.999949
similar	O	O:0.997061
	
Any	O	O:0.999816
help	O	O:0.997690
much	O	O:0.999083
appreciated	O	O:0.998555
.	O	O:0.998127
	
But	O	O:0.999938
there	O	O:0.998829
are	O	O:0.999768
still	O	O:0.997791
white	O	O:0.999766
edges	O	O:0.895287
around	O	O:0.999587
(	O	O:0.999956
I	O	O:0.999993
have	O	O:0.999931
added	O	O:0.999713
a	O	O:0.999991
screenshot	O	O:0.999584
to	O	O:0.999963
my	O	O:0.999988
original	O	O:0.999191
question	O	O:0.999506
)	O	O:0.999814
	
How	O	O:0.999909
could	O	O:0.999427
I	O	O:0.999997
use	O	O:0.999741
`	O	O:0.999590
matplotlib	O	O:0.977281
`	O	O:0.999981
to	O	O:0.999660
represent	O	O:0.999997
such	O	O:0.999915
a	O	O:0.999993
matrix	O	O:0.990064
as	O	O:0.999936
a	O	O:0.999978
grid	O	O:0.996086
of	O	O:0.999824
red	O	O:0.995893
and	O	O:0.999902
black	O	O:0.996094
squares	O	O:0.997253
?	O	O:0.999945
	
The	O	O:0.999860
thick	O	O:0.999566
grey	O	O:0.999616
line	O	O:0.999777
in	O	O:0.999965
the	O	O:0.999972
middle	O	O:0.992076
of	O	O:0.999971
the	O	O:0.999902
violin	O	O:0.995913
is	O	O:0.999950
the	O	O:0.999774
bootstrapped	O	O:0.996898
99%	O	O:0.999785
confidence	O	O:0.999359
interval	O	O:0.999905
of	O	O:0.999963
the	O	O:0.999719
mean	O	O:0.991842
,	O	O:0.999989
which	O	O:0.999639
is	O	O:0.999990
the	O	O:0.999516
white	O	O:0.998859
horizontal	O	O:0.999278
line	O	O:0.999697
,	O	O:0.999998
both	O	O:0.999845
from	O	O:0.999318
pointplot	O	B-API:0.864632
.	O	O:0.999898
	
@USER	O	O:0.999415
I	O	O:0.999976
up	O	O:0.999939
voted	O	O:0.993798
you	O	O:0.999676
but	O	O:0.999896
add	O	O:0.999366
`	O	O:0.999752
import	O	O:0.999051
numpy	O	O:0.999809
as	O	O:0.999969
np	O	O:0.998189
`	O	O:0.999753
	
So	O	O:0.999924
,	O	O:0.999992
when	O	O:0.999534
you	O	O:0.999936
reduce	O	O:0.999937
to	O	O:0.999982
2	O	O:0.999997
dimensions	O	O:0.998041
,	O	O:0.999996
the	O	O:0.999987
power	O	O:0.996000
is	O	O:0.999990
the	O	O:0.999986
sum	O	O:0.999317
of	O	O:0.999971
the	O	O:0.999962
first	O	O:0.999644
2	O	O:0.999956
eigen	O	O:0.995513
values	O	O:0.998689
.	O	O:0.999626
	
Indexing	O	O:0.998282
starts	O	O:0.999523
with	O	O:0.999638
`	O	O:0.999945
0	O	O:0.999547
`	O	O:0.999971
in	O	O:0.998787
Python	O	O:0.998992
(	O	O:0.999872
and	O	O:0.999959
most	O	O:0.999815
any	O	O:0.999402
other	O	O:0.999800
programming	O	O:0.998828
language	O	O:0.998316
I	O	O:0.999993
know	O	O:0.999011
)	O	O:0.999060
.	O	O:0.997312
	
I	O	O:0.999992
have	O	O:0.999838
a	O	O:0.999926
matrix	O	O:0.998558
file	O	O:0.999030
of	O	O:0.999910
Hurricane	O	O:0.999782
data	O	O:0.999243
and	O	O:0.999927
it	O	O:0.999962
plots	O	O:0.998187
with	O	O:0.999859
the	O	O:0.997955
command	O	O:0.982521
:	O	O:0.999983
#CODE	O	O:0.999764
	
If	O	O:0.999993
they	O	O:0.999731
enter	O	O:0.950219
30	O	O:0.999060
,	O	O:0.999990
they	O	O:0.999803
will	O	O:0.999498
look	O	O:0.999340
at	O	O:0.999987
a	O	O:0.999837
30-minute	O	O:0.999467
time	O	O:0.991587
window	O	O:0.999377
,	O	O:0.999950
if	O	O:0.999980
they	O	O:0.999924
type	O	O:0.999064
5	O	O:0.999883
,	O	O:0.999987
matplotlib	O	O:0.998995
picks	O	O:0.999697
this	O	O:0.999881
up	O	O:0.999914
,	O	O:0.999990
data	O	O:0.999920
gets	O	O:0.998684
trimmed	O	O:0.999551
,	O	O:0.999921
and	O	O:0.999975
only	O	O:0.998861
5	O	O:0.999901
minutes	O	O:0.998735
worth	O	O:0.999875
of	O	O:0.999984
data	O	O:0.999925
gets	O	O:0.999744
shown	O	O:0.999226
.	O	O:0.999810
	
In	O	O:0.999897
the	O	O:0.999917
meanwhile	O	O:0.999802
does	O	O:0.999827
any	O	O:0.999971
one	O	O:0.999966
has	O	O:0.999892
a	O	O:0.999947
better	O	O:0.998683
suggestion	O	O:0.998421
?	O	O:0.999881
	
I	O	O:0.999952
want	O	O:0.999848
it	O	O:0.999792
at	O	O:0.999957
y=	O	O:0.999899
10.5	O	O:0.975930
,	O	O:0.999978
specifically	O	O:0.998047
.	O	O:0.999422
	
I	O	O:0.999983
then	O	O:0.999904
plot	O	O:0.999325
each	O	O:0.999879
of	O	O:0.999982
these	O	O:0.998743
values	O	O:0.990647
,	O	O:0.999972
but	O	O:0.999929
to	O	O:0.999960
get	O	O:0.999927
a	O	O:0.999996
more	O	O:0.999266
sensible	O	O:0.999435
result	O	O:0.999648
,	O	O:0.999968
I	O	O:0.999998
need	O	O:0.999662
to	O	O:0.999977
take	O	O:0.999979
the	O	O:0.999995
mean	O	O:0.996690
of	O	O:0.999994
all	O	O:0.999682
of	O	O:0.999993
these	O	O:0.998473
files	O	O:0.999026
for	O	O:0.999929
each	O	O:0.999431
cell	O	O:0.996131
,	O	O:0.999967
and	O	O:0.999953
plot	O	O:0.996595
that	O	O:0.999790
with	O	O:0.999940
the	O	O:0.999806
standard	O	O:0.998046
deviation	O	O:0.999515
obtained	O	O:0.999980
as	O	O:0.999973
error	O	O:0.999772
bars	O	O:0.997898
.	O	O:0.999696
	
I'm	O	O:0.999928
using	O	O:0.999981
data	O	O:0.999189
of	O	O:0.999834
the	O	O:0.999859
form	O	O:0.998793
:	O	O:0.999947
`	O	O:0.999971
[	O	O:0.999957
num1	O	O:0.998560
,	O	O:0.999965
num2	O	O:0.998388
,...,	O	O:0.979615
numk	O	O:0.995657
]`	O	O:0.999651
(	O	O:0.999973
an	O	O:0.999993
array	O	O:0.999761
of	O	O:0.999961
integers	O	O:0.996816
)	O	O:0.999794
.	O	O:0.997116
	
For	O	O:0.999778
the	O	O:0.999964
time	O	O:0.999633
steps	O	O:0.999395
where	O	O:0.999894
convergence	O	O:0.998947
is	O	O:0.999973
reached	O	O:0.996700
Id	O	O:0.999981
like	O	O:0.999781
to	O	O:0.999988
have	O	O:0.999893
the	O	O:0.999904
x-axis	O	O:0.999725
green	O	O:0.990921
and	O	O:0.999960
for	O	O:0.999861
non-convergence	O	O:0.994921
starting	O	O:0.999399
from	O	O:0.999331
light	O	O:0.999477
red	O	O:0.999873
for	O	O:0.999877
not	O	O:0.999448
so	O	O:0.999945
bad	O	O:0.999929
to	O	O:0.999968
red	O	O:0.999949
for	O	O:0.999812
bad	O	O:0.998754
.	O	O:0.999356
	
For	O	O:0.999858
instance	O	O:0.999902
you	O	O:0.999746
can	O	O:0.999349
add	O	O:0.999940
#CODE	O	O:0.999547
	
I	O	O:0.999924
don't	O	O:0.999938
want	O	O:0.999175
to	O	O:0.999938
get	O	O:0.999993
a	O	O:0.999986
newer	O	O:0.998885
one	O	O:0.999671
just	O	O:0.999328
incase	O	O:0.999975
any	O	O:0.999815
of	O	O:0.999909
the	O	O:0.999657
practice	O	O:0.999417
problems	O	O:0.999624
/	O	O:0.999954
lecture	O	O:0.999683
problems	O	O:0.998936
are	O	O:0.999678
incompatible	O	O:0.999908
with	O	O:0.999924
a	O	O:0.999969
newer	O	O:0.999737
version	O	O:0.998066
of	O	O:0.999873
IDLE	O	O:0.994462
.	O	O:0.999641
	
All	O	O:0.999615
of	O	O:0.999961
these	O	O:0.998132
frames	O	O:0.999748
are	O	O:0.999811
loaded	O	O:0.999797
at	O	O:0.999964
the	O	O:0.999950
start	O	O:0.997742
of	O	O:0.999982
the	O	O:0.999633
application	O	O:0.996922
.	O	O:0.999189
	
if	O	O:0.999920
you	O	O:0.999813
suspect	O	O:0.999526
one	O	O:0.999903
specific	O	O:0.998706
builtin	O	O:0.996619
,	O	O:0.999993
try	O	O:0.999878
checking	O	O:0.997424
it's	O	O:0.999838
type	O	O:0.998999
(	O	O:0.999940
`	O	O:0.999978
type	O	O:0.994006
(	O	O:0.999999
dict	O	O:0.999097
)`)	O	O:0.999757
,	O	O:0.999980
or	O	O:0.999996
look	O	O:0.997131
at	O	O:0.999984
the	O	O:0.999868
properties	O	O:0.993090
/	O	O:0.999601
functions	O	O:0.999848
it	O	O:0.999971
has	O	O:0.999815
(	O	O:0.999977
`	O	O:0.999955
dir	O	O:0.860725
(	O	O:0.999998
dict	O	O:0.998851
)`)	O	O:0.999232
.	O	O:0.999292
	
In	O	O:0.999958
some	O	O:0.999883
work	O	O:0.998569
I	O	O:0.999998
have	O	O:0.999990
done	O	O:0.999400
we	O	O:0.999997
used	O	O:0.999865
a	O	O:0.999984
simple	O	O:0.998300
approximation	O	O:0.999757
of	O	O:0.999904
the	O	O:0.999757
derivative	O	O:0.999505
,	O	O:0.999969
when	O	O:0.999957
this	O	O:0.999971
changes	O	O:0.999948
sign	O	O:0.999722
you	O	O:0.999992
have	O	O:0.999922
a	O	O:0.999996
peak	O	O:0.992355
(	O	O:0.999986
in	O	O:0.999951
1D	O	O:0.999995
data	O	O:0.999700
)	O	O:0.999950
,	O	O:0.999991
one	O	O:0.999949
can	O	O:0.999848
then	O	O:0.999914
add	O	O:0.999997
some	O	O:0.999921
parameters	O	O:0.999236
to	O	O:0.999985
remove	O	O:0.999942
peaks	O	O:0.999662
due	O	O:0.999957
to	O	O:0.999963
noise	O	O:0.999177
.	O	O:0.999724
	
Here's	O	O:0.999451
a	O	O:0.999882
working	O	O:0.999613
code	O	O:0.997964
sample	O	O:0.999892
that	O	O:0.999854
shows	O	O:0.999956
you	O	O:0.999891
how	O	O:0.999925
to	O	O:0.999968
get	O	O:0.999943
it	O	O:0.999899
working	O	O:0.998801
.	O	O:0.999339
	
How	O	O:0.999926
can	O	O:0.999501
I	O	O:0.999980
change	O	O:0.999813
this	O	O:0.994221
behavior	O	O:0.999136
and	O	O:0.998651
use	O	O:0.998134
Arial	O	O:0.991959
fonts	O	O:0.998294
for	O	O:0.999938
all	O	O:0.999469
of	O	O:0.999962
my	O	O:0.999218
plots	O	O:0.998217
?	O	O:0.999968
	
How	O	O:0.999814
to	O	O:0.999946
divide	O	O:0.996552
ytics	O	O:0.999914
to	O	O:0.999990
a	O	O:0.999998
certain	O	O:0.989610
number	O	O:0.999113
in	O	O:0.999898
matplotlib	O	O:0.998770
?	O	O:0.999942
	
Matplotlib	O	O:0.998418
cannot	O	O:0.998908
find	O	O:0.999775
facefile	O	O:0.999267
,	O	O:0.999963
is	O	O:0.999988
using	O	O:0.997874
old	O	O:0.998330
Python	O	O:0.997570
interpreter	O	O:0.999263
location	O	O:0.995849
	
do	O	O:0.999852
you	O	O:0.999948
get	O	O:0.999830
any	O	O:0.999912
message	O	O:0.997967
when	O	O:0.996649
trying	O	O:0.999776
plotting	O	O:0.997871
it	O	O:0.999561
?	O	O:0.999964
	
I	O	O:0.999986
have	O	O:0.999909
mac	O	O:0.998897
os	O	O:0.999948
x	O	O:0.997333
10.5.8	O	O:0.995831
and	O	O:0.999735
was	O	O:0.999830
wondering	O	O:0.999092
if	O	O:0.999820
anyone	O	O:0.999664
could	O	O:0.998545
recommend	O	O:0.999871
where	O	O:0.999626
I	O	O:0.999993
could	O	O:0.999880
find	O	O:0.999598
the	O	O:0.999923
proper	O	O:0.995518
package	O	O:0.990639
.	O	O:0.999596
	
Well	O	O:0.990434
,	O	O:0.999992
this	O	O:0.999591
isn't	O	O:0.999841
a	O	O:0.999919
wxPython	O	O:0.974033
answer	O	O:0.998785
but	O	O:0.999028
I've	O	O:0.999008
used	O	O:0.998714
Chaco	O	O:0.993143
for	O	O:0.999950
this	O	O:0.999893
sort	O	O:0.993472
of	O	O:0.999960
thing	O	O:0.991156
and	O	O:0.999467
it's	O	O:0.999573
pretty	O	O:0.995384
straight	O	O:0.998834
forward	O	O:0.996335
.	O	O:0.999556
	
The	O	O:0.999935
point	O	O:0.998997
IS	O	O:0.999962
at	O	O:0.999947
its	O	O:0.999681
position	O	O:0.999558
namely	O	O:0.998947
(	O	O:0.999958
1	O	O:0.999975
,	O	O:0.999985
1	O	O:0.999980
,	O	O:0.999986
1	O	O:0.999908
)	O	O:0.999643
.	O	O:0.999086
	
All	O	O:0.997817
is	O	O:0.999991
fine	O	O:0.998669
again	O	O:0.999074
.	O	O:0.999635
	
The	O	O:0.999909
next	O	O:0.999623
plot	O	O:0.997982
to	O	O:0.999996
show	O	O:0.999955
has	O	O:0.999946
the	O	O:0.999987
same	O	O:0.999085
clusters	O	O:0.995966
and	O	O:0.999936
colors	O	O:0.994031
but	O	O:0.999875
a	O	O:0.999980
different	O	O:0.979448
location	O	O:0.997123
.	O	O:0.999616
	
@USER	O	O:0.998885
The	O	O:0.999963
first	O	O:0.998835
approach	O	O:0.996302
would	O	O:0.999623
help	O	O:0.999558
only	O	O:0.999943
if	O	O:0.999915
the	O	O:0.999939
internal	O	O:0.992678
representation	O	O:0.999581
was	O	O:0.999955
the	O	O:0.999930
problem	O	O:0.962521
,	O	O:0.999944
but	O	O:0.999912
it	O	O:0.999972
doesn't	O	O:0.999690
solve	O	O:0.999704
the	O	O:0.999921
underlying	O	O:0.999402
size	O	O:0.998375
issue	O	O:0.999564
.	O	O:0.999831
	
After	O	O:0.999828
hours	O	O:0.999124
analyzing	O	O:0.999887
the	O	O:0.999684
source	O	O:0.999861
code	O	O:0.999853
of	O	O:0.999991
basemap's	O	O:0.999340
`	O	O:0.999946
tissot	O	B-API:0.867193
`	O	O:0.999848
function	O	O:0.998085
,	O	O:0.999997
learning	O	O:0.999877
some	O	O:0.999704
properties	O	O:0.998299
of	O	O:0.999987
ellipses	O	O:0.996392
and	O	O:0.999967
lot's	O	O:0.999886
of	O	O:0.999818
debugging	O	O:0.999060
,	O	O:0.999972
I	O	O:0.999995
came	O	O:0.999895
with	O	O:0.999928
a	O	O:0.999981
solution	O	O:0.999831
to	O	O:0.999988
my	O	O:0.999985
problem	O	O:0.996884
.	O	O:0.999768
	
You'd	O	O:0.999848
need	O	O:0.999549
to	O	O:0.999963
refactor	O	O:0.999975
the	O	O:0.999986
code	O	O:0.999619
to	O	O:0.999983
break	O	O:0.999987
your	O	O:0.996854
worker	O	O:0.999096
method	O	O:0.997475
up	O	O:0.999972
into	O	O:0.999250
smaller	O	O:0.999934
pieces	O	O:0.995618
that	O	O:0.999912
multiple	O	O:0.999939
processes	O	O:0.998238
can	O	O:0.999892
work	O	O:0.999890
on	O	O:0.999989
at	O	O:0.999986
the	O	O:0.999960
same	O	O:0.999755
time	O	O:0.999748
,	O	O:0.999985
and	O	O:0.999973
then	O	O:0.999679
pull	O	O:0.996551
it	O	O:0.999996
back	O	O:0.999418
together	O	O:0.999992
once	O	O:0.999925
all	O	O:0.999749
the	O	O:0.999966
pieces	O	O:0.941560
are	O	O:0.999911
ready	O	O:0.998671
.	O	O:0.999756
	
are	O	O:0.999437
you	O	O:0.999824
just	O	O:0.999725
trying	O	O:0.999902
to	O	O:0.999962
open	O	O:0.999537
a	O	O:0.999993
separate	O	O:0.996907
window	O	O:0.999660
or	O	O:0.999949
display	O	O:0.999043
that	O	O:0.993596
window	O	O:0.999843
inside	O	O:0.999529
of	O	O:0.999977
your	O	O:0.999250
main	O	O:0.971378
window	O	O:0.999314
?	O	O:0.999900
	
The	O	O:0.999907
one	O	O:0.999384
catch	O	O:0.987425
:	O	O:0.999997
if	O	O:0.999973
you	O	O:0.999963
embed	O	O:0.999729
a	O	O:0.999957
PDF	O	O:0.999589
inside	O	O:0.999569
a	O	O:0.999867
textbox	O	O:0.912634
,	O	O:0.999849
Word	O	O:0.999704
will	O	O:0.995599
rasterize	O	O:0.999767
this	O	O:0.999904
when	O	O:0.999244
you	O	O:0.999973
save	O	O:0.999930
it	O	O:0.999992
to	O	O:0.999994
a	O	O:0.999993
PDF	O	O:0.998629
.	O	O:0.999364
	
How	O	O:0.999937
can	O	O:0.999565
I	O	O:0.999999
address	O	O:0.999958
a	O	O:0.999886
specific	O	O:0.998513
line	O	O:0.996843
(	O	O:0.999988
by	O	O:0.999974
name	O	O:0.999560
,	O	O:0.999996
by	O	O:0.999976
number	O	O:0.998023
,	O	O:0.999985
by	O	O:0.999995
reference	O	O:0.999198
)	O	O:0.999943
throughout	O	O:0.999568
the	O	O:0.999864
program	O	O:0.980194
and	O	O:0.999695
delete	O	O:0.999393
that	O	O:0.999703
line	O	O:0.999700
?	O	O:0.999962
	
And	O	O:0.999946
also	O	O:0.999092
I	O	O:0.999998
need	O	O:0.999588
to	O	O:0.999793
do	O	O:0.999999
that	O	O:0.999893
for	O	O:0.999982
all	O	O:0.999719
variables	O	O:0.998181
simultaneously	O	O:0.997585
.	O	O:0.999735
	
`	O	O:0.999883
newtitle	O	O:0.992302
=	O	O:0.999984
"	O	O:0.999945
%s\n$%s$	O	O:0.997991
"	O	O:0.999649
%	O	O:0.997681
(	O	O:0.999909
'	O	O:0.999899
text\	O	O:0.998582
below\	O	O:0.999238
the\	O	O:0.999140
main\	O	O:0.998225
title	O	O:0.998012
'	O	O:0.999892
,	O	O:0.999991
newtitle	O	O:0.998952
)`	O	O:0.999102
	
Have	O	O:0.999418
you	O	O:0.999791
had	O	O:0.999959
a	O	O:0.999997
look	O	O:0.998111
at	O	O:0.999972
the	O	O:0.998566
`	O	O:0.999640
webagg	O	O:0.971661
`	O	O:0.999986
matplotlib	O	O:0.993795
backend	O	O:0.999034
?	O	O:0.999937
	
find	O	O:0.999332
the	O	O:0.999989
file	O	O:0.999810
from	O	O:0.999849
the	O	O:0.999977
link	O	O:0.998848
	
If	O	O:0.999922
you	O	O:0.999903
want	O	O:0.999905
separate	O	O:0.999877
figures	O	O:0.999852
,	O	O:0.999998
as	O	O:0.999989
the	O	O:0.999973
title	O	O:0.999461
of	O	O:0.999998
your	O	O:0.999675
question	O	O:0.999953
suggests	O	O:0.999944
the	O	O:0.999770
`	O	O:0.999907
subplots=True	O	O:0.984947
`	O	O:0.999974
argument	O	O:0.999569
might	O	O:0.999751
get	O	O:0.999799
the	O	O:0.999869
job	O	O:0.999787
done	O	O:0.998840
.	O	O:0.999849
	
I	O	O:0.999970
suggest	O	O:0.999856
removing	O	O:0.999188
all	O	O:0.999265
the	O	O:0.999929
domain	O	O:0.998409
specific	O	O:0.999459
stuff	O	O:0.999054
.	O	O:0.999820
	
Just	O	O:0.999296
change	O	O:0.991853
`	O	O:0.999869
shape	O	O:0.995329
`	O	O:0.999995
to	O	O:0.998717
`	O	O:0.999995
(	O	O:0.999883
10	O	O:0.999973
,	O	O:0.999977
10	O	O:0.999915
,	O	O:0.999937
10	O	O:0.999898
,	O	O:0.999934
10	O	O:0.999836
,	O	O:0.999934
10	O	O:0.999857
)`	O	O:0.999210
and	O	O:0.999486
see	O	O:0.999858
.	O	O:0.999183
	
Any	O	O:0.999911
help	O	O:0.980624
would	O	O:0.999777
be	O	O:0.999949
appreciated	O	O:0.999023
.	O	O:0.997721
	
However	O	O:0.998572
,	O	O:0.999868
(	O	O:0.999991
at	O	O:0.999891
least	O	O:0.999810
what	O	O:0.999172
I	O	O:0.999994
have	O	O:0.999963
seen	O	O:0.994588
is	O	O:0.999999
that	O	O:0.999771
)	O	O:0.999998
sometimes	O	O:0.998554
after	O	O:0.999887
the	O	O:0.999955
plot	O	O:0.929467
has	O	O:0.999966
been	O	O:0.999090
displayed	O	O:0.999882
,	O	O:0.999958
it	O	O:0.999971
goes	O	O:0.999842
into	O	O:0.999954
a	O	O:0.999990
"	O	O:0.998521
Not	O	O:0.999476
Responding	O	O:0.884919
"	O	O:0.999657
mode	O	O:0.994172
and	O	O:0.999883
you	O	O:0.999792
just	O	O:0.999790
have	O	O:0.999876
to	O	O:0.999991
kill	O	O:0.999927
the	O	O:0.999968
process	O	O:0.958804
anyways	O	O:0.999575
.	O	O:0.999783
	
It	O	O:0.999940
consists	O	O:0.999400
in	O	O:0.999987
a	O	O:0.999982
floating-point	O	O:0.999648
parameter	O	O:0.997718
P	O	O:0.995358
,	O	O:0.999994
with	O	O:0.999638
dimension	O	O:0.997736
NxM	O	O:0.999856
,	O	O:0.999861
and	O	O:0.999918
each	O	O:0.999473
pixel	O	O:0.989884
is	O	O:0.999982
geolocated	O	O:0.998522
by	O	O:0.999949
the	O	O:0.999832
fields	O	O:0.991384
latitude	O	O:0.880872
and	O	O:0.999880
longitude	O	O:0.722501
(	O	O:0.999989
each	O	O:0.999373
of	O	O:0.999990
size	O	O:0.999725
NxM	O	O:0.999885
)	O	O:0.999584
.	O	O:0.997178
	
In	O	O:0.999954
order	O	O:0.999928
to	O	O:0.999943
change	O	O:0.999949
the	O	O:0.999935
order	O	O:0.999676
of	O	O:0.999939
the	O	O:0.999952
bars	O	O:0.999573
,	O	O:0.999996
you	O	O:0.999898
should	O	O:0.999789
change	O	O:0.999829
the	O	O:0.999851
order	O	O:0.999009
in	O	O:0.999457
the	O	O:0.999684
index	O	O:0.993396
.	O	O:0.999678
	
This	O	O:0.999820
does	O	O:0.998800
not	O	O:0.999850
work	O	O:0.999905
when	O	O:0.999249
I	O	O:0.999998
replace	O	O:0.999472
the	O	O:0.999702
random	O	O:0.998676
plot	O	O:0.997273
data	O	O:0.999990
with	O	O:0.999912
an	O	O:0.999915
actual	O	O:0.999475
color	O	O:0.999328
PNG	O	O:0.999609
image	O	O:0.997809
.	O	O:0.999017
	
For	O	O:0.999881
example	O	O:0.997917
,	O	O:0.999989
say	O	O:0.999974
you	O	O:0.999757
had	O	O:0.999972
data	O	O:0.999912
between	O	O:0.997354
0	O	O:0.999966
and	O	O:0.998246
1	O	O:0.999785
but	O	O:0.999345
didn't	O	O:0.999898
like	O	O:0.999001
the	O	O:0.999926
colors	O	O:0.985017
used	O	O:0.999899
at	O	O:0.999953
the	O	O:0.999982
extremes	O	O:0.999272
of	O	O:0.999975
the	O	O:0.999939
colormap	O	O:0.998566
for	O	O:0.999892
0	O	O:0.999881
and	O	O:0.999520
1	O	O:0.999366
.	O	O:0.998643
	
After	O	O:0.999728
searching	O	O:0.999491
through	O	O:0.999264
multiple	O	O:0.999142
posts	O	O:0.998973
,	O	O:0.999983
I	O	O:0.999993
basically	O	O:0.999877
want	O	O:0.999552
to	O	O:0.999918
use	O	O:0.999995
a	O	O:0.999922
generic	O	O:0.976180
colormap	O	O:0.975473
(	O	O:0.999975
rainbow	O	O:0.996640
)	O	O:0.999727
and	O	O:0.999850
multiply	O	O:0.971646
my	O	O:0.999754
third	O	O:0.999181
array	O	O:0.999797
by	O	O:0.999944
the	O	O:0.999864
colormap	O	O:0.991564
in	O	O:0.999985
order	O	O:0.999962
to	O	O:0.999981
display	O	O:0.999899
different	O	O:0.999680
colors	O	O:0.984658
for	O	O:0.999997
each	O	O:0.999487
of	O	O:0.999959
the	O	O:0.999871
xy	O	O:0.997931
points	O	O:0.992414
.	O	O:0.999842
	
Hi	O	O:0.999804
,	O	O:0.999926
Thanks	O	O:0.999761
Tobold	O	O:0.999185
,	O	O:0.999976
I	O	O:0.999998
will	O	O:0.999559
check	O	O:0.998040
the	O	O:0.999936
source	O	O:0.999792
code	O	O:0.999809
you	O	O:0.999909
mention	O	O:0.998265
.	O	O:0.999820
	
This	O	O:0.999825
next	O	O:0.999244
block	O	O:0.997574
is	O	O:0.999990
what	O	O:0.999682
does	O	O:0.999896
what	O	O:0.999931
you	O	O:0.999961
want	O	O:0.999941
with	O	O:0.999836
the	O	O:0.999835
`	O	O:0.999952
for	O	O:0.998208
`	O	O:0.999989
loop	O	O:0.988493
.	O	O:0.999914
	
Say	O	O:0.999981
that	O	O:0.998820
I	O	O:0.999999
have	O	O:0.999836
6	O	O:0.999860
variables	O	O:0.999938
that	O	O:0.999451
I	O	O:0.999999
want	O	O:0.999902
to	O	O:0.999482
sort	O	O:0.999866
into	O	O:0.999903
these	O	O:0.999649
3	O	O:0.999477
groups	O	O:0.980535
and	O	O:0.999929
plot	O	O:0.996964
like	O	O:0.999763
a	O	O:0.999993
venn	O	O:0.988311
diagram	O	O:0.996329
.	O	O:0.999585
	
ValueError	O	O:0.996163
:	O	O:0.999983
setting	O	O:0.999787
an	O	O:0.999954
array	O	O:0.999510
element	O	O:0.999900
with	O	O:0.999766
a	O	O:0.999946
sequence	O	O:0.997069
.	O	O:0.999574
	
My	O	O:0.999975
need	O	O:0.992294
is	O	O:0.999997
that	O	O:0.999253
I	O	O:0.999998
want	O	O:0.999771
to	O	O:0.999783
plot	O	O:0.999409
these	O	O:0.999859
nominal	O	O:0.988152
values	O	O:0.998433
of	O	O:0.999962
both	O	O:0.996889
actual	O	O:0.993926
and	O	O:0.999598
predicted	O	O:0.999258
ones	O	O:0.998004
on	O	O:0.999961
the	O	O:0.999985
same	O	O:0.999961
plot	O	O:0.996428
so	O	O:1.000000
that	O	O:0.999875
It	O	O:0.999997
will	O	O:0.999264
be	O	O:0.999997
easy	O	O:0.999887
to	O	O:0.999951
compare	O	O:0.999498
how	O	O:0.999969
good	O	O:0.999571
was	O	O:0.999971
the	O	O:0.999952
prediction	O	O:0.999563
as	O	O:0.999986
compared	O	O:0.999692
to	O	O:0.999981
actual	O	O:0.999532
values	O	O:0.995082
.	O	O:0.999393
	
So	O	O:0.999851
,	O	O:0.999995
open	O	O:0.996367
up	O	O:0.999994
your	O	O:0.998981
favorite	O	O:0.999743
Terminal	O	O:0.998857
emulator	O	O:0.999195
and	O	O:0.999072
enter	O	O:0.884065
#CODE	O	O:0.996429
	
Also	O	O:0.999179
,	O	O:0.999990
the	O	O:0.999879
lists	O	O:0.999051
need	O	O:0.999775
to	O	O:0.999963
be	O	O:0.999999
equal	O	O:0.997141
length	O	O:0.992916
.	O	O:0.998950
	
Because	O	O:0.998797
matplotlib	O	O:0.998349
will	O	O:0.997774
convert	O	O:0.998989
things	O	O:0.999882
to	O	O:0.999972
numpy	O	O:0.999446
arrays	O	O:0.999725
regardless	O	O:0.999615
,	O	O:0.999996
there	O	O:0.999564
are	O	O:0.999906
more	O	O:0.997359
efficient	O	O:0.999808
ways	O	O:0.999701
to	O	O:0.999975
do	O	O:0.999983
it	O	O:0.999937
.	O	O:0.999748
	
And	O	O:0.999936
here	O	O:0.998589
is	O	O:0.999994
where	O	O:0.998364
I	O	O:0.999993
grab	O	O:0.999608
the	O	O:0.999881
data	O	O:0.999005
and	O	O:0.999818
I	O	O:0.999999
try	O	O:0.999973
to	O	O:0.999763
update	O	O:0.999523
the	O	O:0.999974
limits	O	O:0.999269
of	O	O:0.999947
the	O	O:0.999803
plot	O	O:0.985883
#CODE	O	O:0.999515
	
Any	O	O:0.999923
help	O	O:0.983751
is	O	O:0.999939
appreciated	O	O:0.996374
.	O	O:0.999020
	
Which	O	O:0.998396
is	O	O:0.999966
the	O	O:0.999699
why	O	O:0.999454
,	O	O:0.999979
conveniently	O	O:0.999734
,	O	O:0.999976
`	O	O:0.999972
colors	O	O:0.808000
`	O	O:0.999985
keyword	O	O:0.994155
exists	O	O:0.999620
.	O	O:0.999695
	
How	O	O:0.999956
can	O	O:0.999638
I	O	O:0.999998
find	O	O:0.999903
the	O	O:0.999949
code	O	O:0.999553
to	O	O:0.999974
support	O	O:0.999765
multiple	O	O:0.999642
plotting	O	O:0.996589
scales	O	O:0.865905
and	O	O:0.999779
X-axis	O	O:0.999864
on	O	O:0.999845
seperate	O	O:0.999880
panels	O	O:0.999583
using	O	O:0.999934
sizer	O	O:0.998201
routines	O	O:0.990587
?	O	O:0.999922
	
I'm	O	O:0.999800
trying	O	O:0.999284
to	O	O:0.999594
build	O	O:0.999793
Matplotlib	O	O:0.999966
from	O	O:0.998886
source	O	O:0.999842
with	O	O:0.999796
Tkinter	O	O:0.999005
.	O	O:0.999619
	
This	O	O:0.999640
means	O	O:0.999881
that	O	O:0.999959
you	O	O:0.999892
can	O	O:0.999649
install	O	O:0.999926
matplotlib	O	O:0.999838
locally	O	O:0.999098
in	O	O:0.999993
your	O	O:0.995482
`	O	O:0.999952
virtualenv	O	O:0.975143
`	O	O:0.999864
and	O	O:0.998355
it	O	O:0.999981
will	O	O:0.998918
find	O	O:0.999867
all	O	O:0.999749
of	O	O:0.999953
its	O	O:0.998913
backend	O	O:0.999777
dependencies	O	O:0.998732
in	O	O:0.999955
the	O	O:0.999943
system-wide	O	O:0.998942
`	O	O:0.999965
site-packages	O	O:0.974568
`	O	O:0.999973
.	O	O:0.999131
	
I	O	O:0.999939
am	O	O:0.999988
trying	O	O:0.999351
to	O	O:0.999953
create	O	O:0.999953
a	O	O:0.999996
simple	O	O:0.998447
GUI	O	O:0.999932
using	O	O:0.999443
tkinter	O	O:0.945930
which	O	O:0.996288
will	O	O:0.998555
just	O	O:0.999769
open	O	O:0.999233
a	O	O:0.999797
window	O	O:0.999641
displaying	O	O:0.998898
the	O	O:0.999802
plot	O	O:0.930508
.	O	O:0.999798
	
Web	O	O:0.998321
convinces	O	O:0.998056
me	O	O:0.999919
using	O	O:0.999957
this	O	O:0.997029
is	O	O:0.999845
no	O	O:0.999185
good	O	O:0.999932
idea	O	O:0.999306
after	O	O:0.999608
all	O	O:0.993260
:	O	O:0.999961
For	O	O:0.999955
example	O	O:0.998847
#URL	O	O:0.999231
"	O	O:0.999849
Avoid	O	O:0.999267
3-D	O	O:0.999836
charts	O	O:0.998710
at	O	O:0.999937
all	O	O:0.999124
costs	O	O:0.995383
.	O	O:0.999434
	
Using	O	O:0.999694
pure	O	O:0.983538
Python	O	O:0.999722
,	O	O:0.999999
you	O	O:0.999928
can	O	O:0.999884
extract	O	O:0.999965
columns	O	O:0.999850
`	O	O:0.999992
1	O	O:0.999315
`	O	O:0.999987
,	O	O:0.999868
`	O	O:0.999987
5	O	O:0.997327
`	O	O:0.999968
and	O	O:0.998911
`	O	O:0.999979
7	O	O:0.997118
`	O	O:0.999995
by	O	O:0.999824
using	O	O:0.999944
the	O	O:0.999068
following	O	O:0.961112
nested	O	O:0.998205
list	O	O:0.981989
comprehension	O	O:0.998457
:	O	O:0.999932
#CODE	O	O:0.999309
	
Is	O	O:0.999987
there	O	O:0.999765
any	O	O:0.999916
way	O	O:0.999804
of	O	O:0.999831
getting	O	O:0.998565
some	O	O:0.999626
input	O	O:0.999980
from	O	O:0.999938
a	O	O:0.999953
user	O	O:0.999811
in	O	O:0.999740
matplotlib	O	O:0.996389
?	O	O:0.999924
	
`	O	O:0.999946
theta	O	O:0.944633
`	O	O:0.999902
is	O	O:0.999877
in	O	O:0.999927
radians	O	O:0.999727
instead	O	O:0.999814
of	O	O:0.999925
degrees	O	O:0.983774
.	O	O:0.999804
	
'	O	O:0.999929
plot	O	O:0.990976
'	O	O:0.999986
shows	O	O:0.999927
me	O	O:0.999986
a	O	O:0.999983
line	O	O:0.999276
interconnecting	O	O:0.999434
all	O	O:0.999445
data	O	O:0.999554
points	O	O:0.978853
,	O	O:0.999973
but	O	O:0.999904
not	O	O:0.999707
the	O	O:0.999970
data	O	O:0.999651
points	O	O:0.999499
themselves	O	O:0.999775
(	O	O:0.999984
unless	O	O:0.999728
there's	O	O:0.999960
a	O	O:0.999977
way	O	O:0.999509
I	O	O:0.999959
don't	O	O:0.999963
know	O	O:0.999259
of	O	O:0.999831
)	O	O:0.998692
.	O	O:0.999020
	
I	O	O:0.999974
could	O	O:0.999816
divide	O	O:0.969633
the	O	O:0.999805
`	O	O:0.999851
peak_top	O	O:0.691150
`	O	O:0.999997
by	O	O:0.999934
2	O	O:0.999992
to	O	O:0.999970
find	O	O:0.999894
the	O	O:0.999950
half	O	O:0.985233
height	O	O:0.998047
and	O	O:0.999942
then	O	O:0.999573
try	O	O:0.999583
and	O	O:0.999913
find	O	O:0.999109
y-values	O	O:0.999341
corresponding	O	O:0.999379
to	O	O:0.999948
the	O	O:0.999990
half	O	O:0.987098
height	O	O:0.997359
,	O	O:0.999979
but	O	O:0.999989
then	O	O:0.999263
I	O	O:0.999988
would	O	O:0.999744
run	O	O:0.999393
into	O	O:0.999964
trouble	O	O:0.999910
if	O	O:0.999971
there	O	O:0.999602
are	O	O:0.999801
no	O	O:0.999869
x-values	O	O:0.999645
exactly	O	O:0.999834
matching	O	O:0.999016
the	O	O:0.999835
half	O	O:0.970101
height	O	O:0.998705
.	O	O:0.999755
	
why	O	O:0.999311
can't	O	O:0.999152
it	O	O:0.999986
find	O	O:0.999757
the	O	O:0.999973
file	O	O:0.998628
?	O	O:0.999974
	
However	O	O:0.999273
,	O	O:0.999973
the	O	O:0.999875
resulting	O	O:0.996163
image	O	O:0.999622
always	O	O:0.999896
has	O	O:0.999901
the	O	O:0.999945
same	O	O:0.998998
resolution	O	O:0.999770
,	O	O:0.999989
around	O	O:0.998940
(	O	O:0.999959
250x250	O	O:0.997073
)	O	O:0.999655
.	O	O:0.998561
	
Installing	O	O:0.999492
those	O	O:0.999603
packages	O	O:0.999611
from	O	O:0.999872
the	O	O:0.999988
source	O	O:0.999909
can	O	O:0.999938
be	O	O:0.999999
a	O	O:0.999996
pain	O	O:0.968981
,	O	O:0.999994
especially	O	O:0.999560
on	O	O:0.999796
Windows	O	O:0.999416
and	O	O:0.999928
OS	O	O:0.999876
X	O	O:0.995859
.	O	O:0.999617
	
Sort	O	O:0.998367
arrays	O	O:0.999556
by	O	O:0.999916
two	O	O:0.999632
criteria	O	O:0.994910
	
However	O	O:0.999652
,	O	O:0.999964
I	O	O:0.999989
am	O	O:0.999980
kinda	O	O:0.997325
confused	O	O:0.999616
,	O	O:0.999987
any	O	O:0.999959
help	O	O:0.975546
would	O	O:0.999774
be	O	O:0.999958
appreciated	O	O:0.999029
.	O	O:0.997721
	
Unfortunately	O	O:0.999490
if	O	O:0.999904
you	O	O:0.998799
search	O	O:0.998974
this	O	O:0.999956
array	O	O:0.999689
for	O	O:0.999923
all	O	O:0.998866
subnodes	O	O:0.998512
given	O	O:0.996201
some	O	O:0.999798
index	O	O:0.999645
you	O	O:0.999991
only	O	O:0.999941
get	O	O:0.999995
some	O	O:0.999953
of	O	O:0.999987
the	O	O:0.999963
subnodes	O	O:0.999081
contained	O	O:0.999870
by	O	O:0.999979
the	O	O:0.999959
original	O	O:0.998110
triangle	O	O:0.999631
because	O	O:0.999938
most	O	O:0.999657
nodes	O	O:0.998742
belong	O	O:0.998958
to	O	O:0.999941
several	O	O:0.999545
triangles	O	O:0.997101
and	O	O:0.999986
they	O	O:0.999622
are	O	O:0.999887
only	O	O:0.999525
added	O	O:0.999783
to	O	O:0.999983
one	O	O:0.999980
of	O	O:0.999948
these	O	O:0.996971
.	O	O:0.999735
	
If	O	O:0.999898
I	O	O:0.999973
set	O	O:0.998961
shrink	O	O:0.986505
1.0	O	O:0.993171
and	O	O:0.999768
fraction	O	O:0.998209
to	O	O:0.999861
anything	O	O:0.999877
,	O	O:0.999969
it	O	O:0.999961
shrinks	O	O:0.999671
the	O	O:0.999929
graph	O	O:0.997297
,	O	O:0.999994
not	O	O:0.999851
affecting	O	O:0.999920
the	O	O:0.999776
colorbar	O	O:0.999884
size	O	O:0.999942
at	O	O:0.999983
all	O	O:0.999384
,	O	O:0.999987
until	O	O:0.997619
changing	O	O:0.998722
fraction	O	O:0.996687
causes	O	O:0.999313
it	O	O:0.999986
to	O	O:0.999984
be	O	O:0.999996
exactly	O	O:0.999913
what	O	O:0.999435
I	O	O:0.999993
already	O	O:0.999912
have	O	O:0.996467
,	O	O:0.999988
at	O	O:0.999944
which	O	O:0.999588
point	O	O:0.999558
changing	O	O:0.999982
them	O	O:0.999487
stops	O	O:0.999880
doing	O	O:0.999419
anything	O	O:0.997383
.	O	O:0.995728
	
It	O	O:0.999929
doesn't	O	O:0.999353
add	O	O:0.999862
anything	O	O:0.999699
else	O	O:0.995058
.	O	O:0.999503
	
Now	O	O:0.999543
I	O	O:0.999987
just	O	O:0.999483
wish	O	O:0.998966
they'd	O	O:0.999724
add	O	O:0.999883
some	O	O:0.999898
kind	O	O:0.999743
of	O	O:0.999996
drop	O	O:0.987752
down	O	O:0.999952
menu	O	O:0.999358
to	O	O:0.999878
matplotlib	O	O:0.999693
...	O	O:0.996171
	
Thanks	O	O:0.999619
for	O	O:0.999906
any	O	O:0.999717
help	O	O:0.943176
	
The	O	O:0.999865
source	O	O:0.996350
data's	O	O:0.999936
list	O	O:0.983417
is	O	O:0.999975
called	O	O:0.990305
xyz	O	O:0.994033
.	O	O:0.998814
	
I	O	O:0.999978
have	O	O:0.999790
been	O	O:0.993719
looking	O	O:0.999008
around	O	O:0.984613
and	O	O:0.999667
maybe	O	O:0.998725
it	O	O:0.999861
could	O	O:0.999788
be	O	O:0.999996
a	O	O:0.999971
version-of-Pyhton	O	O:0.996235
problem	O	O:0.993457
.	O	O:0.999499
	
(	O	O:0.999855
I	O	O:0.999996
want	O	O:0.999939
to	O	O:0.999593
reduce	O	O:0.999968
the	O	O:0.999994
size	O	O:0.999872
of	O	O:0.999988
the	O	O:0.999917
outlier	O	O:0.999305
)	O	O:0.999477
#CODE	O	O:0.997540
	
This	O	O:0.998167
should	O	O:0.999561
work	O	O:0.998975
for	O	O:0.999989
any	O	O:0.999813
number	O	O:0.999066
of	O	O:0.999695
columns	O	O:0.997085
and	O	O:0.999971
length	O	O:0.999441
of	O	O:0.999851
data	O	O:0.995195
.	O	O:0.999768
	
Any	O	O:0.999857
assistance	O	O:0.994003
would	O	O:0.999461
be	O	O:0.999988
greatly	O	O:0.999514
appreciated	O	O:0.993408
,	O	O:0.999979
this	O	O:0.999733
has	O	O:0.999955
been	O	O:0.999405
doing	O	O:0.999817
my	O	O:0.999584
head	O	O:0.995807
in	O	O:0.999780
.	O	O:0.999624
	
where	O	O:0.997570
axes_square	O	O:0.985036
is	O	O:0.999909
simply	O	O:0.981612
:	O	O:0.999963
#CODE	O	O:0.998966
	
I	O	O:0.999972
can	O	O:0.999945
put	O	O:0.999809
together	O	O:0.999960
a	O	O:0.999989
more	O	O:0.996815
detailed	O	O:0.996620
answer	O	O:0.999737
based	O	O:0.997031
on	O	O:0.999969
that	O	O:0.999734
package	O	O:0.999715
if	O	O:0.999878
desired	O	O:0.997183
.	O	O:0.999146
	
It's	O	O:0.999212
fairly	O	O:0.999885
easy	O	O:0.999536
to	O	O:0.999911
speed	O	O:0.999968
it	O	O:0.999952
up	O	O:0.999922
by	O	O:0.999968
making	O	O:0.999552
an	O	O:0.999602
approximation	O	O:0.999156
--	O	O:0.999992
just	O	O:0.999611
take	O	O:0.999897
the	O	O:0.999803
2D	O	O:0.999816
histogram	O	O:0.987120
and	O	O:0.999971
blur	O	O:0.996024
it	O	O:0.999963
with	O	O:0.999889
a	O	O:0.999988
guassian	O	O:0.999711
filter	O	O:0.992603
of	O	O:0.999903
the	O	O:0.999493
right	O	O:0.998615
radius	O	O:0.998745
and	O	O:0.999884
covariance	O	O:0.999358
.	O	O:0.999405
	
I've	O	O:0.999416
tried	O	O:0.999788
the	O	O:0.999666
solutions	O	O:0.995429
posted	O	O:0.998984
by	O	O:0.999899
Marek	O	O:0.999309
and	O	O:0.999788
qarma	O	O:0.999284
attempting	O	O:0.999577
to	O	O:0.999619
obtain	O	O:0.999931
the	O	O:0.999990
coordinates	O	O:0.992721
of	O	O:0.999984
the	O	O:0.999985
bins	O	O:0.999006
rather	O	O:0.999971
than	O	O:0.998845
the	O	O:0.999938
index	O	O:0.998234
of	O	O:0.999996
them	O	O:0.998913
,	O	O:0.999999
like	O	O:0.999326
so	O	O:0.999462
:	O	O:0.999973
#CODE	O	O:0.999708
	
What	O	O:0.999564
do	O	O:0.999920
you	O	O:0.999965
mean	O	O:0.998262
by	O	O:0.999997
make	O	O:0.999891
sure	O	O:0.999885
the	O	O:0.999886
'	O	O:0.999601
backend	O	O:0.998780
setting	O	O:0.999787
for	O	O:0.999911
pylab	O	O:0.975940
is	O	O:0.999935
not	O	O:0.999418
set	O	O:0.999025
to	O	O:0.999867
inline	O	O:0.820031
?	O	O:0.999955
	
sets	O	O:0.998011
the	O	O:0.999940
initial	O	O:0.996659
x	O	O:0.999523
,	O	O:0.999997
v	O	O:0.999964
of	O	O:0.999970
every	O	O:0.999164
particle	O	O:0.999700
in	O	O:0.999937
an	O	O:0.999940
array	O	O:0.998111
	
Post	O	O:0.997244
more	O	O:0.998254
information	O	O:0.999648
on	O	O:0.999991
structure	O	O:0.999852
of	O	O:0.999997
your	O	O:0.999227
array	O	O:0.999069
.	O	O:0.999506
	
Here	O	O:0.998401
is	O	O:0.999981
a	O	O:0.999934
sample	O	O:0.998928
code	O	O:0.999460
if	O	O:0.999970
anyone	O	O:0.999801
wants	O	O:0.999159
to	O	O:0.999945
play	O	O:0.999654
with	O	O:0.999744
it	O	O:0.999730
.	O	O:0.999871
	
Are	O	O:0.999713
all	O	O:0.999566
these	O	O:0.999495
settings	O	O:0.998951
really	O	O:0.999879
necessary	O	O:0.999911
to	O	O:0.999955
achieve	O	O:0.999971
the	O	O:0.999771
result	O	O:0.998281
I'm	O	O:0.999945
looking	O	O:0.999495
for	O	O:0.999783
,	O	O:0.999963
or	O	O:0.999814
is	O	O:0.999978
there	O	O:0.999829
perhaps	O	O:0.999583
a	O	O:0.999994
more	O	O:0.997528
compact	O	O:0.999099
way	O	O:0.999921
to	O	O:0.999914
accomplish	O	O:0.999937
my	O	O:0.999861
goal	O	O:0.982541
:	O	O:0.999982
#CODE	O	O:0.999416
	
I	O	O:0.999983
want	O	O:0.999919
to	O	O:0.999161
select	O	O:0.999743
(	O	O:0.999984
in	O	O:0.999970
the	O	O:0.999933
SQL	O	O:0.999902
sense	O	O:0.999586
)	O	O:0.999989
just	O	O:0.999464
columns	O	O:0.999659
`	O	O:0.999973
b0	O	O:0.995190
`	O	O:0.999992
through	O	O:0.994703
`	O	O:0.999993
b9	O	O:0.996256
`	O	O:0.999995
from	O	O:0.999388
the	O	O:0.999987
array	O	O:0.999631
,	O	O:0.999981
giving	O	O:0.999762
the	O	O:0.999608
structure	O	O:0.997298
#CODE	O	O:0.999432
	
I	O	O:0.999920
can't	O	O:0.999849
find	O	O:0.996250
any	O	O:0.999505
method	O	O:0.998020
to	O	O:0.999949
tell	O	O:0.999819
mpl	O	O:0.999688
to	O	O:0.999993
plot	O	O:0.999828
all	O	O:0.999930
of	O	O:0.999978
the	O	O:0.999818
data	O	O:0.999544
,	O	O:0.999989
it	O	O:0.999984
seems	O	O:0.999968
that	O	O:0.999960
there	O	O:0.999825
are	O	O:0.999922
only	O	O:0.999391
methods	O	O:0.998914
for	O	O:0.999932
drawing	O	O:0.998397
every	O	O:0.992119
n'th	O	O:0.999602
element	O	O:0.999453
or	O	O:0.999914
similar	O	O:0.996794
(	O	O:0.999967
and	O	O:0.999961
passing	O	O:0.996463
1	O	O:0.999839
does	O	O:0.999442
not	O	O:0.999967
help	O	O:0.996008
)	O	O:0.999872
.	O	O:0.998886
	
I	O	O:0.999946
haven't	O	O:0.999874
checked	O	O:0.999549
any	O	O:0.999873
of	O	O:0.999928
the	O	O:0.999352
details	O	O:0.995596
and	O	O:0.999875
you	O	O:0.999422
should	O	O:0.999164
therefore	O	O:0.999583
not	O	O:0.999930
rely	O	O:0.999588
on	O	O:0.999982
it	O	O:0.999989
to	O	O:0.999992
be	O	O:0.999990
correct	O	O:0.998590
.	O	O:0.999686
	
You	O	O:0.999794
can	O	O:0.999057
access	O	O:0.999622
members	O	O:0.998283
and	O	O:0.999951
slices	O	O:0.998760
of	O	O:0.999931
the	O	O:0.999931
array	O	O:0.999734
as	O	O:0.999977
you	O	O:0.998624
would	O	O:0.999854
with	O	O:0.999897
normal	O	O:0.996083
numpy	O	O:0.998040
arrays	O	O:0.998192
.	O	O:0.999646
	
Running	O	O:0.998036
1000	O	O:0.996978
simulations	O	O:0.999615
at	O	O:0.999923
the	O	O:0.999946
same	O	O:0.999778
time	O	O:0.999930
might	O	O:0.999978
be	O	O:0.999995
a	O	O:0.999966
bit	O	O:0.999096
expensive	O	O:0.999401
though	O	O:0.997114
.	O	O:0.999471
	
I	O	O:0.999986
need	O	O:0.999649
to	O	O:0.999927
look	O	O:0.999957
at	O	O:0.999969
other	O	O:0.999596
formats	O	O:0.999865
that	O	O:0.999673
allow	O	O:0.999493
create	O	O:0.997891
.	O	O:0.999725
	
finding	O	O:0.999222
element	O	O:0.999577
of	O	O:0.999979
numpy	O	O:0.996714
array	O	O:0.999950
that	O	O:0.999818
satisfies	O	O:0.999347
condition	O	O:0.993522
	
All	O	O:0.999801
the	O	O:0.999479
results	O	O:0.968181
(	O	O:0.999997
percentage	O	O:0.999918
)	O	O:0.999962
are	O	O:0.999874
the	O	O:0.999971
comparison	O	O:0.996575
between	O	O:0.999049
the	O	O:0.999984
described	O	O:0.998356
condition	O	O:0.988388
and	O	O:0.999967
the	O	O:0.999936
reference	O	O:0.990195
which	O	O:0.999934
here	O	O:0.999661
is	O	O:0.999994
the	O	O:0.999823
packaged	O	O:0.996212
ATLAS	O	O:0.999428
library	O	O:0.997428
.	O	O:0.999637
	
how	O	O:0.999772
do	O	O:0.999976
you	O	O:0.999964
use	O	O:0.999723
`	O	O:0.999938
slicing	O	O:0.992201
`	O	O:0.999985
to	O	O:0.999886
extract	O	O:0.999989
something	O	O:0.999976
from	O	O:0.999432
`	O	O:0.999989
x	O	O:0.998678
`	O	O:0.999981
?	O	O:0.999930
	
Mapping	O	O:0.998682
a	O	O:0.999957
numpy	O	O:0.997535
array	O	O:0.999392
pairwise	O	O:0.990621
	
If	O	O:0.999988
that	O	O:0.998833
is	O	O:0.999991
all	O	O:0.999118
you	O	O:0.999945
want	O	O:0.999502
to	O	O:0.999941
do	O	O:0.999990
,	O	O:0.999994
it	O	O:0.999847
should	O	O:0.999790
just	O	O:0.999755
work	O	O:0.999671
otherwise	O	O:0.999951
look	O	O:0.999561
at	O	O:0.999938
#URL	O	O:0.999381
since	O	O:0.999648
subclassing	O	O:0.999674
an	O	O:0.999949
array	O	O:0.997415
is	O	O:0.999941
not	O	O:0.999688
that	O	O:0.999665
simple	O	O:0.998793
.	O	O:0.999694
	
If	O	O:0.999923
you	O	O:0.999848
want	O	O:0.999772
to	O	O:0.999951
access	O	O:0.999818
an	O	O:0.999931
individual	O	O:0.997205
element	O	O:0.999851
using	O	O:0.999058
2D	O	O:0.999553
notation	O	O:0.987800
,	O	O:0.999998
you	O	O:0.999953
can	O	O:0.999776
create	O	O:0.999968
a	O	O:0.999998
view	O	O:0.972679
and	O	O:0.999796
work	O	O:0.997647
with	O	O:0.999661
that	O	O:0.998421
.	O	O:0.999897
	
Regarding	O	O:0.995182
3	O	O:0.999768
,	O	O:0.999977
I	O	O:0.999988
don't	O	O:0.999639
think	O	O:0.999636
this	O	O:0.999491
would	O	O:0.999871
be	O	O:0.999991
necessary	O	O:0.999889
since	O	O:0.999519
the	O	O:0.999964
above	O	O:0.999917
trick	O	O:0.999296
can	O	O:0.999937
also	O	O:0.999991
be	O	O:0.999992
applied	O	O:0.998960
to	O	O:0.999759
an	O	O:0.999991
array	O	O:0.999545
allocated	O	O:0.999954
by	O	O:0.999700
`	O	O:0.999980
shmarray	O	O:0.988538
`	O	O:0.999953
.	O	O:0.998672
	
And	O	O:0.999966
here	O	O:0.999496
a	O	O:0.999988
list	O	O:0.996293
with	O	O:0.999822
the	O	O:0.999856
names	O	O:0.999370
of	O	O:0.999982
all	O	O:0.999927
distribution	O	O:0.999782
functions	O	O:0.999725
available	O	O:0.999573
in	O	O:0.999913
Scipy	O	O:0.998203
0.12.0	O	O:0.991879
(	O	O:0.999874
VI	O	O:0.978169
):	O	O:0.999927
#CODE	O	O:0.998177
	
I	O	O:0.999868
get	O	O:0.999959
this	O	O:0.999720
error	O	O:0.999677
whenever	O	O:0.999574
i	O	O:0.999985
try	O	O:0.999954
to	O	O:0.999948
use	O	O:0.999996
any	O	O:0.999362
functions	O	O:0.999570
of	O	O:0.999895
matplotlib	O	O:0.999577
such	O	O:0.999918
as	O	O:0.999975
graph	O	O:0.987312
etc	O	O:0.999643
...	O	O:0.991042
	
Numpy	O	O:0.994551
is	O	O:0.999946
designed	O	O:0.998282
for	O	O:0.999968
repeated	O	O:0.999334
application	O	O:0.998867
of	O	O:0.999935
the	O	O:0.999623
exact	O	O:0.999679
same	O	O:0.999631
operation	O	O:0.999879
in	O	O:0.999995
parallel	O	O:0.998610
across	O	O:0.999788
an	O	O:0.999924
array	O	O:0.997714
.	O	O:0.999538
	
Each	O	O:0.999159
B	O	O:0.999849
i	O	O:0.999970
is	O	O:0.999991
a	O	O:0.999871
`	O	O:0.999954
k	O	O:0.989630
`	O	O:0.999976
-by-	O	O:0.838330
`	O	O:0.999991
n	O	O:0.983399
`	O	O:0.999970
matrix	O	O:0.940159
.	O	O:0.999826
	
I	O	O:0.999974
created	O	O:0.999923
a	O	O:0.999997
copy	O	O:0.982394
of	O	O:0.999923
the	O	O:0.999756
initial	O	O:0.997988
array	O	O:0.999558
in	O	O:0.999818
the	O	O:0.999918
hope	O	O:0.999353
that	O	O:0.999660
it	O	O:0.999940
would	O	O:0.999904
sort	O	O:0.994826
it	O	O:0.999914
out	O	O:0.999739
but	O	O:0.999626
it	O	O:0.999900
still	O	O:0.995549
doesn't	O	O:0.999799
work	O	O:0.993651
!	O	O:0.999961
	
So	O	O:0.999955
far	O	O:0.999932
,	O	O:0.999984
all	O	O:0.999800
the	O	O:0.999940
solutions	O	O:0.998618
I	O	O:0.999988
found	O	O:0.999858
required	O	O:0.999742
converting	O	O:0.999105
to	O	O:0.999860
IPLImage	O	O:0.999676
.	O	O:0.999532
	
However	O	O:0.999675
,	O	O:0.999918
I	O	O:0.999969
haven't	O	O:0.998626
tested	O	O:0.999039
this	O	O:0.999952
very	O	O:0.999743
systematically	O	O:0.999226
,	O	O:0.999906
and	O	O:0.999719
it's	O	O:0.999273
likely	O	O:0.999455
that	O	O:0.999830
for	O	O:0.999919
smaller	O	O:0.999824
matrices	O	O:0.984956
the	O	O:0.999924
additional	O	O:0.996493
overhead	O	O:0.999385
would	O	O:0.999709
outweigh	O	O:0.999902
the	O	O:0.999971
performance	O	O:0.998041
benefit	O	O:0.999939
from	O	O:0.999969
a	O	O:0.999905
higher	O	O:0.999456
thread	O	O:0.998893
count	O	O:0.951765
.	O	O:0.999615
	
but	O	O:0.999502
why	O	O:0.999868
dimA+dimB	O	O:0.996576
to	O	O:0.999903
begin	O	O:0.999750
with	O	O:0.999634
,	O	O:0.999986
that	O	O:0.999980
just	O	O:0.999721
leaves	O	O:0.999878
you	O	O:0.999938
0s	O	O:0.999984
at	O	O:0.999975
the	O	O:0.999848
end	O	O:0.985259
.	O	O:0.999417
	
If	O	O:0.999970
you	O	O:0.999828
select	O	O:0.999185
a	O	O:0.999998
list	O	O:0.994887
of	O	O:0.999973
actual	O	O:0.989478
fitness	O	O:0.999497
entries	O	O:0.997340
,	O	O:0.999922
`	O	O:0.999981
indices	O	O:0.932166
`	O	O:0.999979
,	O	O:0.999959
the	O	O:0.999985
corresponding	O	O:0.997468
points	O	O:0.998535
are	O	O:0.999945
given	O	O:0.999762
by	O	O:0.999943
`	O	O:0.999862
A	O	O:0.999335
[	O	O:0.999995
'	O	O:0.999976
point	O	O:0.999271
']	O	O:0.999745
[	O	O:0.999805
indices	O	O:0.995981
]`	O	O:0.999888
,	O	O:0.999889
which	O	O:0.999831
is	O	O:0.999986
a	O	O:0.999978
simple	O	O:0.991353
`	O	O:0.999807
(	O	O:0.999895
n	O	O:0.999736
,	O	O:0.999991
3	O	O:0.999986
)`	O	O:0.999872
array	O	O:0.997210
.	O	O:0.999880
	
It's	O	O:0.999675
also	O	O:0.999844
possible	O	O:0.999844
to	O	O:0.999955
generate	O	O:0.999967
an	O	O:0.999990
array	O	O:0.999878
of	O	O:0.999886
indices	O	O:0.977856
without	O	O:0.999855
using	O	O:0.993306
`	O	O:0.999422
enumerate	O	B-API:0.826168
`	O	O:0.999816
.	O	O:0.998791
	
If	O	O:0.999922
you	O	O:0.999936
want	O	O:0.999828
to	O	O:0.999981
keep	O	O:0.999957
the	O	O:0.999970
array	O	O:0.998376
allocated	O	O:0.999752
,	O	O:0.999882
and	O	O:0.999957
with	O	O:0.999500
the	O	O:0.999864
same	O	O:0.999893
size	O	O:0.999857
,	O	O:0.999999
you	O	O:0.999939
don't	O	O:0.999952
need	O	O:0.999937
to	O	O:0.999981
clear	O	O:0.999986
the	O	O:0.999952
elements	O	O:0.995851
.	O	O:0.999799
	
It'll	O	O:0.998240
print	O	O:0.987310
out	O	O:0.999420
all	O	O:0.997194
methods	O	O:0.995544
and	O	O:0.999947
properties	O	O:0.996341
of	O	O:0.999869
the	O	O:0.998418
object	O	O:0.996275
.	O	O:0.999422
	
Search	O	O:0.999706
numpy	O	O:0.996113
array	O	O:0.998999
inside	O	O:0.999833
numpy	O	O:0.996700
array	O	O:0.995287
	
Assigning	O	O:0.998656
a	O	O:0.999975
view	O	O:0.989705
to	O	O:0.999967
a	O	O:0.999995
structured	O	O:0.999028
array	O	O:0.999871
also	O	O:0.999812
copies	O	O:0.999249
the	O	O:0.999967
data	O	O:0.999535
,	O	O:0.999989
soyour	O	O:0.999711
suggestion	O	O:0.999447
doesnt	O	O:0.999240
work	O	O:0.993498
.	O	O:0.999634
	
If	O	O:0.999952
you	O	O:0.999865
know	O	O:0.999897
there	O	O:0.999458
are	O	O:0.999568
not	O	O:0.999915
many	O	O:0.999408
different	O	O:0.999489
values	O	O:0.992508
(	O	O:0.999995
relative	O	O:0.999778
to	O	O:0.999982
the	O	O:1.000000
size	O	O:0.999878
of	O	O:0.999961
the	O	O:0.999906
input	O	O:0.999319
"	O	O:0.999949
itemArray	O	O:0.995430
")	O	O:0.999887
,	O	O:0.999874
something	O	O:0.999864
like	O	O:0.999825
this	O	O:0.999920
could	O	O:0.999420
be	O	O:0.999956
efficient	O	O:0.993500
:	O	O:0.999895
#CODE	O	O:0.999529
	
When	O	O:0.995183
I	O	O:0.999987
import	O	O:0.999845
numpy	O	O:0.994421
in	O	O:0.999920
a	O	O:0.999955
script	O	O:0.999199
,	O	O:0.999967
I	O	O:0.999986
don't	O	O:0.999949
have	O	O:0.999135
all	O	O:0.999954
the	O	O:0.999949
functions	O	O:0.999515
of	O	O:0.999983
numpy	O	O:0.999208
available	O	O:0.999867
,	O	O:0.999998
only	O	O:0.999875
few	O	O:0.999854
of	O	O:0.999995
them	O	O:0.992290
(	O	O:0.999994
not	O	O:0.999714
a	O	O:0.999963
lot	O	O:0.998866
,	O	O:0.999739
and	O	O:0.999767
not	O	O:0.999624
array	O	O:0.998167
)	O	O:0.999815
?	O	O:0.999599
	
It	O	O:0.999965
allows	O	O:0.999659
to	O	O:0.999976
have	O	O:0.999987
your	O	O:0.999905
custom	O	O:0.999017
system	O	O:0.999733
inside	O	O:0.999526
the	O	O:0.999958
home	O	O:0.994320
directory	O	O:0.999790
accessible	O	O:0.999869
via	O	O:0.999791
proot	O	O:0.980814
and	O	O:0.999747
,	O	O:0.999988
therefore	O	O:0.999345
,	O	O:0.999992
you	O	O:0.999761
can	O	O:0.999739
install	O	O:0.999933
any	O	O:0.999942
packages	O	O:0.988582
without	O	O:0.999661
root	O	O:0.997731
privileges	O	O:0.996370
.	O	O:0.999730
	
Hey	O	O:0.999574
,	O	O:0.999871
is	O	O:0.999991
there	O	O:0.996868
an	O	O:0.999850
optimal	O	O:0.999323
size	O	O:0.999889
for	O	O:0.999977
a	O	O:0.999942
block	O	O:0.992196
?	O	O:0.999919
	
Numpy	O	O:0.998909
array	O	O:0.998242
,	O	O:0.999967
how	O	O:0.999890
to	O	O:0.999803
select	O	O:0.999834
indices	O	O:0.998956
satisfying	O	O:0.999924
multiple	O	O:0.996240
conditions	O	O:0.998830
?	O	O:0.999968
	
I'm	O	O:0.999728
still	O	O:0.997440
learning	O	O:0.998902
git	O	O:0.987932
and	O	O:0.999932
this	O	O:0.999474
whole	O	O:0.999373
open	O	O:0.970441
source	O	O:0.999886
thing	O	O:0.998274
.	O	O:0.999259
	
A	O	O:0.999283
further	O	O:0.999947
problem	O	O:0.990479
is	O	O:0.999995
that	O	O:0.998499
a	O	O:0.999979
list	O	O:0.977669
index	O	O:0.998237
can't	O	O:0.998029
contain	O	O:0.998961
duplicates	O	O:0.999651
-	O	O:0.999993
I	O	O:0.999987
couldn't	O	O:0.999918
simultaneously	O	O:0.999747
read	O	O:0.999194
pixels	O	O:0.993085
`	O	O:0.999987
[	O	O:0.999826
1	O	O:0.999974
,	O	O:0.999985
2	O	O:0.999944
]`	O	O:0.999622
and	O	O:0.996324
`	O	O:0.999980
[	O	O:0.999388
1	O	O:0.999976
,	O	O:0.999985
3	O	O:0.999959
]`	O	O:0.999802
,	O	O:0.999981
since	O	O:0.999882
my	O	O:0.999986
list	O	O:0.999104
of	O	O:0.999988
pixel	O	O:0.983807
x-coordinates	O	O:0.998051
would	O	O:0.999596
contain	O	O:0.992086
`	O	O:0.999995
[	O	O:0.999899
1	O	O:0.999989
,	O	O:0.999990
1	O	O:0.999936
]`	O	O:0.999485
.	O	O:0.999031
	
Your	O	O:0.999120
interpretation	O	O:0.998232
is	O	O:0.999975
,	O	O:0.999975
of	O	O:0.999958
course	O	O:0.995383
,	O	O:0.999997
quite	O	O:0.999462
correct	O	O:0.997691
:	O	O:0.999988
`	O	O:0.999993
count	O	O:0.970754
`	O	O:0.999997
refers	O	O:0.999443
to	O	O:0.999995
the	O	O:0.999995
number	O	O:0.999600
of	O	O:0.999975
elements	O	O:0.999804
in	O	O:0.999992
the	O	O:0.999785
`	O	O:0.999692
float*	O	B-API:0.865748
`	O	O:0.999957
"	O	O:0.999877
array	O	O:0.999069
"	O	O:0.999640
.	O	O:0.998292
	
This	O	O:0.999327
all	O	O:0.996933
works	O	O:0.999022
.	O	O:0.998918
	
Of	O	O:0.999881
course	O	O:0.998199
it	O	O:0.999986
may	O	O:0.999712
_not_	O	O:0.998091
be	O	O:0.999927
acceptable	O	O:0.996938
,	O	O:0.999827
but	O	O:0.999593
it	O	O:0.999193
seemed	O	O:0.999643
like	O	O:0.999626
it	O	O:0.999939
was	O	O:0.999926
at	O	O:0.999891
least	O	O:0.997215
trying	O	O:0.997972
.	O	O:0.996154
	
I	O	O:0.999950
think	O	O:0.999752
what	O	O:0.993597
should	O	O:0.999227
happen	O	O:0.981451
is	O	O:0.999995
for	O	O:0.999876
R	O	O:0.999989
to	O	O:0.999941
be	O	O:0.999973
overwritten	O	O:0.999606
with	O	O:0.999774
an	O	O:0.999873
upper	O	O:0.998305
triangular	O	O:0.998656
matrix	O	O:0.940007
.	O	O:0.998868
	
@USER	O	O:0.999324
Is	O	O:0.999994
there	O	O:0.999808
a	O	O:0.999973
way	O	O:0.999174
to	O	O:0.999774
get	O	O:0.999940
it	O	O:0.999951
to	O	O:0.999954
return	O	O:0.999358
all	O	O:0.999825
possible	O	O:0.999464
solutions	O	O:0.999346
?	O	O:0.999967
	
Thank	O	O:0.999411
you	O	O:0.999866
all	O	O:0.999682
for	O	O:0.999986
some	O	O:0.997941
great	O	O:0.998888
insight	O	O:0.999350
!	O	O:0.999923
	
as	O	O:0.999966
numpy	O	O:0.999126
array	O	O:0.999877
of	O	O:0.999871
0	O	O:0.999521
and	O	O:0.999879
1	O	O:0.999749
values	O	O:0.985212
.	O	O:0.999622
	
By	O	O:0.999952
construction	O	O:0.999639
of	O	O:0.999987
the	O	O:0.999885
problem	O	O:0.998037
,	O	O:0.999998
there	O	O:0.999603
can	O	O:0.999735
not	O	O:0.999955
be	O	O:0.999993
any	O	O:0.999782
non-unique	O	O:0.997945
values	O	O:0.995130
lying	O	O:0.998582
within	O	O:0.999316
one	O	O:0.998103
another	O	O:0.998234
.	O	O:0.999432
	
Both	O	O:0.998830
functions	O	O:0.998858
are	O	O:0.999945
kind	O	O:0.999341
of	O	O:0.999953
equal	O	O:0.973102
,	O	O:0.999990
but	O	O:0.999743
are	O	O:0.999632
different	O	O:0.993525
.	O	O:0.999000
	
For	O	O:0.999929
a	O	O:0.999964
sparse	O	O:0.995194
csr	O	O:0.987144
matrix	O	O:0.963602
(	O	O:0.999949
X	O	O:0.999491
)	O	O:0.999918
and	O	O:0.998765
a	O	O:0.999997
list	O	O:0.963597
of	O	O:0.999911
indices	O	O:0.975269
to	O	O:0.999981
drop	O	O:0.953724
(	O	O:0.999924
index_to_drop	O	O:0.766704
):	O	O:0.999922
#CODE	O	O:0.997170
	
This	O	O:0.999688
will	O	O:0.999102
be	O	O:0.999980
relatively	O	O:0.999683
slow	O	O:0.998967
,	O	O:0.999979
and	O	O:0.999942
requires	O	O:0.999623
you	O	O:0.999815
to	O	O:0.999996
have	O	O:0.999980
twice	O	O:0.999968
the	O	O:0.999987
free	O	O:0.999730
memory	O	O:0.999563
space	O	O:0.999849
required	O	O:0.999948
to	O	O:0.999975
store	O	O:0.999913
the	O	O:0.999943
array	O	O:0.997042
.	O	O:0.999650
	
I	O	O:0.999982
need	O	O:0.999879
numpy	O	O:0.980759
for	O	O:0.999985
this	O	O:0.999869
because	O	O:0.998696
I	O	O:0.999960
don't	O	O:0.999907
want	O	O:0.999278
to	O	O:0.999965
loop	O	O:0.999970
through	O	O:0.999835
the	O	O:0.999876
array	O	O:0.998953
n-times	O	O:0.999095
for	O	O:0.999917
n	O	O:0.999560
groups	O	O:0.994529
,	O	O:0.999996
since	O	O:0.999868
my	O	O:0.999968
array	O	O:0.999982
sizes	O	O:0.999477
can	O	O:0.999868
be	O	O:0.999998
arbitrarily	O	O:0.999689
large	O	O:0.991476
.	O	O:0.997623
	
I	O	O:0.999824
wonder	O	O:0.999916
what	O	O:0.997052
the	O	O:0.999952
speed	O	O:0.999715
delta	O	O:0.744712
between	O	O:0.996240
native	O	O:0.999001
Numpy	O	O:0.996086
arrays	O	O:0.997739
and	O	O:0.999767
an	O	O:0.999302
`	O	O:0.999967
mpfr	O	O:0.775238
`	O	O:0.999985
array	O	O:0.995895
,	O	O:0.999997
seeing	O	O:0.999895
as	O	O:0.999584
`	O	O:0.999985
mpfr	O	O:0.876418
`	O	O:0.999978
is	O	O:0.999937
a	O	O:0.999992
relatively	O	O:0.999511
low-level	O	O:0.998759
C	O	O:0.999816
wrapper	O	O:0.999231
class	O	O:0.994669
.	O	O:0.999842
	
In	O	O:0.999969
this	O	O:0.999902
particular	O	O:0.999757
case	O	O:0.998513
,	O	O:0.999998
each	O	O:0.999646
1D	O	O:0.999945
column	O	O:0.997898
(	O	O:0.999979
`	O	O:0.999964
column	O	O:0.998393
=	O	O:0.999995
myarray	O	O:0.992208
[	O	O:0.999982
i	O	O:0.999985
,	O	O:0.999995
j	O	O:0.999609
,	O	O:0.999989
:]	O	O:0.999921
`)	O	O:0.999602
of	O	O:0.999944
the	O	O:0.999924
3D	O	O:0.999990
array	O	O:0.999504
can	O	O:0.999858
be	O	O:0.999975
treated	O	O:0.999620
independently	O	O:0.996926
.	O	O:0.999375
	
Any	O	O:0.999611
ideas	O	O:0.998642
?	O	O:0.999926
	
Then	O	O:0.999271
take	O	O:0.999858
element	O	O:0.999599
3	O	O:0.999907
and	O	O:0.999897
1	O	O:0.999972
from	O	O:0.999155
second	O	O:0.999254
row	O	O:0.999933
,	O	O:0.999976
etc	O	O:0.999676
.	O	O:0.999403
	
print	O	O:0.916255
len	O	B-API:0.991580
(	O	O:0.999917
index	O	O:0.988260
)	O	O:0.999678
	
I	O	O:0.999948
don't	O	O:0.999925
know	O	O:0.998762
how	O	O:0.999846
to	O	O:0.999964
label	O	O:0.999657
rows	O	O:0.999022
and	O	O:0.999849
columns	O	O:0.999660
in	O	O:0.999941
numpy	O	O:0.998728
,	O	O:0.999995
so	O	O:0.999973
I	O	O:0.999995
just	O	O:0.999982
made	O	O:0.999840
a	O	O:0.999996
dict	O	O:0.999065
mapping	O	O:0.999550
the	O	O:0.999784
row	O	O:0.999841
label	O	O:0.994978
to	O	O:0.999991
the	O	O:0.999859
row	O	O:0.998531
index	O	O:0.999214
and	O	O:0.999971
another	O	O:0.999895
doing	O	O:0.998224
the	O	O:0.999942
same	O	O:0.997057
for	O	O:0.999975
the	O	O:0.999950
columns	O	O:0.992266
.	O	O:0.999835
	
It's	O	O:0.999492
the	O	O:0.999984
same	O	O:0.999824
as	O	O:0.999984
a	O	O:0.999994
normal	O	O:0.987902
solve	O	O:0.999764
except	O	O:0.999571
I	O	O:0.999997
know	O	O:0.999988
some	O	O:0.999705
of	O	O:0.999980
the	O	O:0.999926
solution	O	O:0.999842
to	O	O:0.999962
begin	O	O:0.999771
with	O	O:0.999786
.	O	O:0.999141
	
yeah	O	O:0.996210
,	O	O:0.999998
this	O	O:0.999708
is	O	O:0.999943
the	O	O:0.999936
best	O	O:0.998847
answer	O	O:0.999943
anywhere	O	O:0.999189
where	O	O:0.999846
edge	O	O:0.999857
cases	O	O:0.998140
are	O	O:0.999892
important	O	O:0.999100
.	O	O:0.999061
	
With	O	O:0.999720
this	O	O:0.999859
,	O	O:0.999991
I	O	O:0.999995
solve	O	O:0.999844
the	O	O:0.999710
problem	O	O:0.991664
(	O	O:0.999987
may	O	O:0.999938
help	O	O:0.998054
you	O	O:0.997048
):	O	O:0.999967
#CODE	O	O:0.999154
	
Teach	O	O:0.999366
a	O	O:0.999957
man	O	O:0.999022
to	O	O:0.999958
fish	O	O:0.999638
and	O	O:0.999829
all	O	O:0.999736
that	O	O:0.996678
.	O	O:0.999431
	
Looks	O	O:0.999360
like	O	O:0.999886
this	O	O:0.999612
would	O	O:0.999828
be	O	O:0.999960
a	O	O:0.999988
good	O	O:0.999246
place	O	O:0.999304
to	O	O:0.999979
use	O	O:0.999990
a	O	O:0.999918
context	O	O:0.991379
manager	O	O:0.999675
,	O	O:0.999978
so	O	O:0.999993
you	O	O:0.999941
can	O	O:0.999961
say	O	O:0.999986
"	O	O:0.999992
with	O	O:0.999576
fullprint	O	O:0.997445
"	O	O:0.999677
.	O	O:0.999012
	
What	O	O:0.999564
do	O	O:0.999914
you	O	O:0.999962
mean	O	O:0.998451
by	O	O:0.999968
'	O	O:0.999951
random	O	O:0.999248
sort	O	O:0.993499
'	O	O:0.999934
?	O	O:0.999946
	
However	O	O:0.998734
,	O	O:0.999680
it	O	O:0.999670
indeed	O	O:0.999702
does	O	O:0.999689
not	O	O:0.999841
allow	O	O:0.999931
you	O	O:0.999949
to	O	O:0.999976
exponentiate	O	O:0.999983
any	O	O:0.999849
matrix	O	O:0.997837
directly	O	O:0.989207
:	O	O:0.999954
#CODE	O	O:0.999438
	
The	O	O:0.999894
first	O	O:0.999213
one	O	O:0.999009
would	O	O:0.999739
probably	O	O:0.999697
be	O	O:0.999994
slow	O	O:0.999688
for	O	O:0.999920
large	O	O:0.999692
data	O	O:0.997524
,	O	O:0.999892
and	O	O:0.999925
the	O	O:0.999366
second	O	O:0.994199
one	O	O:0.999917
does	O	O:0.999270
not	O	O:0.999991
seem	O	O:0.999971
to	O	O:0.999983
offer	O	O:0.999991
any	O	O:0.999355
other	O	O:0.996228
interpolation	O	O:0.997233
method	O	O:0.999230
except	O	O:0.999154
splines	O	O:0.991266
.	O	O:0.999699
	
EDIT	O	O:0.997748
:	O	O:0.999974
For	O	O:0.999956
the	O	O:0.999690
record	O	O:0.994182
,	O	O:0.999997
here	O	O:0.999734
is	O	O:0.999992
example	O	O:0.999737
code	O	O:0.999977
that	O	O:0.999937
demonstrates	O	O:0.999619
the	O	O:0.999696
issue	O	O:0.991473
:	O	O:0.999957
#CODE	O	O:0.999558
	
In	O	O:0.999975
terms	O	O:0.999914
of	O	O:0.999939
functionality	O	O:0.998476
,	O	O:0.999944
it's	O	O:0.999875
not	O	O:0.999582
a	O	O:0.999994
metaclass	O	O:0.998353
at	O	O:0.999953
all	O	O:0.997994
,	O	O:0.999971
it's	O	O:0.999890
a	O	O:0.999786
function	O	O:0.998366
which	O	O:0.999926
takes	O	O:0.999885
a	O	O:0.999983
class	O	O:0.995324
(	O	O:0.999987
along	O	O:0.999846
with	O	O:0.999912
some	O	O:0.999535
others	O	O:0.999947
stuff	O	O:0.999562
)	O	O:0.999851
and	O	O:0.999639
returns	O	O:0.999922
a	O	O:0.999916
new	O	O:0.998522
class	O	O:0.992730
.	O	O:0.999798
	
or	O	O:0.999949
from	O	O:0.997571
source	O	O:0.999408
#CODE	O	O:0.999840
	
Didn't	O	O:0.999532
do	O	O:0.999947
any	O	O:0.999835
timings	O	O:0.999644
here	O	O:0.993352
,	O	O:0.999974
but	O	O:0.999798
it's	O	O:0.999450
possible	O	O:0.999667
this	O	O:0.999878
version	O	O:0.999043
has	O	O:0.999936
reasonable	O	O:0.999629
performance	O	O:0.995804
.	O	O:0.999750
	
I'll	O	O:0.998156
just	O	O:0.999830
test	O	O:0.978145
whether	O	O:0.999560
or	O	O:0.999895
not	O	O:0.999687
there's	O	O:0.999986
a	O	O:0.999955
significan	O	O:0.997412
space	O	O:0.999865
gain	O	O:0.999829
on	O	O:0.999995
my	O	O:0.999976
data	O	O:0.999930
with	O	O:0.999951
protocol	O	O:0.995363
2	O	O:0.999888
.	O	O:0.999559
	
Just	O	O:0.998136
wanted	O	O:0.999651
to	O	O:0.999696
add	O	O:0.999994
that	O	O:0.999601
the	O	O:0.999960
moving	O	O:0.995710
average	O	O:0.996423
function	O	O:0.999472
has	O	O:0.999987
been	O	O:0.997538
extracted	O	O:0.999971
into	O	O:0.999249
the	O	O:0.999969
[	O	O:0.999871
Bottleneck	O	O:0.999277
]	O	O:0.999869
(	O	O:0.999959
#URL	O	O:0.999756
)	O	O:0.999920
library	O	O:0.996439
if	O	O:0.999971
pandas	O	O:0.997859
seems	O	O:0.999399
too	O	O:0.999944
heavyweight	O	O:0.999920
as	O	O:0.999972
a	O	O:0.999965
dependency	O	O:0.976495
.	O	O:0.998921
	
`	O	O:0.999970
numpy	O	O:0.995854
`	O	O:0.999995
can	O	O:0.999495
use	O	O:0.999964
`	O	O:0.999870
malloc	O	B-API:0.996761
`	O	O:0.999966
/	O	O:0.996188
`	O	O:0.999971
realloc	O	B-API:0.980665
`	O	O:0.999962
for	O	O:0.999833
creating	O	O:0.999791
an	O	O:0.999963
array	O	O:0.999846
of	O	O:0.999969
objects	O	O:0.999089
of	O	O:0.999940
`	O	O:0.999699
sizeof	O	B-API:0.901859
(	O	O:0.999975
int	O	O:0.997731
)`	O	O:0.999691
.	O	O:0.998637
	
If	O	O:0.999926
you	O	O:0.999907
read	O	O:0.999429
through	O	O:0.999916
the	O	O:0.999983
documentation	O	O:0.999258
of	O	O:0.999985
those	O	O:0.999425
engines	O	O:0.999498
you	O	O:0.999863
will	O	O:0.999563
often	O	O:0.999358
find	O	O:0.999679
statements	O	O:0.999659
saying	O	O:0.999888
that	O	O:0.999944
they	O	O:0.999831
are	O	O:0.999817
optimized	O	O:0.999380
for	O	O:0.999708
speed	O	O:0.996275
(	O	O:0.999924
30fps	O	O:0.999442
-	O	O:0.999993
60fps	O	O:0.997868
)	O	O:0.999731
.	O	O:0.998800
	
I	O	O:0.999992
know	O	O:0.999452
I	O	O:0.999992
have	O	O:0.999733
to	O	O:0.999961
look	O	O:0.999883
at	O	O:0.999994
each	O	O:0.998577
row	O	O:0.998756
,	O	O:0.999978
but	O	O:0.999840
I	O	O:0.999953
don't	O	O:0.999762
want	O	O:0.999283
to	O	O:0.999896
do	O	O:0.999987
it	O	O:0.999992
with	O	O:0.999753
loops	O	O:0.998673
.	O	O:0.999856
	
I'm	O	O:0.999021
hoping	O	O:0.999949
this	O	O:0.999768
can	O	O:0.999866
at	O	O:0.999987
least	O	O:0.999845
save	O	O:0.999832
someone	O	O:0.999912
a	O	O:0.999974
few	O	O:0.999884
hours	O	O:0.999197
of	O	O:0.999970
hopeless	O	O:0.999440
research	O	O:0.999555
for	O	O:0.999980
this	O	O:0.999496
topic	O	O:0.994393
.	O	O:0.999620
	
What	O	O:0.999824
does	O	O:0.998072
"	O	O:0.999927
doesn't	O	O:0.999545
work	O	O:0.995485
"	O	O:0.999953
mean	O	O:0.986320
?	O	O:0.999977
	
You	O	O:0.999707
might	O	O:0.999685
look	O	O:0.998158
at	O	O:0.999991
your	O	O:0.999729
code	O	O:0.999952
that	O	O:0.999919
generates	O	O:0.999824
the	O	O:0.999873
`	O	O:0.999980
y	O	O:0.994247
`	O	O:0.999988
values	O	O:0.993541
,	O	O:0.999986
and	O	O:0.999953
see	O	O:0.999734
if	O	O:0.999969
that	O	O:0.999098
would	O	O:0.999844
benefit	O	O:0.999946
from	O	O:0.999961
the	O	O:0.999925
use	O	O:0.999757
of	O	O:0.999842
additional	O	O:0.998095
numpy	O	O:0.999421
or	O	O:0.999984
scipy	O	O:0.996281
functions	O	O:0.999628
.	O	O:0.999520
	
For	O	O:0.999917
example	O	O:0.996766
,	O	O:0.999994
give	O	O:0.999304
the	O	O:0.999936
list	O	O:0.976201
[	O	O:0.999949
(	O	O:0.999955
.3	O	O:0.998792
,	O	O:0.999987
'	O	O:0.999994
a	O	O:0.999970
')	O	O:0.999134
,	O	O:0.999413
(	O	O:0.999971
.4	O	O:0.993170
,	O	O:0.999980
'	O	O:0.999989
b	O	O:0.999736
')	O	O:0.999755
,	O	O:0.999592
(	O	O:0.999975
.3	O	O:0.991559
,	O	O:0.999985
'	O	O:0.999975
c	O	O:0.998634
')]	O	O:0.999458
I'd	O	O:0.999939
like	O	O:0.998340
to	O	O:0.999923
sample	O	O:0.998830
'	O	O:0.999967
b	O	O:0.999823
'	O	O:0.999986
40%	O	O:0.999714
of	O	O:0.999916
the	O	O:0.999849
time	O	O:0.999282
.	O	O:0.999724
	
The	O	O:0.999758
square	O	O:0.998231
bracket	O	O:0.999322
idea	O	O:0.999262
you	O	O:0.999497
mentioned	O	O:0.999282
works	O	O:0.999846
for	O	O:0.999974
my	O	O:0.999833
current	O	O:0.997488
problem	O	O:0.996472
.	O	O:0.999656
	
However	O	O:0.999310
,	O	O:0.999990
when	O	O:0.998706
I	O	O:0.999998
try	O	O:0.999994
to	O	O:0.999912
use	O	O:0.999976
a	O	O:0.999813
weighted	O	O:0.975128
average	O	O:0.996951
#CODE	O	O:0.997403
	
If	O	O:0.999929
I	O	O:0.999985
scale	O	O:0.999696
that	O	O:0.999664
to	O	O:0.999991
a	O	O:0.999997
2000	O	O:0.991419
X	O	O:0.999558
2000	O	O:0.998937
np	O	O:0.999049
array	O	O:0.998221
,	O	O:0.999998
here	O	O:0.997489
is	O	O:0.999993
what	O	O:0.998723
I	O	O:0.999985
get	O	O:0.998521
:	O	O:0.999827
#CODE	O	O:0.999443
	
Unfortunately	O	O:0.998384
,	O	O:0.999916
I'm	O	O:0.999942
not	O	O:0.999896
aware	O	O:0.999931
of	O	O:0.999988
a	O	O:0.999932
numpy	O	O:0.992162
implementation	O	O:0.991997
,	O	O:0.999985
but	O	O:0.999583
I	O	O:0.999969
did	O	O:0.999504
find	O	O:0.998671
this	O	O:0.999302
:	O	O:0.999977
#URL	O	O:0.998883
	
We	O	O:0.999973
can	O	O:0.999031
do	O	O:0.999999
this	O	O:0.999982
quite	O	O:0.999881
neatly	O	O:0.999658
using	O	O:0.999760
numpy	O	O:0.955388
,	O	O:0.999720
without	O	O:0.999390
having	O	O:0.990422
to	O	O:0.999865
worry	O	O:0.999845
about	O	O:0.999837
the	O	O:0.999914
channels	O	O:0.996893
at	O	O:0.999957
all	O	O:0.998618
!	O	O:0.999968
	
It's	O	O:0.999642
not	O	O:0.999801
exactly	O	O:0.999336
the	O	O:0.999977
most	O	O:0.998688
efficient	O	O:0.999514
way	O	O:0.997580
,	O	O:0.999952
but	O	O:0.999646
it	O	O:0.999780
will	O	O:0.995203
work	O	O:0.995985
,	O	O:0.999871
and	O	O:0.999960
not	O	O:0.999339
require	O	O:0.999240
keeping	O	O:0.999856
a	O	O:0.999997
copy	O	O:0.976020
of	O	O:0.999978
the	O	O:0.999904
file	O	O:0.998464
in	O	O:0.999916
memory	O	O:0.998626
(	O	O:0.999988
or	O	O:0.999959
two	O	O:0.999158
)	O	O:0.999936
.	O	O:0.998216
	
I'm	O	O:0.999880
trying	O	O:0.999736
to	O	O:0.999890
find	O	O:0.999914
the	O	O:0.999949
fastest	O	O:0.999615
way	O	O:0.999955
to	O	O:0.999958
find	O	O:0.999976
the	O	O:0.999952
first	O	O:0.998703
non-zero	O	O:0.999746
value	O	O:0.999796
for	O	O:0.999996
each	O	O:0.999545
row	O	O:0.999955
of	O	O:0.999978
a	O	O:0.999846
two	O	O:0.999785
dimensional	O	O:0.992086
sorted	O	O:0.999154
array	O	O:0.996690
.	O	O:0.999479
	
Convert	O	O:0.999102
the	O	O:0.999960
numpy	O	O:0.996518
array	O	O:0.999923
into	O	O:0.999729
a	O	O:0.999998
list	O	O:0.970274
first	O	O:0.997921
.	O	O:0.998462
	
@USER	O	O:0.999715
do	O	O:0.999886
you	O	O:0.999955
mean	O	O:0.998255
that	O	O:0.999972
grid	O	O:0.999896
dictonary	O	O:0.999931
holds	O	O:0.999834
the	O	O:0.999724
results	O	O:0.994438
in	O	O:0.999972
memory	O	O:0.999856
or	O	O:0.999986
something	O	O:0.999560
else	O	O:0.999495
?	O	O:0.999979
	
@USER	O	O:0.992583
:	O	O:0.999967
This	O	O:0.999921
solution	O	O:0.998511
is	O	O:0.999948
indeed	O	O:0.999704
designed	O	O:0.999607
to	O	O:0.999977
give	O	O:0.999945
the	O	O:0.999991
set	O	O:0.999561
of	O	O:0.999980
all	O	O:0.999716
the	O	O:0.999986
numbers	O	O:0.983437
found	O	O:0.999417
in	O	O:0.999991
the	O	O:0.999918
array	O	O:0.995203
.	O	O:0.999520
	
This	O	O:0.999768
way	O	O:0.999688
at	O	O:0.999969
most	O	O:0.998806
one	O	O:0.999971
line	O	O:0.997474
is	O	O:0.999956
in	O	O:0.999923
memory	O	O:0.999601
at	O	O:0.999968
any	O	O:0.998945
one	O	O:0.999879
time	O	O:0.998481
.	O	O:0.999715
	
It's	O	O:0.998681
low	O	O:0.999822
efficiency	O	O:0.999767
,	O	O:0.999907
I	O	O:0.999996
want	O	O:0.999815
to	O	O:0.999874
know	O	O:0.999961
are	O	O:0.999973
there	O	O:0.999556
any	O	O:0.999919
builtin	O	O:0.977590
functions	O	O:0.999972
that	O	O:0.999700
can	O	O:0.999855
do	O	O:0.999996
this	O	O:0.999930
in	O	O:0.999917
NumPy	O	O:0.997638
.	O	O:0.998675
	
The	O	O:0.999743
raw	O	O:0.998805
hardware	O	O:0.999893
data	O	O:0.999580
is	O	O:0.999973
32-bit	O	O:0.998639
signed	O	O:0.997068
integer	O	O:0.998718
,	O	O:0.999867
which	O	O:0.999486
becomes	O	O:0.999172
float	O	O:0.998506
when	O	O:0.998656
I	O	O:0.999989
convert	O	O:0.999779
it	O	O:0.999795
to	O	O:0.999965
normal	O	O:0.999180
physics	O	O:0.998911
units	O	O:0.991407
(	O	O:0.999994
m	O	O:0.999658
/	O	O:0.999979
s	O	O:0.999829
)	O	O:0.999768
	
Calculate	O	O:0.999228
subset	O	O:0.998421
of	O	O:0.999939
matrix	O	O:0.954656
multiplication	O	O:0.997631
	
EDIT	O	O:0.998057
:	O	O:0.999993
as	O	O:0.999965
to	O	O:0.999980
what	O	O:0.999919
DSM	O	O:0.999952
pointed	O	O:0.998790
out	O	O:0.999817
,	O	O:0.999965
OP	O	O:0.999746
is	O	O:0.999860
infact	O	O:0.999728
using	O	O:0.999899
a	O	O:0.999775
numpy	O	O:0.972085
array	O	O:0.995250
.	O	O:0.999176
	
As	O	O:0.999942
for	O	O:0.999886
the	O	O:0.999742
second	O	O:0.995067
question	O	O:0.999671
,	O	O:0.999986
`	O	O:0.999987
delete	O	O:0.962666
`	O	O:0.999980
has	O	O:0.999819
been	O	O:0.998842
suggested	O	O:0.999737
before	O	O:0.974713
:	O	O:0.999957
#CODE	O	O:0.999062
	
The	O	O:0.999959
remaining	O	O:0.999956
rows	O	O:0.999141
of	O	O:0.999983
the	O	O:0.999965
matrices	O	O:0.996909
are	O	O:0.999896
all	O	O:0.999805
linear	O	O:0.997816
combinations	O	O:0.962132
(	O	O:0.999969
in	O	O:0.999977
fact	O	O:0.999897
exact	O	O:0.999785
copies	O	O:0.996786
for	O	O:0.999932
almost	O	O:0.999206
all	O	O:0.999458
submatrices	O	O:0.997153
)	O	O:0.999888
of	O	O:0.999944
these	O	O:0.999815
rows	O	O:0.997338
.	O	O:0.999408
	
I'm	O	O:0.999874
printing	O	O:0.999419
the	O	O:0.999894
contents	O	O:0.999507
of	O	O:0.999987
an	O	O:0.999935
array	O	O:0.999965
with	O	O:0.999807
a	O	O:0.999638
header	O	O:0.991057
.	O	O:0.998993
	
Edit	O	O:0.998222
:	O	O:0.999985
If	O	O:0.999984
you	O	O:0.999968
need	O	O:0.999614
to	O	O:0.999990
save	O	O:0.999976
memory	O	O:0.999870
try	O	O:0.999893
radix	O	O:0.998177
sort	O	O:0.992587
,	O	O:0.999984
which	O	O:0.998128
is	O	O:0.999985
much	O	O:0.999101
faster	O	O:0.999829
on	O	O:0.999793
integers	O	O:0.999727
than	O	O:0.999662
quicksort	O	O:0.965357
(	O	O:0.999975
which	O	O:0.999023
I	O	O:0.999993
believe	O	O:0.998701
is	O	O:0.999960
what	O	O:0.999253
numpy	O	O:0.999841
uses	O	O:0.998965
)	O	O:0.999598
.	O	O:0.997967
	
The	O	O:0.999968
data	O	O:0.999085
was	O	O:0.999891
in	O	O:0.999982
following	O	O:0.999485
order	O	O:0.996023
(	O	O:0.999978
with	O	O:0.999846
sample	O	O:0.999598
data	O	O:0.999742
)	O	O:0.999907
#CODE	O	O:0.998284
	
definitely	O	O:0.998637
a	O	O:0.999987
good	O	O:0.998323
solution	O	O:0.999620
,	O	O:0.999990
nevertheless	O	O:0.999072
I'd	O	O:0.999986
like	O	O:0.999914
to	O	O:0.999909
solve	O	O:0.999961
this	O	O:0.999873
without	O	O:0.999834
a	O	O:0.999779
range	O	O:0.976379
,	O	O:0.999827
but	O	O:0.999661
the	O	O:0.999809
nearest	O	O:0.981210
neighbour	O	O:0.999092
.	O	O:0.999705
	
For	O	O:0.999913
my	O	O:0.999535
recent	O	O:0.994973
project	O	O:0.999237
that	O	O:0.999704
works	O	O:0.999908
on	O	O:0.999982
the	O	O:0.999983
order	O	O:0.999838
of	O	O:0.999837
20000x20000	O	O:0.998738
matrix	O	O:0.996641
entries	O	O:0.998428
,	O	O:0.999907
I	O	O:0.999989
will	O	O:0.999233
quickly	O	O:0.993142
and	O	O:0.999968
disastrously	O	O:0.998167
use	O	O:0.999660
up	O	O:0.999699
all	O	O:0.998993
of	O	O:0.999973
my	O	O:0.996038
workstation's	O	O:0.999775
8GB	O	O:0.999850
of	O	O:0.999794
RAM	O	O:0.997012
and	O	O:0.999926
more	O	O:0.991227
.	O	O:0.999022
	
Well	O	O:0.987353
,	O	O:0.999989
this	O	O:0.999420
might	O	O:0.999881
give	O	O:0.999777
a	O	O:0.999990
small	O	O:0.986615
speed-up	O	O:0.999853
just	O	O:0.997726
because	O	O:0.999646
it	O	O:0.999980
uses	O	O:0.999787
less	O	O:0.999370
memory	O	O:0.998281
.	O	O:0.999418
	
Try	O	O:0.999931
using	O	O:0.999101
`	O	O:0.999641
all	O	O:0.934598
`	O	O:0.999807
(	O	O:0.999601
edited	O	O:0.999903
to	O	O:0.999964
return	O	O:0.993189
`	O	O:0.999857
int	O	O:0.977754
`)	O	O:0.999273
:	O	O:0.999692
#CODE	O	O:0.999807
	
:	O	O:0.999951
I	O	O:0.999994
don't	O	O:0.999988
care	O	O:0.993177
if	O	O:0.999985
the	O	O:0.999839
statement	O	O:0.998391
modifies	O	O:0.999638
array	O	O:0.999697
or	O	O:0.999909
not	O	O:0.995453
.	O	O:0.999859
	
Rather	O	O:0.999859
than	O	O:0.999750
doing	O	O:0.999887
nans	O	O:0.998424
I	O	O:0.999953
put	O	O:0.999803
in	O	O:0.998609
-1	O	O:0.997234
and	O	O:0.999895
then	O	O:0.999584
filtered	O	O:0.999841
on	O	O:0.999920
match	O	O:0.995113
=	O	O:0.999994
b	O	O:0.998442
>	O	O:0.999966
=	O	O:0.999873
0	O	O:0.999838
.	O	O:0.999702
	
Removing	O	O:0.997332
duplicate	O	O:0.996954
columns	O	O:0.998737
and	O	O:0.999996
rows	O	O:0.999936
from	O	O:0.999699
a	O	O:0.999988
NumPy	O	O:0.999445
2D	O	O:0.999724
array	O	O:0.992364
	
arrays	O	O:0.999102
to	O	O:0.999940
extract	O	O:0.999900
arrays	O	O:0.999877
of	O	O:0.999955
the	O	O:0.999866
same	O	O:0.998450
	
as	O	O:0.999829
i	O	O:0.999992
have	O	O:0.999234
to	O	O:0.999987
test	O	O:0.998427
if	O	O:0.999943
it	O	O:0.999919
works	O	O:0.999474
or	O	O:0.999980
not	O	O:0.999688
so	O	O:0.999994
minimum	O	O:0.999212
i	O	O:0.999998
have	O	O:0.999828
to	O	O:0.999979
try	O	O:0.999994
with	O	O:0.999764
10-15	O	O:0.999399
different	O	O:0.999931
types	O	O:0.994346
of	O	O:0.999897
images	O	O:0.990389
.	O	O:0.999813
its	O	O:0.999582
not	O	O:0.999626
specific	O	O:0.998982
images	O	O:0.999805
it	O	O:0.999972
can	O	O:0.999896
be	O	O:0.999996
any	O	O:0.999959
image	O	O:0.999679
of	O	O:0.999676
people	O	O:0.952792
.	O	O:0.999751
	
So	O	O:0.999952
having	O	O:0.999755
a	O	O:0.999850
python	O	O:0.995519
loop	O	O:0.997828
,	O	O:0.999855
and	O	O:0.999752
having	O	O:0.999433
to	O	O:0.999883
sum	O	O:0.999828
all	O	O:0.999877
the	O	O:0.999915
results	O	O:0.994409
together	O	O:0.999904
,	O	O:0.999976
is	O	O:0.999985
taking	O	O:0.997592
390	O	O:0.999142
ms	O	O:0.997161
more	O	O:0.999710
than	O	O:0.999665
200	O	O:0.999482
times	O	O:0.999350
what	O	O:0.999347
it	O	O:0.999994
takes	O	O:0.999904
to	O	O:0.999990
solve	O	O:0.999998
each	O	O:0.999900
of	O	O:0.999988
the	O	O:0.999819
200	O	O:0.999046
systems	O	O:0.999854
that	O	O:0.999944
have	O	O:0.999962
to	O	O:0.999986
be	O	O:0.999990
solved	O	O:0.999137
.	O	O:0.999271
	
You	O	O:0.999706
could	O	O:0.999764
then	O	O:0.999847
sample	O	O:0.999879
pixels	O	O:0.999372
at	O	O:0.999995
the	O	O:0.999956
locations	O	O:0.998313
of	O	O:0.999969
the	O	O:0.999725
new	O	O:0.999512
points	O	O:0.989347
.	O	O:0.999799
	
I	O	O:0.999961
could	O	O:0.999813
use	O	O:0.999357
an	O	O:0.999850
idea	O	O:0.999167
about	O	O:0.999227
either	O	O:0.999326
how	O	O:0.999848
to	O	O:0.999936
fix	O	O:0.999970
the	O	O:0.999864
compilation	O	O:0.999411
errors	O	O:0.999938
or	O	O:0.999970
another	O	O:0.999736
way	O	O:0.999913
to	O	O:0.999842
convert	O	O:0.999927
my	O	O:0.999891
python	O	O:0.996408
objects	O	O:0.998341
.	O	O:0.999402
	
I	O	O:0.999946
tried	O	O:0.999912
every	O	O:0.998035
possible	O	O:0.999074
combination	O	O:0.997880
resulting	O	O:0.999929
with	O	O:0.999825
a	O	O:0.999938
0	O	O:0.999960
bytes	O	O:0.999498
file	O	O:0.999788
if	O	O:0.999970
the	O	O:0.999950
extension	O	O:0.993042
was	O	O:0.999922
mpg	O	O:0.998898
,	O	O:0.999877
and	O	O:0.999686
5.5kb	O	O:0.979654
if	O	O:0.999675
it	O	O:0.999917
was	O	O:0.999686
avi	O	O:0.999653
.	O	O:0.999567
	
Fortran	O	O:0.997127
90	O	O:0.999683
DOES	O	O:0.999469
support	O	O:0.995535
arbitrary	O	O:0.997399
lower	O	O:0.999038
bounds	O	O:0.920020
on	O	O:0.999626
arrays	O	O:0.998067
,	O	O:0.999926
and	O	O:0.999914
borrowing	O	O:0.999615
from	O	O:0.999558
that	O	O:0.999703
paradigm	O	O:0.999933
sounds	O	O:0.999893
quite	O	O:0.999890
plausible	O	O:0.998009
.	O	O:0.999704
	
I	O	O:0.999971
want	O	O:0.999819
to	O	O:0.999609
perform	O	O:0.999571
an	O	O:0.999950
operation	O	O:0.999960
on	O	O:0.999984
a	O	O:0.999991
that	O	O:0.999745
increments	O	O:0.999663
all	O	O:0.999602
the	O	O:0.999682
values	O	O:0.977286
inside	O	O:0.999265
it	O	O:0.999996
that	O	O:0.999782
are	O	O:0.999975
less	O	O:0.999926
than	O	O:0.999700
0	O	O:0.999871
and	O	O:0.999883
leaves	O	O:0.997005
the	O	O:0.999837
rest	O	O:0.995205
alone	O	O:0.999765
.	O	O:0.999966
for	O	O:0.999943
example	O	O:0.997921
,	O	O:0.999989
if	O	O:0.999937
I	O	O:0.999907
had	O	O:0.998508
:	O	O:0.999877
#CODE	O	O:0.999566
	
I	O	O:0.999988
like	O	O:0.999243
how	O	O:0.999864
this	O	O:0.999750
one	O	O:0.999951
uses	O	O:0.998836
straight	O	O:0.999313
python	O	O:0.996540
slicing	O	O:0.998275
and	O	O:0.999447
doesn't	O	O:0.999687
require	O	O:0.997291
numpy	O	O:0.988927
	
I	O	O:0.999945
select	O	O:0.999788
the	O	O:0.999865
first	O	O:0.999406
value	O	O:0.999925
using	O	O:0.999601
`	O	O:0.999689
ys	O	O:0.984953
[	O	O:0.999988
0	O	O:0.999907
]`	O	O:0.999729
.	O	O:0.998074
	
While	O	O:0.999415
waiting	O	O:0.998791
for	O	O:0.999688
the	O	O:0.999932
next	O	O:0.991676
buffer	O	O:0.999266
to	O	O:0.999987
fill	O	O:0.965579
,	O	O:0.999970
I'd	O	O:0.999995
like	O	O:0.999836
to	O	O:0.999963
process	O	O:0.996305
the	O	O:0.999980
most	O	O:0.997464
recent	O	O:0.998253
buffer	O	O:0.999089
with	O	O:0.999915
numpy	O	O:0.977439
and	O	O:0.999978
save	O	O:0.999806
the	O	O:0.999430
result	O	O:0.995091
.	O	O:0.999500
	
(	O	O:0.999968
They	O	O:0.999924
all	O	O:0.999842
do	O	O:0.999918
the	O	O:0.999962
same	O	O:0.999743
thing	O	O:0.999436
,	O	O:0.999978
in	O	O:0.999990
this	O	O:0.999834
case	O	O:0.999606
.	O	O:0.999916
)	O	O:0.999577
	
As	O	O:0.999979
of	O	O:0.999853
PIL	O	O:0.999736
1.1.6	O	O:0.993012
,	O	O:0.999959
the	O	O:0.999811
"	O	O:0.999504
proper	O	O:0.996610
"	O	O:0.999963
way	O	O:0.999710
to	O	O:0.999775
convert	O	O:0.998268
between	O	O:0.996419
images	O	O:0.997830
and	O	O:0.999851
numpy	O	O:0.995321
arrays	O	O:0.995302
is	O	O:0.999920
simply	O	O:0.991177
#CODE	O	O:0.999238
	
So	O	O:0.999969
first	O	O:0.999455
you	O	O:0.999950
need	O	O:0.999418
to	O	O:0.999987
construct	O	O:0.999967
an	O	O:0.999985
array	O	O:0.999941
that	O	O:0.999902
represents	O	O:0.999953
the	O	O:0.999992
rows	O	O:0.999019
you	O	O:0.999955
wish	O	O:0.999972
to	O	O:0.999944
select	O	O:0.999771
.	O	O:0.999831
	
Any	O	O:0.999792
ideas	O	O:0.999399
how	O	O:0.999764
to	O	O:0.999745
improve	O	O:0.999949
this	O	O:0.999698
?	O	O:0.999959
	
If	O	O:0.999991
this	O	O:0.999248
is	O	O:0.999987
the	O	O:0.999934
case	O	O:0.998557
,	O	O:0.999999
you	O	O:0.999970
can	O	O:0.999885
easily	O	O:0.999995
plot	O	O:0.999332
a	O	O:0.999984
known	O	O:0.998912
asymmetric	O	O:0.999020
shape	O	O:0.996005
and	O	O:0.999717
the	O	O:0.999901
plot	O	O:0.928710
will	O	O:0.999858
tell	O	O:0.999275
you	O	O:0.999970
everything	O	O:0.998443
.	O	O:0.999553
	
Apart	O	O:0.999819
from	O	O:0.999716
the	O	O:0.999780
compression	O	O:0.999908
part	O	O:0.997663
,	O	O:0.999999
this	O	O:0.999932
shouldn't	O	O:0.999877
be	O	O:0.999983
any	O	O:0.999596
slower	O	O:0.999707
than	O	O:0.996222
normal	O	O:0.939848
.	O	O:0.999656
	
Acquiring	O	O:0.996614
the	O	O:0.999660
Minimum	O	O:0.999342
array	O	O:0.999800
out	O	O:0.999943
of	O	O:0.999753
Multiple	O	O:0.997537
Arrays	O	O:0.987436
by	O	O:0.999900
order	O	O:0.999602
in	O	O:0.999714
Python	O	O:0.998592
	
first	O	O:0.998932
copy	O	O:0.923757
#CODE	O	O:0.999391
	
Getting	O	O:0.995933
all	O	O:0.998315
points	O	O:0.999211
where	O	O:0.995899
y=2	O	O:0.996045
.	O	O:0.999559
	
moving	O	O:0.989121
average	O	O:0.995441
function	O	O:0.998990
on	O	O:0.999972
numpy	O	O:0.998720
/	O	O:0.999958
scipy	O	O:0.998921
?	O	O:0.999971
	
for	O	O:0.999943
a	O	O:0.999672
N	O	O:0.999013
dimensional	O	O:0.985086
array	O	O:0.985163
:	O	O:0.999915
#CODE	O	O:0.999166
	
From	O	O:0.999029
looking	O	O:0.999162
at	O	O:0.999755
#URL	O	O:0.998979
it	O	O:0.999808
seems	O	O:0.999921
that	O	O:0.999716
it	O	O:0.999966
was	O	O:0.999970
originally	O	O:0.999690
required	O	O:0.999260
because	O	O:0.998926
indexing	O	O:0.999894
with	O	O:0.991168
`	O	O:0.999777
...	O	O:0.990996
	
In	O	O:0.999834
other	O	O:0.998808
words	O	O:0.999841
...	O	O:0.999696
yes	O	O:0.999979
you	O	O:0.999804
can	O	O:0.999919
trust	O	O:0.999955
it	O	O:0.999992
to	O	O:0.999983
be	O	O:0.999949
faster	O	O:0.999125
...	O	O:0.995066
but	O	O:0.998607
don't	O	O:0.999585
think	O	O:0.998605
python	O	O:0.991149
is	O	O:0.999996
that	O	O:0.999363
slow	O	O:0.999987
that	O	O:0.999881
you	O	O:0.999954
cannot	O	O:0.999820
do	O	O:0.999995
a	O	O:0.999988
for	O	O:0.999939
loop	O	O:0.999625
over	O	O:0.999341
3	O	O:0.999646
items	O	O:0.998774
without	O	O:0.999486
waiting	O	O:0.990698
for	O	O:0.999342
ages	O	O:0.997638
...	O	O:0.990033
	
And	O	O:0.999577
all	O	O:0.999807
that	O	O:0.999220
while	O	O:0.999419
you're	O	O:0.999831
getting	O	O:0.998934
lunch	O	O:0.997092
.	O	O:0.999638
	
If	O	O:0.999965
you	O	O:0.999786
do	O	O:0.999979
want	O	O:0.999956
to	O	O:0.999959
raise	O	O:0.999992
some	O	O:0.999971
sort	O	O:0.999521
of	O	O:0.999992
exception	O	O:0.999272
for	O	O:0.999941
invalid	O	O:0.999064
data	O	O:0.992602
(	O	O:0.999907
not	O	O:0.999946
type	O	O:0.999934
checking	O	O:0.999743
)	O	O:0.999712
,	O	O:0.999852
either	O	O:0.999930
let	O	O:0.998088
an	O	O:0.999928
existing	O	O:0.999271
exception	O	O:0.999689
propagate	O	O:0.999493
,	O	O:0.999982
or	O	O:0.999983
wrap	O	O:0.990581
it	O	O:0.999976
in	O	O:0.999996
your	O	O:0.999727
own	O	O:0.999609
exception	O	O:0.999935
type	O	O:0.999126
.	O	O:0.999811
	
casting	O	O:0.994942
are	O	O:0.999786
used	O	O:0.999496
in	O	O:0.999299
Numexpr	O	O:0.998942
,	O	O:0.999940
in	O	O:0.999868
contrast	O	O:0.999053
with	O	O:0.999902
NumPy	O	O:0.998994
,	O	O:0.999980
where	O	O:0.999415
array	O	O:0.999472
types	O	O:0.973995
	
I	O	O:0.999927
check	O	O:0.998954
mathexchange	O	O:0.980363
and	O	O:0.999563
while	O	O:0.998775
making	O	O:0.997544
the	O	O:0.999979
tags	O	O:0.994912
for	O	O:0.999940
the	O	O:0.999956
post	O	O:0.906381
,	O	O:0.999987
it	O	O:0.999980
didn't	O	O:0.999972
have	O	O:0.999888
any	O	O:0.999947
the	O	O:0.999968
ones	O	O:0.999108
that	O	O:0.999257
would	O	O:0.999991
seem	O	O:0.999810
relevant	O	O:0.999943
like	O	O:0.999720
scipy	O	O:0.999644
and	O	O:0.999912
numpy	O	O:0.997488
or	O	O:0.999953
even	O	O:0.997360
sparse	O	O:0.999404
.	O	O:0.999689
	
Any	O	O:0.999911
help	O	O:0.980624
would	O	O:0.999777
be	O	O:0.999949
appreciated	O	O:0.999023
.	O	O:0.997721
	
Say	O	O:0.999485
not	O	O:0.999764
that	O	O:0.999906
efficiency	O	O:0.999886
is	O	O:0.999989
a	O	O:0.999982
secondary	O	O:0.999767
priority	O	O:0.999035
;	O	O:0.999988
say	O	O:0.998211
instead	O	O:0.999958
that	O	O:0.999083
I	O	O:0.999997
want	O	O:0.999917
to	O	O:0.999686
perform	O	O:0.999801
bivariate	O	O:0.997651
optimization	O	O:0.999235
:	O	O:0.999998
pythonicity	O	O:0.999118
+	O	O:0.999950
efficiency	O	O:0.998041
(	O	O:0.999991
hence	O	O:0.999465
the	O	O:0.999981
post	O	O:0.994689
title	O	O:0.999495
)	O	O:0.999881
.	O	O:0.999146
	
Does	O	O:0.999077
numpy	O	O:0.999523
have	O	O:0.999717
any	O	O:0.999958
constructs	O	O:0.999652
to	O	O:0.999964
make	O	O:0.999986
this	O	O:0.999733
easier	O	O:0.999735
?	O	O:0.999889
	
If	O	O:0.999950
you	O	O:0.999945
view	O	O:0.992170
`	O	O:0.999988
P	O	O:0.996445
`	O	O:0.999998
as	O	O:0.999923
a	O	O:0.999977
rank-2	O	O:0.997893
tensor	O	O:0.999152
then	O	O:0.999647
only	O	O:0.999921
three	O	O:0.998922
options	O	O:0.999930
exist	O	O:0.993999
for	O	O:0.999979
the	O	O:0.999927
product	O	O:0.998554
of	O	O:0.999945
`	O	O:0.999943
P	O	O:0.990963
`	O	O:0.999988
with	O	O:0.996542
itself	O	O:0.999838
,	O	O:0.999992
1	O	O:0.999942
)	O	O:0.999872
either	O	O:0.999563
all	O	O:0.999451
the	O	O:0.999708
indexes	O	O:0.979563
cancel	O	O:0.998327
leaving	O	O:0.999790
you	O	O:0.999922
with	O	O:0.999940
a	O	O:0.999968
rank-0	O	O:0.998352
tensor	O	O:0.996410
(	O	O:0.999987
a	O	O:0.999964
scalar	O	O:0.997010
)	O	O:0.999868
,	O	O:0.999920
2	O	O:0.999982
)	O	O:0.999771
1	O	O:0.999852
set	O	O:0.999098
of	O	O:0.999942
indexes	O	O:0.983865
cancels	O	O:0.998396
and	O	O:0.999979
you	O	O:0.999808
are	O	O:0.999832
left	O	O:0.998777
with	O	O:0.999880
a	O	O:0.999938
rank-2	O	O:0.998645
tensor	O	O:0.994661
(	O	O:0.999970
a	O	O:0.999941
matrix	O	O:0.959923
)	O	O:0.999772
,	O	O:0.999958
or	O	O:0.999981
3	O	O:0.999273
)	O	O:0.999996
none	O	O:0.997518
of	O	O:0.999998
them	O	O:0.998708
cancel	O	O:0.983972
and	O	O:0.999935
you're	O	O:0.999596
left	O	O:0.994609
with	O	O:0.999862
a	O	O:0.999810
rank-4	O	O:0.996871
tensor	O	O:0.991374
.	O	O:0.999260
	
At	O	O:0.999882
the	O	O:0.999895
moment	O	O:0.996817
I	O	O:0.999998
made	O	O:0.999938
a	O	O:0.999956
custom	O	O:0.997834
iterator	O	O:0.999754
class	O	O:0.999671
that	O	O:0.999802
builds	O	O:0.999790
a	O	O:0.999997
list	O	O:0.989762
of	O	O:0.999923
lists	O	O:0.964647
.	O	O:0.999747
	
This	O	O:0.999792
basically	O	O:0.999936
sees	O	O:0.999525
whether	O	O:0.999920
two	O	O:0.999775
circles	O	O:0.992955
(	O	O:0.999992
with	O	O:0.999852
coordinates	O	O:0.997464
that	O	O:0.999954
correspond	O	O:0.999956
to	O	O:0.999947
the	O	O:0.999986
indices	O	O:0.991799
n	O	O:0.998325
and	O	O:0.999988
m	O	O:0.999789
)	O	O:0.999368
connect	O	O:0.970398
.	O	O:0.999815
	
It	O	O:0.999662
would	O	O:0.999822
mean	O	O:0.993517
Gaussian	O	O:0.999970
quadrature	O	O:0.999886
using	O	O:0.999832
points	O	O:0.994621
along	O	O:0.998497
the	O	O:0.999838
line	O	O:0.999557
that	O	O:0.999795
are	O	O:0.999974
easily	O	O:0.999612
evaluated	O	O:0.998475
.	O	O:0.999391
	
I	O	O:0.999970
see	O	O:0.999946
one	O	O:0.999648
potential	O	O:0.995831
problem	O	O:0.997177
-	O	O:0.999997
beta	O	O:0.708633
is	O	O:0.999988
defined	O	O:0.997364
as	O	O:0.999925
1-dimensional	O	O:0.977326
,	O	O:0.999921
but	O	O:0.999829
its	O	O:0.999872
value	O	O:0.998772
is	O	O:0.999991
given	O	O:0.997007
as	O	O:0.999974
2-dimensional	O	O:0.990430
(	O	O:0.999993
dimensions	O	O:0.998719
of	O	O:0.999996
size	O	O:0.999700
1	O	O:0.999987
still	O	O:0.999752
count	O	O:0.998656
as	O	O:0.999990
dimensions	O	O:0.993808
)	O	O:0.999631
	
Can	O	O:0.999775
you	O	O:0.999881
provide	O	O:0.999243
an	O	O:0.999986
algorithm	O	O:0.999812
for	O	O:0.999869
computing	O	O:0.999768
them	O	O:0.999225
based	O	O:0.999550
on	O	O:0.999906
block	O	O:0.999685
size	O	O:0.999861
?	O	O:0.999967
	
If	O	O:0.999883
`	O	O:0.999938
X	O	O:0.998215
`	O	O:0.999969
is	O	O:0.999975
your	O	O:0.999828
array	O	O:0.998661
,	O	O:0.999940
#CODE	O	O:0.998753
	
You	O	O:0.999814
could	O	O:0.999795
cast	O	O:0.999583
the	O	O:0.999992
array	O	O:0.999471
to	O	O:0.999868
a	O	O:0.999996
list	O	O:0.949886
:	O	O:0.999968
#CODE	O	O:0.998427
	
But	O	O:0.999820
if	O	O:0.999942
you	O	O:0.999658
for	O	O:0.999905
example	O	O:0.999903
self	O	O:0.999003
compiled	O	O:0.999975
from	O	O:0.999690
the	O	O:0.999898
development	O	O:0.999749
version	O	O:0.999206
an	O	O:0.999964
update	O	O:0.999175
may	O	O:0.998862
fix	O	O:0.999926
most	O	O:0.999263
of	O	O:0.999931
it	O	O:0.999261
.	O	O:0.999800
	
In	O	O:0.999903
VTK	O	O:0.999899
I	O	O:0.999988
am	O	O:0.999998
able	O	O:0.999776
to	O	O:0.999980
use	O	O:0.999988
the	O	O:0.999846
following	O	O:0.999113
snippet	O	O:0.999531
to	O	O:0.999990
save	O	O:0.999983
the	O	O:0.999890
render	O	O:0.991918
window	O	O:0.999793
as	O	O:0.999950
an	O	O:0.999885
image	O	O:0.998861
.	O	O:0.999476
	
In	O	O:0.999904
other	O	O:0.999783
words	O	O:0.999649
,	O	O:0.999990
the	O	O:0.999980
4th	O	O:0.999245
row	O	O:0.999707
in	O	O:0.999963
A_sorted	O	O:0.998473
was	O	O:0.999863
the	O	O:0.999958
1st	O	O:0.999603
row	O	O:0.999784
in	O	O:0.999948
the	O	O:0.999969
original	O	O:0.997347
array	O	O:0.999658
,	O	O:0.999984
A	O	O:0.999884
,	O	O:0.999972
etc	O	O:0.999411
.	O	O:0.999537
	
Add	O	O:0.999800
a	O	O:0.999788
`	O	O:0.999725
return	O	O:0.802956
`	O	O:0.999958
statement	O	O:0.998879
at	O	O:0.999994
the	O	O:0.999956
end	O	O:0.997766
of	O	O:0.999562
the	O	O:0.998444
method	O	O:0.996432
.	O	O:0.999434
	
However	O	O:0.998545
,	O	O:0.999971
with	O	O:0.999701
different	O	O:0.998673
input	O	O:0.999842
sizes	O	O:0.998628
,	O	O:0.999991
using	O	O:0.999842
fft's	O	O:0.998469
to	O	O:0.999937
do	O	O:0.999997
a	O	O:0.999995
convolution	O	O:0.998984
can	O	O:0.999921
be	O	O:0.999998
considerably	O	O:0.998242
faster	O	O:0.998574
(	O	O:0.999968
Though	O	O:0.999241
I	O	O:0.999981
can't	O	O:0.999974
seem	O	O:0.999859
to	O	O:0.999996
come	O	O:0.999959
up	O	O:0.999990
with	O	O:0.999833
a	O	O:0.999981
good	O	O:0.999709
example	O	O:0.999680
,	O	O:0.999993
at	O	O:0.999962
the	O	O:0.998096
moment	O	O:0.998445
...	O	O:0.996141
)	O	O:0.999497
.	O	O:0.998906
	
That	O	O:0.998817
is	O	O:0.999994
a	O	O:0.999893
shallow	O	O:0.997751
copy	O	O:0.934356
...	O	O:0.997640
	
@USER	O	O:0.999519
The	O	O:0.999894
solutions	O	O:0.999885
there	O	O:0.999196
all	O	O:0.999963
make	O	O:0.999572
use	O	O:0.999807
of	O	O:0.999803
the	O	O:0.999419
fact	O	O:0.999882
that	O	O:0.999963
only	O	O:0.999950
a	O	O:0.999985
3x3	O	O:0.999452
sliding	O	O:0.931180
window	O	O:0.992732
is	O	O:0.999818
needed	O	O:0.985056
,	O	O:0.999981
but	O	O:0.999815
I	O	O:0.999992
need	O	O:0.999180
something	O	O:0.999440
that	O	O:0.999241
works	O	O:0.999946
for	O	O:0.999960
all	O	O:0.999868
sizes	O	O:0.998998
of	O	O:0.999908
templates	O	O:0.994398
.	O	O:0.999824
	
A	O	O:0.999264
masked	O	O:0.999329
array	O	O:0.994982
is	O	O:0.999783
useful	O	O:0.996987
here	O	O:0.989470
:	O	O:0.999911
#CODE	O	O:0.999503
	
Second	O	O:0.998119
I	O	O:0.999757
would	O	O:0.999923
like	O	O:0.999324
it	O	O:0.999989
to	O	O:0.999950
be	O	O:0.999996
easily	O	O:0.999866
expandable	O	O:0.999376
,	O	O:0.999999
that	O	O:0.999943
I	O	O:0.999995
can	O	O:0.999913
add	O	O:0.999970
new	O	O:0.999228
functions	O	O:0.999367
easily	O	O:0.998460
.	O	O:0.999497
	
If	O	O:0.999891
i	O	O:0.999989
have	O	O:0.999690
two	O	O:0.999897
variables	O	O:0.999634
-	O	O:0.999984
where	O	O:0.999940
they	O	O:0.999718
either	O	O:0.999846
are	O	O:0.999879
a	O	O:0.999940
1d	O	O:0.999953
array	O	O:0.999519
of	O	O:0.999974
values	O	O:0.994217
length	O	O:0.999175
n	O	O:0.998340
,	O	O:0.999981
or	O	O:0.999991
are	O	O:0.999839
a	O	O:0.999990
single	O	O:0.999031
value	O	O:0.999601
,	O	O:0.999981
how	O	O:0.999896
do	O	O:0.999913
i	O	O:0.999998
loop	O	O:0.999612
through	O	O:0.999985
them	O	O:0.999380
so	O	O:0.999996
that	O	O:0.999770
I	O	O:0.999999
get	O	O:0.999941
n	O	O:0.997491
values	O	O:0.997974
returned	O	O:0.999635
.	O	O:0.999393
	
I	O	O:0.999965
think	O	O:0.999273
masked	O	O:0.985005
arrays	O	O:0.999469
have	O	O:0.999326
been	O	O:0.998486
in	O	O:0.999997
numpy	O	O:0.998903
for	O	O:0.999985
a	O	O:0.999949
few	O	O:0.999355
years	O	O:0.997264
now	O	O:0.999045
.	O	O:0.999554
	
I	O	O:0.999990
have	O	O:0.999802
an	O	O:0.999917
array	O	O:0.999667
defined	O	O:0.997705
in	O	O:0.999978
this	O	O:0.999822
way	O	O:0.999483
(	O	O:0.999981
extracting	O	O:0.999774
the	O	O:0.999914
third	O	O:0.999792
column	O	O:0.999893
of	O	O:0.999988
a	O	O:0.999952
dataset	O	O:0.976473
):	O	O:0.999860
#CODE	O	O:0.998012
	
I	O	O:0.999948
wasn't	O	O:0.999980
aware	O	O:0.999118
of	O	O:0.999961
the	O	O:0.999485
option	O	O:0.999813
of	O	O:0.999979
using	O	O:0.998797
`	O	O:0.999940
data	O	O:0.954116
[	O	O:0.999997
list	O	O:0.998245
]`	O	O:0.999982
to	O	O:0.998740
select	O	O:0.999985
multiple	O	O:0.998968
columns	O	O:0.997721
.	O	O:0.999861
	
Beware	O	O:0.999905
that	O	O:0.999674
if	O	O:0.999974
the	O	O:0.999995
type	O	O:0.999321
of	O	O:0.999969
the	O	O:0.999760
output	O	O:0.999871
array	O	O:0.996223
is	O	O:0.999711
	
Any	O	O:0.999771
ideas	O	O:0.999603
how	O	O:0.999672
I	O	O:0.999958
would	O	O:0.999738
do	O	O:0.999965
this	O	O:0.999957
calculation	O	O:0.999585
in	O	O:0.999993
a	O	O:0.999948
simpler	O	O:0.998943
way	O	O:0.999345
?	O	O:0.999882
	
Those	O	O:0.999912
take	O	O:0.999471
up	O	O:0.999933
about	O	O:0.999700
15MB	O	O:0.997866
of	O	O:0.999900
space	O	O:0.994700
which	O	O:0.999603
,	O	O:0.999978
considering	O	O:0.999947
that	O	O:0.998994
I	O	O:0.999996
get	O	O:0.999904
about	O	O:0.998284
1000	O	O:0.993918
result	O	O:0.998928
files	O	O:0.999171
in	O	O:0.999982
a	O	O:0.999973
series	O	O:0.995951
,	O	O:0.999907
is	O	O:0.999988
unacceptable	O	O:0.998266
to	O	O:0.999975
save	O	O:0.999767
.	O	O:0.999817
	
I'm	O	O:0.999831
trying	O	O:0.999424
to	O	O:0.999844
implement	O	O:0.999969
a	O	O:0.999979
logic	O	O:0.998309
where	O	O:0.998125
I'm	O	O:0.999838
trying	O	O:0.999638
to	O	O:0.999790
subtract	O	O:0.999941
each	O	O:0.999777
element	O	O:0.999949
of	O	O:0.999962
an	O	O:0.999924
array	O	O:0.999902
from	O	O:0.999930
every	O	O:0.999084
other	O	O:0.999992
element	O	O:0.999739
of	O	O:0.999942
the	O	O:0.999770
array	O	O:0.998225
and	O	O:0.999959
then	O	O:0.999612
find	O	O:0.999873
the	O	O:0.999962
minimum	O	O:0.999563
difference	O	O:0.999915
of	O	O:0.999985
the	O	O:0.999667
result	O	O:0.996470
.	O	O:0.999515
	
My	O	O:0.999900
final	O	O:0.994927
matrix	O	O:0.979055
should	O	O:0.999662
have	O	O:0.999705
5416	O	O:0.999927
rows	O	O:0.999802
with	O	O:0.999775
500	O	O:0.999596
000	O	O:0.998932
column	O	O:0.999170
each	O	O:0.997628
.	O	O:0.999762
	
I	O	O:0.999973
am	O	O:0.999991
attempting	O	O:0.999280
to	O	O:0.999950
process	O	O:0.999778
data	O	O:0.999975
saved	O	O:0.999949
to	O	O:0.999934
CSV	O	O:0.999994
that	O	O:0.999778
may	O	O:0.999960
have	O	O:0.999651
missing	O	O:0.999025
values	O	O:0.998627
in	O	O:0.999959
an	O	O:0.999961
unknown	O	O:0.998686
number	O	O:0.999821
of	O	O:0.999846
columns	O	O:0.996804
(	O	O:0.999998
up	O	O:0.999953
to	O	O:0.999880
around	O	O:0.999950
30	O	O:0.999533
)	O	O:0.999272
.	O	O:0.998680
	
Actually	O	O:0.999441
the	O	O:0.999903
surprise	O	O:0.997254
is	O	O:0.999981
still	O	O:0.997704
hidden	O	O:0.999702
in	O	O:0.999976
a	O	O:0.999955
way	O	O:0.999264
,	O	O:0.999946
because	O	O:0.999216
in	O	O:0.999986
your	O	O:0.999898
examples	O	O:0.999629
`	O	O:0.999983
a	O	O:0.999651
[	O	O:0.999983
indices	O	O:0.998395
]`	O	O:0.999820
is	O	O:0.999893
the	O	O:0.999992
same	O	O:0.999866
as	O	O:0.999973
`	O	O:0.999992
a	O	O:0.999795
[	O	O:0.999959
indices	O	O:0.997646
[	O	O:0.999991
0	O	O:0.999940
]	O	O:0.999877
,	O	O:0.999749
indicies	O	O:0.999253
[	O	O:0.999946
1	O	O:0.999700
]]`	O	O:0.999767
but	O	O:0.999450
`	O	O:0.999971
a	O	O:0.999015
[	O	O:0.999980
indicies	O	O:0.996785
,	O	O:0.999987
:]	O	O:0.999570
`	O	O:0.999456
is	O	O:0.999908
`	O	O:0.999988
a	O	O:0.999413
[(	O	O:0.999933
indicies	O	O:0.997044
[	O	O:0.999992
0	O	O:0.999928
]	O	O:0.999867
,	O	O:0.999748
indicies	O	O:0.999459
[	O	O:0.999980
1	O	O:0.999951
])	O	O:0.999845
,	O	O:0.999929
:]	O	O:0.999655
`	O	O:0.999252
which	O	O:0.992271
is	O	O:0.999995
not	O	O:0.999738
a	O	O:0.999986
big	O	O:0.998605
surprise	O	O:0.999746
that	O	O:0.999319
it	O	O:0.999924
is	O	O:0.999978
different	O	O:0.996346
.	O	O:0.999390
	
Slice	O	O:0.999099
numpy	O	O:0.998527
array	O	O:0.997367
wth	O	O:0.999988
list	O	O:0.995610
of	O	O:0.999930
wanted	O	O:0.998489
rows	O	O:0.995183
	
Here	O	O:0.998390
is	O	O:0.999987
a	O	O:0.999958
slightly	O	O:0.999892
more	O	O:0.998787
complex	O	O:0.992085
version	O	O:0.999572
that	O	O:0.999803
always	O	O:0.999943
returns	O	O:0.999932
a	O	O:0.999939
view	O	O:0.994799
into	O	O:0.999645
the	O	O:0.999988
original	O	O:0.988697
array	O	O:0.999311
(	O	O:0.999996
of	O	O:0.999966
course	O	O:0.998202
provided	O	O:0.999958
that	O	O:0.999774
you	O	O:0.999939
don't	O	O:0.999922
do	O	O:0.999984
any	O	O:0.999668
advanced	O	O:0.999379
indexing	O	O:0.994373
;	O	O:0.999990
this	O	O:0.997425
should	O	O:0.999778
be	O	O:0.999929
guaranteed	O	O:0.999822
by	O	O:0.999980
your	O	O:0.999783
specification	O	O:0.999790
of	O	O:0.999933
valid	O	O:0.995555
indices	O	O:0.947574
):	O	O:0.999903
#CODE	O	O:0.998071
	
If	O	O:0.999948
the	O	O:0.999929
array	O	O:0.991991
is	O	O:0.999947
one-dimensional	O	O:0.985590
,	O	O:0.999997
this	O	O:0.999861
means	O	O:0.999233
it	O	O:0.999962
has	O	O:0.999934
no	O	O:0.999677
effect	O	O:0.999195
.	O	O:0.999741
	
The	O	O:0.999868
problem	O	O:0.999177
with	O	O:0.999860
using	O	O:0.997716
`	O	O:0.999901
view	O	B-API:0.502205
`	O	O:0.999949
,	O	O:0.999833
however	O	O:0.999953
,	O	O:0.999857
is	O	O:0.999998
that	O	O:0.999688
a	O	O:0.999988
32-bit	O	O:0.997003
integer	O	O:0.998265
becomes	O	O:0.998605
viewed	O	O:0.999504
as	O	O:0.999912
4	O	O:0.999689
8-b	O	O:0.999783
it	O	O:0.999822
integers	O	O:0.998827
,	O	O:0.999939
and	O	O:0.999784
we	O	O:0.999991
only	O	O:0.999715
care	O	O:0.999262
about	O	O:0.999967
the	O	O:0.999905
value	O	O:0.998522
in	O	O:0.999945
the	O	O:0.999982
last	O	O:0.998323
8-b	O	O:0.999927
its	O	O:0.999179
.	O	O:0.999841
	
So	O	O:0.999979
this	O	O:0.999523
won't	O	O:0.999906
solve	O	O:0.999312
OP's	O	O:0.999563
question	O	O:0.997298
(	O	O:0.999973
unless	O	O:0.999338
his	O	O:0.999909
nD	O	O:0.999780
is	O	O:0.999971
2	O	O:0.999959
or	O	O:0.999962
3	O	O:0.999365
)	O	O:0.999808
.	O	O:0.998715
	
Note	O	O:0.992881
:	O	O:0.999995
this	O	O:0.999692
was	O	O:0.999987
meant	O	O:0.999843
as	O	O:0.999987
a	O	O:0.999810
comment	O	O:0.983935
,	O	O:0.999985
not	O	O:0.999754
an	O	O:0.999299
answer	O	O:0.999765
...	O	O:0.999354
just	O	O:0.994713
needed	O	O:0.999901
more	O	O:0.999780
room	O	O:0.999826
to	O	O:0.999980
put	O	O:0.999955
in	O	O:0.999964
the	O	O:0.999940
example	O	O:0.998430
above	O	O:0.999163
.	O	O:0.999791
	
If	O	O:0.999868
I	O	O:0.999971
wanted	O	O:0.999876
to	O	O:0.999425
change	O	O:0.999875
the	O	O:0.999842
data	O	O:0.999940
type	O	O:0.999954
of	O	O:0.999997
a	O	O:0.999984
numpy	O	O:0.998273
array	O	O:0.999620
permanently	O	O:0.998825
,	O	O:0.999886
is	O	O:0.999970
reassignment	O	O:0.998205
the	O	O:0.999969
best	O	O:0.998861
way	O	O:0.999825
?	O	O:0.999920
	
The	O	O:0.999714
shifted	O	O:0.997143
shm-allocated	O	O:0.999568
array	O	O:0.993421
is	O	O:0.999864
indeed	O	O:0.999183
accessible	O	O:0.999956
from	O	O:0.999262
other	O	O:0.999804
processes	O	O:0.999036
.	O	O:0.999718
	
The	O	O:0.999770
second	O	O:0.998415
solution	O	O:0.999799
you	O	O:0.999946
propose	O	O:0.997755
is	O	O:0.999976
better	O	O:0.999886
from	O	O:0.999933
that	O	O:0.999727
point	O	O:0.999972
of	O	O:0.999969
view	O	O:0.936302
.	O	O:0.999820
	
It	O	O:0.999899
checks	O	O:0.998575
for	O	O:0.999944
nans	O	O:0.992660
and	O	O:0.999787
empty	O	O:0.999161
input	O	O:0.998442
strings	O	O:0.994901
.	O	O:0.999109
	
The	O	O:0.999937
ability	O	O:0.999178
to	O	O:0.999885
extract	O	O:0.999644
columns	O	O:0.998758
and	O	O:0.999989
rows	O	O:0.999776
by	O	O:0.999770
header	O	O:0.999728
name	O	O:0.998530
(	O	O:0.999991
as	O	O:0.999989
in	O	O:0.999950
the	O	O:0.999949
above	O	O:0.999762
example	O	O:0.997847
)	O	O:0.999755
	
With	O	O:0.997017
Python	O	O:0.999138
2.6.5	O	O:0.998403
or	O	O:0.999734
Python	O	O:0.997374
2.7	O	O:0.999515
,	O	O:0.999821
and	O	O:0.999818
Numpy	O	O:0.997627
1.5.0	O	O:0.995482
,	O	O:0.999945
I	O	O:0.999979
don't	O	O:0.999833
get	O	O:0.999566
any	O	O:0.999760
error	O	O:0.998389
.	O	O:0.998972
	
Returns	O	O:0.999566
a	O	O:0.999971
boolean	O	O:0.997029
array	O	O:0.999585
the	O	O:0.999973
same	O	O:0.999114
length	O	O:0.999759
as	O	O:0.999986
`	O	O:0.999895
ar1	O	O:0.986880
`	O	O:0.999994
that	O	O:0.993093
is	O	O:0.999994
True	O	O:0.981016
	
If	O	O:0.999949
the	O	O:0.999839
objects	O	O:0.996954
in	O	O:0.999960
the	O	O:0.999981
array	O	O:0.997999
are	O	O:0.999870
not	O	O:0.999539
fixed	O	O:0.999938
size	O	O:0.999282
(	O	O:0.999998
such	O	O:0.999949
as	O	O:0.999997
your	O	O:0.999134
MultiEvent	O	O:0.987441
)	O	O:0.999865
the	O	O:0.999826
operations	O	O:0.999638
can	O	O:0.999129
become	O	O:0.999986
much	O	O:0.999624
slower	O	O:0.999304
.	O	O:0.999016
	
@USER	O	O:0.996550
:	O	O:0.999973
True	O	O:0.998728
the	O	O:0.999992
code	O	O:0.997654
I	O	O:0.999999
gave	O	O:0.999427
would	O	O:0.999675
not	O	O:0.999916
be	O	O:0.999991
all	O	O:0.999673
the	O	O:0.999765
efficient	O	O:0.980335
	
You	O	O:0.999910
print	O	O:0.966216
`	O	O:0.999953
Length	O	O:0.999683
of	O	O:0.999960
together	O	O:0.999631
2708000000	O	O:0.998018
`	O	O:0.999820
-	O	O:0.999953
where	O	O:0.998087
is	O	O:0.999997
that	O	O:0.998106
`	O	O:0.999992
print	O	O:0.913351
`	O	O:0.999970
statement	O	O:0.995783
in	O	O:0.999996
your	O	O:0.999883
code	O	O:0.999517
?	O	O:0.999982
	
Is	O	O:0.999991
there	O	O:0.999779
a	O	O:0.999980
way	O	O:0.999591
to	O	O:0.999971
copy	O	O:0.998825
just	O	O:0.999853
the	O	O:0.999987
reference	O	O:0.999548
to	O	O:0.999976
b	O	O:0.999994
,	O	O:0.999994
so	O	O:0.999995
that	O	O:0.999966
when	O	O:0.999813
I	O	O:0.999998
change	O	O:0.999894
b	O	O:0.990473
,	O	O:0.999973
the	O	O:0.999891
change	O	O:0.972495
is	O	O:0.999884
reflected	O	O:0.999627
in	O	O:0.999927
`	O	O:0.999953
a	O	O:0.999867
[	O	O:0.999988
'	O	O:0.999937
B	O	O:0.999732
']	O	O:0.999860
[	O	O:0.999825
i	O	O:0.999979
]`	O	O:0.999878
?	O	O:0.999749
	
If	O	O:0.999864
the	O	O:0.999743
matrix	O	O:0.815289
is	O	O:0.999967
not	O	O:0.999730
symmetric	O	O:0.999937
be	O	O:0.999978
careful	O	O:0.998479
about	O	O:0.999881
the	O	O:0.999377
order	O	O:0.998352
in	O	O:0.999882
dot	O	O:0.999382
.	O	O:0.999840
	
So	O	O:0.999958
I	O	O:0.999981
changed	O	O:0.999812
the	O	O:0.998916
"	O	O:0.999824
array	O	O:0.998920
"	O	O:0.999932
to	O	O:0.999620
matrix	O	O:0.994032
.	O	O:0.999448
	
config	O	O:0.995710
paths	O	O:0.993163
,	O	O:0.999964
cflags	O	O:0.791694
.	O	O:0.999530
	
gnibbler	O	O:0.994685
:	O	O:0.999985
That	O	O:0.999943
completely	O	O:0.999883
misses	O	O:0.999801
the	O	O:0.999990
point	O	O:0.999422
of	O	O:0.999977
the	O	O:0.999904
algorithm	O	O:0.998518
,	O	O:0.999996
this	O	O:0.999848
is	O	O:0.999994
a	O	O:0.999948
simple	O	O:0.998502
example	O	O:0.995772
,	O	O:0.999996
what	O	O:0.999775
I	O	O:0.999994
am	O	O:0.999998
doing	O	O:0.987005
is	O	O:0.999944
Gauss-Seidel	O	O:0.972918
iteration	O	O:0.999517
,	O	O:0.999855
which	O	O:0.997856
infers	O	O:0.998832
information	O	O:0.999842
about	O	O:0.999904
a	O	O:0.999727
location	O	O:0.999162
in	O	O:0.999945
a	O	O:0.999851
matrix	O	O:0.988362
by	O	O:0.999948
using	O	O:0.999827
data	O	O:0.999510
that	O	O:0.999188
has	O	O:0.999968
already	O	O:0.999247
been	O	O:0.992151
inferred	O	O:0.999753
in	O	O:0.999931
previous	O	O:0.998589
entries	O	O:0.996747
.	O	O:0.999602
	
how	O	O:0.999807
do	O	O:0.999955
i	O	O:0.999996
find	O	O:0.999639
the	O	O:0.999917
smallest	O	O:0.999728
then	O	O:0.999240
if	O	O:0.999999
this	O	O:0.999977
gives	O	O:0.999608
me	O	O:0.999987
the	O	O:0.999914
n	O	O:0.998797
greatest	O	O:0.999245
values	O	O:0.999551
?	O	O:0.999959
	
@USER	O	O:0.997550
:	O	O:0.999998
you	O	O:0.999948
can	O	O:0.999973
wrap	O	O:0.999892
the	O	O:0.999978
insides	O	O:0.999517
the	O	O:0.999879
prange	O	B-API:0.646779
loop	O	O:0.999362
in	O	O:0.999745
`	O	O:0.999962
with	O	O:0.998034
nogil	O	B-API:0.863977
:	O	O:0.999986
`	O	O:0.999994
to	O	O:0.999909
use	O	O:0.999996
any	O	O:0.998866
Python	O	O:0.998689
constructs	O	O:0.997424
.	O	O:0.999675
	
For	O	O:0.999959
each	O	O:0.997446
`	O	O:0.999967
Xi	O	O:0.999264
`	O	O:0.999967
greater	O	O:0.999838
than	O	O:0.999566
`	O	O:0.999896
lower_limit_X	O	O:0.932813
`	O	O:0.999935
and	O	O:0.999680
less	O	O:0.999969
than	O	O:0.998659
`	O	O:0.999931
upper_limit_X	O	O:0.892935
`	O	O:0.999979
,	O	O:0.999893
I	O	O:0.999982
would	O	O:0.999972
like	O	O:0.999722
to	O	O:0.999990
get	O	O:0.999965
the	O	O:0.999962
number	O	O:0.999485
of	O	O:0.999854
`	O	O:0.999970
Yi	O	O:0.999410
`'	O	O:0.999937
s	O	O:0.999971
that	O	O:0.999938
are	O	O:0.999921
greater	O	O:0.999931
than	O	O:0.997222
`	O	O:0.999886
lower_limit_Y	O	O:0.927106
`	O	O:0.999934
and	O	O:0.999685
less	O	O:0.999969
than	O	O:0.998559
`	O	O:0.999928
upper_limit_Y	O	O:0.859549
`	O	O:0.999883
.	O	O:0.998119
	
and	O	O:0.999684
find	O	O:0.999406
the	O	O:0.999778
roots	O	O:0.995054
?	O	O:0.999954
	
I'd	O	O:0.999959
like	O	O:0.999518
to	O	O:0.999780
generalize	O	O:0.999950
this	O	O:0.999930
to	O	O:0.999979
an	O	O:0.999990
ellipsoid	O	O:0.999360
,	O	O:0.999997
that	O	O:0.999808
could	O	O:0.999662
ideally	O	O:0.999970
have	O	O:0.999900
any	O	O:0.999616
rotation	O	O:0.999003
.	O	O:0.999469
	
Is	O	O:0.999985
there	O	O:0.999736
any	O	O:0.999902
way	O	O:0.999835
to	O	O:0.999804
integrate	O	O:0.998134
the	O	O:0.999941
entire	O	O:0.999447
array	O	O:0.999662
at	O	O:0.999983
once	O	O:0.999698
,	O	O:0.999992
or	O	O:0.999996
do	O	O:0.999496
I	O	O:0.999999
need	O	O:0.999844
to	O	O:0.999788
integrate	O	O:0.996841
element-by-element	O	O:0.999796
?	O	O:0.999954
	
I	O	O:0.999987
need	O	O:0.999754
to	O	O:0.999797
sum	O	O:0.999355
	
with	O	O:0.998978
'	O	O:0.999855
f	O	O:0.997562
'	O	O:0.999752
and	O	O:0.999842
'	O	O:0.999854
F	O	O:0.998397
'	O	O:0.999856
,	O	O:0.999899
or	O	O:0.999956
before	O	O:0.997048
and	O	O:0.999861
after	O	O:0.999492
the	O	O:0.999530
decimal	O	O:0.969163
point	O	O:0.999619
for	O	O:0.999979
a	O	O:0.999964
floating	O	O:0.971440
	
You	O	O:0.999908
can	O	O:0.999395
write	O	O:0.999980
that	O	O:0.999951
as	O	O:0.999992
a	O	O:0.999821
matrix	O	O:0.755767
:	O	O:0.999878
#CODE	O	O:0.999271
	
In	O	O:0.999947
fact	O	O:0.999759
,	O	O:0.999993
if	O	O:0.999984
you	O	O:0.999758
use	O	O:0.999901
tuples	O	O:0.997446
as	O	O:0.999851
Justin	O	O:0.999105
suggested	O	O:0.999148
and	O	O:0.999873
iterate	O	O:0.999778
directly	O	O:0.999830
over	O	O:0.999971
the	O	O:0.999994
rows	O	O:0.999591
of	O	O:0.999987
the	O	O:0.999944
array	O	O:0.998801
(	O	O:0.999936
`	O	O:0.999981
for	O	O:0.999757
row	O	O:0.999909
in	O	O:0.999958
data	O	O:0.999611
:	O	O:0.999982
`)	O	O:0.999886
,	O	O:0.999963
it's	O	O:0.999992
actually	O	O:0.998721
faster	O	O:0.999951
than	O	O:0.997621
my	O	O:0.997871
method	O	O:0.997500
below	O	O:0.997881
.	O	O:0.999458
	
Using	O	O:0.999404
the	O	O:0.998332
`	O	O:0.999914
ctypedef	O	O:0.855052
`	O	O:0.999985
keyword	O	O:0.995976
in	O	O:0.999886
Cython	O	O:0.999329
will	O	O:0.999833
make	O	O:0.999345
it	O	O:0.999945
add	O	O:0.999954
the	O	O:0.999820
C	O	O:0.998850
/	O	O:0.999926
C++	O	O:0.999606
`	O	O:0.999981
typedef	O	B-API:0.901370
`	O	O:0.999950
statement	O	O:0.998880
with	O	O:0.999953
the	O	O:0.999930
given	O	O:0.999306
types	O	O:0.998319
in	O	O:0.999988
the	O	O:0.999929
compiled	O	O:0.997658
Cython-code	O	O:0.998478
.	O	O:0.999634
	
Here	O	O:0.996917
is	O	O:0.999974
how	O	O:0.999566
I	O	O:0.999988
would	O	O:0.999927
compute	O	O:0.998952
a	O	O:0.999998
subset	O	O:0.999036
of	O	O:0.999930
the	O	O:0.999929
elements	O	O:0.999874
of	O	O:0.999951
C	O	O:0.999928
given	O	O:0.999430
a	O	O:0.999997
list	O	O:0.993248
of	O	O:0.999979
tuples	O	O:0.997369
of	O	O:0.999691
C	O	O:0.998730
index	O	O:0.998888
values	O	O:0.994187
.	O	O:0.999643
	
In	O	O:0.999966
my	O	O:0.999898
specific	O	O:0.999713
problem	O	O:0.998946
`	O	O:0.999939
A	O	O:0.999520
,	O	O:0.999997
B	O	O:0.999714
`	O	O:0.999962
are	O	O:0.999049
slices	O	O:0.999805
out	O	O:0.999976
of	O	O:0.999970
a	O	O:0.999583
bigger	O	O:0.999453
3-dimensional	O	O:0.998417
array	O	O:0.997879
`	O	O:0.999929
Z	O	O:0.992819
`	O	O:0.999966
,	O	O:0.999427
	
The	O	O:0.999875
solution	O	O:0.999844
to	O	O:0.999977
get	O	O:0.999973
all	O	O:0.999883
the	O	O:0.999989
data	O	O:0.999375
you	O	O:0.999986
need	O	O:0.999972
as	O	O:0.999994
you	O	O:0.999904
build	O	O:0.998703
the	O	O:0.999981
list	O	O:0.984283
,	O	O:0.999998
by	O	O:0.999937
using	O	O:0.999847
the	O	O:0.999510
accessor	O	O:0.996210
on	O	O:0.999957
each	O	O:0.998064
iteration	O	O:0.999844
.	O	O:0.999759
	
Edit	O	O:0.996423
:	O	O:0.999985
Actually	O	O:0.999887
you	O	O:0.999725
could	O	O:0.999834
also	O	O:0.999985
sort	O	O:0.999833
both	O	O:0.997747
arrays	O	O:0.999848
into	O	O:0.998565
one	O	O:0.999204
(	O	O:0.999767
and	O	O:0.999880
remember	O	O:0.999122
which	O	O:0.998093
one	O	O:0.999870
belongs	O	O:0.999573
to	O	O:0.999952
which	O	O:0.999970
class	O	O:0.999163
)	O	O:0.999951
,	O	O:0.999992
then	O	O:0.999897
go	O	O:0.999969
from	O	O:0.999924
there	O	O:0.999844
by	O	O:0.999994
checking	O	O:0.999736
where	O	O:0.999735
two	O	O:0.999898
of	O	O:0.999983
the	O	O:0.999900
different	O	O:0.999693
class	O	O:0.998267
are	O	O:0.999991
next	O	O:0.999489
to	O	O:0.999990
each	O	O:0.999912
other	O	O:0.999733
.	O	O:0.999710
	
How	O	O:0.999896
can	O	O:0.999234
I	O	O:0.999996
integrate	O	O:0.997266
it	O	O:0.999975
from	O	O:0.999945
a	O	O:0.999987
given	O	O:0.999828
value	O	O:0.999800
`	O	O:0.999988
a	O	O:0.999627
`	O	O:0.999989
to	O	O:0.999632
another	O	O:0.999995
value	O	O:0.999332
`	O	O:0.999982
b	O	O:0.999273
`	O	O:0.999991
so	O	O:0.999961
that	O	O:0.999954
the	O	O:0.999980
output	O	O:0.998846
is	O	O:0.999983
a	O	O:0.999960
corresponding	O	O:0.998560
array	O	O:0.997614
?	O	O:0.999909
	
I	O	O:0.999983
want	O	O:0.999881
to	O	O:0.999914
multiply	O	O:0.998022
a	O	O:0.999944
sparse	O	O:0.998343
matrix	O	O:0.987234
A	O	O:0.999445
,	O	O:0.999995
with	O	O:0.999744
a	O	O:0.999928
matrix	O	O:0.987733
B	O	O:0.999417
which	O	O:0.999835
has	O	O:0.999643
0	O	O:0.999941
,	O	O:0.999960
-1	O	O:0.999781
,	O	O:0.999984
or	O	O:0.999986
1	O	O:0.999901
as	O	O:0.999986
elements	O	O:0.998724
.	O	O:0.999744
	
If	O	O:0.999938
you	O	O:0.999970
turn	O	O:0.999899
a	O	O:0.999972
`	O	O:0.999985
dict	O	O:0.952741
`	O	O:0.999997
into	O	O:0.998877
an	O	O:0.999997
array	O	O:0.996363
,	O	O:0.999972
you'll	O	O:0.999464
get	O	O:0.999042
an	O	O:0.999858
object	O	O:0.999510
array	O	O:0.998050
.	O	O:0.999403
	
`	O	O:0.999901
Holy	O	O:0.997853
CPU	O	O:0.999968
cycles	O	O:0.996199
batman	O	O:0.989339
!	O	O:0.999962
	
Note	O	O:0.995297
:	O	O:0.999970
Xarray	O	O:0.997766
and	O	O:0.999931
Yarray	O	O:0.998461
are	O	O:0.999914
each	O	O:0.999035
single-column	O	O:0.999313
vectors	O	O:0.999684
with	O	O:0.999985
data	O	O:0.999819
at	O	O:0.999969
each	O	O:0.998808
index	O	O:0.999912
that	O	O:0.999816
links	O	O:0.999858
the	O	O:0.999921
two	O	O:0.999376
arrays	O	O:0.999885
as	O	O:0.999997
sets	O	O:0.999857
of	O	O:0.999978
x	O	O:0.999023
,	O	O:0.999997
y	O	O:0.999895
coordinates	O	O:0.947082
.	O	O:0.999848
	
Yeah	O	O:0.998991
,	O	O:0.999988
my	O	O:0.999847
rule-of-thumb	O	O:0.996188
is	O	O:0.999948
**	O	O:0.999729
numpy	O	O:0.996686
**	O	O:0.999742
for	O	O:0.999813
anything	O	O:0.999954
that	O	O:0.997605
can	O	O:0.999660
handle	O	O:0.999905
small	O	O:0.999680
amounts	O	O:0.999862
of	O	O:0.999725
latency	O	O:0.998625
but	O	O:0.999842
has	O	O:0.999786
the	O	O:0.999903
potential	O	O:0.992366
to	O	O:0.999954
be	O	O:0.999999
very	O	O:0.999881
large	O	O:0.998547
,	O	O:0.999883
**	O	O:0.999431
lists	O	O:0.994683
**	O	O:0.999872
for	O	O:0.999680
smaller	O	O:0.999914
data	O	O:0.999908
sets	O	O:0.999843
where	O	O:0.999623
latency	O	O:0.999629
critical	O	O:0.986496
,	O	O:0.999966
and	O	O:0.999941
of	O	O:0.999850
course	O	O:0.976256
**	O	O:0.999879
real	O	O:0.973703
benchmarking	O	O:0.999683
**	O	O:0.998923
FTW	O	O:0.997803
:)	O	O:0.999854
	
You	O	O:0.999939
need	O	O:0.999285
to	O	O:0.999917
know	O	O:0.999943
what	O	O:0.999921
kind	O	O:0.999345
of	O	O:0.999969
information	O	O:0.995650
is	O	O:0.999955
stored	O	O:0.996593
in	O	O:0.999985
each	O	O:0.999643
field	O	O:0.999215
for	O	O:0.999962
the	O	O:0.999569
`	O	O:0.999504
struct	O	B-API:0.745816
`	O	O:0.999992
module	O	O:0.997841
to	O	O:0.999997
make	O	O:0.999962
sense	O	O:0.999928
of	O	O:0.999991
each	O	O:0.997493
field	O	O:0.997679
.	O	O:0.999607
	
Once	O	O:0.999300
you	O	O:0.999746
have	O	O:0.999956
this	O	O:0.999976
array	O	O:0.999878
,	O	O:0.999998
you	O	O:0.999898
can	O	O:0.999690
get	O	O:0.999994
your	O	O:0.999980
sums	O	O:0.999264
for	O	O:0.999980
each	O	O:0.999037
vertex	O	O:0.997259
as	O	O:0.999841
#CODE	O	O:0.998710
	
Where	O	O:0.999283
are	O	O:0.997988
`	O	O:0.999980
plot	O	O:0.838196
`	O	O:0.999979
and	O	O:0.999087
`	O	O:0.999994
show	O	O:0.981135
`	O	O:0.999992
coming	O	O:0.998762
from	O	O:0.999694
?	O	O:0.999925
	
But	O	O:0.999467
it	O	O:0.999899
might	O	O:0.999209
be	O	O:0.999895
easier	O	O:0.997379
(	O	O:0.999644
and	O	O:0.999932
more	O	O:0.999562
understandable	O	O:0.999664
when	O	O:0.999283
you	O	O:0.999981
look	O	O:0.999793
at	O	O:0.999987
the	O	O:0.999962
code	O	O:0.998907
in	O	O:0.999979
the	O	O:0.999943
future	O	O:0.999149
)	O	O:0.999919
to	O	O:0.999969
just	O	O:0.999985
drop	O	O:0.997621
into	O	O:0.999724
Cython	O	O:0.999959
to	O	O:0.999651
get	O	O:0.999978
this	O	O:0.999953
done	O	O:0.999185
.	O	O:0.999758
	
I	O	O:0.999953
can't	O	O:0.999816
comment	O	O:0.998702
on	O	O:0.999939
the	O	O:0.999888
Perl	O	O:0.999683
code	O	O:0.999746
,	O	O:0.999995
I	O	O:0.999996
simply	O	O:0.999228
don't	O	O:0.999052
know	O	O:0.999466
it	O	O:0.999971
at	O	O:0.999901
all	O	O:0.997769
.	O	O:0.999577
	
I	O	O:0.999956
updated	O	O:0.999900
the	O	O:0.998128
answer	O	O:0.999783
with	O	O:0.999696
a	O	O:0.999970
full	O	O:0.996608
example	O	O:0.997753
.	O	O:0.999552
	
There	O	O:0.998729
you	O	O:0.999818
will	O	O:0.999703
find	O	O:0.999461
C	O	O:0.999985
code	O	O:0.999751
which	O	O:0.999909
provides	O	O:0.999340
the	O	O:0.999992
same	O	O:0.999730
functionality	O	O:0.999963
as	O	O:0.999991
`	O	O:0.999934
fmincon	O	B-API:0.969929
`	O	O:0.999905
.	O	O:0.998237
	
so	O	O:0.999714
for	O	O:0.999896
instance	O	O:0.999435
,	O	O:0.999985
for	O	O:0.999970
an	O	O:0.999859
array	O	O:0.999398
the	O	O:0.999948
code	O	O:0.989079
looked	O	O:0.999790
like	O	O:0.999205
#CODE	O	O:0.999144
	
I've	O	O:0.999002
been	O	O:0.998492
trying	O	O:0.999864
to	O	O:0.999913
find	O	O:0.999957
a	O	O:0.999985
solution	O	O:0.999426
for	O	O:0.999918
hours	O	O:0.995062
.	O	O:0.999478
	
Note	O	O:0.999952
that	O	O:0.999407
as	O	O:0.999980
implemented	O	O:0.999882
here	O	O:0.998869
,	O	O:0.999983
the	O	O:0.999660
first	O	O:0.983585
method	O	O:0.999247
gives	O	O:0.999534
incorrect	O	O:0.999734
results	O	O:0.999655
according	O	O:0.999788
to	O	O:0.999916
my	O	O:0.999988
test	O	O:0.960667
.	O	O:0.999842
	
This	O	O:0.998997
is	O	O:0.999968
my	O	O:0.999880
test	O	O:0.990835
code	O	O:0.997608
:	O	O:0.999978
#CODE	O	O:0.999578
	
This	O	O:0.999743
will	O	O:0.998900
short-circuit	O	O:0.998633
if	O	O:0.999947
you	O	O:0.999945
just	O	O:0.999674
want	O	O:0.999958
to	O	O:0.999964
determine	O	O:0.999973
if	O	O:0.999982
any	O	O:0.999848
match	O	O:0.971909
exists	O	O:0.997377
.	O	O:0.999450
	
It	O	O:0.999965
also	O	O:0.999856
helps	O	O:0.999938
to	O	O:0.999936
know	O	O:0.999993
that	O	O:0.999946
a	O	O:0.999981
resource	O	O:0.999398
like	O	O:0.998886
Wolfram	O	O:0.998587
Alpha	O	O:0.984874
is	O	O:0.999986
available	O	O:0.999680
to	O	O:0.999980
you	O	O:0.999984
at	O	O:0.999976
all	O	O:0.999762
times	O	O:0.998229
.	O	O:0.999417
	
What	O	O:0.997996
I	O	O:0.999988
meant	O	O:0.999531
was	O	O:0.999704
if	O	O:0.999919
we	O	O:0.999943
had	O	O:0.999715
three	O	O:0.999655
arrays	O	O:0.999442
`	O	O:0.999875
X	O	O:0.999114
=[	O	O:0.999997
0	O	O:0.999886
1	O	O:0.999979
2	O	O:0.999908
]	O	O:0.999957
,	O	O:0.999814
Y	O	O:0.999946
=[	O	O:0.999980
0	O	O:0.999905
1	O	O:0.999965
1	O	O:0.999840
]	O	O:0.999846
,	O	O:0.999847
and	O	O:0.999886
Z	O	O:0.999691
=[	O	O:0.999929
0	O	O:0.999781
2	O	O:0.999938
2	O	O:0.999900
]`	O	O:0.999949
there	O	O:0.991460
would	O	O:0.999831
be	O	O:0.999967
six	O	O:0.999828
values	O	O:0.997906
in	O	O:0.999970
the	O	O:0.999977
range	O	O:0.999611
of	O	O:0.999788
greater	O	O:0.999870
than	O	O:0.999690
or	O	O:0.999956
equal	O	O:0.992941
1	O	O:0.999806
and	O	O:0.999324
and	O	O:0.999920
less	O	O:0.999596
than	O	O:0.999128
or	O	O:0.999968
equal	O	O:0.999222
to	O	O:0.999955
2	O	O:0.999960
.	O	O:0.999717
	
You	O	O:0.999356
should	O	O:0.999707
really	O	O:0.998363
split	O	O:0.964089
this	O	O:0.999935
into	O	O:0.999885
two	O	O:0.999974
separate	O	O:0.999796
questions	O	O:0.999670
since	O	O:0.999929
each	O	O:0.999950
part	O	O:0.999223
is	O	O:0.999982
distinct	O	O:0.993985
.	O	O:0.999613
	
This	O	O:0.999756
doesn't	O	O:0.999326
answer	O	O:0.999972
your	O	O:0.999364
problem	O	O:0.998478
exactly	O	O:0.995660
,	O	O:0.999984
but	O	O:0.999849
I	O	O:0.999992
think	O	O:0.999779
especially	O	O:0.999630
with	O	O:0.999822
the	O	O:0.999918
sum	O	O:0.995036
issue	O	O:0.999959
that	O	O:0.999902
you	O	O:0.999886
should	O	O:0.999792
see	O	O:0.999974
significant	O	O:0.999697
speedups	O	O:0.999910
with	O	O:0.999959
these	O	O:0.999061
changes	O	O:0.996997
.	O	O:0.999492
	
Basically	O	O:0.999079
you're	O	O:0.999438
iterating	O	O:0.997232
through	O	O:0.999472
each	O	O:0.999702
item	O	O:0.999805
in	O	O:0.999850
`	O	O:0.999941
Xa	O	O:0.997676
`	O	O:0.999898
and	O	O:0.999708
omitting	O	O:0.999919
the	O	O:0.999652
ones	O	O:0.999709
that	O	O:0.999846
don't	O	O:0.999989
fall	O	O:0.998106
with	O	O:0.999879
the	O	O:0.999642
range	O	O:0.996979
.	O	O:0.999370
	
This	O	O:0.999902
code	O	O:0.999422
has	O	O:0.999991
been	O	O:0.998515
written	O	O:0.999716
following	O	O:0.999237
the	O	O:0.999855
tips	O	O:0.989808
(	O	O:0.999946
and	O	O:0.999983
copy	O	O:0.977312
/	O	O:0.999872
pasting	O	O:0.980244
):	O	O:0.999864
#URL	O	O:0.998413
	
I	O	O:0.999785
would	O	O:0.999920
look	O	O:0.986680
at	O	O:0.999994
this	O	O:0.998709
question	O	O:0.998668
:	O	O:0.999945
#URL	O	O:0.998706
	
As	O	O:0.999921
@USER	O	O:0.999461
-Anderson	O	O:0.998584
asked	O	O:0.999299
,	O	O:0.999930
why	O	O:0.999727
not	O	O:0.997457
avoid	O	O:0.999765
making	O	O:0.999188
an	O	O:0.999628
array	O	O:0.999065
?	O	O:0.999939
	
to	O	O:0.999647
create	O	O:0.999974
such	O	O:0.999956
an	O	O:0.999981
array	O	O:0.997402
.	O	O:0.999523
	
In	O	O:0.999884
short	O	O:0.999545
,	O	O:0.999984
I	O	O:0.999997
find	O	O:0.999880
class	O	O:0.998300
C	O	O:0.999949
to	O	O:0.999986
provide	O	O:0.999604
an	O	O:0.999807
implementation	O	O:0.999954
that	O	O:0.999600
is	O	O:0.999991
over	O	O:0.999848
60x	O	O:0.999680
faster	O	O:0.999932
than	O	O:0.998307
the	O	O:0.998674
method	O	O:0.997031
in	O	O:0.999898
the	O	O:0.999864
original	O	O:0.999047
post	O	O:0.959667
.	O	O:0.999908
	
I	O	O:0.999922
suggest	O	O:0.999861
allocating	O	O:0.999655
an	O	O:0.999959
array	O	O:0.999798
of	O	O:0.999971
the	O	O:0.999387
correct	O	O:0.999699
size	O	O:0.999759
up-front	O	O:0.999801
,	O	O:0.999994
then	O	O:0.999776
populating	O	O:0.999447
it	O	O:0.999975
with	O	O:0.999976
data	O	O:0.999666
in	O	O:0.999992
each	O	O:0.999105
iteration	O	O:0.999562
.	O	O:0.999747
	
edited	O	O:0.999659
my	O	O:0.999841
solution	O	O:0.999740
to	O	O:0.999920
include	O	O:0.999979
what	O	O:0.999521
I	O	O:0.999980
would	O	O:0.999926
do	O	O:0.999691
.	O	O:0.999986
let	O	O:0.999653
me	O	O:0.999976
know	O	O:0.997417
if	O	O:0.999990
this	O	O:0.999685
work	O	O:0.997963
,	O	O:0.999992
as	O	O:0.999986
i	O	O:0.999964
cannot	O	O:0.999236
fully	O	O:0.999949
test	O	O:0.987908
because	O	O:0.999517
i	O	O:0.999991
dont	O	O:0.999728
have	O	O:0.999933
test	O	O:0.998286
data	O	O:0.999850
.	O	O:0.999744
	
The	O	O:0.999931
problem	O	O:0.995117
is	O	O:0.999967
if	O	O:0.999864
i	O	O:0.999971
don't	O	O:0.999413
want	O	O:0.997700
0:10	O	O:0.909633
,	O	O:0.999976
but	O	O:0.999854
an	O	O:0.999901
arbitrary	O	O:0.999504
set	O	O:0.998769
of	O	O:0.999780
indices	O	O:0.970347
.	O	O:0.999757
	
and	O	O:0.999550
it	O	O:0.999951
occurs	O	O:0.999411
at	O	O:0.999938
the	O	O:0.999904
line	O	O:0.997223
:	O	O:0.999977
`	O	O:0.999968
del	O	O:0.981542
innerAry	O	O:0.999738
[	O	O:0.999986
j	O	O:0.999319
]`	O	O:0.999617
	
Do	O	O:0.999909
you	O	O:0.999957
have	O	O:0.999869
any	O	O:0.999977
references	O	O:0.999876
to	O	O:0.999989
back	O	O:0.999958
up	O	O:0.999991
that	O	O:0.999138
`	O	O:0.999969
NaN	O	O:0.990165
handling	O	O:0.998511
is	O	O:0.999976
much	O	O:0.998794
slower	O	O:0.999971
than	O	O:0.995214
"	O	O:0.999849
normal	O	O:0.976521
"	O	O:0.999976
float	O	O:0.984198
at	O	O:0.999966
the	O	O:0.999744
CPU	O	O:0.999876
level	O	O:0.990747
`	O	O:0.999921
?	O	O:0.999712
	
What	O	O:0.999564
do	O	O:0.999953
you	O	O:0.999980
mean	O	O:0.998713
by	O	O:0.999985
the	O	O:0.999976
line	O	O:0.998610
?	O	O:0.999978
	
For	O	O:0.999908
example	O	O:0.999275
if	O	O:0.999967
we	O	O:0.999976
stick	O	O:0.998325
with	O	O:0.999966
a	O	O:0.999962
linear	O	O:0.997957
search	O	O:0.998202
we	O	O:0.999966
can	O	O:0.999623
at	O	O:0.999998
least	O	O:0.999776
start	O	O:0.998988
at	O	O:0.999977
the	O	O:0.999908
appropriate	O	O:0.994988
end	O	O:0.975222
(	O	O:0.999979
search	O	O:0.999234
backwards	O	O:0.999874
to	O	O:0.999941
find	O	O:0.999978
last	O	O:0.999821
value	O	O:0.999968
matching	O	O:0.999216
a	O	O:0.999903
condition	O	O:0.975307
)	O	O:0.999755
.	O	O:0.997873
	
Yes	O	O:0.997748
,	O	O:0.999965
but	O	O:0.999936
you	O	O:0.999742
don't	O	O:0.999776
get	O	O:0.999948
a	O	O:0.999992
numpy	O	O:0.997552
array	O	O:0.999371
out	O	O:0.999866
,	O	O:0.999966
do	O	O:0.999915
you	O	O:0.999816
?	O	O:0.999972
	
This	O	O:0.999511
seems	O	O:0.999957
like	O	O:0.999913
a	O	O:0.999980
simple	O	O:0.986979
question	O	O:0.994609
,	O	O:0.999985
but	O	O:0.999689
I	O	O:0.999935
haven't	O	O:0.999728
been	O	O:0.999177
able	O	O:0.999955
to	O	O:0.999978
find	O	O:0.999941
a	O	O:0.999994
good	O	O:0.997630
answer	O	O:0.999392
.	O	O:0.998877
	
@USER	O	O:0.992422
:	O	O:0.999966
it	O	O:0.999916
could	O	O:0.999860
also	O	O:0.999973
mean	O	O:0.999936
they	O	O:0.999396
are	O	O:0.999950
both	O	O:0.999304
strictly	O	O:0.999655
periodic	O	O:0.949803
and	O	O:0.999847
sinusoidal	O	O:0.964911
,	O	O:0.999915
but	O	O:0.999961
their	O	O:0.999632
frequencies	O	O:0.904260
are	O	O:0.997518
integer-independent	O	O:0.998652
(	O	O:0.999950
ie	O	O:0.999949
.	O	O:0.999902
the	O	O:0.999750
interference	O	O:0.999760
wave	O	O:0.996889
is	O	O:0.999984
not	O	O:0.999900
periodic	O	O:0.994397
)	O	O:0.999659
	
Python	O	O:0.995507
:	O	O:0.999980
How	O	O:0.999968
to	O	O:0.999974
rotate	O	O:0.999895
an	O	O:0.999956
array	O	O:0.999671
?	O	O:0.999956
	
@USER	O	O:0.998735
Your	O	O:0.999140
edited	O	O:0.997147
sample	O	O:0.994239
input	O	O:0.998911
is	O	O:0.999954
still	O	O:0.993156
not	O	O:0.999697
consistent	O	O:0.999799
with	O	O:0.999973
your	O	O:0.999298
expected	O	O:0.999734
output	O	O:0.998904
.	O	O:0.999511
	
You	O	O:0.999962
can	O	O:0.999796
calculate	O	O:0.999813
the	O	O:0.999993
variance	O	O:0.999919
yourself	O	O:0.999908
using	O	O:0.999904
the	O	O:0.999905
mean	O	O:0.893003
,	O	O:0.999994
with	O	O:0.999916
the	O	O:0.999883
following	O	O:0.998737
formula	O	O:0.990888
:	O	O:0.999969
#CODE	O	O:0.999678
	
Populate	O	O:0.999277
numpy	O	O:0.998468
matrix	O	O:0.998977
from	O	O:0.999732
the	O	O:0.999983
difference	O	O:0.999922
of	O	O:0.999962
two	O	O:0.999788
vectors	O	O:0.998915
	
where	O	O:0.991819
#CODE	O	O:0.998769
	
Interleaving	O	O:0.997625
two	O	O:0.998284
numpy	O	O:0.996197
index	O	O:0.996314
arrays	O	O:0.999500
,	O	O:0.999975
one	O	O:0.999958
item	O	O:0.999860
from	O	O:0.999961
each	O	O:0.999493
array	O	O:0.999734
	
I	O	O:0.999925
was	O	O:0.999879
worried	O	O:0.994213
about	O	O:0.999247
the	O	O:0.999834
performance	O	O:0.970144
,	O	O:0.999974
but	O	O:0.999962
the	O	O:0.999950
difference	O	O:0.995519
in	O	O:0.999920
load	O	O:0.999948
time	O	O:0.999749
is	O	O:0.999997
tiny	O	O:0.998895
for	O	O:0.999946
me	O	O:0.999455
.	O	O:0.998870
	
I	O	O:0.999872
looked	O	O:0.999764
for	O	O:0.999117
an	O	O:0.999363
online	O	O:0.997448
reference	O	O:0.999145
but	O	O:0.999794
couldn't	O	O:0.999879
find	O	O:0.998488
one	O	O:0.999418
.	O	O:0.999589
	
Numpy	O	O:0.996689
/	O	O:0.998939
Python	O	O:0.992925
:	O	O:0.999994
Array	O	O:0.866549
iteration	O	O:0.999542
without	O	O:0.998667
for-loop	O	O:0.973467
	
If	O	O:0.999889
you	O	O:0.999797
want	O	O:0.999707
it	O	O:0.999869
printed	O	O:0.999920
with	O	O:0.999738
commas	O	O:0.997793
,	O	O:0.999997
you	O	O:0.999830
could	O	O:0.999407
convert	O	O:0.999837
it	O	O:0.999996
to	O	O:0.999985
a	O	O:0.999973
Python	O	O:0.999271
list	O	O:0.966255
:	O	O:0.999970
#CODE	O	O:0.997985
	
I	O	O:0.999966
have	O	O:0.999628
included	O	O:0.999800
my	O	O:0.999986
code	O	O:0.999800
to	O	O:0.999994
see	O	O:0.999995
if	O	O:0.999994
you	O	O:0.999883
can	O	O:0.999909
help	O	O:0.999736
me	O	O:0.999989
implement	O	O:0.999863
some	O	O:0.999928
kind	O	O:0.999760
of	O	O:0.999970
'	O	O:0.999838
fminsearch	O	O:0.830424
'	O	O:0.999959
to	O	O:0.999956
find	O	O:0.999928
the	O	O:0.999955
optimal	O	O:0.995375
parameter	O	O:0.999648
values	O	O:0.998642
k0	O	O:0.999407
and	O	O:0.999424
k1	O	O:0.999730
that	O	O:0.998958
will	O	O:0.999757
fit	O	O:0.999633
my	O	O:0.999954
data	O	O:0.999334
.	O	O:0.999773
	
Any	O	O:0.999546
ideas	O	O:0.998914
what	O	O:0.999881
this	O	O:0.999861
could	O	O:0.999884
be	O	O:0.999984
all	O	O:0.999467
about	O	O:0.998517
?	O	O:0.999449
	
What	O	O:0.999813
does	O	O:0.998504
"	O	O:0.999934
IIUC	O	O:0.999156
"	O	O:0.999946
mean	O	O:0.950807
?	O	O:0.999965
	
I	O	O:0.999915
can't	O	O:0.999968
seem	O	O:0.999809
to	O	O:0.999985
find	O	O:0.999941
examples	O	O:0.999887
that	O	O:0.999778
don't	O	O:0.999996
rely	O	O:0.999667
on	O	O:0.999980
the	O	O:0.999929
former	O	O:0.997657
syntax	O	O:0.994446
.	O	O:0.999566
	
Any	O	O:0.999911
help	O	O:0.980989
would	O	O:0.999788
be	O	O:0.999987
greatly	O	O:0.999263
appreciated	O	O:0.995979
.	O	O:0.997356
	
Where	O	O:0.998968
blocks	O	O:0.994809
is	O	O:0.999992
a	O	O:0.999567
3	O	O:0.999920
dimensional	O	O:0.996606
numpy	O	O:0.997881
array	O	O:0.997476
.	O	O:0.999632
	
The	O	O:0.999826
science	O	O:0.998656
/	O	O:0.999945
engineering	O	O:0.997730
application	O	O:0.995969
I'm	O	O:0.999699
working	O	O:0.999270
on	O	O:0.999816
has	O	O:0.999994
lots	O	O:0.999937
of	O	O:0.999957
linear	O	O:0.994309
algebra	O	O:0.999209
matrix	O	O:0.944936
multiplications	O	O:0.997935
,	O	O:0.999997
therefore	O	O:0.999870
I	O	O:0.999956
use	O	O:0.999911
Numpy	O	O:0.991808
matrices	O	O:0.946218
.	O	O:0.999127
	
when	O	O:0.995645
I	O	O:0.999996
print	O	O:0.998744
Chao	O	O:0.996959
,	O	O:0.999988
the	O	O:0.999961
product	O	O:0.993835
of	O	O:0.999988
this	O	O:0.999964
loop	O	O:0.999900
I	O	O:0.999990
currently	O	O:0.999294
have	O	O:0.999144
this	O	O:0.999108
:	O	O:0.999975
	
pyopengl	O	O:0.987986
buffer	O	O:0.997461
dynamic	O	O:0.997418
read	O	O:0.999251
from	O	O:0.999912
numpy	O	O:0.999258
array	O	O:0.999561
	
I	O	O:0.999953
also	O	O:0.999960
have	O	O:0.999269
an	O	O:0.999921
array	O	O:0.999527
which	O	O:0.998949
is	O	O:0.999987
my	O	O:0.999701
desired	O	O:0.999513
subset	O	O:0.999352
of	O	O:0.999965
ages	O	O:0.993642
.	O	O:0.999808
	
It	O	O:0.999994
does	O	O:0.999705
automatically	O	O:0.999728
expand	O	O:0.999304
the	O	O:0.999859
array	O	O:0.986436
,	O	O:0.999967
but	O	O:0.999807
now	O	O:0.999926
every	O	O:0.999544
item	O	O:0.999791
in	O	O:0.999966
the	O	O:0.999948
array	O	O:0.997626
is	O	O:0.999519
`	O	O:0.999881
None	O	O:0.967155
`	O	O:0.999881
and	O	O:0.997928
cannot	O	O:0.999767
be	O	O:0.999873
changed	O	O:0.996420
.	O	O:0.998424
	
I'm	O	O:0.999789
liking	O	O:0.998450
fortran	O	O:0.999755
more	O	O:0.999190
at	O	O:0.999964
the	O	O:0.999819
moment	O	O:0.997851
because	O	O:0.999632
by	O	O:0.999943
the	O	O:0.999992
time	O	O:0.999883
you	O	O:0.999961
add	O	O:0.999972
all	O	O:0.999825
the	O	O:0.999561
required	O	O:0.999684
type	O	O:0.999480
annotations	O	O:0.999922
in	O	O:0.999941
cython	O	O:0.996667
I	O	O:0.999995
think	O	O:0.999314
it	O	O:0.999965
ends	O	O:0.999801
up	O	O:0.999958
looking	O	O:0.999959
less	O	O:0.999456
clear	O	O:0.999919
than	O	O:0.999902
the	O	O:0.999750
fortran	O	O:0.993819
.	O	O:0.999698
	
(	O	O:0.999937
There	O	O:0.999388
are	O	O:0.999975
also	O	O:0.999636
chances	O	O:0.999740
that	O	O:0.999343
Python	O	O:0.999862
stores	O	O:0.999824
the	O	O:0.999929
number	O	O:0.998027
on	O	O:0.999885
the	O	O:0.999988
heap	O	O:0.996565
and	O	O:0.999946
all	O	O:0.999813
you	O	O:0.999860
get	O	O:0.998816
is	O	O:0.999995
a	O	O:0.999958
pointer	O	O:0.998540
to	O	O:0.999820
it	O	O:0.999994
,	O	O:0.999997
approximately	O	O:0.999904
doubling	O	O:0.999114
the	O	O:0.999808
footprint	O	O:0.999013
,	O	O:0.999946
without	O	O:0.999854
even	O	O:0.993362
taking	O	O:0.999632
in	O	O:0.999644
account	O	O:0.958849
metadata	O	O:0.997124
but	O	O:0.999674
that's	O	O:0.999759
slippery	O	O:0.997279
grounds	O	O:0.998751
,	O	O:0.999966
I'm	O	O:0.999827
always	O	O:0.999541
wrong	O	O:0.999885
when	O	O:0.992562
I	O	O:0.999999
talk	O	O:0.999747
about	O	O:0.997960
Python	O	O:0.998646
internals	O	O:0.999742
,	O	O:0.999991
so	O	O:0.999807
let's	O	O:0.999735
not	O	O:0.999663
dig	O	O:0.999280
it	O	O:0.999915
too	O	O:0.999930
much	O	O:0.999839
.	O	O:0.999812
)	O	O:0.999409
	
Do	O	O:0.999909
you	O	O:0.999959
have	O	O:0.999890
any	O	O:0.999971
clue	O	O:0.999642
?	O	O:0.999970
	
your	O	O:0.988744
method	O	O:0.995741
works	O	O:0.999381
,	O	O:0.999842
@USER	O	O:0.999664
.	O	O:0.999732
put	O	O:0.996888
it	O	O:0.999985
into	O	O:0.999768
an	O	O:0.999989
answer	O	O:0.999764
to	O	O:0.999927
get	O	O:0.999972
some	O	O:0.999869
acceptance	O	O:0.999882
points	O	O:0.997422
.	O	O:0.999771
	
that	O	O:0.999705
blas	O	O:0.999578
is	O	O:0.999984
reference	O	O:0.999764
blas	O	O:0.999949
from	O	O:0.999875
netlib	O	O:0.996913
-	O	O:0.999998
the	O	O:0.999807
slowest	O	O:0.999513
blas	O	O:0.998488
around	O	O:0.998915
.	O	O:0.999871
install	O	O:0.998160
atlas	O	O:0.999570
or	O	O:0.999827
mkl	O	O:0.993062
instead	O	O:0.998744
.	O	O:0.999322
	
The	O	O:0.998871
`	O	O:0.999926
not	O	O:0.984857
`	O	O:0.999986
operator	O	O:0.999683
implicitly	O	O:0.999975
tries	O	O:0.999645
to	O	O:0.999910
convert	O	O:0.999236
its	O	O:0.999856
operand	O	O:0.999916
to	O	O:0.999027
`	O	O:0.999997
bool	O	O:0.609655
`	O	O:0.999971
,	O	O:0.999715
and	O	O:0.999995
then	O	O:0.999135
returns	O	O:0.999921
the	O	O:0.999887
opposite	O	O:0.999871
truth	O	O:0.999558
value	O	O:0.999668
.	O	O:0.999746
	
The	O	O:0.999815
recommended	O	O:0.999473
way	O	O:0.999754
to	O	O:0.999849
do	O	O:0.999998
this	O	O:0.999879
is	O	O:0.999993
to	O	O:0.999935
preallocate	O	O:0.999708
before	O	O:0.998828
the	O	O:0.999958
loop	O	O:0.990418
and	O	O:0.999848
use	O	O:0.999545
slicing	O	O:0.943503
and	O	O:0.998194
indexing	O	O:0.997582
to	O	O:0.995655
insert	O	O:0.958378
#CODE	O	O:0.998832
	
If	O	O:0.999949
the	O	O:0.999801
simple	O	O:0.999254
sort	O	O:0.998067
solution	O	O:0.999661
is	O	O:0.999995
good	O	O:0.998907
enough	O	O:0.999766
,	O	O:0.999993
clearly	O	O:0.999480
go	O	O:0.999539
for	O	O:0.999977
that	O	O:0.997556
.	O	O:0.999657
	
Basic	O	O:0.998467
idea	O	O:0.998937
being	O	O:0.999742
,	O	O:0.999971
I	O	O:0.999993
know	O	O:0.999727
the	O	O:0.999820
actual	O	O:0.998773
value	O	O:0.999689
of	O	O:0.999986
that	O	O:0.998621
should	O	O:0.999927
be	O	O:0.999979
predicted	O	O:0.997795
for	O	O:0.999940
each	O	O:0.998305
sample	O	O:0.997887
in	O	O:0.999990
a	O	O:0.999990
row	O	O:0.999831
of	O	O:0.999768
N	O	O:0.997884
,	O	O:0.999938
and	O	O:0.998988
I'd	O	O:0.999958
like	O	O:0.999239
to	O	O:0.999965
determine	O	O:0.999098
which	O	O:0.999881
set	O	O:0.999631
of	O	O:0.999982
predicted	O	O:0.997126
values	O	O:0.999594
in	O	O:0.999975
a	O	O:0.999988
column	O	O:0.999511
of	O	O:0.999933
M	O	O:0.995307
is	O	O:0.999998
most	O	O:0.999006
accurate	O	O:0.999917
using	O	O:0.999708
the	O	O:0.998809
residuals	O	O:0.939259
.	O	O:0.999419
	
Fill	O	O:0.987129
in	O	O:0.999943
missing	O	O:0.997531
values	O	O:0.998272
with	O	O:0.999835
nearest	O	O:0.997467
neighbour	O	O:0.999739
in	O	O:0.999908
Python	O	O:0.999860
numpy	O	O:0.997774
masked	O	O:0.994414
arrays	O	O:0.998790
?	O	O:0.999895
	
Any	O	O:0.999956
tips	O	O:0.999062
on	O	O:0.999977
what	O	O:0.999769
I'm	O	O:0.999988
doing	O	O:0.999429
wrong	O	O:0.998083
?	O	O:0.999645
	
SO	O	O:0.999883
I	O	O:0.999995
have	O	O:0.999939
a	O	O:0.999979
file	O	O:0.999187
having	O	O:0.999839
three	O	O:0.999483
columns	O	O:0.998060
;	O	O:0.999993
Frequency	O	O:0.999102
,	O	O:0.999952
Power	O	O:0.999852
spec	O	O:0.956264
.	O	O:0.999705
	
In	O	O:0.999947
numpy	O	O:0.996525
,	O	O:0.999998
your	O	O:0.999920
array	O	O:0.999081
is	O	O:0.999975
2	O	O:0.999888
x	O	O:0.998823
5	O	O:0.999681
,	O	O:0.999958
isn't	O	O:0.999651
it	O	O:0.999784
?	O	O:0.999939
	
For	O	O:0.999643
small-ish	O	O:0.999216
problems	O	O:0.999066
,	O	O:0.999985
I	O	O:0.999980
would	O	O:0.999900
certainly	O	O:0.999867
just	O	O:0.999851
create	O	O:0.999865
the	O	O:0.999961
new	O	O:0.999591
array	O	O:0.998134
.	O	O:0.999771
	
If	O	O:0.999970
each	O	O:0.998828
element	O	O:0.999919
takes	O	O:0.999749
up	O	O:0.999843
4	O	O:0.999921
bytes	O	O:0.991499
,	O	O:0.999985
it	O	O:0.999854
would	O	O:0.999518
require	O	O:0.998879
4,000,000,000,000	O	O:0.999949
bytes	O	O:0.997611
of	O	O:0.999903
memory	O	O:0.990106
.	O	O:0.999661
	
TypeError	O	O:0.995748
:	O	O:0.999992
must	O	O:0.999744
be	O	O:0.999981
str	O	O:0.992246
,	O	O:0.999956
not	O	O:0.999603
bytes	O	O:0.979568
	
Error	O	O:0.999751
while	O	O:0.998667
computing	O	O:0.999842
probabilities	O	O:0.999442
of	O	O:0.999969
an	O	O:0.999528
array	O	O:0.999846
list	O	O:0.975727
	
This	O	O:0.999821
produces	O	O:0.999225
the	O	O:0.999930
array	O	O:0.988671
,	O	O:0.999983
but	O	O:0.999826
I	O	O:0.999981
don't	O	O:0.999837
know	O	O:0.997891
which	O	O:0.999244
row	O	O:0.999847
corresponds	O	O:0.999757
to	O	O:0.999933
which	O	O:0.999882
year-disease	O	O:0.998183
.	O	O:0.999605
	
I'm	O	O:0.999678
not	O	O:0.999816
sure	O	O:0.999889
what	O	O:0.999783
you	O	O:0.999972
mean	O	O:0.999250
by	O	O:0.999976
"	O	O:0.999974
all	O	O:0.999805
from	O	O:0.999841
numpy	O	O:0.988973
"	O	O:0.999820
,	O	O:0.999962
but	O	O:0.999920
you	O	O:0.999309
should	O	O:0.998911
never	O	O:0.999961
need	O	O:0.999811
to	O	O:0.999963
use	O	O:0.999996
more	O	O:0.999475
than	O	O:0.999650
one	O	O:0.999984
form	O	O:0.999947
of	O	O:0.999835
`	O	O:0.999883
import	O	O:0.995634
`	O	O:0.999991
at	O	O:0.999603
a	O	O:0.999995
time	O	O:0.998513
.	O	O:0.999531
	
The	O	O:0.999951
problem	O	O:0.992065
is	O	O:0.999988
that	O	O:0.998770
you	O	O:0.999990
have	O	O:0.999779
an	O	O:0.999995
array	O	O:0.999945
of	O	O:0.999925
strings	O	O:0.986304
,	O	O:0.999995
not	O	O:0.999836
an	O	O:0.999979
array	O	O:0.999911
of	O	O:0.999921
numbers	O	O:0.976828
.	O	O:0.999778
	
how	O	O:0.999599
can	O	O:0.999686
i	O	O:0.999999
effectively	O	O:0.999817
check	O	O:0.999518
items	O	O:0.999936
of	O	O:0.999934
a	O	O:0.999987
list	O	O:0.996411
of	O	O:0.999966
tuples	O	O:0.993355
against	O	O:0.999715
all	O	O:0.999412
the	O	O:0.999940
items	O	O:0.999216
of	O	O:0.999956
another	O	O:0.999618
using	O	O:0.999945
numpy	O	O:0.977841
or	O	O:0.999721
tabular	O	O:0.996297
?	O	O:0.999945
	
Replace	O	O:0.999701
part	O	O:0.999327
of	O	O:0.999992
numpy	O	O:0.996959
1D	O	O:0.999956
array	O	O:0.999754
with	O	O:0.999597
shorter	O	O:0.999359
array	O	O:0.998420
	
Python	O	O:0.998388
2.6	O	O:0.999626
numpy	O	O:0.995039
interaction	O	O:0.999469
array	O	O:0.999720
objects	O	O:0.998008
error	O	O:0.997638
	
So	O	O:0.999899
for	O	O:0.999798
square	O	O:0.999397
matrices	O	O:0.995939
it	O	O:0.999823
is	O	O:0.999991
basically	O	O:0.999762
syntactic	O	O:0.999860
sugar	O	O:0.999722
for	O	O:0.999924
the	O	O:0.999714
exact	O	O:0.998425
same	O	O:0.999497
operation	O	O:0.999824
.	O	O:0.999958
	
If	O	O:0.999969
we	O	O:0.999973
evaulate	O	O:0.999446
the	O	O:0.999968
ij	O	O:0.999766
th	O	O:0.999986
element	O	O:0.999889
of	O	O:0.999958
the	O	O:0.999437
matrix	O	O:0.965601
U*A*V	O	O:0.994160
,	O	O:0.999990
then	O	O:0.999459
it	O	O:0.999989
must	O	O:0.999579
equal	O	O:0.999546
both	O	O:0.998610
#CODE	O	O:0.999390
	
How	O	O:0.999935
can	O	O:0.999449
I	O	O:0.999998
get	O	O:0.999938
new	O	O:0.999523
array	O	O:0.999177
`	O	O:0.999952
B	O	O:0.994866
`	O	O:0.999997
such	O	O:0.999582
as	O	O:0.999997
if	O	O:0.999564
`	O	O:0.999938
row_set	O	O:0.900691
=	O	O:0.999993
[	O	O:0.999984
0	O	O:0.999971
,	O	O:0.999981
2	O	O:0.999925
,	O	O:0.999968
5	O	O:0.999920
]`	O	O:0.999683
,	O	O:0.999989
then	O	O:0.999848
`	O	O:0.999975
B	O	O:0.999025
=	O	O:0.999993
[	O	O:0.999916
A_row	O	O:0.998427
[	O	O:0.999988
0	O	O:0.999947
]	O	O:0.999935
,	O	O:0.999607
A_row	O	O:0.998096
[	O	O:0.999967
2	O	O:0.999933
]	O	O:0.999927
,	O	O:0.999455
A_row	O	O:0.996475
[	O	O:0.999916
5	O	O:0.999864
]]`	O	O:0.999520
?	O	O:0.999818
	
I	O	O:0.999987
have	O	O:0.999832
tried	O	O:0.999449
the	O	O:0.999933
following	O	O:0.997996
to	O	O:0.999724
fix	O	O:0.999897
it	O	O:0.999811
:	O	O:0.999972
	
The	O	O:0.999629
weighted	O	O:0.998183
sum	O	O:0.992928
result	O	O:0.999353
is	O	O:0.999970
approximated	O	O:0.999664
by	O	O:0.999817
the	O	O:0.999923
multiple	O	O:0.994285
passes	O	O:0.995940
and	O	O:0.999991
actually	O	O:0.999383
after	O	O:0.999892
very	O	O:0.999617
few	O	O:0.999810
of	O	O:0.999994
them	O	O:0.998676
the	O	O:0.999934
output	O	O:0.995337
is	O	O:0.999962
already	O	O:0.996608
smooth	O	O:0.998302
.	O	O:0.998828
	
Basically	O	O:0.997970
,	O	O:0.999972
it	O	O:0.999975
comes	O	O:0.999862
down	O	O:0.999923
to	O	O:0.999989
checking	O	O:0.999944
before	O	O:0.999096
you	O	O:0.999693
add	O	O:0.999388
.	O	O:0.999676
	
Any	O	O:0.999611
ideas	O	O:0.998642
?	O	O:0.999926
	
Do	O	O:0.999937
you	O	O:0.999792
really	O	O:0.999591
have	O	O:0.998102
matrix	O	O:0.999349
type	O	O:0.999755
or	O	O:0.999972
just	O	O:0.999835
list	O	O:0.999669
of	O	O:0.999983
lists	O	O:0.998675
from	O	O:0.999744
python	O	O:0.991757
?	O	O:0.999991
	
zI	O	O:0.999531
[	O	O:0.999980
N-1	O	O:0.998703
]	O	O:0.999980
=	O	O:0.999882
f	O	O:0.998201
(	O	O:0.999975
xI	O	O:0.999345
[	O	O:0.999989
N-1	O	O:0.998997
]	O	O:0.999938
,	O	O:0.999819
yI	O	O:0.999525
[	O	O:0.999960
N-1	O	O:0.997722
])	O	O:0.999298
.	O	O:0.998193
	
The	O	O:0.999846
actual	O	O:0.999715
size	O	O:0.999817
of	O	O:0.999955
the	O	O:0.999923
numpy	O	O:0.999059
array	O	O:0.997966
is	O	O:0.999935
514	O	O:0.999188
by	O	O:0.999858
504	O	O:0.999158
and	O	O:0.999836
of	O	O:0.999553
the	O	O:0.999810
list	O	O:0.986501
is	O	O:0.999924
8	O	O:0.998694
.	O	O:0.999817
	
`	O	O:0.999850
array	O	O:0.996777
([[	O	O:0.999977
a	O	O:0.999918
,	O	O:0.999983
a	O	O:0.999976
,	O	O:0.999963
a	O	O:0.999973
,	O	O:0.999966
a	O	O:0.999976
,	O	O:0.999881
0	O	O:0.999944
,	O	O:0.999961
0	O	O:0.999954
,	O	O:0.999968
0	O	O:0.999962
,	O	O:0.999968
0	O	O:0.999962
,	O	O:0.999968
0	O	O:0.999930
,	O	O:0.999985
b	O	O:0.999741
,	O	O:0.999986
b	O	O:0.999779
,	O	O:0.999966
b	O	O:0.999828
,...	O	O:0.845490
]	O	O:0.999661
,	O	O:0.999374
	
What's	O	O:0.998373
wrong	O	O:0.999141
with	O	O:0.999689
just	O	O:0.999323
separating	O	O:0.999955
it	O	O:0.999536
out	O	O:0.999922
into	O	O:0.999702
real	O	O:0.990013
and	O	O:0.999856
imaginary	O	O:0.999558
parts	O	O:0.982042
?	O	O:0.999925
	
I	O	O:0.999990
have	O	O:0.998711
an	O	O:0.999773
N-dimensional	O	O:0.999295
array	O	O:0.998887
and	O	O:0.999880
a	O	O:0.999966
set	O	O:0.933478
N	O	O:0.998387
index	O	O:0.996637
arrays	O	O:0.998545
,	O	O:0.999965
who's	O	O:0.999903
values	O	O:0.995169
I	O	O:0.999997
want	O	O:0.999816
to	O	O:0.998176
increment	O	O:0.998848
.	O	O:0.999482
	
As	O	O:0.999928
@USER	O	O:0.999731
suggests	O	O:0.999859
in	O	O:0.999981
a	O	O:0.999958
comment	O	O:0.997066
,	O	O:0.999987
if	O	O:0.999970
you	O	O:0.999730
really	O	O:0.999682
want	O	O:0.999932
a	O	O:0.999924
3D	O	O:0.999895
array	O	O:0.995794
--	O	O:0.999924
which	O	O:0.978491
is	O	O:0.999978
not	O	O:0.999879
entirely	O	O:0.999919
clear	O	O:0.999855
to	O	O:0.999990
me	O	O:0.999998
from	O	O:0.999958
your	O	O:0.999942
code	O	O:0.999961
sample	O	O:0.999364
--	O	O:0.999998
you	O	O:0.999815
can	O	O:0.999629
use	O	O:0.999752
:	O	O:0.999928
#CODE	O	O:0.999072
	
In	O	O:0.999855
another	O	O:0.999216
question	O	O:0.999550
,	O	O:0.999981
other	O	O:0.999875
users	O	O:0.999109
offered	O	O:0.999732
some	O	O:0.999799
help	O	O:0.999602
if	O	O:0.999992
I	O	O:0.999996
could	O	O:0.999857
supply	O	O:0.999254
the	O	O:0.999977
array	O	O:0.997621
I	O	O:0.999965
was	O	O:0.999948
having	O	O:0.998595
trouble	O	O:0.998408
with	O	O:0.998886
.	O	O:0.999249
	
The	O	O:0.999641
other	O	O:0.999933
thing	O	O:0.998517
is	O	O:0.999966
changing	O	O:0.999397
the	O	O:0.999987
size	O	O:0.999762
of	O	O:0.999983
the	O	O:0.999962
ticklabels	O	O:0.999648
in	O	O:0.999955
the	O	O:0.999947
colorbar	O	O:0.999478
which	O	O:0.999510
I	O	O:0.999989
haven't	O	O:0.999850
figured	O	O:0.994997
out	O	O:0.999432
.	O	O:0.999042
	
Unfortunately	O	O:0.998357
,	O	O:0.999979
these	O	O:0.999778
lines	O	O:0.995640
are	O	O:0.999946
fast	O	O:0.999707
already	O	O:0.994635
,	O	O:0.999964
but	O	O:0.999372
I	O	O:0.999962
will	O	O:0.999817
take	O	O:0.999577
any	O	O:0.999951
speedup	O	O:0.999482
to	O	O:0.999892
offset	O	O:0.999981
the	O	O:0.999837
IO	O	O:0.999967
issues	O	O:0.998623
I	O	O:0.999997
have	O	O:0.999915
using	O	O:0.997677
GDAL	O	O:0.989947
.	O	O:0.997141
	
First	O	O:0.999292
you	O	O:0.999933
need	O	O:0.999722
to	O	O:0.999988
write	O	O:0.999997
a	O	O:0.999888
function	O	O:0.999874
that	O	O:0.999749
when	O	O:0.999745
given	O	O:0.999548
an	O	O:0.999997
array	O	O:0.999855
of	O	O:0.999968
values	O	O:0.992026
,	O	O:0.999996
with	O	O:0.999816
the	O	O:0.999817
middle	O	O:0.992091
one	O	O:0.999927
being	O	O:0.999812
the	O	O:0.999947
element	O	O:0.998985
currently	O	O:0.999235
examined	O	O:0.999749
,	O	O:0.999986
will	O	O:0.999295
return	O	O:0.997986
some	O	O:0.999654
computation	O	O:0.999920
of	O	O:0.999995
those	O	O:0.997683
values	O	O:0.997663
.	O	O:0.999326
	
Thanks	O	O:0.999426
in	O	O:0.999937
advance	O	O:0.999638
for	O	O:0.999910
any	O	O:0.999643
help	O	O:0.954549
.	O	O:0.999408
	
so	O	O:0.999941
what	O	O:0.999721
you	O	O:0.999974
want	O	O:0.999742
is	O	O:0.999993
some	O	O:0.999970
sort	O	O:0.999496
of	O	O:0.999978
recursive	O	O:0.997409
assignment	O	O:0.998795
--	O	O:0.999937
but	O	O:0.999430
i	O	O:0.999970
don't	O	O:0.998970
believe	O	O:0.999737
there	O	O:0.998919
is	O	O:0.999980
any	O	O:0.999046
guarantee	O	O:0.999378
that	O	O:0.999405
this	O	O:0.999943
will	O	O:0.999633
settle	O	O:0.997652
down	O	O:0.999872
into	O	O:0.999931
a	O	O:0.999995
constant	O	O:0.986691
value	O	O:0.998729
.	O	O:0.999982
sure	O	O:0.999472
it	O	O:0.999993
does	O	O:0.999513
in	O	O:0.999996
your	O	O:0.999872
case	O	O:0.995634
,	O	O:0.999974
but	O	O:0.999839
not	O	O:0.997839
in	O	O:0.999797
general	O	O:0.995222
--	O	O:0.999983
for	O	O:0.999770
example	O	O:0.996921
:	O	O:0.999974
`	O	O:0.999990
a	O	O:0.999727
[:	O	O:0.999955
]	O	O:0.999922
=	O	O:0.999741
2*a	O	O:0.980986
[:	O	O:0.999915
]`	O	O:0.998955
would	O	O:0.999728
loop	O	O:0.999464
forever	O	O:0.999786
.	O	O:0.998719
	
Just	O	O:0.999168
initialize	O	O:0.999636
the	O	O:0.999959
array	O	O:0.999592
of	O	O:0.999848
`	O	O:0.999851
float*	O	B-API:0.550061
`	O	O:0.999973
to	O	O:0.999907
point	O	O:0.999990
to	O	O:0.999999
each	O	O:0.999988
of	O	O:0.999997
the	O	O:0.999979
rows	O	O:0.999367
in	O	O:0.999963
the	O	O:0.999959
2-D	O	O:0.999671
array	O	O:0.997165
.	O	O:0.999601
	
Do	O	O:0.999920
things	O	O:0.999219
go	O	O:0.999597
wrong	O	O:0.999552
gradually	O	O:0.991994
and	O	O:0.999915
more	O	O:0.985053
and	O	O:0.999875
more	O	O:0.998036
,	O	O:0.999966
or	O	O:0.999979
all	O	O:0.998366
at	O	O:0.999989
once	O	O:0.998956
?	O	O:0.999969
	
If	O	O:0.999952
you	O	O:0.999714
don't	O	O:0.999818
find	O	O:0.999746
anything	O	O:0.999325
useful	O	O:0.999106
then	O	O:0.998955
try	O	O:0.999901
"	O	O:0.999916
R	O	O:0.999863
"	O	O:0.999784
.	O	O:0.998199
	
Unfortunately	O	O:0.998800
,	O	O:0.999988
when	O	O:0.997270
I	O	O:0.999989
tried	O	O:0.999982
it	O	O:0.999564
I	O	O:0.999971
got	O	O:0.999933
the	O	O:0.999477
error	O	O:0.994109
:	O	O:0.999960
"	O	O:0.999880
ValueError	O	O:0.999472
:	O	O:0.999989
array	O	O:0.998774
is	O	O:0.999959
too	O	O:0.999447
big	O	O:0.999754
.	O	O:0.999132
	
EDIT	O	O:0.997484
2	O	O:0.998868
:	O	O:0.999973
This	O	O:0.999954
raises	O	O:0.999434
another	O	O:0.999152
question	O	O:0.998830
-	O	O:0.999986
What	O	O:0.999227
is	O	O:0.999934
`	O	O:0.999905
env	O	O:0.994556
`	O	O:0.999940
and	O	O:0.998998
why	O	O:0.999993
does	O	O:0.987228
`	O	O:0.999994
make	O	O:0.984958
`	O	O:0.999972
add	O	O:0.998560
it	O	O:0.999947
?	O	O:0.999932
	
However	O	O:0.999292
it	O	O:0.999713
doesn't	O	O:0.999927
give	O	O:0.999648
you	O	O:0.999955
negative	O	O:0.999530
overflows	O	O:0.999732
,	O	O:0.999997
probably	O	O:0.999832
because	O	O:0.996943
`	O	O:0.999947
uint32	O	O:0.951688
`	O	O:0.999986
fits	O	O:0.998403
inside	O	O:0.999955
the	O	O:0.999977
positive	O	O:0.998290
values	O	O:0.999686
of	O	O:0.999988
the	O	O:0.998997
`	O	O:0.999890
int64	O	O:0.863755
`	O	O:0.999916
.	O	O:0.998773
	
Consider	O	O:0.999691
for	O	O:0.999856
example	O	O:0.999195
the	O	O:0.999704
array	O	O:0.988743
:	O	O:0.999949
#CODE	O	O:0.999585
	
One	O	O:0.999965
difference	O	O:0.999775
could	O	O:0.999628
be	O	O:0.999997
the	O	O:0.999934
result	O	O:0.998724
of	O	O:0.999892
python	O	O:0.997518
having	O	O:0.999841
to	O	O:0.999956
take	O	O:0.999973
extra	O	O:0.999894
steps	O	O:0.999840
to	O	O:0.999979
resolve	O	O:0.999874
the	O	O:0.999858
float64	O	O:0.996648
types	O	O:0.965420
.	O	O:0.999858
	
How	O	O:0.999940
do	O	O:0.999814
I	O	O:0.999995
turn	O	O:0.999836
this	O	O:0.999868
into	O	O:0.999942
a	O	O:0.999993
numpy	O	O:0.967640
matrix	O	O:0.968930
?	O	O:0.999928
	
I	O	O:0.999971
want	O	O:0.999880
to	O	O:0.999467
rotate	O	O:0.999895
an	O	O:0.999762
array	O	O:0.999189
but	O	O:0.999929
not	O	O:0.999826
as	O	O:0.999971
a	O	O:0.999958
whole	O	O:0.996684
,	O	O:0.999995
only	O	O:0.999859
small	O	O:0.998570
portion	O	O:0.999391
of	O	O:0.999882
it	O	O:0.999456
.	O	O:0.999799
	
is	O	O:0.999876
so	O	O:0.999953
much	O	O:0.999947
more	O	O:0.999779
readable	O	O:0.999841
than	O	O:0.999923
any	O	O:0.999866
dot	O	O:0.999212
(	O	O:0.999984
a	O	O:0.999965
,	O	O:0.999989
b	O	O:0.999539
)	O	O:0.999863
equivalent	O	O:0.995682
.	O	O:0.999762
	
The	O	O:0.999831
array	O	O:0.997634
looks	O	O:0.999387
like	O	O:0.993379
:	O	O:0.999947
#CODE	O	O:0.999038
	
Constructing	O	O:0.997610
an	O	O:0.999043
n-by-n	O	O:0.998632
matrix	O	O:0.982674
in	O	O:0.999942
Numpy	O	O:0.996192
is	O	O:0.999980
easy	O	O:0.996598
and	O	O:0.999909
fairly	O	O:0.998610
efficient	O	O:0.990810
.	O	O:0.998801
	
Numpy	O	O:0.998597
array	O	O:0.998128
broadcasting	O	O:0.999575
with	O	O:0.998725
vector	O	O:0.997706
parameters	O	O:0.992280
	
It	O	O:0.999972
only	O	O:0.996931
works	O	O:0.999808
like	O	O:0.999961
this	O	O:0.999922
for	O	O:0.999965
numpy	O	O:0.989882
`	O	O:0.999944
array	O	O:0.997230
`	O	O:0.999979
s	O	O:0.998096
.	O	O:0.999896
	
@USER	O	O:0.993993
:	O	O:0.999957
Also	O	O:0.999949
there's	O	O:0.999983
a	O	O:0.999936
mistake	O	O:0.996437
in	O	O:0.999978
your	O	O:0.999939
code	O	O:0.999377
I	O	O:0.999995
think	O	O:0.999051
:	O	O:0.999966
because	O	O:0.999778
when	O	O:0.999676
you	O	O:0.999955
set	O	O:0.999956
elements	O	O:0.999916
to	O	O:0.999951
NaN	O	O:0.999623
in	O	O:0.999985
each	O	O:0.999122
iteration	O	O:0.999856
,	O	O:0.999989
the	O	O:0.999956
elements	O	O:0.995249
are	O	O:0.999905
not	O	O:0.999881
restored	O	O:0.999906
to	O	O:0.999978
their	O	O:0.999976
pre-NaN	O	O:0.999536
values	O	O:0.998060
for	O	O:0.999922
the	O	O:0.999936
next	O	O:0.987314
iteration	O	O:0.999424
!	O	O:0.999986
	
Quick	O	O:0.995590
question	O	O:0.997843
:	O	O:0.999982
is	O	O:0.999994
there	O	O:0.999778
any	O	O:0.999785
reason	O	O:0.998218
why	O	O:0.999867
you	O	O:0.999515
use	O	O:0.999313
	
Now	O	O:0.999850
the	O	O:0.999807
question	O	O:0.993130
is	O	O:0.999967
,	O	O:0.999896
which	O	O:0.999916
equal	O	O:0.998895
area	O	O:0.999812
projection	O	O:0.999537
shall	O	O:0.999308
I	O	O:0.999984
choose	O	O:0.999399
in	O	O:0.999830
order	O	O:0.999751
to	O	O:0.999975
have	O	O:0.999967
comparable	O	O:0.999979
area	O	O:0.999988
sizes	O	O:0.999364
for	O	O:0.999976
the	O	O:0.999768
polygons	O	O:0.975106
.	O	O:0.999692
	
numpy	O	O:0.996406
array	O	O:0.999267
multiplication	O	O:0.998928
issue	O	O:0.998010
	
(	O	O:0.999941
2	O	O:0.999871
)	O	O:0.999976
When	O	O:0.998275
I	O	O:0.999997
change	O	O:0.999263
the	O	O:0.994935
connection	O	O:0.998694
keywords	O	O:0.999754
to	O	O:0.999977
check_same_thread=False	O	O:0.999676
,	O	O:0.999997
then	O	O:0.999851
the	O	O:0.999975
full	O	O:0.999288
pool	O	O:0.997435
of	O	O:0.999968
workers	O	O:0.996471
is	O	O:0.999979
used	O	O:0.993763
,	O	O:0.999794
but	O	O:0.999911
then	O	O:0.999814
only	O	O:0.999948
some	O	O:0.999907
queries	O	O:0.999220
succeed	O	O:0.994762
and	O	O:0.999977
some	O	O:0.999698
queries	O	O:0.998929
fail	O	O:0.985633
.	O	O:0.999708
	
It	O	O:0.999984
also	O	O:0.999739
has	O	O:0.999983
the	O	O:0.999933
advantage	O	O:0.998817
of	O	O:0.999868
being	O	O:0.999793
able	O	O:0.999808
to	O	O:0.999899
load	O	O:0.999755
and	O	O:0.999952
store	O	O:0.998860
transparently	O	O:0.999600
with	O	O:0.998951
HDF5	O	O:0.976762
.	O	O:0.999597
	
Bah	O	O:0.998468
:	O	O:0.999901
"	O	O:0.999962
operates	O	O:0.999401
on	O	O:0.999933
two	O	O:0.999817
n-dimensional	O	O:0.999020
arrays	O	O:0.998251
"	O	O:0.999828
should	O	O:0.998410
be	O	O:0.999758
"	O	O:0.999935
operates	O	O:0.998331
on	O	O:0.999872
an	O	O:0.999935
n-dimensional	O	O:0.999198
array	O	O:0.999289
"	O	O:0.999925
above	O	O:0.995907
.	O	O:0.999385
	
Instead	O	O:0.998609
,	O	O:0.999998
they	O	O:0.999737
expect	O	O:0.999468
the	O	O:0.999936
user	O	O:0.999559
to	O	O:0.999517
either	O	O:0.999995
pass	O	O:0.999549
an	O	O:0.999990
array	O	O:0.999932
of	O	O:0.999970
shape	O	O:0.993027
`	O	O:0.999950
(	O	O:0.999917
r	O	O:0.999944
,	O	O:0.999995
c	O	O:0.999823
)`	O	O:0.999950
exactly	O	O:0.999124
,	O	O:0.999998
or	O	O:0.999976
for	O	O:0.999897
the	O	O:0.999967
user	O	O:0.999370
to	O	O:0.999987
pass	O	O:0.999944
a	O	O:0.999993
1-D	O	O:0.999785
array	O	O:0.999505
that	O	O:0.999444
broadcasts	O	O:0.999922
up	O	O:0.999950
to	O	O:0.999976
shape	O	O:0.999832
`	O	O:0.999944
(	O	O:0.999948
r	O	O:0.999964
,	O	O:0.999994
c	O	O:0.999632
)`	O	O:0.999730
.	O	O:0.999228
	
Though	O	O:0.998086
,	O	O:0.999959
it	O	O:0.999917
isn't	O	O:0.999785
so	O	O:0.999966
straight	O	O:0.999745
forward	O	O:0.999909
because	O	O:0.999261
I	O	O:0.999986
don't	O	O:0.999940
necessarily	O	O:0.998797
know	O	O:0.998383
how	O	O:0.999988
many	O	O:0.999742
duplicates	O	O:0.999229
of	O	O:0.999988
each	O	O:0.999352
lon	O	O:0.992505
or	O	O:0.999941
lat	O	O:0.959667
there	O	O:0.999847
are	O	O:0.999460
which	O	O:0.999741
determines	O	O:0.999640
the	O	O:0.999990
shape	O	O:0.999832
of	O	O:0.999979
the	O	O:0.999839
array	O	O:0.998791
.	O	O:0.999449
	
geom	O	O:0.990424
function	O	O:0.999935
takes	O	O:0.999873
an	O	O:0.999965
n+1	O	O:0.998018
X	O	O:0.999523
2	O	O:0.999965
array	O	O:0.998419
and	O	O:0.999923
n	O	O:0.997675
as	O	O:0.999865
input	O	O:0.999525
,	O	O:0.999974
i	O	O:0.999982
guess	O	O:0.999053
i'm	O	O:0.999987
doing	O	O:0.999750
something	O	O:0.999410
really	O	O:0.973099
stupid	O	O:0.997967
(	O	O:0.999931
which	O	O:0.999558
i	O	O:0.999991
think	O	O:0.999735
i	O	O:0.999992
am	O	O:0.999954
)	O	O:0.999910
or	O	O:0.999921
i	O	O:0.999973
don't	O	O:0.998626
understand	O	O:0.999436
this	O	O:0.999211
behavior	O	O:0.999347
#CODE	O	O:0.998387
	
When	O	O:0.996171
I	O	O:0.999975
tried	O	O:0.999947
this	O	O:0.998893
,	O	O:0.999955
I	O	O:0.999978
got	O	O:0.999971
sort	O	O:0.996475
of	O	O:0.999956
similar	O	O:0.998793
shaped	O	O:0.998652
"	O	O:0.999945
tiles	O	O:0.997663
"	O	O:0.999975
of	O	O:0.999925
different	O	O:0.998792
colors	O	O:0.962498
rather	O	O:0.999962
than	O	O:0.998980
3	O	O:0.999782
Gaussian	O	O:0.999710
humps	O	O:0.998321
.	O	O:0.999780
	
There	O	O:0.999005
was	O	O:0.999959
a	O	O:0.999909
comment	O	O:0.999478
here	O	O:0.999478
saying	O	O:0.999921
that	O	O:0.999091
the	O	O:0.999975
Apple	O	O:0.999461
version	O	O:0.999512
of	O	O:0.999970
python	O	O:0.997819
2.7	O	O:0.999832
comes	O	O:0.999404
with	O	O:0.999969
numpy	O	O:0.999003
so	O	O:0.999989
you	O	O:0.999916
shouldn't	O	O:0.999979
have	O	O:0.999560
to	O	O:0.999970
install	O	O:0.999916
it	O	O:0.999980
at	O	O:0.999904
all	O	O:0.998298
.	O	O:0.999602
	
For	O	O:0.999904
more	O	O:0.999159
general	O	O:0.994840
solution	O	O:0.999766
,	O	O:0.999995
you	O	O:0.999951
could	O	O:0.999699
use	O	O:0.999987
somekind	O	O:0.998423
of	O	O:0.999975
edge	O	O:0.995503
detection	O	O:0.999162
method	O	O:0.999635
to	O	O:0.999961
find	O	O:0.999974
only	O	O:0.999803
the	O	O:0.999987
edge	O	O:0.999332
points	O	O:0.995553
.	O	O:0.999866
	
If	O	O:0.999961
you	O	O:0.999884
see	O	O:0.999973
any	O	O:0.999932
errors	O	O:0.999430
;	O	O:0.999995
provide	O	O:0.998411
a	O	O:0.999997
link	O	O:0.998577
to	O	O:0.999967
the	O	O:0.999994
code	O	O:0.999955
that	O	O:0.999943
can	O	O:0.999985
be	O	O:0.999993
run	O	O:0.998924
.	O	O:0.999485
	
What	O	O:0.999223
I	O	O:0.999987
am	O	O:0.999985
looking	O	O:0.998277
for	O	O:0.999690
is	O	O:0.999955
a	O	O:0.999853
quick	O	O:0.975649
and	O	O:0.999944
easy	O	O:0.999814
way	O	O:0.999818
to	O	O:0.999951
find	O	O:0.999951
the	O	O:0.999904
closest	O	O:0.982870
(	O	O:0.999994
nearest	O	O:0.999666
neighbor	O	O:0.999946
)	O	O:0.999964
of	O	O:0.999893
some	O	O:0.999716
multidimensional	O	O:0.999289
query	O	O:0.982939
point	O	O:0.999438
in	O	O:0.999948
an	O	O:0.999791
2D	O	O:0.999798
(	O	O:0.999992
numpy	O	O:0.998848
)	O	O:0.999987
array	O	O:0.998689
of	O	O:0.999972
multidimensional	O	O:0.961830
points	O	O:0.984441
(	O	O:0.999989
also	O	O:0.999845
numpy	O	O:0.999699
arrays	O	O:0.996446
)	O	O:0.999710
.	O	O:0.997245
	
How	O	O:0.999967
do	O	O:0.999916
I	O	O:0.999995
get	O	O:0.999908
the	O	O:0.998512
`	O	O:0.999778
Image	O	B-API:0.730489
`	O	O:0.999990
part	O	O:0.998462
only	O	O:0.999736
and	O	O:0.999913
how	O	O:0.999933
do	O	O:0.999613
I	O	O:0.999988
convert	O	O:0.999217
it	O	O:0.999905
to	O	O:0.999950
Numpy	O	O:0.999924
Array	O	O:0.872286
?	O	O:0.999900
	
Maybe	O	O:0.998303
it'll	O	O:0.999716
save	O	O:0.999669
you	O	O:0.999978
some	O	O:0.999896
frustration	O	O:0.999828
=)	O	O:0.999953
	
Is	O	O:0.999985
there	O	O:0.999736
any	O	O:0.999837
way	O	O:0.999808
to	O	O:0.999476
rewrite	O	O:0.999992
this	O	O:0.999444
functions	O	O:0.999949
with	O	O:0.999619
Numpy	O	O:0.998401
?	O	O:0.999926
	
Is	O	O:0.999985
there	O	O:0.999589
any	O	O:0.999959
easy	O	O:0.999530
way	O	O:0.999822
to	O	O:0.999934
speed	O	O:0.999989
my	O	O:0.999922
calculation	O	O:0.999341
up	O	O:0.999939
?	O	O:0.999902
	
A	O	O:0.999743
variable	O	O:0.998023
in	O	O:0.999900
Python	O	O:0.998675
is	O	O:0.999996
just	O	O:0.998730
a	O	O:0.999992
label	O	O:0.970822
for	O	O:0.999830
an	O	O:0.999603
object	O	O:0.997978
;	O	O:0.999988
giving	O	O:0.997258
the	O	O:0.999791
object	O	O:0.999348
a	O	O:0.999950
new	O	O:0.999567
label	O	O:0.991016
doesn't	O	O:0.999620
change	O	O:0.993562
the	O	O:0.996847
object	O	O:0.997033
itself	O	O:0.999578
at	O	O:0.999920
all	O	O:0.996953
.	O	O:0.999532
	
But	O	O:0.999957
this	O	O:0.999633
is	O	O:0.999991
actually	O	O:0.999363
where	O	O:0.999469
the	O	O:0.999791
doc	O	O:0.996448
belongs	O	O:0.998006
.	O	O:0.999674
	
So	O	O:0.999956
given	O	O:0.999037
the	O	O:0.999954
sorted	O	O:0.999116
version	O	O:0.998822
,	O	O:0.999999
you	O	O:0.999968
can	O	O:0.999800
reconstruct	O	O:0.999894
the	O	O:0.999959
original	O	O:0.999023
by	O	O:0.999921
"	O	O:0.999972
putting	O	O:0.998494
items	O	O:0.999722
back	O	O:0.999320
where	O	O:0.999887
they	O	O:0.999940
came	O	O:0.999788
from	O	O:0.999063
"	O	O:0.999384
:	O	O:0.999983
#CODE	O	O:0.999574
	
Note	O	O:0.999701
that	O	O:0.999903
this	O	O:0.999972
all	O	O:0.999695
assumes	O	O:0.999760
that	O	O:0.999845
your	O	O:0.999932
values	O	O:0.998974
are	O	O:0.999930
normally	O	O:0.998144
distributed	O	O:0.992518
.	O	O:0.999565
	
(	O	O:0.999853
Bounding	O	O:0.997747
box	O	O:0.998891
intersections	O	O:0.996950
are	O	O:0.999969
actually	O	O:0.999888
a	O	O:0.999907
rather	O	O:0.999723
poor	O	O:0.999076
way	O	O:0.999852
of	O	O:0.999949
deciding	O	O:0.999353
where	O	O:0.999099
to	O	O:0.999965
place	O	O:0.999575
labels	O	O:0.999395
.	O	O:0.999940
What's	O	O:0.999729
the	O	O:0.999886
point	O	O:0.998069
in	O	O:0.999965
writing	O	O:0.999925
a	O	O:0.999983
ton	O	O:0.999743
of	O	O:0.999993
code	O	O:0.999229
for	O	O:0.999970
something	O	O:0.999558
that	O	O:0.998066
will	O	O:0.999904
only	O	O:0.999598
work	O	O:0.998691
in	O	O:0.999978
one	O	O:0.999971
case	O	O:0.999856
out	O	O:0.999982
of	O	O:0.999702
1000	O	O:0.994639
?	O	O:0.999976
)	O	O:0.998756
	
The	O	O:0.999753
python	O	O:0.998975
code	O	O:0.999703
outputs	O	O:0.999769
eleven	O	O:0.995976
0's	O	O:0.999927
,	O	O:0.999989
eleven	O	O:0.998706
1's	O	O:0.999952
all	O	O:0.999704
the	O	O:0.999951
way	O	O:0.999266
to	O	O:0.999920
eleven	O	O:0.999544
39's	O	O:0.999477
.	O	O:0.999558
	
@USER	O	O:0.998499
;	O	O:0.999975
in	O	O:0.999799
above	O	O:0.999924
example	O	O:0.999581
z	O	O:0.998058
is	O	O:0.999933
(	O	O:0.999935
5	O	O:0.999946
,	O	O:0.999988
2	O	O:0.999930
)	O	O:0.999940
array	O	O:0.996301
created	O	O:0.999909
by	O	O:0.999961
another	O	O:0.998434
function	O	O:0.998487
,	O	O:0.999989
with	O	O:0.999959
first	O	O:0.999544
dimension	O	O:0.999971
from	O	O:0.999899
the	O	O:0.999955
number	O	O:0.999775
of	O	O:0.999840
True	O	O:0.995929
(	O	O:0.999996
at	O	O:0.999956
least	O	O:0.998744
one	O	O:0.999672
True	O	O:0.991305
in	O	O:0.999903
x	O	O:0.998586
>	O	O:0.999973
y	O	O:0.999547
)	O	O:0.999879
,	O	O:0.999982
here	O	O:0.999561
5	O	O:0.999648
,	O	O:0.999893
and	O	O:0.999881
second	O	O:0.999612
dimention	O	O:0.999656
as	O	O:0.999983
the	O	O:0.999931
first	O	O:0.999658
dimension	O	O:0.999907
of	O	O:0.999970
x	O	O:0.998247
,	O	O:0.999998
here	O	O:0.999685
2	O	O:0.999738
.	O	O:0.999738
	
I	O	O:0.999992
have	O	O:0.999877
a	O	O:0.999963
NumPy	O	O:0.999827
array	O	O:0.999200
of	O	O:0.999799
values	O	O:0.975864
.	O	O:0.999735
	
I	O	O:0.999985
just	O	O:0.999887
need	O	O:0.998968
the	O	O:0.999986
total	O	O:0.999346
of	O	O:0.999986
all	O	O:0.999610
the	O	O:0.999975
values	O	O:0.995025
instead	O	O:0.999795
of	O	O:0.999978
the	O	O:0.999870
actual	O	O:0.996508
values	O	O:0.998833
themselves	O	O:0.999049
.	O	O:0.999791
	
Didn't	O	O:0.999286
think	O	O:0.998479
about	O	O:0.999832
multiplying	O	O:0.999121
my	O	O:0.999828
array	O	O:0.999729
of	O	O:0.999783
number	O	O:0.999187
by	O	O:0.999952
an	O	O:0.999990
array	O	O:0.999649
of	O	O:0.999967
booleans	O	O:0.998985
to	O	O:0.999981
extract	O	O:0.999944
my	O	O:0.999967
data	O	O:0.999613
.	O	O:0.999814
	
not	O	O:0.999161
to	O	O:0.999946
convert	O	O:0.999835
floats	O	O:0.999917
to	O	O:0.999972
floats	O	O:0.999922
would	O	O:0.999835
be	O	O:0.999983
the	O	O:0.999978
first	O	O:0.998174
step	O	O:0.997862
.	O	O:0.999773
	
make	O	O:0.995214
a	O	O:0.999997
list	O	O:0.997462
of	O	O:0.999953
all	O	O:0.994252
the	O	O:0.999973
days	O	O:0.982140
	
This	O	O:0.999583
way	O	O:0.999698
,	O	O:0.999985
you	O	O:0.999942
could	O	O:0.999713
access	O	O:0.999943
all	O	O:0.999877
the	O	O:0.999875
`	O	O:0.999739
A	O	O:0.998332
`	O	O:0.999998
through	O	O:0.996443
`	O	O:0.999930
result	O	O:0.996425
[	O	O:0.999991
'	O	O:0.999978
label	O	O:0.985031
']	O	O:0.999896
[	O	O:0.999718
'	O	O:0.999925
A	O	O:0.999257
']`	O	O:0.999671
...	O	O:0.976426
	
picking	O	O:0.989274
out	O	O:0.999563
elements	O	O:0.999436
based	O	O:0.999414
on	O	O:0.999983
complement	O	O:0.995054
of	O	O:0.999949
indices	O	O:0.984923
in	O	O:0.999910
Python	O	O:0.999342
pandas	O	O:0.994197
	
Joran	O	O:0.998990
,	O	O:0.999978
could	O	O:0.999806
you	O	O:0.999954
please	O	O:0.999538
explain	O	O:0.999736
what	O	O:0.999796
you	O	O:0.999977
mean	O	O:0.999273
more	O	O:0.999634
?	O	O:0.999981
	
Anyone	O	O:0.999821
have	O	O:0.999822
any	O	O:0.999952
clues	O	O:0.998817
for	O	O:0.999987
what	O	O:0.999812
I	O	O:0.999990
can	O	O:0.999938
do	O	O:0.999929
,	O	O:0.999998
or	O	O:0.999993
approaches	O	O:0.997933
I	O	O:0.999982
should	O	O:0.999770
research	O	O:0.998330
?	O	O:0.999963
	
Appending	O	O:0.999357
data	O	O:0.999739
to	O	O:0.999947
an	O	O:0.999997
existing	O	O:0.999831
array	O	O:0.999218
is	O	O:0.999989
a	O	O:0.999867
natural	O	O:0.996977
thing	O	O:0.998946
to	O	O:0.999939
want	O	O:0.999944
to	O	O:0.999974
do	O	O:0.999995
for	O	O:0.999955
anyone	O	O:0.999674
with	O	O:0.998949
python	O	O:0.993136
experience	O	O:0.999517
.	O	O:0.999561
	
Note	O	O:0.999939
that	O	O:0.999713
you	O	O:0.999974
get	O	O:0.999965
a	O	O:0.999995
sorte	O	O:0.999942
copy	O	O:0.992972
of	O	O:0.999989
the	O	O:0.999618
array	O	O:0.997601
.	O	O:0.999440
	
I'm	O	O:0.999656
not	O	O:0.999754
sure	O	O:0.999866
that	O	O:0.999983
this	O	O:0.999911
is	O	O:0.999993
the	O	O:0.999580
way	O	O:0.999895
that	O	O:0.999503
you	O	O:0.999934
should	O	O:0.999879
do	O	O:0.999985
things	O	O:0.999953
as	O	O:0.999951
I'd	O	O:0.999882
expect	O	O:0.999860
numpy	O	O:0.997508
to	O	O:0.999987
have	O	O:0.999964
a	O	O:0.999991
much	O	O:0.999828
more	O	O:0.996392
efficient	O	O:0.999137
method	O	O:0.998320
of	O	O:0.999936
going	O	O:0.995875
about	O	O:0.999129
it	O	O:0.996888
,	O	O:0.999963
but	O	O:0.999958
do	O	O:0.999898
you	O	O:0.999939
just	O	O:0.999919
mean	O	O:0.999001
something	O	O:0.999872
like	O	O:0.999877
this	O	O:0.999842
?	O	O:0.999930
	
`	O	O:0.999822
KMID	O	O:0.990567
`	O	O:0.999966
is	O	O:0.999968
a	O	O:0.999848
function	O	O:0.995638
,	O	O:0.999984
not	O	O:0.999624
an	O	O:0.999936
array	O	O:0.999784
,	O	O:0.999991
so	O	O:0.999977
you	O	O:0.999113
can't	O	O:0.999589
index	O	O:0.999567
it	O	O:0.999991
with	O	O:0.999238
`	O	O:0.999805
:	O	O:0.999868
`	O	O:0.999976
.	O	O:0.999206
	
Insert	O	O:0.997231
to	O	O:0.999946
original	O	O:0.999888
code	O	O:0.999623
in	O	O:0.999937
question	O	O:0.997394
:	O	O:0.999972
#CODE	O	O:0.999350
	
Multiple	O	O:0.997854
conditions	O	O:0.998870
using	O	O:0.999728
'	O	O:0.999639
or	O	O:0.999346
'	O	O:0.999805
in	O	O:0.999974
numpy	O	O:0.998916
array	O	O:0.998070
	
Usually	O	O:0.998136
,	O	O:0.999815
it's	O	O:0.999972
best	O	O:0.999770
to	O	O:0.999983
avoid	O	O:0.999883
the	O	O:0.999946
matrix	O	O:0.968672
class	O	O:0.997617
(	O	O:0.999996
see	O	O:0.999996
docs	O	O:0.999274
)	O	O:0.999860
.	O	O:0.998858
	
I	O	O:0.999979
have	O	O:0.999794
tried	O	O:0.998781
two	O	O:0.999658
different	O	O:0.997307
methods	O	O:0.989400
but	O	O:0.999975
both	O	O:0.998903
of	O	O:0.999992
them	O	O:0.998731
are	O	O:0.999922
slow	O	O:0.998672
.	O	O:0.999683
	
Not	O	O:0.999869
really	O	O:0.998562
,	O	O:0.999997
you	O	O:0.999960
can	O	O:0.999814
construct	O	O:0.999961
the	O	O:0.999968
Counter	O	O:0.938056
from	O	O:0.999492
any	O	O:0.999859
iterable	O	O:0.999859
.	O	O:0.999333
	
(	O	O:0.999919
I	O	O:0.999996
have	O	O:0.999901
the	O	O:0.999934
code	O	O:0.999724
ready	O	O:0.997042
,	O	O:0.999994
but	O	O:0.999966
as	O	O:0.999921
i'm	O	O:0.999820
new	O	O:0.999810
to	O	O:0.999808
stackoverflow	O	O:0.999894
,	O	O:0.999987
i	O	O:0.999987
don't	O	O:0.999879
know	O	O:0.999602
where	O	O:0.999488
to	O	O:0.999899
put	O	O:0.999793
it	O	O:0.999835
.	O	O:0.999909
Here	O	O:0.999543
,	O	O:0.999913
in	O	O:0.999990
this	O	O:0.999644
comment	O	O:0.999178
field	O	O:0.999043
?	O	O:0.999993
Or	O	O:0.999950
rather	O	O:0.999828
making	O	O:0.999565
a	O	O:0.999899
new	O	O:0.996360
answer	O	O:0.999551
??	O	O:0.999849
)	O	O:0.995671
	
For	O	O:0.999864
example	O	O:0.996960
,	O	O:0.999977
one	O	O:0.999388
simple	O	O:0.995664
method	O	O:0.999711
to	O	O:0.999978
generate	O	O:0.999851
at	O	O:0.999990
most	O	O:0.999929
rank	O	O:0.993150
`	O	O:0.999977
k	O	O:0.992622
`	O	O:0.999944
(	O	O:0.999979
when	O	O:0.999463
`	O	O:0.999997
m	O	O:0.999083
`	O	O:0.999979
is	O	O:0.999802
`	O	O:0.999972
k+1	O	O:0.997739
`)	O	O:0.999910
is	O	O:0.999926
to	O	O:0.999984
get	O	O:0.999984
a	O	O:0.999979
random	O	O:0.996982
valid	O	O:0.999376
B	O	O:0.999742
0	O	O:0.999821
,	O	O:0.999993
keep	O	O:0.999524
rotating	O	O:0.999800
all	O	O:0.999937
rows	O	O:0.999483
of	O	O:0.999957
this	O	O:0.999823
matrix	O	O:0.998452
up	O	O:0.999814
to	O	O:0.999960
get	O	O:0.999974
B	O	O:0.999918
1	O	O:0.999986
to	O	O:0.999948
B	O	O:0.999979
m-2	O	O:0.999381
,	O	O:0.999983
set	O	O:0.999831
first	O	O:0.999761
row	O	O:0.999973
of	O	O:0.999940
B	O	O:0.999776
m-1	O	O:0.999478
to	O	O:0.999945
all	O	O:0.999883
1	O	O:0.999898
,	O	O:0.999891
and	O	O:0.999968
the	O	O:0.999922
remaining	O	O:0.999648
rows	O	O:0.999297
to	O	O:0.999994
all	O	O:0.999963
0	O	O:0.999788
.	O	O:0.999076
	
Glad	O	O:0.999373
you	O	O:0.999605
saw	O	O:0.999460
around	O	O:0.999590
it	O	O:0.999805
!	O	O:0.999944
	
@USER	O	O:0.995428
:	O	O:0.999995
basically	O	O:0.999808
I	O	O:0.999994
am	O	O:0.999988
converting	O	O:0.999635
some	O	O:0.999788
matlab	O	O:0.999767
code	O	O:0.999943
into	O	O:0.999796
python	O	O:0.999837
,	O	O:0.999987
I	O	O:0.999970
can	O	O:0.999839
not	O	O:0.999711
write	O	O:0.999842
actual	O	O:0.999617
code	O	O:0.999489
because	O	O:0.999913
that	O	O:0.998771
is	O	O:0.999987
confidential	O	O:0.981105
,	O	O:0.999971
(	O	O:0.999951
1+float	O	O:0.993580
(	O	O:0.999985
100	O	O:0.999473
))	O	O:0.999859
Here	O	O:0.998109
100	O	O:0.999491
is	O	O:0.999961
coming	O	O:0.999273
from	O	O:0.999727
two	O	O:0.999698
dimension	O	O:0.999923
string	O	O:0.997570
matrix	O	O:0.952724
,	O	O:0.999995
that	O	O:0.999901
why	O	O:0.999824
I	O	O:0.999995
have	O	O:0.999683
written	O	O:0.998323
float	O	O:0.997091
to	O	O:0.999961
convert	O	O:0.999575
string	O	O:0.999582
variable	O	O:0.993075
.	O	O:0.999701
	
instead	O	O:0.998741
of	O	O:0.999965
call	O	O:0.980891
plot	O	O:0.986728
(	O	O:0.999969
test	O	O:0.977342
[	O	O:0.999989
"	O	O:0.999968
x	O	O:0.998266
"]	O	O:0.999795
[	O	O:0.999937
5:10	O	O:0.998956
])	O	O:0.999806
,	O	O:0.999992
you	O	O:0.999974
can	O	O:0.999922
call	O	O:0.998439
the	O	O:0.999976
plot	O	O:0.904519
method	O	O:0.999558
of	O	O:0.999903
Series	O	O:0.777902
object	O	O:0.995328
:	O	O:0.999946
#CODE	O	O:0.999327
	
The	O	O:0.999984
size	O	O:0.999929
of	O	O:0.999986
a	O	O:0.999951
slice	O	O:0.996990
with	O	O:0.999050
`	O	O:0.999874
0:5	O	O:0.996229
`	O	O:0.999849
is	O	O:0.999921
not	O	O:0.999876
6	O	O:0.999982
as	O	O:0.999982
you	O	O:0.999741
say	O	O:0.999776
:	O	O:0.999991
it's	O	O:0.999755
5	O	O:0.999852
.	O	O:0.999696
	
This	O	O:0.999645
ensures	O	O:0.998228
proper	O	O:0.999211
display	O	O:0.993121
and	O	O:0.998717
syntax	O	O:0.998075
highlighting	O	O:0.997072
-	O	O:0.999979
right	O	O:0.999330
now	O	O:0.999927
someone	O	O:0.999468
who	O	O:0.999849
would	O	O:0.999919
usually	O	O:0.998916
fix	O	O:0.999907
your	O	O:0.999530
formatting	O	O:0.999184
is	O	O:0.999951
likely	O	O:0.995437
to	O	O:0.999936
not	O	O:0.999887
do	O	O:0.999951
it	O	O:0.999982
because	O	O:0.998838
he'd	O	O:0.999965
have	O	O:0.999760
to	O	O:0.999991
remove	O	O:0.999917
all	O	O:0.999633
the	O	O:0.999812
HTML	O	O:0.997321
linebreaks	O	O:0.999314
on	O	O:0.999976
his	O	O:0.999845
own	O	O:0.999694
.	O	O:0.999693
	
I	O	O:0.999941
believe	O	O:0.999724
you've	O	O:0.999066
reduced	O	O:0.999443
the	O	O:0.999976
problem	O	O:0.999353
to	O	O:0.999988
a	O	O:0.999999
one	O	O:0.999926
of	O	O:0.999940
finding	O	O:0.998921
roots	O	O:0.993489
.	O	O:0.999638
	
In	O	O:0.999924
order	O	O:0.999666
to	O	O:0.999967
make	O	O:0.999944
sure	O	O:0.999839
it	O	O:0.999926
is	O	O:0.999985
still	O	O:0.997527
multiprocessor	O	O:0.999894
safe	O	O:0.999805
,	O	O:0.999973
I	O	O:0.999995
believe	O	O:0.999363
you	O	O:0.999440
will	O	O:0.999901
have	O	O:0.999954
to	O	O:0.999987
use	O	O:0.999995
the	O	O:0.999293
`	O	O:0.999799
acquire	B-API	O:0.953050
`	O	O:0.999959
and	O	O:0.999072
`	O	O:0.999986
release	B-API	O:0.648634
`	O	O:0.999927
methods	O	O:0.999104
that	O	O:0.999976
exist	O	O:0.997102
on	O	O:0.999985
the	O	O:0.999621
`	O	O:0.999945
Array	O	B-API:0.530878
`	O	O:0.999959
object	O	O:0.998712
,	O	O:0.999992
`	O	O:0.999986
a	O	O:0.998805
`	O	O:0.999875
,	O	O:0.999255
and	O	O:0.999915
its	O	O:0.999414
built	O	O:0.998978
in	O	O:0.999980
lock	O	O:0.983736
to	O	O:0.999991
make	O	O:0.999953
sure	O	O:0.999839
its	O	O:0.999942
all	O	O:0.999885
safely	O	O:0.999161
accessed	O	O:0.994704
(	O	O:0.999948
though	O	O:0.998929
I'm	O	O:0.999902
not	O	O:0.999089
an	O	O:0.999968
expert	O	O:0.999777
on	O	O:0.999970
the	O	O:0.999936
multiprocessor	O	O:0.999502
module	O	O:0.996285
)	O	O:0.999692
.	O	O:0.998619
	
So	O	O:0.999913
,	O	O:0.999984
given	O	O:0.999764
your	O	O:0.999832
matrix	O	O:0.991075
M	O	O:0.999580
,	O	O:0.999998
your	O	O:0.999702
problem	O	O:0.999856
asks	O	O:0.999928
to	O	O:0.999976
maximize	O	O:0.999888
the	O	O:0.999926
PB	O	O:0.994988
function	O	O:0.998796
#CODE	O	O:0.999619
	
I	O	O:0.999675
would	O	O:0.999957
like	O	O:0.999348
to	O	O:0.999989
find	O	O:0.999858
all	O	O:0.999690
elements	O	O:0.999534
within	O	O:0.999533
a	O	O:0.999965
specific	O	O:0.997617
range	O	O:0.996929
.	O	O:0.998886
	
I	O	O:0.999912
cannot	O	O:0.999931
seem	O	O:0.999815
to	O	O:0.999981
find	O	O:0.999955
how	O	O:0.999955
to	O	O:0.999970
do	O	O:0.999997
that	O	O:0.999632
.	O	O:0.999890
	
Any	O	O:0.999784
thoughts	O	O:0.999168
?	O	O:0.999913
	
If	O	O:0.999953
you	O	O:0.999864
want	O	O:0.999749
the	O	O:0.999912
PRNGs	O	O:0.999758
to	O	O:0.999819
be	O	O:0.999989
independent	O	O:0.999054
,	O	O:0.999945
do	O	O:0.999914
not	O	O:0.999830
seed	O	O:0.999793
them	O	O:0.999929
with	O	O:0.999845
anything	O	O:0.996755
.	O	O:0.999351
	
In	O	O:0.999914
the	O	O:0.999702
end	O	O:0.993492
I'll	O	O:0.999541
probably	O	O:0.999947
take	O	O:0.999772
n	O	O:0.999728
randomly	O	O:0.999813
selected	O	O:0.999888
samples	O	O:0.988375
.	O	O:0.999739
	
This	O	O:0.999402
is	O	O:0.999982
a	O	O:0.999980
mystery	O	O:0.998278
to	O	O:0.999929
me	O	O:0.999966
,	O	O:0.999993
though	O	O:0.999876
I	O	O:0.999938
would	O	O:0.999603
guess	O	O:0.999672
that	O	O:0.999928
there	O	O:0.999946
must	O	O:0.999245
be	O	O:0.999992
more	O	O:0.998654
overhead	O	O:0.999250
associated	O	O:0.999785
with	O	O:0.999827
accessing	O	O:0.999613
an	O	O:0.999918
array	O	O:0.999542
element	O	O:0.999853
than	O	O:0.999860
with	O	O:0.999939
appending	O	O:0.999774
to	O	O:0.999739
a	O	O:0.999997
list	O	O:0.974624
.	O	O:0.999676
	
If	O	O:0.999652
it's	O	O:0.999462
not	O	O:0.999817
reasonable	O	O:0.999763
,	O	O:0.999998
you	O	O:0.999953
can	O	O:0.999888
always	O	O:0.999988
decompose	O	O:0.999682
the	O	O:0.999616
matrix	O	O:0.975397
multiplication	O	O:0.999416
yourself	O	O:0.999549
.	O	O:0.999702
	
If	O	O:0.999949
the	O	O:0.999897
vectors	O	O:0.994429
do	O	O:0.999901
not	O	O:0.999964
have	O	O:0.999922
equal	O	O:0.999570
dimension	O	O:0.999890
,	O	O:0.999994
or	O	O:0.999981
if	O	O:0.999851
you	O	O:0.999975
want	O	O:0.999774
to	O	O:0.999957
avoid	O	O:0.999983
numpy	O	O:0.997816
,	O	O:0.999993
then	O	O:0.999786
perhaps	O	O:0.998450
,	O	O:0.999972
#CODE	O	O:0.999625
	
In	O	O:0.999929
particular	O	O:0.998171
,	O	O:0.999993
you	O	O:0.999176
can't	O	O:0.999476
index	O	O:0.999933
a	O	O:0.999974
2D	O	O:0.999785
matrix	O	O:0.994308
with	O	O:0.999870
a	O	O:0.999930
single	O	O:0.997582
integer	O	O:0.998930
,	O	O:0.999951
because	O	O:0.995530
--	O	O:0.999979
well	O	O:0.995840
--	O	O:0.999979
it's	O	O:0.997626
two	O	O:0.999849
dimensional	O	O:0.990543
and	O	O:0.999722
you	O	O:0.999923
need	O	O:0.999353
to	O	O:0.999981
specify	O	O:0.999917
two	O	O:0.999908
integers	O	O:0.999769
,	O	O:0.999987
hence	O	O:0.999569
the	O	O:0.999973
need	O	O:0.998516
for	O	O:0.999961
the	O	O:0.999986
extra	O	O:0.985028
0	O	O:0.999852
index	O	O:0.999319
in	O	O:0.999966
the	O	O:0.999803
second	O	O:0.998353
example	O	O:0.997892
.	O	O:0.999807
	
nearly	O	O:0.999219
all	O	O:0.999761
of	O	O:0.999862
which	O	O:0.998523
the	O	O:0.999894
author	O	O:0.999143
responded	O	O:0.998680
to	O	O:0.999624
and	O	O:0.999989
in	O	O:0.999990
some	O	O:0.999561
cases	O	O:0.998351
,	O	O:0.999982
	
I	O	O:0.999963
added	O	O:0.999916
the	O	O:0.999659
slow	O	O:0.999029
Python	O	O:0.999983
code	O	O:0.999954
to	O	O:0.999991
the	O	O:0.999978
description	O	O:0.995360
.	O	O:0.999762
	
The	O	O:0.999970
easy	O	O:0.999136
way	O	O:0.999707
-	O	O:0.999997
pick	O	O:0.997518
a	O	O:0.999991
random	O	O:0.995567
number	O	O:0.998326
q	O	O:0.999486
[	O	O:0.999984
0	O	O:0.999980
,	O	O:0.999992
1	O	O:0.999878
]	O	O:0.999675
.	O	O:0.998480
	
will	O	O:0.998451
be	O	O:0.999982
the	O	O:0.999918
number	O	O:0.998475
of	O	O:0.999963
bytes	O	O:0.994423
which	O	O:0.999964
the	O	O:0.999957
pattern	O	O:0.991756
of	O	O:0.999919
streams	O	O:0.998866
will	O	O:0.999841
repeat	O	O:0.756708
after	O	O:0.998965
.	O	O:0.999101
	
Any	O	O:0.999919
idea	O	O:0.999584
how	O	O:0.999892
I	O	O:0.999995
can	O	O:0.999682
later	O	O:0.999966
make	O	O:0.998438
1.6.2	O	O:0.994171
in	O	O:0.999888
/	O	O:0.999633
usr	O	O:0.995552
/	O	O:0.999784
local	O	O:0.936255
/	O	O:0.999890
lib	O	O:0.988229
work	O	O:0.999222
with	O	O:0.999346
python-dbg	O	O:0.998676
?	O	O:0.999960
	
Because	O	O:0.999077
I'm	O	O:0.999565
still	O	O:0.999405
not	O	O:0.999803
quite	O	O:0.999690
grasping	O	O:0.997769
the	O	O:0.998444
method	O	O:0.980618
and	O	O:0.999934
there	O	O:0.999709
seems	O	O:0.999737
to	O	O:0.999973
be	O	O:0.999979
simpler	O	O:0.999962
ways	O	O:0.999828
to	O	O:0.999983
solve	O	O:0.999973
the	O	O:0.999967
problem	O	O:0.997412
,	O	O:0.999985
I'm	O	O:0.999983
just	O	O:0.999804
going	O	O:0.999792
to	O	O:0.999698
put	O	O:0.999934
this	O	O:0.999897
here	O	O:0.996237
:	O	O:0.999972
#CODE	O	O:0.999476
	
	Performance by label (#match, #model, #ref) (precision, recall, F1):
	    O: (64436, 64832, 64613) (0.9939, 0.9973, 0.9956)
	    B-API: (833, 1010, 1229) (0.8248, 0.6778, 0.7441)
	Macro-average precision, recall, F1: (0.909322, 0.837524, 0.869828)
	Item accuracy: 65269 / 65842 (0.9913)
	Instance accuracy: 2910 / 3388 (0.8589)
	Elapsed time: 2.168781 [sec] (1562.6 [instance/sec])
