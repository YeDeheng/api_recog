i	O	O:0.960063
am	O	O:0.994787
facing	O	O:0.998404
this	O	O:0.998258
strange	O	O:0.988493
behaviour	O	O:0.995433
,	O	O:0.998363
i	O	O:0.940614
got	O	O:0.999156
a	O	O:0.988724
HDFStore	B-API	O:0.532574
containing	O	O:0.990112
DataFrames	O	O:0.974490
.	O	O:0.988481
	
What	O	O:0.985834
happens	O	O:0.997827
if	O	O:0.998819
you	O	O:0.998363
do	O	O:0.997057
`	O	O:0.998899
ax.legend()	B-API	B-API:0.994632
`	O	O:0.998539
and	O	O:0.986131
`	O	O:0.998692
plt.draw()	B-API	B-API:0.998093
`	O	O:0.997642
?	O	O:0.968977
	
E.g.	O	O:0.981028
,	O	O:0.999592
you	O	O:0.999130
can	O	O:0.999586
call	O	O:0.998327
`	O	O:0.997826
pandas.isnull	B-API	B-API:0.996538
(	O	O:0.999179
the_frame	O	O:0.802570
)`	O	O:0.955075
.	O	O:0.984632
	
do	O	O:0.980283
this	O	O:0.984268
:	O	O:0.987706
``	O	O:0.995286
df.ix	B-API	B-API:0.684845
[	O	O:0.997725
0	O	O:0.992370
,	O	O:0.994538
'	O	O:0.999415
a	O	O:0.997541
']	O	O:0.972386
+=	O	O:0.986482
1	O	O:0.910816
``	O	O:0.956115
.	O	O:0.939515
	
Using	O	O:0.938285
unstack()	B-API	B-API:0.987343
is	O	O:0.997596
one	O	O:0.991991
way	O	O:0.982641
.	O	O:0.984234
	
Clearly	O	O:0.991835
I'm	O	O:0.998408
missing	O	O:0.997381
something	O	O:0.999256
as	O	O:0.997711
to	O	O:0.996337
why	O	O:0.999753
df.loc	B-API	B-API:0.784004
[:	O	O:0.994402
,	O	O:0.998900
tuple	O	O:0.976974
]	O	O:0.984658
is	O	O:0.998223
different	O	O:0.997388
than	O	O:0.993525
df	O	O:0.844395
[	O	O:0.998053
tuple	O	O:0.957880
]	O	O:0.987170
.	O	O:0.968670
	
datetime	O	O:0.784167
dtypes	B-API	B-API:0.803213
in	O	O:0.997481
pandas	O	O:0.995553
read_csv	B-API	B-API:0.679748
	
If	O	O:0.992009
you're	O	O:0.998288
using	O	O:0.998701
version	O	O:0.936913
`	O	O:0.982791
0.17.0	O	O:0.907183
`	O	O:0.998872
or	O	O:0.998916
higher	O	O:0.998883
then	O	O:0.997507
you	O	O:0.999720
can	O	O:0.999801
call	O	O:0.999825
this	O	O:0.999482
using	O	O:0.993387
`	O	O:0.990020
.dt	B-API	B-API:0.993648
.strftime	B-API	O:0.593943
`	O	O:0.994407
which	O	O:0.924170
is	O	O:0.998801
vectorised	O	O:0.728508
:	O	O:0.985143
#CODE	O	O:0.990745
	
Looks	O	O:0.998566
like	O	O:0.998351
you	O	O:0.999956
need	O	O:0.997216
histogram()	B-API	O:0.899788
of	O	O:0.997861
months	O	O:0.946005
.	O	O:0.995056
	
You	O	O:0.997494
want	O	O:0.991438
`	O	O:0.998113
.dt	B-API	B-API:0.861531
.time	B-API	B-API:0.636150
`	O	O:0.996580
see	O	O:0.987815
the	O	O:0.999528
docs	O	O:0.978027
for	O	O:0.999474
some	O	O:0.997285
more	O	O:0.995213
examples	O	O:0.997926
of	O	O:0.998735
things	O	O:0.990864
under	O	O:0.999356
the	O	O:0.998315
`	O	O:0.993990
.dt	B-API	B-API:0.996475
`	O	O:0.998485
accessor	O	O:0.878634
.	O	O:0.993634
	
pd.rolling_apply	B-API	B-API:0.969331
(	O	O:0.998078
df.exma	O	O:0.895173
,	O	O:0.997930
2	O	O:0.975654
,	O	O:0.977475
(	O	O:0.999091
df.alpha	O	O:0.704607
*	O	O:0.999096
df.exma.shift	O	O:0.777553
(	O	O:0.997621
1	O	O:0.993458
))	O	O:0.900878
+	O	O:0.975793
((	O	O:0.868252
1	O	O:0.961866
-	O	O:0.998983
df.alpha	O	O:0.798700
)	O	O:0.997572
*	O	O:0.999400
df.outperf	O	O:0.894071
))	O	O:0.913964
	
I	O	O:0.983097
suggest	O	O:0.996632
not	O	O:0.993926
using	O	O:0.997415
`	O	O:0.996101
file	O	O:0.643443
`	O	O:0.999159
for	O	O:0.999526
your	O	O:0.996182
`	O	O:0.984317
open()	B-API	B-API:0.986779
`	O	O:0.994600
object	O	O:0.935614
.	O	O:0.993802
	
If	O	O:0.995263
you	O	O:0.999558
want	O	O:0.999871
every	O	O:0.998818
value	O	O:0.999670
from	O	O:0.998303
row	O	O:0.998111
2	O	O:0.997107
you	O	O:0.997638
can	O	O:0.999849
just	O	O:0.999915
do	O	O:0.999412
`	O	O:0.998965
df.iloc	B-API	B-API:0.767916
[	O	O:0.998717
2	O	O:0.993574
]`	O	O:0.991082
or	O	O:0.995279
`	O	O:0.998809
df.iloc	B-API	B-API:0.529886
[	O	O:0.998953
2	O	O:0.989204
]	O	O:0.987718
.values	B-API	B-API:0.892928
`	O	O:0.996564
respectively	O	O:0.911538
.	O	O:0.997315
	
dtype	B-API	B-API:0.942976
:	O	O:0.975132
object	O	O:0.963905
	
Check	O	O:0.989778
out	O	O:0.994580
the	O	O:0.996366
glob	O	B-API:0.819416
module	O	O:0.966346
and	O	O:0.999390
pandas	O	O:0.996010
read_csv()	B-API	B-API:0.967093
and	O	O:0.984736
concat()	B-API	B-API:0.930429
	
`	O	O:0.976285
np.dtype	B-API	B-API:0.968165
(	O	O:0.993164
'	O	O:0.994127
datetime64	O	O:0.780357
[	O	O:0.995906
ns	O	O:0.874646
]')`	O	O:0.926799
and	O	O:0.990036
`	O	O:0.993509
np.dtype	B-API	B-API:0.990014
(	O	O:0.995757
'	O	O:0.991445
M	O	O:0.980060
8[	O	O:0.995185
ns	O	O:0.677967
]')`	O	O:0.782363
:	O	O:0.967078
#CODE	O	O:0.994611
	
Doing	O	O:0.985376
`	O	O:0.995250
pd.crosstab	B-API	B-API:0.865849
(	O	O:0.999892
rows	O	O:0.954406
=[	O	O:0.998035
df	O	O:0.960722
[	O	O:0.994046
'	O	O:0.995136
A	O	O:0.998974
']	O	O:0.997010
,	O	O:0.995284
df	O	O:0.933997
[	O	O:0.995661
'	O	O:0.997545
B	O	O:0.994829
']]	O	O:0.995630
,	O	O:0.995941
cols	O	O:0.894134
=[	O	O:0.998405
df	O	O:0.883591
[	O	O:0.994508
'	O	O:0.996358
C	O	O:0.973194
']]	O	O:0.995744
,	O	O:0.991676
margins=True	O	O:0.962946
,	O	O:0.999018
aggfu	O	O:0.938111
	
DataFrame.drop_duplicates	B-API	B-API:0.933739
and	O	O:0.988094
DataFrame.drop	B-API	B-API:0.816578
not	O	O:0.996993
removing	O	O:0.999013
rows	O	O:0.913824
	
`	O	O:0.977845
pd.rolling_mean	B-API	B-API:0.973415
(	O	O:0.999317
df	O	O:0.941583
,	O	O:0.999068
num	O	O:0.941279
)	O	O:0.999148
.dropna()	B-API	B-API:0.921170
.plot()	B-API	B-API:0.920153
`	O	O:0.988999
	
This	O	O:0.970302
is	O	O:0.999497
a	O	O:0.997117
replacement	O	O:0.995981
for	O	O:0.998100
`	O	O:0.990421
np.array_equal	B-API	B-API:0.967329
`	O	O:0.998850
which	O	O:0.956608
is	O	O:0.999226
broken	O	O:0.956320
for	O	O:0.995437
nan	O	O:0.721715
positional	O	O:0.934049
detections	O	O:0.724045
(	O	O:0.982321
and	O	O:0.999231
object	O	O:0.992153
dtypes	B-API	B-API:0.726437
)	O	O:0.995715
.	O	O:0.983309
	
It	O	O:0.991991
looks	O	O:0.998459
like	O	O:0.994156
`	O	O:0.998264
pd.unique	O	B-API:0.978411
`	O	O:0.998888
does	O	O:0.981233
not	O	O:0.999544
respect	O	O:0.997553
the	O	O:0.993250
`	O	O:0.996250
datetime64	O	B-API:0.891400
`	O	O:0.997441
dtype	B-API	B-API:0.976230
:	O	O:0.994660
#CODE	O	O:0.970969
	
df	O	O:0.866461
[	O	O:0.992956
'	O	O:0.997747
NumActivity	O	O:0.994410
']	O	O:0.995251
=	O	O:0.829818
pd.factorize	B-API	B-API:0.920502
(	O	O:0.996791
df	O	O:0.947790
[	O	O:0.995128
'	O	O:0.996728
Activity	O	O:0.983296
'])	O	O:0.994151
[	O	O:0.985532
0	O	O:0.986739
]	O	O:0.978822
+1	O	O:0.823806
works	O	O:0.979740
.	O	O:0.989412
	
calling	O	O:0.914172
`	O	O:0.973891
as_matrix()	B-API	B-API:0.996419
`	O	O:0.999415
on	O	O:0.968721
`	O	O:0.999659
df	O	O:0.773081
`	O	O:0.999146
returns	O	O:0.983522
a	O	O:0.989330
`	O	O:0.971460
numpy.ndarray	B-API	B-API:0.940056
`	O	O:0.992345
object	O	O:0.912448
#CODE	O	O:0.994230
	
And	O	O:0.990485
using	O	O:0.993965
pandas.Series.map	B-API	B-API:0.782739
:	O	O:0.958732
#CODE	O	O:0.992492
	
works	O	O:0.954612
,	O	O:0.998453
but	O	O:0.997545
I	O	O:0.999061
think	O	O:0.999309
`	O	O:0.989503
df.select_dtypes	B-API	B-API:0.976229
`	O	O:0.998842
should	O	O:0.989765
be	O	O:0.999625
preferred	O	O:0.996640
since	O	O:0.985130
it	O	O:0.999023
uses	O	O:0.994755
the	O	O:0.996297
	
Then	O	O:0.997568
you	O	O:0.999808
can	O	O:0.999899
access	O	O:0.999596
the	O	O:0.999914
relevant	O	O:0.999567
rows	O	O:0.995068
using	O	O:0.999469
groupby's	O	O:0.884064
`	O	O:0.954144
get_group	B-API	B-API:0.999612
`	O	O:0.981834
:	O	O:0.966017
#CODE	O	O:0.997787
	
It's	O	O:0.996708
not	O	O:0.996608
in	O	O:0.999855
the	O	O:0.997713
online	O	O:0.975044
docs	O	O:0.997137
,	O	O:0.999696
you	O	O:0.999896
have	O	O:0.999327
to	O	O:0.999918
check	O	O:0.999956
the	O	O:0.999342
`	O	O:0.996329
help	O	B-API:0.552463
(	O	O:0.999808
pd.bdate_range	B-API	O:0.947679
)`	O	O:0.974736
:)	O	O:0.980238
	
dtype	B-API	B-API:0.970382
:	O	O:0.990584
int64	O	O:0.576838
`	O	O:0.996279
	
dtype	B-API	B-API:0.942976
:	O	O:0.975132
object	O	O:0.963905
	
df.drop	B-API	B-API:0.907783
([	O	O:0.976797
'	O	O:0.987570
one	O	O:0.991802
'	O	O:0.997980
,	O	O:0.995962
'	O	O:0.998824
two	O	O:0.990206
'	O	O:0.998202
,	O	O:0.998100
'	O	O:0.999559
three	O	O:0.994584
']	O	O:0.995964
,	O	O:0.995189
axis=1	O	O:0.972498
,	O	O:0.998981
inplace=True	O	O:0.972821
)	O	O:0.997218
	
I	O	O:0.995092
tried	O	O:0.995915
make	O	O:0.940486
these	O	O:0.990720
'	O	O:0.997400
filenames	O	O:0.971964
'	O	O:0.999490
dataFrames	O	O:0.997904
using	O	O:0.995307
`	O	O:0.988017
pd.DataFrame	B-API	B-API:0.995463
`	O	O:0.995353
but	O	O:0.921446
wasn't	O	O:0.998384
able	O	O:0.995703
to	O	O:0.999391
do	O	O:0.999539
so	O	O:0.997551
.	O	O:0.990043
	
Try	O	O:0.990295
using	O	O:0.995138
.loc	B-API	B-API:0.950970
[	O	O:0.977089
row_index	O	O:0.819030
,	O	O:0.997381
col_indexer	O	O:0.865155
]	O	O:0.995657
=	O	O:0.990580
value	O	O:0.997666
instead	O	O:0.992375
`	O	O:0.997871
.	O	O:0.983523
	
Good	O	O:0.980536
question	O	O:0.991553
,	O	O:0.997044
`	O	O:0.993395
plt.hist	B-API	B-API:0.947342
(	O	O:0.998772
hour_list	O	O:0.910691
,	O	O:0.996331
bins=	O	O:0.934595
np.arange	B-API	B-API:0.949797
(	O	O:0.994612
24	O	O:0.975979
)	O	O:0.998345
-	O	O:0.996871
0.5	O	O:0.932844
)`	O	O:0.989529
will	O	O:0.994433
work	O	O:0.996456
.	O	O:0.999123
	
what	O	O:0.934504
is	O	O:0.998072
the	O	O:0.993861
-	O	O:0.995881
0.00343	O	B-API:0.506988
(	O	O:0.998396
ah	O	O:0.996570
I	O	O:0.998533
see	O	O:0.998595
,	O	O:0.998747
a	O	O:0.998637
consequence	O	O:0.964933
of	O	O:0.999282
not	O	O:0.996576
using	O	O:0.999718
right=False	O	O:0.949529
)	O	O:0.995131
,	O	O:0.992797
pd.cut	B-API	B-API:0.684213
very	O	O:0.976478
neat	O	O:0.962976
	
2	O	O:0.948641
)	O	O:0.996687
Alternatively	O	O:0.988919
,	O	O:0.998912
don't	O	O:0.999204
create	O	O:0.992154
levels	O	O:0.999755
for	O	O:0.997794
`	O	O:0.997125
aa	O	B-API:0.557418
`	O	O:0.998254
and	O	O:0.954371
`	O	O:0.999404
bb	O	B-API:0.623323
`	O	O:0.999572
using	O	O:0.873527
`	O	O:0.992598
as_index=False	O	B-API:0.949337
`	O	O:0.995699
and	O	O:0.978876
`	O	O:0.998618
pd.merge	B-API	B-API:0.992648
`	O	O:0.996510
#CODE	O	O:0.946186
	
`	O	O:0.977200
df.groupby	B-API	B-API:0.904317
(	O	O:0.999486
level	O	O:0.985486
=[	O	O:0.984926
'	O	O:0.997709
major	O	O:0.966390
'	O	O:0.997074
,	O	O:0.993383
'	O	O:0.999060
minor	O	O:0.996422
'])	O	O:0.997637
.mean()	B-API	B-API:0.968571
.dropna()	B-API	B-API:0.973282
`	O	O:0.991548
	
Argh	O	O:0.977484
,	O	O:0.999506
that	O	O:0.997110
still	O	O:0.998658
gives	O	O:0.999472
me	O	O:0.977143
`	O	O:0.997693
dtype	B-API	B-API:0.959245
(	O	O:0.992698
'	O	O:0.985984
datetime64	O	O:0.789248
[	O	O:0.997507
us	O	O:0.965745
]')`	O	O:0.954579
.	O	O:0.964048
	
or	O	O:0.997156
better	O	O:0.987199
yet	O	O:0.994617
,	O	O:0.999706
just	O	O:0.996288
don't	O	O:0.999617
specify	O	O:0.995337
a	O	O:0.998134
dtype	B-API	B-API:0.991317
:	O	O:0.991755
#CODE	O	O:0.979887
	
I	O	O:0.983346
was	O	O:0.995931
trying	O	O:0.988038
to	O	O:0.998546
do	O	O:0.999907
this	O	O:0.999170
with	O	O:0.998139
`	O	O:0.999492
df	O	O:0.932020
[	O	O:0.999119
df.shift()	B-API	B-API:0.671648
!	O	O:0.984968
=	O	O:0.992567
df	O	O:0.991611
]	O	O:0.997654
.dropna()	B-API	B-API:0.987462
.reset_index	B-API	B-API:0.806953
(	O	O:0.994312
drop=True	O	O:0.958401
)`	O	O:0.969734
but	O	O:0.989925
`	O	O:0.994500
shift()	B-API	B-API:0.994607
`	O	O:0.988144
is	O	O:0.992502
not	O	O:0.998876
behaving	O	O:0.995773
in	O	O:0.998605
the	O	O:0.997727
way	O	O:0.990594
I	O	O:0.997567
meant	O	O:0.995435
.	O	O:0.964723
	
`	O	O:0.996301
median_search_query	O	O:0.672632
=	O	O:0.982203
np.median	B-API	B-API:0.895606
(	O	O:0.996647
df.srch_query_affinity_score	O	O:0.932952
)`	O	O:0.982388
	
Example	O	O:0.991866
using	O	O:0.986938
df.asfreq	B-API	B-API:0.984614
(	O	O:0.965260
'	O	O:0.992901
Q	O	O:0.957393
')	O	O:0.975154
:	O	O:0.973494
#CODE	O	O:0.994061
	
```	O	O:0.988928
In	O	O:0.981962
[	O	O:0.997672
15	O	O:0.986731
]:	O	O:0.950186
pd.to_timedelta	B-API	B-API:0.982319
(	O	O:0.996621
s.str.replace	O	B-API:0.503808
(	O	O:0.996041
'	O	O:0.998705
hrs	O	O:0.985978
'	O	O:0.998351
,	O	O:0.997905
'	O	O:0.998659
h	O	O:0.988152
'))	O	O:0.994336
	
Python	O	O:0.963728
Dict	O	O:0.990614
,	O	O:0.995829
Lambda	O	O:0.996327
x	O	O:0.984275
,	O	O:0.993088
map()	B-API	B-API:0.620805
doesn't	O	O:0.996333
work	O	O:0.991695
	
I	O	O:0.998456
have	O	O:0.998234
tried	O	O:0.990845
to	O	O:0.998415
modify	O	O:0.999388
your	O	O:0.992483
answer	O	O:0.978811
to	O	O:0.999367
make	O	O:0.999177
it	O	O:0.999766
an	O	O:0.999614
example	O	O:0.998494
about	O	O:0.993896
modifying	O	O:0.996942
two	O	O:0.996219
columns	O	O:0.998964
like	O	O:0.997639
I	O	O:0.999663
asked	O	O:0.976280
(	O	O:0.993812
for	O	O:0.998728
one	O	O:0.997662
the	O	O:0.994095
`	O	O:0.995853
df.loc	B-API	B-API:0.945274
[:	O	O:0.996879
,	O	O:0.985355
(	O	O:0.990538
'	O	O:0.992334
A	O	O:0.996365
'	O	O:0.997668
,	O	O:0.995311
'	O	O:0.999596
a	O	O:0.995670
')]`	O	O:0.977249
works	O	O:0.998536
like	O	O:0.999040
a	O	O:0.999250
charm	O	O:0.912357
)	O	O:0.996061
.	O	O:0.971474
	
I	O	O:0.986495
thought	O	O:0.992477
np.ma.average	B-API	B-API:0.827425
is	O	O:0.997162
just	O	O:0.997370
what	O	O:0.999082
I	O	O:0.999244
need	O	O:0.996890
,	O	O:0.995338
but	O	O:0.999597
that	O	O:0.997900
also	O	O:0.999130
gives	O	O:0.999745
me	O	O:0.990379
NaN	O	O:0.929679
as	O	O:0.999887
a	O	O:0.992971
result	O	O:0.970120
.	O	O:0.993323
	
Although	O	O:0.985135
```	O	O:0.997939
pandas.cut()	B-API	B-API:0.927368
```	O	O:0.992566
is	O	O:0.996722
the	O	O:0.996546
better	O	O:0.919700
and	O	O:0.999518
more	O	O:0.990060
general	O	O:0.935415
answer	O	O:0.959570
,	O	O:0.989630
it	O	O:0.998283
looks	O	O:0.999449
like	O	O:0.996689
in	O	O:0.999879
this	O	O:0.998966
case	O	O:0.999282
you	O	O:0.999356
could	O	O:0.999499
do	O	O:0.999230
```	O	O:0.999727
df	O	O:0.899353
[	O	O:0.998391
'	O	O:0.997035
B	O	O:0.993939
']	O	O:0.986688
=	O	B-API:0.856772
(	O	O:0.994170
df.A	O	O:0.765986
/	O	O:0.996307
500	O	O:0.989360
)	O	O:0.993776
.astype	B-API	B-API:0.990100
(	O	O:0.997304
int	O	O:0.830940
)	O	O:0.995798
+	O	O:0.954195
1	O	O:0.956130
```	O	O:0.992818
.	O	O:0.971041
	
outcome	O	O:0.847171
:	O	O:0.994999
displays	O	O:0.998345
good	O	O:0.984556
in	O	O:0.998103
`	O	O:0.996511
df.head()	B-API	B-API:0.994587
`	O	O:0.997704
,	O	O:0.988570
but	O	O:0.998364
reverts	O	O:0.791810
to	O	O:0.995783
scientific	O	O:0.989216
notation	O	O:0.997685
upon	O	O:0.970947
coercion	O	O:0.993723
to	O	O:0.995579
string	O	O:0.999817
concatenation	O	O:0.997933
using	O	O:0.985523
+	O	O:0.928510
operator	O	O:0.954781
	
The	O	O:0.967471
`	O	O:0.998832
ewma	B-API	B-API:0.941134
`	O	O:0.999761
case	O	O:0.984296
can	O	O:0.999671
be	O	O:0.999886
solved	O	O:0.988734
similarly	O	O:0.968695
:	O	O:0.996652
`	O	O:0.996899
df.groupby	B-API	B-API:0.794652
(	O	O:0.999240
level=0	O	O:0.964881
)	O	O:0.994329
.apply	B-API	B-API:0.976698
(	O	O:0.995413
lambda	O	O:0.959141
x	O	O:0.948029
:	O	O:0.980813
pd.ewma	B-API	B-API:0.817308
(	O	O:0.998527
x	O	O:0.974459
,	O	O:0.999489
com=2	O	O:0.986295
))`	O	O:0.944040
	
I	O	O:0.991132
didn't	O	O:0.992835
realise	O	O:0.977062
that	O	O:0.991411
`	O	O:0.998443
.resample()	B-API	B-API:0.997894
`	O	O:0.996263
wasn't	O	O:0.896503
inplace	O	O:0.791688
!	O	O:0.976368
	
I	O	O:0.993585
can't	O	O:0.999339
think	O	O:0.995013
of	O	O:0.999836
a	O	O:0.996365
way	O	O:0.993774
to	O	O:0.998357
overload	O	O:0.999667
the	O	O:0.990563
`	O	O:0.993796
.loc	B-API	B-API:0.986332
`	O	O:0.999561
method	O	O:0.991765
properly	O	O:0.996643
!	O	O:0.995354
	
Do	O	O:0.996139
I	O	O:0.999769
have	O	O:0.999469
to	O	O:0.998721
specific	O	O:0.999937
the	O	O:0.997655
dtypes	B-API	O:0.535096
to	O	O:0.999024
make	O	O:0.999902
this	O	O:0.999389
work	O	O:0.996157
?	O	O:0.999133
	
It	O	O:0.987527
appears	O	O:0.997755
that	O	O:0.998219
the	O	O:0.998171
`	O	O:0.998360
applymap	B-API	B-API:0.963153
`	O	O:0.997518
is	O	O:0.996799
the	O	O:0.998322
culprit	O	O:0.976053
here	O	O:0.919740
:-)	O	O:0.989229
	
"	O	O:0.985532
"	O	O:0.972186
.join	B-API	B-API:0.948559
(	O	O:0.997912
header.split()	O	O:0.504642
)	O	O:0.992957
.split	B-API	B-API:0.944943
(	O	O:0.990554
'	O	O:0.994852
')	O	O:0.993087
	
I	O	O:0.998554
want	O	O:0.990732
df.append	B-API	B-API:0.962438
(	O	O:0.998385
df2	O	O:0.971825
)	O	O:0.997649
in	O	O:0.999114
this	O	O:0.998395
case	O	O:0.998779
to	O	O:0.997274
be	O	O:0.996961
:	O	O:0.996960
#CODE	O	O:0.990210
	
I	O	O:0.996482
completely	O	O:0.996811
forgot	O	O:0.929897
about	O	O:0.971463
.loc	B-API	B-API:0.736052
	
It	O	O:0.990748
sounds	O	O:0.998615
like	O	O:0.999489
maybe	O	O:0.999189
you	O	O:0.999759
want	O	O:0.998457
`	O	O:0.998725
pandas.concat	B-API	B-API:0.949382
`	O	O:0.998890
?	O	O:0.975310
	
Is	O	O:0.994111
there	O	O:0.999375
anything	O	O:0.994365
in	O	O:0.999253
pandas	O	O:0.999588
that	O	O:0.993283
is	O	O:0.999171
the	O	O:0.998826
opposite	O	O:0.992962
to	O	O:0.995924
`	O	O:0.999817
.dropna()	B-API	B-API:0.983626
`	O	O:0.999084
?	O	O:0.980082
	
Datetimes	O	O:0.864634
are	O	O:0.995111
handled	O	O:0.987638
if	O	O:0.999164
they	O	O:0.998908
can	O	O:0.999577
properly	O	O:0.999955
be	O	O:0.999697
converted	O	O:0.970090
(	O	O:0.992445
e.g.	O	O:0.997360
they	O	O:0.998803
have	O	O:0.999743
a	O	O:0.999865
dtype	B-API	B-API:0.649063
of	O	O:0.986430
'	O	O:0.970501
datetime64	O	O:0.933848
[	O	O:0.996590
ns	O	O:0.907263
]'	O	O:0.983840
,	O	O:0.990510
notably	O	O:0.988332
datetimes.date	O	O:0.639938
are	O	O:0.991954
NOT	O	O:0.986229
handled	O	O:0.875286
(	O	O:0.989775
NaN	O	O:0.825242
are	O	O:0.999271
a	O	O:0.999618
different	O	O:0.969032
story	O	O:0.982878
and	O	O:0.999379
depending	O	O:0.996769
on	O	O:0.997810
usage	O	O:0.994039
can	O	O:0.998843
cause	O	O:0.999293
the	O	O:0.999768
entire	O	O:0.982771
column	O	O:0.999476
type	O	O:0.968272
to	O	O:0.999459
be	O	O:0.999965
mishandled	O	O:0.986663
)	O	O:0.995013
	
The	O	O:0.976922
`	O	O:0.997283
args	O	O:0.525913
`	O	O:0.998779
and	O	O:0.979171
`	O	O:0.999069
kwargs	O	B-API:0.570604
`	O	O:0.998082
parameters	O	O:0.776655
were	O	O:0.998041
added	O	O:0.995040
to	O	O:0.996694
`	O	O:0.999611
rolling_apply	B-API	B-API:0.993488
`	O	O:0.998591
in	O	O:0.988078
Pandas	O	O:0.993055
version	O	O:0.977794
0.14.0	O	O:0.925244
.	O	O:0.985969
	
try	O	O:0.960989
``	O	O:0.993815
df	O	O:0.892497
[	O	O:0.997464
'	O	O:0.996904
LastName	O	O:0.980905
']	O	O:0.991008
=	O	O:0.810915
df.apply	B-API	B-API:0.884822
(	O	O:0.997707
updateDataframe	O	O:0.951008
)``	O	O:0.973850
,	O	O:0.996775
but	O	O:0.999456
even	O	O:0.993839
better	O	O:0.939742
is	O	O:0.995286
:	O	O:0.974674
``	O	O:0.995159
df.ix	B-API	B-API:0.813729
[	O	O:0.998376
df	O	O:0.957299
[	O	O:0.992852
'	O	O:0.997125
LastName	O	O:0.982107
']	O	O:0.983191
==	O	O:0.860515
'	O	O:0.990622
Joe	O	O:0.982023
'	O	O:0.997395
,	O	O:0.997412
'	O	O:0.998424
LastName	O	O:0.987087
']	O	O:0.992044
=	O	O:0.840120
'	O	O:0.988524
Black	O	O:0.992187
'``	O	O:0.983742
	
There	O	O:0.990409
should	O	O:0.998357
be	O	O:0.999826
no	O	O:0.998730
problem	O	O:0.962886
;	O	O:0.993179
`	O	O:0.987913
plt.plot	B-API	O:0.620848
`	O	O:0.998282
and	O	O:0.982908
`	O	O:0.998536
plt.fill_between	B-API	B-API:0.891258
`	O	O:0.999035
accept	O	O:0.906086
arrays	O	O:0.997321
of	O	O:0.998249
dtype	B-API	B-API:0.861835
`	O	O:0.997772
datetime64	O	B-API:0.819747
[	O	O:0.998301
ns	O	O:0.819588
]`	O	O:0.993289
just	O	O:0.978781
fine	O	O:0.992227
.	O	O:0.993689
	
You	O	O:0.992848
could	O	O:0.990364
try	O	O:0.999499
pandas	O	O:0.993433
pivot()	B-API	B-API:0.727398
.	O	O:0.977995
	
What	O	O:0.985834
happens	O	O:0.997827
if	O	O:0.998819
you	O	O:0.998363
do	O	O:0.997057
`	O	O:0.998899
ax.legend()	B-API	B-API:0.994632
`	O	O:0.998539
and	O	O:0.986131
`	O	O:0.998692
plt.draw()	B-API	B-API:0.998093
`	O	O:0.997642
?	O	O:0.968977
	
Pandas	O	O:0.992773
Python	O	O:0.939244
read_csv	B-API	B-API:0.767320
error_bad_lines	O	B-API:0.544820
producing	O	O:0.991973
shell	O	O:0.987034
feedback	O	O:0.984642
	
Though	O	O:0.991583
in	O	O:0.999683
some	O	O:0.993667
respects	O	O:0.992896
,	O	O:0.999280
the	O	O:0.994058
np.clip	B-API	B-API:0.750921
or	O	O:0.998761
np.max	O	O:0.737681
solutions	O	O:0.995646
are	O	O:0.998904
more	O	O:0.974189
easily	O	O:0.997321
read	O	O:0.955994
,	O	O:0.999233
I	O	O:0.999357
think	O	O:0.999364
this	O	O:0.944630
is	O	O:0.998908
the	O	O:0.999427
most	O	O:0.986394
precise	O	O:0.986746
answer	O	O:0.990355
to	O	O:0.998842
my	O	O:0.999941
original	O	O:0.991552
question	O	O:0.992327
.	O	O:0.989198
	
Did	O	O:0.996809
you	O	O:0.998194
try	O	O:0.999408
setting	O	O:0.995528
the	O	O:0.998245
delimiter	O	O:0.995094
to	O	O:0.998890
semicolon	O	O:0.999856
in	O	O:0.999916
your	O	O:0.998313
`	O	O:0.998062
read_csv	B-API	B-API:0.966766
`	O	O:0.999039
call	O	O:0.718015
?	O	O:0.995342
	
In	O	O:0.964939
[	O	O:0.974056
8]	O	O:0.994988
:	O	O:0.995992
%timeit	O	O:0.910953
df	O	O:0.978195
[	O	O:0.996003
'	O	O:0.998690
r	O	O:0.995474
']	O	O:0.997030
=	O	O:0.971225
df	O	O:0.874686
[[	O	O:0.990727
'	O	O:0.997902
minor	O	O:0.970010
'	O	O:0.997119
,	O	O:0.994694
'	O	O:0.999040
major	O	O:0.995470
']]	O	O:0.994535
.abs()	B-API	B-API:0.991251
.max	B-API	B-API:0.934889
(	O	O:0.997389
axis=1	O	O:0.949398
)	O	O:0.996525
	
I	O	O:0.997513
guess	O	O:0.998439
my	O	O:0.992958
confusion	O	O:0.998353
stems	O	O:0.993669
from	O	O:0.998209
the	O	O:0.998700
fact	O	O:0.995265
that	O	O:0.997811
the	O	O:0.997546
Series.value_counts	B-API	B-API:0.759537
doesn't	O	O:0.996946
seem	O	O:0.997937
to	O	O:0.999873
fit	O	O:0.999565
into	O	O:0.997223
the	O	O:0.999553
arguments	O	O:0.996984
required	O	O:0.996859
by	O	O:0.998955
the	O	O:0.979895
df.apply	B-API	B-API:0.926944
method	O	O:0.990674
.	O	O:0.987683
	
The	O	O:0.988621
problem	O	O:0.933074
is	O	O:0.999167
that	O	O:0.986642
`	O	O:0.999907
a	O	O:0.977429
`	O	O:0.980946
is	O	O:0.995655
dtype	B-API	B-API:0.744350
`	O	O:0.986182
object	O	B-API:0.617340
`	O	O:0.997265
.	O	O:0.965119
	
try	O	O:0.960663
`	O	O:0.998922
video_base	O	O:0.899763
=	O	O:0.986556
pd.merge	B-API	B-API:0.921931
(	O	O:0.990217
df_one	O	O:0.778574
,	O	O:0.997854
df_two	O	O:0.674721
[[	O	O:0.989019
'	O	O:0.998504
count_watched_yeterday	O	O:0.942784
']]	O	O:0.996952
,	O	O:0.991918
how=	O	O:0.945971
'	O	O:0.998729
left	O	O:0.944751
'	O	O:0.998271
,	O	O:0.998631
left_index=True	O	O:0.940877
,	O	O:0.998436
right_index=True	O	O:0.974622
)`	O	O:0.983460
	
ax.xaxis.set_major_locator	O	B-API:0.920608
(	O	O:0.978316
MultipleLocator	B-API	B-API:0.595338
(	O	O:0.996973
10	O	O:0.984071
))	O	O:0.921681
	
Actually	O	O:0.995597
I	O	O:0.999444
think	O	O:0.998987
you	O	O:0.989638
want	O	O:0.985036
:	O	O:0.998674
`	O	O:0.999100
pd.concat	B-API	B-API:0.844786
([	O	O:0.998790
df_may	O	O:0.761780
,	O	O:0.999192
df_jun	O	O:0.919067
]	O	O:0.995633
,	O	O:0.997672
axis=0	O	O:0.984706
,	O	O:0.998448
ignore_index=True	O	O:0.950506
)`	O	O:0.983285
	
Maybe	O	O:0.994989
there	O	O:0.988985
is	O	O:0.999806
a	O	O:0.997245
better	O	O:0.928763
approach	O	O:0.991188
thats	O	O:0.972281
takes	O	O:0.996774
advantage	O	O:0.999484
of	O	O:0.999306
features	O	O:0.972108
of	O	O:0.998231
the	O	O:0.995897
Pandas.DataFrame	B-API	O:0.998614
class	O	O:0.995859
?	O	O:0.996179
	
Try	O	O:0.968841
`	O	O:0.997632
df.loc	B-API	B-API:0.885024
[	O	O:0.996199
'	O	O:0.999218
a	O	O:0.997917
']`	O	O:0.976563
instead	O	O:0.995210
.	O	O:0.992963
	
Then	O	O:0.997219
this	O	O:0.997598
should	O	O:0.999002
work	O	O:0.994802
:	O	O:0.999737
`	O	O:0.999749
df	O	O:0.956975
[	O	O:0.998678
'	O	O:0.997791
Gene.Symbol	O	O:0.975728
']	O	O:0.996108
=	O	O:0.962999
df	O	O:0.928633
[	O	O:0.992997
'	O	O:0.997597
Gene.Symbol	O	O:0.966874
']	O	O:0.991480
.str	B-API	B-API:0.521233
.strip()	B-API	B-API:0.951910
.str	B-API	O:0.843281
.upper()	B-API	B-API:0.918456
`	O	O:0.990037
	
then	O	O:0.943220
[	O	O:0.998534
`	O	O:0.999349
df.groupy	O	B-API:0.790772
(	O	O:0.996423
'	O	O:0.996997
key	O	O:0.998183
')	O	O:0.990971
.agg	B-API	B-API:0.971001
(	O	O:0.996884
...	O	O:0.974297
)`]	O	B-API:0.553356
(	O	O:0.992930
#URL	O	O:0.986125
)	O	O:0.998402
might	O	O:0.994450
be	O	O:0.999788
what	O	O:0.998710
you	O	O:0.995226
are	O	O:0.999482
looking	O	O:0.996381
for	O	O:0.997083
.	O	O:0.981678
	
DataFrame.apply	B-API	B-API:0.953356
in	O	O:0.992155
python	O	O:0.983193
pandas	O	O:0.991835
alters	O	O:0.993010
both	O	O:0.993280
original	O	O:0.965562
and	O	O:0.999386
duplicate	O	O:0.996734
DataFrames	O	O:0.955567
	
you	O	O:0.989173
might	O	O:0.999679
want	O	O:0.999108
to	O	O:0.999279
try	O	O:0.999711
`	O	O:0.998816
df.iloc	B-API	O:0.552311
[	O	O:0.999456
0	O	O:0.994595
]`	O	O:0.988710
rather	O	O:0.992962
than	O	O:0.992458
`	O	O:0.996385
df.iloc	B-API	B-API:0.811584
(	O	O:0.998576
0	O	O:0.985888
)`	O	O:0.948166
.	O	O:0.972160
	
and	O	O:0.996629
,	O	O:0.998873
`	O	O:0.984532
ts.asfreq	O	B-API:0.984017
(	O	O:0.997771
'	O	O:0.996436
H	O	O:0.972316
'	O	O:0.998117
,	O	O:0.996662
method=	O	O:0.954188
'	O	O:0.997141
ffill	B-API	O:0.676322
')`	O	O:0.998860
to	O	O:0.997893
have	O	O:0.999749
hourly	O	O:0.974168
frequency	O	O:0.991607
.	O	O:0.975375
	
I	O	O:0.993186
tried	O	O:0.998637
something	O	O:0.996104
like	O	O:0.992431
`	O	O:0.998814
set_index	B-API	B-API:0.993953
`	O	O:0.999140
,	O	O:0.968799
`	O	O:0.999417
pd.factorize()	B-API	B-API:0.965830
`	O	O:0.998443
and	O	O:0.975139
`	O	O:0.999019
index_col	O	B-API:0.996834
`	O	O:0.995429
but	O	O:0.991641
they	O	O:0.995371
do	O	O:0.997159
not	O	O:0.998616
work	O	O:0.986095
.	O	O:0.997281
	
So	O	O:0.995586
df	O	O:0.979183
=	O	O:0.997995
df.reindex()	B-API	B-API:0.919411
results	O	O:0.992138
in	O	O:0.999014
the	O	O:0.999400
same	O	O:0.944769
indexing	O	O:0.992764
...	O	O:0.988260
	
I	O	O:0.995532
think	O	O:0.999449
this	O	O:0.983787
solution	O	O:0.995621
will	O	O:0.995945
execute	O	O:0.991144
faster	O	O:0.998197
than	O	O:0.998413
using	O	O:0.988405
iterrows()	B-API	B-API:0.970153
,	O	O:0.972400
but	O	O:0.973765
I'm	O	O:0.992709
not	O	O:0.999133
sure	O	O:0.992879
.	O	O:0.993137
	
One	O	O:0.991454
option	O	O:0.997152
using	O	O:0.996440
`	O	O:0.979177
df.reindex	B-API	B-API:0.996751
`	O	O:0.985913
:	O	O:0.945214
#CODE	O	O:0.997770
	
I	O	O:0.996924
am	O	O:0.999339
using	O	O:0.998086
dtype	B-API	B-API:0.669294
as	O	O:0.995354
suggested	O	O:0.844802
in	O	O:0.998341
the	O	O:0.994856
answer	O	O:0.975320
there	O	O:0.988691
.	O	O:0.993140
	
You	O	O:0.988255
might	O	O:0.997305
be	O	O:0.999452
interested	O	O:0.995597
in	O	O:0.986272
`	O	O:0.989373
pd.cut	B-API	B-API:0.998658
`	O	O:0.989798
:	O	O:0.969343
#CODE	O	O:0.997798
	
df.groupby	B-API	B-API:0.956277
(	O	O:0.985261
'	O	O:0.988149
A	O	O:0.999324
')	O	O:0.997475
.size()	B-API	B-API:0.979035
.apply	B-API	B-API:0.948427
(	O	O:0.993480
lambda	O	O:0.962987
x	O	O:0.910767
:	O	O:0.991167
float	O	O:0.749303
(	O	O:0.999235
x	O	O:0.980827
)	O	O:0.997967
/	O	O:0.980428
df.groupby	B-API	B-API:0.896881
(	O	O:0.985999
'	O	O:0.985851
A	O	O:0.999320
')	O	O:0.998671
.size()	B-API	B-API:0.951877
.sum()	B-API	B-API:0.910148
*100	O	O:0.965841
)	O	O:0.994566
	
`	O	O:0.984418
df.apply()	B-API	B-API:0.999757
`	O	O:0.998679
works	O	O:0.976289
off	O	O:0.999747
a	O	O:0.999173
single	O	O:0.927772
row	O	O:0.997087
,	O	O:0.997238
`	O	O:0.996579
shift()	B-API	B-API:0.996610
`	O	O:0.998451
doesnt	O	O:0.990874
seem	O	O:0.998502
to	O	O:0.999604
work	O	O:0.998973
.	O	O:0.998060
	
Could	O	O:0.983829
you	O	O:0.991968
try	O	O:0.998198
this	O	O:0.993723
:	O	O:0.999482
`	O	O:0.999744
df	O	O:0.951952
[	O	O:0.998310
'	O	O:0.994879
GC	O	O:0.998636
content	O	O:0.996686
']	O	O:0.992970
=	O	O:0.981471
df	O	O:0.864680
[[	O	O:0.988739
'	O	O:0.997940
oligo_sequence	O	O:0.942470
']]	O	O:0.990788
.apply	B-API	B-API:0.973296
(	O	O:0.996482
lambda	O	O:0.962217
row	O	O:0.979580
:	O	O:0.980556
GC	O	O:0.992117
(	O	O:0.999202
row	O	O:0.995771
)	O	O:0.999249
,	O	O:0.998730
axis=1	O	O:0.987167
)`	O	O:0.976143
	
And	O	O:0.992882
,	O	O:0.998443
`	O	O:0.999220
pd.eval()	B-API	B-API:0.948539
`	O	O:0.999401
works	O	O:0.997887
well	O	O:0.999610
with	O	O:0.997165
expressions	O	O:0.989397
containing	O	O:0.997757
large	O	O:0.978349
arrays	O	O:0.936400
#CODE	O	O:0.980146
	
The	O	O:0.997101
eventual	O	O:0.993047
goal	O	O:0.997237
being	O	O:0.992178
to	O	O:0.997613
arrange	O	O:0.996335
hierarchically	O	O:0.999875
to	O	O:0.998784
weekday	B-API	O:0.998781
hour-range	O	O:0.963486
,	O	O:0.999755
something	O	O:0.998610
like	O	O:0.960435
:	O	O:0.998561
#CODE	O	O:0.997128
	
Reading	O	O:0.982837
about	O	O:0.962544
`	O	O:0.996650
applymap	B-API	B-API:0.975389
`	O	O:0.999417
I	O	O:0.987732
wondered	O	O:0.997714
if	O	O:0.991561
there	O	O:0.965905
is	O	O:0.999720
a	O	O:0.997249
similar	O	O:0.986741
way	O	O:0.997021
of	O	O:0.995600
defining	O	O:0.956751
and	O	O:0.999840
applying	O	O:0.986765
operators	O	O:0.973718
that	O	O:0.998535
work	O	O:0.999534
on	O	O:0.999966
pairs	O	O:0.997941
of	O	O:0.999051
dataframes	O	O:0.968230
.	O	O:0.995288
	
Executing	O	O:0.997134
your	O	O:0.995325
code	O	O:0.984216
with	O	O:0.998325
pandas	O	O:0.999346
0.16.2	O	O:0.997796
yielded	O	O:0.974366
the	O	O:0.999625
two	O	O:0.998094
columns	O	O:0.998110
with	O	O:0.998029
dtype	B-API	O:0.731374
datetime64	O	O:0.845942
[	O	O:0.984906
ns	O	O:0.862232
]	O	O:0.975539
.	O	O:0.935807
	
`	O	O:0.996548
df	O	O:0.877704
[	O	O:0.998593
'	O	O:0.996393
price_trend	O	O:0.963208
']	O	O:0.991566
.apply	B-API	B-API:0.981809
(	O	O:0.992563
lambda	O	O:0.989029
x	O	O:0.949653
:[	O	O:0.993218
i.split	O	O:0.628287
(	O	O:0.955236
'	O	O:0.988928
:	O	O:0.998034
')	O	O:0.997340
for	O	O:0.999082
i	O	O:0.940729
in	O	O:0.998479
x	O	O:0.960195
])`	O	O:0.992546
#CODE	O	O:0.984800
	
Here	O	O:0.989436
the	O	O:0.999569
new	O	O:0.989161
value	O	O:0.989159
AND	O	O:0.996440
the	O	O:0.999494
existing	O	O:0.984939
dtype	B-API	O:0.509471
of	O	O:0.997811
the	O	O:0.990499
column	O	O:0.993717
matters	O	O:0.967113
.	O	O:0.992993
	
how	O	O:0.998440
about	O	O:0.996838
using	O	O:0.998900
the	O	O:0.968765
`	O	O:0.989856
pd.DataFrame.drop_duplicates()	B-API	B-API:0.992933
`	O	O:0.996352
method	O	O:0.991477
?	O	O:0.997508
	
dtype	B-API	B-API:0.945775
:	O	O:0.990427
timedelta64	O	O:0.504342
[	O	O:0.998204
ns	O	O:0.910449
]```	O	O:0.982971
	
`	O	O:0.995320
gg	O	O:0.927324
[	O	O:0.996977
'	O	O:0.998826
cumt	O	O:0.986672
']	O	O:0.995155
=	O	O:0.959770
gg.apply	O	B-API:0.509427
(	O	O:0.993708
lambda	O	O:0.982687
x	O	O:0.926979
:	O	O:0.995689
x	O	O:0.989137
[	O	O:0.998074
'	O	O:0.999491
tavg	O	O:0.968824
']	O	O:0.985651
+	O	O:0.980498
x	O	O:0.956567
[	O	O:0.994828
'	O	O:0.999381
tavg	O	O:0.969364
']	O	O:0.986644
.shift	B-API	B-API:0.980268
(	O	O:0.995310
1	O	O:0.980664
)	O	O:0.997713
[	O	O:0.991726
1	O	O:0.983833
:]	O	O:0.994091
)`	O	O:0.962176
	
"	O	O:0.985532
"	O	O:0.972186
.join	B-API	B-API:0.948559
(	O	O:0.997912
header.split()	O	O:0.504642
)	O	O:0.992957
.split	B-API	B-API:0.944943
(	O	O:0.990554
'	O	O:0.994852
')	O	O:0.993087
	
print	O	O:0.876486
'	O	O:0.997346
\nAfter	O	O:0.984071
replace\n	O	O:0.932614
'	O	O:0.997038
,	O	O:0.996571
df.replace	B-API	B-API:0.959973
(	O	O:0.986032
{	O	O:0.993091
'	O	O:0.996944
c1	O	O:0.810242
'	O	O:0.987921
:	O	O:0.998387
c1_fromto	O	O:0.951869
,	O	O:0.997966
'	O	O:0.997577
c2	O	O:0.880615
'	O	O:0.989729
:	O	O:0.998716
c2_fromto	O	O:0.901675
}	O	O:0.998371
)	O	O:0.996275
	
Profiling	O	O:0.924903
shows	O	O:0.995151
the	O	O:0.995831
culprit	O	O:0.886394
is	O	O:0.998066
obviously	O	O:0.989844
`	O	O:0.999390
B.ix	O	O:0.524414
[	O	O:0.998720
row	O	O:0.991356
[	O	O:0.995295
0	O	O:0.985701
]]	O	O:0.992904
.irow	B-API	B-API:0.763971
(	O	O:0.981428
np.searchsorted	B-API	B-API:0.939226
(	O	O:0.997957
B.ts	O	O:0.904080
[	O	O:0.997856
row	O	O:0.996275
[	O	O:0.997102
0	O	O:0.992498
]]	O	O:0.996966
,	O	O:0.996265
row	O	O:0.993821
[	O	O:0.994576
2	O	O:0.990549
])))`	O	O:0.974036
.	O	O:0.977268
	
At	O	O:0.994435
the	O	O:0.999415
first	O	O:0.998629
step	O	O:0.998289
I	O	O:0.999694
used	O	O:0.998132
`	O	O:0.994598
df.T	B-API	B-API:0.739171
`	O	O:0.999395
to	O	O:0.992753
transpose	O	O:0.999039
the	O	O:0.998394
dataframe	O	O:0.999149
,	O	O:0.998613
and	O	O:0.999478
tried	O	O:0.998219
something	O	O:0.997859
like	O	O:0.986937
`	O	O:0.999620
df.value_counts()	O	B-API:0.906423
`	O	O:0.999603
,	O	O:0.997846
however	O	O:0.998017
I'd	O	O:0.997139
	
Replace	O	O:0.965804
NaN	O	O:0.751938
in	O	O:0.999204
a	O	O:0.998854
dataframe	O	O:0.999790
with	O	O:0.999437
random	O	O:0.979713
values	O	O:0.976607
	
I	O	O:0.998673
want	O	O:0.999296
to	O	O:0.995731
replace	O	O:0.993516
all	O	O:0.999373
the	O	O:0.998865
NaN	O	O:0.937593
with	O	O:0.999223
some	O	O:0.998048
random	O	O:0.996145
values	O	O:0.990898
like	O	O:0.988587
.	O	O:0.998614
	
#CODE	O	O:0.964415
	
Resample	B-API	O:0.894850
function	O	O:0.998078
throwing	O	O:0.990270
error	O	O:0.996232
with	O	O:0.993947
Twitter	O	O:0.975245
Data	O	O:0.985829
	
I	O	O:0.998913
then	O	O:0.996558
try	O	O:0.998481
to	O	O:0.999458
resample	O	O:0.995235
for	O	O:0.992707
analysis	O	O:0.948010
#CODE	O	O:0.985647
	
I'm	O	O:0.979753
writing	O	O:0.993144
several	O	O:0.994122
pivot	O	O:0.974614
tables	O	O:0.984705
using	O	O:0.995002
pandas	O	O:0.976821
.	O	O:0.971839
	
For	O	O:0.998551
many	O	O:0.995680
of	O	O:0.999862
them	O	O:0.985310
,	O	O:0.999829
I	O	O:0.999722
need	O	O:0.998118
to	O	O:0.997724
return	O	O:0.999783
unique	O	O:0.953113
values	O	O:0.954233
.	O	O:0.987973
	
In	O	O:0.998055
a	O	O:0.998683
two-dimensional	O	O:0.955387
pivot	O	O:0.994520
table	O	O:0.997174
,	O	O:0.999626
the	O	O:0.999333
below	O	O:0.961740
code	O	O:0.989524
works	O	O:0.997767
as	O	O:0.998355
it	O	O:0.977101
should	O	O:0.992184
.	O	O:0.996919
	
When	O	O:0.996480
I	O	O:0.999620
add	O	O:0.999113
a	O	O:0.998692
third	O	O:0.958137
dimension	O	O:0.997158
,	O	O:0.999467
the	O	O:0.999398
code	O	O:0.976056
returns	O	O:0.997851
the	O	O:0.999920
count	O	O:0.904235
rather	O	O:0.998513
than	O	O:0.997706
the	O	O:0.999595
unique	O	O:0.986711
count	O	O:0.875457
.	O	O:0.994464
	
I	O	O:0.992471
suspect	O	O:0.995884
this	O	O:0.955897
has	O	O:0.999039
something	O	O:0.999070
to	O	O:0.999357
do	O	O:0.999901
with	O	O:0.997147
the	O	O:0.997284
aggfunc	B-API	B-API:0.632658
,	O	O:0.994164
but	O	O:0.996855
can't	O	O:0.998475
determine	O	O:0.989209
to	O	O:0.999557
what	O	O:0.999327
it	O	O:0.998371
should	O	O:0.999555
be	O	O:0.999601
changed	O	O:0.981853
.	O	O:0.966416
	
Use	O	O:0.997429
a	O	O:0.991332
groupby	B-API	B-API:0.885710
to	O	O:0.999097
get	O	O:0.999663
at	O	O:0.999786
each	O	O:0.994727
combination	O	O:0.999377
of	O	O:0.995911
`	O	O:0.995765
col_1	O	B-API:0.559681
`	O	O:0.997952
and	O	O:0.979065
`	O	O:0.999179
col_3	O	B-API:0.849501
`	O	O:0.999300
,	O	O:0.999211
then	O	O:0.999436
unstack	B-API	O:0.983904
to	O	O:0.998942
get	O	O:0.999881
the	O	O:0.999567
`	O	O:0.998361
col_3	O	O:0.765917
`	O	O:0.999804
values	O	O:0.977356
as	O	O:0.998369
columns	O	O:0.941306
:	O	O:0.992110
#CODE	O	O:0.997133
	
Python	O	O:0.991931
pandas	O	O:0.999473
merge	O	O:0.966471
or	O	O:0.997573
concat	O	O:0.911676
dataframes	O	O:0.982063
	
The	O	O:0.997712
data	O	O:0.972010
is	O	O:0.999625
for	O	O:0.997326
2	O	O:0.902883
products	O	O:0.723853
(	O	O:0.994038
BBG.XAMS.UL.S_pnl_pos_cost	O	O:0.726385
and	O	O:0.999588
BBG.XAMS.UNA.S_pnl_pos_cost	O	O:0.972650
)	O	O:0.999537
by	O	O:0.995450
date	O	O:0.934206
,	O	O:0.996315
in	O	O:0.999011
the	O	O:0.996992
future	O	O:0.992183
there	O	O:0.998290
will	O	O:0.997524
be	O	O:0.999885
more	O	O:0.992415
products	O	O:0.969455
.	O	O:0.979386
	
I	O	O:0.998621
want	O	O:0.998981
to	O	O:0.996521
concat	O	O:0.991844
or	O	O:0.997260
merge	O	O:0.602938
(	O	O:0.998308
not	O	O:0.999577
sure	O	O:0.998447
which	O	O:0.998305
)	O	O:0.999286
the	O	O:0.999507
list	O	O:0.986578
of	O	O:0.999469
dataframes	O	O:0.998093
into	O	O:0.997948
one	O	O:0.999568
data	O	O:0.996392
frame	O	O:0.998200
(	O	O:0.999872
called	O	O:0.989340
result	O	O:0.997888
)	O	O:0.999189
so	O	O:0.998072
they	O	O:0.997830
look	O	O:0.992968
like	O	O:0.978995
:	O	O:0.997326
#CODE	O	O:0.994994
	
where	O	O:0.993870
axis	O	O:0.938480
is	O	O:0.999717
the	O	O:0.996438
date	O	O:0.604021
.	O	O:0.982713
	
It	O	O:0.994597
looks	O	O:0.998311
like	O	O:0.999359
the	O	O:0.999896
data	O	O:0.967256
is	O	O:0.999678
merged	O	O:0.996947
by	O	O:0.998228
date	O	O:0.588886
,	O	O:0.995212
but	O	O:0.997676
I	O	O:0.999010
am	O	O:0.999506
missing	O	O:0.987619
the	O	O:0.999788
data	O	O:0.984313
for	O	O:0.999849
the	O	O:0.998920
week	O	O:0.991826
beginning	O	O:0.995604
2015-03-23	O	O:0.921063
.	O	O:0.986175
	
My	O	O:0.996213
current	O	O:0.996346
concat	O	O:0.688223
result	O	O:0.977806
dataframe	O	O:0.999726
looks	O	O:0.994654
like	O	O:0.974553
:	O	O:0.996418
#CODE	O	O:0.995832
	
Try	O	O:0.993406
using	O	O:0.992985
axis=0	O	O:0.685367
.	O	O:0.941586
	
This	O	O:0.993467
should	O	O:0.997309
concat	O	O:0.942233
column-wise	O	O:0.981602
,	O	O:0.999560
assuming	O	O:0.999057
each	O	O:0.989895
dataframe	O	O:0.999583
has	O	O:0.999169
the	O	O:0.999464
same	O	O:0.995145
column	O	O:0.996917
names	O	O:0.990735
.	O	O:0.994164
	
possible	O	O:0.991112
duplicate	O	O:0.998142
of	O	O:0.984665
[	O	O:0.996602
Pandas	O	O:0.999380
join	B-API	O:0.743690
/	O	O:0.996031
merge	B-API	O:0.894242
/	O	O:0.987611
concat	B-API	O:0.764522
two	O	O:0.997126
dataframes	O	O:0.980670
]	O	O:0.971062
(	O	O:0.994241
#URL	O	O:0.986488
)	O	O:0.995897
	
Also	O	O:0.992754
,	O	O:0.999465
how	O	O:0.999418
do	O	O:0.998364
you	O	O:0.999814
join	O	O:0.994612
this	O	O:0.999505
back	O	O:0.993453
to	O	O:0.999598
original	O	O:0.999281
dataframe	O	O:0.999831
?	O	O:0.996084
	
We	O	O:0.994508
can	O	O:0.998004
resample	O	O:0.997575
this	O	O:0.998559
to	O	O:0.999532
days	O	O:0.998680
;	O	O:0.999058
it'll	O	O:0.997941
be	O	O:0.999877
a	O	O:0.999486
much	O	O:0.546997
longer	O	O:0.998731
timeseries	O	O:0.995084
,	O	O:0.999744
of	O	O:0.998882
course	O	O:0.982782
,	O	O:0.999599
but	O	O:0.991662
memory	O	O:0.953351
is	O	O:0.998391
cheap	O	O:0.873879
and	O	O:0.998361
I'm	O	O:0.990640
lazy	O	O:0.546756
:	O	O:0.995604
#CODE	O	O:0.992778
	
How	O	O:0.996370
do	O	O:0.997616
I	O	O:0.999593
merge	O	O:0.969730
the	O	O:0.987915
birth	O	O:0.987549
rate	O	O:0.998514
back	O	O:0.975041
to	O	O:0.999861
the	O	O:0.999965
original	O	O:0.997057
table	O	O:0.997579
?	O	O:0.996600
	
Indexes	O	O:0.942232
aren't	O	O:0.969402
compatible	O	O:0.975863
...	O	O:0.988836
	
Turns	O	O:0.984755
out	O	O:0.991734
size	O	O:0.990402
isn't	O	O:0.998638
such	O	O:0.999194
an	O	O:0.998706
issue	O	O:0.931288
.	O	O:0.978472
	
Python	O	O:0.877330
&	O	O:0.979147
Pandas	O	O:0.966379
:	O	O:0.994494
Unable	O	O:0.996639
to	O	O:0.999798
drop	O	O:0.993094
columns	O	O:0.996692
	
I	O	O:0.995560
try	O	O:0.999144
to	O	O:0.997137
drop	O	O:0.996421
the	O	O:0.999473
data	O	O:0.978709
,	O	O:0.998503
but	O	O:0.999269
it	O	O:0.997907
reports	O	O:0.999376
some	O	O:0.991798
column	O	O:0.986541
does	O	O:0.990365
not	O	O:0.999110
exist	O	O:0.998324
.	O	O:0.995754
	
#CODE	O	O:0.964415
	
@USER	O	O:0.955757
,	O	O:0.997536
that's	O	O:0.996554
possible	O	O:0.980403
,	O	O:0.999582
but	O	O:0.998109
I	O	O:0.997828
don't	O	O:0.999763
know	O	O:0.993013
how	O	O:0.999156
to	O	O:0.998865
deal	O	O:0.999385
with	O	O:0.998050
it	O	O:0.996249
.	O	O:0.998064
	
In	O	O:0.996022
my	O	O:0.997844
previous	O	O:0.997097
experience	O	O:0.988851
with	O	O:0.993301
pandas	O	O:0.997733
,	O	O:0.999709
it	O	O:0.999807
will	O	O:0.999511
automatically	O	O:0.999825
turn	O	O:0.994756
the	O	O:0.998819
second	O	O:0.976491
`	O	O:0.998213
Q	O	O:0.879074
`	O	O:0.999789
into	O	B-API:0.726191
`	O	O:0.999301
Q.1	O	B-API:0.638133
`	O	O:0.999757
when	O	O:0.983547
reading	O	O:0.998778
the	O	O:0.999359
data	O	O:0.965874
.	O	O:0.993954
	
However	O	O:0.995716
,	O	O:0.998867
in	O	O:0.999118
my	O	O:0.995514
case	O	O:0.997126
,	O	O:0.999474
it	O	O:0.994797
failed	O	O:0.985111
to	O	O:0.998110
do	O	O:0.999298
it	O	O:0.998483
,	O	O:0.998859
and	O	O:0.999645
I	O	O:0.997186
don't	O	O:0.998471
know	O	O:0.971294
why	O	O:0.996407
.	O	O:0.985052
	
However	O	O:0.982126
,	O	O:0.997787
This	O	O:0.998956
it	O	O:0.997856
cannot	O	O:0.999066
`	O	O:0.999850
drop	B-API	B-API:0.873812
`	O	O:0.998917
`	O	O:0.995740
NCDC	O	O:0.799907
`	O	O:0.997864
either	O	O:0.966363
.	O	O:0.996223
	
You	O	O:0.996439
can	O	O:0.999767
then	O	O:0.999860
drop	O	O:0.998852
your	O	O:0.998402
columns	O	O:0.976815
:	O	O:0.997276
#CODE	O	O:0.997275
	
I	O	O:0.995835
would	O	O:0.999785
like	O	O:0.998417
to	O	O:0.999966
take	O	O:0.999972
a	O	O:0.999829
given	O	O:0.982917
row	O	O:0.998976
from	O	O:0.997184
a	O	O:0.997127
DataFrame	O	O:0.998970
and	O	O:0.999781
prepend	O	O:0.993755
or	O	O:0.998332
append	O	O:0.944051
to	O	O:0.998053
the	O	O:0.999775
same	O	O:0.984491
DataFrame	O	O:0.998872
.	O	O:0.996919
	
Rather	O	O:0.997403
than	O	O:0.993538
concat	O	O:0.839534
I	O	O:0.996612
would	O	O:0.999889
just	O	O:0.999734
assign	O	O:0.998761
directly	O	O:0.990199
to	O	O:0.999323
the	O	O:0.999950
df	O	O:0.923562
after	O	O:0.996989
`	O	O:0.998777
shift	O	B-API:0.679798
`	O	O:0.999071
ing	O	O:0.854789
,	O	O:0.999917
then	O	O:0.987443
use	O	O:0.997947
`	O	O:0.999024
iloc	B-API	B-API:0.896318
`	O	O:0.999621
to	O	O:0.993069
reference	O	O:0.999966
the	O	O:0.998808
position	O	O:0.992689
you	O	O:0.999564
want	O	O:0.999796
to	O	O:0.999737
assign	O	O:0.999592
the	O	O:0.999165
row	O	O:0.996553
,	O	O:0.999704
you	O	O:0.999813
have	O	O:0.999395
to	O	O:0.999871
call	O	O:0.999047
`	O	O:0.998283
squeeze	B-API	B-API:0.859237
`	O	O:0.999396
so	O	O:0.998008
that	O	O:0.999691
you	O	O:0.999762
assign	O	O:0.996050
just	O	O:0.999421
the	O	O:0.999749
values	O	O:0.975397
and	O	O:0.999641
lose	O	O:0.996340
the	O	O:0.997687
original	O	O:0.991609
index	O	O:0.999801
value	O	O:0.998893
otherwise	O	O:0.999142
it'll	O	O:0.999369
raise	O	O:0.996044
a	O	O:0.993227
`	O	O:0.983072
ValueError	O	O:0.616719
`	O	O:0.992875
:	O	O:0.971426
#CODE	O	O:0.997792
	
To	O	O:0.997802
insert	O	O:0.969087
at	O	O:0.999532
the	O	O:0.996671
end	O	O:0.781029
:	O	O:0.987394
#CODE	O	O:0.992900
	
I'm	O	O:0.990160
not	O	O:0.999423
sure	O	O:0.996388
exactly	O	O:0.998959
what	O	O:0.994963
you're	O	O:0.998001
expecting	O	O:0.996726
,	O	O:0.999622
but	O	O:0.999319
you	O	O:0.999275
could	O	O:0.999752
replace	O	O:0.999216
your	O	O:0.999497
lists	O	O:0.990815
with	O	O:0.999224
numpy	O	O:0.991362
arrays	O	O:0.954112
(	O	O:0.997375
I	O	O:0.998862
don't	O	O:0.999094
think	O	O:0.989792
it'll	O	O:0.997769
improve	O	O:0.992866
your	O	O:0.998083
specific	O	O:0.993214
code	O	O:0.865461
):	O	O:0.993939
#CODE	O	O:0.993309
	
What	O	O:0.970533
is	O	O:0.998119
the	O	O:0.998797
best	O	O:0.971580
way	O	O:0.995275
for	O	O:0.998877
me	O	O:0.992031
to	O	O:0.997423
get	O	O:0.999958
this	O	O:0.999841
data	O	O:0.999659
into	O	O:0.993117
Pandas	O	O:0.994748
?	O	O:0.985694
	
Is	O	O:0.995939
there	O	O:0.998967
a	O	O:0.999380
standard	O	O:0.971244
way	O	O:0.997334
I	O	O:0.998940
could	O	O:0.999011
use	O	O:0.994415
`	O	O:0.989161
read_table	B-API	B-API:0.987885
`	O	O:0.999198
or	O	O:0.999289
some	O	O:0.996472
similar	O	O:0.992928
function	O	O:0.995992
to	O	O:0.998719
read	O	O:0.998385
this	O	O:0.999805
file	O	O:0.997302
directly	O	O:0.993904
?	O	O:0.996893
	
Should	O	O:0.995657
I	O	O:0.998971
write	O	O:0.999224
a	O	O:0.967079
script	O	O:0.993351
to	O	O:0.999481
insert	O	O:0.999359
commas	O	O:0.998765
where	O	O:0.998639
all	O	O:0.999529
the	O	O:0.998666
column	O	O:0.989322
breaks	O	O:0.960276
are	O	O:0.997476
and	O	O:0.999337
then	O	O:0.998349
read	O	O:0.982150
it	O	O:0.999493
in	O	O:0.999195
as	O	O:0.998962
CSV	O	O:0.969005
?	O	O:0.990741
	
(	O	O:0.993371
I'd	O	O:0.999755
just	O	O:0.998032
do	O	O:0.998807
the	O	O:0.996552
latter	O	O:0.932505
,	O	O:0.995827
but	O	O:0.995447
I'm	O	O:0.999158
also	O	O:0.999166
interested	O	O:0.998636
in	O	O:0.998614
becoming	O	O:0.985984
better	O	O:0.993593
with	O	O:0.996171
Pandas	O	O:0.997007
so	O	O:0.998770
if	O	O:0.997431
there's	O	O:0.998403
an	O	O:0.998692
out-of-the-box	O	O:0.986917
way	O	O:0.993190
I'd	O	O:0.999244
like	O	O:0.997089
to	O	O:0.999651
know	O	O:0.998772
it	O	O:0.998690
.	O	O:0.997497
)	O	O:0.998897
	
Any	O	O:0.989530
ideas	O	O:0.988937
on	O	O:0.998445
how	O	O:0.999199
to	O	O:0.999327
get	O	O:0.999947
this	O	O:0.999649
file	O	O:0.997743
to	O	O:0.999680
load	O	O:0.993449
?	O	O:0.996984
	
Unfortunately	O	O:0.991624
I	O	O:0.997383
can't	O	O:0.999746
just	O	O:0.997289
strip	O	O:0.997035
out	O	O:0.993021
accents	O	O:0.996100
,	O	O:0.999570
as	O	O:0.999585
I	O	O:0.999527
have	O	O:0.999252
to	O	O:0.997817
interface	O	O:0.999946
with	O	O:0.997769
software	O	O:0.998577
that	O	O:0.997755
requires	O	O:0.997359
the	O	O:0.999103
proper	O	O:0.966157
name	O	O:0.984538
,	O	O:0.998205
and	O	O:0.999840
I	O	O:0.999753
have	O	O:0.999282
a	O	O:0.998594
ton	O	O:0.987563
of	O	O:0.999203
files	O	O:0.976690
to	O	O:0.996841
format	O	O:0.993512
(	O	O:0.998003
not	O	O:0.999678
just	O	O:0.999406
the	O	O:0.999845
one	O	O:0.994801
)	O	O:0.998223
.	O	O:0.989576
	
Thanks	O	O:0.940098
!	O	O:0.976973
	
pls	O	O:0.987320
show	O	O:0.997378
your	O	O:0.997730
input	O	O:0.993701
and	O	O:0.999903
what	O	O:0.977748
is	O	O:0.997055
the	O	O:0.998251
expected	O	O:0.980582
output	O	O:0.994097
,	O	O:0.999247
in	O	O:0.999649
a	O	O:0.997263
copy-pastable	O	O:0.946587
form	O	O:0.994599
.	O	O:0.989868
	
What	O	O:0.992432
you	O	O:0.997904
are	O	O:0.999675
doing	O	O:0.993847
is	O	O:0.997981
very	O	O:0.850000
inefficient	O	O:0.974529
.	O	O:0.983190
	
A	O	O:0.978421
groupby	B-API	B-API:0.788947
should	O	O:0.988141
try	O	O:0.998032
to	O	O:0.998735
use	O	O:0.999953
vectorized	O	O:0.971907
functions	O	O:0.997644
when	O	O:0.988867
possible	O	O:0.981587
.	O	O:0.997700
	
Then	O	O:0.997937
join	O	O:0.999317
them	O	O:0.998125
up	O	O:0.996313
at	O	O:0.999396
the	O	O:0.998401
end	O	O:0.964081
.	O	O:0.983400
	
Hi	O	O:0.962420
Tom	O	O:0.975722
,	O	O:0.997647
it	O	O:0.993891
doesn't	O	O:0.997875
look	O	O:0.997410
like	O	O:0.999550
this	O	O:0.993929
works	O	O:0.990890
.	O	O:0.992006
	
It	O	O:0.975699
outputs	O	O:0.995616
just	O	O:0.996256
one	O	O:0.999429
array	O	O:0.985786
and	O	O:0.997947
is	O	O:0.999415
equivalent	O	O:0.942028
to	O	O:0.997298
df2	O	O:0.990905
[	O	O:0.990337
'	O	O:0.998324
array	O	O:0.998522
']	O	O:0.992191
.sum()	B-API	B-API:0.980378
.	O	O:0.971852
	
But	O	O:0.996962
you	O	O:0.999764
have	O	O:0.999658
given	O	O:0.998657
me	O	O:0.997899
an	O	O:0.999160
idea	O	O:0.989796
with	O	O:0.993819
apply	B-API	O:0.786014
.	O	O:0.978029
	
Let	O	O:0.988503
me	O	O:0.986796
see	O	O:0.998528
if	O	O:0.998638
I	O	O:0.999313
can	O	O:0.998879
figure	O	O:0.998248
something	O	O:0.998903
out	O	O:0.986106
.	O	O:0.996698
	
You	O	O:0.996749
need	O	O:0.991502
`	O	O:0.997662
apply	B-API	B-API:0.812601
(	O	O:0.996885
your_func	O	O:0.623780
,	O	O:0.998117
axis=1	O	O:0.990706
)`	O	O:0.988328
to	O	O:0.999410
work	O	O:0.999845
on	O	O:0.999969
a	O	O:0.999450
row-by-row	O	O:0.962511
basis	O	O:0.994558
.	O	O:0.984494
	
#CODE	O	O:0.964415
	
Another	O	O:0.989725
way	O	O:0.988443
would	O	O:0.998649
be	O	O:0.999683
to	O	O:0.999771
call	O	O:0.982330
`	O	O:0.998902
unique	B-API	B-API:0.600340
`	O	O:0.999420
on	O	O:0.995480
the	O	O:0.999859
transpose	O	O:0.988034
of	O	O:0.999889
your	O	O:0.982474
df	O	O:0.908372
:	O	O:0.996568
#CODE	O	O:0.991586
	
Drop	O	O:0.978545
values	O	O:0.986250
satisfying	O	O:0.991641
condition	O	O:0.999612
plus	O	O:0.998389
arbitrary	O	O:0.996734
number	O	O:0.994798
of	O	O:0.999314
next	O	O:0.995415
values	O	O:0.994046
in	O	O:0.999176
a	O	O:0.998028
pandas	O	O:0.993485
DataFrame	O	O:0.999595
	
So	O	O:0.996920
my	O	O:0.999460
final	O	O:0.997714
goal	O	O:0.977612
is	O	O:0.998688
to	O	O:0.999432
drop	B-API	O:0.993738
values	O	O:0.994056
in	O	O:0.999244
one	O	O:0.999893
column	O	O:0.999408
of	O	O:0.999692
a	O	O:0.993453
`	O	O:0.997909
pandas	O	O:0.951446
`	O	O:0.997357
`	O	O:0.990209
DataFrame	O	O:0.996956
`	O	O:0.999738
according	O	O:0.955445
to	O	O:0.999825
some	O	O:0.999581
condition	O	O:0.999622
on	O	O:0.999804
another	O	O:0.999723
column	O	O:0.999649
of	O	O:0.998956
the	O	O:0.999298
same	O	O:0.984216
`	O	O:0.998598
DataFrame	O	O:0.994165
`	O	O:0.999778
,	O	O:0.998423
plus	O	O:0.998792
several	O	O:0.999278
next	O	O:0.986166
values	O	O:0.961680
e.g.	O	O:0.877402
:	O	O:0.996110
#CODE	O	O:0.995266
	
So	O	O:0.998945
this	O	O:0.999137
will	O	O:0.999410
drop	O	O:0.992358
the	O	O:0.999879
records	O	O:0.989843
where	O	O:0.997999
the	O	O:0.999304
condition	O	O:0.988087
is	O	O:0.997531
satisfied	O	O:0.983496
,	O	O:0.998729
but	O	O:0.997780
how	O	O:0.998830
do	O	O:0.999210
I	O	O:0.999839
drop	O	O:0.853747
the	O	O:0.999118
next	O	O:0.988426
3	O	O:0.997812
records	O	O:0.981405
after	O	O:0.998582
the	O	O:0.997120
condition	O	O:0.978778
was	O	O:0.991591
satisfied	O	O:0.996832
too	O	O:0.987506
?	O	O:0.994313
	
My	O	O:0.994749
desired	O	O:0.988079
output	O	O:0.989784
would	O	O:0.998019
look	O	O:0.999076
something	O	O:0.999741
like	O	O:0.996779
this	O	O:0.984510
:	O	O:0.996720
#CODE	O	O:0.996138
	
We	O	O:0.997161
can	O	O:0.997586
use	O	O:0.999578
the	O	O:0.996451
boolean	O	O:0.739360
condition	O	O:0.998318
index	O	O:0.999034
to	O	O:0.999608
slice	O	O:0.999422
the	O	O:0.999750
df	O	O:0.973483
using	O	O:0.995970
`	O	O:0.986883
loc	B-API	B-API:0.910764
`	O	O:0.999068
and	O	O:0.996644
set	O	O:0.996498
the	O	O:0.997923
following	O	O:0.930167
values	O	O:0.876729
:	O	O:0.995162
#CODE	O	O:0.998452
	
Panda's	O	O:0.925110
boxplot	O	O:0.983111
but	O	O:0.997822
not	O	O:0.997368
showing	O	O:0.996618
the	O	O:0.992992
box	O	O:0.978970
	
Note	O	O:0.992836
,	O	O:0.998216
`	O	O:0.999271
showbox	O	B-API:0.541608
`	O	O:0.999053
and	O	O:0.983348
`	O	O:0.999798
whiskerprops	O	B-API:0.681776
`	O	O:0.998728
are	O	O:0.991957
the	O	O:0.999448
`	O	O:0.997399
kwds	O	O:0.729499
`	O	O:0.999840
of	O	O:0.985479
boxplot	O	O:0.997903
,	O	O:0.998879
which	O	O:0.997790
are	O	O:0.998680
in	O	O:0.999936
turn	O	O:0.980131
passed	O	O:0.992336
to	O	O:0.988892
`	O	O:0.999864
matplotlib.boxplot	B-API	B-API:0.785635
`	O	O:0.998794
.	O	O:0.977333
	
Applying	O	O:0.966579
aggregate	B-API	O:0.668948
function	O	O:0.996361
on	O	O:0.999064
columns	O	O:0.999019
of	O	O:0.999428
Pandas	O	O:0.996588
pivot	O	O:0.994732
table	O	O:0.993392
	
I	O	O:0.996952
generated	O	O:0.995877
the	O	O:0.996479
following	O	O:0.979101
pivot	O	O:0.994474
table	O	O:0.998546
via	O	O:0.996935
taking	O	O:0.995099
maximum	O	O:0.994401
of	O	O:0.998425
values	O	O:0.965360
in	O	O:0.998228
`	O	O:0.998884
Z	O	O:0.838473
`	O	O:0.998236
column	O	O:0.876475
:	O	O:0.997201
#CODE	O	O:0.995559
	
Here's	O	O:0.994923
a	O	O:0.995050
fairly	O	O:0.975257
general	O	O:0.993954
solution	O	O:0.991974
you	O	O:0.994736
can	O	O:0.999558
apply	O	O:0.996471
to	O	O:0.999461
multiple	O	O:0.999612
columns	O	O:0.992585
.	O	O:0.990120
	
The	O	O:0.966269
'	O	O:0.991926
To	O	O:0.995323
'	O	O:0.998028
column	O	O:0.998200
doesn't	O	O:0.998840
need	O	O:0.998930
to	O	O:0.999896
be	O	O:0.999897
rounded	O	O:0.995608
,	O	O:0.997115
I	O	O:0.999439
just	O	O:0.997462
included	O	O:0.993409
it	O	O:0.996765
for	O	O:0.999386
the	O	O:0.998580
generality	O	O:0.986354
of	O	O:0.999024
two	O	O:0.999632
columns	O	O:0.998126
rather	O	O:0.997947
than	O	O:0.995888
one	O	O:0.983780
:	O	O:0.995275
#CODE	O	O:0.995677
	
428	O	O:0.979576
base	O	O:0.995937
,	O	O:0.999670
mult	O	O:0.960959
=	O	O:0.990949
_gfc	O	O:0.822087
(	O	O:0.999198
freq	O	O:0.941583
)	O	O:0.997859
	
-->	O	O:0.986408
429	O	O:0.979967
return	O	O:0.940065
tslib.dt64arr_to_periodarr	O	B-API:0.644793
(	O	O:0.984715
data.view	O	B-API:0.985729
(	O	O:0.986134
'	O	O:0.996975
i8	O	O:0.986759
')	O	O:0.997276
,	O	O:0.999115
base	O	O:0.993590
,	O	O:0.999636
tz	O	B-API:0.626892
)	O	O:0.994771
	
I	O	O:0.995527
could	O	O:0.999321
do	O	O:0.999188
a	O	O:0.999825
left	O	O:0.896786
merge	B-API	O:0.699445
,	O	O:0.996061
but	O	O:0.998388
I	O	O:0.998518
would	O	O:0.999964
end	O	O:0.997283
up	O	O:0.998002
with	O	O:0.998764
a	O	O:0.998217
huge	O	O:0.945239
file	O	O:0.980097
.	O	O:0.990925
	
Is	O	O:0.994922
there	O	O:0.998570
any	O	O:0.998049
way	O	O:0.997149
to	O	O:0.999004
add	O	O:0.999831
specific	O	O:0.999825
rows	O	O:0.994399
from	O	O:0.998415
df2	O	O:0.992602
to	O	O:0.999427
df1	O	O:0.999098
using	O	O:0.998203
merge	B-API	O:0.665706
?	O	O:0.966179
	
Unclear	O	O:0.987479
why	O	O:0.998118
you	O	O:0.999006
think	O	O:0.999757
a	O	O:0.999833
left	O	O:0.967980
merge	B-API	O:0.944394
would	O	O:0.996009
produce	O	O:0.999450
a	O	O:0.999639
huge	O	O:0.962045
file	O	O:0.996549
,	O	O:0.999463
by	O	O:0.998611
performing	O	O:0.996669
a	O	O:0.998447
left	O	O:0.983079
merge	B-API	O:0.883927
on	O	O:0.998143
the	O	O:0.998515
product	O	O:0.994670
id	O	O:0.974146
you	O	O:0.997832
are	O	O:0.998290
stating	O	O:0.999123
that	O	O:0.996797
you	O	O:0.999231
are	O	O:0.999839
only	O	O:0.999447
interested	O	O:0.996107
in	O	O:0.999243
matches	O	O:0.975996
in	O	O:0.999469
the	O	O:0.996069
product_id	O	O:0.972206
column	O	O:0.998489
only	O	O:0.984413
	
Just	O	O:0.992195
perform	O	O:0.994647
a	O	O:0.999234
left	O	O:0.920654
`	O	O:0.998745
merge	B-API	B-API:0.690166
`	O	O:0.999237
on	O	O:0.982975
'	O	O:0.998566
product_id	O	O:0.920388
'	O	O:0.991675
column	O	O:0.974394
:	O	O:0.995157
#CODE	O	O:0.996550
	
What	O	O:0.994579
would	O	O:0.998939
be	O	O:0.999752
the	O	O:0.999773
Python	O	O:0.954208
equivalent	O	O:0.971688
?	O	O:0.993702
	
I	O	O:0.992507
cannot	O	O:0.999378
think	O	O:0.996282
of	O	O:0.999830
a	O	O:0.994844
way	O	O:0.995121
to	O	O:0.998487
translate	O	O:0.999895
this	O	O:0.994663
where	O	O:0.998677
statement	O	O:0.999639
into	O	O:0.980334
pandas	O	O:0.990614
syntax	O	O:0.993386
.	O	O:0.983596
	
The	O	O:0.997607
only	O	O:0.995022
way	O	O:0.999068
I	O	O:0.998604
can	O	O:0.999769
think	O	O:0.999027
of	O	O:0.996518
is	O	O:0.997527
to	O	O:0.999442
add	O	O:0.999358
an	O	O:0.999338
arbitrary	O	O:0.995138
field	O	O:0.985070
to	O	O:0.991362
people_usa	O	O:0.955020
(	O	O:0.998330
e.g.	O	O:0.985615
`	O	O:0.998949
people_usa	O	O:0.728859
[	O	O:0.998058
'	O	O:0.998988
dummy	O	O:0.984580
']	O	O:0.994736
=1	O	O:0.954560
`)	O	O:0.997780
,	O	O:0.998725
do	O	O:0.999196
a	O	O:0.999677
left	O	O:0.966858
join	B-API	O:0.896036
,	O	O:0.999839
then	O	O:0.999579
take	O	O:0.999662
only	O	O:0.999938
the	O	O:0.999956
records	O	O:0.992589
where	O	O:0.987245
'	O	O:0.999464
dummy	O	O:0.982756
'	O	O:0.991468
is	O	O:0.997212
nan	O	O:0.873497
,	O	O:0.999922
then	O	O:0.996901
delete	O	O:0.979157
the	O	O:0.999839
dummy	O	O:0.980570
field	O	O:0.993224
-	O	O:0.997083
which	O	O:0.997240
seems	O	O:0.999696
a	O	O:0.999063
bit	O	O:0.941271
convoluted	O	O:0.970973
.	O	O:0.986943
	
Does	O	O:0.997337
this	O	O:0.999069
work	O	O:0.998843
only	O	O:0.999371
on	O	O:0.999695
the	O	O:0.999743
index	O	O:0.999506
of	O	O:0.998251
the	O	O:0.998571
dataframe	O	O:0.999804
?	O	O:0.994939
	
I'd	O	O:0.998537
like	O	O:0.998726
the	O	O:0.999616
option	O	O:0.998292
to	O	O:0.998983
specify	O	O:0.999482
the	O	O:0.998995
field	O	O:0.878767
(	O	O:0.998501
s	O	O:0.989338
)	O	O:0.999315
to	O	O:0.995125
apply	O	O:0.999001
this	O	O:0.980320
to	O	O:0.993502
	
Is	O	O:0.994786
there	O	O:0.998638
any	O	O:0.999070
easy	O	O:0.986198
way	O	O:0.997539
to	O	O:0.998333
do	O	O:0.999920
this	O	O:0.999260
if	O	O:0.999320
you	O	O:0.999785
have	O	O:0.999800
multiple	O	O:0.999783
columns	O	O:0.998648
to	O	O:0.999385
check	O	O:0.999775
/	O	O:0.998880
join	O	O:0.718227
?	O	O:0.993249
	
You	O	O:0.993189
could	O	O:0.998533
do	O	O:0.999852
a	O	O:0.999237
`	O	O:0.990771
merge	B-API	B-API:0.796485
`	O	O:0.998988
and	O	O:0.999812
then	O	O:0.999633
eliminate	O	O:0.995290
the	O	O:0.999889
rows	O	O:0.990130
that	O	O:0.999614
exist	O	O:0.999615
in	O	O:0.999902
the	O	O:0.998989
merged	O	O:0.997101
df	O	O:0.994938
otherwise	O	O:0.998864
you'd	O	O:0.999774
have	O	O:0.998967
to	O	O:0.999776
build	O	O:0.999651
a	O	O:0.998353
boolean	O	O:0.944166
condition	O	O:0.998487
for	O	O:0.998361
all	O	O:0.999168
the	O	O:0.999465
columns	O	O:0.995362
you	O	O:0.999426
want	O	O:0.999631
to	O	O:0.998972
compare	O	O:0.998695
but	O	O:0.999499
presumably	O	O:0.999597
when	O	O:0.999474
checking	O	O:0.987805
the	O	O:0.999728
multiple	O	O:0.992316
columns	O	O:0.979449
you're	O	O:0.991597
stating	O	O:0.997939
that	O	O:0.995722
it's	O	O:0.998476
unique	O	O:0.983428
for	O	O:0.999317
those	O	O:0.997218
columns	O	O:0.995668
,	O	O:0.998698
correct	O	O:0.996986
?	O	O:0.996801
	
For	O	O:0.989713
instance	O	O:0.958927
it's	O	O:0.994149
not	O	O:0.999514
a	O	O:0.999765
match	O	O:0.963245
if	O	O:0.999132
say	O	O:0.995628
col1	O	O:0.958624
and	O	O:0.997585
col2	O	O:0.970335
match	O	O:0.898488
but	O	O:0.987228
col3	O	O:0.941836
does	O	O:0.989901
not	O	O:0.992558
	
Yes	O	O:0.988080
merge	B-API	B-API:0.539202
is	O	O:0.998798
what	O	O:0.991315
I	O	O:0.999393
have	O	O:0.997702
been	O	O:0.900463
doing	O	O:0.995085
but	O	O:0.989797
it	O	O:0.994606
feels	O	O:0.998063
like	O	O:0.999103
a	O	O:0.996801
hassle	O	O:0.928388
.	O	O:0.990602
	
I've	O	O:0.997733
come	O	O:0.982655
up	O	O:0.994695
with	O	O:0.999302
this	O	O:0.998044
,	O	O:0.999947
using	O	O:0.997571
itertools	B-API	O:0.582299
,	O	O:0.997775
to	O	O:0.998953
find	O	O:0.999163
mid-day	O	O:0.992255
timestamps	O	O:0.915772
and	O	O:0.999563
group	O	O:0.999451
them	O	O:0.994694
by	O	O:0.996025
date	O	O:0.776498
,	O	O:0.997230
and	O	O:0.998501
now	O	O:0.991304
I'm	O	O:0.998457
coming	O	O:0.983537
up	O	O:0.995870
short	O	O:0.985195
trying	O	O:0.990331
to	O	O:0.998478
apply	O	O:0.998756
imap	O	O:0.667085
to	O	O:0.999011
find	O	O:0.999222
the	O	O:0.998320
means	O	O:0.992367
.	O	O:0.994640
	
#CODE	O	O:0.964415
	
Since	O	O:0.993645
not	O	O:0.998105
sure	O	O:0.998999
what	O	O:0.999702
your	O	O:0.999489
end	O	O:0.991756
output	O	O:0.986165
should	O	O:0.997883
look	O	O:0.997701
like	O	O:0.998166
,	O	O:0.999965
just	O	O:0.998824
create	O	O:0.996587
a	O	O:0.997587
time-based	O	O:0.896445
grouper	B-API	O:0.967305
manually	O	O:0.708032
(	O	O:0.999127
this	O	O:0.982528
is	O	O:0.999250
essentially	O	O:0.999292
a	O	O:0.999195
resample	B-API	B-API:0.654276
)	O	O:0.990087
,	O	O:0.988471
but	O	O:0.995896
doesn't	O	O:0.996410
do	O	O:0.999696
anything	O	O:0.999673
with	O	O:0.997647
the	O	O:0.999965
final	O	O:0.968278
results	O	O:0.991007
(	O	O:0.999499
its	O	O:0.999330
just	O	O:0.999331
a	O	O:0.999872
list	O	O:0.934057
of	O	O:0.999110
the	O	O:0.999771
aggregated	O	O:0.996306
values	O	O:0.961631
)	O	O:0.996980
#CODE	O	O:0.994074
	
You	O	O:0.996010
can	O	O:0.998738
get	O	O:0.999371
reasonable	O	O:0.997696
fancy	O	O:0.980969
here	O	O:0.919466
and	O	O:0.998786
say	O	O:0.997794
return	O	O:0.959277
a	O	O:0.982538
pandas	O	O:0.882103
object	O	O:0.942953
(	O	O:0.980217
and	O	O:0.999447
potentially	O	O:0.989428
`	O	O:0.995567
concat	O	B-API:0.961361
`	O	O:0.999818
them	O	O:0.904930
)	O	O:0.999273
.	O	O:0.980632
	
and	O	O:0.997543
I	O	O:0.999518
want	O	O:0.995027
to	O	O:0.984087
pivot	O	O:0.997977
it	O	O:0.999363
like	O	O:0.997093
this	O	O:0.989773
:	O	O:0.997423
#CODE	O	O:0.996175
	
I	O	O:0.994519
am	O	O:0.999271
calling	O	O:0.991100
a	O	O:0.985551
function	O	O:0.992490
from	O	O:0.996908
within	O	O:0.998801
a	O	O:0.993828
'	O	O:0.985726
for	O	O:0.999582
each	O	O:0.973258
loop	O	O:0.972515
'	O	O:0.996147
which	O	O:0.997232
attempts	O	O:0.998107
to	O	O:0.999760
insert	O	O:0.997997
values	O	O:0.998056
into	O	O:0.995655
a	O	O:0.996846
Pandas	O	O:0.981638
DataFrame	O	O:0.999860
based	O	O:0.984762
on	O	O:0.999843
a	O	O:0.997972
specified	O	O:0.992542
column	O	O:0.997565
start	O	O:0.972201
and	O	O:0.999908
end	O	O:0.996325
location	O	O:0.960152
.	O	O:0.968990
	
The	O	O:0.962793
function	O	O:0.969884
is	O	O:0.997593
this	O	O:0.936685
:	O	O:0.996200
#CODE	O	O:0.994785
	
My	O	O:0.987982
issue	O	O:0.965788
is	O	O:0.999649
that	O	O:0.978678
despite	O	O:0.997274
the	O	O:0.999391
same	O	O:0.994144
starting	O	O:0.998408
conditions	O	O:0.998663
when	O	O:0.997924
I	O	O:0.998830
call	O	O:0.996221
this	O	O:0.789195
function	O	O:0.975329
it	O	O:0.997442
seems	O	O:0.999423
to	O	O:0.999751
generate	O	O:0.999514
a	O	O:0.999624
list	O	O:0.976003
of	O	O:0.999407
inconsistent	O	O:0.957626
length	O	O:0.992291
.	O	O:0.958602
	
e.g.	O	O:0.994156
with	O	O:0.998975
values	O	O:0.995263
of	O	O:0.999375
srowb	O	O:0.969684
=	O	O:0.989013
1	O	O:0.972156
and	O	O:0.998966
erowb	O	O:0.949243
=	O	O:0.948352
18	O	O:0.980972
it	O	O:0.998576
will	O	O:0.999290
generate	O	O:0.998651
a	O	O:0.998863
list	O	B-API:0.503615
(	O	O:0.998957
tmp_brollb	O	O:0.980527
)	O	O:0.998215
which	O	O:0.992236
has	O	O:0.997310
either	O	O:0.991645
len	B-API	B-API:0.998878
(	O	O:0.998028
tmp_brollb	O	O:0.793961
)	O	O:0.997911
=	O	O:0.979871
17	O	O:0.992289
or	O	O:0.990455
len	B-API	B-API:0.998617
(	O	O:0.998886
tmp_brollb	O	O:0.828698
)	O	O:0.998154
=	O	O:0.935881
18	O	O:0.972942
	
Use	O	O:0.921947
`	O	O:0.996321
max	B-API	B-API:0.759368
`	O	O:0.998036
and	O	O:0.998909
check	O	O:0.997912
for	O	O:0.997270
equality	O	O:0.972931
using	O	O:0.971743
`	O	O:0.983908
eq	B-API	B-API:0.946991
`	O	O:0.997304
and	O	O:0.995651
cast	O	O:0.956292
the	O	O:0.995849
boolean	O	O:0.961332
df	O	O:0.937972
to	O	O:0.998884
int	O	O:0.995511
using	O	O:0.997332
`	O	O:0.975618
astype	B-API	B-API:0.933475
`	O	O:0.998171
,	O	O:0.997682
this	O	O:0.999316
will	O	O:0.998632
convert	O	O:0.914909
`	O	O:0.999286
True	O	O:0.727238
`	O	O:0.998632
and	O	O:0.959301
`	O	O:0.999152
False	O	O:0.540240
`	O	O:0.998886
to	O	O:0.951209
`	O	O:0.999915
1	O	O:0.707498
`	O	O:0.998734
and	O	O:0.992895
`	O	O:0.998945
0	O	B-API:0.851566
`	O	O:0.985715
:	O	O:0.955125
#CODE	O	O:0.997708
	
Thanks	O	O:0.946389
@USER	O	O:0.960014
.	O	O:0.982187
	
Did	O	O:0.995635
you	O	O:0.997279
try	O	O:0.999628
my	O	O:0.999544
original	O	O:0.998067
post	O	O:0.977130
?	O	O:0.995662
	
I	O	O:0.994695
would	O	O:0.999224
be	O	O:0.998402
interested	O	O:0.997442
to	O	O:0.997909
know	O	O:0.998594
how	O	O:0.999279
much	O	O:0.986599
time	O	O:0.999764
this	O	O:0.997986
one	O	O:0.996841
is	O	O:0.998725
taking	O	O:0.981083
compared	O	O:0.984062
to	O	O:0.996371
yours	O	O:0.996860
?	O	O:0.996137
	
`	O	O:0.989206
for	O	O:0.996442
i	O	O:0.989110
in	O	O:0.992479
range	O	O:0.972994
(	O	O:0.989285
len	B-API	B-API:0.998621
(	O	O:0.996747
df	O	O:0.661360
)):	O	O:0.805261
...	O	O:0.951490
	
df.loc	B-API	B-API:0.907764
[	O	O:0.997101
i	O	O:0.992198
]	O	O:0.985823
[	O	O:0.990855
df.loc	B-API	B-API:0.707108
[	O	O:0.996542
i	O	O:0.992343
]	O	O:0.992461
.idxmax	B-API	B-API:0.976200
(	O	O:0.997201
axis=1	O	O:0.984729
)]	O	O:0.985668
=	O	O:0.862173
1	O	O:0.988345
...	O	O:0.966778
	
df.loc	B-API	B-API:0.907764
[	O	O:0.997101
i	O	O:0.992198
]	O	O:0.985823
[	O	O:0.990847
df.loc	B-API	B-API:0.709555
[	O	O:0.996859
i	O	O:0.990666
]	O	O:0.994048
!	O	O:0.982620
=	O	O:0.978898
1	O	O:0.991522
]	O	O:0.996078
=	O	O:0.969026
0	O	O:0.970303
`	O	O:0.992433
	
I	O	O:0.993545
am	O	O:0.999261
trying	O	O:0.995872
to	O	O:0.999491
normalize	O	O:0.998620
the	O	O:0.999666
missing	O	O:0.989472
values	O	O:0.981110
in	O	O:0.991791
matrix	O	O:0.995183
.	O	O:0.991545
	
Here	O	O:0.903667
is	O	O:0.998453
the	O	O:0.996515
code	O	O:0.939187
.	O	O:0.989076
	
#CODE	O	O:0.964415
	
Last	O	O:0.982483
line	O	O:0.993221
should	O	O:0.996553
replace	O	O:0.984912
the	O	O:0.999673
values	O	O:0.933613
in	O	O:0.999004
dataset1	O	O:0.995373
by	O	O:0.999729
mean	O	O:0.992501
values	O	O:0.987839
from	O	O:0.991699
`	O	O:0.999529
ds2_mean	O	O:0.733034
[	O	O:0.998881
1	O	O:0.981794
]`	O	O:0.977022
.	O	O:0.974314
	
But	O	O:0.986034
it	O	O:0.995783
does	O	O:0.993301
not	O	O:0.998437
do	O	O:0.997641
.	O	O:0.993550
	
Anything	O	O:0.996783
wrong	O	O:0.993276
here	O	O:0.975192
?	O	O:0.996469
	
And	O	O:0.987713
after	O	O:0.999086
that	O	O:0.995755
can	O	O:0.999566
I	O	O:0.999975
replace	O	O:0.979174
NaN	O	O:0.880987
with	O	O:0.998965
the	O	O:0.999316
average	O	O:0.970749
value	O	O:0.998948
of	O	O:0.998485
it's	O	O:0.998324
neighbours	O	O:0.989690
in	O	O:0.997290
dataset1	O	O:0.944565
?	O	O:0.994778
	
it	O	O:0.994998
does	O	O:0.993608
wrong	O	O:0.993360
.	O	O:0.997131
	
For	O	O:0.992808
any	O	O:0.996634
x	O	O:0.940221
in	O	O:0.997674
dataset2	O	O:0.971330
it	O	O:0.997126
has	O	O:0.998183
mapped	O	O:0.994427
value	O	O:0.993744
in	O	O:0.993635
col2	O	O:0.958536
.	O	O:0.990403
	
It	O	O:0.993573
should	O	O:0.997228
replace	O	O:0.983044
all	O	O:0.999668
values	O	O:0.987290
of	O	O:0.999036
x	O	O:0.974514
in	O	O:0.999614
ds1	O	O:0.991051
by	O	O:0.997582
mapped	O	O:0.968296
value	O	O:0.983146
.	O	O:0.981947
	
But	O	O:0.998275
this	O	O:0.997819
also	O	O:0.991081
does	O	O:0.997858
not	O	O:0.997679
do	O	O:0.998918
it	O	O:0.996830
	
Sorry	O	O:0.983827
can	O	O:0.998494
you	O	O:0.999912
explain	O	O:0.997326
clearer	O	O:0.991383
,	O	O:0.999667
what	O	O:0.997019
are	O	O:0.998823
you	O	O:0.999754
mapping	O	O:0.998475
from	O	O:0.999608
what	O	O:0.996380
to	O	O:0.999913
what	O	O:0.999723
exactly	O	O:0.997528
?	O	O:0.998488
	
By	O	O:0.994748
default	O	O:0.978761
fillna	B-API	O:0.615541
will	O	O:0.991312
use	O	O:0.995253
the	O	O:0.998098
index	O	O:0.996262
so	O	O:0.998658
how	O	O:0.999671
do	O	O:0.999197
you	O	O:0.999825
want	O	O:0.998660
the	O	O:0.999621
mapping	O	O:0.996877
from	O	O:0.984992
`	O	O:0.998776
ds2	O	O:0.789046
`	O	O:0.999802
to	O	O:0.989891
map	O	O:0.993091
to	O	O:0.999323
the	O	O:0.999960
missing	O	O:0.991305
values	O	O:0.990691
in	O	O:0.993919
`	O	O:0.999440
ds1	O	O:0.565082
`	O	O:0.998842
?	O	O:0.969316
	
Are	O	O:0.995845
you	O	O:0.998929
wanting	O	O:0.999670
to	O	O:0.999594
map	O	O:0.992822
using	O	O:0.999757
the	O	O:0.997296
values	O	O:0.921158
in	O	O:0.985118
`	O	O:0.998991
ds2	O	O:0.930844
[	O	O:0.999414
0	O	O:0.992066
]`	O	O:0.992659
as	O	O:0.986560
the	O	O:0.998683
index	O	O:0.988651
lookup	O	O:0.606759
?	O	O:0.996652
	
So	O	O:0.990146
use	O	O:0.985383
the	O	O:0.997095
index	O	O:0.997745
from	O	O:0.980623
`	O	O:0.999366
ds1	O	O:0.812845
`	O	O:0.999907
find	O	O:0.980616
value	O	O:0.999259
in	O	O:0.991762
`	O	O:0.998165
ds2	O	O:0.867642
[	O	O:0.998667
0	O	O:0.967492
]`	O	O:0.968973
and	O	O:0.996897
return	O	O:0.883523
`	O	O:0.985817
ds2	O	O:0.683726
[	O	O:0.998541
1	O	O:0.971881
]`	O	O:0.983746
?	O	O:0.985831
	
yes	O	O:0.976033
,	O	O:0.999186
I	O	O:0.999768
want	O	O:0.999258
to	O	O:0.992295
use	O	O:0.999527
the	O	O:0.996647
index	O	O:0.996702
from	O	O:0.997683
ds1	O	O:0.996859
find	O	O:0.998279
value	O	O:0.994455
in	O	O:0.998136
ds2	O	O:0.936432
[	O	O:0.997482
0	O	O:0.967805
]	O	O:0.989301
and	O	O:0.993861
replace	O	O:0.836938
it	O	O:0.995513
with	O	O:0.996764
ds2	O	O:0.922433
[	O	O:0.998522
1	O	O:0.993498
]"	O	O:0.997188
sorry	O	O:0.973563
for	O	O:0.997346
inconvenience	O	O:0.923884
	
I	O	O:0.998650
want	O	O:0.998897
to	O	O:0.997740
add	O	O:0.999872
a	O	O:0.999251
new	O	O:0.987348
column	O	O:0.997115
which	O	O:0.996691
contains	O	O:0.998325
values	O	O:0.998175
based	O	O:0.990458
on	O	O:0.999507
df	O	O:0.913351
[	O	O:0.994752
'	O	O:0.999340
diff	O	O:0.833565
']	O	O:0.994431
	
When	O	O:0.997125
using	O	O:0.997571
`	O	O:0.987365
DataFrame.apply	B-API	B-API:0.998533
`	O	O:0.999501
if	O	O:0.993754
you	O	O:0.999384
use	O	O:0.991497
`	O	O:0.992839
axis=0	O	O:0.535989
`	O	O:0.999243
it	O	O:0.989901
applies	O	O:0.997373
the	O	O:0.999019
condition	O	O:0.994111
through	O	O:0.996462
columns	O	O:0.997555
,	O	O:0.999577
to	O	O:0.998932
use	O	O:0.999153
`	O	O:0.996439
apply	B-API	B-API:0.825082
`	O	O:0.998881
to	O	O:0.991503
go	O	O:0.999911
through	O	O:0.998721
each	O	O:0.984279
row	O	O:0.997576
,	O	O:0.999703
you	O	O:0.999643
need	O	O:0.998009
`	O	O:0.999642
axis=1	O	O:0.788463
`	O	O:0.998718
.	O	O:0.954391
	
But	O	O:0.996488
given	O	O:0.996039
that	O	O:0.998562
,	O	O:0.999830
you	O	O:0.999637
can	O	O:0.999132
use	O	O:0.999679
`	O	O:0.998189
Series.apply	B-API	B-API:0.965204
`	O	O:0.999636
instead	O	O:0.997253
of	O	O:0.999267
`	O	O:0.994326
DataFrame.apply	B-API	B-API:0.984150
`	O	O:0.999260
on	O	O:0.991681
the	O	O:0.998838
`'	O	O:0.994745
diff	B-API	B-API:0.513375
'`	O	O:0.993576
series	O	O:0.992641
.	O	O:0.990271
	
Example	O	O:0.928056
-	O	O:0.995126
#CODE	O	O:0.987978
	
You	O	O:0.990062
can	O	O:0.999810
just	O	O:0.999933
set	O	O:0.999033
all	O	O:0.999683
the	O	O:0.998998
values	O	O:0.992597
that	O	O:0.997997
meet	O	O:0.999865
your	O	O:0.999665
criteria	O	O:0.984855
rather	O	O:0.999214
than	O	O:0.999264
looping	O	O:0.997472
over	O	O:0.985999
the	O	O:0.998556
df	O	O:0.988394
by	O	O:0.996717
calling	O	O:0.969265
`	O	O:0.995335
apply	B-API	B-API:0.815539
`	O	O:0.998307
so	O	O:0.988966
the	O	O:0.998768
following	O	O:0.967869
should	O	O:0.998071
work	O	O:0.998332
and	O	O:0.999950
as	O	O:0.997591
it's	O	O:0.979389
vectorised	O	O:0.987703
will	O	O:0.995002
scale	O	O:0.987502
better	O	O:0.991200
for	O	O:0.999061
larger	O	O:0.808023
datasets	O	O:0.785701
:	O	O:0.984006
#CODE	O	O:0.996015
	
this	O	O:0.995689
will	O	O:0.999262
set	O	O:0.999566
all	O	O:0.999966
rows	O	O:0.996004
that	O	O:0.999027
meet	O	O:0.999432
the	O	O:0.999634
criteria	O	O:0.981106
,	O	O:0.999694
the	O	O:0.999364
problem	O	O:0.993730
using	O	O:0.995236
`	O	O:0.992598
apply	B-API	B-API:0.933430
`	O	O:0.979812
is	O	O:0.986985
that	O	O:0.991519
it's	O	O:0.998632
just	O	O:0.997824
syntactic	O	O:0.995777
sugar	O	O:0.985974
for	O	O:0.999381
a	O	O:0.994316
`	O	O:0.978128
for	O	O:0.957292
`	O	O:0.997929
loop	O	O:0.908815
and	O	O:0.999876
where	O	O:0.997508
possible	O	O:0.988867
this	O	O:0.997436
should	O	O:0.998793
be	O	O:0.999504
avoided	O	O:0.997910
where	O	O:0.996874
a	O	O:0.998656
vectorised	O	O:0.973920
solution	O	O:0.986603
exists	O	O:0.982935
.	O	O:0.994754
	
Then	O	O:0.996393
you	O	O:0.999305
can	O	O:0.999664
`	O	O:0.999985
stack	B-API	O:0.532911
`	O	O:0.998268
(	O	O:0.997467
first	O	O:0.999277
by	O	O:0.993813
`'	O	O:0.966860
Marker	O	O:0.992875
'`	O	O:0.999459
then	O	O:0.992721
by	O	O:0.999262
`'	O	O:0.997372
mrk	O	O:0.779813
'`)	O	O:0.958164
:	O	O:0.984002
#CODE	O	O:0.994377
	
Python	O	O:0.948270
DataFrame	O	O:0.998853
-	O	O:0.998309
apply	O	O:0.995352
different	O	O:0.990600
calculations	O	O:0.974213
due	O	O:0.982042
to	O	O:0.999598
a	O	O:0.999882
column's	O	O:0.998472
value	O	O:0.996124
	
You	O	O:0.993981
could	O	O:0.998098
do	O	O:0.999888
this	O	O:0.999713
using	O	O:0.996865
2	O	O:0.928866
`	O	O:0.988314
loc	B-API	B-API:0.877393
`	O	O:0.989302
calls	O	O:0.588041
:	O	O:0.994897
#CODE	O	O:0.956292
	
There	O	O:0.984842
are	O	O:0.998830
two	O	O:0.999439
reasons	O	O:0.995795
whiskers	O	O:0.991463
length	O	O:0.997713
vary	O	O:0.987990
from	O	O:0.999344
one	O	O:0.997622
boxplot	O	O:0.998325
to	O	O:0.998755
any	O	O:0.999921
other	O	O:0.987007
boxplot	O	O:0.993885
	
Are	O	O:0.997022
you	O	O:0.998686
asking	O	O:0.995820
why	O	O:0.999022
the	O	O:0.999158
top	O	O:0.991770
whisker	O	O:0.941718
isn't	O	O:0.995186
the	O	O:0.999756
same	O	O:0.996389
length	O	O:0.995168
as	O	O:0.998570
the	O	O:0.997231
bottom	O	O:0.923807
?	O	O:0.984882
	
I	O	O:0.997026
think	O	O:0.999154
the	O	O:0.995534
whiskers	O	O:0.961835
are	O	O:0.997369
actually	O	O:0.999578
the	O	O:0.999725
lowest	O	O:0.978135
or	O	O:0.999454
highest	O	O:0.999380
data	O	O:0.998633
point	O	O:0.998160
within	O	O:0.996834
1.5	O	O:0.909900
IQR	O	O:0.975790
.	O	O:0.982340
	
So	O	O:0.996185
if	O	O:0.998657
there	O	O:0.997977
are	O	O:0.999427
no	O	O:0.999855
data	O	O:0.995535
points	O	O:0.987216
between	O	O:0.985776
Q3	O	O:0.957711
and	O	O:0.998137
Q3	O	O:0.963592
+	O	O:0.991082
1.5	O	O:0.949348
IQR	O	O:0.995509
,	O	O:0.999639
then	O	O:0.998392
the	O	O:0.999836
top	O	O:0.993834
whisker	O	O:0.976897
won't	O	O:0.999053
show	O	O:0.986975
up	O	O:0.993591
.	O	O:0.991217
	
For	O	O:0.996330
the	O	O:0.999165
one	O	O:0.997006
boxplot	O	O:0.998451
where	O	O:0.997801
the	O	O:0.999670
are	O	O:0.998369
outliers	O	O:0.974357
beyond	O	O:0.996162
the	O	O:0.999607
whiskers	O	O:0.974215
on	O	O:0.998666
both	O	O:0.998607
the	O	O:0.999401
top	O	O:0.959896
and	O	O:0.999197
the	O	O:0.998767
bottom	O	O:0.929626
,	O	O:0.999097
the	O	O:0.998822
whiskers	O	O:0.986422
do	O	O:0.998659
look	O	O:0.998117
about	O	O:0.995501
the	O	O:0.998776
same	O	O:0.960438
size	O	O:0.974050
.	O	O:0.993137
	
``	O	O:0.977902
hist	B-API	B-API:0.954569
``	O	O:0.982557
->	O	O:0.952342
``	O	O:0.991099
histogram	O	O:0.892211
``	O	O:0.951495
(	O	O:0.975790
``	O	O:0.995025
hist	B-API	B-API:0.927551
``	O	O:0.980194
is	O	O:0.995037
pyplot	B-API	O:0.966364
or	O	O:0.999605
something	O	O:0.995485
)	O	O:0.998578
.	O	O:0.988995
	
There	O	O:0.977306
is	O	O:0.999436
a	O	O:0.998436
pandas	O	O:0.997152
equivalent	O	O:0.990085
to	O	O:0.999303
this	O	O:0.999619
`	O	O:0.999437
cut	B-API	O:0.761513
`	O	O:0.999805
there	O	O:0.952026
is	O	O:0.999816
a	O	O:0.988759
section	O	O:0.955853
describing	O	O:0.998344
this	O	O:0.991595
here	O	O:0.942829
.	O	O:0.994791
	
`	O	O:0.996357
cut	B-API	O:0.596345
`	O	O:0.999207
returns	O	O:0.951250
the	O	O:0.999495
open	O	O:0.856427
closed	O	O:0.995453
intervals	O	O:0.994406
for	O	O:0.999452
each	O	O:0.930438
value	O	O:0.923152
:	O	O:0.993950
#CODE	O	O:0.995635
	
Pandas	O	O:0.971303
Dataframe	O	O:0.994730
,	O	O:0.995368
Apply	B-API	O:0.989278
Function	O	O:0.967197
,	O	O:0.991489
Return	O	O:0.984327
Index	O	O:0.803770
	
Then	O	O:0.996221
I	O	O:0.999542
can	O	O:0.999647
apply	O	O:0.983096
the	O	O:0.992723
function	O	O:0.988765
to	O	O:0.997431
my	O	O:0.999865
dataframe	O	O:0.999817
,	O	O:0.999866
grouped	O	O:0.997678
by	O	O:0.991726
I	O	O:0.990658
D:	O	O:0.981125
#CODE	O	O:0.921739
	
If	O	O:0.995743
I	O	O:0.998597
resample	O	O:0.974839
this	O	O:0.989644
DataField	O	O:0.991863
by	O	O:0.999111
any	O	O:0.996474
frequency	O	O:0.976588
,	O	O:0.997380
the	O	O:0.997326
timezone	O	O:0.634840
is	O	O:0.993549
kept	O	O:0.750236
:	O	O:0.996609
#CODE	O	O:0.992862
	
their	O	O:0.952582
are	O	O:0.999250
a	O	O:0.999310
couple	O	O:0.970756
of	O	O:0.998988
outstanding	O	O:0.968394
bugs	O	O:0.990957
w.r.t	O	O:0.940734
to	O	O:0.993543
resample	O	O:0.979541
and	O	O:0.999295
extra	O	O:0.927320
binning	O	O:0.875228
:	O	O:0.972361
#URL	O	O:0.996567
if	O	O:0.999336
you	O	O:0.999088
would	O	O:0.999789
like	O	O:0.999652
to	O	O:0.999797
investigate	O	O:0.998336
and	O	O:0.998905
try	O	O:0.997266
to	O	O:0.992686
pinpoint	O	O:0.994725
(	O	O:0.998391
or	O	O:0.999665
better	O	O:0.994588
yet	O	O:0.997875
fix	O	O:0.986652
)	O	O:0.998402
would	O	O:0.996275
be	O	O:0.999217
appreciated	O	O:0.986175
!	O	O:0.962192
	
you	O	O:0.996396
can	O	O:0.999420
comment	O	O:0.999755
on	O	O:0.999903
that	O	O:0.999621
issue	O	O:0.998941
directly	O	O:0.988481
	
@USER	O	O:0.951723
;	O	O:0.994988
You	O	O:0.999399
mean	O	O:0.998446
to	O	O:0.999309
the	O	O:0.999975
stack	O	O:0.966319
exchange	O	O:0.981814
answer	O	O:0.989763
?	O	O:0.994644
	
I	O	O:0.996822
think	O	O:0.999228
that	O	O:0.980420
I	O	O:0.998932
understand	O	O:0.998134
what's	O	O:0.966772
going	O	O:0.884032
on	O	O:0.995436
:	O	O:0.998920
create	O	O:0.998796
a	O	O:0.999403
frequency	O	O:0.999167
table	O	O:0.995907
of	O	O:0.999255
ALL	O	O:0.979016
words	O	O:0.978699
.	O	O:0.977993
	
After	O	O:0.998491
each	O	O:0.984328
operation	O	O:0.993967
,	O	O:0.999682
drop	O	O:0.880430
all	O	O:0.999310
relevant	O	O:0.998332
columns	O	O:0.998991
,	O	O:0.999956
then	O	O:0.999036
finally	O	O:0.999672
count	O	O:0.995305
all	O	O:0.999784
remaining	O	O:0.994307
columns	O	O:0.992549
.	O	O:0.986591
	
Also	O	O:0.994958
,	O	O:0.999856
I	O	O:0.999076
quickly	O	O:0.990074
tried	O	O:0.995332
this	O	O:0.984942
in	O	O:0.995737
Python	O	O:0.974439
3.4.3	O	O:0.980611
and	O	O:0.999107
I	O	O:0.995100
got	O	O:0.993830
the	O	O:0.989729
error	O	O:0.983754
that	O	O:0.990624
freqDf	O	O:0.924677
isn't	O	O:0.998886
defined	O	O:0.925373
.	O	O:0.989882
	
Should	O	O:0.992805
I	O	O:0.999762
first	O	O:0.999539
create	O	O:0.974649
a	O	O:0.998616
new	O	O:0.993358
table	O	O:0.998279
named	O	O:0.969293
freqDf	O	O:0.904821
?	O	O:0.992026
	
`	O	O:0.992595
df.precedingWord.isin	O	B-API:0.834548
(	O	O:0.998608
neuter	O	O:0.989683
)`	O	O:0.899437
is	O	O:0.999091
just	O	O:0.994559
a	O	O:0.999651
Series	O	O:0.973378
of	O	O:0.999025
True	O	O:0.934152
or	O	O:0.998650
False	O	O:0.985205
(	O	O:0.999337
results	O	O:0.999086
of	O	O:0.999132
the	O	O:0.997820
previous	O	O:0.997447
test	O	O:0.863500
`	O	O:0.999627
isin	B-API	B-API:0.757436
`)	O	O:0.999266
,	O	O:0.991419
and	O	O:0.999523
pandas	O	O:0.998494
will	O	O:0.999335
just	O	O:0.998976
access	O	O:0.998517
True	O	O:0.997912
indexes	O	O:0.995921
with	O	O:0.991785
`	O	O:0.999104
loc	B-API	B-API:0.637759
`	O	O:0.998499
	
I	O	O:0.998465
have	O	O:0.997780
tried	O	O:0.996630
a	O	O:0.999736
some	O	O:0.969015
join	B-API	O:0.936494
/	O	O:0.997604
merge	B-API	O:0.883667
ideas	O	O:0.960538
but	O	O:0.992815
can't	O	O:0.996881
seem	O	O:0.997779
to	O	O:0.999434
get	O	O:0.999827
it	O	O:0.999581
to	O	O:0.999746
work	O	O:0.999402
.	O	O:0.998251
	
Just	O	O:0.991854
`	O	O:0.998141
concat	B-API	B-API:0.872286
`	O	O:0.999730
them	O	O:0.904012
and	O	O:0.999901
pass	O	O:0.948399
param	O	O:0.906014
`	O	O:0.995412
axis=1	O	B-API:0.772694
`	O	O:0.990371
:	O	O:0.974012
#CODE	O	O:0.997798
	
Or	O	O:0.991628
`	O	O:0.999228
merge	B-API	B-API:0.556548
`	O	O:0.999260
on	O	O:0.938091
'	O	O:0.998387
Symbol	O	O:0.932982
'	O	O:0.990526
column	O	O:0.978346
:	O	O:0.995165
#CODE	O	O:0.996550
	
Pandas	O	O:0.967013
:	O	O:0.998455
join	O	O:0.905872
with	O	O:0.999190
outer	O	O:0.976874
product	O	O:0.987755
	
How	O	O:0.994001
to	O	O:0.999319
join	O	O:0.995914
/	O	O:0.998058
multiply	O	O:0.985283
the	O	O:0.999129
DataFrames	O	O:0.983118
`	O	O:0.998465
areas	O	O:0.791218
`	O	O:0.998901
and	O	O:0.994614
`	O	O:0.999426
demand	O	O:0.549666
`	O	O:0.999734
together	O	O:0.851747
in	O	O:0.999896
a	O	O:0.996144
decent	O	O:0.901084
way	O	O:0.993426
?	O	O:0.992059
	
Now	O	O:0.982268
`	O	O:0.998826
apply	B-API	B-API:0.753914
`	O	O:0.996988
needs	O	O:0.972157
to	O	O:0.999420
return	O	O:0.998404
a	O	O:0.970128
`	O	O:0.987219
Series	B-API	O:0.924454
`	O	O:0.998210
,	O	O:0.997381
not	O	O:0.999800
a	O	O:0.994498
`	O	O:0.991383
DataFrame	O	O:0.992110
`	O	O:0.998900
.	O	O:0.976002
	
One	O	O:0.990266
way	O	O:0.995197
to	O	O:0.999491
turn	O	O:0.999565
a	O	O:0.995358
`	O	O:0.995532
DataFrame	O	O:0.996989
`	O	O:0.999827
into	O	O:0.985862
a	O	O:0.992446
`	O	O:0.976369
Series	B-API	O:0.886506
`	O	O:0.998172
is	O	O:0.997441
to	O	O:0.998084
use	O	O:0.998957
`	O	O:0.996072
stack	B-API	B-API:0.895748
`	O	O:0.999171
.	O	O:0.922354
	
`	O	O:0.997129
stack	B-API	B-API:0.837780
`	O	O:0.999662
this	O	O:0.935233
DataFrame	O	O:0.999256
.	O	O:0.990902
	
This	O	O:0.995004
can	O	O:0.998987
be	O	O:0.999951
done	O	O:0.999094
with	O	O:0.992783
`	O	O:0.998196
unstack	B-API	B-API:0.961664
`	O	O:0.984038
:	O	O:0.972318
#CODE	O	O:0.997825
	
`	O	O:0.992899
del	O	O:0.590638
`	O	O:0.997373
+	O	O:0.821204
`	O	O:0.998959
pivot	B-API	B-API:0.814815
`	O	O:0.999413
turns	O	O:0.973325
out	O	O:0.998481
to	O	O:0.999121
be	O	O:0.999674
faster	O	O:0.994836
than	O	O:0.987547
`	O	O:0.995527
pivot_table	B-API	B-API:0.992152
`	O	O:0.997954
in	O	O:0.997805
this	O	O:0.998266
case	O	O:0.994316
.	O	O:0.994424
	
Maybe	O	O:0.995983
the	O	O:0.997661
reason	O	O:0.994704
`	O	O:0.998476
pivot	B-API	O:0.711473
`	O	O:0.999413
exists	O	O:0.901724
is	O	O:0.999086
because	O	O:0.988809
it	O	O:0.991685
is	O	O:0.999397
faster	O	O:0.976257
than	O	O:0.993036
`	O	O:0.992371
pivot_table	B-API	B-API:0.995167
`	O	O:0.998864
for	O	O:0.995281
those	O	O:0.996991
cases	O	O:0.973281
where	O	O:0.993488
it	O	O:0.984354
is	O	O:0.998802
applicable	O	O:0.923032
(	O	O:0.999800
such	O	O:0.997179
as	O	O:0.999826
when	O	O:0.967670
you	O	O:0.998238
don't	O	O:0.999535
need	O	O:0.998641
aggregation	O	O:0.984785
)	O	O:0.998482
.	O	O:0.968920
	
`	O	O:0.993056
apply	B-API	B-API:0.865561
`	O	O:0.994643
is	O	O:0.980948
now	O	O:0.992384
among	O	O:0.997080
my	O	O:0.993908
top	O	O:0.996161
5	O	O:0.992162
functions	O	O:0.984757
to	O	O:0.997702
always	O	O:0.999460
remember	O	O:0.982719
.	O	O:0.982342
	
Concerning	O	O:0.994800
the	O	O:0.997792
`	O	O:0.988937
pivot_table	B-API	B-API:0.995657
`	O	O:0.997789
solution	O	O:0.872943
:	O	O:0.998775
At	O	O:0.998455
which	O	O:0.998098
point	O	O:0.997828
am	O	O:0.999133
I	O	O:0.999745
supposed	O	O:0.999445
to	O	O:0.994473
enter	O	O:0.998535
the	O	O:0.997686
line	O	O:0.969918
?	O	O:0.996150
	
No	O	O:0.995438
matter	O	O:0.999169
when	O	O:0.996006
in	O	O:0.999337
my	O	O:0.999282
attempt	O	O:0.990087
above	O	O:0.996234
,	O	O:0.999315
I	O	O:0.999615
always	O	O:0.998949
get	O	O:0.992740
`	O	O:0.998374
no	O	O:0.996717
item	O	O:0.995402
named	O	O:0.969760
Edge	O	O:0.986511
`	O	O:0.992642
.	O	O:0.958516
	
Or	O	O:0.996997
pass	O	O:0.886698
`	O	O:0.998372
axis=0	O	O:0.706718
`	O	O:0.999292
to	O	O:0.949627
`	O	O:0.999927
loc	B-API	B-API:0.926199
`	O	O:0.994039
:	O	O:0.978014
#CODE	O	O:0.997766
	
I've	O	O:0.973964
got	O	O:0.962794
2	O	O:0.992965
pandas	O	O:0.998443
dataframes	O	O:0.994073
,	O	O:0.999787
each	O	O:0.994969
of	O	O:0.999326
them	O	O:0.974627
has	O	O:0.999112
an	O	O:0.998798
index	O	O:0.999395
with	O	O:0.997926
dtype	B-API	B-API:0.543876
`	O	O:0.995205
object	O	O:0.567175
`	O	O:0.998790
,	O	O:0.995486
and	O	O:0.999355
in	O	O:0.999730
both	O	O:0.994639
of	O	O:0.999948
them	O	O:0.983593
I	O	O:0.999777
can	O	O:0.999098
see	O	O:0.999514
the	O	O:0.999753
value	O	O:0.987720
`	O	O:0.997365
533	O	O:0.812117
`	O	O:0.998750
.	O	O:0.943807
	
However	O	O:0.994319
,	O	O:0.999841
when	O	O:0.999354
I	O	O:0.999828
join	B-API	O:0.999485
them	O	O:0.992967
the	O	O:0.998626
result	O	O:0.976715
is	O	O:0.999512
empty	O	O:0.969589
,	O	O:0.999540
as	O	O:0.999211
one	O	O:0.998986
of	O	O:0.999950
them	O	O:0.881575
is	O	O:0.999727
the	O	O:0.996413
number	O	O:0.958853
`	O	O:0.996880
533	O	O:0.887185
`	O	O:0.998781
and	O	O:0.996115
the	O	O:0.999719
other	O	O:0.844060
is	O	O:0.999121
a	O	O:0.992393
string	O	O:0.963015
`"	O	O:0.994821
533	O	O:0.962901
"`	O	O:0.985170
.	O	O:0.958737
	
Ideally	O	O:0.995137
I	O	O:0.998891
would	O	O:0.999858
like	O	O:0.999423
something	O	O:0.999940
like	O	O:0.994679
`	O	O:0.999743
apply_chunk()	O	B-API:0.779044
`	O	O:0.999529
which	O	O:0.966054
is	O	O:0.999566
the	O	O:0.998867
same	O	O:0.989922
as	O	O:0.994019
apply	B-API	O:0.622303
but	O	O:0.989648
only	O	O:0.971586
works	O	O:0.999374
on	O	O:0.999755
a	O	O:0.999081
piece	O	O:0.993248
of	O	O:0.997786
the	O	O:0.996736
dataframe	O	O:0.999665
.	O	O:0.990163
	
This	O	O:0.987378
has	O	O:0.997227
to	O	O:0.999285
be	O	O:0.999968
a	O	O:0.999642
common	O	O:0.872242
problem	O	O:0.991931
though	O	O:0.979968
,	O	O:0.996656
is	O	O:0.999063
there	O	O:0.997784
a	O	O:0.997273
design	O	O:0.981302
pattern	O	O:0.994294
I	O	O:0.997508
should	O	O:0.999753
be	O	O:0.998843
using	O	O:0.999301
for	O	O:0.991210
adding	O	O:0.962799
columns	O	O:0.957121
to	O	O:0.994759
large	O	O:0.999729
pandas	O	O:0.997355
dataframes	O	O:0.987102
?	O	O:0.993463
	
whats	O	O:0.993488
about	O	O:0.993228
using	O	O:0.997119
the	O	O:0.836023
apply	B-API	B-API:0.865179
method	O	O:0.962359
?	O	O:0.979114
	
Anytime	O	O:0.986409
you	O	O:0.999723
find	O	O:0.997530
yourself	O	O:0.999540
using	O	O:0.997873
`	O	O:0.994176
apply	B-API	B-API:0.892132
`	O	O:0.995114
or	O	O:0.894695
`	O	O:0.999661
iloc	B-API	B-API:0.795792
`	O	O:0.999203
in	O	O:0.998355
a	O	O:0.999316
loop	O	O:0.911366
it's	O	O:0.992801
likely	O	O:0.993420
that	O	O:0.997636
Pandas	O	O:0.981074
is	O	O:0.998166
operating	O	O:0.987847
much	O	O:0.978724
slower	O	O:0.986324
than	O	O:0.972587
is	O	O:0.994699
optimal	O	O:0.876307
.	O	O:0.989846
	
Convert	O	O:0.978927
freq	O	O:0.914948
string	O	O:0.995740
to	O	O:0.995238
DateOffset	B-API	O:0.894084
in	O	O:0.997937
pandas	O	O:0.996035
	
In	O	O:0.992558
pandas	O	O:0.993526
documentation	O	O:0.999290
one	O	O:0.994917
can	O	O:0.999825
read	O	O:0.988514
"	O	O:0.999250
Under	O	O:0.998455
the	O	O:0.998885
hood	O	O:0.967853
,	O	O:0.999324
these	O	O:0.998455
frequency	O	O:0.995244
strings	O	O:0.967144
are	O	O:0.999193
being	O	O:0.998444
translated	O	O:0.996007
into	O	O:0.973364
an	O	O:0.998597
instance	O	O:0.993420
of	O	O:0.998710
pandas	O	O:0.995694
DateOffset	B-API	O:0.841004
"	O	O:0.998584
when	O	O:0.994151
speaking	O	O:0.994813
of	O	O:0.999445
freq	O	O:0.888115
string	O	O:0.999636
such	O	O:0.997086
as	O	O:0.999133
"	O	O:0.984975
W	O	O:0.965878
"	O	O:0.997158
or	O	O:0.984601
"	O	O:0.997301
W-SUN	O	O:0.783569
"	O	O:0.989427
.	O	O:0.970242
	
stack	O	O:0.821839
/	O	O:0.996845
unstack	O	B-API:0.509954
/	O	O:0.972032
pivot	O	O:0.930201
dataframe	O	O:0.999611
on	O	O:0.997631
python	O	O:0.980124
/	O	O:0.997623
pandas	O	O:0.987275
	
yes	O	O:0.964475
,	O	O:0.998125
`	O	O:0.997396
isnull	B-API	B-API:0.899789
`	O	O:0.999832
will	O	O:0.994848
create	O	O:0.999360
a	O	O:0.998948
boolean	O	O:0.866819
series	O	O:0.998505
,	O	O:0.997458
`	O	O:0.999533
all	B-API	O:0.941508
`	O	O:0.999553
returns	O	O:0.596511
`	O	O:0.998931
True	O	O:0.769299
`	O	O:0.999622
if	O	O:0.991934
all	O	O:0.999116
are	O	O:0.987162
`	O	O:0.998716
True	O	O:0.782547
`	O	O:0.998381
	
Then	O	O:0.996411
merge	O	O:0.990388
the	O	O:0.999243
sub-tables	O	O:0.996001
back	O	O:0.996774
together	O	O:0.992272
in	O	O:0.999790
a	O	O:0.997003
way	O	O:0.983787
that	O	O:0.994258
replaces	O	O:0.998120
NaN	O	O:0.971381
values	O	O:0.995619
when	O	O:0.996033
there	O	O:0.997956
is	O	O:0.999941
data	O	O:0.990741
in	O	O:0.999900
one	O	O:0.999518
of	O	O:0.999700
the	O	O:0.997951
tables	O	O:0.951917
.	O	O:0.985555
	
I	O	O:0.996850
regularly	O	O:0.998474
work	O	O:0.987014
with	O	O:0.999116
very	O	O:0.997608
large	O	O:0.999584
data	O	O:0.997674
sets	O	O:0.996593
that	O	O:0.998252
are	O	O:0.999461
too	O	O:0.998434
big	O	O:0.990176
to	O	O:0.997302
manipulate	O	O:0.992311
in	O	O:0.996356
memory	O	O:0.984510
.	O	O:0.994412
	
I	O	O:0.995622
would	O	O:0.999775
like	O	O:0.994841
to	O	O:0.999965
read	O	O:0.995453
in	O	O:0.999754
a	O	O:0.999116
csv	O	O:0.997647
file	O	O:0.996759
iteratively	O	O:0.991919
,	O	O:0.999792
append	O	O:0.987544
each	O	O:0.989318
chunk	O	O:0.998243
into	O	O:0.962187
HDFStore	B-API	O:0.534898
object	O	O:0.979633
,	O	O:0.998631
and	O	O:0.999891
then	O	O:0.999350
work	O	O:0.999869
with	O	O:0.999947
subsets	O	O:0.992784
of	O	O:0.999770
the	O	O:0.999714
data	O	O:0.993298
.	O	O:0.994638
	
If	O	O:0.997616
you	O	O:0.998825
replace	O	O:0.974930
that	O	O:0.999283
line	O	O:0.994894
with	O	O:0.992396
:	O	O:0.995143
	
I	O	O:0.995678
wanted	O	O:0.998984
to	O	O:0.993706
merge	O	O:0.998715
these	O	O:0.998159
files	O	O:0.995068
so	O	O:0.999442
that	O	O:0.998788
i	O	O:0.999190
have	O	O:0.999776
something	O	O:0.999673
like	O	O:0.998865
this	O	O:0.997167
#CODE	O	O:0.996197
	
If	O	O:0.987738
it's	O	O:0.991451
six	O	O:0.998225
,	O	O:0.999918
then	O	O:0.998535
you	O	O:0.999892
can	O	O:0.999857
use	O	O:0.999745
join	B-API	O:0.832456
method	O	O:0.996918
by	O	O:0.992178
@USER	O	O:0.985882
Hayden	O	O:0.913049
.	O	O:0.984752
	
Then	O	O:0.996371
you	O	O:0.999448
can	O	O:0.999800
simply	O	O:0.999936
`	O	O:0.999943
join	B-API	B-API:0.814621
`	O	O:0.999649
them	O	O:0.671911
:	O	O:0.997349
#CODE	O	O:0.994414
	
@USER	O	O:0.995283
when	O	O:0.994047
you	O	O:0.999215
do	O	O:0.999955
a	O	O:0.999766
join	B-API	O:0.514693
with	O	O:0.998956
2x2	O	O:0.996892
duplicates	O	O:0.997469
you	O	O:0.999445
get	O	O:0.999719
4	O	O:0.996185
in	O	O:0.999463
the	O	O:0.996825
joined	O	O:0.923914
DataFrame	O	O:0.998824
.	O	O:0.989131
	
It's	O	O:0.990740
unclear	O	O:0.974312
how	O	O:0.998128
pandas	O	O:0.994045
should	O	O:0.999801
join	O	O:0.852469
in	O	O:0.999724
this	O	O:0.998259
case	O	O:0.998974
,	O	O:0.999817
so	O	O:0.999329
you	O	O:0.999624
need	O	O:0.999569
to	O	O:0.999863
be	O	O:0.999957
more	O	O:0.995979
explicit	O	O:0.942574
to	O	O:0.993657
it	O	O:0.994777
(	O	O:0.995527
and	O	O:0.999744
tell	O	O:0.984704
it	O	O:0.999079
what	O	O:0.998317
do	O	O:0.996141
you	O	O:0.999744
want	O	O:0.996020
)	O	O:0.999050
.	O	O:0.990856
	
On	O	O:0.994767
the	O	O:0.996293
similar	O	O:0.994581
note	O	O:0.988521
,	O	O:0.997017
is	O	O:0.998874
there	O	O:0.998676
a	O	O:0.999028
way	O	O:0.993494
to	O	O:0.999533
merge	O	O:0.999293
values	O	O:0.992997
based	O	O:0.951239
on	O	O:0.999038
index	O	O:0.993706
.	O	O:0.995128
	
For	O	O:0.990697
example	O	O:0.992473
,	O	O:0.999724
instead	O	O:0.999630
of	O	O:0.997778
listing	O	O:0.997332
Bact5	O	O:0.987377
in	O	O:0.999311
two	O	O:0.999735
rows	O	O:0.991293
,	O	O:0.999627
can	O	O:0.999873
we	O	O:0.999975
merge	O	O:0.999452
its	O	O:0.998180
value	O	O:0.999472
corresponding	O	O:0.974653
to	O	O:0.998573
file2	O	O:0.998418
in	O	O:0.999405
one	O	O:0.999072
row	O	O:0.999548
separated	O	O:0.996865
by	O	O:0.999414
a	O	O:0.992829
delimeter	O	O:0.947185
?	O	O:0.994993
	
Pandas	O	O:0.995578
dataframe	O	O:0.999938
insert	O	O:0.994957
rows	O	O:0.982781
	
I	O	O:0.998977
want	O	O:0.999331
to	O	O:0.999232
insert	O	O:0.999915
rows	O	O:0.972650
in	O	O:0.997321
DF	O	O:0.999960
and	O	O:0.999693
modify	O	O:0.997396
its	O	O:0.994174
related	O	O:0.925673
values	O	O:0.878205
:	O	O:0.979634
	
The	O	O:0.996814
code	O	O:0.984612
can	O	O:0.999835
only	O	O:0.999954
append	O	O:0.998680
rows	O	O:0.952823
but	O	O:0.998500
how	O	O:0.999604
to	O	O:0.999718
modify	O	O:0.999924
its	O	O:0.998831
values	O	O:0.986910
in	O	O:0.999741
a	O	O:0.999024
faster	O	O:0.919217
way	O	O:0.993473
?	O	O:0.989981
	
I	O	O:0.998737
want	O	O:0.999004
to	O	O:0.991852
use	O	O:0.999943
a	O	O:0.977812
function	O	O:0.993854
from	O	O:0.998296
an	O	O:0.998126
add-in	O	O:0.994109
in	O	O:0.996944
excel	O	O:0.977799
and	O	O:0.999052
apply	O	O:0.939216
it	O	O:0.983054
to	O	O:0.999679
some	O	O:0.999864
data	O	O:0.999014
i	O	O:0.999484
have	O	O:0.999531
simulated	O	O:0.989329
in	O	O:0.997752
python	O	O:0.981128
.	O	O:0.992821
	
I	O	O:0.998683
need	O	O:0.998759
to	O	O:0.998567
be	O	O:0.999984
able	O	O:0.999120
to	O	O:0.998793
call	O	O:0.996391
the	O	O:0.990606
add-in	O	O:0.889420
and	O	O:0.998997
apply	O	O:0.992927
my	O	O:0.996721
data	O	O:0.995064
indexes	O	O:0.991630
there	O	O:0.997919
...	O	O:0.998730
something	O	O:0.998486
along	O	O:0.995938
these	O	O:0.988162
lines	O	O:0.852808
:	O	O:0.992884
=	O	O:0.992669
add-in_name	O	O:0.828454
(	O	O:0.998274
data_range1	O	O:0.890338
,	O	O:0.999417
data_range2	O	O:0.911478
,	O	O:0.997843
"	O	O:0.999390
GGCV	O	O:0.936319
")	O	O:0.992575
	
After	O	O:0.990319
reading	O	O:0.990692
one	O	O:0.998525
line	O	O:0.997592
I	O	O:0.999047
append	O	O:0.978476
the	O	O:0.985851
dictionary	O	O:0.989814
to	O	O:0.999112
a	O	O:0.999876
list	O	O:0.692372
(	O	O:0.999609
so	O	O:0.998921
,	O	O:0.999719
the	O	O:0.999634
number	O	O:0.998029
of	O	O:0.999422
dictionaries	O	O:0.994340
in	O	O:0.999187
the	O	O:0.998884
list	O	O:0.898166
is	O	O:0.999498
equal	O	O:0.988671
to	O	O:0.999597
the	O	O:0.999938
number	O	O:0.998187
of	O	O:0.999578
lines	O	O:0.993859
in	O	O:0.999169
the	O	O:0.999632
file	O	O:0.978999
)	O	O:0.998381
.	O	O:0.992931
	
I	O	O:0.994504
can	O	O:0.998538
easily	O	O:0.998002
do	O	O:0.999878
this	O	O:0.998505
iteratively	O	O:0.990299
with	O	O:0.998051
loops	O	O:0.971791
,	O	O:0.997632
but	O	O:0.994998
I've	O	O:0.998218
read	O	O:0.984576
that	O	O:0.996310
you're	O	O:0.999230
supposed	O	O:0.999047
to	O	O:0.999563
slice	B-API	O:0.997474
/	O	O:0.999169
merge	B-API	O:0.823777
/	O	O:0.999420
join	B-API	O:0.954991
data	O	O:0.995420
frames	O	O:0.998438
holistically	O	O:0.991712
,	O	O:0.999511
so	O	O:0.997190
I'm	O	O:0.998109
trying	O	O:0.998572
to	O	O:0.999495
see	O	O:0.999880
if	O	O:0.999198
I	O	O:0.999458
can	O	O:0.999899
find	O	O:0.999568
a	O	O:0.999704
better	O	O:0.986478
way	O	O:0.998631
of	O	O:0.997915
doing	O	O:0.996875
this	O	O:0.988847
.	O	O:0.977157
	
A	O	O:0.998060
join	B-API	O:0.800878
will	O	O:0.998330
give	O	O:0.998571
me	O	O:0.997970
all	O	O:0.999912
the	O	O:0.998725
stuff	O	O:0.988600
that	O	O:0.991118
matches	O	O:0.991616
,	O	O:0.998555
but	O	O:0.978563
that's	O	O:0.997519
not	O	O:0.998465
exactly	O	O:0.999595
what	O	O:0.995969
I'm	O	O:0.999029
looking	O	O:0.996406
for	O	O:0.999007
,	O	O:0.998659
since	O	O:0.997363
I	O	O:0.999496
need	O	O:0.999957
a	O	O:0.998840
resulting	O	O:0.992167
dataframe	O	O:0.999922
for	O	O:0.999054
each	O	O:0.891615
key	O	O:0.941038
(	O	O:0.998402
i.e.	O	O:0.993877
for	O	O:0.999824
every	O	O:0.990073
row	O	O:0.994032
)	O	O:0.997231
in	O	O:0.976776
A	O	O:0.995362
.	O	O:0.992011
	
You	O	O:0.997836
then	O	O:0.998748
want	O	O:0.999606
to	O	O:0.999436
apply	O	O:0.999598
some	O	O:0.945556
function	O	O:0.996908
to	O	O:0.999613
each	O	O:0.999860
group	O	O:0.996652
of	O	O:0.999955
rows	O	O:0.971115
in	O	O:0.998362
`	O	O:0.999678
b	O	O:0.925933
`	O	O:0.999810
where	O	O:0.990555
the	O	O:0.998864
`	O	O:0.997929
b	O	O:0.904175
[	O	O:0.998250
"	O	O:0.997029
key	O	O:0.986231
"]`	O	O:0.989521
is	O	O:0.999164
one	O	O:0.997422
of	O	O:0.999792
the	O	O:0.998639
values	O	O:0.983681
in	O	O:0.996947
`	O	O:0.999787
keys	O	O:0.628079
`	O	O:0.998843
.	O	O:0.980138
	
Under	O	O:0.989309
the	O	O:0.990208
covers	O	O:0.969905
,	O	O:0.998358
these	O	O:0.996752
are	O	O:0.998689
really	O	O:0.988299
similar	O	O:0.998530
uses	O	O:0.984217
of	O	O:0.993721
`	O	O:0.992430
apply	B-API	B-API:0.807427
`	O	O:0.990731
.	O	O:0.891787
	
`	O	O:0.996461
loop_iter	O	O:0.754930
=	O	O:0.981833
len	B-API	B-API:0.995601
(	O	O:0.989980
A	O	O:0.990062
)	O	O:0.995777
/	O	O:0.981202
max	B-API	O:0.825578
(	O	O:0.990405
A	O	O:0.996003
[	O	O:0.988042
'	O	O:0.998377
SEQ_NUM	O	O:0.916466
'])	O	O:0.990715
	
Easy	O	O:0.988288
way	O	O:0.993826
to	O	O:0.997509
apply	O	O:0.997541
transformation	O	O:0.994085
from	O	O:0.986330
`	O	O:0.998182
pandas.get_dummies	B-API	B-API:0.984201
`	O	O:0.999408
to	O	O:0.998340
new	O	O:0.999931
data	O	O:0.991009
?	O	O:0.995558
	
As	O	O:0.997811
an	O	O:0.998723
aside	O	O:0.999522
that	O	O:0.996139
may	O	O:0.999888
help	O	O:0.998319
you	O	O:0.999352
in	O	O:0.999831
the	O	O:0.999330
meantime	O	O:0.993905
,	O	O:0.999503
with	O	O:0.999614
datetime-indexed	O	O:0.995672
data	O	O:0.998398
,	O	O:0.999289
[	O	O:0.999298
resample	B-API	O:0.876674
]	O	O:0.911005
(	O	O:0.989101
#URL	O	O:0.988978
)	O	O:0.994277
is	O	O:0.996268
usually	O	O:0.998478
a	O	O:0.998927
better	O	O:0.767819
choice	O	O:0.997151
than	O	O:0.984501
reindex	B-API	B-API:0.591796
.	O	O:0.978485
	
Call	O	O:0.945642
`	O	O:0.998255
transform	B-API	B-API:0.544537
`	O	O:0.999087
on	O	O:0.996518
the	O	O:0.997009
'	O	O:0.994260
measurement	O	O:0.987177
'	O	O:0.998697
column	O	O:0.998832
and	O	O:0.999649
pass	O	O:0.904289
the	O	O:0.978725
method	O	O:0.984792
`	O	O:0.999012
diff	B-API	B-API:0.843337
`	O	O:0.999802
,	O	O:0.994860
transform	B-API	O:0.988226
returns	O	O:0.990312
a	O	O:0.995582
series	O	O:0.997479
with	O	O:0.997141
an	O	O:0.999680
index	O	O:0.999880
aligned	O	O:0.989887
to	O	O:0.999636
the	O	O:0.999957
original	O	O:0.978551
df	O	O:0.854802
:	O	O:0.996606
#CODE	O	O:0.994794
	
If	O	O:0.992482
you	O	O:0.997297
are	O	O:0.999663
intending	O	O:0.999046
to	O	O:0.998830
apply	O	O:0.999115
some	O	O:0.988987
sorting	O	O:0.980355
on	O	O:0.999639
the	O	O:0.999244
result	O	O:0.999304
of	O	O:0.999195
`	O	O:0.998820
transform	B-API	O:0.822642
`	O	O:0.999852
then	O	O:0.996628
sort	O	O:0.998548
the	O	O:0.999567
df	O	O:0.911847
first	O	O:0.961617
:	O	O:0.993401
#CODE	O	O:0.995953
	
Or	O	O:0.997491
you	O	O:0.999071
can	O	O:0.999614
slice	O	O:0.999252
the	O	O:0.999808
columns	O	O:0.990165
and	O	O:0.999662
pass	O	O:0.995882
this	O	O:0.991116
to	O	O:0.998788
`	O	O:0.999902
drop	B-API	B-API:0.987141
`	O	O:0.997195
:	O	O:0.987324
#CODE	O	O:0.997385
	
These	O	O:0.987915
values	O	O:0.977848
are	O	O:0.999177
median	O	O:0.991313
values	O	O:0.995381
I	O	O:0.998852
calculated	O	O:0.998946
from	O	O:0.973004
elsewhere	O	O:0.985664
,	O	O:0.999227
and	O	O:0.999552
I	O	O:0.999748
have	O	O:0.998559
also	O	O:0.998398
their	O	O:0.997086
variance	O	O:0.967307
and	O	O:0.999205
standard	O	O:0.981714
deviation	O	O:0.843780
(	O	O:0.985423
and	O	O:0.999836
standard	O	O:0.993014
error	O	O:0.964434
,	O	O:0.998347
too	O	O:0.957888
)	O	O:0.997233
.	O	O:0.977635
	
=	O	O:0.865196
Hash	O	O:0.993665
[	O	O:0.997016
0	O	O:0.980354
]	O	O:0.986247
was	O	O:0.976528
my	O	O:0.994816
point	O	O:0.979286
,	O	O:0.999209
but	O	O:0.999755
even	O	O:0.997159
without	O	O:0.998508
arithmetic	O	O:0.993462
,	O	O:0.998506
there	O	O:0.998452
will	O	O:0.997837
be	O	O:0.999936
a	O	O:0.999868
huge	O	O:0.900218
range	O	O:0.998783
values	O	O:0.975177
for	O	O:0.999421
the	O	O:0.999383
keys	O	O:0.960675
that	O	O:0.997535
will	O	O:0.999542
give	O	O:0.998646
potentially	O	O:0.999257
unfortunate	O	O:0.972246
results	O	O:0.987491
.	O	O:0.987105
	
if	O	O:0.990743
precision	O	O:0.984762
is	O	O:0.998164
to	O	O:0.999041
decimal	O	O:0.999249
place	O	O:0.986561
,	O	O:0.999466
I'd	O	O:0.999304
multiply	O	O:0.983667
it	O	O:0.999372
by	O	O:0.995990
10	O	O:0.973942
and	O	O:0.998674
truncate	O	O:0.899116
maybe	O	O:0.968067
.	O	O:0.994051
	
the	O	O:0.986154
documentation	O	O:0.994495
to	O	O:0.995385
concat	B-API	O:0.929144
is	O	O:0.995981
impenetrable	O	O:0.958959
and	O	O:0.999854
its	O	O:0.998051
hard	O	O:0.956375
to	O	O:0.999719
find	O	O:0.999744
examples	O	O:0.997151
of	O	O:0.999720
this	O	O:0.997252
relatively	O	O:0.998820
simple	O	O:0.997692
task	O	O:0.966826
in	O	O:0.998572
the	O	O:0.996441
docs	O	O:0.971750
	
If	O	O:0.993326
you	O	O:0.989987
had	O	O:0.994608
not	O	O:0.998286
called	O	O:0.979018
`	O	O:0.999014
apply	B-API	B-API:0.775231
`	O	O:0.998034
on	O	O:0.987903
the	O	O:0.999198
`	O	O:0.993337
groupby	B-API	B-API:0.993675
`	O	O:0.999307
object	O	O:0.992745
then	O	O:0.999288
you	O	O:0.999937
could	O	O:0.999840
access	O	O:0.998270
the	O	O:0.999687
`	O	O:0.998508
groups	B-API	B-API:0.690721
`	O	O:0.994966
:	O	O:0.991297
#CODE	O	O:0.997811
	
pandas	O	O:0.978387
groupby	B-API	B-API:0.516679
X	O	O:0.959873
,	O	O:0.993861
Y	O	O:0.989599
and	O	O:0.999059
select	O	O:0.989794
last	O	O:0.993441
week	O	O:0.995233
of	O	O:0.993914
X1	O	O:0.958897
and	O	O:0.998102
X2	O	O:0.895911
(	O	O:0.994238
which	O	O:0.997646
have	O	O:0.999018
diff	O	O:0.965333
frequency	O	O:0.997332
)	O	O:0.989689
	
Then	O	O:0.997685
you	O	O:0.999867
can	O	O:0.999885
select	O	O:0.999486
the	O	O:0.999979
rows	O	O:0.985504
you	O	O:0.999723
want	O	O:0.999499
in	O	O:0.999803
an	O	O:0.999407
apply	B-API	O:0.987771
call	O	O:0.859765
on	O	O:0.996314
the	O	O:0.981423
grouped	O	O:0.652388
object	O	O:0.921103
:	O	O:0.991358
#CODE	O	O:0.996300
	
If	O	O:0.992721
you	O	O:0.998340
can't	O	O:0.999635
upgrade	O	O:0.994062
or	O	O:0.999463
don't	O	O:0.997853
solve	O	O:0.997308
the	O	O:0.999555
issue	O	O:0.992050
you	O	O:0.999441
have	O	O:0.998333
with	O	O:0.999675
0.14	O	O:0.993052
,	O	O:0.999733
you	O	O:0.998693
can	O	O:0.999216
try	O	O:0.999946
to	O	O:0.999607
use	O	O:0.999797
`	O	O:0.995496
ix	B-API	B-API:0.887782
`	O	O:0.999779
instead	O	O:0.996947
of	O	O:0.999321
`	O	O:0.998509
iloc	B-API	B-API:0.907431
`	O	O:0.998439
	
How	O	O:0.994254
do	O	O:0.991398
I	O	O:0.999276
export	O	O:0.995668
multiple	O	O:0.989304
pivot	O	O:0.992067
tables	O	O:0.983359
from	O	O:0.997287
python	O	O:0.997019
using	O	O:0.999238
pandas	O	O:0.988841
to	O	O:0.999325
a	O	O:0.999881
single	O	O:0.966231
csv	O	O:0.993831
document	O	O:0.994210
?	O	O:0.991209
	
Say	O	O:0.989509
I	O	O:0.999477
have	O	O:0.999741
a	O	O:0.985042
function	O	O:0.997548
pivots()	O	O:0.892651
which	O	O:0.999417
aggregates	O	O:0.993470
pivot	O	O:0.982065
tables	O	O:0.966398
#CODE	O	O:0.986044
	
I	O	O:0.998238
know	O	O:0.996755
how	O	O:0.993166
to	O	O:0.998648
export	O	O:0.999815
a	O	O:0.999638
single	O	O:0.970935
pivot	O	O:0.997699
table	O	O:0.991496
#CODE	O	O:0.988449
	
You	O	O:0.995725
can	O	O:0.997688
use	O	O:0.999522
`	O	O:0.985285
to_csv	B-API	B-API:0.997057
(	O	O:0.998215
path	O	O:0.983761
,	O	O:0.997264
mode=	O	O:0.987787
'	O	O:0.999418
a	O	O:0.996338
')`	O	O:0.997394
to	O	O:0.998410
append	O	O:0.997263
files	O	O:0.967501
.	O	O:0.988741
	
Use	O	O:0.971268
`	O	O:0.997067
shift	B-API	B-API:0.880971
`	O	O:0.996472
and	O	O:0.976098
`	O	O:0.998393
np.log	B-API	B-API:0.998238
`	O	O:0.985361
:	O	O:0.963181
#CODE	O	O:0.997785
	
I'd	O	O:0.997441
look	O	O:0.989418
at	O	O:0.999128
seeing	O	O:0.991120
if	O	O:0.994735
you	O	O:0.993201
can	O	O:0.999007
export	O	O:0.999175
it	O	O:0.999385
in	O	O:0.998175
it's	O	O:0.998186
raw	O	O:0.997647
form	O	O:0.999341
,	O	O:0.999047
otherwise	O	O:0.999831
this	O	O:0.999109
must	O	O:0.999260
be	O	O:0.999883
a	O	O:0.999729
common	O	O:0.671858
problem	O	O:0.975672
and	O	O:0.998380
someone	O	O:0.982472
somewhere	O	O:0.962660
has	O	O:0.995959
probably	O	O:0.994916
coded	O	O:0.997378
a	O	O:0.998580
method	O	O:0.994657
to	O	O:0.999238
strip	O	O:0.998703
the	O	O:0.999660
emojis	O	O:0.969201
out	O	O:0.998544
of	O	O:0.999160
the	O	O:0.998745
text	O	O:0.963959
	
Python	O	O:0.989489
pandas	O	O:0.987507
map	O	O:0.935649
dict	O	O:0.997857
keys	O	O:0.994200
to	O	O:0.998884
values	O	O:0.998203
	
I	O	O:0.998337
have	O	O:0.999330
a	O	O:0.998694
csv	O	O:0.980622
for	O	O:0.999523
input	O	O:0.994704
,	O	O:0.999505
whose	O	O:0.995694
row	O	O:0.994580
values	O	O:0.994196
I'd	O	O:0.999818
like	O	O:0.999657
to	O	O:0.999915
join	O	O:0.999158
into	O	O:0.995892
a	O	O:0.999291
new	O	O:0.963893
field	O	O:0.980011
.	O	O:0.974319
	
This	O	O:0.996987
new	O	O:0.995457
field	O	O:0.975654
is	O	O:0.998915
a	O	O:0.997065
constructed	O	O:0.895699
url	O	O:0.997548
,	O	O:0.998436
which	O	O:0.999312
will	O	O:0.999530
then	O	O:0.999906
be	O	O:0.999987
processed	O	O:0.999412
by	O	O:0.989752
the	O	O:0.984188
requests.post()	B-API	B-API:0.953612
method	O	O:0.992033
.	O	O:0.993258
	
I	O	O:0.994959
tried	O	O:0.996103
to	O	O:0.990984
map	O	O:0.979609
values	O	O:0.997001
to	O	O:0.999520
keys	O	O:0.999820
with	O	O:0.999376
a	O	O:0.999604
dict	O	O:0.990378
comprehension	O	O:0.991189
,	O	O:0.998774
but	O	O:0.997064
the	O	O:0.998823
assignment	O	O:0.983027
of	O	O:0.999598
a	O	O:0.995831
key	O	O:0.998869
like	O	O:0.989085
'	O	O:0.998886
FIRST_NAME	O	O:0.940389
'	O	O:0.997706
could	O	O:0.999533
end	O	O:0.999394
up	O	O:0.997039
mapping	O	O:0.997375
to	O	O:0.998537
values	O	O:0.999651
from	O	O:0.998633
an	O	O:0.999859
arbitrary	O	O:0.998991
field	O	O:0.996222
like	O	O:0.987354
test_df	O	O:0.820009
[	O	O:0.990506
'	O	O:0.998453
CITY	O	O:0.974786
']	O	O:0.991268
.	O	O:0.949629
	
which	O	O:0.993227
will	O	O:0.998968
give	O	O:0.999043
you	O	O:0.999537
output	O	O:0.998730
as	O	O:0.996873
follows	O	O:0.787978
:	O	O:0.996011
`	O	O:0.992685
[	O	O:0.985145
{	O	O:0.998155
'	O	O:0.990246
FIRST_NAME	O	O:0.499604
'	O	O:0.985321
:	O	O:0.993359
...,	O	O:0.971177
'	O	O:0.998719
LAST_NAME	O	B-API:0.599413
'	O	O:0.965679
:	O	O:0.998043
...	O	O:0.989217
}	O	O:0.998132
,	O	O:0.996180
{	O	O:0.991719
'	O	O:0.993947
FIRST_NAME	O	O:0.631913
'	O	O:0.989525
:	O	O:0.993370
...,	O	O:0.971177
'	O	O:0.998719
LAST_NAME	O	B-API:0.599525
'	O	O:0.964311
:	O	O:0.997910
...	O	O:0.991081
}	O	O:0.996614
]`	O	O:0.973675
(	O	O:0.996872
which	O	O:0.998563
will	O	O:0.999198
give	O	O:0.998676
you	O	O:0.999853
a	O	O:0.999533
list	O	O:0.953354
that	O	O:0.998261
has	O	O:0.999755
equal	O	O:0.997266
length	O	O:0.996281
as	O	O:0.981870
`	O	O:0.997572
test_df	O	B-API:0.588790
`)	O	O:0.998256
.	O	O:0.970310
	
This	O	O:0.989228
might	O	O:0.998714
be	O	O:0.999430
one	O	O:0.999776
possibility	O	O:0.976233
to	O	O:0.996208
easily	O	O:0.996261
map	O	O:0.842723
it	O	O:0.998438
to	O	O:0.999893
a	O	O:0.999936
correct	O	O:0.981255
row	O	O:0.994653
.	O	O:0.995357
	
Do	O	O:0.995460
you	O	O:0.999533
know	O	O:0.999525
if	O	O:0.999601
append	B-API	O:0.935065
returns	O	O:0.995908
a	O	O:0.997604
copy	O	B-API:0.806357
/	O	O:0.999168
view	O	B-API:0.665657
/	O	O:0.999330
reference	O	O:0.989606
of	O	O:0.999102
the	O	O:0.998574
original	O	O:0.993481
dataframe	O	O:0.999713
?	O	O:0.995412
	
Right	O	O:0.991241
now	O	O:0.995249
,	O	O:0.999465
I	O	O:0.998508
am	O	O:0.998939
trying	O	O:0.995206
to	O	O:0.999429
replace	O	O:0.996844
a	O	O:0.999219
stored	O	O:0.906723
procedure	O	O:0.999861
with	O	O:0.999429
a	O	O:0.998898
Python	O	O:0.975451
service	O	O:0.994605
,	O	O:0.996915
and	O	O:0.999551
the	O	O:0.999850
temp	O	O:0.920498
tables	O	O:0.987008
with	O	O:0.994121
Pandas	O	O:0.998734
dataframes	O	O:0.967169
.	O	O:0.985815
	
You	O	O:0.993902
could	O	O:0.999537
pass	O	O:0.994773
an	O	O:0.997788
argument	O	O:0.996186
to	O	O:0.991006
`	O	O:0.999803
apply	B-API	B-API:0.935390
`	O	O:0.979761
:	O	O:0.959366
#CODE	O	O:0.997435
	
Originally	O	O:0.980050
,	O	O:0.998897
I	O	O:0.999664
used	O	O:0.996913
append	B-API	O:0.739070
api	O	O:0.997202
to	O	O:0.998045
create	O	O:0.999774
a	O	O:0.999648
single	O	O:0.996267
table	O	O:0.996330
'	O	O:0.996002
impression	O	O:0.988609
'	O	O:0.998355
,	O	O:0.999268
however	O	O:0.998722
that	O	O:0.994079
was	O	O:0.997273
taking	O	O:0.996479
80sec	O	O:0.697829
per	O	O:0.984068
dataframe	O	O:0.999419
and	O	O:0.999526
given	O	O:0.997530
that	O	O:0.994678
I	O	O:0.999759
have	O	O:0.998835
almost	O	O:0.994794
200	O	O:0.996945
of	O	O:0.998344
files	O	O:0.989985
to	O	O:0.999730
be	O	O:0.999950
processed	O	O:0.996261
,	O	O:0.998952
the	O	O:0.997954
'	O	O:0.995037
append	B-API	O:0.742323
'	O	O:0.993264
appeared	O	O:0.995764
to	O	O:0.998737
be	O	O:0.999762
too	O	O:0.996590
slow	O	O:0.880611
.	O	O:0.988467
	
Also	O	O:0.991259
,	O	O:0.999204
why	O	O:0.997518
is	O	O:0.998919
append	B-API	O:0.922281
so	O	O:0.998541
much	O	O:0.959306
slower	O	O:0.997059
than	O	O:0.993874
put	O	O:0.906592
?	O	O:0.995925
	
pandas	O	O:0.997686
merge	B-API	O:0.916606
with	O	O:0.983229
MultiIndex	B-API	O:0.999301
,	O	O:0.999884
when	O	O:0.999352
only	O	O:0.999350
one	O	O:0.999989
level	O	O:0.996315
of	O	O:0.998396
index	O	O:0.991168
is	O	O:0.999439
to	O	O:0.997988
be	O	O:0.999948
used	O	O:0.996319
as	O	O:0.991275
key	O	O:0.984311
	
I	O	O:0.999101
want	O	O:0.999669
to	O	O:0.997553
recover	O	O:0.999628
the	O	O:0.999782
values	O	O:0.977552
in	O	O:0.999361
the	O	O:0.999787
column	O	O:0.990400
'	O	O:0.998498
_Cat	O	O:0.891650
'	O	O:0.999325
from	O	O:0.996403
df2	O	O:0.984932
and	O	O:0.999793
merge	O	O:0.998864
them	O	O:0.983419
into	O	O:0.988345
df1	O	O:0.899957
for	O	O:0.998828
the	O	O:0.999204
appropriate	O	O:0.996297
values	O	O:0.994087
of	O	O:0.995992
'	O	O:0.996751
_ItemId	O	O:0.742210
'	O	O:0.987656
.	O	O:0.988035
	
This	O	O:0.961466
is	O	O:0.996129
almost	O	O:0.953049
(	O	O:0.998810
I	O	O:0.997701
think	O	O:0.997929
?	O	O:0.993362
)	O	O:0.999527
a	O	O:0.998903
standard	O	O:0.980001
many-to-one	O	O:0.993837
merge	O	O:0.905499
,	O	O:0.997490
except	O	O:0.998830
that	O	O:0.997987
the	O	O:0.999815
appropriate	O	O:0.997512
key	O	O:0.996575
for	O	O:0.999438
the	O	O:0.999207
left	O	O:0.952515
df	O	O:0.861077
is	O	O:0.999426
one	O	O:0.992222
of	O	O:0.998457
MultiIndex	B-API	O:0.998790
levels	O	O:0.996756
.	O	O:0.992945
	
Or	O	O:0.970406
is	O	O:0.998959
there	O	O:0.999114
a	O	O:0.998716
better	O	O:0.956243
approach	O	O:0.994969
to	O	O:0.999799
this	O	O:0.999820
merge	B-API	O:0.934573
?	O	O:0.994150
	
loc	B-API	B-API:0.728514
will	O	O:0.996107
not	O	O:0.999090
attempt	O	O:0.998750
to	O	O:0.998797
use	O	O:0.999967
a	O	O:0.987739
number	O	O:0.742698
(	O	O:0.998373
eg	O	O:0.999238
1	O	O:0.994502
)	O	O:0.999433
as	O	O:0.999176
a	O	O:0.997317
positional	O	O:0.905617
argument	O	O:0.991590
at	O	O:0.992172
all	O	O:0.960596
(	O	O:0.995760
and	O	O:0.999561
will	O	O:0.998314
raise	O	O:0.978561
instead	O	O:0.998827
);	O	O:0.898688
see	O	O:0.995089
main	O	O:0.993140
pandas	O	O:0.998263
docs	O	O:0.991042
/	O	O:0.999071
selecting	O	O:0.997481
data	O	O:0.979656
	
I	O	O:0.998420
have	O	O:0.998614
the	O	O:0.996740
following	O	O:0.923692
boxplot	O	O:0.968370
:	O	O:0.995254
#CODE	O	O:0.997110
	
My	O	O:0.984387
question	O	O:0.845558
is	O	O:0.990006
:	O	O:0.995617
how	O	O:0.999305
can	O	O:0.999703
I	O	O:0.999977
change	O	O:0.998604
the	O	O:0.995737
whiskers	O	O:0.967403
/	O	O:0.998209
quantiles	O	O:0.998654
being	O	O:0.996948
plotted	O	O:0.986522
in	O	O:0.997851
the	O	O:0.991357
boxplot	O	O:0.988883
?	O	O:0.992265
	
it'll	O	O:0.993586
be	O	O:0.998380
difficult	O	O:0.998391
to	O	O:0.997480
translate	O	O:0.999667
those	O	O:0.997579
`	O	O:0.999399
ddply	O	B-API:0.873667
`	O	O:0.998499
calls	O	O:0.866583
to	O	O:0.997979
pandas	O	O:0.995804
.	O	O:0.992851
	
I	O	O:0.997430
guess	O	O:0.997526
`	O	O:0.984976
groupby	B-API	B-API:0.995230
`	O	O:0.998106
should	O	O:0.973643
be	O	O:0.999510
used	O	O:0.993220
but	O	O:0.992801
I	O	O:0.999324
find	O	O:0.998567
this	O	O:0.987915
format	O	O:0.999278
very	O	O:0.983454
cryptic	O	O:0.995794
so	O	O:0.996912
it's	O	O:0.997746
hard	O	O:0.993810
to	O	O:0.999709
translate	O	O:0.999522
to	O	O:0.998868
python	O	O:0.999443
	
If	O	O:0.998187
you	O	O:0.999428
drop	O	O:0.969698
the	O	O:0.998988
"	O	O:0.992929
%	O	O:0.991294
"	O	O:0.998839
sign	O	O:0.988080
,	O	O:0.999478
you	O	O:0.999397
can	O	O:0.999711
make	O	O:0.999837
the	O	O:0.999941
plot	O	O:0.989428
without	O	O:0.996111
ticks	O	O:0.954878
.	O	O:0.979561
	
Append	O	O:0.950988
Two	O	O:0.978191
Dataframes	O	O:0.973519
Together	O	O:0.843353
(	O	O:0.998262
Pandas	O	O:0.989395
,	O	O:0.998709
Python3	O	O:0.982079
)	O	O:0.995927
	
I	O	O:0.993650
am	O	O:0.998875
trying	O	O:0.995066
to	O	O:0.999394
append	O	O:0.991676
/	O	O:0.995732
join	O	B-API:0.736165
(	O	O:0.998004
?	O	O:0.997649
)	O	O:0.999174
two	O	O:0.999453
different	O	O:0.999372
dataframes	O	O:0.996099
together	O	O:0.985246
that	O	O:0.997633
don't	O	O:0.999407
share	O	O:0.993621
any	O	O:0.999311
overlapping	O	O:0.980590
data	O	O:0.979280
.	O	O:0.992341
	
I	O	O:0.993650
am	O	O:0.998814
trying	O	O:0.994786
to	O	O:0.999361
append	O	O:0.997015
these	O	O:0.998555
together	O	O:0.969540
using	O	O:0.995840
#CODE	O	O:0.929171
	
EDIT	O	O:0.942696
:	O	O:0.995047
in	O	O:0.998801
regards	O	O:0.994681
to	O	O:0.999715
Edchum's	O	O:0.998297
answers	O	O:0.995033
,	O	O:0.999615
I	O	O:0.999731
have	O	O:0.998477
tried	O	O:0.983460
merge	B-API	O:0.871962
and	O	O:0.995814
join	B-API	O:0.783633
but	O	O:0.997582
each	O	O:0.991617
create	O	O:0.981644
somewhat	O	O:0.997283
strange	O	O:0.994062
tables	O	O:0.945728
.	O	O:0.981496
	
OK	O	O:0.969148
,	O	O:0.999646
what	O	O:0.997815
you	O	O:0.999673
have	O	O:0.999447
to	O	O:0.999829
do	O	O:0.999466
is	O	O:0.999797
reindex	B-API	O:0.698569
or	O	O:0.998551
reset	B-API	O:0.864878
the	O	O:0.998362
index	O	O:0.997281
so	O	O:0.999557
they	O	O:0.998911
align	O	O:0.983466
	
Use	O	O:0.966613
`	O	O:0.993513
concat	B-API	B-API:0.962435
`	O	O:0.997401
and	O	O:0.998705
pass	O	O:0.979526
param	O	O:0.904805
`	O	O:0.993823
axis=1	O	B-API:0.772783
`	O	O:0.990371
:	O	O:0.974012
#CODE	O	O:0.997798
	
`	O	O:0.997452
join	B-API	B-API:0.896564
`	O	O:0.999227
also	O	O:0.852083
works	O	O:0.994488
:	O	O:0.991212
#CODE	O	O:0.989191
	
As	O	O:0.995019
does	O	O:0.994125
`	O	O:0.999692
merge	B-API	B-API:0.826303
`	O	O:0.987944
:	O	O:0.976315
#CODE	O	O:0.997806
	
In	O	O:0.996200
the	O	O:0.999529
case	O	O:0.998124
where	O	O:0.999369
the	O	O:0.999125
indices	O	O:0.976716
do	O	O:0.993260
not	O	O:0.999369
align	O	O:0.994575
where	O	O:0.996496
for	O	O:0.998096
example	O	O:0.998931
your	O	O:0.996895
first	O	O:0.993236
df	O	O:0.909774
has	O	O:0.995751
index	O	O:0.994161
`	O	O:0.998024
[	O	O:0.995360
0	O	O:0.998618
,	O	O:0.997356
1	O	O:0.987701
,	O	O:0.997213
2	O	O:0.990663
,	O	O:0.998208
3	O	O:0.986227
]`	O	O:0.990732
and	O	O:0.999921
your	O	O:0.998898
second	O	O:0.948475
df	O	O:0.907897
has	O	O:0.994297
index	O	O:0.994216
`	O	O:0.998323
[	O	O:0.995859
0	O	O:0.998781
,	O	O:0.997370
2	O	O:0.968142
]`	O	O:0.998912
this	O	O:0.996179
will	O	O:0.999641
mean	O	O:0.999616
that	O	O:0.999709
the	O	O:0.999893
above	O	O:0.990512
operations	O	O:0.994556
will	O	O:0.998021
naturally	O	O:0.999711
align	O	O:0.989176
against	O	O:0.992621
the	O	O:0.998872
first	O	O:0.980389
df's	O	O:0.994123
index	O	O:0.999766
resulting	O	O:0.998620
in	O	O:0.999911
a	O	O:0.997121
`	O	O:0.992746
NaN	O	B-API:0.540136
`	O	O:0.999429
row	O	O:0.934632
for	O	O:0.999394
index	O	O:0.997858
row	O	O:0.984793
`	O	O:0.998112
1	O	O:0.727936
`	O	O:0.998657
.	O	O:0.961258
	
To	O	O:0.990574
fix	O	O:0.995387
this	O	O:0.999006
you	O	O:0.999504
can	O	O:0.999686
reindex	O	O:0.995211
the	O	O:0.999323
second	O	O:0.988960
df	O	O:0.989717
either	O	O:0.999021
by	O	O:0.997995
calling	O	O:0.986687
`	O	O:0.986932
reset_index()	B-API	B-API:0.996392
`	O	O:0.999546
or	O	O:0.999576
assign	O	O:0.995164
directly	O	O:0.997986
like	O	O:0.988505
so	O	O:0.994300
:	O	O:0.997199
`	O	O:0.999371
df2.index	O	O:0.696993
=[	O	O:0.998281
0	O	O:0.982846
,	O	O:0.997049
1	O	O:0.967300
]`	O	O:0.986491
.	O	O:0.980225
	
And	O	O:0.996486
you	O	O:0.997961
could	O	O:0.999758
always	O	O:0.999963
drop	O	O:0.993162
back	O	O:0.980628
to	O	O:0.999872
numpy	O	O:0.999738
operations	O	O:0.992325
on	O	O:0.998682
the	O	O:0.999241
numpy	O	O:0.994173
array	O	O:0.972789
`	O	O:0.999341
pan.values	O	B-API:0.620628
`	O	O:0.999775
if	O	O:0.998496
need	O	O:0.999227
be	O	O:0.999106
,	O	O:0.999528
though	O	O:0.994677
,	O	O:0.999455
hopefully	O	O:0.988199
,	O	O:0.999855
that	O	O:0.997119
would	O	O:0.999605
be	O	O:0.999658
unnecessary	O	O:0.991420
.	O	O:0.970546
	
This	O	O:0.986327
argument	O	O:0.984214
is	O	O:0.999347
new	O	O:0.947033
in	O	O:0.988838
1.9	O	O:0.813494
...	O	O:0.976120
but	O	O:0.998376
there	O	O:0.991231
is	O	O:0.999811
a	O	O:0.996365
workaround	O	O:0.972369
,	O	O:0.998340
try	O	O:0.991778
`	O	O:0.994282
np.linspace	B-API	B-API:0.965537
(	O	O:0.998643
0	O	O:0.981171
,	O	O:0.993698
len	B-API	B-API:0.999684
(	O	O:0.998040
pep_list	O	O:0.791140
)	O	O:0.999402
,	O	O:0.998817
n+1	O	O:0.936481
,	O	O:0.998129
endpoint=True	O	O:0.890483
)	O	O:0.994969
.astype	B-API	B-API:0.984157
(	O	O:0.997466
int	O	O:0.931131
)`	O	O:0.972816
	
Take	O	O:0.990949
the	O	O:0.997980
time	O	O:0.971278
difference	O	O:0.985732
(	O	O:0.999545
using	O	O:0.998957
`	O	O:0.995325
shift	B-API	B-API:0.839722
`	O	O:0.998348
)	O	O:0.992912
til	O	O:0.997573
the	O	O:0.999372
next	O	O:0.986078
value	O	O:0.994321
,	O	O:0.998256
and	O	O:0.999524
multiply	O	O:0.845683
(	O	O:0.996466
value	O	O:0.997380
*	O	O:0.995554
seconds	O	O:0.918229
):	O	O:0.993531
#CODE	O	O:0.992528
	
Then	O	O:0.995065
do	O	O:0.999008
the	O	O:0.999551
resample	O	O:0.790195
to	O	O:0.993012
seconds	O	O:0.996079
(	O	O:0.999210
sum	O	O:0.991112
the	O	O:0.998757
value*seconds	O	B-API:0.664621
):	O	O:0.991979
#CODE	O	O:0.994248
	
you	O	O:0.995880
can	O	O:0.998523
isnull	B-API	O:0.928576
(	O	O:0.999636
df	O	O:0.975006
[	O	O:0.992225
'	O	O:0.997465
difference	O	O:0.997421
'])	O	O:0.996425
will	O	O:0.981329
give	O	O:0.994205
True	O	O:0.996188
on	O	O:0.997402
NaT	O	O:0.888168
,	O	O:0.999822
so	O	O:0.999399
you	O	O:0.999469
could	O	O:0.999931
subtract	O	O:0.999568
then	O	O:0.998369
use	O	O:0.999743
mask	B-API	O:0.982138
I	O	O:0.998036
think	O	O:0.995840
	
After	O	O:0.987971
they	O	O:0.992013
are	O	O:0.999587
done	O	O:0.998654
,	O	O:0.999664
merge	O	O:0.933152
the	O	O:0.997083
two	O	O:0.996549
frames	O	O:0.983103
together	O	O:0.912320
:	O	O:0.997391
#CODE	O	O:0.993187
	
Another	O	O:0.971411
solution	O	O:0.892364
(	O	O:0.997937
slightly	O	O:0.986656
harder	O	O:0.948317
):	O	O:0.995775
Merge	O	O:0.996221
the	O	O:0.998922
columns	O	O:0.992383
`	O	O:0.998234
transcript_id	O	O:0.685181
`	O	O:0.999577
,	O	O:0.968180
`	O	O:0.998556
gene_id	O	B-API:0.822007
`	O	O:0.998201
and	O	O:0.988112
`	O	O:0.999194
gene_name	O	B-API:0.961825
`	O	O:0.999480
in	O	O:0.998887
another	O	O:0.998805
column	O	O:0.998592
,	O	O:0.999111
say	O	O:0.994975
`	O	O:0.998997
merged_id	O	B-API:0.828769
`	O	O:0.998809
and	O	O:0.985473
`	O	O:0.998108
groupby	B-API	B-API:0.996665
`	O	O:0.998700
on	O	O:0.846701
`	O	O:0.999427
merged_id	O	B-API:0.737555
`	O	O:0.998093
.	O	O:0.972423
	
Geo	O	O:0.980880
Pandas	O	O:0.984763
Data	O	O:0.956360
Frame	O	O:0.971371
/	O	O:0.976375
Matrix	O	O:0.995164
-	O	O:0.997207
filter	O	O:0.751270
/	O	O:0.999094
drop	O	O:0.682366
NaN	O	O:0.689349
/	O	O:0.998393
False	O	O:0.982857
values	O	O:0.950085
	
Then	O	O:0.996347
I	O	O:0.999791
stack	O	O:0.982824
the	O	O:0.997515
dataframe	O	O:0.999346
,	O	O:0.999499
give	O	O:0.986912
the	O	O:0.999661
index	O	O:0.999252
levels	O	O:0.999566
the	O	O:0.999586
desired	O	O:0.993199
names	O	O:0.989291
,	O	O:0.999509
and	O	O:0.999889
select	O	O:0.963632
only	O	O:0.999046
the	O	O:0.999979
rows	O	O:0.992135
where	O	O:0.999286
we	O	O:0.999919
have	O	O:0.991400
'	O	O:0.998732
True	O	O:0.993675
'	O	O:0.993322
values	O	O:0.927221
:	O	O:0.994306
#CODE	O	O:0.997727
	
Can	O	O:0.992130
you	O	O:0.996382
enable	O	O:0.995045
the	O	O:0.998289
debugger	O	O:0.997746
to	O	O:0.999128
get	O	O:0.999985
a	O	O:0.999875
stack	O	O:0.913049
trace	O	O:0.985929
?	O	O:0.991798
	
reshape	O	O:0.956634
data	O	O:0.997311
frame	O	O:0.999570
in	O	O:0.999647
pandas	O	O:0.999647
with	O	O:0.998355
pivot	O	O:0.994927
table	O	O:0.997873
	
With	O	O:0.987002
pivot	O	O:0.994597
table	O	O:0.999152
you	O	O:0.999048
can	O	O:0.999781
get	O	O:0.999969
a	O	O:0.999707
matrix	O	O:0.995785
showing	O	O:0.992142
which	O	O:0.995579
`	O	O:0.998535
baz	O	O:0.868009
`	O	O:0.999662
corresponds	O	O:0.930673
to	O	O:0.999203
which	O	O:0.999727
`	O	O:0.998656
qux	O	O:0.706077
`	O	O:0.995847
:	O	O:0.960360
#CODE	O	O:0.997782
	
Rolling	O	O:0.968685
apply	O	O:0.867354
question	O	O:0.916561
	
For	O	O:0.998672
each	O	O:0.995302
group	O	O:0.961677
in	O	O:0.999592
the	O	O:0.989352
groupby	B-API	B-API:0.893417
object	O	O:0.991151
,	O	O:0.998780
we	O	O:0.999322
will	O	O:0.999486
want	O	O:0.999522
to	O	O:0.999544
apply	O	O:0.999251
a	O	O:0.900859
function	O	O:0.668451
:	O	O:0.994755
#CODE	O	O:0.995984
	
We	O	O:0.998663
want	O	O:0.998294
to	O	O:0.999779
take	O	O:0.999832
the	O	O:0.998062
Times	O	O:0.997241
column	O	O:0.995384
,	O	O:0.997738
and	O	O:0.999648
for	O	O:0.999536
each	O	O:0.913752
time	O	O:0.984635
,	O	O:0.999179
apply	O	O:0.980767
a	O	O:0.938107
function	O	O:0.932756
.	O	O:0.990442
	
That's	O	O:0.996699
done	O	O:0.994033
with	O	O:0.994044
`	O	O:0.998035
applymap	B-API	B-API:0.982954
`	O	O:0.992432
:	O	O:0.966400
#CODE	O	O:0.997818
	
Given	O	O:0.996228
a	O	O:0.997808
time	O	O:0.948839
`	O	O:0.999394
t	O	O:0.846948
`	O	O:0.999717
,	O	O:0.998975
we	O	O:0.999872
can	O	O:0.999252
select	O	O:0.994852
the	O	O:0.999421
`	O	O:0.996048
Value	O	O:0.662730
`	O	O:0.999565
s	O	O:0.963843
from	O	O:0.997537
`	O	O:0.998859
subf	O	B-API:0.745135
`	O	O:0.999828
whose	O	O:0.965542
times	O	O:0.995506
are	O	O:0.995038
in	O	O:0.999329
the	O	O:0.996855
half-open	O	O:0.973433
interval	O	O:0.975393
`	O	O:0.989464
(	O	O:0.998297
t-60	O	O:0.986708
,	O	O:0.999486
t	O	O:0.995333
]`	O	O:0.997942
using	O	O:0.997444
the	O	O:0.992178
`	O	O:0.976021
ix	B-API	B-API:0.992978
`	O	O:0.991032
method	O	O:0.937534
:	O	O:0.997362
#CODE	O	O:0.996625
	
pandas	O	O:0.998981
join	O	O:0.977128
data	O	O:0.994606
frames	O	O:0.997315
on	O	O:0.998479
similar	O	O:0.978876
but	O	O:0.999583
not	O	O:0.997353
identical	O	O:0.999445
string	O	O:0.997394
using	O	O:0.998669
lower	O	O:0.959367
case	O	O:0.984701
only	O	O:0.982065
	
I	O	O:0.998758
need	O	O:0.999082
to	O	O:0.999522
join	O	O:0.999567
data	O	O:0.998100
frames	O	O:0.999235
on	O	O:0.999824
columns	O	O:0.998949
that	O	O:0.998167
are	O	O:0.999190
similar	O	O:0.989865
but	O	O:0.998670
not	O	O:0.994404
identical	O	O:0.996650
.	O	O:0.991500
	
So	O	O:0.992114
I	O	O:0.998534
am	O	O:0.999588
trying	O	O:0.997138
to	O	O:0.999134
isolate	O	O:0.997825
the	O	O:0.999819
lowercase	O	O:0.990676
letters	O	O:0.989467
from	O	O:0.998844
each	O	O:0.996598
column	O	O:0.999350
,	O	O:0.999705
create	O	O:0.997646
new	O	O:0.998703
columns	O	O:0.998785
to	O	O:0.999356
join	O	O:0.995908
on	O	O:0.995831
.	O	O:0.994991
	
Note	O	O:0.996539
that	O	O:0.998717
this	O	O:0.998393
assumes	O	O:0.998349
collecting	O	O:0.990768
all	O	O:0.994298
ASCII	O	O:0.997028
characters	O	O:0.994676
from	O	O:0.990481
`	O	O:0.999904
a	O	O:0.983614
`	O	O:0.998567
to	O	O:0.970973
`	O	O:0.999963
z	O	O:0.715979
`	O	O:0.999398
suffices	O	O:0.997406
to	O	O:0.999826
produce	O	O:0.999497
values	O	O:0.994354
on	O	O:0.999084
which	O	O:0.999670
to	O	O:0.999585
join	O	O:0.983122
.	O	O:0.990944
	
You	O	O:0.996526
can	O	O:0.999417
of	O	O:0.999966
course	O	O:0.998432
extend	O	O:0.997237
this	O	O:0.994035
with	O	O:0.999502
several	O	O:0.999258
joins	O	O:0.979317
,	O	O:0.999712
the	O	O:0.999728
join	O	O:0.649180
solution	O	O:0.985951
detects	O	O:0.997162
common	O	O:0.997680
indices	O	O:0.962858
automatically	O	O:0.921368
.	O	O:0.993245
	
My	O	O:0.996241
data	O	O:0.982219
is	O	O:0.999345
in	O	O:0.998865
a	O	O:0.999120
DataFrame	O	O:0.999813
of	O	O:0.999152
about	O	O:0.995809
10378	O	O:0.998477
rows	O	O:0.879379
and	O	O:0.998668
`	O	O:0.998573
len	B-API	B-API:0.999871
(	O	O:0.999033
df	O	O:0.760551
[	O	O:0.976873
'	O	O:0.992055
Full	O	O:0.997942
name	O	O:0.995296
'])`	O	O:0.981530
is	O	O:0.993778
10378	O	O:0.953283
,	O	O:0.998791
as	O	O:0.996187
expected	O	O:0.966510
.	O	O:0.993236
	
But	O	O:0.988672
`	O	O:0.994600
len	B-API	B-API:0.999437
(	O	O:0.998999
choices	O	O:0.947200
)`	O	O:0.889813
is	O	O:0.998437
only	O	O:0.980051
1695	O	O:0.974748
.	O	O:0.983946
	
I'm	O	O:0.992955
fairly	O	O:0.994428
certain	O	O:0.996396
that	O	O:0.997629
the	O	O:0.999551
issue	O	O:0.981041
is	O	O:0.995453
in	O	O:0.996465
the	O	O:0.999600
first	O	O:0.995380
line	O	O:0.993248
,	O	O:0.999585
with	O	O:0.999191
the	O	O:0.998267
`	O	O:0.998377
to_dict()	B-API	B-API:0.996016
`	O	O:0.997971
function	O	O:0.994385
,	O	O:0.999679
as	O	O:0.998853
`	O	O:0.984681
len	B-API	B-API:0.999468
(	O	O:0.999341
df	O	O:0.779609
[	O	O:0.980262
'	O	O:0.993617
Full	O	O:0.998278
name	O	O:0.996871
']	O	O:0.986746
.astype	B-API	B-API:0.987738
(	O	O:0.993802
str	O	O:0.994800
)`	O	O:0.981503
results	O	O:0.990482
in	O	O:0.997329
10378	O	O:0.971516
and	O	O:0.998928
`	O	O:0.995111
len	B-API	B-API:0.999876
(	O	O:0.998977
df	O	O:0.760775
[	O	O:0.980121
'	O	O:0.993639
Full	O	O:0.998343
name	O	O:0.997760
']	O	O:0.996773
.to_dict()	B-API	B-API:0.588092
)`	O	O:0.969140
results	O	O:0.990963
in	O	O:0.996510
1695	O	O:0.935539
.	O	O:0.989882
	
what	O	O:0.935481
is	O	O:0.997955
`	O	O:0.991379
len	B-API	B-API:0.999713
(	O	O:0.997219
df.index.unique()	O	B-API:0.872803
)`	O	O:0.948840
?	O	O:0.986901
	
@USER	O	O:0.989710
using	O	O:0.995036
`	O	O:0.987445
choices	O	O:0.578815
=	O	O:0.987718
dict	O	O:0.932170
(	O	O:0.990331
zip	O	O:0.711112
(	O	O:0.998682
df	O	O:0.960163
[	O	O:0.996008
'	O	O:0.998645
n	O	O:0.994475
']	O	O:0.998166
,	O	O:0.996516
df	O	O:0.933069
[	O	O:0.986539
'	O	O:0.995603
Full	O	O:0.998573
name	O	O:0.996872
']	O	O:0.986878
.astype	B-API	B-API:0.988429
(	O	O:0.993699
str	O	O:0.971242
)))`	O	O:0.933104
,	O	O:0.999503
where	O	O:0.997783
df	O	O:0.955408
[	O	O:0.997874
'	O	O:0.998538
n	O	O:0.990673
']	O	O:0.988652
is	O	O:0.949111
np.arange	B-API	B-API:0.990559
(	O	O:0.982089
len	B-API	B-API:0.999009
(	O	O:0.998146
df	O	O:0.938796
))	O	O:0.737589
,	O	O:0.957627
worked	O	O:0.984142
fine	O	O:0.972740
and	O	O:0.996591
got	O	O:0.997843
what	O	O:0.987038
I	O	O:0.997534
needed	O	O:0.996586
.	O	O:0.978408
	
Had	O	O:0.994602
some	O	O:0.987777
indexing	O	O:0.994545
issues	O	O:0.991989
because	O	O:0.995870
I	O	O:0.996615
was	O	O:0.999282
importing	O	O:0.994915
the	O	O:0.999346
data	O	O:0.995902
from	O	O:0.999036
different	O	O:0.999547
Excel	O	O:0.996085
spreadsheets	O	O:0.974218
.	O	O:0.987578
	
This	O	O:0.947917
is	O	O:0.999301
what	O	O:0.976390
is	O	O:0.999417
happening	O	O:0.962021
in	O	O:0.999702
your	O	O:0.994506
case	O	O:0.995585
,	O	O:0.999594
and	O	O:0.999706
noted	O	O:0.995068
from	O	O:0.997133
the	O	O:0.998391
comments	O	O:0.992685
,	O	O:0.999210
since	O	O:0.998916
the	O	O:0.999237
amount	O	O:0.998776
of	O	O:0.996173
`	O	O:0.999333
unique	O	O:0.946283
`	O	O:0.999504
values	O	O:0.864518
for	O	O:0.997764
the	O	O:0.997151
index	O	O:0.992268
are	O	O:0.999174
only	O	O:0.998302
`	O	O:0.999635
1695	O	O:0.653931
`	O	O:0.999556
,	O	O:0.997985
we	O	O:0.999687
can	O	O:0.997943
confirm	O	O:0.999964
this	O	O:0.999696
by	O	O:0.996939
testing	O	O:0.997786
the	O	O:0.997965
value	O	O:0.995700
of	O	O:0.996196
`	O	O:0.993869
len	B-API	B-API:0.999453
(	O	O:0.996673
df.index.unique()	O	B-API:0.872962
)`	O	O:0.924840
.	O	O:0.976180
	
what	O	O:0.992341
do	O	O:0.993467
you	O	O:0.999897
mean	O	O:0.999419
by	O	O:0.998760
normalize	O	O:0.933059
?	O	O:0.991292
	
The	O	O:0.996363
other	O	O:0.990635
way	O	O:0.960228
is	O	O:0.996735
much	O	O:0.930140
easier	O	O:0.951251
and	O	O:0.998187
involves	O	O:0.994911
using	O	O:0.985028
`	O	O:0.985235
resample	B-API	B-API:0.972056
`	O	O:0.998047
to	O	O:0.994039
convert	O	O:0.996132
to	O	O:0.999554
daily	O	O:0.998098
observations	O	O:0.982257
and	O	O:0.998800
backfill	O	O:0.973557
daily	O	O:0.887852
consumption	O	O:0.946818
.	O	O:0.968198
	
(	O	O:0.992898
Note	O	O:0.999176
that	O	O:0.998280
the	O	O:0.999750
first	O	O:0.990478
and	O	O:0.999891
last	O	O:0.976721
months	O	O:0.985932
are	O	O:0.998864
based	O	O:0.982507
on	O	O:0.999400
partial	O	O:0.995247
data	O	O:0.996059
,	O	O:0.999341
you	O	O:0.999062
may	O	O:0.999830
want	O	O:0.999659
to	O	O:0.999725
either	O	O:0.999971
drop	O	O:0.996131
them	O	O:0.996811
or	O	O:0.999732
pro-rate	O	O:0.968887
the	O	O:0.998577
daily	O	O:0.848399
consumption	O	O:0.985077
.	O	O:0.988868
)	O	O:0.998802
#CODE	O	O:0.984158
	
Basically	O	O:0.997108
,	O	O:0.998498
after	O	O:0.998540
calculating	O	O:0.985178
the	O	O:0.996696
daily	O	O:0.954069
consumption	O	O:0.988751
,	O	O:0.999074
do	O	O:0.999073
a	O	O:0.998993
partial	O	O:0.971953
resample	B-API	O:0.981764
by	O	O:0.980576
adding	O	O:0.978019
the	O	O:0.991903
first	O	O:0.967692
and	O	O:0.999866
last	O	O:0.993903
day	O	O:0.996466
of	O	O:0.999280
each	O	O:0.918292
month	O	O:0.951681
.	O	O:0.990042
	
I	O	O:0.994514
will	O	O:0.996449
implement	O	O:0.967329
it	O	O:0.997598
and	O	O:0.998425
see	O	O:0.996453
how	O	O:0.988378
it	O	O:0.999003
goes	O	O:0.985549
,	O	O:0.999546
but	O	O:0.998754
can	O	O:0.998803
you	O	O:0.999990
also	O	O:0.999412
explain	O	O:0.999266
what	O	O:0.965805
'	O	O:0.998525
1d	O	O:0.945257
'	O	O:0.997903
means	O	O:0.994555
in	O	O:0.999510
the	O	O:0.987325
resample	B-API	B-API:0.620645
method	O	O:0.987895
?	O	O:0.993998
	
@USER	O	O:0.869527
'	O	O:0.995929
1d	O	O:0.922365
'	O	O:0.997146
just	O	O:0.995394
means	O	O:0.999628
1	O	O:0.992943
day	O	O:0.992636
for	O	O:0.999440
the	O	O:0.998936
frequency	O	O:0.984889
of	O	O:0.995557
the	O	O:0.995934
resample	B-API	O:0.625011
.	O	O:0.961996
	
So	O	O:0.995337
I	O	O:0.999678
want	O	O:0.999629
something	O	O:0.997811
that	O	O:0.999385
will	O	O:0.999593
drop	O	O:0.973089
the	O	O:0.998876
`	O	O:0.998505
lob	O	O:0.684863
`	O	O:0.999642
group	O	O:0.691311
,	O	O:0.999589
but	O	O:0.999323
keep	O	O:0.993389
every	O	O:0.999580
record	O	O:0.978752
of	O	O:0.999099
both	O	O:0.992621
the	O	O:0.998389
`	O	O:0.993727
mol	O	O:0.626366
`	O	O:0.998996
and	O	O:0.972836
`	O	O:0.999581
thg	O	B-API:0.619006
`	O	O:0.998837
group	O	O:0.597534
.	O	O:0.995640
	
Pandas	O	O:0.989742
Merge	O	O:0.986156
2	O	O:0.994587
data	O	O:0.998174
frames	O	O:0.999338
by	O	O:0.998977
2	O	O:0.998481
columns	O	O:0.996277
each	O	O:0.967718
	
In	O	O:0.998625
each	O	O:0.995218
data	O	O:0.998294
frame	O	O:0.999961
i	O	O:0.999563
have	O	O:0.999195
column	O	O:0.999652
with	O	O:0.998627
the	O	O:0.999474
same	O	O:0.993689
name	O	O:0.992745
and	O	O:0.999350
values	O	O:0.895322
(	O	O:0.994974
Key_Merge1	O	O:0.911316
)	O	O:0.998262
and	O	O:0.998256
in	O	O:0.999870
each	O	O:0.988967
data	O	O:0.997598
frame	O	O:0.999945
i	O	O:0.999605
have	O	O:0.995913
2	O	O:0.998867
different	O	O:0.999009
column	O	O:0.998595
names	O	O:0.996787
with	O	O:0.999608
same	O	O:0.994923
values	O	O:0.918502
(	O	O:0.999238
Key_Merge2	O	O:0.934876
)	O	O:0.997679
.	O	O:0.983812
	
How	O	O:0.985494
can	O	O:0.998962
i	O	O:0.999894
merge	O	O:0.994325
2	O	O:0.997431
data	O	O:0.998814
frames	O	O:0.999271
by	O	O:0.998788
2	O	O:0.992466
columns	O	O:0.937721
:	O	O:0.992457
	
Can	O	O:0.983474
you	O	O:0.998909
post	O	O:0.993352
an	O	O:0.999700
example	O	O:0.999129
data	O	O:0.995442
and	O	O:0.999848
df	O	O:0.989217
,	O	O:0.999562
your	O	O:0.995855
text	O	O:0.967170
description	O	O:0.983155
is	O	O:0.997803
not	O	O:0.995450
clear	O	O:0.989704
enough	O	O:0.967358
but	O	O:0.997410
generally	O	O:0.988651
you	O	O:0.999746
want	O	O:0.997880
to	O	O:0.999627
merge	O	O:0.997802
and	O	O:0.999593
pass	O	O:0.952158
the	O	O:0.998374
list	O	O:0.947017
of	O	O:0.999196
cols	O	O:0.990608
to	O	O:0.999812
merge	O	O:0.996037
the	O	O:0.997441
;	O	O:0.992803
hs	O	B-API:0.807968
and	O	O:0.999768
rhs	O	O:0.607997
on	O	O:0.949484
:	O	O:0.993333
`	O	O:0.997563
pd.merge	B-API	B-API:0.888089
(	O	O:0.999160
df1	O	O:0.950409
,	O	O:0.998368
df2	O	O:0.969615
,	O	O:0.998610
left_on	O	B-API:0.580472
=[	O	O:0.978403
'	O	O:0.997463
Key_Merge1	O	O:0.854167
'	O	O:0.997881
,	O	O:0.995991
'	O	O:0.999260
Key_Merge21	O	O:0.965385
']	O	O:0.998912
,	O	O:0.995783
right_on	O	O:0.761732
=[	O	O:0.979655
'	O	O:0.998230
Key_Merge1	O	O:0.854294
'	O	O:0.997530
,	O	O:0.995204
'	O	O:0.999097
Key_merge22	O	O:0.948873
'])`	O	O:0.993656
	
OK	O	O:0.986905
,	O	O:0.999257
you	O	O:0.999597
have	O	O:0.999335
to	O	O:0.999810
rename	O	O:0.987814
'	O	O:0.999418
PRODUCT_GROUP	O	O:0.930223
'	O	O:0.996832
in	O	O:0.999087
DF2	O	O:0.994668
in	O	O:0.999390
order	O	O:0.987335
for	O	O:0.999390
the	O	O:0.995536
`	O	O:0.996278
merge	B-API	B-API:0.807777
`	O	O:0.999167
to	O	O:0.993878
work	O	O:0.997160
:	O	O:0.998319
#CODE	O	O:0.997528
	
the	O	O:0.996490
merge	B-API	O:0.849078
will	O	O:0.996559
naturally	O	O:0.999805
find	O	O:0.999552
the	O	O:0.999133
2	O	O:0.995571
columns	O	O:0.998123
that	O	O:0.998059
match	O	O:0.998027
and	O	O:0.999686
perform	O	O:0.989574
an	O	O:0.997115
inner	O	O:0.995825
merge	B-API	O:0.808196
as	O	O:0.991658
desired	O	O:0.925643
	
I	O	O:0.996680
can	O	O:0.999812
strip	O	O:0.986105
out	O	O:0.999000
the	O	O:0.999290
rightmost	O	O:0.862978
'	O	O:0.997629
.csv	O	O:0.804306
'	O	O:0.999053
part	O	O:0.997725
like	O	O:0.997050
this	O	O:0.987732
:	O	O:0.996946
#CODE	O	O:0.995582
	
How	O	O:0.995891
to	O	O:0.998175
merge	O	O:0.992622
two	O	O:0.994927
DataFrame	O	O:0.999810
columns	O	O:0.994559
and	O	O:0.999467
apply	O	O:0.932240
pandas.to_datetime	B-API	B-API:0.987854
to	O	O:0.976531
it	O	O:0.999577
?	O	O:0.997138
	
What	O	O:0.991723
would	O	O:0.998687
be	O	O:0.999912
a	O	O:0.999895
more	O	O:0.886915
pythonic	O	O:0.995114
way	O	O:0.997949
to	O	O:0.998487
merge	O	O:0.998603
two	O	O:0.996653
columns	O	O:0.991868
,	O	O:0.998598
and	O	O:0.999765
apply	O	O:0.993087
a	O	O:0.972805
function	O	O:0.991065
into	O	O:0.996127
the	O	O:0.997202
result	O	O:0.987469
?	O	O:0.995309
	
once	O	O:0.988331
sorted	O	O:0.997320
I	O	O:0.998577
replace	O	O:0.853483
the	O	O:0.994801
df.index	O	O:0.693626
with	O	O:0.998900
a	O	O:0.996634
numerical	O	O:0.961004
index	O	O:0.995333
#CODE	O	O:0.986803
	
This	O	O:0.995000
can	O	O:0.999318
be	O	O:0.999956
accomplished	O	O:0.998353
with	O	O:0.998840
a	O	O:0.998838
one	O	O:0.997938
line	O	O:0.997739
solution	O	O:0.997325
using	O	O:0.997935
Pandas	O	O:0.841332
'	O	O:0.967009
boolean	O	O:0.897680
indexing	O	O:0.968604
.	O	O:0.980166
	
The	O	O:0.989925
one-liner	O	O:0.992412
also	O	O:0.988320
employs	O	O:0.999429
some	O	O:0.995562
other	O	O:0.981976
tricks	O	O:0.916385
:	O	O:0.993268
Pandas	O	O:0.991507
'	O	O:0.995388
`	O	O:0.994275
map	B-API	B-API:0.936068
`	O	O:0.998397
and	O	O:0.961624
`	O	O:0.999665
diff	B-API	B-API:0.972571
`	O	O:0.998320
methods	O	O:0.841549
and	O	O:0.999894
a	O	O:0.995743
`	O	O:0.966103
lambda	O	O:0.720771
`	O	O:0.993455
function	O	O:0.958809
.	O	O:0.993537
	
`	O	O:0.983884
map	B-API	B-API:0.940584
`	O	O:0.995619
is	O	O:0.996611
used	O	O:0.992628
to	O	O:0.998225
apply	B-API	O:0.993347
the	O	O:0.979573
`	O	O:0.994513
lambda	O	O:0.818338
`	O	O:0.998851
function	O	O:0.986112
to	O	O:0.999770
all	O	O:0.999980
rows	O	O:0.960331
.	O	O:0.994760
	
The	O	O:0.978190
`	O	O:0.997798
lambda	O	O:0.826835
`	O	O:0.997110
function	O	O:0.950582
is	O	O:0.999389
needed	O	O:0.997071
to	O	O:0.999570
create	O	O:0.999248
a	O	O:0.998781
custom	O	O:0.905601
less-then	O	O:0.970226
comparison	O	O:0.996344
that	O	O:0.998467
will	O	O:0.998943
evaluate	O	O:0.998610
NaN	O	O:0.978110
values	O	O:0.974585
to	O	O:0.994898
True	O	O:0.997593
.	O	O:0.991465
	
There	O	O:0.972171
is	O	O:0.999711
a	O	O:0.997991
built	O	O:0.635283
in	O	O:0.994801
method	O	O:0.993654
for	O	O:0.999766
this	O	O:0.984723
`	O	O:0.999075
diff	B-API	B-API:0.981644
`	O	O:0.992482
:	O	O:0.970995
#CODE	O	O:0.997810
	
as	O	O:0.995711
pointed	O	O:0.961967
out	O	O:0.995951
calling	O	O:0.962452
`	O	O:0.997625
diff	B-API	B-API:0.937903
`	O	O:0.999739
here	O	O:0.974722
will	O	O:0.999742
lose	O	O:0.994073
the	O	O:0.999858
first	O	O:0.992136
row	O	O:0.995644
so	O	O:0.998233
I'm	O	O:0.999456
using	O	O:0.999835
a	O	O:0.995907
ugly	O	O:0.847966
hack	O	O:0.999255
where	O	O:0.998814
I	O	O:0.999491
concatenate	O	O:0.990896
the	O	O:0.997578
first	O	O:0.994009
row	O	O:0.997645
with	O	O:0.999741
the	O	O:0.999797
result	O	O:0.999293
of	O	O:0.999392
the	O	O:0.995031
`	O	O:0.999675
diff	B-API	B-API:0.934028
`	O	O:0.999826
so	O	O:0.995496
I	O	O:0.999635
don't	O	O:0.999802
lose	O	O:0.923516
the	O	O:0.999855
first	O	O:0.985451
row	O	O:0.989624
	
Using	O	O:0.931050
`	O	O:0.998535
diff	B-API	B-API:0.855914
`	O	O:0.999830
like	O	O:0.993816
this	O	O:0.999512
drops	O	O:0.988732
the	O	O:0.999227
first	O	O:0.978005
row	O	O:0.987993
.	O	O:0.988300
	
(	O	O:0.995553
I	O	O:0.999073
can	O	O:0.999929
also	O	O:0.998551
use	O	O:0.999501
the	O	O:0.991842
chunksize	O	B-API:0.586254
option	O	O:0.988760
and	O	O:0.998743
concat	O	O:0.826165
myself	O	O:0.785991
,	O	O:0.997504
but	O	O:0.998130
that	O	O:0.995878
seems	O	O:0.999690
to	O	O:0.999739
be	O	O:0.999977
a	O	O:0.999714
bit	O	O:0.954997
of	O	O:0.999568
a	O	O:0.990719
hack	O	O:0.981070
.	O	O:0.997420
)	O	O:0.998594
	
Jeff	O	O:0.979541
,	O	O:0.999057
I	O	O:0.997604
updated	O	O:0.992403
sec_id	O	O:0.580387
and	O	O:0.999428
dt	B-API	O:0.880956
in	O	O:0.987953
the	O	O:0.994690
dataframe	O	O:0.999054
.	O	O:0.991332
	
Sorry	O	O:0.984247
,	O	O:0.998608
I	O	O:0.997957
had	O	O:0.996182
to	O	O:0.995693
update	O	O:0.990922
"	O	O:0.998999
sec_id	O	B-API:0.508112
"	O	O:0.996968
and	O	O:0.997221
"	O	O:0.998375
dt	O	O:0.541122
"	O	O:0.996729
to	O	O:0.983744
"	O	O:0.999741
id	O	O:0.872652
"	O	O:0.996146
and	O	O:0.997371
"	O	O:0.998305
date	O	B-API:0.738139
"	O	O:0.986098
.	O	O:0.951459
	
0.12	O	O:0.672488
is	O	O:0.997780
fine	O	O:0.972107
;	O	O:0.998093
FYI	O	O:0.980024
the	O	O:0.998584
format	O	O:0.968056
keyword	O	O:0.985418
doesn't	O	O:0.997502
do	O	O:0.999506
anything	O	O:0.999697
with	O	O:0.987930
append	B-API	B-API:0.655190
(	O	O:0.988620
and	O	O:0.998628
it's	O	O:0.985347
for	O	O:0.997445
0.13	O	O:0.846809
anyhow	O	O:0.940975
);	O	O:0.969449
append	B-API	O:0.796076
always	O	O:0.974784
is	O	O:0.999748
a	O	O:0.996570
table	O	O:0.971465
	
I	O	O:0.996066
would	O	O:0.999796
like	O	O:0.998716
to	O	O:0.999897
get	O	O:0.999955
every	O	O:0.994285
,	O	O:0.999342
let's	O	O:0.997752
say	O	O:0.997808
,	O	O:0.999845
6	O	O:0.996296
hours	O	O:0.997200
of	O	O:0.999561
data	O	O:0.995995
and	O	O:0.999953
independently	O	O:0.996899
fit	O	O:0.988022
a	O	O:0.995386
curve	O	O:0.970820
to	O	O:0.999738
that	O	O:0.999955
data	O	O:0.996339
.	O	O:0.998471
	
Since	O	O:0.993855
pandas	O	O:0.988103
'	O	O:0.997497
`	O	O:0.998484
resample	B-API	B-API:0.829514
`	O	O:0.987195
function	O	O:0.967450
has	O	O:0.999542
a	O	O:0.995162
`	O	O:0.991565
how	O	O:0.960719
`	O	O:0.999411
keyword	O	O:0.994848
that	O	O:0.996108
is	O	O:0.999596
supposed	O	O:0.996527
to	O	O:0.999090
be	O	O:0.999906
any	O	O:0.998591
numpy	O	O:0.987602
array	O	O:0.979827
function	O	O:0.997816
,	O	O:0.999340
I	O	O:0.998572
thought	O	O:0.996119
that	O	O:0.993635
I	O	O:0.999682
could	O	O:0.999836
maybe	O	O:0.996460
try	O	O:0.999274
to	O	O:0.998368
use	O	O:0.999864
resample	B-API	O:0.803213
to	O	O:0.994936
do	O	O:0.999870
that	O	O:0.998903
with	O	O:0.999392
`	O	O:0.998275
polyfit	B-API	B-API:0.903005
`	O	O:0.998384
,	O	O:0.993707
but	O	O:0.998882
apparently	O	O:0.988651
there	O	O:0.993914
is	O	O:0.999269
no	O	O:0.989112
way	O	O:0.951967
(	O	O:0.996768
right	O	O:0.995217
?	O	O:0.997600
)	O	O:0.997698
.	O	O:0.991791
	
Why	O	O:0.994982
does	O	O:0.995401
the	O	O:0.999778
second	O	O:0.998726
block	O	O:0.997968
of	O	O:0.997350
code	O	O:0.980649
not	O	O:0.999422
work	O	O:0.996609
?	O	O:0.998280
	
Doesn't	O	O:0.980972
DataFrame.apply()	B-API	B-API:0.905473
default	O	O:0.984144
to	O	O:0.988548
inplace	O	O:0.885702
?	O	O:0.993104
	
There	O	O:0.970845
is	O	O:0.998162
no	O	O:0.996756
inplace	O	O:0.735679
parameter	O	O:0.994757
to	O	O:0.995105
the	O	O:0.999815
apply	B-API	B-API:0.589886
function	O	O:0.982255
.	O	O:0.978401
	
Even	O	O:0.993290
if	O	O:0.997687
it	O	O:0.998622
doesn't	O	O:0.996723
default	O	O:0.994105
to	O	O:0.997802
inplace	O	O:0.859219
,	O	O:0.995158
shouldn't	O	O:0.996764
it	O	O:0.999565
provide	O	O:0.997713
an	O	O:0.998893
inplace	O	O:0.642973
parameter	O	O:0.997324
the	O	O:0.996321
way	O	O:0.958346
replace()	B-API	B-API:0.814192
does	O	O:0.984527
?	O	O:0.996996
	
No	O	O:0.992104
,	O	O:0.997988
apply	B-API	O:0.863109
does	O	O:0.958532
not	O	O:0.998272
work	O	O:0.999314
inplace*	O	O:0.947359
.	O	O:0.994369
	
In	O	O:0.992284
general	O	O:0.975864
apply	B-API	O:0.790448
is	O	O:0.974190
slow	O	B-API:0.648530
(	O	O:0.999066
since	O	O:0.995872
you	O	O:0.998473
are	O	O:0.999938
basically	O	O:0.999930
iterating	O	O:0.998919
through	O	O:0.996224
each	O	O:0.977744
row	O	O:0.989296
in	O	O:0.998830
python	O	O:0.994766
)	O	O:0.999226
,	O	O:0.995332
and	O	O:0.999750
the	O	O:0.995465
"	O	O:0.995197
game	O	O:0.963924
"	O	O:0.994849
is	O	O:0.998550
to	O	O:0.995274
rewrite	O	O:0.998586
that	O	O:0.989915
function	O	O:0.997735
in	O	O:0.999657
terms	O	O:0.995001
of	O	O:0.998293
pandas	O	O:0.977475
/	O	O:0.998121
numpy	O	O:0.993836
native	O	O:0.879189
functions	O	O:0.960521
and	O	O:0.988884
indexing	O	O:0.984088
.	O	O:0.961830
	
If	O	O:0.995397
you	O	O:0.999691
want	O	O:0.999661
to	O	O:0.999607
delve	O	O:0.999808
into	O	O:0.997988
more	O	O:0.990872
details	O	O:0.997982
about	O	O:0.996576
the	O	O:0.997336
internals	O	O:0.991590
,	O	O:0.999810
check	O	O:0.998260
out	O	O:0.998391
the	O	O:0.998998
BlockManager	O	O:0.842219
in	O	O:0.997872
core	O	O:0.968755
/	O	O:0.997022
internals.py	O	O:0.920920
,	O	O:0.999652
this	O	O:0.978877
is	O	O:0.998549
the	O	O:0.997038
object	O	O:0.979896
which	O	O:0.994269
holds	O	O:0.990540
the	O	O:0.999248
underlying	O	O:0.975782
numpy	O	O:0.988041
arrays	O	O:0.955685
.	O	O:0.990271
	
*	O	O:0.994533
apply	B-API	B-API:0.620970
is	O	O:0.984329
not	O	O:0.983701
usually	O	O:0.998838
going	O	O:0.991798
to	O	O:0.998747
make	O	O:0.998137
sense	O	O:0.990195
inplace	O	B-API:0.767261
(	O	O:0.993562
and	O	O:0.997007
IMO	O	O:0.998823
this	O	O:0.992305
behaviour	O	O:0.990439
would	O	O:0.997136
rarely	O	O:0.992635
be	O	O:0.999543
desired	O	O:0.978905
)	O	O:0.992601
.	O	O:0.976473
	
I	O	O:0.992839
use	O	O:0.998722
this	O	O:0.824676
function	O	O:0.994168
with	O	O:0.993371
pandas	O	O:0.998285
to	O	O:0.999113
apply	O	O:0.995133
it	O	O:0.996870
to	O	O:0.999733
each	O	O:0.999710
month	O	O:0.988538
of	O	O:0.999764
a	O	O:0.997352
historical	O	O:0.888985
record	O	O:0.551558
:	O	O:0.990649
#CODE	O	O:0.994199
	
I	O	O:0.993940
am	O	O:0.998972
trying	O	O:0.994817
to	O	O:0.999258
merge	O	O:0.999362
tsv	O	O:0.997564
files	O	O:0.993910
using	O	O:0.995666
pandas	O	O:0.967272
but	O	O:0.992410
cannot	O	O:0.988322
get	O	O:0.999286
pandas	O	O:0.999700
to	O	O:0.999148
return	O	O:0.995807
the	O	O:0.998598
file	O	O:0.998311
contents	O	O:0.996712
correctly	O	O:0.996495
.	O	O:0.997925
	
You	O	O:0.997133
can	O	O:0.997688
use	O	O:0.999527
the	O	O:0.998304
vectorised	O	O:0.750484
`	O	O:0.995707
str	B-API	O:0.704040
`	O	O:0.999812
methods	O	O:0.983186
to	O	O:0.998851
replace	O	O:0.972476
the	O	O:0.999277
unwanted	O	O:0.947096
characters	O	O:0.990435
and	O	O:0.999849
then	O	O:0.999407
cast	O	O:0.945617
the	O	O:0.999538
type	O	O:0.835085
to	O	O:0.992883
int	O	O:0.933147
:	O	O:0.995800
#CODE	O	O:0.993003
	
perhaps	O	O:0.982389
`	O	O:0.998965
reindex	B-API	B-API:0.898321
`	O	O:0.997484
creates	O	O:0.981957
a	O	O:0.998759
new	O	O:0.931584
dataframe	O	O:0.999765
,	O	O:0.997081
`	O	O:0.998714
ix	B-API	B-API:0.931441
`	O	O:0.999249
returns	O	O:0.988219
a	O	O:0.999228
view	O	B-API:0.797052
	
@USER	O	O:0.972220
you	O	O:0.995198
are	O	O:0.999694
,	O	O:0.999937
of	O	O:0.999265
course	O	O:0.993051
,	O	O:0.999825
absolutely	O	O:0.982779
right	O	O:0.976631
.	O	O:0.999089
what	O	O:0.998380
do	O	O:0.993185
`	O	O:0.998819
loc	B-API	B-API:0.908738
`	O	O:0.998292
and	O	O:0.967531
`	O	O:0.999656
iloc	B-API	B-API:0.976533
`	O	O:0.998845
do	O	O:0.931676
?	O	O:0.998177
	
The	O	O:0.993633
reason	O	O:0.988957
for	O	O:0.999380
the	O	O:0.995509
seeming	O	O:0.928599
redundancy	O	O:0.975508
is	O	O:0.998731
that	O	O:0.997385
,	O	O:0.999795
while	O	O:0.999422
using	O	O:0.994773
`	O	O:0.992747
ix	B-API	B-API:0.969312
`	O	O:0.994153
is	O	O:0.992269
syntacticly	O	O:0.969392
limiting	O	O:0.945594
(	O	O:0.995328
you	O	O:0.997916
can	O	O:0.999855
only	O	O:0.999977
pass	O	O:0.999594
a	O	O:0.999392
single	O	O:0.955524
argument	O	O:0.997587
to	O	O:0.990237
`	O	O:0.999915
__getitem__	O	B-API:0.559152
`)	O	O:0.999668
,	O	O:0.998727
`	O	O:0.998459
reindex	B-API	B-API:0.909472
`	O	O:0.994845
is	O	O:0.991287
a	O	O:0.995870
method	O	O:0.993278
,	O	O:0.998170
which	O	O:0.995923
supports	O	O:0.987964
taking	O	O:0.990080
various	O	O:0.984182
optional	O	O:0.960278
parameters	O	O:0.830989
.	O	O:0.984979
	
I	O	O:0.994148
am	O	O:0.998499
getting	O	O:0.998037
different	O	O:0.994772
results	O	O:0.999233
when	O	O:0.998269
using	O	O:0.999169
`	O	O:0.997600
reindex	B-API	B-API:0.967553
`	O	O:0.998093
with	O	O:0.922030
`	O	O:0.999350
inplace=True	O	O:0.816306
`	O	O:0.999494
vs	O	O:0.990729
using	O	O:0.996316
`	O	O:0.979625
ix	B-API	B-API:0.990233
`	O	O:0.995587
(	O	O:0.991930
I	O	O:0.999575
updated	O	O:0.993148
the	O	O:0.991030
OP	O	O:0.959526
)	O	O:0.990808
	
What	O	O:0.997529
if	O	O:0.999168
you	O	O:0.999522
have	O	O:0.999586
many	O	O:0.999017
conditions	O	O:0.987164
,	O	O:0.999454
e.g.	O	O:0.997249
you	O	O:0.999496
want	O	O:0.999606
to	O	O:0.999964
split	O	O:0.998144
up	O	O:0.998900
the	O	O:0.999269
scatters	O	O:0.992613
into	O	O:0.985253
4	O	O:0.998826
types	O	O:0.992468
of	O	O:0.998954
points	O	O:0.980241
or	O	O:0.999815
even	O	O:0.999136
more	O	O:0.996088
,	O	O:0.999455
plotting	O	O:0.998792
each	O	O:0.959824
in	O	O:0.999435
different	O	O:0.997534
shape	O	O:0.987756
/	O	O:0.991506
color	O	O:0.978018
.	O	O:0.978356
	
How	O	O:0.989815
can	O	O:0.999155
you	O	O:0.999898
elegantly	O	O:0.999429
apply	O	O:0.993278
condition	O	O:0.998661
a	O	O:0.993699
,	O	O:0.997091
b	O	O:0.982991
,	O	O:0.998692
c	O	O:0.980318
,	O	O:0.998316
etc	O	O:0.990781
.	O	O:0.998269
and	O	O:0.999841
make	O	O:0.998149
sure	O	O:0.992580
you	O	O:0.999792
then	O	O:0.999570
plot	O	O:0.995707
"	O	O:0.999856
the	O	O:0.999680
rest	O	O:0.934847
"	O	O:0.991185
(	O	O:0.993944
things	O	O:0.995458
not	O	O:0.993127
in	O	O:0.999906
any	O	O:0.998440
of	O	O:0.999400
these	O	O:0.997762
conditions	O	O:0.993979
)	O	O:0.999208
as	O	O:0.998526
the	O	O:0.999493
last	O	O:0.975421
step	O	O:0.996744
?	O	O:0.997233
	
To	O	O:0.998830
find	O	O:0.992657
points	O	O:0.997645
skipped	O	O:0.991417
due	O	O:0.994536
to	O	O:0.997481
NA	O	O:0.979712
,	O	O:0.998712
try	O	O:0.997567
the	O	O:0.998018
`	O	O:0.997457
isnull	B-API	B-API:0.983282
`	O	O:0.995818
method	O	O:0.979676
:	O	O:0.996931
`	O	O:0.999652
df	O	O:0.909073
[	O	O:0.999674
df.col3.isnull()	O	O:0.513033
]`	O	O:0.978431
	
How	O	O:0.994191
do	O	O:0.996025
I	O	O:0.999709
create	O	O:0.997738
a	O	O:0.993341
pivot	O	O:0.995326
table	O	O:0.996445
in	O	O:0.998591
Pandas	O	O:0.998899
where	O	O:0.998749
one	O	O:0.999205
column	O	O:0.994892
is	O	O:0.998216
the	O	O:0.999653
mean	O	O:0.995309
of	O	O:0.999804
some	O	O:0.989661
values	O	O:0.996448
,	O	O:0.996777
and	O	O:0.999758
the	O	O:0.999683
other	O	O:0.993183
column	O	O:0.990316
is	O	O:0.998395
the	O	O:0.999524
sum	O	O:0.986412
of	O	O:0.998066
others	O	O:0.987662
?	O	O:0.998502
	
Basically	O	O:0.991091
,	O	O:0.999387
how	O	O:0.998821
would	O	O:0.999175
I	O	O:0.999969
create	O	O:0.999771
a	O	O:0.995623
pivot	O	O:0.992619
table	O	O:0.999374
that	O	O:0.999375
consolidates	O	O:0.998714
data	O	O:0.998874
,	O	O:0.999898
where	O	O:0.999788
one	O	O:0.999355
of	O	O:0.999888
the	O	O:0.999669
columns	O	O:0.999502
of	O	O:0.999177
data	O	O:0.993689
it	O	O:0.999548
represents	O	O:0.968136
is	O	O:0.998312
calculated	O	O:0.966914
,	O	O:0.999181
say	O	O:0.997749
,	O	O:0.999746
by	O	O:0.993179
`	O	O:0.998465
likelihood	O	O:0.974524
percentage	O	O:0.991123
`	O	O:0.987087
(	O	O:0.989940
0.0	O	O:0.971495
-	O	O:0.997910
1.0	O	O:0.931893
)	O	O:0.999718
by	O	O:0.989642
taking	O	O:0.975314
the	O	O:0.994386
mean	O	O:0.968656
,	O	O:0.999231
and	O	O:0.999902
another	O	O:0.974567
is	O	O:0.998044
calculated	O	O:0.980728
by	O	O:0.989036
`	O	O:0.998335
number	O	O:0.963768
ordered	O	O:0.988464
`	O	O:0.999473
which	O	O:0.996185
sums	O	O:0.998733
all	O	O:0.999476
of	O	O:0.999920
them	O	O:0.950390
?	O	O:0.998081
	
I	O	O:0.996822
think	O	O:0.999228
that	O	O:0.980420
I	O	O:0.998932
understand	O	O:0.998134
what's	O	O:0.966772
going	O	O:0.884032
on	O	O:0.995436
:	O	O:0.998920
create	O	O:0.998796
a	O	O:0.999403
frequency	O	O:0.999167
table	O	O:0.995907
of	O	O:0.999255
ALL	O	O:0.979016
words	O	O:0.978699
.	O	O:0.977993
	
After	O	O:0.998491
each	O	O:0.984328
operation	O	O:0.993967
,	O	O:0.999682
drop	O	O:0.880430
all	O	O:0.999310
relevant	O	O:0.998332
columns	O	O:0.998991
,	O	O:0.999956
then	O	O:0.999036
finally	O	O:0.999672
count	O	O:0.995305
all	O	O:0.999784
remaining	O	O:0.994307
columns	O	O:0.992549
.	O	O:0.986591
	
Also	O	O:0.994958
,	O	O:0.999856
I	O	O:0.999076
quickly	O	O:0.990074
tried	O	O:0.995332
this	O	O:0.984942
in	O	O:0.995737
Python	O	O:0.974439
3.4.3	O	O:0.980611
and	O	O:0.999107
I	O	O:0.995100
got	O	O:0.993830
the	O	O:0.989729
error	O	O:0.983754
that	O	O:0.990624
freqDf	O	O:0.924677
isn't	O	O:0.998886
defined	O	O:0.925373
.	O	O:0.989882
	
Should	O	O:0.992805
I	O	O:0.999762
first	O	O:0.999539
create	O	O:0.974649
a	O	O:0.998616
new	O	O:0.993358
table	O	O:0.998279
named	O	O:0.969293
freqDf	O	O:0.904821
?	O	O:0.992026
	
`	O	O:0.992595
df.precedingWord.isin	O	B-API:0.834548
(	O	O:0.998608
neuter	O	O:0.989683
)`	O	O:0.899437
is	O	O:0.999091
just	O	O:0.994559
a	O	O:0.999651
Series	O	O:0.973378
of	O	O:0.999025
True	O	O:0.934152
or	O	O:0.998650
False	O	O:0.985205
(	O	O:0.999337
results	O	O:0.999086
of	O	O:0.999132
the	O	O:0.997820
previous	O	O:0.997447
test	O	O:0.863500
`	O	O:0.999627
isin	B-API	B-API:0.757436
`)	O	O:0.999266
,	O	O:0.991419
and	O	O:0.999523
pandas	O	O:0.998494
will	O	O:0.999335
just	O	O:0.998976
access	O	O:0.998517
True	O	O:0.997912
indexes	O	O:0.995921
with	O	O:0.991785
`	O	O:0.999104
loc	B-API	B-API:0.637759
`	O	O:0.998499
	
I	O	O:0.998465
have	O	O:0.997780
tried	O	O:0.996630
a	O	O:0.999736
some	O	O:0.969015
join	B-API	O:0.936494
/	O	O:0.997604
merge	B-API	O:0.883667
ideas	O	O:0.960538
but	O	O:0.992815
can't	O	O:0.996881
seem	O	O:0.997779
to	O	O:0.999434
get	O	O:0.999827
it	O	O:0.999581
to	O	O:0.999746
work	O	O:0.999402
.	O	O:0.998251
	
Just	O	O:0.991854
`	O	O:0.998141
concat	B-API	B-API:0.872286
`	O	O:0.999730
them	O	O:0.904012
and	O	O:0.999901
pass	O	O:0.948399
param	O	O:0.906014
`	O	O:0.995412
axis=1	O	B-API:0.772694
`	O	O:0.990371
:	O	O:0.974012
#CODE	O	O:0.997798
	
Or	O	O:0.991628
`	O	O:0.999228
merge	B-API	B-API:0.556548
`	O	O:0.999260
on	O	O:0.938091
'	O	O:0.998387
Symbol	O	O:0.932982
'	O	O:0.990526
column	O	O:0.978346
:	O	O:0.995165
#CODE	O	O:0.996550
	
Pandas	O	O:0.967013
:	O	O:0.998455
join	O	O:0.905872
with	O	O:0.999190
outer	O	O:0.976874
product	O	O:0.987755
	
How	O	O:0.994001
to	O	O:0.999319
join	O	O:0.995914
/	O	O:0.998058
multiply	O	O:0.985283
the	O	O:0.999129
DataFrames	O	O:0.983118
`	O	O:0.998465
areas	O	O:0.791218
`	O	O:0.998901
and	O	O:0.994614
`	O	O:0.999426
demand	O	O:0.549666
`	O	O:0.999734
together	O	O:0.851747
in	O	O:0.999896
a	O	O:0.996144
decent	O	O:0.901084
way	O	O:0.993426
?	O	O:0.992059
	
Now	O	O:0.982268
`	O	O:0.998826
apply	B-API	B-API:0.753914
`	O	O:0.996988
needs	O	O:0.972157
to	O	O:0.999420
return	O	O:0.998404
a	O	O:0.970128
`	O	O:0.987219
Series	B-API	O:0.924454
`	O	O:0.998210
,	O	O:0.997381
not	O	O:0.999800
a	O	O:0.994498
`	O	O:0.991383
DataFrame	O	O:0.992110
`	O	O:0.998900
.	O	O:0.976002
	
One	O	O:0.990266
way	O	O:0.995197
to	O	O:0.999491
turn	O	O:0.999565
a	O	O:0.995358
`	O	O:0.995532
DataFrame	O	O:0.996989
`	O	O:0.999827
into	O	O:0.985862
a	O	O:0.992446
`	O	O:0.976369
Series	B-API	O:0.886506
`	O	O:0.998172
is	O	O:0.997441
to	O	O:0.998084
use	O	O:0.998957
`	O	O:0.996072
stack	B-API	B-API:0.895748
`	O	O:0.999171
.	O	O:0.922354
	
`	O	O:0.997129
stack	B-API	B-API:0.837780
`	O	O:0.999662
this	O	O:0.935233
DataFrame	O	O:0.999256
.	O	O:0.990902
	
This	O	O:0.995004
can	O	O:0.998987
be	O	O:0.999951
done	O	O:0.999094
with	O	O:0.992783
`	O	O:0.998196
unstack	B-API	B-API:0.961664
`	O	O:0.984038
:	O	O:0.972318
#CODE	O	O:0.997825
	
`	O	O:0.992899
del	O	O:0.590638
`	O	O:0.997373
+	O	O:0.821204
`	O	O:0.998959
pivot	B-API	B-API:0.814815
`	O	O:0.999413
turns	O	O:0.973325
out	O	O:0.998481
to	O	O:0.999121
be	O	O:0.999674
faster	O	O:0.994836
than	O	O:0.987547
`	O	O:0.995527
pivot_table	B-API	B-API:0.992152
`	O	O:0.997954
in	O	O:0.997805
this	O	O:0.998266
case	O	O:0.994316
.	O	O:0.994424
	
Maybe	O	O:0.995983
the	O	O:0.997661
reason	O	O:0.994704
`	O	O:0.998476
pivot	B-API	O:0.711473
`	O	O:0.999413
exists	O	O:0.901724
is	O	O:0.999086
because	O	O:0.988809
it	O	O:0.991685
is	O	O:0.999397
faster	O	O:0.976257
than	O	O:0.993036
`	O	O:0.992371
pivot_table	B-API	B-API:0.995167
`	O	O:0.998864
for	O	O:0.995281
those	O	O:0.996991
cases	O	O:0.973281
where	O	O:0.993488
it	O	O:0.984354
is	O	O:0.998802
applicable	O	O:0.923032
(	O	O:0.999800
such	O	O:0.997179
as	O	O:0.999826
when	O	O:0.967670
you	O	O:0.998238
don't	O	O:0.999535
need	O	O:0.998641
aggregation	O	O:0.984785
)	O	O:0.998482
.	O	O:0.968920
	
`	O	O:0.993056
apply	B-API	B-API:0.865561
`	O	O:0.994643
is	O	O:0.980948
now	O	O:0.992384
among	O	O:0.997080
my	O	O:0.993908
top	O	O:0.996161
5	O	O:0.992162
functions	O	O:0.984757
to	O	O:0.997702
always	O	O:0.999460
remember	O	O:0.982719
.	O	O:0.982342
	
Concerning	O	O:0.994800
the	O	O:0.997792
`	O	O:0.988937
pivot_table	B-API	B-API:0.995657
`	O	O:0.997789
solution	O	O:0.872943
:	O	O:0.998775
At	O	O:0.998455
which	O	O:0.998098
point	O	O:0.997828
am	O	O:0.999133
I	O	O:0.999745
supposed	O	O:0.999445
to	O	O:0.994473
enter	O	O:0.998535
the	O	O:0.997686
line	O	O:0.969918
?	O	O:0.996150
	
No	O	O:0.995438
matter	O	O:0.999169
when	O	O:0.996006
in	O	O:0.999337
my	O	O:0.999282
attempt	O	O:0.990087
above	O	O:0.996234
,	O	O:0.999315
I	O	O:0.999615
always	O	O:0.998949
get	O	O:0.992740
`	O	O:0.998374
no	O	O:0.996717
item	O	O:0.995402
named	O	O:0.969760
Edge	O	O:0.986511
`	O	O:0.992642
.	O	O:0.958516
	
Or	O	O:0.996997
pass	O	O:0.886698
`	O	O:0.998372
axis=0	O	O:0.706718
`	O	O:0.999292
to	O	O:0.949627
`	O	O:0.999927
loc	B-API	B-API:0.926199
`	O	O:0.994039
:	O	O:0.978014
#CODE	O	O:0.997766
	
I've	O	O:0.973964
got	O	O:0.962794
2	O	O:0.992965
pandas	O	O:0.998443
dataframes	O	O:0.994073
,	O	O:0.999787
each	O	O:0.994969
of	O	O:0.999326
them	O	O:0.974627
has	O	O:0.999112
an	O	O:0.998798
index	O	O:0.999395
with	O	O:0.997926
dtype	B-API	B-API:0.543876
`	O	O:0.995205
object	O	O:0.567175
`	O	O:0.998790
,	O	O:0.995486
and	O	O:0.999355
in	O	O:0.999730
both	O	O:0.994639
of	O	O:0.999948
them	O	O:0.983593
I	O	O:0.999777
can	O	O:0.999098
see	O	O:0.999514
the	O	O:0.999753
value	O	O:0.987720
`	O	O:0.997365
533	O	O:0.812117
`	O	O:0.998750
.	O	O:0.943807
	
However	O	O:0.994319
,	O	O:0.999841
when	O	O:0.999354
I	O	O:0.999828
join	B-API	O:0.999485
them	O	O:0.992967
the	O	O:0.998626
result	O	O:0.976715
is	O	O:0.999512
empty	O	O:0.969589
,	O	O:0.999540
as	O	O:0.999211
one	O	O:0.998986
of	O	O:0.999950
them	O	O:0.881575
is	O	O:0.999727
the	O	O:0.996413
number	O	O:0.958853
`	O	O:0.996880
533	O	O:0.887185
`	O	O:0.998781
and	O	O:0.996115
the	O	O:0.999719
other	O	O:0.844060
is	O	O:0.999121
a	O	O:0.992393
string	O	O:0.963015
`"	O	O:0.994821
533	O	O:0.962901
"`	O	O:0.985170
.	O	O:0.958737
	
Ideally	O	O:0.995137
I	O	O:0.998891
would	O	O:0.999858
like	O	O:0.999423
something	O	O:0.999940
like	O	O:0.994679
`	O	O:0.999743
apply_chunk()	O	B-API:0.779044
`	O	O:0.999529
which	O	O:0.966054
is	O	O:0.999566
the	O	O:0.998867
same	O	O:0.989922
as	O	O:0.994019
apply	B-API	O:0.622303
but	O	O:0.989648
only	O	O:0.971586
works	O	O:0.999374
on	O	O:0.999755
a	O	O:0.999081
piece	O	O:0.993248
of	O	O:0.997786
the	O	O:0.996736
dataframe	O	O:0.999665
.	O	O:0.990163
	
This	O	O:0.987378
has	O	O:0.997227
to	O	O:0.999285
be	O	O:0.999968
a	O	O:0.999642
common	O	O:0.872242
problem	O	O:0.991931
though	O	O:0.979968
,	O	O:0.996656
is	O	O:0.999063
there	O	O:0.997784
a	O	O:0.997273
design	O	O:0.981302
pattern	O	O:0.994294
I	O	O:0.997508
should	O	O:0.999753
be	O	O:0.998843
using	O	O:0.999301
for	O	O:0.991210
adding	O	O:0.962799
columns	O	O:0.957121
to	O	O:0.994759
large	O	O:0.999729
pandas	O	O:0.997355
dataframes	O	O:0.987102
?	O	O:0.993463
	
whats	O	O:0.993488
about	O	O:0.993228
using	O	O:0.997119
the	O	O:0.836023
apply	B-API	B-API:0.865179
method	O	O:0.962359
?	O	O:0.979114
	
Anytime	O	O:0.986409
you	O	O:0.999723
find	O	O:0.997530
yourself	O	O:0.999540
using	O	O:0.997873
`	O	O:0.994176
apply	B-API	B-API:0.892132
`	O	O:0.995114
or	O	O:0.894695
`	O	O:0.999661
iloc	B-API	B-API:0.795792
`	O	O:0.999203
in	O	O:0.998355
a	O	O:0.999316
loop	O	O:0.911366
it's	O	O:0.992801
likely	O	O:0.993420
that	O	O:0.997636
Pandas	O	O:0.981074
is	O	O:0.998166
operating	O	O:0.987847
much	O	O:0.978724
slower	O	O:0.986324
than	O	O:0.972587
is	O	O:0.994699
optimal	O	O:0.876307
.	O	O:0.989846
	
Convert	O	O:0.978927
freq	O	O:0.914948
string	O	O:0.995740
to	O	O:0.995238
DateOffset	B-API	O:0.894084
in	O	O:0.997937
pandas	O	O:0.996035
	
In	O	O:0.992558
pandas	O	O:0.993526
documentation	O	O:0.999290
one	O	O:0.994917
can	O	O:0.999825
read	O	O:0.988514
"	O	O:0.999250
Under	O	O:0.998455
the	O	O:0.998885
hood	O	O:0.967853
,	O	O:0.999324
these	O	O:0.998455
frequency	O	O:0.995244
strings	O	O:0.967144
are	O	O:0.999193
being	O	O:0.998444
translated	O	O:0.996007
into	O	O:0.973364
an	O	O:0.998597
instance	O	O:0.993420
of	O	O:0.998710
pandas	O	O:0.995694
DateOffset	B-API	O:0.841004
"	O	O:0.998584
when	O	O:0.994151
speaking	O	O:0.994813
of	O	O:0.999445
freq	O	O:0.888115
string	O	O:0.999636
such	O	O:0.997086
as	O	O:0.999133
"	O	O:0.984975
W	O	O:0.965878
"	O	O:0.997158
or	O	O:0.984601
"	O	O:0.997301
W-SUN	O	O:0.783569
"	O	O:0.989427
.	O	O:0.970242
	
stack	O	O:0.821839
/	O	O:0.996845
unstack	O	B-API:0.509954
/	O	O:0.972032
pivot	O	O:0.930201
dataframe	O	O:0.999611
on	O	O:0.997631
python	O	O:0.980124
/	O	O:0.997623
pandas	O	O:0.987275
	
yes	O	O:0.964475
,	O	O:0.998125
`	O	O:0.997396
isnull	B-API	B-API:0.899789
`	O	O:0.999832
will	O	O:0.994848
create	O	O:0.999360
a	O	O:0.998948
boolean	O	O:0.866819
series	O	O:0.998505
,	O	O:0.997458
`	O	O:0.999533
all	B-API	O:0.941508
`	O	O:0.999553
returns	O	O:0.596511
`	O	O:0.998931
True	O	O:0.769299
`	O	O:0.999622
if	O	O:0.991934
all	O	O:0.999116
are	O	O:0.987162
`	O	O:0.998716
True	O	O:0.782547
`	O	O:0.998381
	
Then	O	O:0.996411
merge	O	O:0.990388
the	O	O:0.999243
sub-tables	O	O:0.996001
back	O	O:0.996774
together	O	O:0.992272
in	O	O:0.999790
a	O	O:0.997003
way	O	O:0.983787
that	O	O:0.994258
replaces	O	O:0.998120
NaN	O	O:0.971381
values	O	O:0.995619
when	O	O:0.996033
there	O	O:0.997956
is	O	O:0.999941
data	O	O:0.990741
in	O	O:0.999900
one	O	O:0.999518
of	O	O:0.999700
the	O	O:0.997951
tables	O	O:0.951917
.	O	O:0.985555
	
I	O	O:0.996850
regularly	O	O:0.998474
work	O	O:0.987014
with	O	O:0.999116
very	O	O:0.997608
large	O	O:0.999584
data	O	O:0.997674
sets	O	O:0.996593
that	O	O:0.998252
are	O	O:0.999461
too	O	O:0.998434
big	O	O:0.990176
to	O	O:0.997302
manipulate	O	O:0.992311
in	O	O:0.996356
memory	O	O:0.984510
.	O	O:0.994412
	
I	O	O:0.995622
would	O	O:0.999775
like	O	O:0.994841
to	O	O:0.999965
read	O	O:0.995453
in	O	O:0.999754
a	O	O:0.999116
csv	O	O:0.997647
file	O	O:0.996759
iteratively	O	O:0.991919
,	O	O:0.999792
append	O	O:0.987544
each	O	O:0.989318
chunk	O	O:0.998243
into	O	O:0.962187
HDFStore	B-API	O:0.534898
object	O	O:0.979633
,	O	O:0.998631
and	O	O:0.999891
then	O	O:0.999350
work	O	O:0.999869
with	O	O:0.999947
subsets	O	O:0.992784
of	O	O:0.999770
the	O	O:0.999714
data	O	O:0.993298
.	O	O:0.994638
	
If	O	O:0.997616
you	O	O:0.998825
replace	O	O:0.974930
that	O	O:0.999283
line	O	O:0.994894
with	O	O:0.992396
:	O	O:0.995143
	
I	O	O:0.995678
wanted	O	O:0.998984
to	O	O:0.993706
merge	O	O:0.998715
these	O	O:0.998159
files	O	O:0.995068
so	O	O:0.999442
that	O	O:0.998788
i	O	O:0.999190
have	O	O:0.999776
something	O	O:0.999673
like	O	O:0.998865
this	O	O:0.997167
#CODE	O	O:0.996197
	
If	O	O:0.987738
it's	O	O:0.991451
six	O	O:0.998225
,	O	O:0.999918
then	O	O:0.998535
you	O	O:0.999892
can	O	O:0.999857
use	O	O:0.999745
join	B-API	O:0.832456
method	O	O:0.996918
by	O	O:0.992178
@USER	O	O:0.985882
Hayden	O	O:0.913049
.	O	O:0.984752
	
Then	O	O:0.996371
you	O	O:0.999448
can	O	O:0.999800
simply	O	O:0.999936
`	O	O:0.999943
join	B-API	B-API:0.814621
`	O	O:0.999649
them	O	O:0.671911
:	O	O:0.997349
#CODE	O	O:0.994414
	
@USER	O	O:0.995283
when	O	O:0.994047
you	O	O:0.999215
do	O	O:0.999955
a	O	O:0.999766
join	B-API	O:0.514693
with	O	O:0.998956
2x2	O	O:0.996892
duplicates	O	O:0.997469
you	O	O:0.999445
get	O	O:0.999719
4	O	O:0.996185
in	O	O:0.999463
the	O	O:0.996825
joined	O	O:0.923914
DataFrame	O	O:0.998824
.	O	O:0.989131
	
It's	O	O:0.990740
unclear	O	O:0.974312
how	O	O:0.998128
pandas	O	O:0.994045
should	O	O:0.999801
join	O	O:0.852469
in	O	O:0.999724
this	O	O:0.998259
case	O	O:0.998974
,	O	O:0.999817
so	O	O:0.999329
you	O	O:0.999624
need	O	O:0.999569
to	O	O:0.999863
be	O	O:0.999957
more	O	O:0.995979
explicit	O	O:0.942574
to	O	O:0.993657
it	O	O:0.994777
(	O	O:0.995527
and	O	O:0.999744
tell	O	O:0.984704
it	O	O:0.999079
what	O	O:0.998317
do	O	O:0.996141
you	O	O:0.999744
want	O	O:0.996020
)	O	O:0.999050
.	O	O:0.990856
	
On	O	O:0.994767
the	O	O:0.996293
similar	O	O:0.994581
note	O	O:0.988521
,	O	O:0.997017
is	O	O:0.998874
there	O	O:0.998676
a	O	O:0.999028
way	O	O:0.993494
to	O	O:0.999533
merge	O	O:0.999293
values	O	O:0.992997
based	O	O:0.951239
on	O	O:0.999038
index	O	O:0.993706
.	O	O:0.995128
	
For	O	O:0.990697
example	O	O:0.992473
,	O	O:0.999724
instead	O	O:0.999630
of	O	O:0.997778
listing	O	O:0.997332
Bact5	O	O:0.987377
in	O	O:0.999311
two	O	O:0.999735
rows	O	O:0.991293
,	O	O:0.999627
can	O	O:0.999873
we	O	O:0.999975
merge	O	O:0.999452
its	O	O:0.998180
value	O	O:0.999472
corresponding	O	O:0.974653
to	O	O:0.998573
file2	O	O:0.998418
in	O	O:0.999405
one	O	O:0.999072
row	O	O:0.999548
separated	O	O:0.996865
by	O	O:0.999414
a	O	O:0.992829
delimeter	O	O:0.947185
?	O	O:0.994993
	
Pandas	O	O:0.995578
dataframe	O	O:0.999938
insert	O	O:0.994957
rows	O	O:0.982781
	
I	O	O:0.998977
want	O	O:0.999331
to	O	O:0.999232
insert	O	O:0.999915
rows	O	O:0.972650
in	O	O:0.997321
DF	O	O:0.999960
and	O	O:0.999693
modify	O	O:0.997396
its	O	O:0.994174
related	O	O:0.925673
values	O	O:0.878205
:	O	O:0.979634
	
The	O	O:0.996814
code	O	O:0.984612
can	O	O:0.999835
only	O	O:0.999954
append	O	O:0.998680
rows	O	O:0.952823
but	O	O:0.998500
how	O	O:0.999604
to	O	O:0.999718
modify	O	O:0.999924
its	O	O:0.998831
values	O	O:0.986910
in	O	O:0.999741
a	O	O:0.999024
faster	O	O:0.919217
way	O	O:0.993473
?	O	O:0.989981
	
I	O	O:0.998737
want	O	O:0.999004
to	O	O:0.991852
use	O	O:0.999943
a	O	O:0.977812
function	O	O:0.993854
from	O	O:0.998296
an	O	O:0.998126
add-in	O	O:0.994109
in	O	O:0.996944
excel	O	O:0.977799
and	O	O:0.999052
apply	O	O:0.939216
it	O	O:0.983054
to	O	O:0.999679
some	O	O:0.999864
data	O	O:0.999014
i	O	O:0.999484
have	O	O:0.999531
simulated	O	O:0.989329
in	O	O:0.997752
python	O	O:0.981128
.	O	O:0.992821
	
I	O	O:0.998683
need	O	O:0.998759
to	O	O:0.998567
be	O	O:0.999984
able	O	O:0.999120
to	O	O:0.998793
call	O	O:0.996391
the	O	O:0.990606
add-in	O	O:0.889420
and	O	O:0.998997
apply	O	O:0.992927
my	O	O:0.996721
data	O	O:0.995064
indexes	O	O:0.991630
there	O	O:0.997919
...	O	O:0.998730
something	O	O:0.998486
along	O	O:0.995938
these	O	O:0.988162
lines	O	O:0.852808
:	O	O:0.992884
=	O	O:0.992669
add-in_name	O	O:0.828454
(	O	O:0.998274
data_range1	O	O:0.890338
,	O	O:0.999417
data_range2	O	O:0.911478
,	O	O:0.997843
"	O	O:0.999390
GGCV	O	O:0.936319
")	O	O:0.992575
	
After	O	O:0.990319
reading	O	O:0.990692
one	O	O:0.998525
line	O	O:0.997592
I	O	O:0.999047
append	O	O:0.978476
the	O	O:0.985851
dictionary	O	O:0.989814
to	O	O:0.999112
a	O	O:0.999876
list	O	O:0.692372
(	O	O:0.999609
so	O	O:0.998921
,	O	O:0.999719
the	O	O:0.999634
number	O	O:0.998029
of	O	O:0.999422
dictionaries	O	O:0.994340
in	O	O:0.999187
the	O	O:0.998884
list	O	O:0.898166
is	O	O:0.999498
equal	O	O:0.988671
to	O	O:0.999597
the	O	O:0.999938
number	O	O:0.998187
of	O	O:0.999578
lines	O	O:0.993859
in	O	O:0.999169
the	O	O:0.999632
file	O	O:0.978999
)	O	O:0.998381
.	O	O:0.992931
	
I	O	O:0.994504
can	O	O:0.998538
easily	O	O:0.998002
do	O	O:0.999878
this	O	O:0.998505
iteratively	O	O:0.990299
with	O	O:0.998051
loops	O	O:0.971791
,	O	O:0.997632
but	O	O:0.994998
I've	O	O:0.998218
read	O	O:0.984576
that	O	O:0.996310
you're	O	O:0.999230
supposed	O	O:0.999047
to	O	O:0.999563
slice	B-API	O:0.997474
/	O	O:0.999169
merge	B-API	O:0.823777
/	O	O:0.999420
join	B-API	O:0.954991
data	O	O:0.995420
frames	O	O:0.998438
holistically	O	O:0.991712
,	O	O:0.999511
so	O	O:0.997190
I'm	O	O:0.998109
trying	O	O:0.998572
to	O	O:0.999495
see	O	O:0.999880
if	O	O:0.999198
I	O	O:0.999458
can	O	O:0.999899
find	O	O:0.999568
a	O	O:0.999704
better	O	O:0.986478
way	O	O:0.998631
of	O	O:0.997915
doing	O	O:0.996875
this	O	O:0.988847
.	O	O:0.977157
	
A	O	O:0.998060
join	B-API	O:0.800878
will	O	O:0.998330
give	O	O:0.998571
me	O	O:0.997970
all	O	O:0.999912
the	O	O:0.998725
stuff	O	O:0.988600
that	O	O:0.991118
matches	O	O:0.991616
,	O	O:0.998555
but	O	O:0.978563
that's	O	O:0.997519
not	O	O:0.998465
exactly	O	O:0.999595
what	O	O:0.995969
I'm	O	O:0.999029
looking	O	O:0.996406
for	O	O:0.999007
,	O	O:0.998659
since	O	O:0.997363
I	O	O:0.999496
need	O	O:0.999957
a	O	O:0.998840
resulting	O	O:0.992167
dataframe	O	O:0.999922
for	O	O:0.999054
each	O	O:0.891615
key	O	O:0.941038
(	O	O:0.998402
i.e.	O	O:0.993877
for	O	O:0.999824
every	O	O:0.990073
row	O	O:0.994032
)	O	O:0.997231
in	O	O:0.976776
A	O	O:0.995362
.	O	O:0.992011
	
You	O	O:0.997836
then	O	O:0.998748
want	O	O:0.999606
to	O	O:0.999436
apply	O	O:0.999598
some	O	O:0.945556
function	O	O:0.996908
to	O	O:0.999613
each	O	O:0.999860
group	O	O:0.996652
of	O	O:0.999955
rows	O	O:0.971115
in	O	O:0.998362
`	O	O:0.999678
b	O	O:0.925933
`	O	O:0.999810
where	O	O:0.990555
the	O	O:0.998864
`	O	O:0.997929
b	O	O:0.904175
[	O	O:0.998250
"	O	O:0.997029
key	O	O:0.986231
"]`	O	O:0.989521
is	O	O:0.999164
one	O	O:0.997422
of	O	O:0.999792
the	O	O:0.998639
values	O	O:0.983681
in	O	O:0.996947
`	O	O:0.999787
keys	O	O:0.628079
`	O	O:0.998843
.	O	O:0.980138
	
Under	O	O:0.989309
the	O	O:0.990208
covers	O	O:0.969905
,	O	O:0.998358
these	O	O:0.996752
are	O	O:0.998689
really	O	O:0.988299
similar	O	O:0.998530
uses	O	O:0.984217
of	O	O:0.993721
`	O	O:0.992430
apply	B-API	B-API:0.807427
`	O	O:0.990731
.	O	O:0.891787
	
`	O	O:0.996461
loop_iter	O	O:0.754930
=	O	O:0.981833
len	B-API	B-API:0.995601
(	O	O:0.989980
A	O	O:0.990062
)	O	O:0.995777
/	O	O:0.981202
max	B-API	O:0.825578
(	O	O:0.990405
A	O	O:0.996003
[	O	O:0.988042
'	O	O:0.998377
SEQ_NUM	O	O:0.916466
'])	O	O:0.990715
	
Easy	O	O:0.988288
way	O	O:0.993826
to	O	O:0.997509
apply	O	O:0.997541
transformation	O	O:0.994085
from	O	O:0.986330
`	O	O:0.998182
pandas.get_dummies	B-API	B-API:0.984201
`	O	O:0.999408
to	O	O:0.998340
new	O	O:0.999931
data	O	O:0.991009
?	O	O:0.995558
	
As	O	O:0.997811
an	O	O:0.998723
aside	O	O:0.999522
that	O	O:0.996139
may	O	O:0.999888
help	O	O:0.998319
you	O	O:0.999352
in	O	O:0.999831
the	O	O:0.999330
meantime	O	O:0.993905
,	O	O:0.999503
with	O	O:0.999614
datetime-indexed	O	O:0.995672
data	O	O:0.998398
,	O	O:0.999289
[	O	O:0.999298
resample	B-API	O:0.876674
]	O	O:0.911005
(	O	O:0.989101
#URL	O	O:0.988978
)	O	O:0.994277
is	O	O:0.996268
usually	O	O:0.998478
a	O	O:0.998927
better	O	O:0.767819
choice	O	O:0.997151
than	O	O:0.984501
reindex	B-API	B-API:0.591796
.	O	O:0.978485
	
Call	O	O:0.945642
`	O	O:0.998255
transform	B-API	B-API:0.544537
`	O	O:0.999087
on	O	O:0.996518
the	O	O:0.997009
'	O	O:0.994260
measurement	O	O:0.987177
'	O	O:0.998697
column	O	O:0.998832
and	O	O:0.999649
pass	O	O:0.904289
the	O	O:0.978725
method	O	O:0.984792
`	O	O:0.999012
diff	B-API	B-API:0.843337
`	O	O:0.999802
,	O	O:0.994860
transform	B-API	O:0.988226
returns	O	O:0.990312
a	O	O:0.995582
series	O	O:0.997479
with	O	O:0.997141
an	O	O:0.999680
index	O	O:0.999880
aligned	O	O:0.989887
to	O	O:0.999636
the	O	O:0.999957
original	O	O:0.978551
df	O	O:0.854802
:	O	O:0.996606
#CODE	O	O:0.994794
	
If	O	O:0.992482
you	O	O:0.997297
are	O	O:0.999663
intending	O	O:0.999046
to	O	O:0.998830
apply	O	O:0.999115
some	O	O:0.988987
sorting	O	O:0.980355
on	O	O:0.999639
the	O	O:0.999244
result	O	O:0.999304
of	O	O:0.999195
`	O	O:0.998820
transform	B-API	O:0.822642
`	O	O:0.999852
then	O	O:0.996628
sort	O	O:0.998548
the	O	O:0.999567
df	O	O:0.911847
first	O	O:0.961617
:	O	O:0.993401
#CODE	O	O:0.995953
	
Or	O	O:0.997491
you	O	O:0.999071
can	O	O:0.999614
slice	O	O:0.999252
the	O	O:0.999808
columns	O	O:0.990165
and	O	O:0.999662
pass	O	O:0.995882
this	O	O:0.991116
to	O	O:0.998788
`	O	O:0.999902
drop	B-API	B-API:0.987141
`	O	O:0.997195
:	O	O:0.987324
#CODE	O	O:0.997385
	
These	O	O:0.987915
values	O	O:0.977848
are	O	O:0.999177
median	O	O:0.991313
values	O	O:0.995381
I	O	O:0.998852
calculated	O	O:0.998946
from	O	O:0.973004
elsewhere	O	O:0.985664
,	O	O:0.999227
and	O	O:0.999552
I	O	O:0.999748
have	O	O:0.998559
also	O	O:0.998398
their	O	O:0.997086
variance	O	O:0.967307
and	O	O:0.999205
standard	O	O:0.981714
deviation	O	O:0.843780
(	O	O:0.985423
and	O	O:0.999836
standard	O	O:0.993014
error	O	O:0.964434
,	O	O:0.998347
too	O	O:0.957888
)	O	O:0.997233
.	O	O:0.977635
	
=	O	O:0.865196
Hash	O	O:0.993665
[	O	O:0.997016
0	O	O:0.980354
]	O	O:0.986247
was	O	O:0.976528
my	O	O:0.994816
point	O	O:0.979286
,	O	O:0.999209
but	O	O:0.999755
even	O	O:0.997159
without	O	O:0.998508
arithmetic	O	O:0.993462
,	O	O:0.998506
there	O	O:0.998452
will	O	O:0.997837
be	O	O:0.999936
a	O	O:0.999868
huge	O	O:0.900218
range	O	O:0.998783
values	O	O:0.975177
for	O	O:0.999421
the	O	O:0.999383
keys	O	O:0.960675
that	O	O:0.997535
will	O	O:0.999542
give	O	O:0.998646
potentially	O	O:0.999257
unfortunate	O	O:0.972246
results	O	O:0.987491
.	O	O:0.987105
	
if	O	O:0.990743
precision	O	O:0.984762
is	O	O:0.998164
to	O	O:0.999041
decimal	O	O:0.999249
place	O	O:0.986561
,	O	O:0.999466
I'd	O	O:0.999304
multiply	O	O:0.983667
it	O	O:0.999372
by	O	O:0.995990
10	O	O:0.973942
and	O	O:0.998674
truncate	O	O:0.899116
maybe	O	O:0.968067
.	O	O:0.994051
	
the	O	O:0.986154
documentation	O	O:0.994495
to	O	O:0.995385
concat	B-API	O:0.929144
is	O	O:0.995981
impenetrable	O	O:0.958959
and	O	O:0.999854
its	O	O:0.998051
hard	O	O:0.956375
to	O	O:0.999719
find	O	O:0.999744
examples	O	O:0.997151
of	O	O:0.999720
this	O	O:0.997252
relatively	O	O:0.998820
simple	O	O:0.997692
task	O	O:0.966826
in	O	O:0.998572
the	O	O:0.996441
docs	O	O:0.971750
	
If	O	O:0.993326
you	O	O:0.989987
had	O	O:0.994608
not	O	O:0.998286
called	O	O:0.979018
`	O	O:0.999014
apply	B-API	B-API:0.775231
`	O	O:0.998034
on	O	O:0.987903
the	O	O:0.999198
`	O	O:0.993337
groupby	B-API	B-API:0.993675
`	O	O:0.999307
object	O	O:0.992745
then	O	O:0.999288
you	O	O:0.999937
could	O	O:0.999840
access	O	O:0.998270
the	O	O:0.999687
`	O	O:0.998508
groups	B-API	B-API:0.690721
`	O	O:0.994966
:	O	O:0.991297
#CODE	O	O:0.997811
	
pandas	O	O:0.978387
groupby	B-API	B-API:0.516679
X	O	O:0.959873
,	O	O:0.993861
Y	O	O:0.989599
and	O	O:0.999059
select	O	O:0.989794
last	O	O:0.993441
week	O	O:0.995233
of	O	O:0.993914
X1	O	O:0.958897
and	O	O:0.998102
X2	O	O:0.895911
(	O	O:0.994238
which	O	O:0.997646
have	O	O:0.999018
diff	O	O:0.965333
frequency	O	O:0.997332
)	O	O:0.989689
	
Then	O	O:0.997685
you	O	O:0.999867
can	O	O:0.999885
select	O	O:0.999486
the	O	O:0.999979
rows	O	O:0.985504
you	O	O:0.999723
want	O	O:0.999499
in	O	O:0.999803
an	O	O:0.999407
apply	B-API	O:0.987771
call	O	O:0.859765
on	O	O:0.996314
the	O	O:0.981423
grouped	O	O:0.652388
object	O	O:0.921103
:	O	O:0.991358
#CODE	O	O:0.996300
	
If	O	O:0.992721
you	O	O:0.998340
can't	O	O:0.999635
upgrade	O	O:0.994062
or	O	O:0.999463
don't	O	O:0.997853
solve	O	O:0.997308
the	O	O:0.999555
issue	O	O:0.992050
you	O	O:0.999441
have	O	O:0.998333
with	O	O:0.999675
0.14	O	O:0.993052
,	O	O:0.999733
you	O	O:0.998693
can	O	O:0.999216
try	O	O:0.999946
to	O	O:0.999607
use	O	O:0.999797
`	O	O:0.995496
ix	B-API	B-API:0.887782
`	O	O:0.999779
instead	O	O:0.996947
of	O	O:0.999321
`	O	O:0.998509
iloc	B-API	B-API:0.907431
`	O	O:0.998439
	
How	O	O:0.994254
do	O	O:0.991398
I	O	O:0.999276
export	O	O:0.995668
multiple	O	O:0.989304
pivot	O	O:0.992067
tables	O	O:0.983359
from	O	O:0.997287
python	O	O:0.997019
using	O	O:0.999238
pandas	O	O:0.988841
to	O	O:0.999325
a	O	O:0.999881
single	O	O:0.966231
csv	O	O:0.993831
document	O	O:0.994210
?	O	O:0.991209
	
Say	O	O:0.989509
I	O	O:0.999477
have	O	O:0.999741
a	O	O:0.985042
function	O	O:0.997548
pivots()	O	O:0.892651
which	O	O:0.999417
aggregates	O	O:0.993470
pivot	O	O:0.982065
tables	O	O:0.966398
#CODE	O	O:0.986044
	
I	O	O:0.998238
know	O	O:0.996755
how	O	O:0.993166
to	O	O:0.998648
export	O	O:0.999815
a	O	O:0.999638
single	O	O:0.970935
pivot	O	O:0.997699
table	O	O:0.991496
#CODE	O	O:0.988449
	
You	O	O:0.995725
can	O	O:0.997688
use	O	O:0.999522
`	O	O:0.985285
to_csv	B-API	B-API:0.997057
(	O	O:0.998215
path	O	O:0.983761
,	O	O:0.997264
mode=	O	O:0.987787
'	O	O:0.999418
a	O	O:0.996338
')`	O	O:0.997394
to	O	O:0.998410
append	O	O:0.997263
files	O	O:0.967501
.	O	O:0.988741
	
Use	O	O:0.971268
`	O	O:0.997067
shift	B-API	B-API:0.880971
`	O	O:0.996472
and	O	O:0.976098
`	O	O:0.998393
np.log	B-API	B-API:0.998238
`	O	O:0.985361
:	O	O:0.963181
#CODE	O	O:0.997785
	
I'd	O	O:0.997441
look	O	O:0.989418
at	O	O:0.999128
seeing	O	O:0.991120
if	O	O:0.994735
you	O	O:0.993201
can	O	O:0.999007
export	O	O:0.999175
it	O	O:0.999385
in	O	O:0.998175
it's	O	O:0.998186
raw	O	O:0.997647
form	O	O:0.999341
,	O	O:0.999047
otherwise	O	O:0.999831
this	O	O:0.999109
must	O	O:0.999260
be	O	O:0.999883
a	O	O:0.999729
common	O	O:0.671858
problem	O	O:0.975672
and	O	O:0.998380
someone	O	O:0.982472
somewhere	O	O:0.962660
has	O	O:0.995959
probably	O	O:0.994916
coded	O	O:0.997378
a	O	O:0.998580
method	O	O:0.994657
to	O	O:0.999238
strip	O	O:0.998703
the	O	O:0.999660
emojis	O	O:0.969201
out	O	O:0.998544
of	O	O:0.999160
the	O	O:0.998745
text	O	O:0.963959
	
Python	O	O:0.989489
pandas	O	O:0.987507
map	O	O:0.935649
dict	O	O:0.997857
keys	O	O:0.994200
to	O	O:0.998884
values	O	O:0.998203
	
I	O	O:0.998337
have	O	O:0.999330
a	O	O:0.998694
csv	O	O:0.980622
for	O	O:0.999523
input	O	O:0.994704
,	O	O:0.999505
whose	O	O:0.995694
row	O	O:0.994580
values	O	O:0.994196
I'd	O	O:0.999818
like	O	O:0.999657
to	O	O:0.999915
join	O	O:0.999158
into	O	O:0.995892
a	O	O:0.999291
new	O	O:0.963893
field	O	O:0.980011
.	O	O:0.974319
	
This	O	O:0.996987
new	O	O:0.995457
field	O	O:0.975654
is	O	O:0.998915
a	O	O:0.997065
constructed	O	O:0.895699
url	O	O:0.997548
,	O	O:0.998436
which	O	O:0.999312
will	O	O:0.999530
then	O	O:0.999906
be	O	O:0.999987
processed	O	O:0.999412
by	O	O:0.989752
the	O	O:0.984188
requests.post()	B-API	B-API:0.953612
method	O	O:0.992033
.	O	O:0.993258
	
I	O	O:0.994959
tried	O	O:0.996103
to	O	O:0.990984
map	O	O:0.979609
values	O	O:0.997001
to	O	O:0.999520
keys	O	O:0.999820
with	O	O:0.999376
a	O	O:0.999604
dict	O	O:0.990378
comprehension	O	O:0.991189
,	O	O:0.998774
but	O	O:0.997064
the	O	O:0.998823
assignment	O	O:0.983027
of	O	O:0.999598
a	O	O:0.995831
key	O	O:0.998869
like	O	O:0.989085
'	O	O:0.998886
FIRST_NAME	O	O:0.940389
'	O	O:0.997706
could	O	O:0.999533
end	O	O:0.999394
up	O	O:0.997039
mapping	O	O:0.997375
to	O	O:0.998537
values	O	O:0.999651
from	O	O:0.998633
an	O	O:0.999859
arbitrary	O	O:0.998991
field	O	O:0.996222
like	O	O:0.987354
test_df	O	O:0.820009
[	O	O:0.990506
'	O	O:0.998453
CITY	O	O:0.974786
']	O	O:0.991268
.	O	O:0.949629
	
which	O	O:0.993227
will	O	O:0.998968
give	O	O:0.999043
you	O	O:0.999537
output	O	O:0.998730
as	O	O:0.996873
follows	O	O:0.787978
:	O	O:0.996011
`	O	O:0.992685
[	O	O:0.985145
{	O	O:0.998155
'	O	O:0.990246
FIRST_NAME	O	O:0.499604
'	O	O:0.985321
:	O	O:0.993359
...,	O	O:0.971177
'	O	O:0.998719
LAST_NAME	O	B-API:0.599413
'	O	O:0.965679
:	O	O:0.998043
...	O	O:0.989217
}	O	O:0.998132
,	O	O:0.996180
{	O	O:0.991719
'	O	O:0.993947
FIRST_NAME	O	O:0.631913
'	O	O:0.989525
:	O	O:0.993370
...,	O	O:0.971177
'	O	O:0.998719
LAST_NAME	O	B-API:0.599525
'	O	O:0.964311
:	O	O:0.997910
...	O	O:0.991081
}	O	O:0.996614
]`	O	O:0.973675
(	O	O:0.996872
which	O	O:0.998563
will	O	O:0.999198
give	O	O:0.998676
you	O	O:0.999853
a	O	O:0.999533
list	O	O:0.953354
that	O	O:0.998261
has	O	O:0.999755
equal	O	O:0.997266
length	O	O:0.996281
as	O	O:0.981870
`	O	O:0.997572
test_df	O	B-API:0.588790
`)	O	O:0.998256
.	O	O:0.970310
	
This	O	O:0.989228
might	O	O:0.998714
be	O	O:0.999430
one	O	O:0.999776
possibility	O	O:0.976233
to	O	O:0.996208
easily	O	O:0.996261
map	O	O:0.842723
it	O	O:0.998438
to	O	O:0.999893
a	O	O:0.999936
correct	O	O:0.981255
row	O	O:0.994653
.	O	O:0.995357
	
Do	O	O:0.995460
you	O	O:0.999533
know	O	O:0.999525
if	O	O:0.999601
append	B-API	O:0.935065
returns	O	O:0.995908
a	O	O:0.997604
copy	O	B-API:0.806357
/	O	O:0.999168
view	O	B-API:0.665657
/	O	O:0.999330
reference	O	O:0.989606
of	O	O:0.999102
the	O	O:0.998574
original	O	O:0.993481
dataframe	O	O:0.999713
?	O	O:0.995412
	
Right	O	O:0.991241
now	O	O:0.995249
,	O	O:0.999465
I	O	O:0.998508
am	O	O:0.998939
trying	O	O:0.995206
to	O	O:0.999429
replace	O	O:0.996844
a	O	O:0.999219
stored	O	O:0.906723
procedure	O	O:0.999861
with	O	O:0.999429
a	O	O:0.998898
Python	O	O:0.975451
service	O	O:0.994605
,	O	O:0.996915
and	O	O:0.999551
the	O	O:0.999850
temp	O	O:0.920498
tables	O	O:0.987008
with	O	O:0.994121
Pandas	O	O:0.998734
dataframes	O	O:0.967169
.	O	O:0.985815
	
You	O	O:0.993902
could	O	O:0.999537
pass	O	O:0.994773
an	O	O:0.997788
argument	O	O:0.996186
to	O	O:0.991006
`	O	O:0.999803
apply	B-API	B-API:0.935390
`	O	O:0.979761
:	O	O:0.959366
#CODE	O	O:0.997435
	
Originally	O	O:0.980050
,	O	O:0.998897
I	O	O:0.999664
used	O	O:0.996913
append	B-API	O:0.739070
api	O	O:0.997202
to	O	O:0.998045
create	O	O:0.999774
a	O	O:0.999648
single	O	O:0.996267
table	O	O:0.996330
'	O	O:0.996002
impression	O	O:0.988609
'	O	O:0.998355
,	O	O:0.999268
however	O	O:0.998722
that	O	O:0.994079
was	O	O:0.997273
taking	O	O:0.996479
80sec	O	O:0.697829
per	O	O:0.984068
dataframe	O	O:0.999419
and	O	O:0.999526
given	O	O:0.997530
that	O	O:0.994678
I	O	O:0.999759
have	O	O:0.998835
almost	O	O:0.994794
200	O	O:0.996945
of	O	O:0.998344
files	O	O:0.989985
to	O	O:0.999730
be	O	O:0.999950
processed	O	O:0.996261
,	O	O:0.998952
the	O	O:0.997954
'	O	O:0.995037
append	B-API	O:0.742323
'	O	O:0.993264
appeared	O	O:0.995764
to	O	O:0.998737
be	O	O:0.999762
too	O	O:0.996590
slow	O	O:0.880611
.	O	O:0.988467
	
Also	O	O:0.991259
,	O	O:0.999204
why	O	O:0.997518
is	O	O:0.998919
append	B-API	O:0.922281
so	O	O:0.998541
much	O	O:0.959306
slower	O	O:0.997059
than	O	O:0.993874
put	O	O:0.906592
?	O	O:0.995925
	
pandas	O	O:0.997686
merge	B-API	O:0.916606
with	O	O:0.983229
MultiIndex	B-API	O:0.999301
,	O	O:0.999884
when	O	O:0.999352
only	O	O:0.999350
one	O	O:0.999989
level	O	O:0.996315
of	O	O:0.998396
index	O	O:0.991168
is	O	O:0.999439
to	O	O:0.997988
be	O	O:0.999948
used	O	O:0.996319
as	O	O:0.991275
key	O	O:0.984311
	
I	O	O:0.999101
want	O	O:0.999669
to	O	O:0.997553
recover	O	O:0.999628
the	O	O:0.999782
values	O	O:0.977552
in	O	O:0.999361
the	O	O:0.999787
column	O	O:0.990400
'	O	O:0.998498
_Cat	O	O:0.891650
'	O	O:0.999325
from	O	O:0.996403
df2	O	O:0.984932
and	O	O:0.999793
merge	O	O:0.998864
them	O	O:0.983419
into	O	O:0.988345
df1	O	O:0.899957
for	O	O:0.998828
the	O	O:0.999204
appropriate	O	O:0.996297
values	O	O:0.994087
of	O	O:0.995992
'	O	O:0.996751
_ItemId	O	O:0.742210
'	O	O:0.987656
.	O	O:0.988035
	
This	O	O:0.961466
is	O	O:0.996129
almost	O	O:0.953049
(	O	O:0.998810
I	O	O:0.997701
think	O	O:0.997929
?	O	O:0.993362
)	O	O:0.999527
a	O	O:0.998903
standard	O	O:0.980001
many-to-one	O	O:0.993837
merge	O	O:0.905499
,	O	O:0.997490
except	O	O:0.998830
that	O	O:0.997987
the	O	O:0.999815
appropriate	O	O:0.997512
key	O	O:0.996575
for	O	O:0.999438
the	O	O:0.999207
left	O	O:0.952515
df	O	O:0.861077
is	O	O:0.999426
one	O	O:0.992222
of	O	O:0.998457
MultiIndex	B-API	O:0.998790
levels	O	O:0.996756
.	O	O:0.992945
	
Or	O	O:0.970406
is	O	O:0.998959
there	O	O:0.999114
a	O	O:0.998716
better	O	O:0.956243
approach	O	O:0.994969
to	O	O:0.999799
this	O	O:0.999820
merge	B-API	O:0.934573
?	O	O:0.994150
	
loc	B-API	B-API:0.728514
will	O	O:0.996107
not	O	O:0.999090
attempt	O	O:0.998750
to	O	O:0.998797
use	O	O:0.999967
a	O	O:0.987739
number	O	O:0.742698
(	O	O:0.998373
eg	O	O:0.999238
1	O	O:0.994502
)	O	O:0.999433
as	O	O:0.999176
a	O	O:0.997317
positional	O	O:0.905617
argument	O	O:0.991590
at	O	O:0.992172
all	O	O:0.960596
(	O	O:0.995760
and	O	O:0.999561
will	O	O:0.998314
raise	O	O:0.978561
instead	O	O:0.998827
);	O	O:0.898688
see	O	O:0.995089
main	O	O:0.993140
pandas	O	O:0.998263
docs	O	O:0.991042
/	O	O:0.999071
selecting	O	O:0.997481
data	O	O:0.979656
	
I	O	O:0.998420
have	O	O:0.998614
the	O	O:0.996740
following	O	O:0.923692
boxplot	O	O:0.968370
:	O	O:0.995254
#CODE	O	O:0.997110
	
My	O	O:0.984387
question	O	O:0.845558
is	O	O:0.990006
:	O	O:0.995617
how	O	O:0.999305
can	O	O:0.999703
I	O	O:0.999977
change	O	O:0.998604
the	O	O:0.995737
whiskers	O	O:0.967403
/	O	O:0.998209
quantiles	O	O:0.998654
being	O	O:0.996948
plotted	O	O:0.986522
in	O	O:0.997851
the	O	O:0.991357
boxplot	O	O:0.988883
?	O	O:0.992265
	
it'll	O	O:0.993586
be	O	O:0.998380
difficult	O	O:0.998391
to	O	O:0.997480
translate	O	O:0.999667
those	O	O:0.997579
`	O	O:0.999399
ddply	O	B-API:0.873667
`	O	O:0.998499
calls	O	O:0.866583
to	O	O:0.997979
pandas	O	O:0.995804
.	O	O:0.992851
	
I	O	O:0.997430
guess	O	O:0.997526
`	O	O:0.984976
groupby	B-API	B-API:0.995230
`	O	O:0.998106
should	O	O:0.973643
be	O	O:0.999510
used	O	O:0.993220
but	O	O:0.992801
I	O	O:0.999324
find	O	O:0.998567
this	O	O:0.987915
format	O	O:0.999278
very	O	O:0.983454
cryptic	O	O:0.995794
so	O	O:0.996912
it's	O	O:0.997746
hard	O	O:0.993810
to	O	O:0.999709
translate	O	O:0.999522
to	O	O:0.998868
python	O	O:0.999443
	
If	O	O:0.998187
you	O	O:0.999428
drop	O	O:0.969698
the	O	O:0.998988
"	O	O:0.992929
%	O	O:0.991294
"	O	O:0.998839
sign	O	O:0.988080
,	O	O:0.999478
you	O	O:0.999397
can	O	O:0.999711
make	O	O:0.999837
the	O	O:0.999941
plot	O	O:0.989428
without	O	O:0.996111
ticks	O	O:0.954878
.	O	O:0.979561
	
Append	O	O:0.950988
Two	O	O:0.978191
Dataframes	O	O:0.973519
Together	O	O:0.843353
(	O	O:0.998262
Pandas	O	O:0.989395
,	O	O:0.998709
Python3	O	O:0.982079
)	O	O:0.995927
	
I	O	O:0.993650
am	O	O:0.998875
trying	O	O:0.995066
to	O	O:0.999394
append	O	O:0.991676
/	O	O:0.995732
join	O	B-API:0.736165
(	O	O:0.998004
?	O	O:0.997649
)	O	O:0.999174
two	O	O:0.999453
different	O	O:0.999372
dataframes	O	O:0.996099
together	O	O:0.985246
that	O	O:0.997633
don't	O	O:0.999407
share	O	O:0.993621
any	O	O:0.999311
overlapping	O	O:0.980590
data	O	O:0.979280
.	O	O:0.992341
	
I	O	O:0.993650
am	O	O:0.998814
trying	O	O:0.994786
to	O	O:0.999361
append	O	O:0.997015
these	O	O:0.998555
together	O	O:0.969540
using	O	O:0.995840
#CODE	O	O:0.929171
	
EDIT	O	O:0.942696
:	O	O:0.995047
in	O	O:0.998801
regards	O	O:0.994681
to	O	O:0.999715
Edchum's	O	O:0.998297
answers	O	O:0.995033
,	O	O:0.999615
I	O	O:0.999731
have	O	O:0.998477
tried	O	O:0.983460
merge	B-API	O:0.871962
and	O	O:0.995814
join	B-API	O:0.783633
but	O	O:0.997582
each	O	O:0.991617
create	O	O:0.981644
somewhat	O	O:0.997283
strange	O	O:0.994062
tables	O	O:0.945728
.	O	O:0.981496
	
OK	O	O:0.969148
,	O	O:0.999646
what	O	O:0.997815
you	O	O:0.999673
have	O	O:0.999447
to	O	O:0.999829
do	O	O:0.999466
is	O	O:0.999797
reindex	B-API	O:0.698569
or	O	O:0.998551
reset	B-API	O:0.864878
the	O	O:0.998362
index	O	O:0.997281
so	O	O:0.999557
they	O	O:0.998911
align	O	O:0.983466
	
Use	O	O:0.966613
`	O	O:0.993513
concat	B-API	B-API:0.962435
`	O	O:0.997401
and	O	O:0.998705
pass	O	O:0.979526
param	O	O:0.904805
`	O	O:0.993823
axis=1	O	B-API:0.772783
`	O	O:0.990371
:	O	O:0.974012
#CODE	O	O:0.997798
	
`	O	O:0.997452
join	B-API	B-API:0.896564
`	O	O:0.999227
also	O	O:0.852083
works	O	O:0.994488
:	O	O:0.991212
#CODE	O	O:0.989191
	
As	O	O:0.995019
does	O	O:0.994125
`	O	O:0.999692
merge	B-API	B-API:0.826303
`	O	O:0.987944
:	O	O:0.976315
#CODE	O	O:0.997806
	
In	O	O:0.996200
the	O	O:0.999529
case	O	O:0.998124
where	O	O:0.999369
the	O	O:0.999125
indices	O	O:0.976716
do	O	O:0.993260
not	O	O:0.999369
align	O	O:0.994575
where	O	O:0.996496
for	O	O:0.998096
example	O	O:0.998931
your	O	O:0.996895
first	O	O:0.993236
df	O	O:0.909774
has	O	O:0.995751
index	O	O:0.994161
`	O	O:0.998024
[	O	O:0.995360
0	O	O:0.998618
,	O	O:0.997356
1	O	O:0.987701
,	O	O:0.997213
2	O	O:0.990663
,	O	O:0.998208
3	O	O:0.986227
]`	O	O:0.990732
and	O	O:0.999921
your	O	O:0.998898
second	O	O:0.948475
df	O	O:0.907897
has	O	O:0.994297
index	O	O:0.994216
`	O	O:0.998323
[	O	O:0.995859
0	O	O:0.998781
,	O	O:0.997370
2	O	O:0.968142
]`	O	O:0.998912
this	O	O:0.996179
will	O	O:0.999641
mean	O	O:0.999616
that	O	O:0.999709
the	O	O:0.999893
above	O	O:0.990512
operations	O	O:0.994556
will	O	O:0.998021
naturally	O	O:0.999711
align	O	O:0.989176
against	O	O:0.992621
the	O	O:0.998872
first	O	O:0.980389
df's	O	O:0.994123
index	O	O:0.999766
resulting	O	O:0.998620
in	O	O:0.999911
a	O	O:0.997121
`	O	O:0.992746
NaN	O	B-API:0.540136
`	O	O:0.999429
row	O	O:0.934632
for	O	O:0.999394
index	O	O:0.997858
row	O	O:0.984793
`	O	O:0.998112
1	O	O:0.727936
`	O	O:0.998657
.	O	O:0.961258
	
To	O	O:0.990574
fix	O	O:0.995387
this	O	O:0.999006
you	O	O:0.999504
can	O	O:0.999686
reindex	O	O:0.995211
the	O	O:0.999323
second	O	O:0.988960
df	O	O:0.989717
either	O	O:0.999021
by	O	O:0.997995
calling	O	O:0.986687
`	O	O:0.986932
reset_index()	B-API	B-API:0.996392
`	O	O:0.999546
or	O	O:0.999576
assign	O	O:0.995164
directly	O	O:0.997986
like	O	O:0.988505
so	O	O:0.994300
:	O	O:0.997199
`	O	O:0.999371
df2.index	O	O:0.696993
=[	O	O:0.998281
0	O	O:0.982846
,	O	O:0.997049
1	O	O:0.967300
]`	O	O:0.986491
.	O	O:0.980225
	
And	O	O:0.996486
you	O	O:0.997961
could	O	O:0.999758
always	O	O:0.999963
drop	O	O:0.993162
back	O	O:0.980628
to	O	O:0.999872
numpy	O	O:0.999738
operations	O	O:0.992325
on	O	O:0.998682
the	O	O:0.999241
numpy	O	O:0.994173
array	O	O:0.972789
`	O	O:0.999341
pan.values	O	B-API:0.620628
`	O	O:0.999775
if	O	O:0.998496
need	O	O:0.999227
be	O	O:0.999106
,	O	O:0.999528
though	O	O:0.994677
,	O	O:0.999455
hopefully	O	O:0.988199
,	O	O:0.999855
that	O	O:0.997119
would	O	O:0.999605
be	O	O:0.999658
unnecessary	O	O:0.991420
.	O	O:0.970546
	
This	O	O:0.986327
argument	O	O:0.984214
is	O	O:0.999347
new	O	O:0.947033
in	O	O:0.988838
1.9	O	O:0.813494
...	O	O:0.976120
but	O	O:0.998376
there	O	O:0.991231
is	O	O:0.999811
a	O	O:0.996365
workaround	O	O:0.972369
,	O	O:0.998340
try	O	O:0.991778
`	O	O:0.994282
np.linspace	B-API	B-API:0.965537
(	O	O:0.998643
0	O	O:0.981171
,	O	O:0.993698
len	B-API	B-API:0.999684
(	O	O:0.998040
pep_list	O	O:0.791140
)	O	O:0.999402
,	O	O:0.998817
n+1	O	O:0.936481
,	O	O:0.998129
endpoint=True	O	O:0.890483
)	O	O:0.994969
.astype	B-API	B-API:0.984157
(	O	O:0.997466
int	O	O:0.931131
)`	O	O:0.972816
	
Take	O	O:0.990949
the	O	O:0.997980
time	O	O:0.971278
difference	O	O:0.985732
(	O	O:0.999545
using	O	O:0.998957
`	O	O:0.995325
shift	B-API	B-API:0.839722
`	O	O:0.998348
)	O	O:0.992912
til	O	O:0.997573
the	O	O:0.999372
next	O	O:0.986078
value	O	O:0.994321
,	O	O:0.998256
and	O	O:0.999524
multiply	O	O:0.845683
(	O	O:0.996466
value	O	O:0.997380
*	O	O:0.995554
seconds	O	O:0.918229
):	O	O:0.993531
#CODE	O	O:0.992528
	
Then	O	O:0.995065
do	O	O:0.999008
the	O	O:0.999551
resample	O	O:0.790195
to	O	O:0.993012
seconds	O	O:0.996079
(	O	O:0.999210
sum	O	O:0.991112
the	O	O:0.998757
value*seconds	O	B-API:0.664621
):	O	O:0.991979
#CODE	O	O:0.994248
	
you	O	O:0.995880
can	O	O:0.998523
isnull	B-API	O:0.928576
(	O	O:0.999636
df	O	O:0.975006
[	O	O:0.992225
'	O	O:0.997465
difference	O	O:0.997421
'])	O	O:0.996425
will	O	O:0.981329
give	O	O:0.994205
True	O	O:0.996188
on	O	O:0.997402
NaT	O	O:0.888168
,	O	O:0.999822
so	O	O:0.999399
you	O	O:0.999469
could	O	O:0.999931
subtract	O	O:0.999568
then	O	O:0.998369
use	O	O:0.999743
mask	B-API	O:0.982138
I	O	O:0.998036
think	O	O:0.995840
	
After	O	O:0.987971
they	O	O:0.992013
are	O	O:0.999587
done	O	O:0.998654
,	O	O:0.999664
merge	O	O:0.933152
the	O	O:0.997083
two	O	O:0.996549
frames	O	O:0.983103
together	O	O:0.912320
:	O	O:0.997391
#CODE	O	O:0.993187
	
Another	O	O:0.971411
solution	O	O:0.892364
(	O	O:0.997937
slightly	O	O:0.986656
harder	O	O:0.948317
):	O	O:0.995775
Merge	O	O:0.996221
the	O	O:0.998922
columns	O	O:0.992383
`	O	O:0.998234
transcript_id	O	O:0.685181
`	O	O:0.999577
,	O	O:0.968180
`	O	O:0.998556
gene_id	O	B-API:0.822007
`	O	O:0.998201
and	O	O:0.988112
`	O	O:0.999194
gene_name	O	B-API:0.961825
`	O	O:0.999480
in	O	O:0.998887
another	O	O:0.998805
column	O	O:0.998592
,	O	O:0.999111
say	O	O:0.994975
`	O	O:0.998997
merged_id	O	B-API:0.828769
`	O	O:0.998809
and	O	O:0.985473
`	O	O:0.998108
groupby	B-API	B-API:0.996665
`	O	O:0.998700
on	O	O:0.846701
`	O	O:0.999427
merged_id	O	B-API:0.737555
`	O	O:0.998093
.	O	O:0.972423
	
Geo	O	O:0.980880
Pandas	O	O:0.984763
Data	O	O:0.956360
Frame	O	O:0.971371
/	O	O:0.976375
Matrix	O	O:0.995164
-	O	O:0.997207
filter	O	O:0.751270
/	O	O:0.999094
drop	O	O:0.682366
NaN	O	O:0.689349
/	O	O:0.998393
False	O	O:0.982857
values	O	O:0.950085
	
Then	O	O:0.996347
I	O	O:0.999791
stack	O	O:0.982824
the	O	O:0.997515
dataframe	O	O:0.999346
,	O	O:0.999499
give	O	O:0.986912
the	O	O:0.999661
index	O	O:0.999252
levels	O	O:0.999566
the	O	O:0.999586
desired	O	O:0.993199
names	O	O:0.989291
,	O	O:0.999509
and	O	O:0.999889
select	O	O:0.963632
only	O	O:0.999046
the	O	O:0.999979
rows	O	O:0.992135
where	O	O:0.999286
we	O	O:0.999919
have	O	O:0.991400
'	O	O:0.998732
True	O	O:0.993675
'	O	O:0.993322
values	O	O:0.927221
:	O	O:0.994306
#CODE	O	O:0.997727
	
Can	O	O:0.992130
you	O	O:0.996382
enable	O	O:0.995045
the	O	O:0.998289
debugger	O	O:0.997746
to	O	O:0.999128
get	O	O:0.999985
a	O	O:0.999875
stack	O	O:0.913049
trace	O	O:0.985929
?	O	O:0.991798
	
reshape	O	O:0.956634
data	O	O:0.997311
frame	O	O:0.999570
in	O	O:0.999647
pandas	O	O:0.999647
with	O	O:0.998355
pivot	O	O:0.994927
table	O	O:0.997873
	
With	O	O:0.987002
pivot	O	O:0.994597
table	O	O:0.999152
you	O	O:0.999048
can	O	O:0.999781
get	O	O:0.999969
a	O	O:0.999707
matrix	O	O:0.995785
showing	O	O:0.992142
which	O	O:0.995579
`	O	O:0.998535
baz	O	O:0.868009
`	O	O:0.999662
corresponds	O	O:0.930673
to	O	O:0.999203
which	O	O:0.999727
`	O	O:0.998656
qux	O	O:0.706077
`	O	O:0.995847
:	O	O:0.960360
#CODE	O	O:0.997782
	
Rolling	O	O:0.968685
apply	O	O:0.867354
question	O	O:0.916561
	
For	O	O:0.998672
each	O	O:0.995302
group	O	O:0.961677
in	O	O:0.999592
the	O	O:0.989352
groupby	B-API	B-API:0.893417
object	O	O:0.991151
,	O	O:0.998780
we	O	O:0.999322
will	O	O:0.999486
want	O	O:0.999522
to	O	O:0.999544
apply	O	O:0.999251
a	O	O:0.900859
function	O	O:0.668451
:	O	O:0.994755
#CODE	O	O:0.995984
	
We	O	O:0.998663
want	O	O:0.998294
to	O	O:0.999779
take	O	O:0.999832
the	O	O:0.998062
Times	O	O:0.997241
column	O	O:0.995384
,	O	O:0.997738
and	O	O:0.999648
for	O	O:0.999536
each	O	O:0.913752
time	O	O:0.984635
,	O	O:0.999179
apply	O	O:0.980767
a	O	O:0.938107
function	O	O:0.932756
.	O	O:0.990442
	
That's	O	O:0.996699
done	O	O:0.994033
with	O	O:0.994044
`	O	O:0.998035
applymap	B-API	B-API:0.982954
`	O	O:0.992432
:	O	O:0.966400
#CODE	O	O:0.997818
	
Given	O	O:0.996228
a	O	O:0.997808
time	O	O:0.948839
`	O	O:0.999394
t	O	O:0.846948
`	O	O:0.999717
,	O	O:0.998975
we	O	O:0.999872
can	O	O:0.999252
select	O	O:0.994852
the	O	O:0.999421
`	O	O:0.996048
Value	O	O:0.662730
`	O	O:0.999565
s	O	O:0.963843
from	O	O:0.997537
`	O	O:0.998859
subf	O	B-API:0.745135
`	O	O:0.999828
whose	O	O:0.965542
times	O	O:0.995506
are	O	O:0.995038
in	O	O:0.999329
the	O	O:0.996855
half-open	O	O:0.973433
interval	O	O:0.975393
`	O	O:0.989464
(	O	O:0.998297
t-60	O	O:0.986708
,	O	O:0.999486
t	O	O:0.995333
]`	O	O:0.997942
using	O	O:0.997444
the	O	O:0.992178
`	O	O:0.976021
ix	B-API	B-API:0.992978
`	O	O:0.991032
method	O	O:0.937534
:	O	O:0.997362
#CODE	O	O:0.996625
	
pandas	O	O:0.998981
join	O	O:0.977128
data	O	O:0.994606
frames	O	O:0.997315
on	O	O:0.998479
similar	O	O:0.978876
but	O	O:0.999583
not	O	O:0.997353
identical	O	O:0.999445
string	O	O:0.997394
using	O	O:0.998669
lower	O	O:0.959367
case	O	O:0.984701
only	O	O:0.982065
	
I	O	O:0.998758
need	O	O:0.999082
to	O	O:0.999522
join	O	O:0.999567
data	O	O:0.998100
frames	O	O:0.999235
on	O	O:0.999824
columns	O	O:0.998949
that	O	O:0.998167
are	O	O:0.999190
similar	O	O:0.989865
but	O	O:0.998670
not	O	O:0.994404
identical	O	O:0.996650
.	O	O:0.991500
	
So	O	O:0.992114
I	O	O:0.998534
am	O	O:0.999588
trying	O	O:0.997138
to	O	O:0.999134
isolate	O	O:0.997825
the	O	O:0.999819
lowercase	O	O:0.990676
letters	O	O:0.989467
from	O	O:0.998844
each	O	O:0.996598
column	O	O:0.999350
,	O	O:0.999705
create	O	O:0.997646
new	O	O:0.998703
columns	O	O:0.998785
to	O	O:0.999356
join	O	O:0.995908
on	O	O:0.995831
.	O	O:0.994991
	
Note	O	O:0.996539
that	O	O:0.998717
this	O	O:0.998393
assumes	O	O:0.998349
collecting	O	O:0.990768
all	O	O:0.994298
ASCII	O	O:0.997028
characters	O	O:0.994676
from	O	O:0.990481
`	O	O:0.999904
a	O	O:0.983614
`	O	O:0.998567
to	O	O:0.970973
`	O	O:0.999963
z	O	O:0.715979
`	O	O:0.999398
suffices	O	O:0.997406
to	O	O:0.999826
produce	O	O:0.999497
values	O	O:0.994354
on	O	O:0.999084
which	O	O:0.999670
to	O	O:0.999585
join	O	O:0.983122
.	O	O:0.990944
	
You	O	O:0.996526
can	O	O:0.999417
of	O	O:0.999966
course	O	O:0.998432
extend	O	O:0.997237
this	O	O:0.994035
with	O	O:0.999502
several	O	O:0.999258
joins	O	O:0.979317
,	O	O:0.999712
the	O	O:0.999728
join	O	O:0.649180
solution	O	O:0.985951
detects	O	O:0.997162
common	O	O:0.997680
indices	O	O:0.962858
automatically	O	O:0.921368
.	O	O:0.993245
	
My	O	O:0.996241
data	O	O:0.982219
is	O	O:0.999345
in	O	O:0.998865
a	O	O:0.999120
DataFrame	O	O:0.999813
of	O	O:0.999152
about	O	O:0.995809
10378	O	O:0.998477
rows	O	O:0.879379
and	O	O:0.998668
`	O	O:0.998573
len	B-API	B-API:0.999871
(	O	O:0.999033
df	O	O:0.760551
[	O	O:0.976873
'	O	O:0.992055
Full	O	O:0.997942
name	O	O:0.995296
'])`	O	O:0.981530
is	O	O:0.993778
10378	O	O:0.953283
,	O	O:0.998791
as	O	O:0.996187
expected	O	O:0.966510
.	O	O:0.993236
	
But	O	O:0.988672
`	O	O:0.994600
len	B-API	B-API:0.999437
(	O	O:0.998999
choices	O	O:0.947200
)`	O	O:0.889813
is	O	O:0.998437
only	O	O:0.980051
1695	O	O:0.974748
.	O	O:0.983946
	
I'm	O	O:0.992955
fairly	O	O:0.994428
certain	O	O:0.996396
that	O	O:0.997629
the	O	O:0.999551
issue	O	O:0.981041
is	O	O:0.995453
in	O	O:0.996465
the	O	O:0.999600
first	O	O:0.995380
line	O	O:0.993248
,	O	O:0.999585
with	O	O:0.999191
the	O	O:0.998267
`	O	O:0.998377
to_dict()	B-API	B-API:0.996016
`	O	O:0.997971
function	O	O:0.994385
,	O	O:0.999679
as	O	O:0.998853
`	O	O:0.984681
len	B-API	B-API:0.999468
(	O	O:0.999341
df	O	O:0.779609
[	O	O:0.980262
'	O	O:0.993617
Full	O	O:0.998278
name	O	O:0.996871
']	O	O:0.986746
.astype	B-API	B-API:0.987738
(	O	O:0.993802
str	O	O:0.994800
)`	O	O:0.981503
results	O	O:0.990482
in	O	O:0.997329
10378	O	O:0.971516
and	O	O:0.998928
`	O	O:0.995111
len	B-API	B-API:0.999876
(	O	O:0.998977
df	O	O:0.760775
[	O	O:0.980121
'	O	O:0.993639
Full	O	O:0.998343
name	O	O:0.997760
']	O	O:0.996773
.to_dict()	B-API	B-API:0.588092
)`	O	O:0.969140
results	O	O:0.990963
in	O	O:0.996510
1695	O	O:0.935539
.	O	O:0.989882
	
what	O	O:0.935481
is	O	O:0.997955
`	O	O:0.991379
len	B-API	B-API:0.999713
(	O	O:0.997219
df.index.unique()	O	B-API:0.872803
)`	O	O:0.948840
?	O	O:0.986901
	
@USER	O	O:0.989710
using	O	O:0.995036
`	O	O:0.987445
choices	O	O:0.578815
=	O	O:0.987718
dict	O	O:0.932170
(	O	O:0.990331
zip	O	O:0.711112
(	O	O:0.998682
df	O	O:0.960163
[	O	O:0.996008
'	O	O:0.998645
n	O	O:0.994475
']	O	O:0.998166
,	O	O:0.996516
df	O	O:0.933069
[	O	O:0.986539
'	O	O:0.995603
Full	O	O:0.998573
name	O	O:0.996872
']	O	O:0.986878
.astype	B-API	B-API:0.988429
(	O	O:0.993699
str	O	O:0.971242
)))`	O	O:0.933104
,	O	O:0.999503
where	O	O:0.997783
df	O	O:0.955408
[	O	O:0.997874
'	O	O:0.998538
n	O	O:0.990673
']	O	O:0.988652
is	O	O:0.949111
np.arange	B-API	B-API:0.990559
(	O	O:0.982089
len	B-API	B-API:0.999009
(	O	O:0.998146
df	O	O:0.938796
))	O	O:0.737589
,	O	O:0.957627
worked	O	O:0.984142
fine	O	O:0.972740
and	O	O:0.996591
got	O	O:0.997843
what	O	O:0.987038
I	O	O:0.997534
needed	O	O:0.996586
.	O	O:0.978408
	
Had	O	O:0.994602
some	O	O:0.987777
indexing	O	O:0.994545
issues	O	O:0.991989
because	O	O:0.995870
I	O	O:0.996615
was	O	O:0.999282
importing	O	O:0.994915
the	O	O:0.999346
data	O	O:0.995902
from	O	O:0.999036
different	O	O:0.999547
Excel	O	O:0.996085
spreadsheets	O	O:0.974218
.	O	O:0.987578
	
This	O	O:0.947917
is	O	O:0.999301
what	O	O:0.976390
is	O	O:0.999417
happening	O	O:0.962021
in	O	O:0.999702
your	O	O:0.994506
case	O	O:0.995585
,	O	O:0.999594
and	O	O:0.999706
noted	O	O:0.995068
from	O	O:0.997133
the	O	O:0.998391
comments	O	O:0.992685
,	O	O:0.999210
since	O	O:0.998916
the	O	O:0.999237
amount	O	O:0.998776
of	O	O:0.996173
`	O	O:0.999333
unique	O	O:0.946283
`	O	O:0.999504
values	O	O:0.864518
for	O	O:0.997764
the	O	O:0.997151
index	O	O:0.992268
are	O	O:0.999174
only	O	O:0.998302
`	O	O:0.999635
1695	O	O:0.653931
`	O	O:0.999556
,	O	O:0.997985
we	O	O:0.999687
can	O	O:0.997943
confirm	O	O:0.999964
this	O	O:0.999696
by	O	O:0.996939
testing	O	O:0.997786
the	O	O:0.997965
value	O	O:0.995700
of	O	O:0.996196
`	O	O:0.993869
len	B-API	B-API:0.999453
(	O	O:0.996673
df.index.unique()	O	B-API:0.872962
)`	O	O:0.924840
.	O	O:0.976180
	
what	O	O:0.992341
do	O	O:0.993467
you	O	O:0.999897
mean	O	O:0.999419
by	O	O:0.998760
normalize	O	O:0.933059
?	O	O:0.991292
	
The	O	O:0.996363
other	O	O:0.990635
way	O	O:0.960228
is	O	O:0.996735
much	O	O:0.930140
easier	O	O:0.951251
and	O	O:0.998187
involves	O	O:0.994911
using	O	O:0.985028
`	O	O:0.985235
resample	B-API	B-API:0.972056
`	O	O:0.998047
to	O	O:0.994039
convert	O	O:0.996132
to	O	O:0.999554
daily	O	O:0.998098
observations	O	O:0.982257
and	O	O:0.998800
backfill	O	O:0.973557
daily	O	O:0.887852
consumption	O	O:0.946818
.	O	O:0.968198
	
(	O	O:0.992898
Note	O	O:0.999176
that	O	O:0.998280
the	O	O:0.999750
first	O	O:0.990478
and	O	O:0.999891
last	O	O:0.976721
months	O	O:0.985932
are	O	O:0.998864
based	O	O:0.982507
on	O	O:0.999400
partial	O	O:0.995247
data	O	O:0.996059
,	O	O:0.999341
you	O	O:0.999062
may	O	O:0.999830
want	O	O:0.999659
to	O	O:0.999725
either	O	O:0.999971
drop	O	O:0.996131
them	O	O:0.996811
or	O	O:0.999732
pro-rate	O	O:0.968887
the	O	O:0.998577
daily	O	O:0.848399
consumption	O	O:0.985077
.	O	O:0.988868
)	O	O:0.998802
#CODE	O	O:0.984158
	
Basically	O	O:0.997108
,	O	O:0.998498
after	O	O:0.998540
calculating	O	O:0.985178
the	O	O:0.996696
daily	O	O:0.954069
consumption	O	O:0.988751
,	O	O:0.999074
do	O	O:0.999073
a	O	O:0.998993
partial	O	O:0.971953
resample	B-API	O:0.981764
by	O	O:0.980576
adding	O	O:0.978019
the	O	O:0.991903
first	O	O:0.967692
and	O	O:0.999866
last	O	O:0.993903
day	O	O:0.996466
of	O	O:0.999280
each	O	O:0.918292
month	O	O:0.951681
.	O	O:0.990042
	
I	O	O:0.994514
will	O	O:0.996449
implement	O	O:0.967329
it	O	O:0.997598
and	O	O:0.998425
see	O	O:0.996453
how	O	O:0.988378
it	O	O:0.999003
goes	O	O:0.985549
,	O	O:0.999546
but	O	O:0.998754
can	O	O:0.998803
you	O	O:0.999990
also	O	O:0.999412
explain	O	O:0.999266
what	O	O:0.965805
'	O	O:0.998525
1d	O	O:0.945257
'	O	O:0.997903
means	O	O:0.994555
in	O	O:0.999510
the	O	O:0.987325
resample	B-API	B-API:0.620645
method	O	O:0.987895
?	O	O:0.993998
	
@USER	O	O:0.869527
'	O	O:0.995929
1d	O	O:0.922365
'	O	O:0.997146
just	O	O:0.995394
means	O	O:0.999628
1	O	O:0.992943
day	O	O:0.992636
for	O	O:0.999440
the	O	O:0.998936
frequency	O	O:0.984889
of	O	O:0.995557
the	O	O:0.995934
resample	B-API	O:0.625011
.	O	O:0.961996
	
So	O	O:0.995337
I	O	O:0.999678
want	O	O:0.999629
something	O	O:0.997811
that	O	O:0.999385
will	O	O:0.999593
drop	O	O:0.973089
the	O	O:0.998876
`	O	O:0.998505
lob	O	O:0.684863
`	O	O:0.999642
group	O	O:0.691311
,	O	O:0.999589
but	O	O:0.999323
keep	O	O:0.993389
every	O	O:0.999580
record	O	O:0.978752
of	O	O:0.999099
both	O	O:0.992621
the	O	O:0.998389
`	O	O:0.993727
mol	O	O:0.626366
`	O	O:0.998996
and	O	O:0.972836
`	O	O:0.999581
thg	O	B-API:0.619006
`	O	O:0.998837
group	O	O:0.597534
.	O	O:0.995640
	
Pandas	O	O:0.989742
Merge	O	O:0.986156
2	O	O:0.994587
data	O	O:0.998174
frames	O	O:0.999338
by	O	O:0.998977
2	O	O:0.998481
columns	O	O:0.996277
each	O	O:0.967718
	
In	O	O:0.998625
each	O	O:0.995218
data	O	O:0.998294
frame	O	O:0.999961
i	O	O:0.999563
have	O	O:0.999195
column	O	O:0.999652
with	O	O:0.998627
the	O	O:0.999474
same	O	O:0.993689
name	O	O:0.992745
and	O	O:0.999350
values	O	O:0.895322
(	O	O:0.994974
Key_Merge1	O	O:0.911316
)	O	O:0.998262
and	O	O:0.998256
in	O	O:0.999870
each	O	O:0.988967
data	O	O:0.997598
frame	O	O:0.999945
i	O	O:0.999605
have	O	O:0.995913
2	O	O:0.998867
different	O	O:0.999009
column	O	O:0.998595
names	O	O:0.996787
with	O	O:0.999608
same	O	O:0.994923
values	O	O:0.918502
(	O	O:0.999238
Key_Merge2	O	O:0.934876
)	O	O:0.997679
.	O	O:0.983812
	
How	O	O:0.985494
can	O	O:0.998962
i	O	O:0.999894
merge	O	O:0.994325
2	O	O:0.997431
data	O	O:0.998814
frames	O	O:0.999271
by	O	O:0.998788
2	O	O:0.992466
columns	O	O:0.937721
:	O	O:0.992457
	
Can	O	O:0.983474
you	O	O:0.998909
post	O	O:0.993352
an	O	O:0.999700
example	O	O:0.999129
data	O	O:0.995442
and	O	O:0.999848
df	O	O:0.989217
,	O	O:0.999562
your	O	O:0.995855
text	O	O:0.967170
description	O	O:0.983155
is	O	O:0.997803
not	O	O:0.995450
clear	O	O:0.989704
enough	O	O:0.967358
but	O	O:0.997410
generally	O	O:0.988651
you	O	O:0.999746
want	O	O:0.997880
to	O	O:0.999627
merge	O	O:0.997802
and	O	O:0.999593
pass	O	O:0.952158
the	O	O:0.998374
list	O	O:0.947017
of	O	O:0.999196
cols	O	O:0.990608
to	O	O:0.999812
merge	O	O:0.996037
the	O	O:0.997441
;	O	O:0.992803
hs	O	B-API:0.807968
and	O	O:0.999768
rhs	O	O:0.607997
on	O	O:0.949484
:	O	O:0.993333
`	O	O:0.997563
pd.merge	B-API	B-API:0.888089
(	O	O:0.999160
df1	O	O:0.950409
,	O	O:0.998368
df2	O	O:0.969615
,	O	O:0.998610
left_on	O	B-API:0.580472
=[	O	O:0.978403
'	O	O:0.997463
Key_Merge1	O	O:0.854167
'	O	O:0.997881
,	O	O:0.995991
'	O	O:0.999260
Key_Merge21	O	O:0.965385
']	O	O:0.998912
,	O	O:0.995783
right_on	O	O:0.761732
=[	O	O:0.979655
'	O	O:0.998230
Key_Merge1	O	O:0.854294
'	O	O:0.997530
,	O	O:0.995204
'	O	O:0.999097
Key_merge22	O	O:0.948873
'])`	O	O:0.993656
	
OK	O	O:0.986905
,	O	O:0.999257
you	O	O:0.999597
have	O	O:0.999335
to	O	O:0.999810
rename	O	O:0.987814
'	O	O:0.999418
PRODUCT_GROUP	O	O:0.930223
'	O	O:0.996832
in	O	O:0.999087
DF2	O	O:0.994668
in	O	O:0.999390
order	O	O:0.987335
for	O	O:0.999390
the	O	O:0.995536
`	O	O:0.996278
merge	B-API	B-API:0.807777
`	O	O:0.999167
to	O	O:0.993878
work	O	O:0.997160
:	O	O:0.998319
#CODE	O	O:0.997528
	
the	O	O:0.996490
merge	B-API	O:0.849078
will	O	O:0.996559
naturally	O	O:0.999805
find	O	O:0.999552
the	O	O:0.999133
2	O	O:0.995571
columns	O	O:0.998123
that	O	O:0.998059
match	O	O:0.998027
and	O	O:0.999686
perform	O	O:0.989574
an	O	O:0.997115
inner	O	O:0.995825
merge	B-API	O:0.808196
as	O	O:0.991658
desired	O	O:0.925643
	
I	O	O:0.996680
can	O	O:0.999812
strip	O	O:0.986105
out	O	O:0.999000
the	O	O:0.999290
rightmost	O	O:0.862978
'	O	O:0.997629
.csv	O	O:0.804306
'	O	O:0.999053
part	O	O:0.997725
like	O	O:0.997050
this	O	O:0.987732
:	O	O:0.996946
#CODE	O	O:0.995582
	
How	O	O:0.995891
to	O	O:0.998175
merge	O	O:0.992622
two	O	O:0.994927
DataFrame	O	O:0.999810
columns	O	O:0.994559
and	O	O:0.999467
apply	O	O:0.932240
pandas.to_datetime	B-API	B-API:0.987854
to	O	O:0.976531
it	O	O:0.999577
?	O	O:0.997138
	
What	O	O:0.991723
would	O	O:0.998687
be	O	O:0.999912
a	O	O:0.999895
more	O	O:0.886915
pythonic	O	O:0.995114
way	O	O:0.997949
to	O	O:0.998487
merge	O	O:0.998603
two	O	O:0.996653
columns	O	O:0.991868
,	O	O:0.998598
and	O	O:0.999765
apply	O	O:0.993087
a	O	O:0.972805
function	O	O:0.991065
into	O	O:0.996127
the	O	O:0.997202
result	O	O:0.987469
?	O	O:0.995309
	
once	O	O:0.988331
sorted	O	O:0.997320
I	O	O:0.998577
replace	O	O:0.853483
the	O	O:0.994801
df.index	O	O:0.693626
with	O	O:0.998900
a	O	O:0.996634
numerical	O	O:0.961004
index	O	O:0.995333
#CODE	O	O:0.986803
	
This	O	O:0.995000
can	O	O:0.999318
be	O	O:0.999956
accomplished	O	O:0.998353
with	O	O:0.998840
a	O	O:0.998838
one	O	O:0.997938
line	O	O:0.997739
solution	O	O:0.997325
using	O	O:0.997935
Pandas	O	O:0.841332
'	O	O:0.967009
boolean	O	O:0.897680
indexing	O	O:0.968604
.	O	O:0.980166
	
The	O	O:0.989925
one-liner	O	O:0.992412
also	O	O:0.988320
employs	O	O:0.999429
some	O	O:0.995562
other	O	O:0.981976
tricks	O	O:0.916385
:	O	O:0.993268
Pandas	O	O:0.991507
'	O	O:0.995388
`	O	O:0.994275
map	B-API	B-API:0.936068
`	O	O:0.998397
and	O	O:0.961624
`	O	O:0.999665
diff	B-API	B-API:0.972571
`	O	O:0.998320
methods	O	O:0.841549
and	O	O:0.999894
a	O	O:0.995743
`	O	O:0.966103
lambda	O	O:0.720771
`	O	O:0.993455
function	O	O:0.958809
.	O	O:0.993537
	
`	O	O:0.983884
map	B-API	B-API:0.940584
`	O	O:0.995619
is	O	O:0.996611
used	O	O:0.992628
to	O	O:0.998225
apply	B-API	O:0.993347
the	O	O:0.979573
`	O	O:0.994513
lambda	O	O:0.818338
`	O	O:0.998851
function	O	O:0.986112
to	O	O:0.999770
all	O	O:0.999980
rows	O	O:0.960331
.	O	O:0.994760
	
The	O	O:0.978190
`	O	O:0.997798
lambda	O	O:0.826835
`	O	O:0.997110
function	O	O:0.950582
is	O	O:0.999389
needed	O	O:0.997071
to	O	O:0.999570
create	O	O:0.999248
a	O	O:0.998781
custom	O	O:0.905601
less-then	O	O:0.970226
comparison	O	O:0.996344
that	O	O:0.998467
will	O	O:0.998943
evaluate	O	O:0.998610
NaN	O	O:0.978110
values	O	O:0.974585
to	O	O:0.994898
True	O	O:0.997593
.	O	O:0.991465
	
There	O	O:0.972171
is	O	O:0.999711
a	O	O:0.997991
built	O	O:0.635283
in	O	O:0.994801
method	O	O:0.993654
for	O	O:0.999766
this	O	O:0.984723
`	O	O:0.999075
diff	B-API	B-API:0.981644
`	O	O:0.992482
:	O	O:0.970995
#CODE	O	O:0.997810
	
as	O	O:0.995711
pointed	O	O:0.961967
out	O	O:0.995951
calling	O	O:0.962452
`	O	O:0.997625
diff	B-API	B-API:0.937903
`	O	O:0.999739
here	O	O:0.974722
will	O	O:0.999742
lose	O	O:0.994073
the	O	O:0.999858
first	O	O:0.992136
row	O	O:0.995644
so	O	O:0.998233
I'm	O	O:0.999456
using	O	O:0.999835
a	O	O:0.995907
ugly	O	O:0.847966
hack	O	O:0.999255
where	O	O:0.998814
I	O	O:0.999491
concatenate	O	O:0.990896
the	O	O:0.997578
first	O	O:0.994009
row	O	O:0.997645
with	O	O:0.999741
the	O	O:0.999797
result	O	O:0.999293
of	O	O:0.999392
the	O	O:0.995031
`	O	O:0.999675
diff	B-API	B-API:0.934028
`	O	O:0.999826
so	O	O:0.995496
I	O	O:0.999635
don't	O	O:0.999802
lose	O	O:0.923516
the	O	O:0.999855
first	O	O:0.985451
row	O	O:0.989624
	
Using	O	O:0.931050
`	O	O:0.998535
diff	B-API	B-API:0.855914
`	O	O:0.999830
like	O	O:0.993816
this	O	O:0.999512
drops	O	O:0.988732
the	O	O:0.999227
first	O	O:0.978005
row	O	O:0.987993
.	O	O:0.988300
	
(	O	O:0.995553
I	O	O:0.999073
can	O	O:0.999929
also	O	O:0.998551
use	O	O:0.999501
the	O	O:0.991842
chunksize	O	B-API:0.586254
option	O	O:0.988760
and	O	O:0.998743
concat	O	O:0.826165
myself	O	O:0.785991
,	O	O:0.997504
but	O	O:0.998130
that	O	O:0.995878
seems	O	O:0.999690
to	O	O:0.999739
be	O	O:0.999977
a	O	O:0.999714
bit	O	O:0.954997
of	O	O:0.999568
a	O	O:0.990719
hack	O	O:0.981070
.	O	O:0.997420
)	O	O:0.998594
	
Jeff	O	O:0.979541
,	O	O:0.999057
I	O	O:0.997604
updated	O	O:0.992403
sec_id	O	O:0.580387
and	O	O:0.999428
dt	B-API	O:0.880956
in	O	O:0.987953
the	O	O:0.994690
dataframe	O	O:0.999054
.	O	O:0.991332
	
Sorry	O	O:0.984247
,	O	O:0.998608
I	O	O:0.997957
had	O	O:0.996182
to	O	O:0.995693
update	O	O:0.990922
"	O	O:0.998999
sec_id	O	B-API:0.508112
"	O	O:0.996968
and	O	O:0.997221
"	O	O:0.998375
dt	O	O:0.541122
"	O	O:0.996729
to	O	O:0.983744
"	O	O:0.999741
id	O	O:0.872652
"	O	O:0.996146
and	O	O:0.997371
"	O	O:0.998305
date	O	B-API:0.738139
"	O	O:0.986098
.	O	O:0.951459
	
0.12	O	O:0.672488
is	O	O:0.997780
fine	O	O:0.972107
;	O	O:0.998093
FYI	O	O:0.980024
the	O	O:0.998584
format	O	O:0.968056
keyword	O	O:0.985418
doesn't	O	O:0.997502
do	O	O:0.999506
anything	O	O:0.999697
with	O	O:0.987930
append	B-API	B-API:0.655190
(	O	O:0.988620
and	O	O:0.998628
it's	O	O:0.985347
for	O	O:0.997445
0.13	O	O:0.846809
anyhow	O	O:0.940975
);	O	O:0.969449
append	B-API	O:0.796076
always	O	O:0.974784
is	O	O:0.999748
a	O	O:0.996570
table	O	O:0.971465
	
I	O	O:0.996066
would	O	O:0.999796
like	O	O:0.998716
to	O	O:0.999897
get	O	O:0.999955
every	O	O:0.994285
,	O	O:0.999342
let's	O	O:0.997752
say	O	O:0.997808
,	O	O:0.999845
6	O	O:0.996296
hours	O	O:0.997200
of	O	O:0.999561
data	O	O:0.995995
and	O	O:0.999953
independently	O	O:0.996899
fit	O	O:0.988022
a	O	O:0.995386
curve	O	O:0.970820
to	O	O:0.999738
that	O	O:0.999955
data	O	O:0.996339
.	O	O:0.998471
	
Since	O	O:0.993855
pandas	O	O:0.988103
'	O	O:0.997497
`	O	O:0.998484
resample	B-API	B-API:0.829514
`	O	O:0.987195
function	O	O:0.967450
has	O	O:0.999542
a	O	O:0.995162
`	O	O:0.991565
how	O	O:0.960719
`	O	O:0.999411
keyword	O	O:0.994848
that	O	O:0.996108
is	O	O:0.999596
supposed	O	O:0.996527
to	O	O:0.999090
be	O	O:0.999906
any	O	O:0.998591
numpy	O	O:0.987602
array	O	O:0.979827
function	O	O:0.997816
,	O	O:0.999340
I	O	O:0.998572
thought	O	O:0.996119
that	O	O:0.993635
I	O	O:0.999682
could	O	O:0.999836
maybe	O	O:0.996460
try	O	O:0.999274
to	O	O:0.998368
use	O	O:0.999864
resample	B-API	O:0.803213
to	O	O:0.994936
do	O	O:0.999870
that	O	O:0.998903
with	O	O:0.999392
`	O	O:0.998275
polyfit	B-API	B-API:0.903005
`	O	O:0.998384
,	O	O:0.993707
but	O	O:0.998882
apparently	O	O:0.988651
there	O	O:0.993914
is	O	O:0.999269
no	O	O:0.989112
way	O	O:0.951967
(	O	O:0.996768
right	O	O:0.995217
?	O	O:0.997600
)	O	O:0.997698
.	O	O:0.991791
	
Why	O	O:0.994982
does	O	O:0.995401
the	O	O:0.999778
second	O	O:0.998726
block	O	O:0.997968
of	O	O:0.997350
code	O	O:0.980649
not	O	O:0.999422
work	O	O:0.996609
?	O	O:0.998280
	
Doesn't	O	O:0.980972
DataFrame.apply()	B-API	B-API:0.905473
default	O	O:0.984144
to	O	O:0.988548
inplace	O	O:0.885702
?	O	O:0.993104
	
There	O	O:0.970845
is	O	O:0.998162
no	O	O:0.996756
inplace	O	O:0.735679
parameter	O	O:0.994757
to	O	O:0.995105
the	O	O:0.999815
apply	B-API	B-API:0.589886
function	O	O:0.982255
.	O	O:0.978401
	
Even	O	O:0.993290
if	O	O:0.997687
it	O	O:0.998622
doesn't	O	O:0.996723
default	O	O:0.994105
to	O	O:0.997802
inplace	O	O:0.859219
,	O	O:0.995158
shouldn't	O	O:0.996764
it	O	O:0.999565
provide	O	O:0.997713
an	O	O:0.998893
inplace	O	O:0.642973
parameter	O	O:0.997324
the	O	O:0.996321
way	O	O:0.958346
replace()	B-API	B-API:0.814192
does	O	O:0.984527
?	O	O:0.996996
	
No	O	O:0.992104
,	O	O:0.997988
apply	B-API	O:0.863109
does	O	O:0.958532
not	O	O:0.998272
work	O	O:0.999314
inplace*	O	O:0.947359
.	O	O:0.994369
	
In	O	O:0.992284
general	O	O:0.975864
apply	B-API	O:0.790448
is	O	O:0.974190
slow	O	B-API:0.648530
(	O	O:0.999066
since	O	O:0.995872
you	O	O:0.998473
are	O	O:0.999938
basically	O	O:0.999930
iterating	O	O:0.998919
through	O	O:0.996224
each	O	O:0.977744
row	O	O:0.989296
in	O	O:0.998830
python	O	O:0.994766
)	O	O:0.999226
,	O	O:0.995332
and	O	O:0.999750
the	O	O:0.995465
"	O	O:0.995197
game	O	O:0.963924
"	O	O:0.994849
is	O	O:0.998550
to	O	O:0.995274
rewrite	O	O:0.998586
that	O	O:0.989915
function	O	O:0.997735
in	O	O:0.999657
terms	O	O:0.995001
of	O	O:0.998293
pandas	O	O:0.977475
/	O	O:0.998121
numpy	O	O:0.993836
native	O	O:0.879189
functions	O	O:0.960521
and	O	O:0.988884
indexing	O	O:0.984088
.	O	O:0.961830
	
If	O	O:0.995397
you	O	O:0.999691
want	O	O:0.999661
to	O	O:0.999607
delve	O	O:0.999808
into	O	O:0.997988
more	O	O:0.990872
details	O	O:0.997982
about	O	O:0.996576
the	O	O:0.997336
internals	O	O:0.991590
,	O	O:0.999810
check	O	O:0.998260
out	O	O:0.998391
the	O	O:0.998998
BlockManager	O	O:0.842219
in	O	O:0.997872
core	O	O:0.968755
/	O	O:0.997022
internals.py	O	O:0.920920
,	O	O:0.999652
this	O	O:0.978877
is	O	O:0.998549
the	O	O:0.997038
object	O	O:0.979896
which	O	O:0.994269
holds	O	O:0.990540
the	O	O:0.999248
underlying	O	O:0.975782
numpy	O	O:0.988041
arrays	O	O:0.955685
.	O	O:0.990271
	
*	O	O:0.994533
apply	B-API	B-API:0.620970
is	O	O:0.984329
not	O	O:0.983701
usually	O	O:0.998838
going	O	O:0.991798
to	O	O:0.998747
make	O	O:0.998137
sense	O	O:0.990195
inplace	O	B-API:0.767261
(	O	O:0.993562
and	O	O:0.997007
IMO	O	O:0.998823
this	O	O:0.992305
behaviour	O	O:0.990439
would	O	O:0.997136
rarely	O	O:0.992635
be	O	O:0.999543
desired	O	O:0.978905
)	O	O:0.992601
.	O	O:0.976473
	
I	O	O:0.992839
use	O	O:0.998722
this	O	O:0.824676
function	O	O:0.994168
with	O	O:0.993371
pandas	O	O:0.998285
to	O	O:0.999113
apply	O	O:0.995133
it	O	O:0.996870
to	O	O:0.999733
each	O	O:0.999710
month	O	O:0.988538
of	O	O:0.999764
a	O	O:0.997352
historical	O	O:0.888985
record	O	O:0.551558
:	O	O:0.990649
#CODE	O	O:0.994199
	
I	O	O:0.993940
am	O	O:0.998972
trying	O	O:0.994817
to	O	O:0.999258
merge	O	O:0.999362
tsv	O	O:0.997564
files	O	O:0.993910
using	O	O:0.995666
pandas	O	O:0.967272
but	O	O:0.992410
cannot	O	O:0.988322
get	O	O:0.999286
pandas	O	O:0.999700
to	O	O:0.999148
return	O	O:0.995807
the	O	O:0.998598
file	O	O:0.998311
contents	O	O:0.996712
correctly	O	O:0.996495
.	O	O:0.997925
	
You	O	O:0.997133
can	O	O:0.997688
use	O	O:0.999527
the	O	O:0.998304
vectorised	O	O:0.750484
`	O	O:0.995707
str	B-API	O:0.704040
`	O	O:0.999812
methods	O	O:0.983186
to	O	O:0.998851
replace	O	O:0.972476
the	O	O:0.999277
unwanted	O	O:0.947096
characters	O	O:0.990435
and	O	O:0.999849
then	O	O:0.999407
cast	O	O:0.945617
the	O	O:0.999538
type	O	O:0.835085
to	O	O:0.992883
int	O	O:0.933147
:	O	O:0.995800
#CODE	O	O:0.993003
	
perhaps	O	O:0.982389
`	O	O:0.998965
reindex	B-API	B-API:0.898321
`	O	O:0.997484
creates	O	O:0.981957
a	O	O:0.998759
new	O	O:0.931584
dataframe	O	O:0.999765
,	O	O:0.997081
`	O	O:0.998714
ix	B-API	B-API:0.931441
`	O	O:0.999249
returns	O	O:0.988219
a	O	O:0.999228
view	O	B-API:0.797052
	
@USER	O	O:0.972220
you	O	O:0.995198
are	O	O:0.999694
,	O	O:0.999937
of	O	O:0.999265
course	O	O:0.993051
,	O	O:0.999825
absolutely	O	O:0.982779
right	O	O:0.976631
.	O	O:0.999089
what	O	O:0.998380
do	O	O:0.993185
`	O	O:0.998819
loc	B-API	B-API:0.908738
`	O	O:0.998292
and	O	O:0.967531
`	O	O:0.999656
iloc	B-API	B-API:0.976533
`	O	O:0.998845
do	O	O:0.931676
?	O	O:0.998177
	
The	O	O:0.993633
reason	O	O:0.988957
for	O	O:0.999380
the	O	O:0.995509
seeming	O	O:0.928599
redundancy	O	O:0.975508
is	O	O:0.998731
that	O	O:0.997385
,	O	O:0.999795
while	O	O:0.999422
using	O	O:0.994773
`	O	O:0.992747
ix	B-API	B-API:0.969312
`	O	O:0.994153
is	O	O:0.992269
syntacticly	O	O:0.969392
limiting	O	O:0.945594
(	O	O:0.995328
you	O	O:0.997916
can	O	O:0.999855
only	O	O:0.999977
pass	O	O:0.999594
a	O	O:0.999392
single	O	O:0.955524
argument	O	O:0.997587
to	O	O:0.990237
`	O	O:0.999915
__getitem__	O	B-API:0.559152
`)	O	O:0.999668
,	O	O:0.998727
`	O	O:0.998459
reindex	B-API	B-API:0.909472
`	O	O:0.994845
is	O	O:0.991287
a	O	O:0.995870
method	O	O:0.993278
,	O	O:0.998170
which	O	O:0.995923
supports	O	O:0.987964
taking	O	O:0.990080
various	O	O:0.984182
optional	O	O:0.960278
parameters	O	O:0.830989
.	O	O:0.984979
	
I	O	O:0.994148
am	O	O:0.998499
getting	O	O:0.998037
different	O	O:0.994772
results	O	O:0.999233
when	O	O:0.998269
using	O	O:0.999169
`	O	O:0.997600
reindex	B-API	B-API:0.967553
`	O	O:0.998093
with	O	O:0.922030
`	O	O:0.999350
inplace=True	O	O:0.816306
`	O	O:0.999494
vs	O	O:0.990729
using	O	O:0.996316
`	O	O:0.979625
ix	B-API	B-API:0.990233
`	O	O:0.995587
(	O	O:0.991930
I	O	O:0.999575
updated	O	O:0.993148
the	O	O:0.991030
OP	O	O:0.959526
)	O	O:0.990808
	
What	O	O:0.997529
if	O	O:0.999168
you	O	O:0.999522
have	O	O:0.999586
many	O	O:0.999017
conditions	O	O:0.987164
,	O	O:0.999454
e.g.	O	O:0.997249
you	O	O:0.999496
want	O	O:0.999606
to	O	O:0.999964
split	O	O:0.998144
up	O	O:0.998900
the	O	O:0.999269
scatters	O	O:0.992613
into	O	O:0.985253
4	O	O:0.998826
types	O	O:0.992468
of	O	O:0.998954
points	O	O:0.980241
or	O	O:0.999815
even	O	O:0.999136
more	O	O:0.996088
,	O	O:0.999455
plotting	O	O:0.998792
each	O	O:0.959824
in	O	O:0.999435
different	O	O:0.997534
shape	O	O:0.987756
/	O	O:0.991506
color	O	O:0.978018
.	O	O:0.978356
	
How	O	O:0.989815
can	O	O:0.999155
you	O	O:0.999898
elegantly	O	O:0.999429
apply	O	O:0.993278
condition	O	O:0.998661
a	O	O:0.993699
,	O	O:0.997091
b	O	O:0.982991
,	O	O:0.998692
c	O	O:0.980318
,	O	O:0.998316
etc	O	O:0.990781
.	O	O:0.998269
and	O	O:0.999841
make	O	O:0.998149
sure	O	O:0.992580
you	O	O:0.999792
then	O	O:0.999570
plot	O	O:0.995707
"	O	O:0.999856
the	O	O:0.999680
rest	O	O:0.934847
"	O	O:0.991185
(	O	O:0.993944
things	O	O:0.995458
not	O	O:0.993127
in	O	O:0.999906
any	O	O:0.998440
of	O	O:0.999400
these	O	O:0.997762
conditions	O	O:0.993979
)	O	O:0.999208
as	O	O:0.998526
the	O	O:0.999493
last	O	O:0.975421
step	O	O:0.996744
?	O	O:0.997233
	
To	O	O:0.998830
find	O	O:0.992657
points	O	O:0.997645
skipped	O	O:0.991417
due	O	O:0.994536
to	O	O:0.997481
NA	O	O:0.979712
,	O	O:0.998712
try	O	O:0.997567
the	O	O:0.998018
`	O	O:0.997457
isnull	B-API	B-API:0.983282
`	O	O:0.995818
method	O	O:0.979676
:	O	O:0.996931
`	O	O:0.999652
df	O	O:0.909073
[	O	O:0.999674
df.col3.isnull()	O	O:0.513033
]`	O	O:0.978431
	
How	O	O:0.994191
do	O	O:0.996025
I	O	O:0.999709
create	O	O:0.997738
a	O	O:0.993341
pivot	O	O:0.995326
table	O	O:0.996445
in	O	O:0.998591
Pandas	O	O:0.998899
where	O	O:0.998749
one	O	O:0.999205
column	O	O:0.994892
is	O	O:0.998216
the	O	O:0.999653
mean	O	O:0.995309
of	O	O:0.999804
some	O	O:0.989661
values	O	O:0.996448
,	O	O:0.996777
and	O	O:0.999758
the	O	O:0.999683
other	O	O:0.993183
column	O	O:0.990316
is	O	O:0.998395
the	O	O:0.999524
sum	O	O:0.986412
of	O	O:0.998066
others	O	O:0.987662
?	O	O:0.998502
	
Basically	O	O:0.991091
,	O	O:0.999387
how	O	O:0.998821
would	O	O:0.999175
I	O	O:0.999969
create	O	O:0.999771
a	O	O:0.995623
pivot	O	O:0.992619
table	O	O:0.999374
that	O	O:0.999375
consolidates	O	O:0.998714
data	O	O:0.998874
,	O	O:0.999898
where	O	O:0.999788
one	O	O:0.999355
of	O	O:0.999888
the	O	O:0.999669
columns	O	O:0.999502
of	O	O:0.999177
data	O	O:0.993689
it	O	O:0.999548
represents	O	O:0.968136
is	O	O:0.998312
calculated	O	O:0.966914
,	O	O:0.999181
say	O	O:0.997749
,	O	O:0.999746
by	O	O:0.993179
`	O	O:0.998465
likelihood	O	O:0.974524
percentage	O	O:0.991123
`	O	O:0.987087
(	O	O:0.989940
0.0	O	O:0.971495
-	O	O:0.997910
1.0	O	O:0.931893
)	O	O:0.999718
by	O	O:0.989642
taking	O	O:0.975314
the	O	O:0.994386
mean	O	O:0.968656
,	O	O:0.999231
and	O	O:0.999902
another	O	O:0.974567
is	O	O:0.998044
calculated	O	O:0.980728
by	O	O:0.989036
`	O	O:0.998335
number	O	O:0.963768
ordered	O	O:0.988464
`	O	O:0.999473
which	O	O:0.996185
sums	O	O:0.998733
all	O	O:0.999476
of	O	O:0.999920
them	O	O:0.950390
?	O	O:0.998081
	
Why	O	O:0.997288
do	O	O:0.996747
you	O	O:0.999494
say	O	O:0.999280
that	O	O:0.999492
reusing	O	O:0.992276
plt.figure	B-API	O:0.756841
will	O	O:0.996733
lead	O	O:0.990504
to	O	O:0.999340
memory	O	O:0.998402
issues	O	O:0.986263
?	O	O:0.996059
	
I	O	O:0.996833
am	O	O:0.998869
using	O	O:0.996350
matplotlib.pyplot	B-API	O:0.865985
to	O	O:0.993350
create	O	O:0.996438
histograms	O	O:0.984188
.	O	O:0.993786
	
I	O	O:0.995804
corrected	O	O:0.999366
this	O	O:0.991956
using	O	O:0.998870
the	O	O:0.993574
`	O	O:0.941967
set_position	B-API	B-API:0.993400
`	O	O:0.988842
command	O	O:0.961628
.	O	O:0.994462
	
`	O	O:0.977671
np.asarray	B-API	B-API:0.995909
(	O	O:0.992183
Image.fromarray	O	B-API:0.961283
(	O	O:0.994950
image.astype	O	B-API:0.597457
(	O	O:0.978020
'	O	O:0.998282
uint8	O	O:0.935403
')	O	O:0.994008
*255	O	O:0.977620
)	O	O:0.992755
.convert	B-API	B-API:0.981644
(	O	O:0.992423
'	O	O:0.996516
L	O	O:0.993345
'))	O	O:0.988719
.astype	B-API	B-API:0.989646
(	O	O:0.997382
float	O	O:0.865123
)	O	O:0.996414
/	O	O:0.987285
255	O	O:0.936061
`	O	O:0.992303
	
python	O	O:0.861098
:	O	O:0.979118
ImportError	O	O:0.945632
:	O	O:0.996612
No	O	O:0.996946
module	O	O:0.999196
named	O	O:0.973687
patheffects	B-API	O:0.698904
	
import	O	O:0.788591
matplotlib.patheffects	B-API	O:0.868210
	
`	O	O:0.974262
plt.bar	B-API	B-API:0.950733
(	O	O:0.999504
left	O	O:0.961333
,	O	O:0.996301
height	O	O:0.988578
,	O	O:0.995702
width=	O	O:0.998039
0.8	O	O:0.943314
,	O	O:0.997406
bottom=None	O	O:0.990215
,	O	O:0.998282
hold=None	O	O:0.991946
,	O	O:0.998456
**	O	O:0.999209
kwargs	O	O:0.986775
)`	O	O:0.986341
	
I	O	O:0.997972
typically	O	O:0.999770
have	O	O:0.999741
them	O	O:0.988643
in	O	O:0.999623
the	O	O:0.995855
ax.plot	B-API	O:0.718820
line	O	O:0.972787
.	O	O:0.989342
	
my	O	O:0.991474
attempt	O	O:0.989482
to	O	O:0.999319
define	O	O:0.998673
the	O	O:0.998815
aspect	O	O:0.865247
ratio	O	O:0.988555
for	O	O:0.998775
both	O	O:0.981647
`	O	O:0.997632
y	O	O:0.725570
`	O	O:0.999323
-axis	O	O:0.986953
while	O	O:0.999423
using	O	O:0.998371
`	O	O:0.983107
twinx	B-API	B-API:0.986679
`	O	O:0.992616
(	O	O:0.948509
which	O	O:0.998159
does	O	O:0.993028
not	O	O:0.999752
work	O	O:0.999030
)	O	O:0.999327
	
For	O	O:0.998828
each	O	O:0.982090
of	O	O:0.999636
this	O	O:0.995080
point	O	O:0.999009
,	O	O:0.999698
I	O	O:0.999723
can	O	O:0.999530
calculate	O	O:0.997216
the	O	O:0.999940
value	O	O:0.998670
of	O	O:0.998959
my	O	O:0.997193
unordered	O	O:0.996337
categorical	B-API	O:0.921424
variable	O	O:0.980820
X	O	O:0.953412
.	O	O:0.986959
	
You	O	O:0.989600
can	O	O:0.997867
achieve	O	O:0.999616
it	O	O:0.999778
using	O	O:0.999218
the	O	O:0.994070
`	O	O:0.949771
ScalarFormatter	B-API	B-API:0.982513
`	O	O:0.990344
:	O	O:0.982292
#CODE	O	O:0.997802
	
@USER	O	O:0.974433
how	O	O:0.977747
is	O	O:0.998660
hexbin	B-API	O:0.988185
useful	O	O:0.980098
here	O	O:0.960397
?	O	O:0.993463
	
Hmm	O	O:0.954174
,	O	O:0.994942
doesn't	O	O:0.996826
look	O	O:0.997235
like	O	O:0.999512
there	O	O:0.994499
is	O	O:0.999528
anything	O	O:0.993549
obvious	O	O:0.946099
is	O	O:0.999451
rcParams	B-API	O:0.820683
or	O	O:0.998968
the	O	O:0.994754
matplotlibrc	O	O:0.988077
file	O	O:0.974967
.	O	O:0.993329
	
What	O	O:0.986018
you're	O	O:0.997398
doing	O	O:0.993021
is	O	O:0.994737
aliasing	O	O:0.517703
(	O	O:0.990019
"	O	O:0.998775
renaming	O	O:0.949860
")	O	O:0.995832
matplotlib.font_manager	B-API	O:0.899280
to	O	O:0.990112
FontProperties	B-API	O:0.991167
so	O	O:0.998402
calling	O	O:0.996397
fontP	O	O:0.949425
=	O	O:0.990466
FontProperties()	B-API	O:0.737226
is	O	O:0.997564
actually	O	O:0.993691
calling	O	O:0.995062
matplotlib.font_manager	B-API	O:0.745899
which	O	O:0.824837
is	O	O:0.997791
not	O	O:0.991078
callable	O	O:0.982295
.	O	O:0.982931
	
I	O	O:0.998019
think	O	O:0.998616
changing	O	O:0.918001
the	O	O:0.992100
arrowstyle	B-API	O:0.802307
will	O	O:0.996980
help	O	O:0.989209
here	O	O:0.993044
.	O	O:0.993607
	
plt.plot	B-API	B-API:0.942830
(	O	O:0.996127
x	O	O:0.977486
,	O	O:0.999403
z	O	O:0.986871
)	O	O:0.996944
	
`	O	O:0.970093
plt.tight_layout	B-API	B-API:0.955414
(	O	O:0.997364
pad=	O	O:0.993247
2.0	O	O:0.887743
,	O	O:0.998744
h_pad=	O	O:0.851948
6.5	O	O:0.926816
,	O	O:0.999464
w_pad=	O	O:0.931415
4.5	O	O:0.943343
)`	O	O:0.982093
gives	O	O:0.996497
the	O	O:0.999677
desired	O	O:0.958974
result	O	O:0.967466
(	O	O:0.999399
Fig.3	O	O:0.884025
)	O	O:0.997628
.	O	O:0.984138
	
Should	O	O:0.999204
work	O	O:0.996673
without	O	O:0.998244
the	O	O:0.998127
line	O	O:0.909034
`	O	O:0.998092
X	O	O:0.983046
,	O	O:0.999630
Y	O	O:0.969629
=	O	O:0.918209
np.meshgrid	B-API	B-API:0.912057
(	O	O:0.995203
X	O	O:0.979127
,	O	O:0.998427
Y	O	O:0.988440
)`	O	O:0.963906
.	O	O:0.980540
	
O1	O	O:0.969963
=	O	O:0.830179
np.array	B-API	B-API:0.966157
(	O	O:0.997822
new_OI	O	O:0.763167
)	O	O:0.996828
	
There's	O	O:0.996663
no	O	O:0.999299
need	O	O:0.995038
for	O	O:0.999873
a	O	O:0.993274
vector	O	O:0.982984
representation	O	O:0.996588
of	O	O:0.999192
each	O	O:0.965371
pixel	O	O:0.993826
,	O	O:0.997914
and	O	O:0.999385
`	O	O:0.995150
imshow	B-API	B-API:0.969076
`	O	O:0.999575
will	O	O:0.977442
be	O	O:0.999868
much	O	O:0.986765
faster	O	O:0.907900
.	O	O:0.984756
	
So	O	O:0.981002
definitely	O	O:0.991365
not	O	O:0.998106
in	O	O:0.999246
an	O	O:0.999073
equidistant	O	O:0.948330
meshgrid	B-API	B-API:0.511071
.	O	O:0.976020
	
Inserted	O	O:0.962942
after	O	O:0.963751
pyplot.savefig()	B-API	B-API:0.971728
and	O	O:0.999358
the	O	O:0.996066
problem	O	O:0.924522
seems	O	O:0.995298
to	O	O:0.999004
be	O	O:0.999630
solved	O	O:0.977894
.	O	O:0.973043
	
`	O	O:0.968268
numpy.polyfit	B-API	B-API:0.995870
(	O	O:0.999045
x	O	O:0.975690
,	O	O:0.998801
y	O	O:0.985212
,	O	O:0.998790
deg	O	O:0.986068
,	O	O:0.999488
rcond=None	O	O:0.946411
,	O	O:0.999216
full=False	O	O:0.991156
,	O	O:0.999529
w=None	O	O:0.976994
,	O	O:0.999576
cov=False	O	O:0.987659
)`	O	O:0.985689
	
Simply	O	O:0.994444
putting	O	O:0.871878
in	O	O:0.977965
:	O	O:0.989886
`	O	O:0.999777
bbox	O	O:0.743290
=d	O	O:0.992744
ict	O	O:0.520997
(	O	O:0.989183
facecolor=	O	O:0.984310
'	O	O:0.998801
blue	O	O:0.919862
'	O	O:0.996954
,	O	O:0.997596
alpha=	O	O:0.998542
0.5	O	O:0.977396
)`	O	O:0.964902
in	O	O:0.998473
the	O	O:0.980789
ax.text	B-API	O:0.732304
statement	O	O:0.999231
changes	O	O:0.994597
the	O	O:0.998647
color	O	O:0.968404
.	O	O:0.981165
	
ax.set_xticks	B-API	B-API:0.819285
([	O	O:0.964198
"	O	O:0.996985
1975-01-01	O	O:0.860655
"	O	O:0.998122
,	O	O:0.993236
"	O	O:0.999112
1980-01-01	O	O:0.870941
"	O	O:0.998538
,	O	O:0.995433
"	O	O:0.999113
1985-01-01	O	O:0.870941
"	O	O:0.998538
,	O	O:0.995433
"	O	O:0.999113
1990-01-01	O	O:0.870941
"	O	O:0.998538
,	O	O:0.995432
"	O	O:0.998994
1995-01-01	O	O:0.856753
"	O	O:0.996507
,	O	O:0.994664
	
Also	O	O:0.990711
,	O	O:0.998159
don't	O	O:0.998249
mix	O	O:0.987397
`	O	O:0.999763
pyplot	B-API	O:0.742435
`	O	O:0.999519
with	O	O:0.993033
guis	O	O:0.900906
(	O	O:0.999337
unless	O	O:0.996646
you	O	O:0.999484
are	O	O:0.999843
explicitly	O	O:0.998745
using	O	O:0.999752
a	O	O:0.976123
non-interactive	O	B-API:0.623721
backend	O	O:0.982897
)	O	O:0.994276
.	O	O:0.985122
	
FuncAnimation	B-API	B-API:0.618724
	
`	O	O:0.994282
x2	O	O:0.772254
'	O	O:0.998287
=	O	O:0.976765
-mu	O	O:0.729648
/	O	O:0.971465
np.sqrt	B-API	B-API:0.967868
(	O	O:0.997033
x	O	O:0.979642
**	O	O:0.997676
2	O	O:0.984595
+	O	O:0.997418
y	O	O:0.983778
**	O	O:0.996813
2	O	O:0.973192
+	O	O:0.997050
z	O	O:0.984215
**	O	O:0.998227
2	O	O:0.986067
)	O	O:0.995362
*	O	O:0.998653
x	O	O:0.978221
`	O	O:0.997006
,	O	O:0.993347
	
matplotlib.pyplot.stem	B-API	B-API:0.745635
(	O	O:0.993976
*args	O	O:0.977420
,	O	O:0.997494
**	O	O:0.999385
kwargs	O	O:0.969214
)	O	O:0.997716
	
I've	O	O:0.979281
confirmed	O	O:0.992441
that	O	O:0.996166
this	O	O:0.996454
works	O	O:0.998194
for	O	O:0.998669
`	O	O:0.972412
plot()	B-API	B-API:0.982732
`	O	O:0.999516
as	O	O:0.998793
well	O	O:0.998048
as	O	O:0.999190
`	O	O:0.972482
imshow()	B-API	B-API:0.992197
`	O	O:0.997215
.	O	O:0.954783
	
PCA	B-API	O:0.766880
(	O	O:0.996243
X	O	O:0.988637
)	O	O:0.991633
is	O	O:0.995136
not	O	O:0.996328
the	O	O:0.999769
same	O	O:0.989748
thing	O	O:0.998309
as	O	O:0.997140
PCA	B-API	O:0.871653
(	O	O:0.997127
X.T	O	O:0.921887
)	O	O:0.995965
.T	B-API	B-API:0.790058
	
I	O	O:0.994837
should	O	O:0.999267
have	O	O:0.996752
used	O	O:0.983938
OffsetImage	B-API	O:0.694386
and	O	O:0.996630
AnnotationBbox	B-API	O:0.630161
.	O	O:0.953961
	
Using	O	O:0.920022
GridSpec	B-API	B-API:0.593574
	
Try	O	O:0.992767
removing	O	O:0.992674
that	O	O:0.989944
argument	O	O:0.999246
from	O	O:0.999855
your	O	O:0.998267
call	O	O:0.974947
to	O	O:0.997081
`	O	O:0.997972
streamplot	B-API	B-API:0.916820
`	O	O:0.998525
.	O	O:0.971509
	
Try	O	O:0.960849
``	O	O:0.956033
ax.text	B-API	B-API:0.920976
(	O	O:0.997217
0	O	O:0.991303
,	O	O:0.998356
0	O	O:0.978571
,	O	O:0.995487
'	O	O:0.996170
whatever	O	O:0.996525
')``	O	O:0.973718
.	O	O:0.983801
	
matplotlib	O	O:0.928861
tripcolor	B-API	O:0.685245
-	O	O:0.999417
removing	O	O:0.987073
edges	O	O:0.965504
	
`	O	O:0.995685
ax.xaxis.get_children()	O	B-API:0.729169
[	O	O:0.998952
1	O	O:0.990363
]	O	O:0.990900
.set_size	B-API	B-API:0.573643
(	O	O:0.996836
15	O	O:0.992232
)`	O	O:0.975849
	
I	O	O:0.998426
have	O	O:0.995086
tried	O	O:0.994668
lots	O	O:0.995587
of	O	O:0.999741
different	O	O:0.999486
combinations	O	O:0.995357
of	O	O:0.998894
the	O	O:0.994714
ax.plot()	B-API	B-API:0.755346
part	O	O:0.973579
,	O	O:0.999012
but	O	O:0.999506
if	O	O:0.998586
I	O	O:0.999572
change	O	O:0.988047
it	O	O:0.972902
to	O	O:0.970267
:	O	O:0.999458
#CODE	O	O:0.996223
	
but	O	O:0.991121
i	O	O:0.997542
want	O	O:0.999432
to	O	O:0.999740
keep	O	O:0.999212
the	O	O:0.999702
ytick	B-API	O:0.995325
marks	O	O:0.998235
only	O	O:0.995971
on	O	O:0.999852
the	O	O:0.999559
left	O	O:0.988214
hand	O	O:0.988141
side	O	O:0.992656
.	O	O:0.997847
thank	O	O:0.989535
you	O	O:0.994851
.	O	O:0.995776
	
fig	O	O:0.901670
is	O	O:0.998267
defined	O	O:0.839881
as	O	O:0.988957
:	O	O:0.969124
`	O	O:0.998667
fig	O	O:0.971951
=	O	O:0.994542
plt.figure()	B-API	O:0.526187
`	O	O:0.988614
	
We	O	O:0.996113
used	O	O:0.993777
the	O	O:0.996041
same	O	O:0.971506
method	O	O:0.994823
,	O	O:0.999367
but	O	O:0.999862
I	O	O:0.998895
somehow	O	O:0.998947
missed	O	O:0.923195
`	O	O:0.998591
set_markeredgewidth	B-API	B-API:0.849016
`	O	O:0.998241
.	O	O:0.968834
	
--->	O	O:0.988024
29	O	O:0.963430
import	O	O:0.892846
matplotlib.colorbar	B-API	O:0.880085
	
ax.plot	B-API	B-API:0.915498
(	O	O:0.994115
r.date	O	O:0.607549
,	O	O:0.999022
r.close	O	O:0.851352
)	O	O:0.995962
	
plt.plot()	B-API	B-API:0.967476
	
The	O	O:0.941490
`	O	O:0.995448
.format	B-API	B-API:0.779898
`	O	O:0.999537
form	O	O:0.966435
is	O	O:0.999707
the	O	O:0.998502
preferred	O	O:0.983903
way	O	O:0.995505
to	O	O:0.998799
do	O	O:0.999489
string	O	O:0.998563
formatting	O	O:0.997737
now	O	O:0.999520
as	O	O:0.999645
opposed	O	O:0.994669
to	O	O:0.999428
the	O	O:0.999771
`	O	O:0.987748
%	O	O:0.821785
`	O	O:0.998791
operator	O	O:0.947403
.	O	O:0.994677
	
`	O	O:0.979064
GridSpec	B-API	B-API:0.949396
`	O	O:0.998386
works	O	O:0.983215
for	O	O:0.998778
me	O	O:0.571707
(	O	O:0.978997
`	O	O:0.998649
matplotlib	O	O:0.617902
`	O	O:0.998635
v1.5.0	O	O:0.781743
in	O	O:0.998880
case	O	O:0.993976
it	O	O:0.993778
matters	O	O:0.878254
):	O	O:0.993111
#CODE	O	O:0.972660
	
A	O	O:0.998188
search	O	O:0.980960
of	O	O:0.998589
the	O	O:0.992983
`	O	O:0.998714
matplotlib.pyplot	B-API	B-API:0.685820
`	O	O:0.997214
API	O	O:0.938466
documentation	O	O:0.995696
does	O	O:0.988810
not	O	O:0.997952
reveal	O	O:0.998417
anything	O	O:0.996264
,	O	O:0.998652
so	O	O:0.998698
I'm	O	O:0.997836
afraid	O	O:0.992272
you'll	O	O:0.999494
have	O	O:0.997487
to	O	O:0.999861
live	O	O:0.999700
with	O	O:0.999445
using	O	O:0.998723
`	O	O:0.992764
matplotlib.patches.Ellipse	B-API	B-API:0.996395
`	O	O:0.995960
	
for	O	O:0.994784
why	O	O:0.990459
`	O	O:0.991714
LinearSegmentedColormap	B-API	B-API:0.897825
`	O	O:0.998849
shows	O	O:0.980342
strange	O	O:0.994376
color	O	O:0.995048
,	O	O:0.997882
I	O	O:0.998917
think	O	O:0.998826
this	O	O:0.992578
link	O	O:0.991925
would	O	O:0.999167
be	O	O:0.999312
helpful	O	O:0.989740
.	O	O:0.973567
	
I	O	O:0.989076
did	O	O:0.996820
so	O	O:0.999039
both	O	O:0.993665
in	O	O:0.998445
the	O	O:0.997395
Windows	O	O:0.939082
shell	O	O:0.974614
and	O	O:0.998957
emacs	O	O:0.982726
shell	O	O:0.955328
and	O	O:0.998834
the	O	O:0.999617
same	O	O:0.841097
PYTHONPATH	O	B-API:0.671342
is	O	O:0.998713
used	O	O:0.954043
.	O	O:0.998340
doing	O	O:0.997845
the	O	O:0.994125
rcParams	B-API	O:0.854938
both	O	O:0.986626
return	O	O:0.906839
TkAgg	O	O:0.883710
.	O	O:0.976371
	
However	O	O:0.992453
,	O	O:0.999712
the	O	O:0.998281
savefig()	B-API	B-API:0.862316
output	O	O:0.954817
is	O	O:0.998990
too	O	O:0.982688
zoomed	O	O:0.988265
out	O	O:0.977565
,	O	O:0.998089
too	O	O:0.986502
general	O	O:0.958492
.	O	O:0.978562
	
plt.imshow	B-API	B-API:0.959802
(	O	O:0.993736
Xt	O	O:0.974085
[	O	O:0.996711
0	O	O:0.991292
,	O	O:0.994107
:]	O	O:0.976177
.reshape	B-API	B-API:0.977314
(	O	O:0.997059
105,105	O	O:0.991917
)	O	O:0.997819
.T	B-API	B-API:0.661756
,	O	O:0.996965
interpolation=	O	O:0.971026
'	O	O:0.997002
nearest	O	O:0.923916
'	O	O:0.996551
,	O	O:0.994643
cmap=	O	O:0.994151
cm.Greys_r	O	O:0.827821
)	O	O:0.992915
and	O	O:0.998969
it	O	O:0.999035
gives	O	O:0.991577
me	O	O:0.994461
the	O	O:0.998380
correct	O	O:0.993316
flipped	O	O:0.970418
output	O	O:0.987738
.	O	O:0.987779
	
See	O	O:0.919812
[	O	O:0.985796
`	O	O:0.996821
matplotlib.pyplot.contourf	B-API	B-API:0.996571
`]	O	O:0.730441
(	O	O:0.992526
#URL	O	O:0.985130
)	O	O:0.998324
for	O	O:0.993119
example	O	O:0.946130
.	O	O:0.973717
	
Why	O	O:0.983525
pyplot	B-API	O:0.835332
(	O	O:0.998869
matplotlib	O	O:0.980735
)	O	O:0.993722
is	O	O:0.998033
joining	O	O:0.989684
points	O	O:0.966880
randomly	O	O:0.969583
?	O	O:0.994541
	
x	O	O:0.945433
=	O	O:0.964572
np.array	B-API	B-API:0.755845
([	O	O:0.986857
1	O	O:0.982560
,	O	O:0.996866
3	O	O:0.987482
,	O	O:0.998720
4	O	O:0.993353
])	O	O:0.996782
,	O	O:0.994669
([	O	O:0.991140
1	O	O:0.988048
,	O	O:0.998120
2	O	O:0.987894
])	O	O:0.987909
	
`	O	O:0.989899
np.arange	B-API	B-API:0.992215
`	O	O:0.996407
doc	O	O:0.956653
	
plt.colorbar	B-API	B-API:0.945076
(	O	O:0.997272
cs	O	O:0.943618
)	O	O:0.997026
	
`	O	O:0.982184
tick_params	B-API	B-API:0.991448
`	O	O:0.997359
should	O	O:0.981932
do	O	O:0.998439
it	O	O:0.997923
.	O	O:0.986618
	
I	O	O:0.998563
have	O	O:0.999389
experiemented	O	O:0.966241
with	O	O:0.997163
turning	O	O:0.982495
interactivity	O	O:0.992461
on	O	O:0.996510
and	O	O:0.999486
off	O	O:0.998167
via	O	O:0.971045
`	O	O:0.989945
plt.ioff()	B-API	B-API:0.994745
`	O	O:0.997859
,	O	O:0.995217
but	O	O:0.998965
to	O	O:0.998627
no	O	O:0.999851
avail	O	O:0.978154
.	O	O:0.993117
	
don't	O	O:0.990771
do	O	O:0.994418
`	O	O:0.996740
plt.xticks	B-API	B-API:0.838538
...	O	O:0.987626
	
thx	O	O:0.884884
!	O	O:0.992940
but	O	O:0.989090
in	O	O:0.999281
the	O	O:0.999402
end	O	O:0.991124
this	O	O:0.870317
worked	O	O:0.959179
:	O	O:0.997460
`	O	O:0.998101
ax	O	O:0.979535
[	O	O:0.999284
1	O	O:0.983001
]	O	O:0.967118
.bar	B-API	B-API:0.886564
(	O	O:0.998984
bins	O	O:0.956308
[:	O	O:0.997977
-1	O	O:0.991051
]	O	O:0.996156
,	O	O:0.988962
1	O	O:0.980787
.	O	O:0.997112
*hist	O	O:0.960097
/	O	O:0.997118
N	O	O:0.982798
,	O	O:0.992904
np.diff	B-API	B-API:0.937364
(	O	O:0.999257
bins	O	O:0.980849
)	O	O:0.999710
,	O	O:0.999213
log=True	O	O:0.867199
)`	O	O:0.974521
	
For	O	O:0.991645
example	O	O:0.990095
`	O	O:0.997502
griddata	B-API	B-API:0.847516
`	O	O:0.999296
,	O	O:0.982511
`	O	O:0.998291
Rbf	O	B-API:0.893586
`	O	O:0.997618
,	O	O:0.996552
...	O	O:0.992663
	
It	O	O:0.990104
sounds	O	O:0.998101
like	O	O:0.998900
you	O	O:0.999715
would	O	O:0.999458
rather	O	O:0.999908
have	O	O:0.999716
an	O	O:0.999667
`	O	O:0.998011
axhspan	B-API	B-API:0.795650
`	O	O:0.999397
or	O	O:0.983072
`	O	O:0.998288
axvspan	B-API	B-API:0.907108
`	O	O:0.997658
.	O	O:0.956889
	
matplotlib	O	O:0.856931
:	O	O:0.995861
plt.isinteractive()	B-API	O:0.853249
returns	O	O:0.996321
0	O	O:0.995152
instead	O	O:0.997997
of	O	O:0.998920
True	O	O:0.937380
or	O	O:0.999512
False	O	O:0.976491
after	O	O:0.991715
plt.ion()	B-API	B-API:0.978886
is	O	O:0.997162
called	O	O:0.960368
,	O	O:0.999671
when	O	O:0.990992
the	O	O:0.989532
script	O	O:0.984144
is	O	O:0.998772
being	O	O:0.983060
run	O	O:0.967432
in	O	O:0.999202
a	O	O:0.988892
terminal	O	O:0.967189
?	O	O:0.994985
	
matplotlib	O	O:0.947857
FuncAnimation	B-API	O:0.850866
input	O	O:0.987238
	
@USER	O	O:0.977443
Do	O	O:0.997754
I	O	O:0.999656
need	O	O:0.999373
to	O	O:0.999018
pass	O	O:0.998490
anything	O	O:0.999106
additional	O	O:0.984612
to	O	O:0.995606
`	O	O:0.999853
ColorbarBase()	B-API	B-API:0.625611
`	O	O:0.999301
?	O	O:0.985564
	
In	O	O:0.997651
some	O	O:0.994773
other	O	O:0.998492
code	O	O:0.994138
,	O	O:0.999240
I	O	O:0.999607
used	O	O:0.995384
the	O	O:0.994319
OpenCV	O	O:0.951461
`	O	O:0.997893
SaveImage	O	O:0.832987
`	O	O:0.999731
on	O	O:0.999139
a	O	O:0.999826
single	O	O:0.990624
frame	O	O:0.999819
to	O	O:0.998133
provide	O	O:0.999680
a	O	O:0.998266
reference	O	O:0.969656
for	O	O:0.999782
what	O	O:0.992736
I	O	O:0.997722
would	O	O:0.999300
expect	O	O:0.998097
from	O	O:0.999205
`	O	O:0.995844
imshow	B-API	B-API:0.911234
`	O	O:0.998159
.	O	O:0.955066
	
AxesSubplot	O	O:0.750911
has	O	O:0.993884
no	O	O:0.995221
attribute	O	O:0.985319
hist2d	B-API	O:0.583969
-	O	O:0.995560
Matplotlib	O	O:0.967050
	
fig	O	O:0.935781
=	O	O:0.970592
plt.figure()	B-API	O:0.597361
	
customize	O	O:0.978633
ticks	O	O:0.978567
for	O	O:0.985178
AxesImage	B-API	O:0.497553
?	O	O:0.982015
	
In	O	O:0.994044
addition	O	O:0.998076
,	O	O:0.998895
"	O	O:0.998062
changing	O	O:0.901193
plt.figure	B-API	B-API:0.960754
(	O	O:0.996231
i	O	O:0.986282
)"	O	O:0.901651
is	O	O:0.996190
not	O	O:0.987083
correct	O	O:0.995983
.	O	O:0.992677
	
I	O	O:0.986556
tried	O	O:0.993414
it	O	O:0.985426
out	O	O:0.986073
.	O	O:0.988120
linecollection	B-API	O:0.806824
does	O	O:0.996834
not	O	O:0.999060
appear	O	O:0.999033
to	O	O:0.999802
work	O	O:0.999402
in	O	O:0.999480
3D	O	O:0.978264
.	O	O:0.990236
	
You	O	O:0.989161
can	O	O:0.997587
verify	O	O:0.999510
it	O	O:0.999737
by	O	O:0.998501
calling	O	O:0.989310
`	O	O:0.983688
plt.xlim()	B-API	B-API:0.996850
`	O	O:0.999577
both	O	O:0.937280
before	O	O:0.993973
and	O	O:0.995638
after	O	O:0.996356
the	O	O:0.983581
`	O	O:0.984254
pandas.plot()	O	B-API:0.991136
`	O	O:0.999223
call	O	O:0.730028
.	O	O:0.991858
	
Did	O	O:0.995208
you	O	O:0.997457
try	O	O:0.999404
calling	O	O:0.990623
`	O	O:0.996750
plt.show()	B-API	B-API:0.993093
`	O	O:0.998691
?	O	O:0.976943
	
Edit	O	O:0.847005
:	O	O:0.996509
My	O	O:0.999630
original	O	O:0.994433
answer	O	O:0.997713
used	O	O:0.961321
`	O	O:0.996162
ax.scatter	B-API	B-API:0.712499
`	O	O:0.997796
.	O	O:0.951058
	
The	O	O:0.996865
helper	O	O:0.972208
functions	O	O:0.983568
date2num()	B-API	B-API:0.946907
,	O	O:0.998269
num2date()	B-API	O:0.845678
and	O	O:0.998308
drange()	B-API	O:0.805030
are	O	O:0.997857
used	O	O:0.993055
to	O	O:0.998284
facilitate	O	O:0.997964
easy	O	O:0.971456
conversion	O	O:0.996027
to	O	O:0.996901
and	O	O:0.999985
from	O	O:0.995510
datetime	O	B-API:0.674285
and	O	O:0.999417
numeric	O	O:0.793657
ranges	O	O:0.880651
.	O	O:0.976646
	
Here's	O	O:0.992138
an	O	O:0.998693
example	O	O:0.997464
of	O	O:0.999069
how	O	O:0.997999
you	O	O:0.999589
can	O	O:0.999639
display	O	O:0.999870
multiple	O	O:0.999691
plots	O	O:0.994031
side-by-side	O	O:0.991206
below	O	O:0.997694
a	O	O:0.998894
larger	O	O:0.957629
one	O	O:0.999127
using	O	O:0.961679
Gridspec	B-API	B-API:0.943802
:	O	O:0.961079
#CODE	O	O:0.989403
	
I	O	O:0.998465
only	O	O:0.999539
just	O	O:0.992899
discovered	O	O:0.998675
the	O	O:0.996199
awesome	O	O:0.981861
that	O	O:0.985844
is	O	O:0.999111
`	O	O:0.998972
matplotlib.mlab.psd()	B-API	B-API:0.943270
`	O	O:0.997086
,	O	O:0.994801
but	O	O:0.999133
I	O	O:0.997193
am	O	O:0.999294
having	O	O:0.992102
one	O	O:0.997453
issue	O	O:0.986076
,	O	O:0.999528
that	O	O:0.933202
is	O	O:0.995652
:	O	O:0.998509
how	O	O:0.999457
can	O	O:0.999689
I	O	O:0.999978
change	O	O:0.998016
the	O	O:0.994687
frequency	O	O:0.983582
range	O	O:0.999034
used	O	O:0.995542
by	O	O:0.979270
the	O	O:0.992694
method	O	O:0.979494
?	O	O:0.993070
	
Python	O	O:0.991092
Matlplotlib	O	O:0.951822
errorbar	B-API	B-API:0.574542
:	O	O:0.999412
some	O	O:0.994490
errors	O	O:0.993113
disappear	O	O:0.970853
	
@USER	O	O:0.783798
It	O	O:0.971513
says	O	O:0.882031
:	O	O:0.997510
font_manager	B-API	O:0.515173
attribute	O	O:0.996246
not	O	O:0.994483
found	O	O:0.986575
o_O	O	O:0.879517
.	O	O:0.976835
	
Documentation	O	O:0.987607
of	O	O:0.996967
legacy	O	O:0.949202
`	O	O:0.998379
subplot()	B-API	B-API:0.967993
`	O	O:0.995968
is	O	O:0.981597
[	O	O:0.998551
here	O	O:0.965510
]	O	O:0.944894
(	O	O:0.984949
#URL	O	O:0.983022
)	O	O:0.996947
and	O	O:0.998227
`	O	O:0.997161
subplots()	B-API	B-API:0.984215
`	O	O:0.994104
is	O	O:0.967044
[	O	O:0.998542
here	O	O:0.965597
]	O	O:0.951266
(	O	O:0.986877
#URL	O	O:0.981855
)	O	O:0.996648
.	O	O:0.980646
	
I	O	O:0.982288
am	O	O:0.997868
not	O	O:0.995664
completely	O	O:0.999111
sure	O	O:0.992322
if	O	O:0.999628
this	O	O:0.985442
is	O	O:0.998422
the	O	O:0.999130
kind	O	O:0.993159
of	O	O:0.996893
thing	O	O:0.986072
you're	O	O:0.998833
looking	O	O:0.992595
for	O	O:0.997546
,	O	O:0.993668
but	O	O:0.995953
`	O	O:0.993873
legend()	B-API	B-API:0.955835
`	O	O:0.999352
inside	O	O:0.642523
`	O	O:0.998749
matplotlib.pyplot	B-API	B-API:0.794902
`	O	O:0.998116
may	O	O:0.995322
be	O	O:0.999933
able	O	O:0.999074
to	O	O:0.999147
help	O	O:0.998205
you	O	O:0.998761
out	O	O:0.996675
.	O	O:0.998231
	
Is	O	O:0.995665
the	O	O:0.999755
PCA	B-API	O:0.990910
stuff	O	O:0.993925
really	O	O:0.989430
relevant	O	O:0.992626
?	O	O:0.993718
	
Seaborns	O	O:0.961943
clustermap	O	O:0.588471
doesn't	O	O:0.998073
work	O	O:0.998214
with	O	O:0.998860
plt.tight_layout()	B-API	B-API:0.888786
.	O	O:0.991780
	
fig	O	O:0.945590
=	O	O:0.946684
plt.figure	B-API	B-API:0.880172
(	O	O:0.997478
**figprops	O	O:0.907694
)	O	O:0.997678
.	O	O:0.985605
	
From	O	O:0.999288
your	O	O:0.991277
remark	O	O:0.996463
that	O	O:0.996378
`	O	O:0.998597
datetime	O	B-API:0.654292
(	O	O:0.996611
2009	O	O:0.958797
,	O	O:0.997390
10	O	O:0.987002
,	O	O:0.998177
7	O	O:0.993097
,	O	O:0.999097
0	O	O:0.989434
)	O	O:0.995415
.strftime	B-API	B-API:0.952599
(	O	O:0.990076
'	O	O:0.998908
%Hz%d%b	O	O:0.975076
')`	O	O:0.997611
gave	O	O:0.989605
the	O	O:0.998751
right	O	O:0.991607
string	O	O:0.985861
I	O	O:0.996623
would've	O	O:0.991527
thought	O	O:0.826534
it	O	O:0.978216
worked	O	O:0.934031
.	O	O:0.990100
	
yerr	O	O:0.590682
=	O	O:0.958766
np.array	B-API	B-API:0.897612
([	O	O:0.982211
])	O	O:0.964551
	
ax	O	O:0.960986
=	O	O:0.928704
fig.add_subplot	B-API	B-API:0.909878
(	O	O:0.991999
111	O	O:0.981659
);	O	O:0.959574
	
plt.subplots	B-API	B-API:0.925369
:	O	O:0.983540
	
(	O	O:0.977222
It's	O	O:0.997790
not	O	O:0.998666
the	O	O:0.999814
edgecolor	O	O:0.908746
option	O	O:0.995186
in	O	O:0.997297
pcolormesh	B-API	O:0.640068
)	O	O:0.997926
#CODE	O	O:0.976809
	
`	O	O:0.971829
plt.xlabel	B-API	B-API:0.965786
(	O	O:0.998371
u'Wavelength	O	O:0.707646
(	O	O:0.998530
\u03bc	O	O:0.988200
m	O	O:0.984649
)')`	O	O:0.993523
	
You	O	O:0.991265
may	O	O:0.998132
see	O	O:0.999540
that	O	O:0.999034
how	O	O:0.997364
`	O	O:0.999230
.ix	B-API	B-API:0.922275
`	O	O:0.996613
was	O	O:0.970283
used	O	O:0.995045
for	O	O:0.999003
selecting	O	O:0.975639
an	O	O:0.971101
interval	O	O:0.979963
.	O	O:0.985182
	
I	O	O:0.995719
am	O	O:0.997257
running	O	O:0.971015
the	O	O:0.993421
tutorial	O	O:0.970238
for	O	O:0.997948
pylearn2	O	O:0.742950
and	O	O:0.997412
I'm	O	O:0.997563
getting	O	O:0.992029
some	O	O:0.980510
errors	O	O:0.991649
when	O	O:0.997315
it	O	O:0.999343
imports	O	O:0.992766
`	O	O:0.997410
matplotlib.pyplot	B-API	B-API:0.719937
`	O	O:0.997117
.	O	O:0.960650
	
then	O	O:0.998117
a	O	O:0.999823
call	O	O:0.942500
to	O	O:0.995809
`	O	O:0.999139
fig.get_size_inches()	B-API	B-API:0.936439
`	O	O:0.999248
gives	O	O:0.890124
`	O	O:0.998747
[	O	O:0.984624
6	O	O:0.997217
,	O	O:0.997217
7.475	O	O:0.874567
]`	O	O:0.984890
.	O	O:0.977128
	
I	O	O:0.995101
am	O	O:0.998430
experiencing	O	O:0.983230
the	O	O:0.999567
same	O	O:0.983513
problem	O	O:0.997139
as	O	O:0.999235
described	O	O:0.974553
in	O	O:0.995124
import	O	O:0.945438
matplotlib.pyplot	B-API	O:0.929679
hangs	O	O:0.952188
after	O	O:0.996210
updating	O	O:0.965092
my	O	O:0.988552
matplotlib	O	O:0.985708
version	O	O:0.988526
`	O	O:0.993282
import	O	O:0.962254
matplotlib.pyplot	B-API	O:0.983142
as	O	O:0.990565
plt	O	B-API:0.585976
`	O	O:0.997684
hangs	O	O:0.947926
while	O	O:0.998669
executing	O	O:0.965344
`	O	O:0.992411
fc-list	O	B-API:0.867220
`	O	O:0.998085
.	O	O:0.970785
	
Using	O	O:0.979404
`	O	O:0.988745
pcolor	B-API	B-API:0.873012
`	O	O:0.999570
from	O	O:0.991520
matplotlib	O	O:0.994375
I	O	O:0.997946
am	O	O:0.997825
unable	O	O:0.937087
to	O	O:0.998625
do	O	O:0.999565
it	O	O:0.999307
because	O	O:0.998533
my	O	O:0.996295
pc	O	O:0.999265
goes	O	O:0.992207
easily	O	O:0.999075
out	O	O:0.996962
of	O	O:0.993230
memory	O	O:0.826754
(	O	O:0.999566
more	O	O:0.990263
than	O	O:0.992981
8G	O	O:0.985627
)	O	O:0.999142
..	O	O:0.971806
	
+	O	O:0.973778
"	O	O:0.992476
plt.plot	B-API	B-API:0.654234
([	O	O:0.967746
"	O	O:0.954641
+	O	O:0.992057
d.x1	O	O:0.786833
+	O	O:0.986272
"	O	O:0.997925
,	O	O:0.993723
"	O	O:0.989617
+	O	O:0.993185
d.x2	O	O:0.803291
+	O	O:0.995895
"]	O	O:0.993269
,	O	O:0.988171
[	O	O:0.989675
"	O	O:0.991449
+	O	O:0.994769
d.y1	O	O:0.849981
+	O	O:0.987870
"	O	O:0.997927
,	O	O:0.993723
"	O	O:0.989617
+	O	O:0.993174
d.y2	O	O:0.798989
+	O	O:0.995244
"]	O	O:0.993968
,	O	O:0.988267
'	O	O:0.996109
k-	O	O:0.995894
')	O	O:0.998199
\n	O	O:0.928426
"	O	O:0.991667
	
I	O	O:0.993542
am	O	O:0.998902
trying	O	O:0.990144
to	O	O:0.998933
import	O	O:0.999008
Pylab	O	O:0.996689
using	O	O:0.997022
the	O	O:0.989480
`	O	O:0.967435
import	O	O:0.915637
matplotlib.pyplot	B-API	O:0.975028
as	O	O:0.991337
plt	O	B-API:0.628177
`	O	O:0.994431
.	O	O:0.959142
	
The	O	O:0.850088
plt.subplots_adjust	B-API	B-API:0.940476
method	O	O:0.975758
:	O	O:0.991762
#CODE	O	O:0.997248
	
for	O	O:0.992923
i	O	O:0.969739
,	O	O:0.999260
j	O	O:0.966797
in	O	O:0.987188
np.where	B-API	B-API:0.955623
(	O	O:0.997200
significant	O	O:0.893914
):	O	O:0.992102
print	O	O:0.986810
i	O	O:0.992747
,	O	O:0.998443
j	O	O:0.960582
	
ax	O	O:0.961105
=	O	O:0.936510
fig.add_subplot	B-API	B-API:0.899182
(	O	O:0.993834
111	O	O:0.985748
,	O	O:0.997076
projection=	O	O:0.965289
'	O	O:0.997842
3d	O	O:0.968932
')	O	O:0.990205
	
matplotlib.pyplot	B-API	O:0.885447
does	O	O:0.846462
savefig()	B-API	B-API:0.861563
but	O	O:0.999029
not	O	O:0.988761
show()	B-API	B-API:0.621401
in	O	O:0.991611
python3	O	O:0.878758
but	O	O:0.995890
works	O	O:0.991035
in	O	O:0.997091
2.7	O	O:0.893942
	
In	O	O:0.997853
this	O	O:0.996717
case	O	O:0.999009
,	O	O:0.997823
pcolor	B-API	O:0.625436
and	O	O:0.998639
pcolormesh	B-API	O:0.943248
will	O	O:0.993430
produce	O	O:0.998305
the	O	O:0.999930
same	O	O:0.988224
result	O	O:0.995642
.	O	O:0.996342
	
From	O	O:0.990660
the	O	O:0.997526
documentation	O	O:0.996714
of	O	O:0.997019
`	O	O:0.993081
pyplot.errorbar()	B-API	B-API:0.996565
`	O	O:0.993718
:	O	O:0.967556
	
Tkinter	O	O:0.926284
and	O	O:0.997703
pyplot	B-API	O:0.987930
running	O	O:0.986221
out	O	O:0.989893
of	O	O:0.995646
memory	O	O:0.952509
	
You've	O	O:0.964369
already	O	O:0.994885
created	O	O:0.970136
`	O	O:0.998609
ax	O	O:0.857107
`	O	O:0.999715
with	O	O:0.885528
`	O	O:0.998587
plt.subplots	B-API	B-API:0.819945
`	O	O:0.999442
so	O	O:0.990241
don't	O	O:0.998687
you	O	O:0.999864
just	O	O:0.999825
need	O	O:0.999768
to	O	O:0.999806
pass	O	O:0.997349
`	O	O:0.998504
ax=ax	O	O:0.911554
`	O	O:0.999564
to	O	O:0.950515
`	O	O:0.999902
merged2.fcast.plot	O	B-API:0.734577
`	O	O:0.999733
instead	O	O:0.998365
of	O	O:0.999715
setting	O	O:0.967912
`	O	O:0.989304
ax=	O	O:0.631524
...	O	O:0.989412
	
You	O	O:0.995933
also	O	O:0.978385
should	O	O:0.999439
not	O	O:0.998285
import	O	O:0.996353
pylab	O	O:0.990201
,	O	O:0.997980
you	O	O:0.997566
should	O	O:0.999329
do	O	O:0.999265
`	O	O:0.999289
import	O	O:0.942500
matplotlib.pyplot	B-API	O:0.982465
as	O	O:0.989966
plt	O	B-API:0.570134
`	O	O:0.994021
	
Alright	O	O:0.973606
I	O	O:0.989837
got	O	O:0.994932
it	O	O:0.995100
to	O	O:0.999794
work	O	O:0.999938
by	O	O:0.999633
using	O	O:0.997745
plt.minorticks_on()	B-API	B-API:0.966567
and	O	O:0.995649
changing	O	O:0.988423
the	O	O:0.985108
range	O	O:0.991505
of	O	O:0.997882
x	O	O:0.974674
to	O	O:0.999334
x	O	O:0.998790
=	O	O:0.973802
np.arange	B-API	B-API:0.779704
(	O	O:0.995173
0	O	O:0.985122
,	O	O:0.998233
361	O	O:0.975355
,	O	O:0.998287
50	O	O:0.982103
,	O	O:0.999294
dtype	B-API	B-API:0.703611
=	O	O:0.990333
int	O	O:0.567783
)	O	O:0.997830
....	O	O:0.881344
	
You	O	O:0.997137
can	O	O:0.998964
control	O	O:0.998952
the	O	O:0.999778
ratio	O	O:0.991031
of	O	O:0.998862
the	O	O:0.996906
height	O	O:0.994119
/	O	O:0.995664
width	O	O:0.997381
with	O	O:0.993923
`	O	O:0.992832
ax.set_aspect	B-API	B-API:0.869905
(	O	O:0.998684
number	O	O:0.989747
)`	O	O:0.942931
.	O	O:0.993281
	
What	O	O:0.996384
about	O	O:0.977156
plt.title	B-API	B-API:0.511696
?	O	O:0.977569
	
Is	O	O:0.996045
there	O	O:0.999438
a	O	O:0.998767
way	O	O:0.984648
to	O	O:0.999075
darken	O	O:0.998019
or	O	O:0.999794
make	O	O:0.991160
smoother	O	O:0.994068
the	O	O:0.999269
HSV	B-API	O:0.959282
colours	O	O:0.963758
so	O	O:0.998321
they	O	O:0.998417
look	O	O:0.999051
more	O	O:0.996448
like	O	O:0.998843
this	O	O:0.994597
	
plt.plot	B-API	B-API:0.925534
(	O	O:0.994838
arr	O	O:0.950670
[	O	O:0.993287
'	O	O:0.998479
lapse_time	O	O:0.938274
']	O	O:0.995181
,	O	O:0.995765
arr	O	O:0.914833
[	O	O:0.991185
'	O	O:0.998495
contact_angle	O	O:0.908941
'])	O	O:0.991299
	
We	O	O:0.991926
are	O	O:0.998419
looking	O	O:0.997700
for	O	O:0.999668
some	O	O:0.917227
`	O	O:0.997060
.line	B-API	B-API:0.902774
`	O	O:0.998885
objects	O	O:0.911235
and	O	O:0.999499
there	O	O:0.992203
are	O	O:0.988488
two	O	O:0.994577
.	O	O:0.982423
	
My	O	O:0.970805
`	O	O:0.997917
rcParams	B-API	O:0.567368
`	O	O:0.996929
are	O	O:0.967725
not	O	O:0.999530
read	O	O:0.873364
.	O	O:0.989398
	
Now	O	O:0.985130
,	O	O:0.996530
it	O	O:0.998446
says	O	O:0.995058
`	O	O:0.997814
get_data	B-API	B-API:0.977501
`	O	O:0.989279
is	O	O:0.992446
not	O	O:0.995103
defined	O	O:0.993286
...	O	O:0.983112
after	O	O:0.993232
I	O	O:0.999647
move	O	O:0.970046
`	O	O:0.994306
my_plot	O	B-API:0.935101
`	O	O:0.997705
before	O	O:0.955718
the	O	O:0.998292
loop	O	O:0.939207
	
Xaxis	B-API	O:0.942874
interval	O	O:0.981611
y1	O	O:0.780093
(	O	O:0.998642
y2	O	O:0.965847
)	O	O:0.993415
ax2	O	O:0.638674
:	O	O:0.961083
(	O	O:0.995880
-	O	O:0.999695
100000.0	O	O:0.851292
,	O	O:0.999733
800000.0	O	O:0.827481
)	O	O:0.990969
(	O	O:0.998666
wrong	O	O:0.993821
)	O	O:0.997471
	
Then	O	O:0.993710
define	O	O:0.983244
a	O	O:0.997312
method	O	O:0.992605
`	O	O:0.996261
show()	B-API	B-API:0.957863
`	O	O:0.999610
that	O	O:0.966096
calls	O	O:0.998048
`	O	O:0.996121
plt.show()	B-API	B-API:0.999154
`	O	O:0.997488
.	O	O:0.957392
	
`	O	O:0.975030
plt.setp	B-API	B-API:0.906409
(	O	O:0.996964
plt.gca()	B-API	B-API:0.751578
,	O	O:0.989649
'	O	O:0.997853
yticklabels	O	O:0.788241
'	O	O:0.998835
,	O	O:0.999380
ylabels	O	O:0.992014
)`	O	O:0.977928
	
matplotlib.get_backend()	B-API	B-API:0.952865
MacOSX	O	O:0.868365
	
#	O	O:0.957673
matplotlib.use	B-API	B-API:0.911885
(	O	O:0.989476
'	O	O:0.998226
tkagg	O	O:0.971240
')	O	O:0.994685
;	O	O:0.982057
	
From	O	O:0.991136
the	O	O:0.997092
`	O	O:0.991382
savefig()	B-API	B-API:0.986344
`	O	O:0.999101
docs	O	O:0.947795
,	O	O:0.999078
#CODE	O	O:0.992143
	
You	O	O:0.986111
might	O	O:0.998997
also	O	O:0.999485
want	O	O:0.999730
to	O	O:0.998740
look	O	O:0.999782
into	O	O:0.965394
[	O	O:0.994112
`	O	O:0.995432
numpy.vectorize	B-API	B-API:0.998235
`]	O	O:0.682679
(	O	O:0.991849
#URL	O	O:0.974963
)	O	O:0.996796
.	O	O:0.981118
	
'	O	O:0.976198
and	O	O:0.994666
'	O	O:0.995229
plt.figure()	B-API	O:0.585922
;	O	O:0.999260
for	O	O:0.997369
result	O	O:0.999599
in	O	O:0.985026
results	O	O:0.985639
:	O	O:0.989177
plt.clf()	B-API	B-API:0.700041
...	O	O:0.985920
	
Python	O	O:0.964512
,	O	O:0.998716
matplotlib	O	O:0.992662
pyplot	B-API	O:0.862593
show()	B-API	B-API:0.730152
not	O	O:0.990213
blocking	O	O:0.989069
	
According	O	O:0.989447
to	O	O:0.998192
the	O	O:0.999856
docs	O	O:0.984088
`	O	O:0.997570
numpy.loadtxt	B-API	B-API:0.969200
`	O	O:0.996395
is	O	O:0.972072
	
What	O	O:0.978151
is	O	O:0.988771
ravel()	B-API	B-API:0.814182
?	O	O:0.990843
	
`	O	O:0.982802
plot()	B-API	B-API:0.970569
`	O	O:0.998732
in	O	O:0.937119
`	O	O:0.999533
pandas	O	O:0.913423
`	O	O:0.999463
are	O	O:0.993688
build	O	O:0.992727
on	O	O:0.990923
`	O	O:0.997593
matplotlib	O	O:0.815271
`	O	O:0.998196
.	O	O:0.962233
	
`	O	O:0.991312
plt.colorbar()	B-API	B-API:0.987703
`	O	O:0.998644
?	O	O:0.978980
	
from	O	O:0.970289
matplotlib.ticker	B-API	B-API:0.603332
import	O	O:0.942441
LinearLocator	B-API	O:0.756115
,	O	O:0.993054
FormatStrFormatter	B-API	O:0.753763
	
Is	O	O:0.983719
matplotlib.pyplot.hist()	B-API	O:0.710736
what	O	O:0.994796
you	O	O:0.998984
are	O	O:0.999676
looking	O	O:0.997476
for	O	O:0.998117
?	O	O:0.989099
	
File	O	O:0.971597
"	O	O:0.990378
/	O	O:0.965865
usr	O	O:0.969368
/	O	O:0.987356
lib	O	O:0.928594
/	O	O:0.987843
python2.7	O	O:0.754873
/	O	O:0.981441
dist-packages	O	O:0.914951
/	O	O:0.994143
pandas	O	O:0.982462
/	O	O:0.997829
core	O	O:0.909985
/	O	O:0.995583
generic.py	O	O:0.864443
"	O	O:0.995072
,	O	O:0.998120
line	O	O:0.989557
2018	O	O:0.990324
,	O	O:0.999283
in	O	O:0.995159
astype	B-API	O:0.518372
	
Perhaps	O	O:0.992220
you	O	O:0.998359
should	O	O:0.999726
be	O	O:0.999809
calling	O	O:0.997046
`	O	O:0.972580
axvline	B-API	B-API:0.936000
`	O	O:0.999294
on	O	O:0.945502
`	O	O:0.999341
ax2	O	O:0.858130
`	O	O:0.999798
instead	O	O:0.998531
of	O	O:0.999723
calling	O	O:0.984702
the	O	O:0.990054
`	O	O:0.989993
pyplot	B-API	B-API:0.739642
`	O	O:0.997187
method	O	O:0.987174
?	O	O:0.997503
	
(	O	O:0.976856
`	O	O:0.993336
np.all	B-API	B-API:0.979969
(	O	O:0.994761
np.diff	B-API	B-API:0.949840
(	O	O:0.997701
lats	O	O:0.954873
,	O	O:0.999427
axis=0	O	O:0.974487
)	O	O:0.998304
>	O	O:0.992712
0	O	O:0.992845
))`	O	O:0.889138
,	O	O:0.996768
similar	O	O:0.982493
fro	O	O:0.987178
`	O	O:0.998022
lons	O	O:0.816313
`)	O	O:0.999089
	
The	O	O:0.988248
problem	O	O:0.940760
is	O	O:0.995186
'	O	O:0.994015
cause	O	O:0.984927
my	O	O:0.994310
np.mgrid	B-API	O:0.639010
should	O	O:0.998907
vary	O	O:0.996400
from	O	O:0.998249
-1	O	O:0.992731
to	O	O:0.997848
1	O	O:0.999072
and	O	O:0.999684
have	O	O:0.997044
the	O	O:0.997951
self.width	O	B-API:0.697160
and	O	O:0.997927
self.height	O	O:0.604544
.	O	O:0.969394
	
awesome	O	O:0.832696
.	O	O:0.993353
and	O	O:0.999201
thanks	O	O:0.983527
for	O	O:0.995746
the	O	O:0.986716
np.transpose	B-API	B-API:0.916574
tip	O	O:0.978817
,	O	O:0.996618
too	O	O:0.979632
.	O	O:0.989709
	
And	O	O:0.997131
using	O	O:0.998125
`	O	O:0.989856
set_bad	B-API	B-API:0.989844
`	O	O:0.998722
,	O	O:0.969073
`	O	O:0.998685
set_under	B-API	B-API:0.978671
`	O	O:0.998275
and	O	O:0.991212
`	O	O:0.998845
set_over	B-API	B-API:0.990208
`	O	O:0.983233
is	O	O:0.990548
not	O	O:0.999245
a	O	O:0.999573
very	O	O:0.944417
good	O	O:0.991173
option	O	O:0.998752
as	O	O:0.998674
I	O	O:0.997470
would	O	O:0.999814
like	O	O:0.997981
to	O	O:0.999950
have	O	O:0.999969
a	O	O:0.999679
possibility	O	O:0.991254
to	O	O:0.999523
mark	O	O:0.999431
different	O	O:0.998838
pixels	O	O:0.986316
with	O	O:0.999315
different	O	O:0.996821
colours	O	O:0.948796
,	O	O:0.995461
and	O	O:0.999950
this	O	O:0.997351
limits	O	O:0.997667
their	O	O:0.992967
number	O	O:0.996173
to	O	O:0.987035
3	O	O:0.998737
.	O	O:0.991564
	
@USER	O	O:0.955715
numpy's	O	O:0.954980
`	O	O:0.990303
memmap	B-API	B-API:0.894977
`	O	O:0.999396
will	O	O:0.965200
probably	O	O:0.999216
not	O	O:0.999520
be	O	O:0.998454
useful	O	O:0.990418
for	O	O:0.995085
you	O	O:0.982540
.	O	O:0.992453
	
How	O	O:0.997054
about	O	O:0.994828
using	O	O:0.997549
`	O	O:0.936009
interpolate()	B-API	B-API:0.999860
`	O	O:0.985093
:	O	O:0.956345
#CODE	O	O:0.997778
	
cb.ax.set_major_formatter	O	B-API:0.676453
(	O	O:0.983652
ticker.FuncFormatter	B-API	B-API:0.764148
(	O	O:0.998100
myfmt	O	O:0.989117
))	O	O:0.940113
	
special	O	O:0.866770
method	O	O:0.987694
`	O	O:0.996591
__call__()	B-API	B-API:0.856745
`	O	O:0.997327
is	O	O:0.998699
a	O	O:0.999368
good	O	O:0.916384
approach	O	O:0.997442
for	O	O:0.999104
such	O	O:0.970900
	
`	O	O:0.990203
plt.tight_layout()	B-API	B-API:0.994668
`	O	O:0.997117
might	O	O:0.981806
do	O	O:0.997781
it	O	O:0.998537
.	O	O:0.986885
	
Unfortunately	O	O:0.994899
,	O	O:0.999218
I	O	O:0.999200
don't	O	O:0.999291
think	O	O:0.995112
you	O	O:0.999353
can	O	O:0.999301
simply	O	O:0.999917
do	O	O:0.992099
np.minimum	B-API	B-API:0.932592
(	O	O:0.993768
array1	O	O:0.942602
,	O	O:0.998525
array2	O	O:0.910541
,	O	O:0.999030
array3	O	O:0.990977
)	O	O:0.999833
like	O	O:0.997329
to	O	O:0.999964
have	O	O:0.999797
above	O	O:0.996350
,	O	O:0.999919
so	O	O:0.999468
I	O	O:0.999397
think	O	O:0.999534
you	O	O:0.999041
need	O	O:0.999146
to	O	O:0.999821
nest	O	O:0.998386
the	O	O:0.986762
np.minimum	B-API	B-API:0.851054
calls	O	O:0.971086
.	O	O:0.985298
	
Using	O	O:0.973729
`	O	O:0.993861
set_offsets	B-API	B-API:0.963667
`	O	O:0.997627
doesn't	O	O:0.991441
seem	O	O:0.997652
to	O	O:0.999477
behave	O	O:0.999663
as	O	O:0.998761
I	O	O:0.991611
expect	O	O:0.998580
it	O	O:0.989675
to	O	O:0.996701
.	O	O:0.999440
	
Does	O	O:0.993548
the	O	O:0.998929
import	O	O:0.972075
of	O	O:0.992228
Axes3D	O	O:0.759287
do	O	O:0.999372
something	O	O:0.995925
behind	O	O:0.986898
the	O	O:0.997785
scenes	O	O:0.987589
to	O	O:0.999046
alter	O	O:0.998902
the	O	O:0.999539
import	O	O:0.955307
of	O	O:0.995995
pyplot	B-API	O:0.932805
?	O	O:0.997100
	
`	O	O:0.996224
get_color()	B-API	B-API:0.911395
`	O	O:0.999821
just	O	O:0.978366
returns	O	O:0.999158
the	O	O:0.995508
color	O	O:0.973526
attribute	O	O:0.997533
from	O	O:0.999330
a	O	O:0.997694
line	O	O:0.925654
.	O	O:0.992373
	
plt.tight_layout()	B-API	B-API:0.974703
`	O	O:0.991259
	
(	O	O:0.991137
Now	O	O:0.998553
I	O	O:0.997699
see	O	O:0.995119
:	O	O:0.994520
`	O	O:0.996072
linspace	B-API	B-API:0.853389
`	O	O:0.998510
is	O	O:0.998649
even	O	O:0.998349
mentioned	O	O:0.994815
in	O	O:0.996954
`	O	O:0.988483
arange	B-API	O:0.740019
`'	O	O:0.996918
s	O	O:0.730053
docstring	O	O:0.996706
...	O	O:0.988296
)	O	O:0.997927
	
By	O	O:0.989649
default	O	O:0.948390
`	O	O:0.998667
animation.MovieWriter	B-API	B-API:0.913798
`	O	O:0.999356
uses	O	O:0.981077
a	O	O:0.996703
`	O	O:0.985487
subprocess.PIPE	O	O:0.540206
`	O	O:0.999733
to	O	O:0.998719
feed	O	O:0.999258
the	O	O:0.999367
frames	O	O:0.980555
to	O	O:0.999200
the	O	O:0.999768
writer	O	O:0.979715
.	O	O:0.991669
	
With	O	O:0.998843
your	O	O:0.988056
`	O	O:0.999072
matplotlibrc	O	O:0.873428
`	O	O:0.999752
file	O	O:0.956474
,	O	O:0.999957
the	O	O:0.999622
variables	O	O:0.829966
`	O	O:0.998433
mp.rcParams	O	O:0.682342
[	O	O:0.994037
'	O	O:0.997091
lines.linestyle	O	O:0.827802
']`	O	O:0.992361
and	O	O:0.993889
`	O	O:0.997369
mp.rcParams	O	B-API:0.837726
[	O	O:0.990801
'	O	O:0.997329
axes.grid	B-API	O:0.849978
']`	O	O:0.998555
are	O	O:0.995282
correctly	O	O:0.998891
specified	O	O:0.973573
and	O	O:0.999631
this	O	O:0.992430
works	O	O:0.994446
as	O	O:0.995288
expected	O	O:0.972841
...	O	O:0.980654
	
pyplot	B-API	O:0.931299
interface	O	O:0.988819
	
(	O	O:0.981537
and	O	O:0.998580
`	O	O:0.998263
set_yticklabels	B-API	B-API:0.967936
`	O	O:0.998707
for	O	O:0.993547
the	O	O:0.997369
y-axis	O	O:0.951267
)	O	O:0.993536
	
but	O	O:0.984329
`	O	O:0.999154
from	O	O:0.986522
matplotlib.path	B-API	O:0.613517
import	O	O:0.922695
Path	B-API	B-API:0.581146
`	O	O:0.980155
throws	O	O:0.869402
#CODE	O	O:0.995844
	
The	O	O:0.955834
Path	B-API	B-API:0.680002
object	O	O:0.991251
does	O	O:0.992711
not	O	O:0.999467
store	O	O:0.997715
the	O	O:0.997443
points	O	O:0.986566
along	O	O:0.996464
a	O	O:0.997489
Bezier	O	O:0.886971
curve	O	O:0.995799
,	O	O:0.999634
just	O	O:0.997848
the	O	O:0.999656
minimum	O	O:0.964162
parameters	O	O:0.961115
it	O	O:0.997918
needs	O	O:0.997962
.	O	O:0.994314
	
Users	O	O:0.989718
of	O	O:0.977667
Path	B-API	O:0.669057
objects	O	O:0.983189
should	O	O:0.998488
not	O	O:0.999264
access	O	O:0.996413
the	O	O:0.998399
vertices	O	O:0.986905
and	O	O:0.999563
codes	O	O:0.995820
arrays	O	O:0.943673
	
The	O	O:0.993074
trick	O	O:0.985657
is	O	O:0.998981
to	O	O:0.993116
use	O	O:0.995762
Path	B-API	B-API:0.863449
and	O	O:0.988923
PathPatch	B-API	O:0.990101
.	O	O:0.944370
	
This	O	O:0.990576
allows	O	O:0.993133
you	O	O:0.999601
to	O	O:0.999543
get	O	O:0.999926
the	O	O:0.999248
Matplotlib	O	O:0.991161
Path	B-API	O:0.845970
vertices	O	O:0.994349
and	O	O:0.999753
codes	O	O:0.994311
in	O	O:0.994974
the	O	O:0.999149
projection	O	O:0.997659
coordinates	O	O:0.993745
which	O	O:0.999223
you	O	O:0.999766
can	O	O:0.999950
then	O	O:0.999964
convert	O	O:0.999350
into	O	O:0.999059
a	O	O:0.998740
new	O	O:0.737735
Path	B-API	O:0.579849
.	O	O:0.974100
	
I	O	O:0.993062
was	O	O:0.997000
playing	O	O:0.982208
with	O	O:0.972085
PathCollection	B-API	B-API:0.747219
(	O	O:0.999019
my	O	O:0.998488
dyslexia	O	O:0.911739
is	O	O:0.999074
killing	O	O:0.978279
me	O	O:0.991574
switching	O	O:0.963139
between	O	O:0.837892
Path	B-API	B-API:0.722330
and	O	O:0.998253
Patch	O	O:0.922381
)	O	O:0.991726
,	O	O:0.993924
and	O	O:0.999728
if	O	O:0.998904
I	O	O:0.998749
can	O	O:0.999594
get	O	O:0.999771
a	O	O:0.999689
unit	O	O:0.880827
circle	O	O:0.997216
drawn	O	O:0.985887
and	O	O:0.999284
I	O	O:0.998299
can	O	O:0.998240
apply	O	O:0.978574
an	O	O:0.991726
affine	O	O:0.929833
transformation	O	O:0.990139
to	O	O:0.996889
it	O	O:0.999964
,	O	O:0.999899
then	O	O:0.998502
I	O	O:0.999853
think	O	O:0.999045
it	O	O:0.992440
should	O	O:0.998622
work	O	O:0.998659
,	O	O:0.999890
as	O	O:0.998832
it	O	O:0.986268
doesn't	O	O:0.998741
seem	O	O:0.996875
to	O	O:0.999612
inherently	O	O:0.999712
fill	O	O:0.935396
the	O	O:0.994103
space	O	O:0.976730
.	O	O:0.985995
	
Thus	O	O:0.995034
the	O	O:0.997473
`	O	O:0.996148
Spine	B-API	B-API:0.827634
`	O	O:0.999394
objects	O	O:0.975137
are	O	O:0.999016
in	O	O:0.998329
question	O	O:0.971089
	
You	O	O:0.997109
can	O	O:0.997688
use	O	O:0.999598
the	O	O:0.996656
`	O	O:0.976067
set_position()	B-API	B-API:0.998971
`	O	O:0.999431
method	O	O:0.997162
of	O	O:0.999524
the	O	O:0.997343
`	O	O:0.996952
Spine	B-API	B-API:0.871728
`	O	O:0.997806
class	O	O:0.928314
:	O	O:0.997047
#CODE	O	O:0.994188
	
You	O	O:0.993813
mentioned	O	O:0.996412
the	O	O:0.999169
use	O	O:0.993488
of	O	O:0.979298
`	O	O:0.987078
Locator	B-API	B-API:0.705100
`	O	O:0.997555
and	O	O:0.981695
`	O	O:0.997763
Formatter	B-API	B-API:0.976536
`	O	O:0.999439
objects	O	O:0.868762
in	O	O:0.999938
your	O	O:0.987776
comment	O	O:0.972645
.	O	O:0.992437
	
You	O	O:0.998055
need	O	O:0.996596
to	O	O:0.999784
call	O	O:0.999376
remove	O	O:0.905685
on	O	O:0.996390
the	O	O:0.999562
instance	O	O:0.996319
of	O	O:0.998610
the	O	O:0.995449
`	O	O:0.998771
Annotation	B-API	O:0.657081
`	O	O:0.995698
object	O	O:0.942529
.	O	O:0.993820
	
Using	O	O:0.972657
Annotation	B-API	O:0.982844
Instead	O	O:0.997061
of	O	O:0.997649
Ticklabels	O	O:0.904091
	
What	O	O:0.969075
is	O	O:0.997841
the	O	O:0.997428
difference	O	O:0.980104
between	O	O:0.996106
a	O	O:0.978790
Text	B-API	O:0.520829
instance	O	O:0.982259
and	O	O:0.998791
string	O	O:0.987060
in	O	O:0.989502
python	O	O:0.986465
?	O	O:0.994313
	
I	O	O:0.995837
believe	O	O:0.997605
the	O	O:0.993831
anti-aliasing	O	O:0.986755
of	O	O:0.986338
Text	B-API	O:0.878455
objects	O	O:0.996855
is	O	O:0.998497
up	O	O:0.975594
to	O	O:0.999038
the	O	O:0.999827
font	O	O:0.980889
engine	O	O:0.998228
being	O	O:0.995309
used	O	O:0.981999
.	O	O:0.983476
	
What	O	O:0.991688
you	O	O:0.997137
should	O	O:0.999383
do	O	O:0.994038
is	O	O:0.999839
save	O	O:0.958472
a	O	O:0.999183
reference	O	O:0.986942
to	O	O:0.998880
the	O	O:0.999964
first	O	O:0.991310
`	O	O:0.995397
Text	B-API	B-API:0.890045
`	O	O:0.997517
object	O	O:0.939210
and	O	O:0.999636
update	O	O:0.995739
its	O	O:0.995399
contents	O	O:0.998466
by	O	O:0.996253
calling	O	O:0.998057
its	O	O:0.900861
`	O	O:0.996811
set_text()	B-API	B-API:0.991450
`	O	O:0.996446
method	O	O:0.984482
.	O	O:0.995706
	
There	O	O:0.973087
is	O	O:0.999848
a	O	O:0.999395
references	O	O:0.939640
to	O	O:0.999032
the	O	O:0.999360
Text	B-API	O:0.646806
object	O	O:0.999283
returned	O	O:0.996648
by	O	O:0.998367
the	O	O:0.998983
original	O	O:0.992206
setting	O	O:0.996877
of	O	O:0.991743
suptitle	B-API	B-API:0.574382
in	O	O:0.998576
figure.texts	O	B-API:0.627178
.	O	O:0.988403
	
I'm	O	O:0.990601
having	O	O:0.999234
a	O	O:0.998119
problem	O	O:0.977584
with	O	O:0.998783
the	O	O:0.992127
Text	B-API	O:0.632941
object	O	O:0.997274
that	O	O:0.998748
matplotlib	O	O:0.997805
use	O	O:0.997804
to	O	O:0.992565
represent	O	O:0.998274
the	O	O:0.997771
ticklabels	O	O:0.965749
.	O	O:0.991519
	
I	O	O:0.998161
think	O	O:0.998755
you	O	O:0.998562
need	O	O:0.999311
to	O	O:0.999658
displace	O	O:0.998867
the	O	O:0.998667
`	O	O:0.992259
Text	B-API	B-API:0.867508
`	O	O:0.999071
object	O	O:0.991382
,	O	O:0.999783
using	O	O:0.998496
the	O	O:0.991112
`	O	O:0.965190
set_position	B-API	B-API:0.979020
((	O	O:0.987029
x	O	O:0.975077
,	O	O:0.996980
y	O	O:0.950815
))`	O	O:0.690123
method	O	O:0.992271
.	O	O:0.988157
	
This	O	O:0.988403
includes	O	O:0.976853
`	O	O:0.995622
Text	B-API	B-API:0.925034
`	O	O:0.999421
objects	O	O:0.948632
,	O	O:0.999122
`	O	O:0.994594
Line2D	B-API	B-API:0.933202
`	O	O:0.999514
objects	O	O:0.962714
,	O	O:0.998261
`	O	O:0.998939
collection	O	O:0.660948
`	O	O:0.999673
objects	O	O:0.976026
,	O	O:0.996372
`	O	O:0.997018
Patch	O	B-API:0.760634
`	O	O:0.998341
objects	O	O:0.958075
...	O	O:0.989766
	
Text	B-API	O:0.541183
object	O	O:0.982081
in	O	O:0.997412
matplotlib	O	O:0.982950
doesnt	O	O:0.995937
respond	O	O:0.986504
to	O	O:0.999741
zooming	O	O:0.998793
properly	O	O:0.989863
	
After	O	O:0.984726
drawing	O	O:0.996409
a	O	O:0.995120
matplotlib	O	O:0.805110
Text	B-API	O:0.802335
instance	O	O:0.989275
and	O	O:0.999897
then	O	O:0.994914
interactively	O	O:0.992977
panning	O	O:0.994015
,	O	O:0.999199
the	O	O:0.999745
resulting	O	O:0.984655
drawn	O	O:0.997471
text	O	O:0.977856
is	O	O:0.998969
clipped	O	O:0.943678
to	O	O:0.999138
the	O	O:0.999939
data	O	O:0.795554
window	O	O:0.991116
but	O	O:0.999176
not	O	O:0.999068
the	O	O:0.999588
surrounding	O	O:0.968507
bounding	O	O:0.963280
box	O	O:0.988392
.	O	O:0.988001
	
Something	O	O:0.997766
like	O	O:0.995520
`	O	O:0.997866
Text	B-API	B-API:0.765625
(	O	O:0.998404
2	O	O:0.991982
,	O	O:0.997775
0	O	O:0.986901
,	O	O:0.998701
u'Text	O	O:0.878950
(	O	O:0.997041
2	O	O:0.996568
,	O	O:0.998931
0	O	O:0.987951
,	O	O:0.999233
u	O	O:0.974744
"	O	O:0.987166
Text	B-API	B-API:0.786552
(	O	O:0.996781
0.4	O	O:0.849715
,	O	O:0.999055
u\	O	O:0.904931
'	O	O:0.994640
0.4	O	O:0.878456
\	O	O:0.996534
')")')`	O	O:0.896095
.	O	O:0.983407
	
`	O	O:0.988282
plt.legend	B-API	B-API:0.942694
`	O	O:0.998671
returns	O	O:0.982032
a	O	O:0.995272
`	O	O:0.988372
Legend	B-API	O:0.810514
`	O	O:0.998421
object	O	O:0.992625
with	O	O:0.998521
methods	O	O:0.997723
that	O	O:0.998804
allow	O	O:0.995706
you	O	O:0.999628
to	O	O:0.999020
modify	O	O:0.999467
the	O	O:0.999664
appearance	O	O:0.993469
of	O	O:0.997750
the	O	O:0.990731
legend	O	O:0.993286
.	O	O:0.984834
	
So	O	O:0.998023
first	O	O:0.993971
we'll	O	O:0.998920
save	O	O:0.930724
the	O	O:0.997276
`	O	O:0.996002
Legend	B-API	O:0.691950
`	O	O:0.991680
object	O	O:0.815758
:	O	O:0.996460
#CODE	O	O:0.993207
	
In	O	O:0.994108
practice	O	O:0.990905
I	O	O:0.999531
seem	O	O:0.995249
to	O	O:0.999535
end	O	O:0.999765
up	O	O:0.992455
mixing	O	O:0.998447
them	O	O:0.994211
both	O	O:0.995669
myself	O	O:0.970799
in	O	O:0.997975
SW	O	O:0.818633
;	O	O:0.995737
it's	O	O:0.980970
largely	O	O:0.999124
a	O	O:0.999431
matter	O	O:0.987132
of	O	O:0.999610
taste	O	O:0.989174
whether	O	O:0.999192
you	O	O:0.999560
go	O	O:0.997823
through	O	O:0.997732
the	O	O:0.996700
pyplot	B-API	O:0.981391
API	O	O:0.998460
or	O	O:0.998515
access	O	O:0.975715
the	O	O:0.998729
objects	O	O:0.961453
.	O	O:0.995098
pyplot	B-API	O:0.926317
is	O	O:0.998281
certainly	O	O:0.990093
very	O	O:0.987421
convenient	O	O:0.987568
although	O	O:0.998695
as	O	O:0.999005
you	O	O:0.999559
want	O	O:0.998583
to	O	O:0.999209
do	O	O:0.999910
more	O	O:0.994600
complex	O	O:0.945884
/	O	O:0.997640
exotic	O	O:0.971312
things	O	O:0.988619
you'll	O	O:0.998006
find	O	O:0.998654
what	O	O:0.999478
you	O	O:0.999364
can	O	O:0.999772
do	O	O:0.999917
with	O	O:0.999733
pyplot	B-API	O:0.994688
alone	O	O:0.997584
limited	O	O:0.983879
and	O	O:0.999178
you'll	O	O:0.998482
need	O	O:0.995869
to	O	O:0.999704
get	O	O:0.999880
to	O	O:0.999917
know	O	O:0.999933
at	O	O:0.999744
least	O	O:0.997823
the	O	O:0.999839
full	O	O:0.943701
API's	O	O:0.986841
Axes	B-API	O:0.902329
,	O	O:0.996785
Figure	B-API	O:0.565739
,	O	O:0.996709
Legend	B-API	O:0.975864
and	O	O:0.992906
Path	B-API	O:0.916640
objects	O	O:0.960905
better	O	O:0.926183
.	O	O:0.988071
	
There	O	O:0.979076
was	O	O:0.999124
a	O	O:0.999623
refactor	O	O:0.935281
of	O	O:0.998651
the	O	O:0.990746
`	O	O:0.998750
Legend	B-API	O:0.716379
`	O	O:0.999199
class	O	O:0.995303
awhile	O	O:0.996175
back	O	O:0.952370
.	O	O:0.987307
	
call	O	O:0.675924
`	O	O:0.997370
Legend.get_texts()	B-API	B-API:0.975199
`	O	O:0.999708
will	O	O:0.991079
get	O	O:0.999875
a	O	O:0.999836
list	O	O:0.966537
of	O	O:0.996692
Text	B-API	O:0.703747
object	O	O:0.995352
in	O	O:0.997428
the	O	O:0.987480
legend	B-API	O:0.907758
object	O	O:0.922645
:	O	O:0.995570
#CODE	O	O:0.996300
	
Some	O	O:0.994086
parameters	O	O:0.945726
could	O	O:0.998049
easily	O	O:0.999550
be	O	O:0.999871
read	O	O:0.974033
from	O	O:0.995900
the	O	O:0.996854
`	O	O:0.997535
Legend	B-API	O:0.750770
`	O	O:0.998065
object	O	O:0.983536
,	O	O:0.998822
others	O	O:0.963031
(	O	O:0.999234
like	O	O:0.997221
`	O	O:0.999371
title	O	O:0.938320
`	O	O:0.999503
,	O	O:0.980260
`	O	O:0.999870
fancybox	O	O:0.959690
`)	O	O:0.999889
required	O	O:0.998222
some	O	O:0.968645
'	O	O:0.999124
artistics	O	O:0.933193
'	O	O:0.995237
.	O	O:0.991887
	
42	O	O:0.964482
from	O	O:0.996924
matplotlib.legend	B-API	O:0.745084
import	O	O:0.976504
Legend	B-API	O:0.973649
	
How	O	O:0.996124
do	O	O:0.996108
I	O	O:0.999190
choose	O	O:0.994848
the	O	O:0.994035
optimum	O	O:0.972155
width	O	O:0.991004
for	O	O:0.999331
a	O	O:0.998144
matplotlib	O	O:0.588706
Button	B-API	O:0.664374
?	O	O:0.988570
	
I	O	O:0.995226
removed	O	O:0.984209
`	O	O:0.997068
color=axcolor	O	O:0.671338
`	O	O:0.999731
from	O	O:0.993351
the	O	O:0.999404
`	O	O:0.990599
Button	B-API	B-API:0.901832
`	O	O:0.999381
call	O	O:0.670599
;	O	O:0.997559
and	O	O:0.990853
I	O	O:0.999585
added	O	O:0.996527
a	O	O:0.982558
`	O	O:0.981373
plt.show()	B-API	B-API:0.971730
`	O	O:0.998213
before	O	O:0.957617
the	O	O:0.998717
event	O	O:0.976665
connect	O	O:0.977944
,	O	O:0.999633
otherwise	O	O:0.999853
a	O	O:0.997848
figure	O	B-API:0.693936
window	O	O:0.997106
didn't	O	O:0.988853
appear	O	O:0.995733
for	O	O:0.998892
me	O	O:0.793908
(	O	O:0.997398
neither	O	O:0.997189
through	O	O:0.962926
`	O	O:0.997752
ipython	O	O:0.755146
`	O	O:0.999484
,	O	O:0.995688
nor	O	O:0.999775
with	O	O:0.987149
`	O	O:0.999415
python	O	O:0.986121
`)	O	O:0.998958
.	O	O:0.977714
	
button	O	O:0.982193
=	O	O:0.913040
Button	B-API	B-API:0.549145
(	O	O:0.997467
ax=reset_axis	O	O:0.823766
,	O	O:0.997520
label=	O	O:0.989684
'	O	O:0.995347
Reset	O	O:0.958460
'	O	O:0.996313
,	O	O:0.997482
color=	O	O:0.996150
'	O	O:0.996452
lightblue	O	O:0.926434
'	O	O:0.997563
,	O	O:0.999312
hovercolor=	O	O:0.903901
'	O	O:0.998419
0.975	O	O:0.954601
')	O	O:0.994601
	
`	O	O:0.991653
tbar.add_button	O	B-API:0.731233
(	O	O:0.999868
a	O	O:0.985564
Button	B-API	B-API:0.835952
object	O	O:0.992337
);	O	O:0.861502
`	O	O:0.989975
	
For	O	O:0.999660
your	O	O:0.994792
buttons	O	O:0.982190
to	O	O:0.999677
work	O	O:0.999895
,	O	O:0.999934
you	O	O:0.999876
need	O	O:0.999583
to	O	O:0.999971
keep	O	O:0.999910
a	O	O:0.999569
reference	O	O:0.993145
to	O	O:0.999402
the	O	O:0.999903
`	O	O:0.989825
Button	B-API	B-API:0.908112
`	O	O:0.998866
object	O	O:0.923105
around	O	O:0.980417
.	O	O:0.969218
	
I	O	O:0.998240
know	O	O:0.995336
how	O	O:0.994539
to	O	O:0.998630
add	O	O:0.998883
and	O	O:0.999890
work	O	O:0.998847
with	O	O:0.999465
single	O	O:0.960341
cursor	O	O:0.989893
`	O	O:0.998641
self.cursor	O	O:0.834051
=	O	O:0.979056
Cursor	B-API	B-API:0.671751
(	O	O:0.996426
self.static_canvas.Dataplot	O	O:0.826797
,	O	O:0.999394
useblit=True	O	O:0.969803
,	O	O:0.997669
color=	O	O:0.992952
'	O	O:0.997996
red	O	O:0.963953
'	O	O:0.997236
,	O	O:0.998143
linewidth=2	O	O:0.994498
)`	O	O:0.950393
,	O	O:0.995717
but	O	O:0.999596
what	O	O:0.994958
I	O	O:0.999275
should	O	O:0.999689
do	O	O:0.996802
to	O	O:0.999792
create	O	O:0.998916
to	O	O:0.998761
cursors	O	O:0.999211
?	O	O:0.996869
	
I	O	O:0.998420
think	O	O:0.997102
tillsten	O	O:0.818481
is	O	O:0.997016
right	O	O:0.990828
--	O	O:0.999536
study	O	O:0.955978
how	O	O:0.998812
the	O	O:0.994455
[	O	O:0.996208
`	O	O:0.996488
Cursor	B-API	B-API:0.908350
`	O	O:0.999664
class	O	O:0.978489
]	O	O:0.987426
(	O	O:0.984006
#URL	O	O:0.954974
)	O	O:0.997909
does	O	O:0.975559
it	O	O:0.998111
.	O	O:0.997619
	
I've	O	O:0.957136
checked	O	O:0.950288
briefly	O	O:0.923250
,	O	O:0.998278
but	O	O:0.998163
I	O	O:0.997818
don't	O	O:0.999762
know	O	O:0.994207
how	O	O:0.999690
to	O	O:0.998663
modify	O	O:0.999208
the	O	O:0.999532
properties	O	O:0.987814
of	O	O:0.999385
an	O	O:0.997354
`	O	O:0.999512
Arc	B-API	O:0.810819
`	O	O:0.999046
instance	O	O:0.946100
,	O	O:0.998892
although	O	O:0.994808
I'm	O	O:0.997841
sure	O	O:0.995338
it's	O	O:0.997479
possible	O	O:0.980961
.	O	O:0.994939
	
You	O	O:0.993008
could	O	O:0.999333
also	O	O:0.998653
try	O	O:0.999724
passing	O	O:0.995427
a	O	O:0.995612
`	O	O:0.963167
Arrow	B-API	B-API:0.824046
`	O	O:0.999598
instance	O	O:0.971792
as	O	O:0.997520
marker	O	O:0.947822
,	O	O:0.992496
but	O	O:0.989336
I'm	O	O:0.996356
not	O	O:0.999587
sure	O	O:0.997886
whether	O	O:0.993950
that	O	O:0.983125
works	O	O:0.992665
.	O	O:0.995566
	
Currently	O	O:0.994967
,	O	O:0.998916
I	O	O:0.998320
don't	O	O:0.997869
think	O	O:0.996108
it	O	O:0.999858
possible	O	O:0.994879
as	O	O:0.999392
the	O	O:0.995094
`	O	O:0.987447
Arrow	B-API	B-API:0.934699
`	O	O:0.999502
class	O	O:0.995410
only	O	O:0.993232
supports	O	O:0.997137
`'	O	O:0.995181
solid	O	O:0.866529
'	O	O:0.980243
|	O	O:0.989383
'	O	O:0.998044
dashed	O	O:0.958355
'	O	O:0.987351
|	O	O:0.994506
'	O	O:0.997868
dashdot	O	O:0.970732
'	O	O:0.991809
|	O	O:0.987312
'	O	O:0.998187
dotted	O	O:0.983611
'`	O	O:0.997745
four	O	O:0.987662
different	O	O:0.994362
linestyles	O	O:0.957941
.	O	O:0.986059
	
The	O	O:0.983260
Node	B-API	O:0.992400
class	O	O:0.996174
has	O	O:0.997349
the	O	O:0.998990
coordinates	O	O:0.989793
stored	O	O:0.990628
as	O	O:0.998365
members	O	B-API:0.513399
(	O	O:0.995717
x	O	O:0.978041
and	O	O:0.999297
y	O	O:0.992953
)	O	O:0.998372
,	O	O:0.998888
as	O	O:0.999563
well	O	O:0.975982
as	O	O:0.999192
index	O	O:0.992067
.	O	O:0.987004
	
You	O	O:0.995021
can	O	O:0.998624
scale	O	O:0.999593
your	O	O:0.999597
z	O	O:0.994814
values	O	O:0.996275
to	O	O:0.997403
fit	O	O:0.999688
this	O	O:0.997108
range	O	O:0.999115
with	O	O:0.987387
Normalize	B-API	O:0.627164
.	O	O:0.992042
	
You	O	O:0.991490
should	O	O:0.997165
mention	O	O:0.997657
the	O	O:0.998057
`	O	O:0.983408
Normalize	B-API	B-API:0.781859
`	O	O:0.999653
methods	O	O:0.981445
here	O	O:0.993827
as	O	O:0.999101
well	O	O:0.963798
.	O	O:0.995665
	
Matplotlib	O	O:0.952378
provides	O	O:0.977562
the	O	O:0.997374
class	O	O:0.989470
`	O	O:0.994531
Normalize	B-API	B-API:0.766462
`	O	O:0.999054
for	O	O:0.990715
that	O	O:0.944972
:	O	O:0.993939
#CODE	O	O:0.995999
	
Create	O	O:0.995617
a	O	O:0.997564
new	O	O:0.978885
instance	O	O:0.997340
of	O	O:0.991992
`	O	O:0.988329
Normalize	B-API	B-API:0.754136
`	O	O:0.999142
for	O	O:0.996762
each	O	O:0.985364
image	O	O:0.988048
you	O	O:0.999388
want	O	O:0.998852
to	O	O:0.999152
process	O	O:0.997222
.	O	O:0.995015
	
And	O	O:0.998983
then	O	O:0.998564
you	O	O:0.999906
can	O	O:0.999961
also	O	O:0.999905
replicate	O	O:0.999889
the	O	O:0.999516
functionality	O	O:0.995466
of	O	O:0.995893
`	O	O:0.993498
Normalize	B-API	B-API:0.802052
`	O	O:0.993564
(	O	O:0.994357
since	O	O:0.999007
you	O	O:0.999009
seem	O	O:0.995913
to	O	O:0.999475
not	O	O:0.999959
like	O	O:0.997675
it	O	O:0.992570
):	O	O:0.997713
#CODE	O	O:0.993915
	
Use	O	O:0.987769
these	O	O:0.996278
to	O	O:0.999007
create	O	O:0.999661
a	O	O:0.998564
`	O	O:0.989194
Normalize	B-API	B-API:0.762494
`	O	O:0.998466
instance	O	O:0.674244
(	O	O:0.999390
other	O	O:0.997319
normalisation	O	O:0.989713
classes	O	O:0.971230
are	O	O:0.998114
available	O	O:0.996130
,	O	O:0.997980
e.g.	O	O:0.979253
log	O	O:0.997104
scale	O	O:0.958574
)	O	O:0.998345
.	O	O:0.978012
	
The	O	O:0.991206
documentation	O	O:0.995718
of	O	O:0.992877
Normalize	B-API	O:0.601803
might	O	O:0.998650
be	O	O:0.999654
a	O	O:0.999712
bit	O	O:0.930373
deceiving	O	O:0.976679
here	O	O:0.910378
:	O	O:0.993063
`	O	O:0.999530
process_value	O	B-API:0.553085
`	O	O:0.997956
is	O	O:0.998766
a	O	O:0.995273
function	O	O:0.977831
which	O	O:0.982090
is	O	O:0.999333
only	O	O:0.997475
used	O	O:0.994885
for	O	O:0.995134
preprocessing	O	O:0.689420
(	O	O:0.970879
and	O	O:0.999383
static	O	O:0.900199
)	O	O:0.986352
.	O	O:0.958387
	
I	O	O:0.996778
have	O	O:0.999371
several	O	O:0.997616
questions	O	O:0.995710
regarding	O	O:0.995707
the	O	O:0.992575
Normalize	B-API	O:0.777701
class	O	O:0.992474
in	O	O:0.996133
Matplotlib	O	O:0.980626
.	O	O:0.986426
	
with	O	O:0.998398
your	O	O:0.993999
own	O	O:0.997703
`	O	O:0.996486
Normalize	B-API	B-API:0.895754
`	O	O:0.994554
function	O	O:0.973456
.	O	O:0.993465
	
This	O	O:0.988883
might	O	O:0.998055
be	O	O:0.999121
why	O	O:0.998974
they've	O	O:0.957006
avoided	O	O:0.983325
implementing	O	O:0.983617
it	O	O:0.993751
as	O	O:0.999504
part	O	O:0.995145
of	O	O:0.991202
Normalize	B-API	O:0.549549
.	O	O:0.989902
	
matplotlib	O	O:0.894712
:	O	O:0.996270
can	O	O:0.999334
I	O	O:0.999945
create	O	O:0.994070
AxesSubplot	O	O:0.945607
objects	O	O:0.996131
,	O	O:0.999824
then	O	O:0.999189
add	O	O:0.999917
them	O	O:0.997653
to	O	O:0.999921
a	O	O:0.999688
Figure	B-API	B-API:0.506240
instance	O	O:0.993165
?	O	O:0.994472
	
Also	O	O:0.997023
do	O	O:0.998475
you	O	O:0.999583
use	O	O:0.994433
Figure	B-API	O:0.810477
from	O	O:0.996010
the	O	O:0.997413
local	O	O:0.991906
matplotlib	O	O:0.993622
installation	O	O:0.979161
or	O	O:0.997977
not	O	O:0.996592
?	O	O:0.999012
	
Additionally	O	O:0.992722
,	O	O:0.999232
there	O	O:0.999590
are	O	O:0.999176
functions	O	O:0.999273
from	O	O:0.996771
the	O	O:0.998347
pyplot	B-API	O:0.964441
interface	O	O:0.990599
and	O	O:0.999039
there	O	O:0.999255
are	O	O:0.997370
methods	O	O:0.994457
on	O	O:0.997180
the	O	O:0.998288
`	O	O:0.991831
Figure	B-API	B-API:0.938013
`	O	O:0.999245
class	O	O:0.982587
.	O	O:0.994605
	
I'll	O	O:0.992665
assume	O	O:0.989588
in	O	O:0.999465
the	O	O:0.997054
following	O	O:0.996391
that	O	O:0.990022
`	O	O:0.999601
fig	O	O:0.932198
`	O	O:0.998292
is	O	O:0.995476
an	O	O:0.999298
instance	O	O:0.996768
of	O	O:0.999309
a	O	O:0.994500
`	O	O:0.986878
Figure	B-API	B-API:0.956141
`	O	O:0.994617
:	O	O:0.969241
	
Both	O	O:0.995278
the	O	O:0.992518
Figure	B-API	O:0.626995
and	O	O:0.999448
the	O	O:0.994677
Axes	B-API	O:0.727814
class	O	O:0.999021
have	O	O:0.998932
a	O	O:0.999513
`	O	O:0.986895
clear()	O	B-API:0.989760
`	O	O:0.996452
method	O	O:0.981087
.	O	O:0.995700
	
I	O	O:0.985606
had	O	O:0.997937
this	O	O:0.995661
same	O	O:0.982873
problem	O	O:0.982515
,	O	O:0.996429
and	O	O:0.998776
it	O	O:0.995275
was	O	O:0.992473
caused	O	O:0.996426
by	O	O:0.995954
calling	O	O:0.966187
`	O	O:0.969187
show()	O	B-API:0.977491
`	O	O:0.999327
on	O	O:0.997094
the	O	O:0.997174
Figure	B-API	O:0.746417
object	O	O:0.997460
instead	O	O:0.999478
of	O	O:0.999517
the	O	O:0.995089
pyplot	B-API	O:0.934838
object	O	O:0.971573
.	O	O:0.984751
	
It	O	O:0.988531
got	O	O:0.995417
wrapped	O	O:0.995215
up	O	O:0.978138
in	O	O:0.999593
a	O	O:0.999143
subclass	O	O:0.981804
of	O	O:0.996466
Figure	B-API	O:0.604395
,	O	O:0.999446
which	O	O:0.999130
also	O	O:0.975925
got	O	O:0.999807
level-of-detail	O	O:0.966250
functionality	O	O:0.967907
and	O	O:0.997738
context	O	O:0.979554
menus	O	O:0.957296
.	O	O:0.981889
	
I	O	O:0.998773
have	O	O:0.998949
an	O	O:0.998444
external	O	O:0.976178
function	O	O:0.994158
which	O	O:0.989651
returns	O	O:0.998841
a	O	O:0.985182
Figure	B-API	B-API:0.876856
object	O	O:0.987130
,	O	O:0.997957
and	O	O:0.998632
in	O	O:0.999769
this	O	O:0.990891
situation	O	O:0.998210
,	O	O:0.999683
each	O	O:0.866854
Figure	B-API	O:0.597814
object	O	O:0.983042
is	O	O:0.999088
composed	O	O:0.995091
of	O	O:0.998819
exactly	O	O:0.996976
one	O	O:0.996029
Axes	B-API	B-API:0.559257
object	O	O:0.978252
.	O	O:0.982694
	
While	O	O:0.998589
a	O	O:0.996381
search	O	O:0.838717
did	O	O:0.998844
lead	O	O:0.994844
me	O	O:0.994801
to	O	O:0.997674
see	O	O:0.999951
that	O	O:0.994279
pyplot.figure()	B-API	B-API:0.923000
is	O	O:0.999049
the	O	O:0.995584
development	O	O:0.975716
team's	O	O:0.931711
recommended	O	O:0.888344
instantiation	O	O:0.992698
technique	O	O:0.996224
,	O	O:0.998711
it	O	O:0.998882
doesn't	O	O:0.998046
change	O	O:0.994584
the	O	O:0.997457
question	O	O:0.773749
:	O	O:0.984946
is	O	O:0.999353
there	O	O:0.999023
any	O	O:0.997902
way	O	O:0.993185
to	O	O:0.998262
do	O	O:0.998804
Axes	B-API	O:0.836123
/	O	O:0.984847
Figure	B-API	O:0.901191
copy	O	O:0.752500
construction	O	O:0.993351
and	O	O:0.980062
Figure	B-API	O:0.755785
construction	O	O:0.961886
via	O	O:0.994399
composition	O	O:0.991886
of	O	O:0.997780
copied	O	O:0.824604
Axes	B-API	O:0.833143
?	O	O:0.989439
	
A	O	O:0.993148
reference	O	O:0.991696
to	O	O:0.995442
it	O	O:0.999807
isn't	O	O:0.999619
stored	O	O:0.979476
in	O	O:0.999339
the	O	O:0.997697
`	O	O:0.992348
Figure	B-API	B-API:0.933682
`	O	O:0.997658
object	O	O:0.931348
,	O	O:0.998720
but	O	O:0.991382
is	O	O:0.999263
stored	O	O:0.950936
in	O	O:0.998885
the	O	O:0.996805
`	O	O:0.990345
Canvas	O	B-API:0.906317
`	O	O:0.998865
object	O	O:0.993204
so	O	O:0.999456
you	O	O:0.998323
can	O	O:0.999172
destroy	O	O:0.999603
a	O	O:0.993860
window	O	O:0.962573
via	O	O:0.987985
#CODE	O	O:0.984450
	
Removing	O	O:0.969579
the	O	O:0.987719
`	O	O:0.994674
frameon=False	O	O:0.867709
`	O	O:0.999565
option	O	O:0.995520
from	O	O:0.997076
`	O	O:0.998308
f	O	O:0.971480
=	O	O:0.979134
Figure	B-API	B-API:0.755762
(	O	O:0.994364
figsize	O	O:0.829033
=(	O	O:0.986203
12	O	O:0.973115
,	O	O:0.998527
5	O	O:0.980312
)	O	O:0.999004
,	O	O:0.998047
dpi=100	O	O:0.984164
,	O	O:0.998710
frameon=False	O	O:0.997315
)`	O	O:0.989267
solved	O	O:0.991948
the	O	O:0.996047
issue	O	O:0.939929
.	O	O:0.986515
	
I	O	O:0.997547
used	O	O:0.994962
the	O	O:0.986374
Bar	B-API	O:0.987565
class	O	O:0.996393
to	O	O:0.999319
plot	O	O:0.999373
length	O	O:0.999256
of	O	O:0.996759
videos	O	O:0.986032
vs	O	O:0.999328
views	O	O:0.980647
which	O	O:0.991124
are	O	O:0.997402
the	O	O:0.999070
x	O	O:0.937387
and	O	O:0.999771
y	O	O:0.999214
values	O	O:0.984375
of	O	O:0.998753
the	O	O:0.995975
tuples	O	O:0.951279
.	O	O:0.985402
	
Animation	B-API	O:0.976997
will	O	O:0.993148
not	O	O:0.999878
work	O	O:0.999128
on	O	O:0.998960
inplace	O	O:0.529527
(	O	O:0.999157
or	O	O:0.991188
inline	O	O:0.796674
?	O	O:0.999206
)	O	O:0.998540
on	O	O:0.992966
notebook	O	O:0.989160
.	O	O:0.992567
	
By	O	O:0.993716
artifacts	O	O:0.991464
,	O	O:0.999728
I	O	O:0.999183
now	O	O:0.998401
understand	O	O:0.983526
to	O	O:0.999652
mean	O	O:0.998593
you	O	O:0.998802
are	O	O:0.999818
creating	O	O:0.999598
a	O	O:0.996695
second	O	O:0.816910
`	O	O:0.995455
Animation	B-API	O:0.855842
`	O	O:0.997239
object	O	O:0.926929
and	O	O:0.999890
what	O	O:0.997994
you	O	O:0.996603
get	O	O:0.989418
is	O	O:0.999920
both	O	O:0.997226
of	O	O:0.999910
them	O	O:0.975828
running	O	O:0.992149
in	O	O:0.993399
parallel	O	O:0.916763
(	O	O:0.998364
which	O	O:0.996226
I	O	O:0.996452
am	O	O:0.999172
not	O	O:0.995550
sure	O	O:0.999371
what	O	O:0.997434
I	O	O:0.999171
expect	O	O:0.999319
to	O	O:0.990449
happen	O	O:0.999707
there	O	O:0.996918
)	O	O:0.998959
.	O	O:0.990541
	
by	O	O:0.975514
`	O	O:0.997127
ax	O	O:0.845670
`	O	O:0.999481
I	O	O:0.996767
mean	O	O:0.999477
the	O	O:0.996443
current	O	O:0.895574
`	O	O:0.996260
Axis	B-API	O:0.886555
`	O	O:0.998803
object	O	O:0.987383
,	O	O:0.999650
which	O	O:0.995470
you	O	O:0.997101
were	O	O:0.999116
getting	O	O:0.998171
at	O	O:0.997645
via	O	O:0.983003
`	O	O:0.994494
gca	B-API	B-API:0.888384
`	O	O:0.997863
.	O	O:0.955438
	
Your	O	O:0.963554
legend	B-API	O:0.974482
command	O	O:0.994446
is	O	O:0.999184
using	O	O:0.998771
the	O	O:0.992536
markers	O	O:0.571898
,	O	O:0.996345
not	O	O:0.999442
the	O	O:0.999862
lines	O	O:0.994789
as	O	O:0.999315
inputs	O	O:0.998650
by	O	O:0.998173
using	O	O:0.998543
`	O	O:0.985629
plot	O	O:0.546851
[	O	O:0.998803
0	O	O:0.966184
]`	O	O:0.972650
.	O	O:0.964341
	
`	O	O:0.980220
Axes	B-API	B-API:0.927914
`	O	O:0.999519
objects	O	O:0.990705
know	O	O:0.998882
about	O	O:0.997040
things	O	O:0.979610
like	O	O:0.996399
tick	O	O:0.994760
location	O	O:0.996063
and	O	O:0.998329
labels	O	O:0.976845
and	O	O:0.998634
the	O	O:0.998070
display	O	B-API:0.575262
range	O	O:0.964071
(	O	O:0.995239
which	O	O:0.997211
it	O	O:0.999536
does	O	O:0.999076
by	O	O:0.999414
knowing	O	O:0.997513
about	O	O:0.885388
`	O	O:0.992150
Axis	B-API	O:0.688338
`	O	O:0.997531
object	O	O:0.943785
,	O	O:0.998818
but	O	O:0.998947
that	O	O:0.979989
is	O	O:0.999810
getting	O	O:0.996424
even	O	O:0.998661
more	O	O:0.997440
into	O	O:0.985163
the	O	O:0.999163
weeds	O	O:0.821362
)	O	O:0.997524
.	O	O:0.983369
	
Use	O	O:0.810767
Axis	B-API	O:0.972823
method	O	O:0.995576
`	O	O:0.998217
set_xscale	B-API	B-API:0.772935
`	O	O:0.999250
or	O	O:0.981152
`	O	O:0.998304
set_yscale	B-API	B-API:0.891827
`	O	O:0.997556
.	O	O:0.959322
	
`	O	O:0.990422
ax.set_xticks()	B-API	B-API:0.990921
`	O	O:0.996911
is	O	O:0.994719
a	O	O:0.998976
method	O	O:0.995708
of	O	O:0.998652
the	O	O:0.997658
`	O	O:0.995986
Axes	B-API	B-API:0.928167
`	O	O:0.998306
object	O	O:0.982083
,	O	O:0.999401
whilst	O	O:0.955424
`	O	O:0.997368
matplotlib.ticker.FixedLocator	B-API	B-API:0.739700
`	O	O:0.998292
is	O	O:0.994181
an	O	O:0.996151
object	O	O:0.990709
which	O	O:0.981845
is	O	O:0.999508
used	O	O:0.991737
with	O	O:0.997565
the	O	O:0.995050
`	O	O:0.995239
Axis	B-API	O:0.858543
`	O	O:0.997599
object	O	O:0.873666
(	O	O:0.997312
`	O	O:0.995613
Axes	B-API	B-API:0.846546
`	O	O:0.998956
is	O	O:0.996200
basically	O	O:0.999402
the	O	O:0.999869
whole	O	O:0.955802
graph	O	O:0.997138
,	O	O:0.998575
whilst	O	O:0.978234
`	O	O:0.994393
Axis	B-API	O:0.930711
`	O	O:0.997924
is	O	O:0.999275
just	O	O:0.999208
one	O	O:0.999795
of	O	O:0.997182
the	O	O:0.958805
(	O	O:0.999285
two	O	O:0.994626
)	O	O:0.998565
axis	O	O:0.768526
(	O	O:0.999521
x	O	O:0.988739
or	O	O:0.999027
y	O	O:0.989840
)	O	O:0.998793
.	O	O:0.983314
	
This	O	O:0.916169
is	O	O:0.997170
not	O	O:0.997002
particularly	O	O:0.997896
well	O	O:0.990497
documented	O	O:0.967494
,	O	O:0.998073
but	O	O:0.988960
`	O	O:0.996710
Polygon	B-API	O:0.954589
`	O	O:0.999787
objects	O	O:0.990726
have	O	O:0.999769
a	O	O:0.999844
pair	O	O:0.993904
of	O	O:0.998970
methods	O	O:0.974381
`	O	O:0.998900
get_xy	B-API	B-API:0.862617
`	O	O:0.997879
and	O	O:0.983702
`	O	O:0.998767
set_xy	B-API	B-API:0.992632
`	O	O:0.996423
.	O	O:0.956590
	
In	O	O:0.996585
particular	O	O:0.995938
,	O	O:0.999717
if	O	O:0.996449
/	O	O:0.998923
when	O	O:0.995030
there	O	O:0.997370
are	O	O:0.999224
so	O	O:0.999813
many	O	O:0.994881
circles	O	O:0.957337
for	O	O:0.999226
the	O	O:0.996896
figure	O	O:0.964868
to	O	O:0.999611
become	O	O:0.999492
connected	O	O:0.996794
,	O	O:0.999617
the	O	O:0.998479
`	O	O:0.995599
for	O	O:0.993062
polygon	O	O:0.998708
in	O	O:0.986772
polygons	O	O:0.805236
:	O	O:0.993309
`	O	O:0.999530
fails	O	O:0.992283
with	O	O:0.999817
a	O	O:0.994410
`	O	O:0.976455
TypeError	O	O:0.945679
:	O	O:0.993347
'	O	O:0.994006
Polygon	B-API	O:0.991941
'	O	O:0.989470
object	O	O:0.955620
is	O	O:0.995540
not	O	O:0.993256
iterable	O	O:0.941482
`	O	O:0.991290
.	O	O:0.953074
	
Just	O	O:0.991431
use	O	O:0.996314
the	O	O:0.980738
`	O	O:0.984249
Polygon	B-API	O:0.961778
`	O	O:0.999466
or	O	O:0.992089
`	O	O:0.998284
Rectangle	B-API	B-API:0.717013
`	O	O:0.996097
classes	O	B-API:0.502007
:	O	O:0.996601
#CODE	O	O:0.995779
	
As	O	O:0.996391
you	O	O:0.999242
can	O	O:0.999668
see	O	O:0.999886
,	O	O:0.999807
the	O	O:0.999218
edge	O	O:0.929638
is	O	O:0.999156
center-positioned	O	O:0.989095
along	O	O:0.995715
the	O	O:0.995787
border	O	O:0.991661
of	O	O:0.998744
the	O	O:0.999027
domain	O	O:0.997948
of	O	O:0.998179
the	O	O:0.984780
Rectangle	B-API	O:0.672675
object	O	O:0.982206
,	O	O:0.997739
and	O	O:0.999781
so	O	O:0.999364
bleeds	O	O:0.961371
into	O	O:0.994143
this	O	O:0.973294
domain	O	O:0.970662
.	O	O:0.986768
	
You	O	O:0.992883
can	O	O:0.997945
do	O	O:0.999954
this	O	O:0.999548
by	O	O:0.997332
overplotting	O	O:0.998896
a	O	O:0.971107
Rectangle	B-API	O:0.746263
patch	O	O:0.997554
on	O	O:0.999420
the	O	O:0.999699
cell	O	O:0.997946
that	O	O:0.998614
you	O	O:0.999786
would	O	O:0.999928
want	O	O:0.999763
to	O	O:0.999370
highlight	O	O:0.994821
.	O	O:0.994180
	
Currently	O	O:0.997884
I	O	O:0.998720
use	O	O:0.998330
the	O	O:0.957868
`	O	O:0.965367
add_patch	B-API	B-API:0.976570
(	O	O:0.992180
Rectangle	B-API	B-API:0.856815
(	O	O:0.995674
...	O	O:0.988651
))`	O	O:0.498815
,	O	O:0.995338
but	O	O:0.994475
it	O	O:0.995798
does	O	O:0.996996
not	O	O:0.999053
fit	O	O:0.996778
really	O	O:0.996382
well	O	O:0.988548
.	O	O:0.996255
	
Unfortunately	O	O:0.993488
it	O	O:0.998462
seems	O	O:0.999557
that	O	O:0.999046
the	O	O:0.998412
'	O	O:0.990706
Rectangle	B-API	O:0.552394
'	O	O:0.986446
object	O	O:0.992908
has	O	O:0.997272
no	O	O:0.995721
attribute	O	O:0.979378
'	O	O:0.997721
set_bottom	O	O:0.590498
'	O	O:0.992231
.	O	O:0.992553
	
You	O	O:0.997619
can	O	O:0.999431
acces	O	O:0.998450
ALL	O	O:0.997088
the	O	O:0.999332
properties	O	O:0.985954
of	O	O:0.999637
a	O	O:0.997173
`	O	O:0.992519
Tick	B-API	O:0.900451
`	O	O:0.999087
object	O	O:0.972481
using	O	O:0.999752
this	O	O:0.892941
approach	O	O:0.824403
:	O	O:0.991210
#CODE	O	O:0.992525
	
Fortunately	O	O:0.996325
you	O	O:0.998714
can	O	O:0.999862
update	O	O:0.999247
figures	O	O:0.998286
you've	O	O:0.996661
moved	O	O:0.995669
to	O	O:0.999411
where	O	O:0.999814
you	O	O:0.999709
want	O	O:0.999957
them	O	O:0.996520
pretty	O	O:0.991699
easily	O	O:0.998854
,	O	O:0.999857
by	O	O:0.996909
using	O	O:0.997954
the	O	O:0.957100
object	O	O:0.914877
interface	O	O:0.991592
specifically	O	O:0.992761
,	O	O:0.999538
and	O	O:0.999609
updating	O	O:0.994880
the	O	O:0.954304
Axes	B-API	O:0.585211
object	O	O:0.993196
without	O	O:0.995820
creating	O	O:0.996114
a	O	O:0.991949
new	O	O:0.820658
figure	O	O:0.918972
.	O	O:0.982127
	
(	O	O:0.992059
You	O	O:0.997661
can	O	O:0.999201
also	O	O:0.999809
always	O	O:0.999915
find	O	O:0.999603
this	O	O:0.999707
data	O	O:0.999304
inside	O	O:0.998814
the	O	O:0.998632
`	O	O:0.986220
Axes	B-API	B-API:0.896323
`	O	O:0.998826
object	O	O:0.992871
if	O	O:0.999363
you	O	O:0.999610
know	O	O:0.997848
where	O	O:0.998778
to	O	O:0.997267
look	O	O:0.999212
.	O	O:0.997935
)	O	O:0.998648
	
By	O	O:0.995268
deferring	O	O:0.995845
the	O	O:0.998922
expense	O	O:0.996629
of	O	O:0.997966
drawing	O	O:0.989506
you	O	O:0.999286
can	O	O:0.999632
greatly	O	O:0.999407
improve	O	O:0.993779
the	O	O:0.999100
performance	O	O:0.998660
of	O	O:0.997712
functions	O	O:0.998833
that	O	O:0.998940
make	O	O:0.997438
many	O	O:0.996352
calls	O	O:0.987404
to	O	O:0.992842
`	O	O:0.995712
Figure	B-API	B-API:0.911264
`	O	O:0.998562
and	O	O:0.989043
`	O	O:0.997604
Axes	B-API	B-API:0.943952
`	O	O:0.997889
methods	O	O:0.854822
.	O	O:0.992605
	
`	O	O:0.990238
Figure.add_subplot()	B-API	B-API:0.988214
`	O	O:0.998950
returns	O	O:0.968302
an	O	O:0.997648
`	O	O:0.991899
Axes	B-API	B-API:0.925931
`	O	O:0.998999
instance	O	O:0.940585
,	O	O:0.998772
and	O	O:0.999074
`	O	O:0.996652
pyplot.subplots()	B-API	B-API:0.996414
`	O	O:0.998969
returns	O	O:0.962282
an	O	O:0.993864
`	O	O:0.994409
Axis	B-API	O:0.835332
`	O	O:0.999071
object	O	O:0.989463
as	O	O:0.999454
second	O	O:0.916062
output	O	O:0.969486
parameter	O	O:0.987995
.	O	O:0.981289
	
As	O	O:0.998262
a	O	O:0.997417
side	O	O:0.967359
note	O	O:0.978331
,	O	O:0.999327
it	O	O:0.992272
is	O	O:0.998826
better	O	O:0.983760
to	O	O:0.999602
pass	O	O:0.990570
`	O	O:0.995120
Axes	B-API	B-API:0.832875
`	O	O:0.999760
objects	O	O:0.982266
into	O	O:0.998912
your	O	O:0.975657
function	O	O:0.998710
than	O	O:0.997620
create	O	O:0.997640
them	O	O:0.981319
(	O	O:0.999447
implicitly	O	O:0.993176
)	O	O:0.998363
internally	O	O:0.925389
.	O	O:0.991096
	
Here	O	O:0.970716
,	O	O:0.999799
what	O	O:0.998536
you	O	O:0.999487
have	O	O:0.999742
done	O	O:0.998576
is	O	O:0.999716
capture	O	O:0.919162
the	O	O:0.998372
`	O	O:0.986585
Axes	B-API	B-API:0.900725
`	O	O:0.999523
instance	O	O:0.991681
that	O	O:0.993578
is	O	O:0.999685
returned	O	O:0.986224
from	O	O:0.992512
`	O	O:0.993653
add_subplot()	B-API	B-API:0.987850
`	O	O:0.998024
.	O	O:0.968793
	
If	O	O:0.996594
I	O	O:0.999612
create	O	O:0.996633
an	O	O:0.992098
`	O	O:0.996506
Axes	B-API	B-API:0.909851
`	O	O:0.998987
object	O	O:0.958003
in	O	O:0.996252
`	O	O:0.997492
matplotlib	O	O:0.599893
`	O	O:0.997886
and	O	O:0.995557
mutate	O	O:0.926847
it	O	O:0.943494
(	O	O:0.998411
i.e.	O	O:0.997838
by	O	O:0.997758
plotting	O	O:0.999104
some	O	O:0.992506
data	O	O:0.994686
)	O	O:0.999562
and	O	O:0.999874
then	O	O:0.998343
I	O	O:0.999654
call	O	O:0.997743
a	O	O:0.970061
function	O	O:0.974268
without	O	O:0.992617
passing	O	O:0.985744
my	O	O:0.948895
`	O	O:0.991807
Axes	B-API	B-API:0.850449
`	O	O:0.998734
object	O	O:0.974203
to	O	O:0.999718
that	O	O:0.999543
function	O	O:0.999809
then	O	O:0.999467
that	O	O:0.999485
function	O	O:0.999528
can	O	O:0.999600
still	O	O:0.999892
mutate	O	O:0.991398
my	O	O:0.992660
`	O	O:0.994212
Axes	B-API	B-API:0.878112
`	O	O:0.998154
.	O	O:0.959192
	
Pass	O	O:0.977102
multiple	O	O:0.991612
matplotlib	O	O:0.932157
Axes	B-API	O:0.868327
objects	O	O:0.989484
from	O	O:0.989180
generator	O	O:0.981218
function	O	O:0.997751
and	O	O:0.999127
display	O	O:0.998391
them	O	O:0.909978
	
The	O	O:0.992082
`	O	O:0.998224
transform	B-API	O:0.578277
`	O	O:0.997018
in	O	O:0.998040
this	O	O:0.998938
case	O	O:0.992029
is	O	O:0.999737
a	O	O:0.989692
`	O	O:0.995796
BboxTransformTo	O	O:0.643205
`	O	O:0.997331
object	O	O:0.979179
,	O	O:0.997916
which	O	O:0.973610
:	O	O:0.992352
	
You	O	O:0.997109
can	O	O:0.997688
use	O	O:0.999598
the	O	O:0.997438
`	O	O:0.994064
transform	B-API	B-API:0.747642
`	O	O:0.991638
keyword	O	O:0.824856
:	O	O:0.996815
#CODE	O	O:0.994424
	
But	O	O:0.999112
when	O	O:0.998583
I	O	O:0.998482
checked	O	O:0.998195
the	O	O:0.987832
source	O	O:0.986420
code	O	O:0.993991
of	O	O:0.998288
draw_networkx_nodes	O	B-API:0.584673
draw_networkx	O	O:0.733457
,	O	O:0.998546
I	O	O:0.996252
realized	O	O:0.993871
that	O	O:0.986854
it	O	O:0.989286
is	O	O:0.999046
not	O	O:0.998412
a	O	O:0.999733
straight	O	O:0.989061
forward	O	O:0.998193
task	O	O:0.992507
as	O	O:0.999132
the	O	O:0.998523
draw	B-API	O:0.577252
function	O	O:0.995255
stores	O	O:0.996873
the	O	O:0.998399
positions	O	O:0.900122
(	O	O:0.998186
nodes	O	O:0.996632
and	O	O:0.999750
edges	O	O:0.997069
)	O	O:0.996126
in	O	O:0.999361
a	O	O:0.997880
numpy	O	O:0.966435
array	O	O:0.989227
,	O	O:0.999554
send	O	O:0.969853
it	O	O:0.998912
to	O	O:0.999633
the	O	O:0.999866
ax.scatter	B-API	O:0.666745
function	O	O:0.998560
of	O	O:0.997328
matplotlib	O	O:0.851100
(	O	O:0.998590
sourcecode	O	O:0.995268
)	O	O:0.998939
which	O	O:0.989600
is	O	O:0.999794
a	O	O:0.997966
bit	O	O:0.983921
hard	O	O:0.985887
to	O	O:0.999561
manipulate	O	O:0.999499
without	O	O:0.994586
messing	O	O:0.997449
something	O	O:0.994159
up	O	O:0.964795
.	O	O:0.993546
	
This	O	O:0.995133
simply	O	O:0.992838
calls	O	O:0.998319
the	O	O:0.991403
draw	B-API	O:0.674772
method	O	O:0.998788
of	O	O:0.999386
the	O	O:0.999154
figure	O	O:0.944227
periodically	O	O:0.964631
.	O	O:0.991474
	
Then	O	O:0.992421
I	O	O:0.999874
just	O	O:0.999475
added	O	O:0.998317
a	O	O:0.997666
signal	O	O:0.967154
to	O	O:0.996673
the	O	O:0.999899
custom	O	O:0.890725
version	O	O:0.984527
and	O	O:0.999019
overrode	O	O:0.974086
the	O	O:0.983921
draw	B-API	O:0.684252
method	O	O:0.992443
.	O	O:0.994576
	
EDIT	O	O:0.835315
:	O	O:0.994004
I'm	O	O:0.998942
super	O	O:0.996563
blind	O	O:0.995388
,	O	O:0.999352
sorry	O	O:0.975107
for	O	O:0.999377
that	O	O:0.993488
,	O	O:0.999357
you're	O	O:0.998605
calling	O	O:0.988462
the	O	O:0.993088
draw	B-API	O:0.620757
method	O	O:0.997779
,	O	O:0.999274
however	O	O:0.998903
it	O	O:0.995858
is	O	O:0.999904
a	O	O:0.999010
good	O	O:0.972041
idea	O	O:0.996667
to	O	O:0.998239
add	O	O:0.995660
*	O	O:0.999351
args	O	O:0.930335
and	O	O:0.998870
**	O	O:0.998779
kwargs	O	O:0.928399
to	O	O:0.998956
any	O	O:0.999842
overriden	O	O:0.990806
methods	O	O:0.996911
..	O	O:0.976930
try	O	O:0.995338
that	O	O:0.994739
,	O	O:0.999777
and	O	O:0.999815
perhaps	O	O:0.997407
call	O	O:0.988073
FancyBboxPatch.draw	O	O:0.903598
at	O	O:0.991395
the	O	O:0.999604
end	O	O:0.992978
of	O	O:0.986086
overriden	O	O:0.947934
method	O	O:0.998268
	
I'm	O	O:0.994811
also	O	O:0.989127
panning	O	O:0.995668
and	O	O:0.997811
zooming	O	O:0.995696
into	O	O:0.961145
this	O	O:0.978997
figure	O	O:0.941753
,	O	O:0.999014
and	O	O:0.999738
have	O	O:0.998883
been	O	O:0.991749
using	O	O:0.999555
the	O	O:0.971198
draw	B-API	O:0.680824
method	O	O:0.998511
to	O	O:0.999546
show	O	O:0.999770
the	O	O:0.999431
new	O	O:0.995296
perspectives	O	O:0.982774
from	O	O:0.996492
zooming	O	O:0.977260
in	O	O:0.984975
(	O	O:0.998965
using	O	O:0.997007
set_xlim	B-API	B-API:0.927388
and	O	O:0.991766
set_ylim	B-API	B-API:0.655913
)	O	O:0.986830
and	O	O:0.998965
from	O	O:0.975136
panning	O	O:0.590657
(	O	O:0.995439
drag_pan	B-API	B-API:0.527122
and	O	O:0.999388
start_pan	B-API	O:0.838164
)	O	O:0.992805
.	O	O:0.977093
	
I	O	O:0.996371
would	O	O:0.998582
use	O	O:0.988078
`	O	O:0.988571
ax.autoscale	B-API	B-API:0.982771
(	O	O:0.999357
enable=False	O	O:0.981333
)`	O	O:0.979487
before	O	O:0.998876
your	O	O:0.995903
call	O	O:0.949981
to	O	O:0.996010
`	O	O:0.999191
scatter	B-API	O:0.685468
`	O	O:0.998079
.	O	O:0.966832
	
You	O	O:0.996623
can	O	O:0.998835
perhaps	O	O:0.999885
loop	O	O:0.999616
into	O	O:0.998498
your	O	O:0.974672
`	O	O:0.993809
AxesSubplot	O	B-API:0.634404
`	O	O:0.998727
objects	O	O:0.906380
and	O	O:0.999702
call	O	O:0.959709
`	O	O:0.993410
autoscale	B-API	B-API:0.837181
`	O	O:0.998063
passing	O	O:0.920762
the	O	O:0.992559
`	O	O:0.993677
axis	O	O:0.726419
`	O	O:0.998070
parameter	O	O:0.944015
:	O	O:0.997022
#CODE	O	O:0.994755
	
@USER	O	O:0.942203
-	O	O:0.997136
If	O	O:0.997746
you'd	O	O:0.999786
like	O	O:0.999370
to	O	O:0.999683
rescale	O	O:0.997873
the	O	O:0.998491
axes	B-API	O:0.984444
,	O	O:0.999637
call	O	O:0.978372
`	O	O:0.996940
ax.autoscale()	B-API	B-API:0.996360
`	O	O:0.999786
every	O	O:0.987689
time	O	O:0.998757
you	O	O:0.997946
remove	O	O:0.990991
a	O	O:0.998611
point	O	O:0.925217
.	O	O:0.994032
	
Python	O	O:0.845138
:	O	O:0.992715
Add	O	O:0.997534
x-y	O	O:0.998663
margins	B-API	O:0.988215
automatically	O	O:0.996052
with	O	O:0.996304
autoscale	B-API	O:0.679312
(	O	O:0.998084
pyplot	B-API	O:0.971712
)	O	O:0.996221
	
Ahh	O	O:0.982728
,	O	O:0.997161
it's	O	O:0.996676
the	O	O:0.999183
call	O	O:0.966580
to	O	O:0.997548
`	O	O:0.999608
autoscale	B-API	O:0.639123
`	O	O:0.999225
that	O	O:0.984327
I'm	O	O:0.999378
missing	O	O:0.955752
.	O	O:0.989065
	
The	O	O:0.994884
trick	O	O:0.991556
is	O	O:0.998755
at	O	O:0.997985
the	O	O:0.999461
end	O	O:0.992700
,	O	O:0.997608
in	O	O:0.998033
the	O	O:0.999116
custom	O	O:0.512191
refresh	B-API	O:0.770345
method	O	O:0.987034
!	O	O:0.983617
	
For	O	O:0.996455
what	O	O:0.989023
you're	O	O:0.998572
wanting	O	O:0.998017
to	O	O:0.999499
do	O	O:0.999782
,	O	O:0.999510
you'd	O	O:0.998542
be	O	O:0.999045
far	O	O:0.998446
better	O	O:0.987043
off	O	O:0.997498
using	O	O:0.995526
annotate	B-API	B-API:0.534420
.	O	O:0.879502
	
It's	O	O:0.993386
quite	O	O:0.994345
simple	O	O:0.993645
to	O	O:0.999385
do	O	O:0.999741
manually	O	O:0.995750
with	O	O:0.994840
`	O	O:0.997973
annotate	B-API	B-API:0.529925
`	O	O:0.996449
.	O	O:0.956620
	
If	O	O:0.988790
you're	O	O:0.997163
wanting	O	O:0.998150
to	O	O:0.999270
adjust	O	O:0.998113
vertical	O	O:0.991591
alignment	O	O:0.991446
,	O	O:0.999265
horizontal	O	O:0.984209
alignment	O	O:0.996043
,	O	O:0.999027
etc	O	O:0.995269
,	O	O:0.999923
just	O	O:0.998749
add	O	O:0.998711
those	O	O:0.999284
as	O	O:0.998910
arguments	O	O:0.973070
to	O	O:0.996496
`	O	O:0.999902
annotate	B-API	B-API:0.702006
`	O	O:0.990515
(	O	O:0.988149
e.g.	O	O:0.994242
`	O	O:0.995320
horizontalalignment=	O	O:0.967352
'	O	O:0.999436
right	O	O:0.994704
'`	O	O:0.996809
or	O	O:0.997704
equivalently	O	O:0.984297
`	O	O:0.997308
ha=	O	O:0.970235
'	O	O:0.999404
right	O	O:0.983987
'`)	O	O:0.992704
	
It's	O	O:0.993386
quite	O	O:0.994345
simple	O	O:0.993645
to	O	O:0.999385
do	O	O:0.999741
manually	O	O:0.995750
with	O	O:0.994840
`	O	O:0.997973
annotate	B-API	B-API:0.529925
`	O	O:0.996449
.	O	O:0.956620
	
You	O	O:0.997132
can	O	O:0.997395
use	O	O:0.999773
the	O	O:0.995963
annotate	B-API	B-API:0.636527
command	O	O:0.994353
to	O	O:0.998449
place	O	O:0.999963
text	O	O:0.997678
annotations	O	O:0.982357
at	O	O:0.997656
any	O	O:0.995246
x	O	O:0.954630
and	O	O:0.999618
y	O	O:0.996076
values	O	O:0.971067
you	O	O:0.998237
want	O	O:0.997300
.	O	O:0.995917
	
+1	O	O:0.965574
Just	O	O:0.997778
as	O	O:0.999763
a	O	O:0.997290
side	O	O:0.967925
note	O	O:0.992542
,	O	O:0.998995
annotate	B-API	O:0.923457
has	O	O:0.986229
"	O	O:0.999168
offseting	O	O:0.981376
the	O	O:0.998779
annotations	O	O:0.989348
a	O	O:0.997178
little	O	O:0.875755
"	O	O:0.996992
built-in	O	O:0.699252
.	O	O:0.969996
	
While	O	O:0.991542
there's	O	O:0.997201
nothing	O	O:0.997839
wrong	O	O:0.996444
with	O	O:0.999247
Ofri's	O	O:0.969065
answer	O	O:0.995614
,	O	O:0.998555
`	O	O:0.998655
annotate	B-API	B-API:0.617184
`	O	O:0.995457
is	O	O:0.993587
intended	O	O:0.994745
especially	O	O:0.967862
for	O	O:0.999439
this	O	O:0.886184
purpose	O	O:0.889741
:	O	O:0.992542
#CODE	O	O:0.983290
	
Just	O	O:0.991691
use	O	O:0.992083
`	O	O:0.994334
annotate	B-API	B-API:0.870124
`	O	O:0.997653
and	O	O:0.995519
specify	O	O:0.995589
axis	O	O:0.972370
coordinates	O	O:0.949387
.	O	O:0.987243
	
It	O	O:0.972587
is	O	O:0.999475
also	O	O:0.995609
possible	O	O:0.998845
to	O	O:0.999435
make	O	O:0.999468
an	O	O:0.999321
arrow	O	O:0.998022
with	O	O:0.999211
text	O	O:0.994760
,	O	O:0.999824
using	O	O:0.999097
the	O	O:0.935462
annotate	B-API	B-API:0.625201
method	O	O:0.979842
.	O	O:0.983454
	
The	O	O:0.994796
closest	O	O:0.989138
thing	O	O:0.998635
I	O	O:0.999242
have	O	O:0.998899
been	O	O:0.991543
able	O	O:0.998401
to	O	O:0.999920
find	O	O:0.999181
while	O	O:0.999672
searching	O	O:0.998026
here	O	O:0.937270
is	O	O:0.999372
the	O	O:0.993471
annotate	B-API	B-API:0.602131
command	O	O:0.953331
,	O	O:0.997148
but	O	O:0.999353
that	O	O:0.993098
appears	O	O:0.999550
to	O	O:0.999719
create	O	O:0.999335
a	O	O:0.999418
fixed	O	O:0.989624
label	O	O:0.997225
on	O	O:0.996901
the	O	O:0.998627
plot	O	O:0.910898
.	O	O:0.993421
	
`	O	O:0.976016
plt.annotate	B-API	B-API:0.958363
(	O	O:0.994769
'	O	O:0.994457
Something	O	O:0.990220
'	O	O:0.996136
,	O	O:0.998072
(	O	O:0.998217
0	O	O:0.994234
,	O	O:0.999243
0	O	O:0.983527
)	O	O:0.997841
,	O	O:0.988762
(	O	O:0.998280
0	O	O:0.989918
,	O	O:0.999076
-20	O	O:0.965843
)	O	O:0.998826
,	O	O:0.995434
xycoords=	O	O:0.985958
'	O	O:0.998106
axes	B-API	O:0.992585
fraction	O	O:0.993930
'	O	O:0.997403
,	O	O:0.999056
textcoords=	O	O:0.980944
'	O	O:0.996499
offset	O	O:0.995640
points	O	O:0.970113
'	O	O:0.998059
,	O	O:0.998535
va=	O	O:0.984781
'	O	O:0.997236
top	O	O:0.975707
')`	O	O:0.992777
	
@USER	O	O:0.887625
I'm	O	O:0.994167
not	O	O:0.998718
sure	O	O:0.998534
why	O	O:0.999327
we	O	O:0.999680
have	O	O:0.999804
to	O	O:0.999789
explicitly	O	O:0.999727
call	O	O:0.942942
`	O	O:0.998222
draw	B-API	B-API:0.907614
`	O	O:0.998061
.	O	O:0.968775
	
The	O	O:0.982554
`	O	O:0.993599
boxplot	B-API	O:0.940247
`	O	O:0.998094
function	O	O:0.998318
only	O	O:0.997751
plots	O	O:0.995631
quartiles	O	O:0.980217
(	O	O:0.997244
0	O	O:0.994213
,	O	O:0.998199
25	O	O:0.974135
,	O	O:0.997974
50	O	O:0.984879
,	O	O:0.998394
75	O	O:0.980758
,	O	O:0.998649
100	O	O:0.969803
)	O	O:0.997287
.	O	O:0.984453
	
Is	O	O:0.994592
there	O	O:0.998601
any	O	O:0.998408
way	O	O:0.995044
I	O	O:0.999453
can	O	O:0.999508
extract	O	O:0.990247
these	O	O:0.999413
values	O	O:0.988173
for	O	O:0.998866
use	O	O:0.990469
in	O	O:0.991110
my	O	O:0.997008
downstream	O	O:0.992311
code	O	O:0.996743
from	O	O:0.998080
the	O	O:0.995589
boxplot	B-API	O:0.977027
object	O	O:0.985170
?	O	O:0.995661
	
I	O	O:0.992070
am	O	O:0.998862
plotting	O	O:0.994378
a	O	O:0.997066
non-normal	O	O:0.895829
distribution	O	O:0.995410
using	O	O:0.987803
boxplot	B-API	O:0.949556
and	O	O:0.997427
interested	O	O:0.977938
in	O	O:0.994429
finding	O	O:0.988703
out	O	O:0.998530
about	O	O:0.998439
outliers	O	O:0.990331
using	O	O:0.983302
boxplot	B-API	O:0.984330
function	O	O:0.989150
of	O	O:0.994581
matplotlib	O	O:0.917828
.	O	O:0.992018
	
You	O	O:0.995496
should	O	O:0.996474
use	O	O:0.998260
the	O	O:0.995252
`	O	O:0.986092
hist	B-API	B-API:0.961318
`	O	O:0.996836
function	O	O:0.982628
.	O	O:0.993490
	
An	O	O:0.992897
similar	O	O:0.997280
example	O	O:0.999028
of	O	O:0.999532
such	O	O:0.997066
plot	O	O:0.970550
is	O	O:0.993696
"	O	O:0.981881
hist	B-API	B-API:0.962260
(	O	O:0.997448
x	O	O:0.977124
,	O	O:0.996940
orientation=	O	O:0.989179
'	O	O:0.997762
horizontal	O	O:0.975699
')"	O	O:0.989348
.	O	O:0.970075
	
I	O	O:0.999189
need	O	O:0.999426
to	O	O:0.995937
use	O	O:0.999826
the	O	O:0.992808
`	O	O:0.992847
hist	B-API	B-API:0.929073
`	O	O:0.998282
function	O	O:0.993766
,	O	O:0.999740
I	O	O:0.999435
have	O	O:0.997160
looked	O	O:0.988640
elsewhere	O	O:0.995929
on	O	O:0.999397
this	O	O:0.983137
site	O	O:0.996791
but	O	O:0.997794
I	O	O:0.997607
haven't	O	O:0.996219
found	O	O:0.964085
anything	O	O:0.991799
.	O	O:0.985612
	
I	O	O:0.994515
tried	O	O:0.997325
doing	O	O:0.937146
hist	B-API	B-API:0.977745
(	O	O:0.991409
x	O	O:0.957523
/	O	O:0.996407
x.sum()	O	O:0.733376
)	O	O:0.998376
but	O	O:0.999212
that	O	O:0.996540
reduce	O	O:0.997825
the	O	O:0.999649
values	O	O:0.977561
of	O	O:0.999589
the	O	O:0.999639
numbers	O	O:0.979707
in	O	O:0.996253
the	O	O:0.998486
x	O	O:0.984386
axis	O	O:0.954744
and	O	O:0.999188
does	O	O:0.997682
not	O	O:0.998237
change	O	O:0.999288
their	O	O:0.993639
frequency	O	O:0.992827
,	O	O:0.997575
so	O	O:0.998598
the	O	O:0.995825
y-axis	O	O:0.978333
is	O	O:0.998149
unchanged	O	O:0.980246
	
How	O	O:0.994138
can	O	O:0.998831
I	O	O:0.999951
prevent	O	O:0.997288
the	O	O:0.997246
labels	O	O:0.984778
of	O	O:0.993124
`	O	O:0.998129
xticks	B-API	O:0.547692
`	O	O:0.999697
from	O	O:0.992505
overlapping	O	O:0.995600
with	O	O:0.998599
the	O	O:0.998938
labels	O	O:0.993882
of	O	O:0.994915
`	O	O:0.998533
yticks	B-API	O:0.504222
`	O	O:0.999873
when	O	O:0.986419
using	O	O:0.999395
`	O	O:0.995572
hist	B-API	B-API:0.994715
`	O	O:0.995943
(	O	O:0.977861
or	O	O:0.999815
other	O	O:0.998505
plotting	O	O:0.995560
commands	O	O:0.989987
)	O	O:0.998171
in	O	O:0.997286
matplotlib	O	O:0.975880
?	O	O:0.993168
	
An	O	O:0.995636
easy	O	O:0.982857
way	O	O:0.998226
to	O	O:0.997957
do	O	O:0.999889
this	O	O:0.993146
is	O	O:0.999179
to	O	O:0.999052
add	O	O:0.995530
`	O	O:0.999065
0j	O	O:0.746385
`	O	O:0.999609
to	O	O:0.997294
the	O	O:0.999981
argument	O	O:0.996596
of	O	O:0.998693
the	O	O:0.998752
`	O	O:0.999122
sqrt	B-API	B-API:0.911952
`	O	O:0.999780
,	O	O:0.998804
like	O	O:0.999662
this	O	O:0.998449
,	O	O:0.999593
`	O	O:0.998342
sqrt	B-API	B-API:0.940900
(	O	O:0.999375
1+0j-	O	O:0.849327
(	O	O:0.995657
1	O	O:0.975993
/	O	O:0.998318
x	O	O:0.973950
)	O	O:0.996826
**2	O	O:0.986228
)`	O	O:0.951692
.	O	O:0.968884
	
You	O	O:0.998684
need	O	O:0.998545
to	O	O:0.999750
set	O	O:0.999678
the	O	O:0.999818
new	O	O:0.996456
coordinates	O	O:0.995505
of	O	O:0.999489
the	O	O:0.999700
datapoints	O	O:0.989281
in	O	O:0.998316
the	O	O:0.999463
internal	O	O:0.963504
`	O	O:0.997721
_ofsets3d	O	B-API:0.687712
`	O	O:0.999883
variable	O	O:0.990986
of	O	O:0.999370
the	O	O:0.995385
`	O	O:0.994875
Line3DCollection	O	B-API:0.926050
`	O	O:0.998864
object	O	O:0.997580
returned	O	O:0.997402
by	O	O:0.994477
the	O	O:0.994243
`	O	O:0.991713
scatter	B-API	O:0.660621
`	O	O:0.995540
function	O	O:0.978092
.	O	O:0.993477
	
You	O	O:0.995725
can	O	O:0.997761
use	O	O:0.999085
`	O	O:0.997973
scatter	B-API	O:0.657165
`	O	O:0.997564
for	O	O:0.996900
this	O	O:0.990038
,	O	O:0.997264
but	O	O:0.998254
that	O	O:0.994053
requires	O	O:0.997623
having	O	O:0.999084
numerical	O	O:0.980936
values	O	O:0.953895
for	O	O:0.999647
your	O	O:0.992495
`	O	O:0.995558
key1	O	O:0.790250
`	O	O:0.998721
,	O	O:0.992278
and	O	O:0.999759
you	O	O:0.998206
won't	O	O:0.999234
have	O	O:0.999871
a	O	O:0.999155
legend	B-API	O:0.995273
,	O	O:0.999608
as	O	O:0.999255
you	O	O:0.982414
noticed	O	O:0.984326
.	O	O:0.995246
	
The	O	O:0.976783
`	O	O:0.996711
scatter	B-API	O:0.673672
`	O	O:0.997657
and	O	O:0.984012
`	O	O:0.999244
hist	B-API	B-API:0.964918
`	O	O:0.998851
commands	O	O:0.972072
really	O	O:0.995542
expect	O	O:0.987687
`	O	O:0.997837
x	O	O:0.723893
`	O	O:0.998565
and	O	O:0.985151
`	O	O:0.999482
y	O	B-API:0.532615
`	O	O:0.999203
to	O	O:0.990020
be	O	O:0.999942
1D	O	O:0.984067
arrays	O	O:0.883901
.	O	O:0.984720
	
I'm	O	O:0.987814
wondering	O	O:0.990503
if	O	O:0.998863
it	O	O:0.996269
is	O	O:0.999518
possible	O	O:0.992800
to	O	O:0.999661
have	O	O:0.999883
individual	O	O:0.998913
alpha	O	O:0.972670
values	O	O:0.986682
for	O	O:0.998618
each	O	O:0.983693
point	O	O:0.994035
to	O	O:0.999704
be	O	O:0.999938
plotted	O	O:0.997217
using	O	O:0.997500
the	O	O:0.992411
scatter	B-API	O:0.773628
function	O	O:0.992917
of	O	O:0.990344
Matplotlib	O	O:0.970430
.	O	O:0.990240
	
The	O	O:0.981514
problem	O	O:0.976134
happens	O	O:0.999219
when	O	O:0.996393
I	O	O:0.998461
call	O	O:0.995199
the	O	O:0.978108
scatter	B-API	B-API:0.688750
function	O	O:0.986739
.	O	O:0.981848
	
I	O	O:0.993320
tried	O	O:0.995741
adding	O	O:0.753886
`	O	O:0.960977
/	O	O:0.945851
Library	O	O:0.982880
/	O	O:0.990545
TeX	O	O:0.900348
/	O	O:0.992590
Root	O	O:0.955037
/	O	O:0.992947
bin	O	O:0.828373
/	O	O:0.998835
universal-darwin	O	O:0.923833
`	O	O:0.998526
to	O	O:0.997349
the	O	O:0.999943
Global	O	O:0.989601
Python	O	O:0.993430
Path	O	O:0.936035
of	O	O:0.999101
the	O	O:0.987626
Project	O	O:0.924073
Properties	O	O:0.976886
,	O	O:0.998133
but	O	O:0.998804
I	O	O:0.999690
still	O	O:0.999520
get	O	O:0.996222
the	O	O:0.999680
same	O	O:0.982227
errors	O	O:0.971458
.	O	O:0.993903
	
My	O	O:0.986703
Python	O	O:0.969663
Path	O	O:0.737071
is	O	O:0.998174
correct	O	O:0.983767
C	O	O:0.939860
:\	O	O:0.995059
Python27_32bit\	O	B-API:0.574414
and	O	O:0.998770
I	O	O:0.999802
also	O	O:0.998427
have	O	O:0.985912
\lib\	O	O:0.979356
site-packages	O	O:0.970912
\	O	O:0.980905
and	O	O:0.998938
\DLL	O	O:0.993150
included	O	O:0.945587
correctly	O	O:0.991299
.	O	O:0.994531
	
Adding	O	O:0.959424
Python	O	O:0.970177
Path	O	O:0.758732
on	O	O:0.997813
Windows	O	O:0.979576
7	O	O:0.974202
	
Append	O	O:0.909139
`	O	O:0.995225
;	O	O:0.991229
C	O	O:0.971010
:\	O	O:0.999159
python27\Scripts	O	O:0.773951
`	O	O:0.998045
to	O	O:0.997986
the	O	O:0.999995
end	O	O:0.994774
of	O	O:0.996660
`	O	O:0.992937
Path	O	B-API:0.676175
`	O	O:0.998976
variable	O	O:0.948977
	
I	O	O:0.994023
use	O	O:0.999267
a	O	O:0.921289
palette	O	O:0.973973
file	O	O:0.994752
that	O	O:0.996623
I'm	O	O:0.999902
able	O	O:0.999174
to	O	O:0.999917
create	O	O:0.998867
using	O	O:0.998663
GIMP	O	O:0.904911
+	O	O:0.979791
Sample	O	O:0.994569
a	O	O:0.983512
Gradient	O	O:0.904943
Along	O	O:0.998232
a	O	O:0.971087
Path	O	B-API:0.748853
.	O	O:0.988900
	
Spine	O	O:0.704346
position	O	O:0.979892
is	O	O:0.998911
specified	O	O:0.995861
by	O	O:0.999482
a	O	O:0.985814
2	O	O:0.937218
tuple	O	O:0.974762
of	O	O:0.983808
(	O	O:0.990891
position	O	O:0.998605
type	O	O:0.894386
,	O	O:0.999222
amount	O	O:0.988365
)	O	O:0.996275
.	O	O:0.991082
	
Annotation	O	O:0.983401
along	O	O:0.994218
a	O	O:0.993069
curve	O	O:0.960811
in	O	O:0.998307
matplotlib	O	O:0.972176
	
Heat	O	O:0.970312
Map	O	O:0.990500
Annotation	O	O:0.981610
with	O	O:0.995262
text	O	O:0.941657
	
Annotation	O	O:0.982345
on	O	O:0.998958
top	O	O:0.994585
of	O	O:0.999576
the	O	O:0.999028
bars	O	O:0.995306
show	O	O:0.985705
the	O	O:0.999653
actual	O	O:0.996352
percentage	O	O:0.993869
of	O	O:0.999468
that	O	O:0.994806
category	O	O:0.978319
.	O	O:0.991131
	
Text	O	B-API:0.716472
File	O	O:0.982533
.	O	O:0.985473
	
I'm	O	O:0.991323
using	O	O:0.996417
Ubuntu	O	O:0.830910
and	O	O:0.989846
Sublime	O	O:0.904845
Text	O	B-API:0.834479
.	O	O:0.972738
	
Check	O	O:0.995104
this	O	O:0.967650
page	O	O:0.987541
:	O	O:0.994832
Text	O	O:0.913011
Rendering	O	O:0.992941
with	O	O:0.985440
LaTeX	O	O:0.969529
.	O	O:0.991775
	
When	O	O:0.995504
using	O	O:0.996118
Matplotlib	O	O:0.666397
(	O	O:0.985774
Pylab	O	O:0.981141
)	O	O:0.996475
for	O	O:0.998637
rendering	O	O:0.978945
Text	O	O:0.732941
with	O	O:0.996593
the	O	O:0.999716
same	O	O:0.997470
metrics	O	O:0.989302
as	O	O:0.998654
AriaL	O	O:0.857000
(	O	O:0.996187
e.g.	O	O:0.984317
,	O	O:0.999521
Arial	O	O:0.996376
itself	O	O:0.981755
or	O	O:0.998595
Liberation	O	O:0.996211
Sans	O	O:0.999047
)	O	O:0.995492
output	O	O:0.961469
looks	O	O:0.992643
ok	O	O:0.986226
-	O	O:0.998295
e.g.	O	O:0.985057
,	O	O:0.999785
the	O	O:0.999634
width	O	O:0.994057
of	O	O:0.998186
the	O	O:0.993982
legend	O	O:0.992202
box	O	O:0.984394
is	O	O:0.997977
right	O	O:0.967524
.	O	O:0.993839
	
Text	O	O:0.511653
box	O	O:0.997363
with	O	O:0.996479
line	O	O:0.996720
wrapping	O	O:0.992397
in	O	O:0.997057
matplotlib	O	O:0.970412
?	O	O:0.994047
	
Python	O	O:0.914285
/	O	O:0.992328
Matplotlib	O	O:0.965076
-	O	O:0.993732
Quickly	O	O:0.980531
Updating	O	O:0.972527
Text	O	O:0.749732
on	O	O:0.987420
Axes	O	O:0.615928
	
Text	O	O:0.847926
display	O	O:0.962706
problem	O	O:0.993380
with	O	O:0.993747
matplotlib	O	O:0.970706
?	O	O:0.995643
	
Network	O	O:0.988220
from	O	O:0.964092
Table	O	O:0.786141
(	O	O:0.991271
Text	O	O:0.632325
/	O	O:0.996580
MS	O	O:0.994391
Excel	O	O:0.958282
)	O	O:0.998134
..	O	O:0.955618
	
Text	O	O:0.746423
alignment	O	O:0.993891
in	O	O:0.999267
a	O	O:0.995551
Matplotlib	O	O:0.886750
legend	O	O:0.986356
	
Underlining	O	O:0.921423
Text	O	O:0.663488
in	O	O:0.997234
Python	O	O:0.960305
/	O	O:0.996157
Matplotlib	O	O:0.958776
	
(	O	O:0.982828
Text	O	O:0.821423
colour	O	O:0.997701
comes	O	O:0.990674
out	O	O:0.998199
as	O	O:0.999282
black	O	O:0.913417
)	O	O:0.994661
#CODE	O	O:0.964616
	
However	O	O:0.994098
,	O	O:0.999827
when	O	O:0.998390
I	O	O:0.999238
paste	O	O:0.999082
this	O	O:0.994205
code	O	O:0.997314
into	O	O:0.986482
my	O	O:0.995302
Wordpress	O	O:0.979472
page	O	O:0.975285
(	O	O:0.998888
using	O	O:0.999444
the	O	O:0.967579
Text	O	B-API:0.733938
editor	O	O:0.974169
,	O	O:0.998317
not	O	O:0.998755
the	O	O:0.999396
visual	O	O:0.882137
editor	O	O:0.990483
)	O	O:0.998037
nothing	O	O:0.949992
happens	O	O:0.981833
.	O	O:0.991233
	
This	O	O:0.981410
generates	O	O:0.996553
the	O	O:0.998558
plot	O	O:0.819842
but	O	O:0.998125
the	O	O:0.999182
Legend	O	O:0.988857
B	O	O:0.953792
is	O	O:0.999041
placed	O	O:0.920635
at	O	O:0.998856
the	O	O:0.998275
upper	O	O:0.982038
right	O	O:0.992955
hand	O	O:0.994970
side	O	O:0.994429
corner	O	O:0.977910
and	O	O:0.999026
Legend	O	O:0.978052
A	O	O:0.983383
is	O	O:0.998925
by	O	O:0.983978
default	O	O:0.995489
placed	O	O:0.917452
at	O	O:0.996541
the	O	O:0.999087
left	O	O:0.984666
hand	O	O:0.986913
upper	O	O:0.978593
corner	O	O:0.978360
.	O	O:0.977564
	
Multiple	O	O:0.971145
Pie	O	O:0.986563
Charts	O	O:0.990225
with	O	O:0.998072
a	O	O:0.995066
Shared	O	O:0.973077
Legend	O	O:0.977268
	
You	O	O:0.995184
can	O	O:0.999288
add	O	O:0.999622
a	O	O:0.998864
legend	O	O:0.990382
to	O	O:0.999590
only	O	O:0.999907
the	O	O:0.999842
first	O	O:0.997483
axes	O	O:0.985930
after	O	O:0.997680
plotting	O	O:0.997628
all	O	O:0.996007
of	O	O:0.999724
your	O	O:0.996040
pie	O	O:0.984490
charts	O	O:0.921256
:	O	O:0.986653
#CODE	O	O:0.995981
	
Matplotlib	O	O:0.827058
:	O	O:0.981231
Legend	O	O:0.993689
not	O	O:0.999435
displayed	O	O:0.994233
properly	O	O:0.993224
	
Legend	O	O:0.986798
colors	O	O:0.865975
in	O	O:0.996647
Matplotlib	O	O:0.998904
table	O	O:0.985980
function	O	O:0.995529
?	O	O:0.993796
	
Legend	O	O:0.975652
transparency	O	O:0.992878
,	O	O:0.999781
when	O	O:0.998601
using	O	O:0.998441
secondary	O	O:0.991568
axis	O	O:0.923083
	
Legend	O	O:0.923065
is	O	O:0.992168
outside	O	O:0.950247
the	O	O:0.996035
frame	O	O:0.994166
.	O	O:0.990062
	
Button	O	B-API:0.678162
1	O	O:0.905340
:	O	O:0.991390
Shows	O	O:0.996149
the	O	O:0.999810
pointscores	O	O:0.906558
of	O	O:0.995254
John	O	O:0.962893
and	O	O:0.999686
Daniel	O	O:0.994782
in	O	O:0.996979
level	O	O:0.989807
1	O	O:0.977863
.	O	O:0.988473
	
How	O	O:0.995082
to	O	O:0.997753
get	O	O:0.999954
multiple	O	O:0.986038
Button	O	O:0.882845
Click	O	O:0.993296
Events	O	O:0.894709
in	O	O:0.993977
Python	O	O:0.963330
	
Button	O	O:0.532658
click	O	O:0.693519
->	O	O:0.999033
ser.write	O	O:0.886473
,	O	O:0.996821
ser.read	O	B-API:0.893529
,	O	O:0.998877
draw	O	O:0.865903
	
Another	O	O:0.984510
solution	O	O:0.952627
is	O	O:0.997890
print	O	O:0.994615
a	O	O:0.993387
'	O	O:0.914287
Cursor	O	O:0.835257
'	O	O:0.996633
or	O	O:0.998600
marker	O	O:0.999038
line	O	O:0.996365
on	O	O:0.999112
the	O	O:0.999291
plot	O	O:0.938550
,	O	O:0.999223
and	O	O:0.999915
change	O	O:0.999063
its	O	O:0.997547
coordinates	O	O:0.992386
with	O	O:0.994894
the	O	O:0.999152
mouse	O	O:0.976608
events	O	O:0.865892
.	O	O:0.988005
	
An	O	O:0.981294
Arrow	O	O:0.844560
would	O	O:0.998367
appear	O	O:0.999590
with	O	O:0.999959
data	O	O:0.998954
about	O	O:0.999636
the	O	O:0.999078
invisible	O	O:0.969874
line	O	O:0.993332
one	O	O:0.997093
,	O	O:0.999069
but	O	O:0.997884
he	O	O:0.984087
wanted	O	O:0.998977
info	O	O:0.992687
about	O	O:0.995334
line	O	O:0.991610
two	O	O:0.980643
.	O	O:0.991598
	
Arrow	O	O:0.680774
on	O	O:0.999445
a	O	O:0.998683
line	O	O:0.993890
plot	O	O:0.988474
with	O	O:0.998666
matplotlib	O	O:0.976696
	
Drawing	O	O:0.938892
Arrow	O	B-API:0.614742
in	O	O:0.936830
(	O	O:0.997344
x	O	O:0.989265
,	O	O:0.999411
y	O	O:0.990890
)	O	O:0.999414
coordinate	O	O:0.984092
in	O	O:0.996882
Python	O	O:0.978379
	
To	O	O:0.994566
be	O	O:0.999200
more	O	O:0.996767
specific	O	O:0.989618
,	O	O:0.999386
if	O	O:0.998694
you	O	O:0.999557
look	O	O:0.996237
at	O	O:0.999888
the	O	O:0.998299
answer	O	O:0.978174
to	O	O:0.998953
that	O	O:0.999656
question	O	O:0.996536
it	O	O:0.998484
shows	O	O:0.997986
how	O	O:0.998529
to	O	O:0.999453
make	O	O:0.999877
a	O	O:0.999226
3D	O	O:0.849924
Arrow	O	O:0.822329
and	O	O:0.997781
use	O	O:0.997774
that	O	O:0.975912
to	O	O:0.999139
annotate	O	O:0.998991
points	O	O:0.955404
in	O	O:0.999496
a	O	O:0.999100
3D	O	O:0.971456
plot	O	O:0.962291
--	O	O:0.999278
I	O	O:0.999160
have	O	O:0.999492
used	O	O:0.989372
this	O	O:0.993211
recipe	O	O:0.994243
extensively	O	O:0.962772
and	O	O:0.999111
it	O	O:0.997941
makes	O	O:0.986394
me	O	O:0.982897
wonder	O	O:0.965954
how	O	O:0.996754
it	O	O:0.997677
isn't	O	O:0.999507
built	O	O:0.996372
into	O	O:0.992912
matplotlib	O	O:0.971537
yet	O	O:0.946889
.	O	O:0.987049
	
Node	O	O:0.993165
positions	O	O:0.992179
are	O	O:0.996861
generated	O	O:0.994167
,	O	O:0.998141
stored	O	O:0.913440
and	O	O:0.999555
assigned	O	O:0.994255
like	O	O:0.992532
this	O	O:0.991517
#CODE	O	O:0.994270
	
Node	O	O:0.950507
and	O	O:0.998879
edge	O	O:0.989604
attribute	O	O:0.996073
files	O	O:0.991401
are	O	O:0.997171
simply	O	O:0.995700
formatted	O	O:0.971324
:	O	O:0.999443
a	O	O:0.998906
node	O	O:0.957873
attribute	O	O:0.999406
file	O	O:0.995911
begins	O	O:0.993761
with	O	O:0.999094
the	O	O:0.999426
name	O	O:0.995187
of	O	O:0.999178
the	O	O:0.998806
attribute	O	O:0.998962
on	O	O:0.998387
the	O	O:0.999419
first	O	O:0.993790
line	O	O:0.857239
(	O	O:0.998680
note	O	O:0.997259
that	O	O:0.996620
it	O	O:0.997681
cannot	O	O:0.999376
contain	O	O:0.996822
spaces	O	O:0.970618
)	O	O:0.997003
.	O	O:0.988765
	
Normalize	O	O:0.772153
the	O	O:0.999397
input	O	O:0.997986
data	O	O:0.991338
and	O	O:0.999633
scale	O	O:0.978915
it	O	O:0.986598
	
Normalize	O	O:0.973454
your	O	O:0.996524
data	O	O:0.983595
.	O	O:0.997508
	
Normalize	O	O:0.555214
again	O	O:0.973853
	
Normalize	O	O:0.974157
your	O	O:0.998319
data	O	O:0.996051
,	O	O:0.999734
apply	O	O:0.959209
the	O	O:0.994315
colormap	O	O:0.983946
,	O	O:0.999552
save	O	O:0.954298
the	O	O:0.997487
image	O	O:0.978146
.	O	O:0.997588
matplotlib	O	O:0.993999
provides	O	O:0.994822
all	O	O:0.998613
the	O	O:0.999637
necessary	O	O:0.982587
functionality	O	O:0.935742
:	O	O:0.993914
#CODE	O	O:0.996664
	
Normalize	O	O:0.663614
histogram2d	B-API	O:0.811895
by	O	O:0.990586
bin	O	O:0.960021
area	O	O:0.967637
	
Python	O	O:0.914287
/	O	O:0.992384
Matplotlib	O	O:0.982687
-	O	O:0.988954
Figure	O	O:0.913527
Borders	O	O:0.968631
in	O	O:0.997340
wxPython	O	O:0.965592
	
gcf()	B-API	B-API:0.864630
means	O	O:0.979352
Get	O	O:0.984772
Current	O	O:0.941683
Figure	O	O:0.561462
	
Figure	O	O:0.580538
title	O	O:0.994011
with	O	O:0.997725
several	O	O:0.996926
colors	O	O:0.930582
in	O	O:0.997976
matplotlib	O	O:0.982249
	
However	O	O:0.992431
,	O	O:0.999411
the	O	O:0.999026
sample	O	O:0.991285
consists	O	O:0.997752
of	O	O:0.999632
distinct	O	O:0.987950
solutions	O	O:0.994711
which	O	O:0.999384
form	O	O:0.999661
lines	O	O:0.988699
in	O	O:0.999417
the	O	O:0.999110
parameter	O	O:0.998439
space	O	O:0.998726
such	O	O:0.999354
that	O	O:0.999577
putting	O	O:0.995755
everything	O	O:0.997558
into	O	O:0.989781
a	O	O:0.994615
matrix	O	O:0.965579
and	O	O:0.999687
using	O	O:0.998660
`	O	O:0.910945
imshow	B-API	B-API:0.990014
`	O	O:0.979284
is	O	O:0.986351
not	O	O:0.998677
desirable	O	O:0.998514
because	O	O:0.997771
of	O	O:0.995225
the	O	O:0.999853
pixelation	O	O:0.971849
artefacts	O	O:0.944937
(	O	O:0.995564
Figure	O	O:0.911360
1	O	O:0.982361
)	O	O:0.997454
.	O	O:0.981155
	
See	O	O:0.964224
Figure	O	O:0.521925
2	O	O:0.960138
.	O	O:0.983283
	
Labeling	O	O:0.936264
Figure	O	O:0.767887
from	O	O:0.989447
String	O	O:0.959988
List	O	O:0.990104
	
I	O	O:0.986780
was	O	O:0.998842
able	O	O:0.987565
to	O	O:0.999502
maximize	O	O:0.992278
Figure	O	O:0.928969
windows	O	O:0.976074
for	O	O:0.996134
TkAgg	O	O:0.591734
,	O	O:0.991891
QT4Agg	O	O:0.831862
,	O	O:0.996806
and	O	O:0.999827
wxAgg	O	O:0.996648
using	O	O:0.995662
the	O	O:0.994026
following	O	O:0.857420
lines	O	O:0.819035
:	O	O:0.991839
#CODE	O	O:0.998178
	
I	O	O:0.998647
want	O	O:0.998169
to	O	O:0.996898
draw	O	O:0.999251
a	O	O:0.998927
quadratic	O	O:0.587967
Figure	O	O:0.702107
.	O	O:0.974898
	
So	O	O:0.994942
I	O	O:0.999659
guess	O	O:0.999057
I	O	O:0.998586
have	O	O:0.998628
to	O	O:0.998185
built	O	O:0.999829
each	O	O:0.981806
button	O	O:0.996817
separately	O	O:0.993019
,	O	O:0.999072
and	O	O:0.998868
don't	O	O:0.998968
know	O	O:0.994401
how	O	O:0.999581
to	O	O:0.996568
"	O	O:0.999985
order	O	O:0.985012
"	O	O:0.999951
them	O	O:0.950599
in	O	O:0.999450
the	O	O:0.999494
buttons_frame	O	O:0.827476
2	O	O:0.993779
)	O	O:0.999259
I	O	O:0.998237
am	O	O:0.998775
working	O	O:0.970633
within	O	O:0.998970
a	O	O:0.995842
for	O	O:0.993847
loop	O	O:0.987927
,	O	O:0.999366
so	O	O:0.998725
I	O	O:0.998935
can't	O	O:0.999170
use	O	O:0.998784
a	O	O:0.991245
"	O	O:0.990921
main	O	O:0.916066
"	O	O:0.997680
specifically	O	O:0.952859
for	O	O:0.999217
this	O	O:0.962114
.	O	O:0.995937
and	O	O:0.999497
3	O	O:0.991125
)	O	O:0.998732
the	O	O:0.991974
Figure	O	O:0.697406
to	O	O:0.998247
plot	O	O:0.970668
is	O	O:0.998740
already	O	O:0.997910
created	O	O:0.985618
before	O	O:0.988029
entering	O	O:0.963202
the	O	O:0.957124
GUI	O	O:0.973856
.	O	O:0.984126
	
But	O	O:0.996223
I	O	O:0.998988
wonder	O	O:0.996284
if	O	O:0.994981
there	O	O:0.978328
is	O	O:0.999645
a	O	O:0.997989
way	O	O:0.988011
to	O	O:0.998553
do	O	O:0.999814
the	O	O:0.999535
same	O	O:0.974750
link	O	O:0.968720
(	O	O:0.999672
when	O	O:0.998644
zooming	O	O:0.994572
on	O	O:0.999082
figure	O	O:0.967966
1	O	O:0.997809
,	O	O:0.999738
I	O	O:0.999328
get	O	O:0.998800
the	O	O:0.999117
same	O	O:0.997265
zoom	O	O:0.954621
on	O	O:0.999597
figure	O	O:0.990113
2	O	O:0.997525
on	O	O:0.998016
one	O	O:0.999431
particular	O	O:0.999288
axis	O	O:0.995514
)	O	O:0.999838
when	O	O:0.998513
defining	O	O:0.988337
2	O	O:0.997369
different	O	O:0.982980
Figures	O	O:0.901047
(	O	O:0.997005
I	O	O:0.999667
want	O	O:0.998877
those	O	O:0.983385
graph	O	O:0.998787
to	O	O:0.998126
appear	O	O:0.999557
far	O	O:0.998872
from	O	O:0.999316
each	O	O:0.994205
other	O	O:0.999045
so	O	O:0.999356
I	O	O:0.998741
guess	O	O:0.999621
that	O	O:0.986825
I	O	O:0.999457
can't	O	O:0.999831
put	O	O:0.998567
them	O	O:0.993235
in	O	O:0.999411
the	O	O:0.999609
same	O	O:0.945804
Figure	O	O:0.906663
...	O	O:0.994797
)	O	O:0.997874
	
I	O	O:0.995246
removed	O	O:0.989947
the	O	O:0.993093
reference	O	O:0.990096
to	O	O:0.996611
Figure	O	O:0.972793
0	O	O:0.973808
and	O	O:0.996888
had	O	O:0.993819
it	O	O:0.997637
generate	O	O:0.995786
a	O	O:0.999388
new	O	O:0.955105
figure	O	O:0.993635
each	O	O:0.980223
time	O	O:0.978684
.	O	O:0.995355
	
Right	O	O:0.988391
now	O	O:0.992552
,	O	O:0.999812
that	O	O:0.998019
it	O	O:0.999634
the	O	O:0.999902
best	O	O:0.985445
I	O	O:0.998778
can	O	O:0.999622
do	O	O:0.998968
,	O	O:0.999789
see	O	O:0.967102
Figure	O	O:0.606557
.	O	O:0.989202
	
Sounds	O	O:0.998573
like	O	O:0.996614
you	O	O:0.999917
just	O	O:0.999749
want	O	O:0.999811
an	O	O:0.999066
image	O	O:0.996893
in	O	O:0.999208
the	O	O:0.996005
Figure	O	O:0.824395
,	O	O:0.998703
right	O	O:0.993604
?	O	O:0.997491
	
You	O	O:0.993957
should	O	O:0.998291
perhaps	O	O:0.998342
try	O	O:0.999732
some	O	O:0.993767
converter	O	O:0.999661
that	O	O:0.998503
can	O	O:0.999329
produce	O	O:0.999850
DXF	O	O:0.997506
from	O	O:0.996548
EPS	O	O:0.989093
,	O	O:0.999096
PDF	O	O:0.974025
,	O	O:0.995360
SVG	O	O:0.984684
...	O	O:0.974626
	
For	O	O:0.993253
example	O	O:0.985444
see	O	O:0.999242
this	O	O:0.998925
converter	O	O:0.994169
in	O	O:0.997527
java	O	O:0.855827
:	O	O:0.995402
	
You	O	O:0.989851
already	O	O:0.998591
have	O	O:0.998984
one	O	O:0.999864
such	O	O:0.999157
converter	O	O:0.997704
in	O	O:0.999502
your	O	O:0.993099
`	O	O:0.996751
np.loadtxt	B-API	B-API:0.988107
`	O	O:0.997921
method	O	O:0.983364
call	O	O:0.944678
.	O	O:0.988534
	
You	O	O:0.993353
can	O	O:0.997189
achieve	O	O:0.999862
this	O	O:0.999513
by	O	O:0.999169
defining	O	O:0.998740
a	O	O:0.988615
converter	O	O:0.986456
that	O	O:0.994465
converts	O	O:0.998748
sting	O	O:0.999410
representations	O	O:0.995963
of	O	O:0.998962
dates	O	O:0.892359
to	O	O:0.996913
`	O	O:0.999812
datenums	O	O:0.839074
`	O	O:0.998795
.	O	O:0.981531
	
Matplotlib	O	O:0.952448
Plot	O	O:0.900530
Lines	O	O:0.976632
Above	O	O:0.982644
Each	O	O:0.984993
Bar	O	O:0.978809
	
Matplotlib.pyplot	B-API	O:0.857425
Bar	O	O:0.958869
Plot	O	O:0.943686
Grouping	O	O:0.955576
Subplots	O	O:0.949931
	
How	O	O:0.997363
to	O	O:0.997894
properly	O	O:0.999958
give	O	O:0.994863
Annotations	O	O:0.994864
to	O	O:0.997705
Pandas	O	O:0.999447
Bar	O	O:0.983868
Charts	O	O:0.975689
?	O	O:0.990558
	
Pandas	O	O:0.976562
,	O	O:0.995738
Bar	O	O:0.969613
Chart	O	O:0.980806
Settings	O	O:0.991801
Customization	O	O:0.989332
	
Two	O	O:0.968550
Bar	O	O:0.986724
Plots-	O	O:0.896594
Non	O	O:0.998715
side	O	O:0.994475
by	O	O:0.994949
side	O	O:0.978902
	
I	O	O:0.998555
have	O	O:0.999608
a	O	O:0.998990
couple	O	O:0.993754
of	O	O:0.999132
problems	O	O:0.989883
with	O	O:0.998625
the	O	O:0.997157
Bar	O	O:0.966659
Chart	O	O:0.997233
that	O	O:0.993209
I'm	O	O:0.999619
trying	O	O:0.999101
to	O	O:0.999692
create	O	O:0.992583
in	O	O:0.998382
python	O	O:0.991455
.	O	O:0.995300
	
I	O	O:0.998542
have	O	O:0.999661
a	O	O:0.997543
simple	O	O:0.940632
graph	O	O:0.998245
with	O	O:0.998750
a	O	O:0.997256
Navigation	O	O:0.960817
Tool	O	O:0.986122
Bar	O	O:0.961566
.	O	O:0.972110
	
Matplotlib	O	O:0.907718
Subplot	O	O:0.987966
Animation	O	O:0.996828
with	O	O:0.989319
Basemap	O	O:0.979107
	
Basic	O	O:0.966749
Animation	O	O:0.993874
with	O	O:0.989417
matplotlib's	O	O:0.983207
pyplot	B-API	O:0.922061
	
How	O	O:0.988452
Can	O	O:0.983272
I	O	O:0.996259
Save	O	O:0.995972
Animation.Artist	O	B-API:0.577217
animation	O	O:0.989356
?	O	O:0.992669
	
Animation	O	O:0.997656
with	O	O:0.994480
contours	O	O:0.979916
matplotlib	O	O:0.987122
	
I	O	O:0.995058
found	O	O:0.996307
the	O	O:0.982740
solution	O	O:0.910100
(	O	O:0.999320
set	O	O:0.991538
2	O	O:0.997787
)	O	O:0.999268
that	O	O:0.996070
uses	O	O:0.989707
the	O	O:0.997539
mpl	O	O:0.881065
Toolkit	O	O:0.990714
and	O	O:0.998565
AA	O	O:0.997816
to	O	O:0.997132
allow	O	O:0.999132
sharing	O	O:0.992790
of	O	O:0.993395
the	O	O:0.991554
X	O	O:0.975278
Axis	O	O:0.991546
and	O	O:0.999370
present	O	O:0.997878
more	O	O:0.982124
than	O	O:0.988856
2	O	O:0.977338
scales	O	O:0.995738
.	O	O:0.998661
by	O	O:0.998836
changing	O	O:0.994780
the	O	O:0.992875
code	O	O:0.985781
to	O	O:0.999350
allow	O	O:0.999443
for	O	O:0.999714
set	O	O:0.915354
2	O	O:0.965006
is	O	O:0.998680
where	O	O:0.988514
I	O	O:0.997863
noticed	O	O:0.992211
problems	O	O:0.891262
.	O	O:0.980115
	
The	O	O:0.997145
side	O	O:0.983177
scales	O	O:0.989171
almost	O	O:0.996366
look	O	O:0.991544
good	O	O:0.876065
(	O	O:0.998325
exception	O	O:0.995402
is	O	O:0.999267
repeats	O	O:0.981808
on	O	O:0.998688
the	O	O:0.999013
right	O	O:0.990206
)	O	O:0.998979
and	O	O:0.998843
I	O	O:0.997910
CANNOT	O	O:0.996997
CHANGE	O	O:0.962027
FONT	O	O:0.994441
size	O	O:0.994747
of	O	O:0.996600
the	O	O:0.998223
X-Axis	O	O:0.990110
labels	O	O:0.938535
and	O	O:0.996189
Y	O	O:0.993696
Axis	O	O:0.983504
labels	O	O:0.923706
.	O	O:0.987870
	
Reverse	O	O:0.914018
Z	O	O:0.969756
Axis	O	O:0.994813
on	O	O:0.996392
matplotlib	O	O:0.990083
3D	O	O:0.979254
Plot	O	O:0.940986
	
You	O	O:0.998126
have	O	O:0.998933
an	O	O:0.999786
example	O	O:0.998203
of	O	O:0.999208
the	O	O:0.996999
broken	O	O:0.996611
axis	O	O:0.984658
in	O	O:0.998299
the	O	O:0.999561
matplotlib	O	O:0.961375
examples	O	O:0.917940
:	O	O:0.992861
Broken	O	O:0.994440
Axis	O	O:0.993049
	
Axis	O	O:0.995116
scale	O	O:0.987416
with	O	O:0.999085
bins	O	O:0.946562
	
Converting	O	O:0.798934
Integer	O	O:0.932004
(	O	O:0.992250
Day	O	O:0.952750
Count	O	O:0.993298
)	O	O:0.995277
X	O	O:0.960170
Axis	O	O:0.997773
to	O	O:0.993331
Months	O	O:0.996025
	
3d	O	O:0.838083
Polygon	O	O:0.994226
Plot	O	O:0.967648
in	O	O:0.998175
matplotlib	O	O:0.978498
baselines	O	O:0.992163
slanted	O	O:0.985774
	
I	O	O:0.993548
am	O	O:0.998973
trying	O	O:0.994583
to	O	O:0.999602
create	O	O:0.996766
my	O	O:0.998332
own	O	O:0.999367
version	O	O:0.997569
of	O	O:0.997330
the	O	O:0.994070
3D	O	O:0.979921
Polygon	O	O:0.998479
plot	O	O:0.986437
as	O	O:0.999784
shown	O	O:0.982896
on	O	O:0.998214
the	O	O:0.997341
Matplotlib	O	O:0.987763
web	O	O:0.935893
site	O	O:0.951374
:	O	O:0.992569
	
I'm	O	O:0.992183
trying	O	O:0.996228
to	O	O:0.999610
make	O	O:0.999877
a	O	O:0.999555
polar	O	O:0.935329
chart	O	O:0.997698
with	O	O:0.990821
matplotlib	O	O:0.966317
and	O	O:0.998926
python	O	O:0.980874
2.7	O	O:0.790091
,	O	O:0.986838
but	O	O:0.989764
I'm	O	O:0.998410
struggling	O	O:0.995051
on	O	O:0.999626
how	O	O:0.998911
to	O	O:0.999504
increase	O	O:0.999652
the	O	O:0.999232
space	O	O:0.964325
between	O	O:0.992162
the	O	O:0.997075
X-Axis	O	O:0.969842
and	O	O:0.998393
the	O	O:0.993658
Tick	O	O:0.951438
Labels	O	O:0.990486
for	O	O:0.998696
that	O	O:0.993583
same	O	O:0.994749
axis	O	O:0.986756
.	O	O:0.991820
	
Tick	O	O:0.993716
labels	O	O:0.976279
on	O	O:0.990635
x-axis	O	O:0.982690
aren't	O	O:0.996403
symmetric	O	O:0.864338
(	O	O:0.998828
Matplotlib	O	O:0.978783
)	O	O:0.994717
	
Tick	O	O:0.993521
label	O	O:0.996233
displayed	O	O:0.992774
when	O	O:0.994450
clicking	O	O:0.991971
on	O	O:0.996582
graph	O	O:0.990465
?	O	O:0.995499
	
Axes	O	O:0.751241
missing	O	O:0.990000
when	O	O:0.996903
plotting	O	O:0.983019
in	O	O:0.999582
matplotlib	O	O:0.993014
using	O	O:0.998968
vispy	O	O:0.948960
as	O	O:0.966085
backend	O	O:0.917953
	
In	O	O:0.988469
theory	O	O:0.978237
,	O	O:0.999836
this	O	O:0.990358
code	O	O:0.989786
doesn't	O	O:0.998349
change	O	O:0.994624
any	O	O:0.998351
coordinates	O	O:0.913678
;	O	O:0.997944
it	O	O:0.999157
just	O	O:0.999401
gets	O	O:0.998176
the	O	O:0.999467
coordinates	O	O:0.990711
of	O	O:0.999419
each	O	O:0.973897
label	O	O:0.994045
,	O	O:0.998128
maps	O	O:0.982965
it	O	O:0.999143
to	O	O:0.998642
Axes	O	O:0.998646
coordinates	O	O:0.996920
using	O	O:0.999100
the	O	O:0.975037
Text	O	B-API:0.586357
object's	O	O:0.988590
internally-stored	O	O:0.937750
transform	O	O:0.940985
,	O	O:0.998304
and	O	O:0.999941
then	O	O:0.999041
sets	O	O:0.998460
the	O	O:0.998844
position	O	O:0.982662
.	O	O:0.981646
	
@USER	O	O:0.981005
I	O	O:0.998494
think	O	O:0.994287
he	O	O:0.961219
wants	O	O:0.997552
to	O	O:0.998046
get	O	O:0.999614
the	O	O:0.999923
tick	O	O:0.996040
positions	O	O:0.994520
in	O	O:0.996444
Axes	O	O:0.931277
coordinates	O	O:0.979665
.	O	O:0.984418
	
Axes	O	O:0.832528
fonts	O	O:0.993342
with	O	O:0.994411
text.usetex	O	O:0.759233
'	O	O:0.999036
true	O	O:0.868054
'	O	O:0.996723
does	O	O:0.997004
not	O	O:0.999245
use	O	O:0.999519
set	O	O:0.951389
font	O	O:0.979791
	
Also	O	O:0.994738
,	O	O:0.999747
when	O	O:0.999235
specifying	O	O:0.997937
where	O	O:0.999235
you	O	O:0.999459
want	O	O:0.999575
the	O	O:0.999290
subplot	O	O:0.996008
to	O	O:0.999243
be	O	O:0.999887
placed	O	O:0.939813
(	O	O:0.997268
the	O	O:0.999641
third	O	O:0.993113
input	O	O:0.998012
to	O	O:0.998677
`	O	O:0.999920
Figure.add_subplot()	B-API	B-API:0.855337
`)	O	O:0.999729
,	O	O:0.998933
you	O	O:0.997089
do	O	O:0.998074
not	O	O:0.999805
want	O	O:0.999211
to	O	O:0.998481
use	O	O:0.999513
`	O	O:0.994852
y+1	O	B-API:0.607572
`	O	O:0.999381
because	O	O:0.996236
that	O	O:0.998962
would	O	O:0.999861
start	O	O:0.999203
at	O	O:0.999171
`	O	O:0.996016
1	O	O:0.715901
`	O	O:0.998340
and	O	O:0.999150
end	O	O:0.998417
at	O	O:0.991157
`	O	O:0.991659
6	O	O:0.783213
`	O	O:0.999384
which	O	O:0.990772
would	O	O:0.999834
go	O	O:0.999773
out	O	O:0.999406
of	O	O:0.999633
the	O	O:0.997225
available	O	O:0.996314
range	O	O:0.998896
of	O	O:0.991462
0-5	O	O:0.916900
.	O	O:0.992203
	
While	O	O:0.991086
it	O	O:0.997499
might	O	O:0.999445
be	O	O:0.999586
possible	O	O:0.998389
to	O	O:0.997690
hack	O	O:0.999243
`	O	O:0.997318
JointGrid	O	B-API:0.641048
`	O	O:0.999803
to	O	O:0.994028
get	O	O:0.999976
this	O	O:0.998967
to	O	O:0.999816
work	O	O:0.999824
,	O	O:0.999806
I	O	O:0.999124
suspect	O	O:0.996003
it	O	O:0.994422
will	O	O:0.997177
very	O	O:0.996523
likely	O	O:0.998224
be	O	O:0.998222
easier	O	O:0.981963
to	O	O:0.999452
just	O	O:0.999553
use	O	O:0.998665
`	O	O:0.983139
kdeplot	O	B-API:0.887238
`	O	O:0.999505
on	O	O:0.995991
one	O	O:0.998437
Axes	O	O:0.937743
,	O	O:0.999584
using	O	O:0.998086
`	O	O:0.976350
twinx	B-API	B-API:0.982132
`	O	O:0.997922
and	O	O:0.979300
`	O	O:0.998766
twiny	B-API	B-API:0.744692
to	O	O:0.999367
place	O	O:0.999228
and	O	O:0.999781
scale	O	O:0.984910
the	O	O:0.998771
marginal	O	O:0.969034
plots	O	O:0.971568
properly	O	O:0.991749
.	O	O:0.997557
	
I	O	O:0.998670
want	O	O:0.999123
to	O	O:0.994980
transform	O	O:0.999368
those	O	O:0.998006
intensity	O	O:0.998512
values	O	O:0.993872
to	O	O:0.998934
pixel	O	O:0.999933
intensity	O	O:0.999487
values	O	O:0.997577
as	O	O:0.998529
in	O	O:0.999261
the	O	O:0.997254
following	O	O:0.954511
image	O	O:0.959788
:	O	O:0.994313
	
The	O	O:0.990064
longer	O	O:0.998609
the	O	O:0.999583
time	O	O:0.990307
period	O	O:0.996342
becomes	O	O:0.995970
,	O	O:0.999801
the	O	O:0.998199
sharper	O	O:0.971096
the	O	O:0.998092
peaks	O	O:0.980836
will	O	O:0.996243
become	O	O:0.982053
(	O	O:0.999648
the	O	O:0.999680
Fourier	O	O:0.992845
transform	O	O:0.955861
of	O	O:0.998893
the	O	O:0.993460
cosines	O	O:0.772994
):	O	O:0.986940
#CODE	O	O:0.995274
	
How	O	O:0.996025
to	O	O:0.998552
transform	O	O:0.999923
your	O	O:0.998909
data	O	O:0.998820
into	O	O:0.998663
this	O	O:0.995525
format	O	O:0.973315
is	O	O:0.999551
a	O	O:0.998298
simple	O	O:0.931698
question	O	O:0.994526
,	O	O:0.999307
maybe	O	O:0.999236
a	O	O:0.998541
bit	O	O:0.931917
googling	O	O:0.986269
and	O	O:0.994213
trial	O	O:0.943036
and	O	O:0.992691
error	O	O:0.935752
.	O	O:0.943664
	
Perhaps	O	O:0.992108
it	O	O:0.993417
is	O	O:0.999766
best	O	O:0.986167
to	O	O:0.999216
transform	O	O:0.995197
to	O	O:0.997113
linear	O	O:0.996664
coordinates	O	O:0.994222
and	O	O:0.998925
calculate	O	O:0.990554
how	O	O:0.999186
to	O	O:0.999257
produce	O	O:0.999796
the	O	O:0.999237
curved	O	O:0.985846
grid	O	O:0.986230
for	O	O:0.999102
the	O	O:0.996869
declination	O	O:0.857892
and	O	O:0.998925
the	O	O:0.999369
radial	O	O:0.977887
lines	O	O:0.961455
for	O	O:0.998375
the	O	O:0.999013
right	O	O:0.969277
ascension	O	O:0.930926
.	O	O:0.994280
	
Since	O	O:0.998266
my	O	O:0.999104
data	O	O:0.990249
is	O	O:0.998903
roughly	O	O:0.995729
spherical	O	O:0.981668
I	O	O:0.994246
triangulate	O	O:0.973176
the	O	O:0.974409
azimuth	O	O:0.767898
and	O	O:0.999427
zenith	O	O:0.980448
angles	O	O:0.946655
from	O	O:0.993118
the	O	O:0.999204
spherical	O	O:0.987520
coordinate	O	O:0.998375
transform	O	O:0.969318
of	O	O:0.999327
my	O	O:0.999083
data	O	O:0.997027
points	O	O:0.985078
.	O	O:0.993042
	
A	O	O:0.993108
workaround	O	O:0.985820
might	O	O:0.997135
be	O	O:0.998595
to	O	O:0.999831
log10	B-API	O:0.999198
transform	O	O:0.988892
the	O	O:0.999340
data	O	O:0.973177
before	O	O:0.995948
plotting	O	O:0.988099
,	O	O:0.996574
but	O	O:0.999068
the	O	O:0.999143
approaches	O	O:0.994617
I	O	O:0.999545
have	O	O:0.998380
tried	O	O:0.958486
,	O	O:0.997596
#CODE	O	O:0.980251
	
Without	O	O:0.992449
having	O	O:0.994721
to	O	O:0.997804
transform	O	O:0.998769
everything	O	O:0.996830
to	O	O:0.999606
string	O	O:0.999940
or	O	O:0.999495
another	O	O:0.999243
kind	O	O:0.998191
of	O	O:0.990354
object	O	O:0.968700
?	O	O:0.996410
	
However	O	O:0.992434
,	O	O:0.999821
the	O	O:0.999241
dates	O	O:0.929680
mysteriously	O	O:0.997604
transform	O	O:0.996556
themselves	O	O:0.974957
to	O	O:0.999231
an	O	O:0.999879
ugly	O	O:0.974237
and	O	O:0.999649
unreadable	O	O:0.996313
format	O	O:0.996925
when	O	O:0.992152
plotting	O	O:0.995598
the	O	O:0.999825
same	O	O:0.998847
data	O	O:0.997369
as	O	O:0.999927
a	O	O:0.998441
bar	O	O:0.961681
plot	O	O:0.903332
.	O	O:0.987269
	
I	O	O:0.998676
want	O	O:0.998377
to	O	O:0.999048
find	O	O:0.999533
out	O	O:0.998625
how	O	O:0.999702
to	O	O:0.999595
transform	O	O:0.999439
magnitude	O	O:0.998996
value	O	O:0.998185
of	O	O:0.999365
accelerometer	O	O:0.977553
to	O	O:0.997768
frequency	O	O:0.998207
domain	O	O:0.958806
.	O	O:0.990636
	
Then	O	O:0.995509
,	O	O:0.999840
you	O	O:0.999882
need	O	O:0.999605
to	O	O:0.999917
set	O	O:0.999933
the	O	O:0.999747
transform	O	O:0.832801
for	O	O:0.998336
the	O	O:0.999381
new	O	O:0.987289
lines	O	O:0.985898
on	O	O:0.992697
`	O	O:0.999424
a_all	O	B-API:0.768568
`	O	O:0.999815
to	O	O:0.999642
move	O	O:0.999972
them	O	O:0.995395
to	O	O:0.999414
the	O	O:0.999960
new	O	O:0.979350
axis	O	O:0.976685
.	O	O:0.992019
	
What	O	O:0.996359
about	O	O:0.997258
applying	O	O:0.995091
a	O	O:0.973599
rectangular	O	O:0.521578
(	O	O:0.996239
ok	O	O:0.986588
,	O	O:0.998921
in	O	O:0.999729
three	O	O:0.995026
dimensions	O	O:0.984614
,	O	O:0.999559
cubic	O	O:0.969651
)	O	O:0.987223
window	O	O:0.982772
to	O	O:0.999902
your	O	O:0.999897
field	O	O:0.986745
before	O	O:0.998614
fourier	O	O:0.972654
transform	O	O:0.824746
?	O	O:0.978577
	
The	O	O:0.963390
canvas	O	O:0.987878
seems	O	O:0.998380
to	O	O:0.999081
get	O	O:0.999439
locked	O	O:0.992808
and	O	O:0.999327
after	O	O:0.999176
the	O	O:0.997398
call	O	O:0.915652
of	O	O:0.998424
the	O	O:0.996421
pick	O	O:0.978458
event	O	O:0.996528
I	O	O:0.997645
can	O	O:0.999776
not	O	O:0.998777
use	O	O:0.999072
the	O	O:0.998865
other	O	O:0.992784
functionalities	O	O:0.993992
as	O	O:0.998185
well	O	O:0.984846
.	O	O:0.996561
	
When	O	O:0.988066
it	O	O:0.994340
is	O	O:0.998446
triggered	O	O:0.973458
it	O	O:0.998323
seems	O	O:0.998628
that	O	O:0.998283
the	O	O:0.993960
canvas	O	O:0.995734
gets	O	O:0.958859
locked	O	O:0.983099
and	O	O:0.999492
I	O	O:0.996215
can	O	O:0.998372
not	O	O:0.998037
use	O	O:0.998798
any	O	O:0.998150
other	O	O:0.984653
functionality	O	O:0.969567
.	O	O:0.970578
	
I	O	O:0.993535
am	O	O:0.998767
trying	O	O:0.987767
to	O	O:0.999606
draw	O	O:0.998043
an	O	O:0.999302
arrow	O	O:0.997975
on	O	O:0.998248
the	O	O:0.995192
scatterplot	O	O:0.989536
.	O	O:0.987417
	
Are	O	O:0.986825
these	O	O:0.998973
parametric	O	O:0.970642
orbits	O	O:0.956124
,	O	O:0.999211
so	O	O:0.999826
that	O	O:0.998380
you	O	O:0.999778
could	O	O:0.999878
draw	O	O:0.998631
vertical	O	O:0.998891
lines	O	O:0.984826
for	O	O:0.998894
each	O	O:0.967197
time	O	O:0.948598
(	O	O:0.999142
or	O	O:0.999679
whatever	O	O:0.998949
)	O	O:0.999619
_t_	O	O:0.726153
?	O	O:0.993840
	
I've	O	O:0.957990
follow	O	O:0.992720
this	O	O:0.950424
subject	O	O:0.983075
:	O	O:0.997346
How	O	O:0.998693
to	O	O:0.999793
draw	O	O:0.998120
planes	O	O:0.993326
from	O	O:0.999807
a	O	O:0.999899
set	O	O:0.967402
of	O	O:0.999664
linear	O	O:0.937491
equations	O	O:0.976324
in	O	O:0.993526
Python	O	O:0.986844
?	O	O:0.995439
	
I	O	O:0.994753
am	O	O:0.999750
able	O	O:0.991459
to	O	O:0.999853
draw	O	O:0.998485
with	O	O:0.999664
all	O	O:0.999766
variables	O	O:0.991236
at	O	O:0.995606
x-axis	O	O:0.996073
if	O	O:0.997183
convert	O	O:0.943627
it	O	O:0.997212
to	O	O:0.998793
bar	O	O:0.998408
graph	O	O:0.990238
.	O	O:0.987287
	
But	O	O:0.989941
in	O	O:0.998552
my	O	O:0.998335
particular	O	O:0.999313
case	O	O:0.999004
I	O	O:0.999742
have	O	O:0.998681
to	O	O:0.999152
draw	O	O:0.997099
Line2D	B-API	O:0.978029
instances	O	O:0.996523
using	O	O:0.996091
Points	O	O:0.995012
coordinates	O	O:0.967060
on	O	O:0.998699
top	O	O:0.994909
of	O	O:0.998270
the	O	O:0.998751
regular	O	O:0.993303
plots	O	O:0.989288
that	O	O:0.991111
are	O	O:0.999839
all	O	O:0.999390
using	O	O:0.997494
Data	O	O:0.955717
coordinates	O	O:0.826993
.	O	O:0.969292
	
I'm	O	O:0.997907
using	O	O:0.994839
imshow()	B-API	B-API:0.856932
to	O	O:0.994754
draw	O	O:0.998262
a	O	O:0.997487
2D	O	O:0.967379
numpy	O	O:0.994092
array	O	O:0.988547
,	O	O:0.999349
so	O	O:0.998144
for	O	O:0.992040
example	O	O:0.847144
:	O	O:0.991379
#CODE	O	O:0.995556
	
I	O	O:0.998749
need	O	O:0.998548
to	O	O:0.998524
draw	O	O:0.999069
all	O	O:0.997601
function	O	O:0.998081
in	O	O:0.999157
the	O	O:0.999332
same	O	O:0.811328
window	O	O:0.989883
	
I	O	O:0.998647
want	O	O:0.998169
to	O	O:0.996899
draw	O	O:0.999537
a	O	O:0.998883
small	O	O:0.962575
red	O	O:0.983229
box	O	O:0.994177
around	O	O:0.996150
one	O	O:0.998545
of	O	O:0.999522
the	O	O:0.998067
ticklabels	O	O:0.994763
,	O	O:0.999223
as	O	O:0.998446
so	O	O:0.966906
:	O	O:0.994219
	
I	O	O:0.994674
draw	O	O:0.976865
4D	O	O:0.965079
plot	O	O:0.878032
.	O	O:0.988105
	
I'd	O	O:0.998777
like	O	O:0.997817
to	O	O:0.999724
draw	O	O:0.991523
/	O	O:0.999141
plot	O	O:0.981696
an	O	O:0.999066
horizontal	O	O:0.995026
line	O	O:0.989131
on	O	O:0.999463
top	O	O:0.996941
of	O	O:0.998722
the	O	O:0.992435
heatmap	O	O:0.999625
like	O	O:0.988103
in	O	O:0.999927
this	O	O:0.994618
figure	O	O:0.976272
	
How	O	O:0.994262
do	O	O:0.992544
I	O	O:0.999292
draw	O	O:0.985451
edge	O	O:0.983469
labels	O	O:0.983418
for	O	O:0.998896
MultiGraph	O	O:0.977396
in	O	O:0.990174
NetworkX	O	O:0.975471
?	O	O:0.991710
	
How	O	O:0.990453
to	O	O:0.998914
draw	O	O:0.999597
a	O	O:0.999093
contour	O	O:0.992397
plot	O	O:0.986937
using	O	O:0.996646
Python	O	O:0.921338
?	O	O:0.972550
	
I	O	O:0.995079
tried	O	O:0.993558
to	O	O:0.995171
draw	O	O:0.998767
a	O	O:0.998922
contour	O	O:0.989400
plot	O	O:0.982937
using	O	O:0.996105
Python	O	O:0.877919
.	O	O:0.949957
	
The	O	O:0.994572
second	O	O:0.954577
option	O	O:0.986843
is	O	O:0.999435
a	O	O:0.996223
touch	O	O:0.985122
more	O	O:0.986098
verbose	O	O:0.955366
,	O	O:0.997375
but	O	O:0.994798
has	O	O:0.998098
the	O	O:0.999258
advantage	O	O:0.997066
that	O	O:0.994363
the	O	O:0.999665
y-axis	O	O:0.998206
limits	O	O:0.986309
on	O	O:0.999446
the	O	O:0.999628
second	O	O:0.994314
plot	O	O:0.988829
will	O	O:0.999079
autoscale	O	O:0.997604
as	O	O:0.997938
you'd	O	O:0.978998
expect	O	O:0.991380
.	O	O:0.995006
	
I	O	O:0.995531
included	O	O:0.996517
the	O	O:0.997690
code	O	O:0.993814
to	O	O:0.998803
autoscale	O	O:0.999046
the	O	O:0.994976
viewport	O	O:0.963050
,	O	O:0.997059
but	O	O:0.995195
that's	O	O:0.995000
not	O	O:0.999228
strictly	O	O:0.996824
necessary	O	O:0.992607
.	O	O:0.985984
	
possible	O	O:0.991088
duplicate	O	O:0.998114
of	O	O:0.984497
[	O	O:0.993257
How	O	O:0.999445
to	O	O:0.996997
autoscale	O	O:0.998402
y	O	O:0.994109
axis	O	O:0.985262
in	O	O:0.998700
matplotlib	O	O:0.989940
?	O	O:0.995058
]	O	O:0.948595
(	O	O:0.994410
#URL	O	O:0.985962
)	O	O:0.996092
	
if	O	O:0.994005
the	O	O:0.997833
image	O	O:0.923398
is	O	O:0.999126
a	O	O:0.997161
NxM	O	O:0.986935
array	O	O:0.995367
of	O	O:0.996009
any	O	O:0.991827
type	O	O:0.938362
,	O	O:0.998900
it	O	O:0.996317
is	O	O:0.999655
interpreted	O	O:0.988041
through	O	O:0.992851
the	O	O:0.988097
colormap	O	O:0.934723
(	O	O:0.997632
autoscale	O	O:0.978340
,	O	O:0.997862
if	O	O:0.998250
not	O	O:0.999350
indicated	O	O:0.998697
otherwise	O	O:0.997188
)	O	O:0.999115
.	O	O:0.988118
	
Now	O	O:0.995923
I	O	O:0.999302
changed	O	O:0.993996
my	O	O:0.983193
mind	O	O:0.968061
and	O	O:0.999600
decide	O	O:0.997812
to	O	O:0.995655
autoscale	O	O:0.998776
the	O	O:0.997776
data	O	O:0.911922
(	O	O:0.998565
and	O	O:0.999873
the	O	O:0.999812
view	O	B-API:0.657232
)	O	O:0.999501
,	O	O:0.994489
expecting	O	O:0.999389
these	O	O:0.990533
limits	O	O:0.904381
:	O	O:0.993400
	
I	O	O:0.995713
would	O	O:0.999782
like	O	O:0.997976
to	O	O:0.999913
be	O	O:0.999970
able	O	O:0.999284
to	O	O:0.999176
autoscale	O	O:0.999757
a	O	O:0.997234
matplotlib	O	O:0.945915
figure	O	O:0.988999
to	O	O:0.999228
make	O	O:0.999249
arbitrarily	O	O:0.992172
placed	O	O:0.997491
text	O	O:0.989676
annotations	O	O:0.951686
visible	O	O:0.942233
.	O	O:0.992912
	
I	O	O:0.999167
have	O	O:0.999206
to	O	O:0.993380
refresh	O	O:0.998827
the	O	O:0.998903
page	O	O:0.997079
to	O	O:0.999369
get	O	O:0.999964
the	O	O:0.999816
tooltips	O	O:0.992520
back	O	O:0.962510
.	O	O:0.997693
	
will	O	O:0.975329
refresh	O	O:0.998334
your	O	O:0.998287
system's	O	O:0.993996
reference	O	O:0.997351
to	O	O:0.999009
the	O	O:0.999755
bash_profile	O	O:0.914947
and	O	O:0.999094
you	O	O:0.999252
should	O	O:0.999028
be	O	O:0.999832
good	O	O:0.997101
to	O	O:0.998691
go	O	O:0.999254
in	O	O:0.998909
importing	O	O:0.994133
and	O	O:0.999628
using	O	O:0.997787
matplotlib	O	O:0.668860
	
Id	O	O:0.991736
like	O	O:0.995829
the	O	O:0.999736
user	O	O:0.972749
to	O	O:0.998850
be	O	O:0.999962
able	O	O:0.999125
to	O	O:0.998770
update	O	O:0.999174
an	O	O:0.998444
existing	O	O:0.968507
and	O	O:0.999034
open	O	O:0.965160
axis	O	O:0.992185
i.e.	O	O:0.996751
to	O	O:0.995302
refresh	O	O:0.997335
the	O	O:0.997530
axis	O	O:0.955727
.	O	O:0.993697
	
Placing	O	O:0.921890
Custom	O	O:0.983649
Images	O	O:0.973982
in	O	O:0.998909
a	O	O:0.993231
Plot	O	O:0.920035
Window	O	O:0.968196
--	O	O:0.997157
as	O	O:0.999129
custom	O	O:0.996674
data	O	O:0.997503
markers	O	O:0.973842
or	O	O:0.999576
to	O	O:0.999336
annotate	O	O:0.999721
those	O	O:0.992975
markers	O	O:0.917013
	
How	O	O:0.993754
to	O	O:0.997439
annotate	O	O:0.998004
/	O	O:0.996100
highlight	O	O:0.976848
a	O	O:0.999077
3d	O	O:0.976444
plot	O	O:0.912679
in	O	O:0.997760
MatPlotLib	O	O:0.978052
	
Well	O	O:0.983297
,	O	O:0.997734
it	O	O:0.997137
takes	O	O:0.997564
a	O	O:0.999220
loop	O	O:0.989559
to	O	O:0.998990
annotate	O	O:0.999645
all	O	O:0.999417
data	O	O:0.996692
points	O	O:0.997866
,	O	O:0.999715
I	O	O:0.998705
thought	O	O:0.994485
that	O	O:0.990453
there	O	O:0.997637
should	O	O:0.999328
be	O	O:0.999895
a	O	O:0.997838
function	O	O:0.985010
that	O	O:0.995769
does	O	O:0.999109
just	O	O:0.999261
that	O	O:0.999098
.	O	O:0.995288
	
You	O	O:0.995069
can	O	O:0.998543
annotate	O	O:0.999462
a	O	O:0.999332
specific	O	O:0.991814
point	O	O:0.994596
in	O	O:0.998628
the	O	O:0.999083
image	O	O:0.995580
using	O	O:0.994366
`	O	O:0.978075
plt.text	B-API	B-API:0.991862
(	O	O:0.998270
x	O	O:0.952059
,	O	O:0.998745
y	O	O:0.969210
,	O	O:0.998391
str	O	O:0.968860
)`	O	O:0.967339
.	O	O:0.982002
	
To	O	O:0.987796
state	O	O:0.996784
it	O	O:0.997271
in	O	O:0.999784
a	O	O:0.998881
general	O	O:0.968459
form	O	O:0.994040
,	O	O:0.997028
I'm	O	O:0.999231
looking	O	O:0.995113
for	O	O:0.999889
a	O	O:0.997205
way	O	O:0.977742
to	O	O:0.998864
join	O	O:0.997287
several	O	O:0.996065
points	O	O:0.990152
with	O	O:0.999670
a	O	O:0.998995
gradient	O	O:0.988689
color	O	O:0.998640
line	O	O:0.993456
using	O	O:0.997789
matplotlib	O	O:0.921559
,	O	O:0.970784
and	O	O:0.987894
I'm	O	O:0.991063
not	O	O:0.988523
finding	O	O:0.997041
it	O	O:0.994631
anywhere	O	O:0.992244
.	O	O:0.996247
	
Now	O	O:0.997117
instead	O	O:0.999587
of	O	O:0.999695
straight	O	O:0.991242
arrows	O	O:0.978930
,	O	O:0.998816
I	O	O:0.999820
want	O	O:0.999000
to	O	O:0.999194
join	O	O:0.999176
points	O	O:0.991181
by	O	O:0.997026
curve	O	O:0.995688
arrows	O	O:0.812137
.	O	O:0.986846
	
If	O	O:0.997060
you	O	O:0.999570
like	O	O:0.999610
,	O	O:0.999957
join	O	O:0.985271
circos's	O	O:0.983300
google	O	O:0.985731
group	O	O:0.987207
to	O	O:0.993498
discuss	O	O:0.970422
:	O	O:0.992794
#URL	O	O:0.991581
	
Then	O	O:0.998439
join	O	O:0.983904
me	O	O:0.988925
in	O	O:0.998235
upvoting	O	O:0.995609
that	O	O:0.990506
answer	O	O:0.987650
and	O	O:0.999902
that	O	O:0.994484
comment	O	O:0.968517
:-)	O	O:0.987295
	
Because	O	O:0.997366
there	O	O:0.998564
have	O	O:0.997724
been	O	O:0.997590
closest	O	O:0.994498
points	O	O:0.975892
but	O	O:0.999638
when	O	O:0.998891
we	O	O:0.999819
join	O	O:0.999384
them	O	O:0.993787
they	O	O:0.998414
lead	O	O:0.992497
to	O	O:0.999681
an	O	O:0.999939
intersections	O	O:0.995507
or	O	O:0.999407
points	O	O:0.991530
which	O	O:0.994272
are	O	O:0.998085
not	O	O:0.999339
so	O	O:0.998516
close	O	O:0.962361
but	O	O:0.998511
should	O	O:0.998773
be	O	O:0.999851
joined	O	O:0.996328
together	O	O:0.912390
	
@USER	O	O:0.948000
Because	O	O:0.999085
Python	O	O:0.997878
automatically	O	O:0.997040
join	O	O:0.932854
two	O	O:0.998507
adjacent	O	O:0.988198
strings	O	O:0.992235
into	O	O:0.983043
one	O	O:0.996346
string	O	O:0.971832
.	O	O:0.988717
	
This	O	O:0.984670
produces	O	O:0.998957
a	O	O:0.998957
figure	O	O:0.974877
like	O	O:0.998342
the	O	O:0.999819
first	O	O:0.992296
figure	O	O:0.963839
at	O	O:0.998377
How	O	O:0.998546
to	O	O:0.999080
join	O	O:0.998941
overlapping	O	O:0.965575
circles	O	O:0.940374
?	O	O:0.991970
	
Matplotlib	O	O:0.897910
has	O	O:0.997168
lots	O	O:0.990725
of	O	O:0.999440
pre-defined	O	O:0.981510
colormaps	O	O:0.993465
for	O	O:0.998918
you	O	O:0.998432
to	O	O:0.997245
use	O	O:0.999104
.	O	O:0.975103
	
Here	O	O:0.982635
are	O	O:0.999503
all	O	O:0.999411
of	O	O:0.998373
the	O	O:0.999654
predefined	O	O:0.971430
colormaps	O	O:0.969720
.	O	O:0.985213
	
For	O	O:0.993593
me	O	O:0.988046
the	O	O:0.999095
simplest	O	O:0.975404
way	O	O:0.977683
is	O	O:0.999754
plotting	O	O:0.993070
directly	O	O:0.994772
the	O	O:0.998346
masks	O	O:0.979706
with	O	O:0.987994
imshow	B-API	O:0.828254
,	O	O:0.999533
passing	O	O:0.996825
different	O	O:0.986307
colormaps	O	O:0.960108
.	O	O:0.990248
	
There	O	O:0.971228
is	O	O:0.999087
a	O	O:0.998935
list	O	O:0.980105
of	O	O:0.999282
colormaps	O	O:0.992145
to	O	O:0.999283
choose	O	O:0.999810
from	O	O:0.996623
here	O	O:0.967905
.	O	O:0.997531
	
There	O	O:0.970773
is	O	O:0.999348
also	O	O:0.998532
a	O	O:0.999710
way	O	O:0.976481
to	O	O:0.996589
define	O	O:0.999621
custom	O	O:0.962766
colormaps	O	O:0.959859
.	O	O:0.982842
	
The	O	O:0.997222
list	O	O:0.979085
of	O	O:0.999659
available	O	O:0.995321
colormaps	O	O:0.999195
by	O	O:0.986995
default	O	O:0.935756
is	O	O:0.984758
here	O	O:0.702093
.	O	O:0.992053
	
You	O	O:0.995915
can	O	O:0.999129
add	O	O:0.999765
your	O	O:0.999383
own	O	O:0.997818
colormaps	O	O:0.995154
to	O	O:0.994833
`	O	O:0.999955
_cm.py	O	O:0.542866
`	O	O:0.999404
in	O	O:0.999470
your	O	O:0.997585
mpl	O	O:0.980849
directory	O	O:0.997157
and	O	O:0.999849
then	O	O:0.998935
change	O	O:0.998985
your	O	O:0.987317
rc	O	O:0.709384
file	O	O:0.989970
.	O	O:0.988892
	
How	O	O:0.991337
can	O	O:0.997377
I	O	O:0.999965
tell	O	O:0.997481
append_axes	O	O:0.962679
that	O	O:0.996223
I	O	O:0.999917
want	O	O:0.999790
to	O	O:0.995739
append	O	O:0.998193
the	O	O:0.998791
y	O	O:0.985612
subplot	O	O:0.996404
to	O	O:0.999488
the	O	O:0.999987
right	O	O:0.997589
of	O	O:0.999648
the	O	O:0.996960
"	O	O:0.999474
main	O	O:0.990941
axes	O	O:0.985066
"	O	O:0.998030
containing	O	O:0.984367
the	O	O:0.998524
scatter	O	O:0.974637
plot	O	O:0.904476
?	O	O:0.996026
	
I	O	O:0.986376
got	O	O:0.998604
a	O	O:0.971002
boxplot	O	O:0.970770
graph	O	O:0.998318
like	O	O:0.996262
this	O	O:0.989436
:	O	O:0.996855
	
add	O	O:0.918086
boxplot	O	O:0.995757
to	O	O:0.998429
other	O	O:0.999760
graph	O	O:0.993473
in	O	O:0.996368
python	O	O:0.989574
	
but	O	O:0.997064
when	O	O:0.991834
I	O	O:0.999344
do	O	O:0.999658
it	O	O:0.995245
on	O	O:0.998676
the	O	O:0.991755
'	O	O:0.997163
link	O	O:0.983570
'	O	O:0.999007
series	O	O:0.999824
I	O	O:0.999360
can	O	O:0.999807
draw	O	O:0.985196
the	O	O:0.999553
boxplot	O	O:0.989406
correctly	O	O:0.993798
.	O	O:0.997465
	
and	O	O:0.996577
I	O	O:0.998383
am	O	O:0.999488
able	O	O:0.990159
to	O	O:0.999643
draw	O	O:0.997500
the	O	O:0.994746
boxplot	O	O:0.990093
.	O	O:0.990465
	
Or	O	O:0.991193
,	O	O:0.999667
more	O	O:0.990678
generally	O	O:0.995031
,	O	O:0.999452
modify	O	O:0.946243
/	O	O:0.998146
transform	O	O:0.957291
to	O	O:0.998164
you	O	O:0.999763
heart's	O	O:0.996052
content	O	O:0.995199
,	O	O:0.998988
and	O	O:0.999860
then	O	O:0.983940
boxplot	O	O:0.996789
.	O	O:0.994455
	
If	O	O:0.996664
the	O	O:0.998293
ticklabels	O	O:0.961124
are	O	O:0.996528
already	O	O:0.999546
set	O	O:0.987700
to	O	O:0.999763
a	O	O:0.999850
string	O	O:0.991932
as	O	O:0.998740
in	O	O:0.997541
e.g.	O	O:0.998634
a	O	O:0.994786
boxplot	O	O:0.971209
,	O	O:0.999749
this	O	O:0.984002
is	O	O:0.999324
still	O	O:0.991432
working	O	O:0.984366
.	O	O:0.989892
	
How	O	O:0.994277
do	O	O:0.995372
I	O	O:0.999283
add	O	O:0.974039
inset	O	O:0.978994
axes	O	O:0.961846
and	O	O:0.999782
zoom	O	O:0.974854
in	O	O:0.997797
on	O	O:0.999203
the	O	O:0.999651
first	O	O:0.996632
boxplot	O	O:0.998380
of	O	O:0.998333
the	O	O:0.997874
two	O	O:0.995679
?	O	O:0.992102
	
I'm	O	O:0.993203
not	O	O:0.998268
setting	O	O:0.997825
the	O	O:0.997788
position	O	O:0.995596
of	O	O:0.998734
each	O	O:0.955403
boxplot	O	O:0.998712
,	O	O:0.999677
so	O	O:0.998732
I	O	O:0.997605
don't	O	O:0.999834
know	O	O:0.994680
where	O	O:0.999674
they	O	O:0.997495
will	O	O:0.999528
appear	O	O:0.997453
exactly	O	O:0.998128
.	O	O:0.994963
	
I	O	O:0.995750
wanted	O	O:0.998770
to	O	O:0.995620
add	O	O:0.999742
a	O	O:0.996667
box	O	O:0.989591
for	O	O:0.999679
each	O	O:0.929620
boxplot	O	O:0.997019
with	O	O:0.999163
a	O	O:0.998467
zoomed-in	O	O:0.993611
view	O	O:0.884055
on	O	O:0.999857
a	O	O:0.994839
specific	O	O:0.976881
y-axis	O	O:0.990189
range	O	O:0.992825
.	O	O:0.991154
	
UserWarning	O	O:0.845477
:	O	O:0.997482
2D	O	O:0.992804
hist	O	O:0.854040
input	O	O:0.996782
should	O	O:0.999270
be	O	O:0.998412
nsamples	O	O:0.995801
x	O	O:0.988598
nvariables	O	O:0.931079
;	O	O:0.995128
	
I'm	O	O:0.995543
doing	O	O:0.999480
a	O	O:0.995347
hist	O	B-API:0.852803
plot	O	O:0.960924
and	O	O:0.999443
I	O	O:0.999783
want	O	O:0.999521
some	O	O:0.976119
numbers	O	O:0.994552
shown	O	O:0.977410
in	O	O:0.999448
the	O	O:0.999074
plot	O	O:0.951352
,	O	O:0.999756
so	O	O:0.999585
I	O	O:0.999793
put	O	O:0.992098
in	O	O:0.998954
a	O	O:0.998969
text	O	O:0.910690
box	O	O:0.999421
using	O	O:0.998566
mathtext	B-API	O:0.931955
for	O	O:0.987261
the	O	O:0.994798
text	O	O:0.699440
,	O	O:0.998307
but	O	O:0.995112
I	O	O:0.996572
doesn't	O	O:0.999422
work	O	O:0.981645
and	O	O:0.999864
I	O	O:0.998800
can't	O	O:0.990376
see	O	O:0.981207
why	O	O:0.995710
.	O	O:0.990802
	
This	O	O:0.996583
lead	O	O:0.979367
to	O	O:0.999226
my	O	O:0.998855
colorbar	O	O:0.997283
having	O	O:0.996955
sqrt	O	O:0.862084
ticks	O	O:0.980946
and	O	O:0.998948
I	O	O:0.999820
want	O	O:0.997625
to	O	O:0.995546
translate	O	O:0.999995
them	O	O:0.999423
back	O	O:0.996689
to	O	O:0.999773
the	O	O:0.999986
original	O	O:0.990250
values	O	O:0.981779
.	O	O:0.992092
	
avoiding	O	O:0.985712
the	O	O:0.991903
local	O	O:0.988209
cache	O	O:0.997983
when	O	O:0.995633
fetching	O	O:0.998138
yahoo	O	O:0.981296
finance	O	O:0.998940
data	O	O:0.994905
from	O	O:0.999329
matplotlib.finance	B-API	O:0.936926
in	O	O:0.997537
python	O	O:0.976814
	
I	O	O:0.993461
am	O	O:0.999453
fetching	O	O:0.989980
yahoo	O	O:0.955703
finance	O	O:0.999316
data	O	O:0.989058
in	O	O:0.999671
Python	O	O:0.994986
through	O	O:0.997723
this	O	O:0.947244
interface	O	O:0.984460
:	O	O:0.994059
	
It	O	O:0.989866
would	O	O:0.999397
also	O	O:0.999633
be	O	O:0.999929
worth	O	O:0.995840
looking	O	O:0.992146
at	O	O:0.998759
the	O	O:0.998046
scatter	O	O:0.984522
plot	O	O:0.926954
documentation	O	O:0.997263
at	O	O:0.991766
#URL	O	O:0.954980
#CODE	O	O:0.986002
	
I	O	O:0.997806
am	O	O:0.999414
using	O	O:0.997199
the	O	O:0.995587
following	O	O:0.980374
code	O	O:0.990280
to	O	O:0.999197
stitch	O	O:0.999256
a	O	O:0.999223
.png	O	O:0.930822
into	O	O:0.997512
a	O	O:0.997733
scatter	O	O:0.965908
plot	O	O:0.976274
from	O	O:0.992856
MATPLOTLIB	O	O:0.975075
.	O	O:0.991269
	
Now	O	O:0.994595
I	O	O:0.999771
want	O	O:0.999500
to	O	O:0.997573
create	O	O:0.999821
a	O	O:0.999526
scatter	O	O:0.993900
plot	O	O:0.989001
with	O	O:0.999374
the	O	O:0.999930
data	O	O:0.994325
above	O	O:0.994785
..	O	O:0.994917
	
matplotlib	O	O:0.745136
:	O	O:0.984850
Understanding	O	O:0.971635
and	O	O:0.998895
changing	O	O:0.995399
axis	O	O:0.960924
labels	O	O:0.976832
for	O	O:0.999693
a	O	O:0.997058
scatter	O	O:0.966549
plot	O	O:0.990582
updated	O	O:0.986244
incrementally	O	O:0.966286
	
I	O	O:0.998716
have	O	O:0.999606
a	O	O:0.980793
script	O	O:0.991264
that	O	O:0.994154
generates	O	O:0.999424
scatter	O	O:0.997257
plots	O	O:0.991868
for	O	O:0.999208
data	O	O:0.997506
being	O	O:0.997664
generated	O	O:0.997532
by	O	O:0.997336
a	O	O:0.992432
hardware	O	O:0.907818
device	O	O:0.988937
.	O	O:0.990280
	
I	O	O:0.996422
build	O	O:0.996848
a	O	O:0.992901
scatter	O	O:0.969825
plot	O	O:0.970020
using	O	O:0.997169
matplotlib	O	O:0.826239
and	O	O:0.982990
python2.7	O	O:0.835288
	
Build	O	O:0.991573
a	O	O:0.995022
scatter	O	O:0.969003
plot	O	O:0.953226
for	O	O:0.999259
baz	O	O:0.995767
based	O	O:0.975614
on	O	O:0.995731
the	O	O:0.983655
x-axis	O	O:0.877863
(	O	O:0.996861
foo	O	O:0.987207
)	O	O:0.997605
and	O	O:0.988744
y-axis	O	O:0.949704
(	O	O:0.994443
bar	O	O:0.984804
)	O	O:0.994067
	
It	O	O:0.973168
is	O	O:0.999569
a	O	O:0.996656
normal	O	O:0.952176
scatter	O	O:0.989301
plot	O	O:0.841593
.	O	O:0.989676
	
Value	O	O:0.924989
Error	O	O:0.994205
with	O	O:0.990863
color	O	O:0.994304
array	O	O:0.998749
when	O	O:0.995908
slicing	O	O:0.998090
values	O	O:0.995613
for	O	O:0.997693
scatter	O	O:0.986567
plot	O	O:0.816026
	
I	O	O:0.999101
want	O	O:0.999430
to	O	O:0.997374
specify	O	O:0.999517
the	O	O:0.999498
frequency	O	O:0.997875
of	O	O:0.996968
markers	O	O:0.976427
that	O	O:0.998949
are	O	O:0.999722
printed	O	O:0.992137
in	O	O:0.998541
my	O	O:0.994572
scatter	O	O:0.992961
plot	O	O:0.915950
.	O	O:0.990009
	
Regression	O	O:0.980739
line	O	O:0.975695
and	O	O:0.998866
fitted	O	O:0.980411
curve	O	O:0.989178
for	O	O:0.998445
scatter	O	O:0.986140
plots	O	O:0.953957
in	O	O:0.995413
matplotlib	O	O:0.966502
	
If	O	O:0.992275
you	O	O:0.997913
are	O	O:0.999623
trying	O	O:0.999407
to	O	O:0.999670
create	O	O:0.999010
an	O	O:0.997564
animation	O	O:0.997991
,	O	O:0.999797
look	O	O:0.992270
in	O	O:0.999099
to	O	O:0.999429
the	O	O:0.999880
`	O	O:0.993426
animation	B-API	O:0.914287
`	O	O:0.999765
module	O	O:0.987812
of	O	O:0.998694
matplotlib	O	O:0.957332
,	O	O:0.998473
it	O	O:0.993934
takes	O	O:0.997222
care	O	O:0.997288
of	O	O:0.999850
a	O	O:0.998435
lot	O	O:0.988009
of	O	O:0.998358
the	O	O:0.988487
details	O	O:0.994921
for	O	O:0.997008
you	O	O:0.994290
.	O	O:0.995850
	
Apparently	O	O:0.991040
,	O	O:0.999751
the	O	O:0.996035
"	O	O:0.990625
Animation	B-API	O:0.981502
"	O	O:0.999474
class	O	O:0.998132
of	O	O:0.995455
Matplotlib	O	O:0.974820
runs	O	O:0.985526
the	O	O:0.997477
animation	O	O:0.981472
in	O	O:0.999517
a	O	O:0.999371
separate	O	O:0.749455
thread	O	O:0.977521
.	O	O:0.983119
	
It	O	O:0.995448
simply	O	O:0.997746
don't	O	O:0.998670
use	O	O:0.989020
the	O	O:0.977455
Animation	B-API	O:0.979227
class	O	O:0.985095
and	O	O:0.998455
builds	O	O:0.998135
its	O	O:0.971712
own	O	O:0.986897
animation	O	O:0.994896
from	O	O:0.991430
crash	O	O:0.956237
.	O	O:0.994829
	
I	O	O:0.997052
think	O	O:0.995290
`	O	O:0.994774
axis	O	O:0.853878
([	O	O:0.999419
xo	O	O:0.920674
,	O	O:0.998095
x1	O	O:0.953514
,	O	O:0.998179
y0	O	O:0.977696
,	O	O:0.999015
y1	O	O:0.983901
])`	O	O:0.991659
is	O	O:0.994701
in	O	O:0.999057
terms	O	O:0.998029
of	O	O:0.999435
proportion	O	O:0.989726
of	O	O:0.999477
the	O	O:0.996259
Figure	B-API	O:0.748932
,	O	O:0.998399
not	O	O:0.999214
the	O	O:0.999952
data	O	O:0.994444
transform	O	O:0.957764
.	O	O:0.992460
	
I	O	O:0.997594
used	O	O:0.995274
the	O	O:0.990758
scatter	B-API	O:0.878573
function	O	O:0.994319
and	O	O:0.998618
plotted	O	O:0.997399
the	O	O:0.993035
points	O	O:0.901960
,	O	O:0.996947
but	O	O:0.999303
the	O	O:0.998614
surface	O	O:0.927345
function	O	O:0.973088
is	O	O:0.998404
not	O	O:0.994277
working	O	O:0.934669
(	O	O:0.998089
the	O	O:0.981868
window	O	O:0.927219
is	O	O:0.999143
empty	O	O:0.934657
)	O	O:0.997063
.	O	O:0.957109
	
The	O	O:0.993420
solution	O	O:0.987519
I	O	O:0.998974
found	O	O:0.988168
for	O	O:0.996116
this	O	O:0.979716
involves	O	O:0.993746
using	O	O:0.992197
Normalize	B-API	B-API:0.521201
to	O	O:0.996104
make	O	O:0.999779
a	O	O:0.999158
normalised	O	O:0.895687
colour	O	O:0.999027
list	O	O:0.993030
based	O	O:0.992937
on	O	O:0.999313
the	O	O:0.998783
relevant	O	O:0.997443
data	O	O:0.996061
,	O	O:0.999792
mapping	O	O:0.998260
it	O	O:0.998572
to	O	O:0.999866
a	O	O:0.999665
ScalarMappable	B-API	B-API:0.560338
,	O	O:0.999268
and	O	O:0.999781
using	O	O:0.999696
that	O	O:0.989425
to	O	O:0.999136
set	O	O:0.999082
the	O	O:0.999034
face	O	O:0.716150
colour	O	O:0.989838
and	O	O:0.999605
c	O	O:0.996949
limits	O	O:0.972201
on	O	O:0.998771
each	O	O:0.998353
frame	O	O:0.999756
of	O	O:0.999323
the	O	O:0.987809
animation	O	O:0.992407
.	O	O:0.986421
	
But	O	O:0.995969
because	O	O:0.999572
all	O	O:0.998912
of	O	O:0.999941
the	O	O:0.998628
functionality	O	O:0.996466
relies	O	O:0.983522
on	O	O:0.999399
the	O	O:0.999238
hook	O	O:0.961910
,	O	O:0.999867
when	O	O:0.996581
the	O	O:0.996804
canvas	O	O:0.992684
is	O	O:0.997691
finally	O	O:0.989981
shown	O	O:0.996718
I	O	O:0.997726
presume	O	O:0.996842
Python's	O	O:0.963813
garbage	O	O:0.941491
collection	O	O:0.984214
has	O	O:0.993090
removed	O	O:0.974600
the	O	O:0.993077
Animation	B-API	O:0.983034
instance	O	O:0.985768
---	O	O:0.997030
since	O	O:0.993216
it	O	O:0.994388
was	O	O:0.998552
never	O	O:0.997065
assigned	O	O:0.991480
to	O	O:0.998479
a	O	O:0.999782
variable	O	O:0.977490
---	O	O:0.998579
and	O	O:0.999550
therefore	O	O:0.999481
the	O	O:0.997500
animation	O	O:0.989221
can	O	O:0.996599
never	O	O:0.999711
be	O	O:0.998988
started	O	O:0.951715
.	O	O:0.973252
	
Notice	O	O:0.967158
`	O	O:0.997572
xytext	O	B-API:0.608969
=	O	O:0.910470
(	O	O:0.989857
0	O	O:0.989319
,	O	O:0.998670
0	O	O:0.978842
)`	O	O:0.981068
means	O	O:0.989483
no	O	O:0.994093
offset	O	O:0.973600
,	O	O:0.997663
and	O	O:0.999787
omitting	O	O:0.934126
`	O	O:0.993446
arrowprops	O	O:0.571902
`	O	O:0.998199
causes	O	O:0.541495
`	O	O:0.998008
plt.annotate	B-API	B-API:0.951506
`	O	O:0.996993
to	O	O:0.990242
not	O	O:0.999956
draw	O	O:0.983926
an	O	O:0.996335
arrow	O	O:0.992852
.	O	O:0.987243
	
OLS	O	O:0.989595
solution	O	O:0.997838
using	O	O:0.994799
pinv	B-API	B-API:0.784905
/	O	O:0.919518
svd	B-API	B-API:0.634668
#CODE	O	O:0.974979
	
The	O	O:0.996037
bad	O	O:0.990101
days	O	O:0.981912
are	O	O:0.998694
eliminated	O	O:0.989159
,	O	O:0.996555
and	O	O:0.999535
the	O	O:0.999604
good	O	O:0.953824
ones	O	O:0.989001
are	O	O:0.999156
kept	O	O:0.986923
.	O	O:0.991728
	
@USER	O	O:0.977057
Well	O	O:0.989383
in	O	O:0.999438
this	O	O:0.997633
case	O	O:0.998777
,	O	O:0.999438
`	O	O:0.996610
searchsorted	B-API	B-API:0.816994
`	O	O:0.998717
is	O	O:0.997545
basically	O	O:0.998840
looking	O	O:0.998566
for	O	O:0.999273
places	O	O:0.996952
or	O	O:0.999417
indices	O	O:0.998874
where	O	O:0.999261
elements	O	O:0.997262
from	O	O:0.997763
`	O	O:0.999285
message	O	O:0.952651
`	O	O:0.999849
exists	O	O:0.972900
in	O	O:0.999897
the	O	O:0.999763
keys	O	O:0.982243
of	O	O:0.998449
`	O	O:0.999005
codes	O	O:0.897205
`	O	O:0.998384
.	O	O:0.974126
	
@USER	O	O:0.974219
--	O	O:0.996771
I	O	O:0.994894
had	O	O:0.999623
a	O	O:0.995334
hard	O	O:0.900232
time	O	O:0.997563
remembering	O	O:0.998392
how	O	O:0.996636
`	O	O:0.999229
translate	B-API	O:0.867465
`	O	O:0.999257
and	O	O:0.990636
`	O	O:0.999710
maketrans	B-API	B-API:0.567279
`	O	O:0.999765
work	O	O:0.959742
for	O	O:0.999883
quite	O	O:0.998048
a	O	O:0.993228
while	O	O:0.965883
too	O	O:0.963732
,	O	O:0.997691
but	O	O:0.995186
I've	O	O:0.984538
gotten	O	O:0.994432
used	O	O:0.976408
to	O	O:0.995062
it	O	O:0.999689
.	O	O:0.995541
	
Edit	O	O:0.924916
:	O	O:0.997684
if	O	O:0.998509
you're	O	O:0.999498
using	O	O:0.999735
a	O	O:0.997004
version	O	O:0.945602
of	O	O:0.997555
numpy	O	O:0.942232
>	O	O:0.996693
=	O	O:0.986218
1.8.0	O	O:0.983992
,	O	O:0.999532
then	O	O:0.996315
`	O	O:0.999618
np.linalg.eigvals	B-API	B-API:0.583368
`	O	O:0.999891
operates	O	O:0.985119
over	O	O:0.995738
the	O	O:0.996904
last	O	O:0.981030
two	O	O:0.999447
dimensions	O	O:0.995977
of	O	O:0.998828
whatever	O	O:0.998036
array	O	O:0.998148
you	O	O:0.999091
hand	O	O:0.997907
it	O	O:0.999768
,	O	O:0.999803
so	O	O:0.999770
if	O	O:0.998973
you	O	O:0.999438
reshape	O	O:0.998980
your	O	O:0.998791
input	O	O:0.998218
to	O	O:0.999818
an	O	O:0.999603
`	O	O:0.991193
(	O	O:0.996728
n_subarrays	O	O:0.974760
,	O	O:0.998956
nrows	O	O:0.968637
,	O	O:0.999306
ncols	O	O:0.987607
)`	O	O:0.996341
array	O	O:0.990809
you'll	O	O:0.999146
only	O	O:0.999418
have	O	O:0.999676
to	O	O:0.999626
call	O	O:0.997095
`	O	O:0.997961
eigvals	B-API	B-API:0.503313
`	O	O:0.999463
once	O	O:0.545575
:	O	O:0.998312
#CODE	O	O:0.993365
	
`	O	O:0.993206
reshape	B-API	B-API:0.716417
`	O	O:0.997526
returns	O	O:0.988069
a	O	O:0.999864
view	O	B-API:0.547581
of	O	O:0.999596
the	O	O:0.996625
original	O	O:0.994348
array	O	O:0.986449
,	O	O:0.998921
not	O	O:0.999763
a	O	O:0.999852
copy	O	B-API:0.503495
,	O	O:0.999830
so	O	O:0.992001
the	O	O:0.996754
conversion	O	O:0.988766
to	O	O:0.998787
3D	O	O:0.999638
only	O	O:0.994425
requires	O	O:0.998735
altering	O	O:0.994385
the	O	O:0.980462
`	O	O:0.994124
shape	O	O:0.792497
`	O	O:0.998752
and	O	O:0.985194
`	O	O:0.999373
strides	O	B-API:0.908472
`	O	O:0.999743
attributes	O	O:0.886524
of	O	O:0.999357
the	O	O:0.997107
array	O	O:0.997528
,	O	O:0.998757
without	O	O:0.994636
having	O	O:0.984957
to	O	O:0.998553
copy	O	O:0.994209
any	O	O:0.999152
of	O	O:0.993033
the	O	O:0.998842
actual	O	O:0.998218
data	O	O:0.988298
.	O	O:0.996361
	
sum	O	O:0.985944
this	O	O:0.998110
new	O	O:0.992519
array	O	O:0.995510
along	O	O:0.979967
particular	O	O:0.991247
axes	O	O:0.958016
;	O	O:0.997816
and	O	O:0.999876
then	O	O:0.999352
maybe	O	O:0.995947
	
Calling	O	O:0.909800
`	O	O:0.995496
reshape	B-API	B-API:0.720958
`	O	O:0.997558
returns	O	O:0.983213
a	O	O:0.999108
view	O	B-API:0.796361
,	O	O:0.999439
so	O	O:0.992602
it	O	O:0.997340
doesn't	O	O:0.998585
incur	O	O:0.993472
any	O	O:0.998515
big	O	O:0.994922
copying	O	O:0.988642
costs	O	O:0.964672
or	O	O:0.999414
anything	O	O:0.998953
like	O	O:0.998768
that	O	O:0.998329
.	O	O:0.997583
	
so	O	O:0.995210
at	O	O:0.999763
some	O	O:0.996529
point	O	O:0.992066
in	O	O:0.998148
the	O	O:0.996611
execution	O	O:0.993727
it	O	O:0.998387
will	O	O:0.999067
max	O	O:0.996211
my	O	O:0.993829
memory	O	O:0.972240
.	O	O:0.991815
	
Note	O	O:0.997582
that	O	O:0.996970
extension	O	O:0.999563
to	O	O:0.999669
even	O	O:0.999915
higher	O	O:0.995803
combinatorics	O	O:0.988606
should	O	O:0.998076
be	O	O:0.999466
trivial	O	O:0.996208
,	O	O:0.997995
along	O	O:0.991285
the	O	O:0.997616
lines	O	O:0.964468
presented	O	O:0.970978
;	O	O:0.999341
but	O	O:0.999502
keep	O	O:0.988634
an	O	O:0.999161
eye	O	O:0.997891
on	O	O:0.999081
the	O	O:0.999065
n	O	O:0.996084
used	O	O:0.980124
in	O	O:0.999296
that	O	O:0.997883
case	O	O:0.997335
.	O	O:0.996946
	
These	O	O:0.988850
functions	O	O:0.996452
return	O	O:0.982739
a	O	O:0.996282
list	O	O:0.878265
,	O	O:0.999604
which	O	O:0.998989
I	O	O:0.999604
convert	O	O:0.982675
to	O	O:0.998419
a	O	O:0.999824
numpy	O	O:0.963027
array	O	O:0.995885
and	O	O:0.999844
then	O	O:0.998604
sum	O	O:0.992373
over	O	O:0.988004
.	O	O:0.982442
	
Can	O	O:0.983800
it	O	O:0.998968
be	O	O:0.999304
because	O	O:0.999492
of	O	O:0.994328
the	O	O:0.999826
many	O	O:0.998362
zeros	O	O:0.977555
in	O	O:0.999359
the	O	O:0.999232
initial	O	O:0.994405
table	O	O:0.992920
?	O	O:0.993113
	
I	O	O:0.998075
also	O	O:0.997841
understand	O	O:0.998262
that	O	O:0.991479
sum	B-API	O:0.855320
(	O	O:0.998616
A	O	O:0.998375
,	O	O:0.999213
axis=1	O	O:0.958378
)	O	O:0.999520
will	O	O:0.995664
sum	O	O:0.998957
each	O	O:0.995766
row	O	O:0.987264
.	O	O:0.992676
	
But	O	O:0.998400
what	O	O:0.997102
I	O	O:0.999334
really	O	O:0.999339
want	O	O:0.986989
to	O	O:0.998023
do	O	O:0.999739
,	O	O:0.998345
is	O	O:0.998226
to	O	O:0.997246
bin	O	O:0.996407
`	O	O:0.999230
array	O	O:0.905674
[:	O	O:0.999339
,	O	O:0.998170
1	O	O:0.993485
]`	O	O:0.998629
by	O	O:0.984338
day	O	O:0.982663
(	O	O:0.998165
as	O	O:0.999796
derived	O	O:0.989574
by	O	O:0.995133
the	O	O:0.998982
unix	O	O:0.742788
timestamps	O	O:0.757792
in	O	O:0.997310
array	O	O:0.982177
[:	O	O:0.998718
,	O	O:0.997868
0	O	O:0.981585
])	O	O:0.990742
,	O	O:0.993833
and	O	O:0.999622
plot	O	O:0.985295
these	O	O:0.996885
as	O	O:0.999755
a	O	O:0.995835
stacked	O	O:0.886271
histogram	O	O:0.998370
,	O	O:0.999295
with	O	O:0.998933
each	O	O:0.912189
(	O	O:0.999383
colored	O	O:0.993456
)	O	O:0.999473
stack	O	O:0.877217
representing	O	O:0.999409
a	O	O:0.977459
day	O	O:0.943660
.	O	O:0.990300
	
It's	O	O:0.996094
interesting	O	O:0.994389
to	O	O:0.999096
see	O	O:0.999878
that	O	O:0.999669
when	O	O:0.999451
I	O	O:0.999925
go	O	O:0.999890
back	O	O:0.951515
to	O	O:0.996903
`	O	O:0.999909
nloop=1000	O	O:0.678848
`	O	O:0.999634
,	O	O:0.986586
`	O	O:0.999675
nreps=3	O	O:0.664278
`	O	O:0.999549
I	O	O:0.998071
actually	O	O:0.999455
see	O	O:0.997889
a	O	O:0.997840
slightly	O	O:0.947324
*	O	O:0.999482
greater	O	O:0.965927
*	O	O:0.999761
rate	O	O:0.987268
of	O	O:0.997156
cache	O	O:0.988529
misses	O	O:0.984105
for	O	O:0.999001
the	O	O:0.989886
row	O	O:0.975254
sum	O	O:0.789344
(	O	O:0.999484
17%	O	O:0.976029
vs	O	O:0.993613
13%	O	O:0.984660
)	O	O:0.999045
,	O	O:0.999757
even	O	O:0.996350
though	O	O:0.998275
it's	O	O:0.998231
faster	O	O:0.995708
than	O	O:0.997419
the	O	O:0.998605
column	O	O:0.996772
sum	O	O:0.950957
.	O	O:0.997561
	
You	O	O:0.993909
can	O	O:0.999047
concatenate	O	O:0.998020
arrays	O	O:0.989554
in	O	O:0.993379
`	O	O:0.999089
numpy	O	O:0.898655
`	O	O:0.998302
.	O	O:0.961141
	
If	O	O:0.992308
you	O	O:0.998227
are	O	O:0.999624
100%	O	O:0.998861
sure	O	O:0.993149
that	O	O:0.997372
l2	O	O:0.989078
would	O	O:0.999664
only	O	O:0.999454
be	O	O:0.999926
one	O	O:0.999877
column	O	O:0.999456
then	O	O:0.997860
you	O	O:0.999875
can	O	O:0.999754
reshape	O	O:0.999312
that	O	O:0.997513
array	O	O:0.997975
to	O	O:0.999455
make	O	O:0.999294
it	O	O:0.999401
one	O	O:0.999783
dimensional	O	O:0.983442
before	O	O:0.988100
doing	O	O:0.987601
the	O	O:0.989997
subtraction	O	O:0.800716
.	O	O:0.983827
	
You	O	O:0.990880
won't	O	O:0.998415
be	O	O:0.999820
able	O	O:0.999618
to	O	O:0.999408
create	O	O:0.999405
a	O	O:0.998661
2D	O	O:0.971536
array	O	O:0.998236
that	O	O:0.991467
way	O	O:0.996270
,	O	O:0.998064
and	O	O:0.992291
@USER	O	O:0.991469
method	O	O:0.995405
of	O	O:0.999097
returning	O	O:0.996659
a	O	O:0.997557
1D	O	O:0.920254
array	O	O:0.998281
that	O	O:0.996580
you	O	O:0.999770
reshape	O	O:0.996050
afterwards	O	O:0.953093
is	O	O:0.999458
a	O	O:0.998573
sure	O	O:0.939763
go	O	O:0.989124
.	O	O:0.992491
	
I	O	O:0.998541
have	O	O:0.999636
a	O	O:0.995286
square	O	O:0.859660
matrix	O	O:0.967681
A	O	O:0.987093
(	O	O:0.998490
could	O	O:0.997921
be	O	O:0.999678
any	O	O:0.999529
size	O	O:0.953982
)	O	O:0.997600
and	O	O:0.999107
I	O	O:0.999846
want	O	O:0.997846
to	O	O:0.997710
take	O	O:0.999816
the	O	O:0.999199
upper	O	O:0.983198
triangular	O	O:0.982954
part	O	O:0.990583
and	O	O:0.999720
place	O	O:0.999505
those	O	O:0.998176
values	O	O:0.974461
in	O	O:0.998932
an	O	O:0.999704
array	O	O:0.998473
without	O	O:0.998233
the	O	O:0.999034
values	O	O:0.951916
below	O	O:0.990524
the	O	O:0.999588
center	O	O:0.954796
diagonal	O	O:0.937013
(	O	O:0.995958
k=0	O	O:0.976441
)	O	O:0.997157
.	O	O:0.982693
	
You	O	O:0.995405
can	O	O:0.998525
mimic	O	O:0.999835
this	O	O:0.996695
behavior	O	O:0.996481
with	O	O:0.999396
a	O	O:0.995003
simple	O	O:0.908114
function	O	O:0.998094
to	O	O:0.996712
flatten	O	O:0.999335
a	O	O:0.981546
list	O	B-API:0.730329
:	O	O:0.997000
#CODE	O	O:0.995912
	
So	O	O:0.977582
`	O	O:0.999421
popt	O	O:0.578698
`	O	O:0.999729
,	O	O:0.998621
according	O	O:0.995025
to	O	O:0.997812
the	O	O:0.999670
documentation	O	O:0.994145
,	O	O:0.998609
returns	O	O:0.989581
*	O	O:0.996711
"	O	O:0.999209
Optimal	O	O:0.992969
values	O	O:0.977633
for	O	O:0.999122
the	O	O:0.999007
parameters	O	O:0.924315
so	O	O:0.999400
that	O	O:0.999635
the	O	O:0.999949
sum	O	O:0.987565
of	O	O:0.999448
the	O	O:0.998823
squared	O	O:0.995289
error	O	O:0.995471
of	O	O:0.994885
f	O	O:0.774465
(	O	O:0.999035
xdata	O	O:0.963868
,	O	O:0.999616
popt	O	O:0.931090
)	O	O:0.999149
-	O	O:0.998141
ydata	O	O:0.958205
is	O	O:0.998444
minimized	O	O:0.844546
"	O	O:0.995148
.	O	O:0.962704
	
And	O	O:0.995538
I'd	O	O:0.999865
like	O	O:0.998713
indices	O	O:0.991684
`	O	O:0.998705
i	O	O:0.936613
`	O	O:0.999921
such	O	O:0.994207
that	O	O:0.998850
,	O	O:0.996603
#CODE	O	O:0.992344
	
But	O	O:0.992885
,	O	O:0.999125
`	O	O:0.997118
resize	B-API	B-API:0.904960
`	O	O:0.998162
looks	O	O:0.988135
like	O	O:0.998175
it	O	O:0.999831
just	O	O:0.996852
might	O	O:0.999614
be	O	O:0.999035
the	O	O:0.999344
thing	O	O:0.979110
I'm	O	O:0.997693
looking	O	O:0.987343
for	O	O:0.999194
...	O	O:0.950622
	
`	O	O:0.993392
rfft	B-API	B-API:0.968987
`	O	O:0.999764
,	O	O:0.998938
apart	O	O:0.999070
from	O	O:0.999022
repeated	O	O:0.981519
terms	O	O:0.993795
excluded	O	O:0.942649
,	O	O:0.993850
and	O	O:0.999483
an	O	O:0.997068
almost	O	O:0.990954
2x	O	O:0.989039
speed-up	O	O:0.926568
,	O	O:0.997891
returns	O	O:0.992806
the	O	O:0.998870
exact	O	O:0.998752
same	O	O:0.998148
you	O	O:0.999461
would	O	O:0.999851
get	O	O:0.999850
from	O	O:0.999000
`	O	O:0.999264
fft	B-API	B-API:0.788190
`	O	O:0.996485
.	O	O:0.938706
	
Plus	O	O:0.993097
,	O	O:0.999750
if	O	O:0.999579
I	O	O:0.999809
have	O	O:0.999227
4	O	O:0.992290
dimensions	O	O:0.995243
,	O	O:0.999203
I	O	O:0.999338
thought	O	O:0.981127
I	O	O:0.995121
should	O	O:0.999590
have	O	O:0.992893
4	O	O:0.996222
eigenvalues	O	O:0.943825
and	O	O:0.999182
not	O	O:0.998922
150	O	O:0.993697
like	O	O:0.997541
the	O	O:0.994913
eig	B-API	O:0.669210
gives	O	O:0.990470
me	O	O:0.963493
.	O	O:0.991847
	
If	O	O:0.994950
I	O	O:0.997748
run	O	O:0.999211
your	O	O:0.991492
code	O	O:0.993599
to	O	O:0.999679
generate	O	O:0.996124
`	O	O:0.998973
d	O	O:0.820158
`	O	O:0.999136
and	O	O:0.982409
`	O	O:0.999501
dx	O	B-API:0.560304
`	O	O:0.999465
with	O	O:0.923778
`	O	O:0.998248
eig	B-API	B-API:0.620395
`	O	O:0.999798
I	O	O:0.995860
get	O	O:0.999520
the	O	O:0.982455
following	O	O:0.842658
:	O	O:0.993418
#CODE	O	O:0.996679
	
In	O	O:0.992845
other	O	O:0.993886
words-	O	O:0.950754
it	O	O:0.965698
is	O	O:0.997967
not	O	O:0.997976
just	O	O:0.998456
taking	O	O:0.998381
a	O	O:0.995608
min	O	O:0.797656
or	O	O:0.998603
max	O	O:0.929996
.	O	O:0.992962
	
D	O	O:0.873540
[	O	O:0.997824
I+1	O	O:0.963513
,	O	O:0.999271
J+1	O	O:0.981589
]	O	O:0.995776
=	O	O:0.902359
map	B-API	B-API:0.751637
(	O	O:0.997901
norm	O	O:0.640025
,	O	O:0.999142
x	O	O:0.976253
[	O	O:0.998529
I	O	O:0.999248
]	O	O:0.998196
-y	O	O:0.758870
[	O	O:0.995569
J	O	O:0.987157
])	O	O:0.982835
+	O	O:0.872243
np.minimum	B-API	B-API:0.899125
(	O	O:0.968144
np.minimum	B-API	B-API:0.882003
(	O	O:0.994841
D	O	O:0.984122
[	O	O:0.997707
I	O	O:0.998786
,	O	O:0.999633
J	O	O:0.969812
]	O	O:0.997308
,	O	O:0.992550
D	O	O:0.986559
[	O	O:0.996911
I	O	O:0.997720
,	O	O:0.999836
J+1	O	O:0.931543
])	O	O:0.997415
,	O	O:0.997073
D	O	O:0.973637
[	O	O:0.998241
I+1	O	O:0.986190
,	O	O:0.998744
J	O	O:0.983767
])	O	O:0.992663
?	O	O:0.978646
	
`	O	O:0.994493
dot	B-API	B-API:0.769259
`	O	O:0.999411
just	O	O:0.921122
has	O	O:0.999652
tighter	O	O:0.985970
code	O	O:0.971957
for	O	O:0.999734
a	O	O:0.997275
specific	O	O:0.976132
combination	O	O:0.999184
of	O	O:0.996939
dimensions	O	O:0.965889
.	O	O:0.994049
	
numpy	O	O:0.972606
sum	B-API	O:0.903356
does	O	O:0.996184
not	O	O:0.998383
agree	O	O:0.993611
	
Since	O	O:0.992054
you	O	O:0.998136
are	O	O:0.999829
only	O	O:0.998762
adding	O	O:0.998104
many	O	O:0.980437
`	O	O:0.997126
1	O	O:0.866352
`	O	O:0.999582
s	O	O:0.962203
you	O	O:0.999371
can	O	O:0.999600
convert	O	O:0.987455
`	O	O:0.999861
diff	O	B-API:0.870986
`	O	O:0.999522
to	O	O:0.763042
`	O	O:0.999949
bool	O	B-API:0.973090
`	O	O:0.994727
:	O	O:0.980833
#CODE	O	O:0.997843
	
It	O	O:0.983316
isn't	O	O:0.997741
mathematically	O	O:0.996178
possible	O	O:0.996875
to	O	O:0.999203
represent	O	O:0.998200
0	O	O:0.994325
on	O	O:0.999755
a	O	O:0.997888
log	O	O:0.995190
scale	O	O:0.985300
,	O	O:0.999643
so	O	O:0.998821
the	O	O:0.999616
first	O	O:0.997752
value	O	O:0.998916
will	O	O:0.998887
have	O	O:0.999682
to	O	O:0.999773
either	O	O:0.999940
be	O	O:0.999466
masked	O	O:0.994434
or	O	O:0.997196
clipped	O	O:0.979428
to	O	O:0.999682
a	O	O:0.999890
very	O	O:0.948113
small	O	O:0.997858
positive	O	O:0.933930
number	O	O:0.964658
.	O	O:0.978438
	
possible	O	O:0.991062
duplicate	O	O:0.998158
of	O	O:0.990281
[	O	O:0.996920
Efficiently	O	O:0.999171
count	O	O:0.977238
the	O	O:0.999277
number	O	O:0.996910
of	O	O:0.999614
occurrences	O	O:0.997917
of	O	O:0.999835
unique	O	O:0.994220
subarrays	O	O:0.990394
in	O	O:0.994921
NumPy	O	O:0.992904
?	O	O:0.990366
]	O	O:0.936542
(	O	O:0.994206
#URL	O	O:0.985527
)	O	O:0.996091
	
Or	O	O:0.997598
you	O	O:0.998449
could	O	O:0.999660
mask	O	O:0.998501
the	O	O:0.999737
x	O	O:0.997178
value	O	O:0.998828
as	O	O:0.999768
well	O	O:0.997246
,	O	O:0.999834
so	O	O:0.999437
the	O	O:0.996567
indices	O	O:0.975669
were	O	O:0.992688
consistent	O	O:0.982843
between	O	O:0.990159
x	O	O:0.841939
and	O	O:0.997824
y	O	O:0.969616
#CODE	O	O:0.965111
	
Here	O	O:0.985518
the	O	O:0.995326
`	O	O:0.998273
outer	B-API	B-API:0.670792
`	O	O:0.999246
method	O	O:0.995726
of	O	O:0.999527
the	O	O:0.997843
`	O	O:0.998784
multiply	B-API	B-API:0.656869
`	O	O:0.999656
ufunc	O	B-API:0.540331
is	O	O:0.999630
used	O	O:0.980755
to	O	O:0.999059
create	O	O:0.998858
the	O	O:0.998550
new	O	O:0.986911
20x20	O	O:0.966802
array	O	O:0.965359
.	O	O:0.987447
	
I	O	O:0.998547
have	O	O:0.999497
a	O	O:0.996328
3D	O	O:0.956223
numpy	O	O:0.988811
array	O	O:0.997588
consisting	O	O:0.997542
of	O	O:0.997651
1's	O	O:0.985013
and	O	O:0.999603
zeros	O	O:0.997387
defining	O	O:0.972211
open	O	O:0.742158
versus	O	O:0.996862
filled	O	O:0.987022
space	O	O:0.987521
in	O	O:0.999354
a	O	O:0.998944
porous	O	O:0.869682
solid	O	O:0.884035
(	O	O:0.993623
it's	O	O:0.994778
currently	O	O:0.999561
a	O	O:0.999640
numpy	O	O:0.938543
Int64	O	O:0.687331
array	O	O:0.985213
)	O	O:0.996399
.	O	O:0.983549
	
You	O	O:0.987420
are	O	O:0.999269
attempting	O	O:0.992715
to	O	O:0.998497
broadcast	O	O:0.999501
a	O	O:0.998867
4-D	O	O:0.980896
array	O	O:0.998724
together	O	O:0.985349
with	O	O:0.998932
a	O	O:0.995935
3-D	O	O:0.932114
array	O	O:0.982408
.	O	O:0.984097
	
Scipy	O	O:0.993334
NDimage	O	O:0.880267
correlate	O	O:0.814115
:	O	O:0.995432
unbearably	O	O:0.995418
slow	O	O:0.975948
	
I	O	O:0.998415
know	O	O:0.998702
that	O	O:0.995694
I	O	O:0.999478
can	O	O:0.999580
reshape	O	O:0.984167
the	O	O:0.998334
array	O	O:0.988500
to	O	O:0.999774
a	O	O:0.999813
100	O	O:0.985870
x	O	O:0.988031
2	O	O:0.997270
array	O	O:0.996758
of	O	O:0.998199
grid	O	O:0.960829
points	O	O:0.940086
:	O	O:0.993864
#CODE	O	O:0.995624
	
You	O	O:0.995527
probably	O	O:0.996591
could	O	O:0.999201
get	O	O:0.999412
`	O	O:0.999763
append	B-API	B-API:0.682831
`	O	O:0.998810
to	O	O:0.994384
work	O	O:0.999363
,	O	O:0.999178
but	O	O:0.998940
it	O	O:0.999484
just	O	O:0.999082
does	O	O:0.999890
a	O	O:0.999815
step	O	O:0.999733
by	O	O:0.999675
step	O	O:0.999117
concatenate	O	O:0.966058
,	O	O:0.998487
which	O	O:0.984106
is	O	O:0.996301
slower	O	O:0.893814
.	O	O:0.992511
	
This	O	O:0.985838
produces	O	O:0.998338
a	O	O:0.998390
random	O	O:0.939034
permutation	O	O:0.997474
of	O	O:0.998536
each	O	O:0.990189
column's	O	O:0.999385
indices	O	O:0.978353
.	O	O:0.992032
	
As	O	O:0.991845
it	O	O:0.997796
happens	O	O:0.997585
,	O	O:0.999528
the	O	O:0.992880
histogram	O	O:0.962773
is	O	O:0.998742
enough	O	O:0.972002
for	O	O:0.998684
the	O	O:0.965460
former	O	O:0.914563
.	O	O:0.985585
	
I	O	O:0.996670
see	O	O:0.998235
how	O	O:0.996554
the	O	O:0.999552
symmetry	O	O:0.995817
of	O	O:0.998816
the	O	O:0.998031
trace	O	O:0.994887
lets	O	O:0.998234
you	O	O:0.999120
replace	O	O:0.969327
the	O	O:0.999809
final	O	O:0.958981
`	O	O:0.998568
dot	B-API	B-API:0.783146
`	O	O:0.998252
.	O	O:0.934073
	
In	O	O:0.998348
that	O	O:0.995551
question	O	O:0.998672
,	O	O:0.999721
I	O	O:0.999311
sought	O	O:0.994249
to	O	O:0.998533
sum	O	O:0.999381
values	O	O:0.994875
in	O	O:0.999726
a	O	O:0.999376
numpy	O	O:0.984267
structured	O	O:0.993198
array	O	O:0.997840
based	O	O:0.977873
on	O	O:0.999855
multiple	O	O:0.990999
criteria	O	O:0.994874
,	O	O:0.998973
including	O	O:0.996962
matches	O	O:0.967341
in	O	O:0.999060
a	O	O:0.994702
list	O	O:0.758554
.	O	O:0.992985
	
to	O	O:0.994972
delete	O	O:0.995780
the	O	O:0.999441
lines	O	O:0.988216
that	O	O:0.997720
had	O	O:0.999563
zeros	O	O:0.996247
in	O	O:0.999570
them	O	O:0.967367
!	O	O:0.993132
	
Fill	O	O:0.973014
scipy	O	O:0.944050
/	O	O:0.991703
numpy	O	O:0.984493
matrix	O	O:0.998040
based	O	O:0.990732
on	O	O:0.997927
indices	O	O:0.982292
and	O	O:0.999342
values	O	O:0.973333
	
It	O	O:0.991930
looks	O	O:0.998548
like	O	O:0.999296
a	O	O:0.998720
vector	O	O:0.981704
product	O	O:0.997901
followed	O	O:0.997009
by	O	O:0.999452
a	O	O:0.997364
sum	O	O:0.833355
along	O	O:0.997478
the	O	O:0.997863
resulting	O	O:0.975710
array	O	O:0.986938
.	O	O:0.988767
	
The	O	O:0.993506
trick	O	O:0.980485
is	O	O:0.999035
that	O	O:0.998867
this	O	O:0.998855
convolve	B-API	O:0.936644
function	O	O:0.993975
can	O	O:0.997231
be	O	O:0.999949
used	O	O:0.995875
in-place	O	O:0.971211
so	O	O:0.999137
the	O	O:0.991426
double	O	O:0.507669
for	O	O:0.992265
loop	O	O:0.756744
:	O	O:0.990932
#CODE	O	O:0.995378
	
But	O	O:0.998476
this	O	O:0.995157
reshape	B-API	O:0.975478
should	O	O:0.995704
produce	O	O:0.999205
a	O	O:0.997325
`	O	O:0.967885
(	O	O:0.995250
n	O	O:0.996640
,	O	O:0.998003
1	O	O:0.987972
,	O	O:0.998286
1	O	O:0.993348
)`	O	O:0.994820
array	O	O:0.984036
,	O	O:0.998961
not	O	O:0.999816
your	O	O:0.995706
`	O	O:0.994169
(	O	O:0.996587
1	O	O:0.997931
,	O	O:0.997437
1	O	O:0.989137
,	O	O:0.997910
1	O	O:0.978640
,...	O	O:0.988765
)`	O	O:0.987238
array	O	O:0.978752
.	O	O:0.987221
	
For	O	O:0.996979
an	O	O:0.998468
extreme	O	O:0.981913
example	O	O:0.989671
,	O	O:0.999181
consider	O	O:0.998569
a	O	O:0.997681
sequence	O	O:0.997462
that	O	O:0.999464
consists	O	O:0.999321
of	O	O:0.999338
9	O	O:0.992661
zeros	O	O:0.998320
followed	O	O:0.996715
by	O	O:0.999329
the	O	O:0.998938
result	O	O:0.996658
of	O	O:0.999788
a	O	O:0.999254
coin	O	O:0.977144
toss	O	O:0.967037
,	O	O:0.999227
9	O	O:0.988639
zeros	O	O:0.990417
and	O	O:0.999781
another	O	O:0.999417
coin	O	O:0.953847
toss	O	O:0.953766
,	O	O:0.998536
etc	O	O:0.993067
.	O	O:0.995046
	
If	O	O:0.997937
so	O	O:0.999593
then	O	O:0.997074
`	O	O:0.999410
np.array	B-API	B-API:0.992454
(	O	O:0.999843
a	O	O:0.997726
)`	O	O:0.512423
is	O	O:0.998962
a	O	O:0.994306
2d	O	O:0.890690
array	O	O:0.988617
,	O	O:0.997344
and	O	O:0.999741
you	O	O:0.999111
can	O	O:0.999451
sum	O	O:0.999752
over	O	O:0.991255
`	O	O:0.997658
axis=1	O	O:0.582863
`	O	O:0.998198
.	O	O:0.956579
	
I	O	O:0.993548
am	O	O:0.998888
trying	O	O:0.994137
to	O	O:0.999615
create	O	O:0.999555
a	O	O:0.998706
lat	O	O:0.859792
/	O	O:0.997574
lon	O	O:0.966372
grid	O	O:0.995253
that	O	O:0.995598
contains	O	O:0.997266
an	O	O:0.999496
array	O	O:0.997406
of	O	O:0.999164
found	O	O:0.989838
indices	O	O:0.996922
where	O	O:0.997791
two	O	O:0.997302
conditions	O	O:0.979090
are	O	O:0.998035
met	O	O:0.993595
for	O	O:0.999680
a	O	O:0.989209
lat	O	B-API:0.534520
/	O	O:0.991646
lon	O	O:0.928087
combination	O	O:0.995386
.	O	O:0.980959
	
This	O	O:0.996214
NAMBE	O	O:0.877682
is	O	O:0.999057
the	O	O:0.995565
absolute	O	O:0.976900
difference	O	O:0.987356
between	O	O:0.997209
a	O	O:0.998557
base	O	O:0.950076
vector	O	O:0.998527
and	O	O:0.999616
another	O	O:0.990696
vector	O	O:0.994400
,	O	O:0.999557
divided	O	O:0.992505
by	O	O:0.996428
the	O	O:0.999161
base	O	O:0.953338
vector	O	O:0.993276
and	O	O:0.999826
multiplied	O	O:0.998310
by	O	O:0.997720
a	O	O:0.996110
hundred	O	O:0.827345
,	O	O:0.998151
in	O	O:0.984982
pseudo-code	O	O:0.950811
notation	O	O:0.980729
:	O	O:0.996639
#CODE	O	O:0.996340
	
this	O	O:0.990803
my	O	O:0.998254
code	O	O:0.985406
to	O	O:0.997066
and	O	O:0.999967
i	O	O:0.998641
want	O	O:0.997299
to	O	O:0.998206
use	O	O:0.999673
histogram	O	O:0.998617
data	O	O:0.995113
to	O	O:0.999830
plot	O	O:0.999200
scatter	O	O:0.997222
where	O	O:0.996548
y	O	O:0.992217
axis	O	O:0.991032
is	O	O:0.999280
counts	O	O:0.988099
center	O	O:0.994033
from	O	O:0.997488
the	O	O:0.993792
histogram	O	O:0.996265
,	O	O:0.996017
is	O	O:0.999385
there	O	O:0.996427
any	O	O:0.997093
direct	O	O:0.953474
command	O	O:0.991311
or	O	O:0.998549
way	O	O:0.997290
to	O	O:0.998900
do	O	O:0.999847
this	O	O:0.996218
?	O	O:0.996087
	
Please	O	O:0.985508
compile	O	O:0.980171
with	O	O:0.983739
`	O	O:0.997220
cython	O	O:0.977803
-a	O	O:0.989184
`	O	O:0.998018
,	O	O:0.999613
then	O	O:0.999855
show	O	O:0.996868
us	O	O:0.998662
the	O	O:0.999327
C	O	O:0.971288
code	O	O:0.994872
that	O	O:0.998087
the	O	O:0.999710
`	O	O:0.999710
a	O	O:0.988861
[	O	O:0.997337
0	O	O:0.991372
]	O	O:0.985131
+=	O	O:0.989188
sum	O	O:0.952960
`	O	O:0.998172
line	O	O:0.966217
turns	O	O:0.997946
into	O	O:0.938520
.	O	O:0.975974
	
The	O	O:0.994536
revised	O	O:0.970352
question	O	O:0.973228
is	O	O:0.998155
still	O	O:0.997751
a	O	O:0.999028
duplicate	O	O:0.984111
,	O	O:0.999008
see	O	O:0.986264
[	O	O:0.999473
this	O	O:0.998057
question	O	O:0.991456
]	O	O:0.976879
(	O	O:0.986746
#URL	O	O:0.986344
)	O	O:0.998120
,	O	O:0.995042
and	O	O:0.997108
[	O	O:0.999391
this	O	O:0.992631
question	O	O:0.988467
]	O	O:0.964090
(	O	O:0.989360
#URL	O	O:0.994542
)	O	O:0.998900
for	O	O:0.995776
finding	O	O:0.992156
the	O	O:0.985644
indices	O	O:0.894423
.	O	O:0.983337
	
ValueError	O	O:0.928700
:	O	O:0.997393
operands	O	O:0.979384
could	O	O:0.998916
not	O	O:0.999869
be	O	O:0.999898
broadcast	O	O:0.997987
together	O	O:0.981604
with	O	O:0.999026
different	O	O:0.996087
shapes	O	O:0.945358
in	O	O:0.997716
numpy	O	O:0.993396
?	O	O:0.994957
	
There	O	O:0.985436
are	O	O:0.998879
thousands	O	O:0.999722
of	O	O:0.999094
numbers	O	O:0.969387
below	O	O:0.998062
the	O	O:0.999741
ones	O	O:0.976165
shown	O	O:0.990025
here	O	O:0.988460
.	O	O:0.994963
	
Assuming	O	O:0.994998
you	O	O:0.999577
want	O	O:0.999455
to	O	O:0.999708
align	O	O:0.999420
all	O	O:0.999529
the	O	O:0.998946
arrays	O	O:0.988979
to	O	O:0.998090
the	O	O:0.999958
left	O	O:0.963372
,	O	O:0.998423
and	O	O:0.999777
pad	O	O:0.982343
to	O	O:0.996193
the	O	O:0.999912
right	O	O:0.998350
with	O	O:0.999266
zeros	O	O:0.998002
,	O	O:0.999960
then	O	O:0.999332
you	O	O:0.999877
could	O	O:0.999954
first	O	O:0.999936
find	O	O:0.998898
the	O	O:0.999677
maximum	O	O:0.986295
length	O	O:0.989291
with	O	O:0.985197
#CODE	O	O:0.996085
	
How	O	O:0.993739
to	O	O:0.998008
do	O	O:0.999870
the	O	O:0.999456
same	O	O:0.982035
If	O	O:0.998891
I	O	O:0.999831
want	O	O:0.999240
to	O	O:0.989331
apply	O	O:0.998763
norm	O	O:0.655279
column-wise	O	O:0.942000
to	O	O:0.999451
a	O	O:0.999389
matrix	O	O:0.965290
?	O	O:0.996638
	
The	O	O:0.995167
easiest	O	O:0.979752
approach	O	O:0.983548
is	O	O:0.997714
to	O	O:0.997259
reshape	O	O:0.999325
to	O	O:0.999172
data	O	O:0.999758
to	O	O:0.999942
a	O	O:0.999984
long	O	O:0.989015
format	O	O:0.998766
using	O	O:0.996821
`	O	O:0.988498
.stack	B-API	B-API:0.992452
`	O	O:0.999135
,	O	O:0.992811
which	O	O:0.999130
can	O	O:0.999141
be	O	O:0.999962
be	O	O:0.999704
passed	O	O:0.983599
straight	O	O:0.986145
into	O	O:0.894519
rolling	O	O:0.860175
mean	O	O:0.945708
.	O	O:0.988432
	
It's	O	O:0.979126
pretty	O	O:0.981969
low-level	O	O:0.954403
,	O	O:0.988464
and	O	O:0.999061
mostly	O	O:0.989922
focused	O	O:0.978849
on	O	O:0.998326
how	O	O:0.998102
to	O	O:0.999692
address	O	O:0.999018
the	O	O:0.999726
more	O	O:0.991591
difficult	O	O:0.997815
problem	O	O:0.997891
of	O	O:0.998729
how	O	O:0.996724
to	O	O:0.999761
pass	O	O:0.998901
C++	O	O:0.998058
data	O	O:0.994097
to	O	O:0.998924
and	O	O:0.999985
from	O	O:0.999045
NumPy	O	O:0.990795
without	O	O:0.989375
copying	O	O:0.851409
,	O	O:0.983138
but	O	O:0.989379
here's	O	O:0.989678
how	O	O:0.998841
you'd	O	O:0.999335
do	O	O:0.999724
a	O	O:0.999190
copied	O	O:0.860379
std	O	O:0.795766
::	O	O:0.988941
vector	O	O:0.994630
return	O	O:0.962303
with	O	O:0.990812
that	O	O:0.938071
:	O	O:0.998799
#CODE	O	O:0.997580
	
`	O	O:0.994290
std	O	O:0.578933
=	O	O:0.987665
RMS	O	O:0.920987
(	O	O:0.997295
data	O	O:0.981456
-	O	O:0.999812
mean	O	O:0.995386
)`	O	O:0.959637
.	O	O:0.981779
	
This	O	O:0.993507
generalized	O	O:0.990546
diagonal	O	O:0.996977
would	O	O:0.998542
be	O	O:0.999839
defined	O	O:0.997147
as	O	O:0.998876
those	O	O:0.997958
elements	O	O:0.991430
of	O	O:0.997830
the	O	O:0.997077
array	O	O:0.995402
whose	O	O:0.984143
0th	O	O:0.916219
and	O	O:0.997502
2nd	O	O:0.992453
index	O	O:0.992423
coincide	O	O:0.967230
,	O	O:0.998919
and	O	O:0.999430
would	O	O:0.999678
have	O	O:0.995416
shape	O	O:0.996425
(	O	O:0.996122
3	O	O:0.994472
,	O	O:0.997946
3	O	O:0.989978
,	O	O:0.998847
7	O	O:0.982625
)	O	O:0.997780
.	O	O:0.985769
	
I	O	O:0.998512
have	O	O:0.999810
a	O	O:0.998311
given	O	O:0.963527
array	O	O:0.991293
`	O	O:0.997475
[	O	O:0.991459
0	O	O:0.998963
,	O	O:0.996911
0	O	O:0.987152
,	O	O:0.998250
0	O	O:0.992240
,	O	O:0.998699
0	O	O:0.992241
,	O	O:0.998699
0	O	O:0.992204
,	O	O:0.998690
0	O	O:0.988124
,	O	O:0.998602
1	O	O:0.991515
,	O	O:0.998567
1	O	O:0.994984
,	O	O:0.998194
2	O	O:0.993372
,	O	O:0.998233
1	O	O:0.996329
,	O	O:0.998841
0	O	O:0.994491
,	O	O:0.998787
0	O	O:0.992757
,	O	O:0.998699
0	O	O:0.992204
,	O	O:0.998690
0	O	O:0.988180
,	O	O:0.998609
1	O	O:0.993513
,	O	O:0.998860
0	O	O:0.992925
,	O	O:0.998885
1	O	O:0.993250
,	O	O:0.998063
2	O	O:0.992900
,	O	O:0.998233
1	O	O:0.996838
,	O	O:0.999002
0	O	O:0.993664
,	O	O:0.998162
2	O	O:0.989827
,	O	O:0.997932
3	O	O:0.742460
`]	O	O:0.546499
(	O	O:0.999584
arbitrary	O	O:0.998008
elements	O	O:0.992061
from	O	O:0.989486
0-5	O	O:0.987799
)	O	O:0.998841
and	O	O:0.998812
I	O	O:0.999785
want	O	O:0.996600
to	O	O:0.997166
have	O	O:0.999978
a	O	O:0.999742
counter	O	O:0.985356
for	O	O:0.999696
the	O	O:0.999194
occurence	O	O:0.997192
of	O	O:0.999016
zeros	O	O:0.980439
in	O	O:0.999908
a	O	O:0.997550
row	O	O:0.952911
.	O	O:0.990806
	
To	O	O:0.993543
see	O	O:0.998837
the	O	O:0.999758
benefits	O	O:0.985718
of	O	O:0.999410
this	O	O:0.998047
,	O	O:0.999917
you	O	O:0.999737
need	O	O:0.999342
to	O	O:0.999730
use	O	O:0.999728
`	O	O:0.997230
z	O	O:0.937869
,	O	O:0.999721
p	O	O:0.962455
,	O	O:0.998549
k	O	O:0.984378
=	O	O:0.985174
butter	O	O:0.787777
(	O	O:0.999186
output=	O	O:0.845426
'	O	O:0.998164
zpk	O	O:0.969056
')`	O	O:0.998352
and	O	O:0.999681
then	O	O:0.998988
work	O	O:0.999527
with	O	O:0.999651
poles	O	O:0.993163
and	O	O:0.999844
zeros	O	O:0.996565
instead	O	O:0.997930
of	O	O:0.998512
numerator	O	O:0.890539
and	O	O:0.998058
denominator	O	O:0.966441
.	O	O:0.954702
	
In	O	O:0.997022
that	O	O:0.998985
case	O	O:0.999611
you	O	O:0.999508
would	O	O:0.998485
"	O	O:0.999867
extrapolate	O	O:0.986967
"	O	O:0.999422
zeros	O	O:0.954157
to	O	O:0.998313
the	O	O:0.999957
left	O	O:0.913638
and	O	O:0.999243
the	O	O:0.998807
right	O	O:0.943717
.	O	O:0.990699
	
can	O	O:0.996644
numpy	O	O:0.999692
interpret	O	O:0.999306
column	O	O:0.999463
of	O	O:0.999521
indices	O	O:0.994911
like	O	O:0.995487
matlab	O	O:0.995181
does	O	O:0.975419
	
To	O	O:0.995195
get	O	O:0.998085
the	O	O:0.999809
diagonal	O	O:0.998922
elements	O	O:0.992881
you	O	O:0.999386
can	O	O:0.999909
get	O	O:0.999992
their	O	O:0.999392
indices	O	O:0.997763
with	O	O:0.992495
`	O	O:0.994611
np.triu_indices	B-API	B-API:0.937522
`	O	O:0.997214
(	O	O:0.991285
or	O	O:0.999716
,	O	O:0.998930
for	O	O:0.999587
the	O	O:0.997383
lower	O	O:0.904806
triangle	O	O:0.993994
,	O	O:0.997089
`	O	O:0.996823
np.tril_indices	B-API	B-API:0.882754
`)	O	O:0.999419
and	O	O:0.999178
then	O	O:0.998863
index	O	O:0.999900
by	O	O:0.999699
them	O	O:0.976215
.	O	O:0.987357
	
The	O	O:0.987404
question	O	O:0.970976
states	O	O:0.995711
that	O	O:0.998174
the	O	O:0.999498
input	O	O:0.997022
array	O	O:0.987971
is	O	O:0.999155
of	O	O:0.997880
shape	O	O:0.965689
`	O	O:0.990364
(	O	O:0.986649
128	O	O:0.994280
,	O	O:0.997252
36	O	O:0.959377
,	O	O:0.996068
8)	O	O:0.936788
`	O	O:0.997663
and	O	O:0.997720
we	O	O:0.999545
are	O	O:0.997782
interested	O	O:0.982696
in	O	O:0.997151
finding	O	O:0.996475
unique	O	O:0.994115
subarrays	O	O:0.995592
of	O	O:0.996470
length	O	O:0.982556
`	O	O:0.998361
8	O	O:0.925527
`	O	O:0.998867
in	O	O:0.994464
the	O	O:0.999869
last	O	O:0.950594
dimension	O	O:0.991256
.	O	O:0.989638
	
What	O	O:0.995478
does	O	O:0.996857
work	O	O:0.998503
,	O	O:0.999888
however	O	O:0.986704
is	O	O:0.999411
nesting	O	O:0.985715
append	B-API	O:0.819081
and	O	O:0.991560
concatenate	B-API	O:0.767743
#CODE	O	O:0.930049
	
(	O	O:0.973266
`	O	O:0.998914
b	O	O:0.821389
`	O	O:0.999744
will	O	O:0.992415
be	O	O:0.999776
broadcast	O	O:0.993392
along	O	O:0.770166
(	O	O:0.995855
?	O	O:0.996799
)	O	O:0.999307
the	O	O:0.998988
first	O	O:0.995240
axis	O	O:0.973629
)	O	O:0.997795
#CODE	O	O:0.990356
	
As	O	O:0.995755
he	O	O:0.997793
points	O	O:0.995722
out	O	O:0.993794
,	O	O:0.999733
the	O	O:0.997285
`	O	O:0.995122
[	O	O:0.994803
0	O	O:0.998465
]	O	O:0.988617
[	O	O:0.986919
1	O	O:0.991073
]`	O	O:0.990683
element	O	O:0.905228
is	O	O:0.999328
what	O	O:0.987475
you'd	O	O:0.999382
want	O	O:0.996191
for	O	O:0.998599
`	O	O:0.991691
cov	B-API	B-API:0.500879
(	O	O:0.999773
a	O	O:0.988898
,	O	O:0.995244
b	O	O:0.992262
)`	O	O:0.967328
.	O	O:0.979137
	
returns	O	O:0.933139
`	O	O:0.996256
1	O	O:0.805472
`	O	O:0.999442
,	O	O:0.997007
making	O	O:0.996389
the	O	O:0.986338
sum	O	O:0.872493
not	O	O:0.998351
commutative	O	O:0.988356
!	O	O:0.991030
	
But	O	O:0.997088
as	O	O:0.999304
I	O	O:0.999462
have	O	O:0.999531
a	O	O:0.997078
log	O	O:0.996866
of	O	O:0.997200
values	O	O:0.692178
(	O	O:0.999010
10000+	O	O:0.993314
)	O	O:0.996256
,	O	O:0.999619
this	O	O:0.998526
will	O	O:0.997928
be	O	O:0.999743
quite	O	O:0.998526
slow	O	O:0.843074
.	O	O:0.982916
	
@USER	O	O:0.959325
-	O	O:0.998491
good	O	O:0.954651
point	O	O:0.997911
.	O	O:0.996850
anyway	O	O:0.997429
,	O	O:0.998882
`	O	O:0.999454
diff	B-API	B-API:0.965899
`	O	O:0.999382
works	O	O:0.979735
on	O	O:0.999599
python	O	O:0.988418
lists	O	O:0.977975
too	O	O:0.962304
.	O	O:0.993134
	
It	O	O:0.995151
will	O	O:0.999042
also	O	O:0.999809
work	O	O:0.999780
if	O	O:0.999646
they	O	O:0.997781
are	O	O:0.999842
both	O	O:0.997534
arrays	O	O:0.996495
that	O	O:0.996442
can	O	O:0.999691
be	O	O:0.999859
broadcast	O	O:0.987554
.	O	O:0.981019
	
It's	O	O:0.996166
column	O	O:0.999347
stack	O	O:0.972042
that	O	O:0.998845
requires	O	O:0.997809
equal	O	O:0.996314
length	O	O:0.988467
strings	O	O:0.895410
.	O	O:0.992683
	
In	O	O:0.992921
the	O	O:0.998623
end	O	O:0.984002
it	O	O:0.988154
is	O	O:0.996147
usually	O	O:0.990675
not	O	O:0.998476
too	O	O:0.994622
complicated	O	O:0.991128
,	O	O:0.999205
especially	O	O:0.997244
if	O	O:0.999537
you	O	O:0.997730
use	O	O:0.992301
[	O	O:0.990829
`	O	O:0.996664
mgrid	B-API	B-API:0.984611
`]	O	O:0.731990
(	O	O:0.990721
#URL	O	O:0.994466
)	O	O:0.999246
or	O	O:0.999109
similar	O	O:0.999253
to	O	O:0.999528
get	O	O:0.999921
the	O	O:0.999304
indices	O	O:0.975837
.	O	O:0.991267
	
The	O	O:0.996615
absolute	O	O:0.981566
error	O	O:0.996181
will	O	O:0.998393
be	O	O:0.999420
at	O	O:0.999943
most	O	O:0.953769
1	O	O:0.989438
/	O	O:0.993556
2	O	O:0.985999
ULP	O	O:0.990319
,	O	O:0.997383
2	O	O:0.985556
-150	O	O:0.944293
.	O	O:0.989033
	
AttributeError	O	O:0.908810
:	O	O:0.978373
'	O	O:0.996003
Add	O	O:0.979667
'	O	O:0.977174
object	O	O:0.989779
has	O	O:0.997268
no	O	O:0.995720
attribute	O	O:0.978841
'	O	O:0.995783
log	O	O:0.983798
'	O	O:0.996216
Python	O	O:0.985011
	
Or	O	O:0.995272
,	O	O:0.999562
you	O	O:0.999020
could	O	O:0.999836
initialize	O	O:0.998940
an	O	O:0.999815
array	O	O:0.998623
of	O	O:0.999415
all	O	O:0.998016
zeros	O	O:0.998367
if	O	O:0.999154
you	O	O:0.999722
know	O	O:0.998449
the	O	O:0.999919
size	O	O:0.991163
of	O	O:0.998698
the	O	O:0.999201
array	O	O:0.998997
ahead	O	O:0.990064
of	O	O:0.998707
time	O	O:0.961968
.	O	O:0.996612
	
Are	O	O:0.993750
you	O	O:0.999414
checking	O	O:0.999226
shape	O	O:0.997101
or	O	O:0.999183
number	O	O:0.998275
of	O	O:0.999537
nonzero	O	O:0.982114
values	O	O:0.986371
?	O	O:0.988119
	
Something	O	O:0.997907
like	O	O:0.993728
`	O	O:0.999615
eigvals	O	O:0.942805
,	O	O:0.999534
eigvecs	O	O:0.903374
=	O	O:0.983902
la.eigh	O	O:0.636967
(	O	O:0.997550
mat	B-API	O:0.991334
)`	O	O:0.973030
`	O	O:0.996861
principal	O	O:0.966604
=	O	O:0.995746
eigvecs	O	O:0.822758
[:	O	O:0.990429
,	O	O:0.998952
eigvals.argmax()	O	O:0.626472
]`	O	O:0.987045
`	O	O:0.997497
if	O	O:0.961100
(	O	O:0.999641
principal	O	O:0.973211
>	O	O:0.994590
=	O	O:0.988829
0	O	O:0.994296
)	O	O:0.998702
.all()	O	B-API:0.980227
or	O	O:0.986006
(	O	O:0.999251
pricipal	O	O:0.988743
<=	O	O:0.996989
0	O	O:0.993273
)	O	O:0.992490
.all()	O	B-API:0.992469
:	O	O:0.997987
print	O	O:0.986450
'	O	O:0.998527
all	O	O:0.998299
the	O	O:0.999586
same	O	O:0.975018
'`	O	O:0.995444
?	O	O:0.994725
	
I	O	O:0.998488
also	O	O:0.999694
want	O	O:0.999131
bins	O	O:0.989143
to	O	O:0.999780
have	O	O:0.999988
a	O	O:0.999775
width	O	O:0.996419
of	O	O:0.998232
.5	O	O:0.899913
so	O	O:0.999757
that	O	O:0.997528
I	O	O:0.999778
can	O	O:0.999918
have	O	O:0.999827
a	O	O:0.999772
bin	O	O:0.972229
from	O	O:0.998396
10.5	O	O:0.962962
to	O	O:0.999261
11	O	O:0.998755
or	O	O:0.998879
24	O	O:0.987611
to	O	O:0.999674
24.5	O	O:0.983191
etc	O	O:0.998433
...	O	O:0.999237
because	O	O:0.998880
otherwise	O	O:0.998598
,	O	O:0.999914
python	O	O:0.992131
outputs	O	O:0.995302
the	O	O:0.998025
histogram	O	O:0.998251
with	O	O:0.998466
the	O	O:0.999737
bins	O	O:0.980363
random	O	O:0.963490
and	O	O:0.999117
undetermined	O	O:0.966787
.	O	O:0.965431
	
Maximum	O	O:0.905727
is	O	O:0.997785
always	O	O:0.991613
bigger	O	O:0.991885
than	O	O:0.985913
the	O	O:0.994391
minimum	O	O:0.911615
(	O	O:0.999412
more	O	O:0.990321
to	O	O:0.999423
the	O	O:0.999946
right	O	O:0.996705
on	O	O:0.999698
a	O	O:0.999180
1d	O	O:0.972726
axis	O	O:0.974974
,	O	O:0.999560
not	O	O:0.999465
by	O	O:0.999358
absolute	O	O:0.995519
value	O	O:0.991365
)	O	O:0.997280
.	O	O:0.986292
	
should	O	O:0.995219
give	O	O:0.997541
the	O	O:0.999857
sum	O	O:0.967848
of	O	O:0.999640
the	O	O:0.998979
columns	O	O:0.996743
.	O	O:0.988633
	
Suppose	O	O:0.968318
,	O	O:0.998868
You	O	O:0.998698
wanna	O	O:0.999280
check	O	O:0.998507
how	O	O:0.999818
many	O	O:0.996223
times	O	O:0.995722
you	O	O:0.999629
will	O	O:0.999563
get	O	O:0.999568
six	O	O:0.999628
if	O	O:0.999621
you	O	O:0.998699
roll	O	O:0.989223
dice	O	O:0.995454
10	O	O:0.991982
times	O	O:0.982245
.	O	O:0.987376
	
With	O	O:0.998473
this	O	O:0.994096
option	O	O:0.998108
,	O	O:0.999885
the	O	O:0.998421
result	O	O:0.997864
will	O	O:0.999677
broadcast	O	O:0.996799
correctly	O	O:0.998735
	
Do	O	O:0.991789
you	O	O:0.999596
mean	O	O:0.999117
`	O	O:0.999668
indices	O	O:0.958276
=	O	O:0.988030
np.where	B-API	B-API:0.893522
(	O	O:0.998693
a	O	O:0.989888
==	O	O:0.968225
a.max()	O	O:0.895896
)`	O	O:0.976843
in	O	O:0.998802
line	O	O:0.975092
3	O	O:0.988793
?	O	O:0.996014
	
The	O	O:0.992481
problem	O	O:0.991541
I	O	O:0.999366
have	O	O:0.999693
much	O	O:0.980897
later	O	O:0.999488
on	O	O:0.998237
in	O	O:0.999517
the	O	O:0.999530
code	O	O:0.925032
is	O	O:0.999577
that	O	O:0.997885
if	O	O:0.999889
one	O	O:0.999523
of	O	O:0.999155
these	O	O:0.994591
parameters	O	O:0.974209
isn't	O	O:0.995433
in	O	O:0.998640
the	O	O:0.997104
ASCII	O	O:0.989697
file	O	O:0.987574
it	O	O:0.997429
throws	O	O:0.998527
errors	O	O:0.994387
up	O	O:0.996088
so	O	O:0.999382
I	O	O:0.999651
have	O	O:0.999543
to	O	O:0.999673
keep	O	O:0.999573
adding	O	O:0.994395
in	O	O:0.999470
ones	O	O:0.980681
I	O	O:0.999135
don't	O	O:0.999677
need	O	O:0.973355
.	O	O:0.997401
	
`	O	O:0.995172
append	B-API	B-API:0.929600
`	O	O:0.999265
adds	O	O:0.995668
them	O	O:0.996242
to	O	O:0.999554
the	O	O:0.999989
end	O	O:0.995868
of	O	O:0.998265
the	O	O:0.997519
list	O	O:0.988509
,	O	O:0.998982
which	O	O:0.997183
is	O	O:0.998790
exactly	O	O:0.999003
what	O	O:0.997803
you	O	O:0.999131
want	O	O:0.995979
.	O	O:0.996104
	
I	O	O:0.997671
have	O	O:0.997293
two	O	O:0.992862
3dim	O	O:0.988751
numpy	O	O:0.986018
matrices	O	O:0.978604
and	O	O:0.999093
I	O	O:0.999774
want	O	O:0.995390
to	O	O:0.993004
do	O	O:0.999914
a	O	O:0.999083
dot	O	O:0.616356
product	O	O:0.998093
according	O	O:0.978484
to	O	O:0.998448
one	O	O:0.999957
axis	O	O:0.998622
without	O	O:0.998115
using	O	O:0.999485
a	O	O:0.986710
loop	O	O:0.833220
in	O	O:0.994744
theano	O	O:0.939807
.	O	O:0.989362
	
you	O	O:0.998830
have	O	O:0.998427
at	O	O:0.999954
most	O	O:0.995717
4	O	O:0.990301
in	O	O:0.999265
that	O	O:0.992516
dimension	O	O:0.993485
(	O	O:0.998730
see	O	O:0.999766
your	O	O:0.996704
reshape	O	O:0.983329
line	O	O:0.993745
)	O	O:0.998973
,	O	O:0.999020
so	O	O:0.994179
the	O	O:0.997512
index	O	O:0.998698
it	O	O:0.999689
will	O	O:0.999598
count	O	O:0.996548
are	O	O:0.999035
0	O	O:0.989302
and	O	O:0.993706
2	O	O:0.878219
(	O	O:0.970803
1	O	O:0.982271
and	O	O:0.995471
3	O	O:0.983581
are	O	O:0.990787
skipped	O	O:0.971988
,	O	O:0.998422
and	O	O:0.998601
3	O	O:0.934918
is	O	O:0.996570
the	O	O:0.999158
last	O	O:0.953518
element	O	O:0.988806
)	O	O:0.996685
.	O	O:0.988808
	
Once	O	O:0.998192
we	O	O:0.999652
have	O	O:0.999749
the	O	O:0.999727
indices	O	O:0.991247
to	O	O:0.999323
sort	O	O:0.998582
`	O	O:0.999909
data	O	O:0.938336
`	O	O:0.999895
,	O	O:0.999310
to	O	O:0.999709
get	O	O:0.999965
a	O	O:0.999672
sorted	O	O:0.998592
copy	O	O:0.895416
of	O	O:0.998077
the	O	O:0.966448
array	O	O:0.993013
it	O	O:0.992004
is	O	O:0.999488
faster	O	O:0.990606
to	O	O:0.998247
use	O	O:0.999843
the	O	O:0.995428
indices	O	O:0.985638
than	O	O:0.998627
to	O	O:0.999500
re-sort	O	O:0.998847
the	O	O:0.988609
array	O	O:0.856290
:	O	O:0.995103
#CODE	O	O:0.996804
	
I	O	O:0.996163
hope	O	O:0.993773
this	O	O:0.992350
will	O	O:0.999255
help	O	O:0.997536
you	O	O:0.999321
perform	O	O:0.998557
your	O	O:0.996566
transpose	O	O:0.965674
and	O	O:0.999918
column-wise	O	O:0.953866
operations	O	O:0.947997
	
It	O	O:0.977401
is	O	O:0.998254
better	O	O:0.988529
to	O	O:0.998997
specify	O	O:0.997591
that	O	O:0.996179
I'm	O	O:0.999534
looking	O	O:0.998464
for	O	O:0.999799
something	O	O:0.997150
that	O	O:0.987059
performs	O	O:0.995959
the	O	O:0.999401
log-sum-exp	O	O:0.950736
trick	O	O:0.997206
,	O	O:0.999802
doing	O	O:0.999757
a	O	O:0.994963
simply	O	O:0.986782
succession	O	O:0.999153
of	O	O:0.991795
exp	O	O:0.817370
elem-wise	O	O:0.995105
,	O	O:0.998125
summing	O	O:0.998100
the	O	O:0.999325
rows	O	O:0.957183
and	O	O:0.999756
doing	O	O:0.999857
a	O	O:0.980777
log	O	O:0.905982
elem-wise	O	O:0.932757
is	O	O:0.998559
trivial	O	O:0.956294
in	O	O:0.996915
`	O	O:0.983640
scipy.sparse	O	B-API:0.987803
`	O	O:0.997658
.	O	O:0.960734
	
Scipy	O	O:0.977368
uses	O	O:0.721398
`	O	O:0.997435
int32	O	B-API:0.591712
`	O	O:0.999276
to	O	O:0.996291
store	O	O:0.996788
`	O	O:0.996666
indptr	O	B-API:0.857182
`	O	O:0.998972
and	O	O:0.989428
`	O	O:0.999675
indices	O	O:0.591637
`	O	O:0.998256
for	O	O:0.994636
the	O	O:0.998530
sparse	O	O:0.905623
formats	O	O:0.938959
.	O	O:0.983713
	
But	O	O:0.993392
not	O	O:0.999045
able	O	O:0.998117
to	O	O:0.999492
plot	O	O:0.998667
it	O	O:0.999615
as	O	O:0.999892
a	O	O:0.990422
graph	O	O:0.826810
(	O	O:0.999579
something	O	O:0.999576
like	O	O:0.999504
a	O	O:0.999547
histogram	O	O:0.976608
)	O	O:0.999592
...	O	O:0.998271
that	O	O:0.980162
is	O	O:0.999805
the	O	O:0.993416
problem	O	O:0.955358
.	O	O:0.981722
	
It	O	O:0.992810
gave	O	O:0.982642
error	O	O:0.996444
testing	O	O:0.990101
doesnot	O	O:0.989762
have	O	O:0.997128
attribute	O	O:0.999791
append	O	O:0.983615
as	O	O:0.999333
its	O	O:0.962059
of	O	O:0.994341
None	O	O:0.888890
Type	O	O:0.993838
.	O	O:0.984315
	
In	O	O:0.998016
both	O	O:0.995716
cases	O	O:0.996267
,	O	O:0.999449
you	O	O:0.999012
can	O	O:0.999718
access	O	O:0.999954
individual	O	O:0.999734
elements	O	O:0.998961
by	O	O:0.996152
indices	O	O:0.995480
,	O	O:0.999374
like	O	O:0.997517
`	O	O:0.998945
R	O	O:0.922269
[	O	O:0.999173
0	O	O:0.946534
]`	O	O:0.940154
(	O	O:0.995597
which	O	O:0.997146
would	O	O:0.999527
give	O	O:0.998280
you	O	O:0.999934
a	O	O:0.999512
specific	O	O:0.972603
object	O	O:0.995498
,	O	O:0.999812
a	O	O:0.995898
`	O	O:0.992163
np.void	O	O:0.550177
`	O	O:0.999443
,	O	O:0.998250
that	O	O:0.999345
still	O	O:0.998678
gives	O	O:0.999252
you	O	O:0.999172
the	O	O:0.999709
possibility	O	O:0.998572
to	O	O:0.998853
access	O	O:0.999483
the	O	O:0.999866
fields	O	O:0.997410
separately	O	O:0.993459
)	O	O:0.999917
,	O	O:0.999494
or	O	O:0.999856
by	O	O:0.997593
slices	O	O:0.990842
`	O	O:0.995243
R	O	O:0.862326
[	O	O:0.993749
1	O	O:0.965434
:	O	O:0.994141
-1	O	O:0.969692
]`	O	O:0.997071
...	O	O:0.946449
	
I	O	O:0.998337
think	O	O:0.998592
you	O	O:0.994465
can	O	O:0.999738
have	O	O:0.999983
a	O	O:0.999915
sum	O	O:0.984111
over	O	O:0.998966
a	O	O:0.995110
sliding	O	B-API:0.845155
window	O	O:0.972792
(	O	O:0.996442
or	O	O:0.999838
a	O	O:0.998203
rolling	O	B-API:0.970139
window	O	O:0.996910
)	O	O:0.998871
or	O	O:0.999623
a	O	O:0.999735
mean	O	O:0.993318
over	O	O:0.996074
a	O	O:0.994408
sliding	O	B-API:0.836507
window	O	O:0.980309
.	O	O:0.982494
	
I	O	O:0.976555
got	O	O:0.998889
your	O	O:0.963354
point	O	O:0.974384
and	O	O:0.999406
I	O	O:0.999573
find	O	O:0.983731
it	O	O:0.996523
more	O	O:0.989755
logical	O	O:0.890645
,	O	O:0.997891
but	O	O:0.999045
when	O	O:0.994832
trying	O	O:0.999072
the	O	O:0.999788
code	O	O:0.978122
you've	O	O:0.997213
suggested	O	O:0.998168
to	O	O:0.999011
get	O	O:0.999910
rid	O	O:0.998880
of	O	O:0.999349
the	O	O:0.999056
second	O	O:0.995666
error	O	O:0.994134
I	O	O:0.998157
got	O	O:0.999470
another	O	O:0.926514
error	O	O:0.903494
:	O	O:0.985920
`	O	O:0.993560
AttributeError	O	O:0.967120
:	O	O:0.999000
flatten	B-API	O:0.834772
`	O	O:0.993210
	
`	O	O:0.994349
dot	B-API	B-API:0.838375
`	O	O:0.998755
does	O	O:0.991398
many	O	O:0.999391
things	O	O:0.994380
under	O	O:0.998640
the	O	O:0.998754
hood	O	O:0.958461
,	O	O:0.999038
it	O	O:0.996499
is	O	O:0.999121
apparent	O	O:0.990806
that	O	O:0.994352
`	O	O:0.993378
np.dot	B-API	B-API:0.945399
(	O	O:0.996388
A	O	O:0.993549
,	O	O:0.998942
x	O	O:0.986536
)`	O	O:0.851706
is	O	O:0.997256
not	O	O:0.992191
calling	O	O:0.993660
BLAS	O	O:0.915624
and	O	O:0.997254
is	O	O:0.998477
somehow	O	O:0.987876
defaulting	O	O:0.998211
over	O	O:0.983477
to	O	O:0.989795
numpy's	O	O:0.998180
internal	O	O:0.917728
GEMM	O	O:0.982811
routine	O	O:0.976110
.	O	O:0.986325
	
Below	O	O:0.929777
is	O	O:0.999384
some	O	O:0.993463
code	O	O:0.973400
which	O	O:0.997383
uses	O	O:0.996100
a	O	O:0.997584
callback	O	O:0.988225
to	O	O:0.999476
print	O	O:0.999389
out	O	O:0.996366
the	O	O:0.998655
current	O	O:0.984860
azimuthal	O	O:0.981217
and	O	O:0.999158
elevation	O	O:0.974733
angles	O	O:0.923338
,	O	O:0.998990
as	O	O:0.999832
well	O	O:0.998116
as	O	O:0.999802
append	O	O:0.994168
them	O	O:0.962337
to	O	O:0.999314
a	O	O:0.999905
list	O	O:0.936131
for	O	O:0.999618
further	O	O:0.987234
use	O	O:0.982424
later	O	O:0.935938
.	O	O:0.978396
	
It's	O	O:0.994139
super	O	O:0.996683
alex	O	O:0.995223
,	O	O:0.999581
here	O	O:0.990626
to	O	O:0.997757
answer	O	O:0.999856
NumPy	O	O:0.998920
questions	O	O:0.979884
in	O	O:0.998679
the	O	O:0.999187
blink	O	O:0.997349
of	O	O:0.997748
an	O	O:0.992878
eye	O	O:0.995308
:)	O	O:0.982621
	
Your	O	O:0.997584
solution	O	O:0.996475
of	O	O:0.998584
searching	O	O:0.996716
the	O	O:0.999434
eigenvalues	O	O:0.961050
for	O	O:0.999314
the	O	O:0.999699
ones	O	O:0.969486
you	O	O:0.999466
want	O	O:0.999374
seems	O	O:0.998991
plausible	O	O:0.994183
enough	O	O:0.977631
.	O	O:0.988693
	
If	O	O:0.993095
d	O	O:0.942394
is	O	O:0.998347
larger	O	O:0.951677
than	O	O:0.993430
8	O	O:0.976421
or	O	O:0.998146
9	O	O:0.993376
,	O	O:0.999952
then	O	O:0.998433
bases	O	O:0.998966
will	O	O:0.999137
be	O	O:0.999809
sufficiently	O	O:0.999147
long	O	O:0.995372
that	O	O:0.993796
you	O	O:0.999391
probably	O	O:0.998790
would	O	O:0.999699
be	O	O:0.999648
better	O	O:0.998922
off	O	O:0.996048
going	O	O:0.992878
with	O	O:0.995530
the	O	O:0.999373
other	O	O:0.997885
version	O	O:0.997598
using	O	O:0.995318
the	O	O:0.994775
dot	O	B-API:0.583759
product	O	O:0.958179
.	O	O:0.966248
	
I'm	O	O:0.989210
not	O	O:0.999193
sure	O	O:0.998874
which	O	O:0.998274
indices	O	O:0.995473
i	O	O:0.998691
need	O	O:0.999249
to	O	O:0.999812
change	O	O:0.999465
to	O	O:0.998124
achieve	O	O:0.999084
the	O	O:0.999122
minimum	O	O:0.935034
and	O	O:0.998889
not	O	O:0.999216
the	O	O:0.999491
maximum	O	O:0.966624
values	O	O:0.952977
.	O	O:0.991457
	
The	O	O:0.996946
dimension	O	O:0.996914
of	O	O:0.999279
`	O	O:0.997754
result	O	O:0.955184
`	O	O:0.998327
has	O	O:0.990336
been	O	O:0.998997
set	O	O:0.992418
earlier	O	O:0.991362
to	O	O:0.999190
the	O	O:0.999920
correct	O	O:0.995290
dimension	O	O:0.998408
,	O	O:0.999812
so	O	O:0.998812
can	O	O:0.998128
check	O	O:0.999695
it	O	O:0.998886
,	O	O:0.997398
but	O	O:0.999136
it	O	O:0.998270
would	O	O:0.999687
be	O	O:0.999888
nice	O	O:0.998186
to	O	O:0.999696
only	O	O:0.999650
use	O	O:0.999393
the	O	O:0.997759
length	O	O:0.988267
of	O	O:0.995028
`	O	O:0.998902
indices	O	O:0.878075
`	O	O:0.999388
to	O	O:0.995442
determine	O	O:0.998935
it	O	O:0.994597
.	O	O:0.992813
	
Alternatively	O	O:0.981369
,	O	O:0.999839
what	O	O:0.998982
about	O	O:0.998146
applying	O	O:0.993860
the	O	O:0.996339
same	O	O:0.972014
function	O	O:0.999668
without	O	O:0.996995
indices	O	O:0.990974
along	O	O:0.987516
the	O	O:0.996146
depth	O	O:0.974006
axes	O	O:0.977710
?	O	O:0.997742
	
Here's	O	O:0.993357
an	O	O:0.981530
O	O	B-API:0.509623
(	O	O:0.996318
n	O	O:0.978833
log	O	O:0.998205
n	O	O:0.992157
)	O	O:0.999267
algorithm	O	O:0.962264
for	O	O:0.999921
your	O	O:0.963001
problem	O	O:0.942218
.	O	O:0.991509
	
You	O	O:0.998054
need	O	O:0.997838
to	O	O:0.999616
add	O	O:0.999618
axes	O	O:0.995123
to	O	O:0.996556
`	O	O:0.999906
coeffs	O	O:0.594964
`	O	O:0.999640
so	O	O:0.994618
it	O	O:0.999794
will	O	O:0.999436
broadcast	O	O:0.994562
in	O	O:0.999845
the	O	O:0.996546
dimension	O	O:0.953615
(	O	O:0.998609
s	O	O:0.992378
)	O	O:0.999408
you	O	O:0.997977
want	O	O:0.995897
.	O	O:0.994891
	
If	O	O:0.995396
you	O	O:0.999562
want	O	O:0.998964
to	O	O:0.999234
search	O	O:0.999181
for	O	O:0.999883
a	O	O:0.998567
certain	O	O:0.968298
rank	O	O:0.969099
on	O	O:0.999772
B	O	O:0.992856
randomly	O	O:0.996845
,	O	O:0.999305
you	O	O:0.999772
need	O	O:0.999483
to	O	O:0.999901
start	O	O:0.999874
off	O	O:0.999122
with	O	O:0.999549
a	O	O:0.999532
valid	O	O:0.968656
B	O	O:0.990397
with	O	O:0.995660
max	O	O:0.959331
rank	O	O:0.953117
,	O	O:0.999447
and	O	O:0.999223
rotate	O	O:0.989339
a	O	O:0.996794
random	O	O:0.929949
column	O	O:0.998653
j	O	O:0.992391
of	O	O:0.999817
a	O	O:0.997244
random	O	O:0.864008
B	O	O:0.994677
i	O	O:0.995807
by	O	O:0.998925
a	O	O:0.996616
random	O	B-API:0.536308
amount	O	O:0.971853
.	O	O:0.981756
	
I	O	O:0.998734
want	O	O:0.997670
to	O	O:0.998053
save	O	O:0.999375
some	O	O:0.995478
histogram	O	O:0.999847
data	O	O:0.996277
in	O	O:0.999876
a	O	O:0.998956
csv	O	O:0.979539
file	O	O:0.986820
.	O	O:0.990215
	
I	O	O:0.998581
want	O	O:0.996281
to	O	O:0.997967
read	O	O:0.999305
a	O	O:0.997597
mat	O	O:0.992448
file	O	O:0.999431
back	O	O:0.931914
in	O	O:0.998372
python	O	O:0.984217
but	O	O:0.998847
I	O	O:0.999717
have	O	O:0.999256
trouble	O	O:0.996477
going	O	O:0.998456
back	O	O:0.985105
to	O	O:0.999762
a	O	O:0.999770
graph	O	O:0.989922
,	O	O:0.999428
because	O	O:0.998914
the	O	O:0.997125
mat	O	O:0.992852
file	O	O:0.993007
gives	O	O:0.996778
a	O	O:0.996452
numpy.ndarray	B-API	B-API:0.794648
type	O	O:0.966194
file	O	O:0.983938
and	O	O:0.999758
I	O	O:0.999864
need	O	O:0.998956
a	O	O:0.992478
sparse	O	O:0.897731
matrix	O	O:0.997209
to	O	O:0.997451
reconstruct	O	O:0.993456
my	O	O:0.992552
graph	O	O:0.991401
.	O	O:0.993820
	
numpy	O	O:0.948558
makes	O	O:0.985834
it	O	O:0.999158
easy	O	O:0.989129
to	O	O:0.999285
translate	O	O:0.999318
python	O	O:0.999055
objects	O	O:0.998471
into	O	O:0.987192
numpy	O	O:0.992400
ndarrays	O	O:0.967644
,	O	O:0.996817
and	O	O:0.999714
will	O	O:0.999330
even	O	O:0.999763
pick	O	O:0.998468
an	O	O:0.999486
appropriate	O	O:0.999802
resulting	O	O:0.999401
data	O	O:0.999083
type	O	O:0.983896
if	O	O:0.999332
one	O	O:0.984364
is	O	O:0.997768
not	O	O:0.988492
specified	O	O:0.948805
:	O	O:0.991314
#CODE	O	O:0.990913
	
This	O	O:0.984945
`	O	O:0.997529
T	O	O:0.755980
`	O	O:0.998485
and	O	O:0.951091
`	O	O:0.999216
X	O	O:0.581960
`	O	O:0.999599
broadcast	O	O:0.964042
together	O	O:0.997529
just	O	O:0.995692
fine	O	O:0.995846
,	O	O:0.999319
for	O	O:0.998909
example	O	O:0.955543
`	O	O:0.998046
T*X	O	O:0.566743
`	O	O:0.996852
works	O	O:0.961672
.	O	O:0.996313
	
I	O	O:0.998548
have	O	O:0.999613
a	O	O:0.995390
numpy	O	O:0.957919
matrix	O	O:0.975488
A	O	O:0.996518
and	O	O:0.999551
I	O	O:0.999627
need	O	O:0.999215
a	O	O:0.980319
function	O	O:0.997236
that	O	O:0.998688
will	O	O:0.999562
count	O	O:0.961882
(	O	O:0.998374
A	O	O:0.993586
[	O	O:0.997661
i	O	O:0.992168
,	O	O:0.999478
j	O	O:0.985732
]	O	O:0.994098
/	O	O:0.997449
sum	O	O:0.990171
of	O	O:0.999704
all	O	O:0.998972
elements	O	O:0.993083
in	O	O:0.998058
i-th	O	O:0.997822
column	O	O:0.997553
)	O	O:0.998765
-	O	O:0.992994
A	O	O:0.991917
[	O	O:0.997922
i	O	O:0.989111
,	O	O:0.999378
j	O	O:0.985731
]	O	O:0.994098
/	O	O:0.997449
sum	O	O:0.990171
of	O	O:0.999704
all	O	O:0.998913
elements	O	O:0.992314
in	O	O:0.998294
j-th	O	O:0.991678
row	O	O:0.992414
	
This	O	O:0.995303
also	O	O:0.989743
works	O	O:0.999661
if	O	O:0.998562
,	O	O:0.999597
instead	O	O:0.999546
of	O	O:0.999852
a	O	O:0.998951
single	O	O:0.988587
index	O	O:0.999430
,	O	O:0.999189
you	O	O:0.999464
provide	O	O:0.994519
an	O	O:0.999608
array	O	O:0.999178
of	O	O:0.994287
indices	O	O:0.734456
:	O	O:0.996605
#CODE	O	O:0.995832
	
How	O	O:0.992421
to	O	O:0.997366
solve	O	O:0.998674
nonlinear	O	O:0.986329
equation	O	O:0.995946
without	O	O:0.980584
sympy	O	O:0.790341
(	O	O:0.990332
max	O	O:0.880182
and	O	O:0.999369
min	O	O:0.962868
)	O	O:0.994455
?	O	O:0.983171
	
Bivariate	O	O:0.985905
Legendre	O	O:0.747589
Polynomial	O	O:0.650176
Fitting	O	O:0.978601
to	O	O:0.999207
find	O	O:0.999262
orthogonal	O	O:0.992446
coefficents	O	O:0.995066
	
I	O	O:0.998541
have	O	O:0.999546
a	O	O:0.997071
big	O	O:0.978582
n-square	O	O:0.945862
diagonal	O	O:0.992813
matrix	O	O:0.997552
,	O	O:0.998749
in	O	O:0.999228
the	O	O:0.996987
scipy's	O	O:0.988554
sparse	O	O:0.969487
DIA	O	O:0.969698
format	O	O:0.971869
	
To	O	O:0.997801
find	O	O:0.992751
the	O	O:0.999845
most	O	O:0.995330
frequent	O	O:0.996577
value	O	O:0.997735
of	O	O:0.999442
a	O	O:0.999189
flat	O	O:0.870761
array	O	O:0.997662
,	O	O:0.997834
use	O	O:0.991298
`	O	O:0.996691
unique	B-API	B-API:0.533925
`	O	O:0.999076
,	O	O:0.971299
`	O	O:0.996448
bincount	B-API	B-API:0.967784
`	O	O:0.998079
and	O	O:0.988591
`	O	O:0.981410
argmax	B-API	B-API:0.998562
`	O	O:0.984775
:	O	O:0.953411
#CODE	O	O:0.997394
	
The	O	O:0.994178
funny	O	O:0.981246
thing	O	O:0.997069
is	O	O:0.994150
in	O	O:0.998903
the	O	O:0.998590
above	O	O:0.897886
function	O	O:0.994903
If	O	O:0.998124
i	O	O:0.999376
pass	O	O:0.988984
an	O	O:0.998522
extra	O	O:0.953685
argument	O	O:0.979484
and	O	O:0.999553
just	O	O:0.997351
divide	O	O:0.974527
sum	O	O:0.982402
by	O	O:0.998797
it	O	O:0.999424
,	O	O:0.999701
then	O	O:0.999485
the	O	O:0.999819
times	O	O:0.991108
are	O	O:0.999043
the	O	O:0.999862
same	O	O:0.982305
again	O	O:0.988906
.	O	O:0.996770
	
are	O	O:0.996895
the	O	O:0.999812
same	O	O:0.994634
as	O	O:0.999511
the	O	O:0.999742
ones	O	O:0.984979
posted	O	O:0.981244
in	O	O:0.999762
the	O	O:0.999595
examples	O	O:0.988994
of	O	O:0.999321
this	O	O:0.996498
web	O	O:0.995681
page	O	O:0.979293
.	O	O:0.983069
	
How	O	O:0.994932
to	O	O:0.999204
remove	O	O:0.996975
rings	O	O:0.995484
from	O	O:0.996714
convolve	O	O:0.986008
healpix	O	O:0.914292
map	O	O:0.523177
?	O	O:0.988933
	
With	O	O:0.995095
the	O	O:0.999280
information	O	O:0.997821
of	O	O:0.998407
the	O	O:0.999423
full	O	O:0.998613
stack	O	O:0.989747
trace	O	O:0.990096
report	O	O:0.988576
the	O	O:0.998393
bug	O	O:0.992020
to	O	O:0.998056
the	O	O:0.999858
ubuntu	O	O:0.980084
team	O	O:0.983063
.	O	O:0.993495
	
fastest	O	O:0.974945
way	O	O:0.996200
to	O	O:0.999230
get	O	O:0.999420
lookup	O	O:0.991074
table	O	O:0.999534
indices	O	O:0.995339
with	O	O:0.997674
numpy	O	O:0.989115
	
Well	O	O:0.991232
,	O	O:0.999788
a	O	O:0.998298
few	O	O:0.979941
more	O	O:0.991757
,	O	O:0.996284
anyway	O	O:0.978725
:	O	O:0.998403
`	O	O:0.999114
cos	B-API	B-API:0.549335
`	O	O:0.999487
,	O	O:0.979222
`	O	O:0.999470
pi	B-API	O:0.594136
`	O	O:0.999459
,	O	O:0.982435
`	O	O:0.999454
diag	B-API	B-API:0.882614
`	O	O:0.998700
	
I	O	O:0.995703
implemented	O	O:0.998245
a	O	O:0.985153
LOWESS	O	O:0.904573
smoother	O	O:0.894798
(	O	O:0.998489
which	O	O:0.992565
is	O	O:0.999212
the	O	O:0.997773
curve	O	O:0.996012
you	O	O:0.998748
see	O	O:0.999341
)	O	O:0.999905
with	O	O:0.999591
a	O	O:0.998836
tight	O	O:0.935040
fit	O	O:0.986322
to	O	O:0.999265
eliminate	O	O:0.997648
noise	O	O:0.982886
,	O	O:0.999183
since	O	O:0.998543
the	O	O:0.999732
real	O	O:0.990073
waveforms	O	O:0.992975
have	O	O:0.997674
a	O	O:0.999823
non-trivial	O	O:0.977609
noise	O	O:0.967102
component	O	O:0.983187
,	O	O:0.998618
and	O	O:0.999883
then	O	O:0.996364
tried	O	O:0.997570
doing	O	O:0.999642
a	O	O:0.991626
rolling	O	B-API:0.835975
max	O	O:0.971571
with	O	O:0.998909
a	O	O:0.983163
window	O	O:0.997131
over	O	O:0.996073
the	O	O:0.999348
data	O	O:0.976400
,	O	O:0.999261
but	O	O:0.999199
I	O	O:0.999254
can't	O	O:0.999225
get	O	O:0.996870
anything	O	O:0.999244
solid	O	O:0.960649
.	O	O:0.986575
	
But	O	O:0.994327
sum	B-API	O:0.927425
function	O	O:0.999485
from	O	O:0.994957
numpy	O	O:0.990318
doesn't	O	O:0.998750
suport	O	O:0.974774
"	O	O:0.999149
1:3	O	O:0.834879
"	O	O:0.989689
	
(	O	O:0.994643
the	O	O:0.996316
`	O	O:0.981405
np.nonzero	B-API	B-API:0.972964
`	O	O:0.998996
should	O	O:0.993132
return	O	O:0.998232
a	O	O:0.997399
tuple	O	O:0.923849
with	O	O:0.998159
one	O	O:0.996948
element	O	O:0.997575
,	O	O:0.999424
an	O	O:0.999478
array	O	O:0.998829
of	O	O:0.998963
indices	O	O:0.975790
)	O	O:0.998711
.	O	O:0.985314
	
Can	O	O:0.990603
the	O	O:0.993360
"	O	O:0.999029
small	O	O:0.992568
values	O	O:0.992386
of	O	O:0.997889
derivative	O	O:0.986231
"	O	O:0.999116
be	O	O:0.998239
small	O	O:0.997401
with	O	O:0.989432
respect	O	O:0.973084
to	O	O:0.999606
the	O	O:0.999805
sin	O	O:0.615727
curve	O	O:0.995426
?	O	O:0.994474
	
6	O	O:0.989770
columns	O	O:0.994217
,	O	O:0.999854
92370574	O	O:0.999316
rows	O	O:0.980968
,	O	O:0.999901
2496502	O	O:0.998344
locations	O	O:0.995320
,	O	O:0.999534
37	O	O:0.997051
months	O	O:0.995899
each	O	O:0.990155
,	O	O:0.999644
unique	O	O:0.987173
amounts	O	O:0.985613
for	O	O:0.999241
each	O	O:0.973405
value	O	O:0.981040
.	O	O:0.989339
	
Note	O	O:0.998300
that	O	O:0.999295
where	O	O:0.999529
possible	O	O:0.996470
,	O	O:0.999438
`	O	O:0.997989
reshape	B-API	B-API:0.537269
`	O	O:0.999255
will	O	O:0.995286
give	O	O:0.998913
you	O	O:0.999931
a	O	O:0.999942
view	O	O:0.742332
of	O	O:0.999465
the	O	O:0.984605
array	O	O:0.989263
.	O	O:0.985460
	
Here	O	O:0.993711
you	O	O:0.998719
append	O	O:0.990713
only	O	O:0.999266
a	O	O:0.999775
REFERENCE	O	O:0.910034
to	O	O:0.999894
your	O	O:0.999919
only	O	O:0.998847
one	O	O:0.999954
existing	O	O:0.986908
`	O	O:0.994049
energy	O	O:0.601001
`	O	O:0.997983
array	O	O:0.959563
.	O	O:0.994629
	
And	O	O:0.997564
you	O	O:0.999584
can	O	O:0.999706
combine	O	O:0.997718
the	O	O:0.999280
summation	O	O:0.989944
and	O	O:0.999206
multiplication	O	O:0.999367
into	O	O:0.982510
a	O	O:0.995838
dot	O	B-API:0.831202
product	O	O:0.926439
:	O	O:0.983805
#CODE	O	O:0.995646
	
For	O	O:0.990443
example	O	O:0.987788
,	O	O:0.998474
`	O	O:0.999808
a	O	O:0.960609
`	O	O:0.992463
is	O	O:0.998698
generated	O	O:0.993895
from	O	O:0.992278
`	O	O:0.999515
a	O	O:0.992169
=	O	O:0.971484
z	O	O:0.960340
[	O	O:0.994798
z	O	O:0.979238
!	O	O:0.993151
=0	O	O:0.969149
]`	O	O:0.993873
;	O	O:0.992669
`	O	O:0.999602
a	O	O:0.994302
`	O	O:0.999895
then	O	O:0.998540
changes	O	O:0.999839
through	O	O:0.997666
some	O	O:0.986178
processing	O	O:0.983959
,	O	O:0.998047
and	O	O:0.999682
now	O	O:0.997349
I	O	O:0.999576
need	O	O:0.999473
to	O	O:0.998370
insert	O	O:0.997869
`	O	O:0.998786
nan	O	B-API:0.617129
`	O	O:0.999747
s	O	O:0.964951
where	O	O:0.997939
there	O	O:0.982376
were	O	O:0.991634
originally	O	O:0.994802
zeros	O	O:0.983867
.	O	O:0.989062
	
I	O	O:0.998087
frequently	O	O:0.991396
use	O	O:0.988633
the	O	O:0.870368
numpy.where	B-API	B-API:0.979665
function	O	O:0.996611
to	O	O:0.998203
gather	O	O:0.999460
a	O	O:0.999279
tuple	O	O:0.979231
of	O	O:0.999666
indices	O	O:0.988602
of	O	O:0.999767
a	O	O:0.993249
matrix	O	O:0.985241
having	O	O:0.986163
some	O	O:0.950368
property	O	O:0.988251
.	O	O:0.985971
	
I	O	O:0.994341
suspect	O	O:0.997220
the	O	O:0.997188
original	O	O:0.856083
formula	O	O:0.987022
was	O	O:0.991423
right	O	O:0.996999
but	O	O:0.995994
you	O	O:0.995595
didn't	O	O:0.996269
encode	O	O:0.991050
it	O	O:0.999592
right	O	O:0.994329
in	O	O:0.998361
Python	O	O:0.977068
.	O	O:0.992972
	
This	O	O:0.997182
gets	O	O:0.987649
me	O	O:0.997116
the	O	O:0.999359
sum	O	O:0.970157
of	O	O:0.999172
all	O	O:0.997782
red	O	O:0.999293
combined	O	O:0.965886
in	O	O:0.998620
original	O	O:0.985633
-	O	O:0.999417
all	O	O:0.997722
red	O	O:0.998135
combined	O	O:0.946270
in	O	O:0.994486
mutated	O	O:0.912199
.	O	O:0.990896
	
`	O	O:0.993473
p2	O	O:0.922284
=	O	O:0.982394
einsum	B-API	B-API:0.750579
(	O	O:0.989920
'	O	O:0.997822
nk	O	O:0.994140
,	O	O:0.999055
nk	O	O:0.944211
->	O	O:0.998600
n	O	O:0.948847
'	O	O:0.994890
,	O	O:0.998832
p1	O	O:0.971155
,	O	O:0.999558
delta	O	O:0.951683
)`	O	O:0.946604
is	O	O:0.996726
the	O	O:0.996581
pairwise	O	O:0.982084
dot	O	O:0.962471
product	O	O:0.996395
of	O	O:0.999493
the	O	O:0.999912
rows	O	O:0.995754
of	O	O:0.989892
`	O	O:0.998559
p1	O	O:0.745092
`	O	O:0.998181
and	O	O:0.973383
`	O	O:0.999567
delta	O	B-API:0.981160
`	O	O:0.995809
.	O	O:0.922581
	
I	O	O:0.988078
did	O	O:0.997256
the	O	O:0.993383
reshape	B-API	O:0.893308
,	O	O:0.999353
just	O	O:0.998119
so	O	O:0.999786
that	O	O:0.999333
both	O	O:0.998649
arrays	O	O:0.993912
are	O	O:0.999175
same	O	O:0.996063
shape	O	O:0.984145
,	O	O:0.998475
but	O	O:0.998509
I	O	O:0.997125
do	O	O:0.998973
not	O	O:0.997216
think	O	O:0.997825
you	O	O:0.999170
really	O	O:0.998397
need	O	O:0.998888
the	O	O:0.999542
reshaping	O	O:0.996712
,	O	O:0.999114
with	O	O:0.998028
the	O	O:0.999641
list	O	O:0.984713
comprehension	O	O:0.997592
the	O	O:0.999662
shape	O	O:0.995489
of	O	O:0.998117
array	O	O:0.996673
you	O	O:0.999524
get	O	O:0.992910
is	O	O:0.998603
`	O	O:0.991595
(	O	O:0.996933
length	O	O:0.998091
of	O	O:0.987659
string	O	O:0.991074
,	O	O:0.999425
)`	O	O:0.967358
	
Also	O	O:0.996722
,	O	O:0.999665
I	O	O:0.999333
expect	O	O:0.999717
the	O	O:0.999561
positions	O	O:0.996140
of	O	O:0.999374
the	O	O:0.999459
zeros	O	O:0.996055
to	O	O:0.998362
be	O	O:0.999893
relatively	O	O:0.993040
sparse	O	O:0.697246
(	O	O:0.996847
~1%	O	O:0.995309
of	O	O:0.998153
all	O	O:0.998990
bit	O	O:0.998469
positions	O	O:0.987755
)	O	O:0.996039
.	O	O:0.991843
	
Slicing	O	O:0.972805
arrays	O	O:0.992586
with	O	O:0.987946
meshgrid	B-API	O:0.623822
/	O	O:0.999160
array	O	O:0.996991
indices	O	O:0.976315
in	O	O:0.996898
Numpy	O	O:0.979292
	
(	O	O:0.986545
An	O	O:0.997602
nonzero	O	O:0.984236
exit	O	O:0.896360
status	O	O:0.986337
usually	O	O:0.988389
indicates	O	O:0.999417
an	O	O:0.998091
error	O	O:0.990846
on	O	O:0.996693
Unix	O	O:0.971111
style	O	O:0.993257
systems	O	O:0.981313
.	O	O:0.987599
A	O	O:0.999620
couple	O	O:0.989113
programs	O	O:0.973443
are	O	O:0.998330
different	O	O:0.998298
,	O	O:0.997474
e.g.	O	O:0.989112
,	O	O:0.995654
`	O	O:0.999554
diff	B-API	B-API:0.935957
`	O	O:0.999472
.	O	O:0.986321
)	O	O:0.999685
Try	O	O:0.997039
examining	O	O:0.990088
the	O	O:0.977012
`	O	O:0.991759
stderr	O	B-API:0.689638
`	O	O:0.999891
produced	O	O:0.982393
by	O	O:0.998113
the	O	O:0.995964
subprocess	O	O:0.984313
to	O	O:0.996836
see	O	O:0.999963
what	O	O:0.999283
error	O	O:0.996265
messages	O	O:0.994070
are	O	O:0.996097
printed	O	O:0.984487
there	O	O:0.988632
.	O	O:0.988535
	
To	O	O:0.996783
achieve	O	O:0.983366
exactly	O	O:0.999575
what	O	O:0.994946
you	O	O:0.998605
are	O	O:0.999489
asking	O	O:0.992957
for	O	O:0.998700
I	O	O:0.994285
would	O	O:0.998596
apply	O	O:0.983023
a	O	O:0.988333
`	O	O:0.845310
[	O	O:0.995548
3x3	O	O:0.993501
]`	O	O:0.996010
box-filter	O	O:0.883142
on	O	O:0.998164
the	O	O:0.997228
image	O	O:0.982249
and	O	O:0.999607
than	O	O:0.998878
I	O	O:0.998216
would	O	O:0.998715
resize	O	O:0.923270
the	O	O:0.998286
matrix	O	O:0.992495
using	O	O:0.998065
nearest	O	O:0.897921
neighbor	O	O:0.956192
interpolation	O	O:0.957134
.	O	O:0.983941
	
Is	O	O:0.995939
there	O	O:0.999342
a	O	O:0.999208
quick	O	O:0.959949
way	O	O:0.994552
to	O	O:0.996066
reshape	O	O:0.998624
my	O	O:0.989555
`	O	O:0.995094
csr_matrix	O	B-API:0.884900
`	O	O:0.999360
without	O	O:0.963769
copying	O	O:0.995932
everything	O	O:0.963902
in	O	O:0.995883
it	O	O:0.998264
?	O	O:0.997648
	
The	O	O:0.993121
catch	O	O:0.743811
is	O	O:0.999459
that	O	O:0.992451
I	O	O:0.999924
need	O	O:0.999708
to	O	O:0.999397
keep	O	O:0.999703
the	O	O:0.999621
colors	O	O:0.953942
exactly	O	O:0.998590
the	O	O:0.999526
way	O	O:0.994389
they	O	O:0.984779
are	O	O:0.989905
(	O	O:0.993913
background	O	O:0.970786
:	O	O:0.993475
I'm	O	O:0.998748
resizing	O	O:0.999574
a	O	O:0.995532
map	O	O:0.750746
where	O	O:0.998359
provinces	O	O:0.989951
are	O	O:0.998585
color-coded	O	O:0.988984
)	O	O:0.997690
,	O	O:0.995674
and	O	O:0.999766
so	O	O:0.998009
I	O	O:0.992599
cannot	O	O:0.999841
just	O	O:0.993185
perform	O	O:0.999623
a	O	O:0.993264
resize	O	O:0.840900
with	O	O:0.994649
bicubic	O	O:0.928609
interpolation	O	O:0.996332
,	O	O:0.998080
because	O	O:0.999389
that	O	O:0.998414
will	O	O:0.999960
also	O	O:0.999726
interpolate	O	O:0.998749
the	O	O:0.997033
pixel	O	O:0.987207
colors	O	O:0.956312
while	O	O:0.995399
smoothing	O	O:0.987061
.	O	O:0.991074
	
You	O	O:0.992101
should	O	O:0.997005
"	O	O:0.999678
flatten	O	O:0.878780
"	O	O:0.994968
the	O	O:0.997336
array	O	O:0.995098
of	O	O:0.996066
arrays	O	O:0.986695
first	O	O:0.998395
.	O	O:0.997795
unfortunately	O	O:0.989906
,	O	O:0.999403
there's	O	O:0.994000
no	O	O:0.988102
builtin	O	O:0.918359
method	O	O:0.998041
,	O	O:0.998365
see	O	O:0.992342
#URL	O	O:0.980654
	
then	O	O:0.986039
concatenate	O	O:0.995798
the	O	O:0.998658
saved	O	O:0.981558
objects	O	O:0.982653
whit	O	O:0.998272
this	O	O:0.993538
code	O	O:0.952407
:	O	O:0.996703
#CODE	O	O:0.996248
	
For	O	O:0.998654
something	O	O:0.999289
like	O	O:0.999241
a	O	O:0.999649
dot	O	O:0.652832
product	O	O:0.988595
,	O	O:0.997939
pandas	O	O:0.997339
`	O	O:0.999351
DataFrames	O	O:0.690884
`	O	O:0.999238
are	O	O:0.996636
generally	O	O:0.998984
going	O	O:0.993425
to	O	O:0.997088
be	O	O:0.999657
slower	O	O:0.994961
than	O	O:0.997938
a	O	O:0.998045
numpy	O	O:0.977812
array	O	O:0.994242
since	O	O:0.996714
pandas	O	O:0.987656
is	O	O:0.999770
doing	O	O:0.976290
**	O	O:0.999599
a	O	O:0.992172
lot	O	O:0.998227
more	O	O:0.987592
stuff	O	O:0.966757
**	O	O:0.999546
aligning	O	O:0.993813
labels	O	O:0.963439
,	O	O:0.998953
potentially	O	O:0.993866
dealing	O	O:0.990417
with	O	O:0.996942
heterogenous	O	O:0.989831
types	O	O:0.967808
,	O	O:0.996311
and	O	O:0.999730
so	O	O:0.998233
on	O	O:0.989759
.	O	O:0.994167
	
I	O	O:0.998499
want	O	O:0.998338
to	O	O:0.998641
pass	O	O:0.998559
an	O	O:0.998637
array	O	O:0.999044
of	O	O:0.997768
indices	O	O:0.938975
and	O	O:0.999686
column	O	O:0.998392
names	O	O:0.971957
and	O	O:0.999423
get	O	O:0.998732
a	O	O:0.999058
list	O	O:0.942656
of	O	O:0.998792
objects	O	O:0.989921
that	O	O:0.998513
are	O	O:0.999759
found	O	O:0.990968
in	O	O:0.997641
the	O	O:0.996242
corresponding	O	O:0.972201
index	O	O:0.992454
and	O	O:0.999451
column	O	O:0.999320
name	O	O:0.934050
.	O	O:0.990749
	
From	O	O:0.998017
this	O	O:0.998179
you	O	O:0.999390
would	O	O:0.999382
expect	O	O:0.999791
the	O	O:0.999868
total	O	O:0.994225
sum	O	O:0.983634
to	O	O:0.999535
be	O	O:0.999780
`	O	O:0.999610
100,679,697	O	O:0.890421
=	O	O:0.996531
200*	O	O:0.889970
(	O	O:0.991282
1,000,000	O	O:0.966671
-	O	O:0.999220
499,097	O	O:0.964530
)	O	O:0.997102
+	O	O:0.994043
499,097	O	O:0.935899
`	O	O:0.993419
	
The	O	O:0.982437
histogram	O	O:0.995235
way	O	O:0.965293
is	O	O:0.998164
not	O	O:0.993362
the	O	O:0.999072
fastest	O	O:0.923047
,	O	O:0.996260
and	O	O:0.999340
can't	O	O:0.998755
tell	O	O:0.977244
the	O	O:0.999461
difference	O	O:0.977214
between	O	O:0.993909
an	O	O:0.996591
arbitrarily	O	O:0.992629
small	O	O:0.989682
separation	O	O:0.995417
of	O	O:0.995175
points	O	O:0.966954
and	O	O:0.999523
`	O	O:0.998137
2	O	O:0.837774
*	O	O:0.998984
sqrt	B-API	B-API:0.754042
(	O	O:0.997112
2	O	O:0.983124
)	O	O:0.996447
*	O	O:0.998799
b	O	O:0.969620
`	O	O:0.987808
(	O	O:0.994383
where	O	O:0.997715
`	O	O:0.998560
b	O	O:0.852346
`	O	O:0.998448
is	O	O:0.988833
bin	O	O:0.982803
width	O	O:0.991543
)	O	O:0.991764
.	O	O:0.979824
	
}	O	O:0.990755
for	O	O:0.995620
n=1	O	O:0.952304
,	O	O:0.995628
2	O	O:0.990860
,	O	O:0.996549
3	O	O:0.992336
,	O	O:0.998725
4	O	O:0.993913
,	O	O:0.998793
5	O	O:0.992829
,	O	O:0.997587
6	O	O:0.929645
(	O	O:0.998848
using	O	O:0.990695
Sum	B-API	O:0.774573
(	O	O:0.991284
c_n	O	O:0.732761
exp	B-API	B-API:0.731227
(	O	O:0.999133
i	O	O:0.988116
2	O	O:0.996413
pi	O	O:0.981212
n	O	O:0.995234
x	O	O:0.987323
)	O	O:0.999317
)	O	O:0.998885
as	O	O:0.995123
Fourier	O	O:0.943890
series	O	O:0.988797
)	O	O:0.995613
.	O	O:0.986179
	
I	O	O:0.998102
think	O	O:0.997987
I	O	O:0.991690
can	O	O:0.998770
t	O	O:0.998627
just	O	O:0.999174
simple	O	O:0.997483
sum	O	O:0.987754
the	O	O:0.996929
"	O	O:0.994972
seq	O	O:0.933758
*	O	O:0.998323
"	O	O:0.996588
array	O	O:0.986351
,	O	O:0.999326
because	O	O:0.998972
instead	O	O:0.999363
of	O	O:0.999966
a	O	O:0.998434
chord	O	O:0.991730
I	O	O:0.999342
will	O	O:0.999488
get	O	O:0.995713
noise	O	O:0.955942
.	O	O:0.991019
	
I	O	O:0.997699
presume	O	O:0.998161
you	O	O:0.998702
want	O	O:0.998332
to	O	O:0.999276
transpose	O	O:0.998903
first	O	O:0.984761
:	O	O:0.993883
#CODE	O	O:0.995387
	
Oh	O	O:0.967603
,	O	O:0.998145
that's	O	O:0.998655
interesting	O	O:0.988852
you	O	O:0.999089
can	O	O:0.999328
do	O	O:0.999855
it	O	O:0.999823
with	O	O:0.998687
stack	B-API	O:0.891387
.	O	O:0.996967
	
In	O	O:0.997993
this	O	O:0.997913
case	O	O:0.999350
,	O	O:0.999765
using	O	O:0.998741
numpy	O	O:0.996731
outer	B-API	O:0.978860
operations	O	O:0.993180
allow	O	O:0.968937
you	O	O:0.999543
to	O	O:0.998477
compute	O	O:0.999442
the	O	O:0.999008
multiplications	O	O:0.994271
and	O	O:0.999903
sums	O	O:0.991790
at	O	O:0.998164
the	O	O:0.998514
`	O	O:0.992934
C	O	B-API:0.678565
`	O	O:0.999524
loop	O	O:0.961256
speed	O	O:0.971067
.	O	O:0.990701
	
The	O	O:0.998370
most	O	O:0.986753
efficient	O	O:0.995220
way	O	O:0.965931
is	O	O:0.997498
likely	O	O:0.979430
to	O	O:0.998539
use	O	O:0.994935
'	O	O:0.984473
np.empty()	B-API	B-API:0.892381
'	O	O:0.998481
to	O	O:0.998525
allocate	O	O:0.999341
the	O	O:0.997918
space	O	O:0.978241
/	O	O:0.996601
memory	O	O:0.990441
for	O	O:0.999809
your	O	O:0.996551
end	O	O:0.979017
dataset	O	O:0.996058
and	O	O:0.999251
then	O	O:0.999785
load	O	O:0.995539
data	O	O:0.997425
&	O	O:0.999142
broadcast	O	O:0.993911
within	O	O:0.998550
that	O	O:0.997925
using	O	O:0.999014
slice	O	O:0.660493
indexing	O	O:0.958130
.	O	O:0.953142
	
Ok	O	O:0.985249
,	O	O:0.999125
with	O	O:0.999787
your	O	O:0.994956
histogram	O	O:0.999451
I	O	O:0.999866
get	O	O:0.999767
at	O	O:0.998715
least	O	O:0.999127
the	O	O:0.999656
total	O	O:0.981844
number	O	O:0.994832
of	O	O:0.999349
each	O	O:0.992759
pair	O	O:0.991507
.	O	O:0.993218
	
This	O	O:0.973246
is	O	O:0.998199
because	O	O:0.996403
python's	O	O:0.991626
sum	O	O:0.953428
is	O	O:0.998456
basically	O	O:0.996700
summing	O	O:0.999396
a	O	O:0.994526
for	O	O:0.996851
loop	O	O:0.995450
over	O	O:0.959867
the	O	O:0.985380
object	O	O:0.953816
.	O	O:0.984859
	
Then	O	O:0.997262
the	O	O:0.999811
entire	O	O:0.997876
shape	O	O:0.999334
changes	O	O:0.993023
from	O	O:0.969495
(	O	O:0.998489
x	O	O:0.991578
,	O	O:0.999444
y	O	O:0.992923
)	O	O:0.998851
to	O	O:0.994403
merely	O	O:0.996176
(	O	O:0.998807
x	O	O:0.983690
,	O	O:0.998994
)	O	O:0.999309
and	O	O:0.999535
I	O	O:0.999585
get	O	O:0.979044
'	O	O:0.983384
too	O	O:0.998798
many	O	O:0.996400
indices	O	O:0.956760
'	O	O:0.997799
errors	O	O:0.998916
when	O	O:0.996953
I	O	O:0.998834
try	O	O:0.999674
to	O	O:0.993668
use	O	O:0.999215
masks	O	O:0.836005
.	O	O:0.977683
	
If	O	O:0.988669
reps	O	O:0.714415
has	O	O:0.996377
length	O	O:0.992690
d	O	O:0.965740
,	O	O:0.999921
the	O	O:0.997497
result	O	O:0.998023
will	O	O:0.999670
have	O	O:0.999806
dimension	O	O:0.999761
of	O	O:0.997910
max	B-API	O:0.660374
(	O	O:0.998886
d	O	O:0.971248
,	O	O:0.998699
A.ndim	O	O:0.887104
)	O	O:0.997182
.	O	O:0.978397
	
I	O	O:0.998683
want	O	O:0.998320
to	O	O:0.992258
do	O	O:0.999969
this	O	O:0.999079
by	O	O:0.998536
dividing	O	O:0.998487
each	O	O:0.954731
histogram	O	O:0.999601
by	O	O:0.999514
its	O	O:0.998825
maximum	O	O:0.994418
value	O	O:0.998025
so	O	O:0.998295
all	O	O:0.999764
the	O	O:0.999666
distributions	O	O:0.994309
have	O	O:0.997440
the	O	O:0.999882
same	O	O:0.993949
scale	O	O:0.917300
.	O	O:0.995767
	
An	O	O:0.984671
obvious	O	O:0.979072
path	O	O:0.995433
would	O	O:0.999069
be	O	O:0.999791
to	O	O:0.999778
transpose	O	O:0.998068
the	O	O:0.999475
array	O	O:0.993684
so	O	O:0.999564
that	O	O:0.999621
the	O	O:0.999805
indices	O	O:0.996623
that	O	O:0.995647
I	O	O:0.999740
am	O	O:0.999883
selecting	O	O:0.970054
would	O	O:0.999176
come	O	O:0.989171
up	O	O:0.998865
first	O	O:0.989262
.	O	O:0.988369
	
Now	O	O:0.993588
,	O	O:0.998848
for	O	O:0.999942
mean	O	O:0.968858
calculations	O	O:0.990633
,	O	O:0.998997
those	O	O:0.998578
numeric	O	O:0.941012
IDs	O	O:0.981900
could	O	O:0.997729
be	O	O:0.999927
used	O	O:0.998903
as	O	O:0.996296
`"	O	O:0.991713
weights	O	O:0.975500
"`	O	O:0.992699
for	O	O:0.997693
binning	O	O:0.982031
with	O	O:0.965819
`	O	O:0.991587
np.bincount	B-API	B-API:0.923894
`	O	O:0.999445
,	O	O:0.997891
giving	O	O:0.997770
us	O	O:0.993115
the	O	O:0.999373
sum	O	O:0.990252
of	O	O:0.999902
data	O	O:0.998348
elements	O	O:0.999696
corresponding	O	O:0.991221
to	O	O:0.999309
each	O	O:0.998180
`	O	O:0.996893
ID	O	O:0.724097
`	O	O:0.998390
.	O	O:0.935408
	
However	O	O:0.986983
,	O	O:0.999793
what	O	O:0.998723
I	O	O:0.999600
need	O	O:0.995326
is	O	O:0.999500
a	O	O:0.994054
string	O	O:0.985579
containing	O	O:0.990819
all	O	O:0.999598
the	O	O:0.999677
elements	O	O:0.976942
in	O	O:0.997281
the	O	O:0.999608
list	O	O:0.985662
linked	O	O:0.995119
by	O	O:0.992632
'	O	O:0.992731
;	O	O:0.988267
'	O	O:0.989802
,	O	O:0.999680
not	O	O:0.997204
the	O	O:0.999864
list	O	O:0.982965
itself	O	O:0.994031
,	O	O:0.999735
so	O	O:0.998261
it	O	O:0.998671
seems	O	O:0.999845
like	O	O:0.999118
I	O	O:0.999934
have	O	O:0.999522
to	O	O:0.998826
sum	O	O:0.999318
all	O	O:0.999777
the	O	O:0.999770
elements	O	O:0.988375
in	O	O:0.999396
asString	O	O:0.997838
with	O	O:0.999776
another	O	O:0.991594
iteration	O	O:0.996801
?	O	O:0.990727
	
the	O	O:0.991511
output	O	O:0.982948
I	O	O:0.998113
need	O	O:0.993127
:	O	O:0.996738
`	O	O:0.999485
S	O	O:0.972015
=	O	O:0.994521
[	O	O:0.990103
2	O	O:0.991638
,	O	O:0.997438
5	O	O:0.987454
,	O	O:0.997966
8	O	O:0.986258
,	O	O:0.998272
11	O	O:0.984500
,	O	O:0.998871
14	O	O:0.991702
]`	O	O:0.997001
I	O	O:0.995345
thought	O	O:0.998573
something	O	O:0.987918
like	O	O:0.969829
:	O	O:0.999194
`	O	O:0.999227
S1	O	O:0.974099
=	O	O:0.979798
np.array	B-API	B-API:0.978785
(	O	O:0.992434
L	O	O:0.959213
[:	O	O:0.995563
]	O	O:0.980142
[	O	O:0.991920
1	O	O:0.996970
,	O	O:0.998205
0	O	O:0.978230
])`	O	O:0.992403
should	O	O:0.993571
work	O	O:0.997128
but	O	O:0.999793
whatever	O	O:0.999245
I	O	O:0.999357
try	O	O:0.999355
I	O	O:0.997869
have	O	O:0.999544
the	O	O:0.998192
error	O	O:0.989273
like	O	O:0.972378
:	O	O:0.998257
`	O	O:0.997325
TypeError	O	O:0.918350
:	O	O:0.999665
list	O	O:0.983885
indices	O	O:0.996848
must	O	O:0.998577
be	O	O:0.999619
integers	O	O:0.987818
,	O	O:0.992508
not	O	O:0.996777
tuple	O	O:0.873120
`	O	O:0.996265
.	O	O:0.977212
	
I	O	O:0.997101
need	O	O:0.998514
it	O	O:0.998469
because	O	O:0.998410
in	O	O:0.998977
the	O	O:0.999774
next	O	O:0.989742
part	O	O:0.996457
I	O	O:0.999597
will	O	O:0.999878
sum	O	O:0.966600
up	O	O:0.999596
this	O	O:0.998488
large	O	O:0.987836
np.array	B-API	B-API:0.684602
with	O	O:0.998254
some	O	O:0.994928
delta_array	O	O:0.954076
that	O	O:0.992978
has	O	O:0.999171
the	O	O:0.999656
same	O	O:0.975288
shape	O	O:0.985276
.	O	O:0.991774
	
Used	O	O:0.977621
reshape	B-API	O:0.959070
to	O	O:0.999495
make	O	O:0.999909
rows	O	O:0.999072
into	O	O:0.994336
columns	O	O:0.996732
.	O	O:0.984627
	
I	O	O:0.996566
understand	O	O:0.998874
that	O	O:0.988559
you	O	O:0.999403
could	O	O:0.999886
create	O	O:0.998511
an	O	O:0.999688
array	O	O:0.999301
of	O	O:0.997783
zeros	O	O:0.989906
and	O	O:0.999886
iteratively	O	O:0.995138
change	O	O:0.981949
the	O	O:0.998710
values	O	O:0.925565
in	O	O:0.999035
each	O	O:0.995749
column	O	O:0.996339
,	O	O:0.999156
but	O	O:0.998972
I	O	O:0.999385
also	O	O:0.998711
understand	O	O:0.997988
this	O	O:0.889648
is	O	O:0.997342
not	O	O:0.997481
an	O	O:0.996097
efficient	O	O:0.964797
method	O	O:0.994979
.	O	O:0.991613
	
I'm	O	O:0.995254
trying	O	O:0.997848
to	O	O:0.999251
implement	O	O:0.998159
the	O	O:0.999331
univariate	O	O:0.932184
gradient	O	O:0.998123
descent	O	O:0.986274
algorithm	O	O:0.988278
in	O	O:0.995871
python	O	O:0.979324
.	O	O:0.992280
	
numpy	O	O:0.872297
glossary	O	O:0.989075
says	O	O:0.994176
the	O	O:0.998927
sum	O	O:0.933809
along	O	O:0.996028
axis	O	O:0.985130
argument	O	O:0.993677
`	O	O:0.998466
axis=1	O	O:0.859400
`	O	O:0.999914
sums	O	O:0.990272
over	O	O:0.998455
rows	O	O:0.966731
:	O	O:0.997512
"	O	O:0.999822
we	O	O:0.998938
can	O	O:0.999563
sum	O	O:0.999631
each	O	O:0.999025
row	O	O:0.998862
of	O	O:0.999465
an	O	O:0.996206
array	O	O:0.998563
,	O	O:0.998828
in	O	O:0.998276
which	O	O:0.999150
case	O	O:0.999486
we	O	O:0.999400
operate	O	O:0.996134
along	O	O:0.997663
columns	O	O:0.994813
,	O	O:0.998486
or	O	O:0.999777
axis	O	O:0.993836
1	O	O:0.990933
"	O	O:0.997119
.	O	O:0.977289
	
It	O	O:0.997674
also	O	O:0.997031
prints	O	O:0.998377
out	O	O:0.995458
the	O	O:0.999567
new	O	O:0.984682
indices	O	O:0.970131
signature	O	O:0.987681
.	O	O:0.992141
	
At	O	O:0.997106
first	O	O:0.992825
,	O	O:0.999940
your	O	O:0.998588
`	O	O:0.998131
result	O	O:0.970987
`	O	O:0.999268
does	O	O:0.956848
not	O	O:0.999696
look	O	O:0.999253
like	O	O:0.999442
a	O	O:0.999519
complex	O	O:0.916832
FFT	O	O:0.985605
output	O	O:0.950449
	
debug	O	O:0.859401
performance	O	O:0.999179
diff	O	O:0.700548
of	O	O:0.997427
Same	O	O:0.996474
code	O	O:0.994562
on	O	O:0.998425
nearly	O	O:0.989132
same	O	O:0.995200
cpu	O	O:0.984862
/	O	O:0.995273
ram	O	O:0.984286
	
The	O	O:0.987288
HTML	O	O:0.993413
file	O	O:0.998399
generated	O	O:0.994908
by	O	O:0.996241
Cython	O	O:0.976307
indicates	O	O:0.996350
that	O	O:0.997646
the	O	O:0.999326
bottleneck	O	O:0.962287
is	O	O:0.996773
the	O	O:0.998044
dot	O	O:0.780481
products	O	O:0.946114
(	O	O:0.993706
which	O	O:0.995692
is	O	O:0.999484
expected	O	O:0.997940
of	O	O:0.999260
course	O	O:0.992364
)	O	O:0.999275
.	O	O:0.968458
	
`	O	O:0.991018
numpy.unique	B-API	B-API:0.961770
`	O	O:0.999609
with	O	O:0.904893
`	O	O:0.998332
return_index=True	O	O:0.599132
`	O	O:0.999463
will	O	O:0.996225
give	O	O:0.998856
you	O	O:0.999745
a	O	O:0.999754
list	O	O:0.990297
of	O	O:0.999574
indices	O	O:0.992668
to	O	O:0.999788
take	O	O:0.999748
from	O	O:0.997140
.	O	O:0.996576
	
I	O	O:0.995379
forgot	O	O:0.983958
exactly	O	O:0.978135
why	O	O:0.993198
,	O	O:0.997948
but	O	O:0.998995
there	O	O:0.986280
is	O	O:0.999850
a	O	O:0.998995
good	O	O:0.857061
reason	O	O:0.997998
why	O	O:0.998736
you	O	O:0.999285
calculate	O	O:0.996882
it	O	O:0.999800
as	O	O:0.999788
the	O	O:0.998526
ratio	O	O:0.969679
between	O	O:0.980397
these	O	O:0.998251
two	O	O:0.998585
averages	O	O:0.973827
,	O	O:0.999539
instead	O	O:0.999964
of	O	O:0.999222
directly	O	O:0.994896
averaging	O	O:0.991774
`	O	O:0.992160
fft	B-API	B-API:0.878050
(	O	O:0.999059
y	O	O:0.962000
)	O	O:0.993081
/	O	O:0.982922
fft	B-API	B-API:0.815265
(	O	O:0.994125
x	O	O:0.979629
)`	O	O:0.962603
.	O	O:0.987813
	
Do	O	O:0.994909
you	O	O:0.998925
really	O	O:0.999089
want	O	O:0.999586
this	O	O:0.988200
'	O	O:0.999477
roll	B-API	O:0.858258
'	O	O:0.991922
?	O	O:0.996315
	
By	O	O:0.993256
adding	O	O:0.995306
a	O	O:0.998179
nonzero	O	O:0.931524
number	O	O:0.994241
at	O	O:0.998857
the	O	O:0.999924
end	O	O:0.994219
of	O	O:0.998431
the	O	O:0.995839
array	O	O:0.998273
,	O	O:0.999386
you	O	O:0.999049
can	O	O:0.999878
still	O	O:0.999908
use	O	O:0.998248
np.nonzero	B-API	B-API:0.598061
to	O	O:0.996531
get	O	O:0.999955
your	O	O:0.999045
desired	O	O:0.991662
outcome	O	O:0.992519
.	O	O:0.988906
	
which	O	O:0.996707
simply	O	O:0.998293
sorts	O	O:0.993369
the	O	O:0.997395
terms	O	O:0.981881
and	O	O:0.999557
then	O	O:0.986596
takes	O	O:0.998805
the	O	O:0.999772
ones	O	O:0.939989
which	O	O:0.998386
aren't	O	O:0.999832
equal	O	O:0.996881
to	O	O:0.999406
the	O	O:0.999896
previous	O	O:0.985539
one	O	O:0.995817
.	O	O:0.994951
	
4	O	O:0.872960
:	O	O:0.994948
I	O	O:0.996894
am	O	O:0.999532
not	O	O:0.999106
sure	O	O:0.998964
about	O	O:0.998509
the	O	O:0.998363
indices	O	O:0.977729
,	O	O:0.999518
by	O	O:0.997931
writing	O	O:0.996380
couple	O	O:0.965083
of	O	O:0.999179
code	O	O:0.988040
lines	O	O:0.995656
I	O	O:0.999691
just	O	O:0.999819
able	O	O:0.998035
to	O	O:0.999700
get	O	O:0.999871
cluster	O	O:0.994293
indices	O	O:0.998898
based	O	O:0.993598
on	O	O:0.996582
fclusterdata	O	B-API:0.536245
.	O	O:0.994083
	
Matlab	O	O:0.975665
gives	O	O:0.994580
me	O	O:0.996305
a	O	O:0.998604
norm	O	B-API:0.511620
=	O	O:0.989479
2	O	O:0.975544
for	O	O:0.999475
your	O	O:0.959030
matrix	O	O:0.967118
.	O	O:0.991304
	
I	O	O:0.998165
first	O	O:0.999137
generated	O	O:0.992059
a	O	O:0.996406
labelled	O	O:0.950260
array	O	O:0.998073
of	O	O:0.998856
unique	O	O:0.971632
IDs	O	O:0.983544
for	O	O:0.998720
each	O	O:0.984592
discrete	O	O:0.922810
region	O	O:0.988884
,	O	O:0.999254
calculated	O	O:0.993114
sizes	O	O:0.988263
for	O	O:0.999586
each	O	O:0.968037
ID	O	O:0.949133
,	O	O:0.998779
masked	O	O:0.956653
the	O	O:0.997593
size	O	O:0.986651
array	O	O:0.997478
to	O	O:0.999334
focus	O	O:0.999435
only	O	O:0.997998
on	O	O:0.999759
size	O	O:0.988633
==	O	O:0.998329
1	O	O:0.995178
blobs	O	O:0.989849
,	O	O:0.999348
then	O	O:0.998508
index	O	O:0.999930
the	O	O:0.999677
original	O	O:0.993041
array	O	O:0.996292
and	O	O:0.999747
set	O	O:0.995503
IDs	O	O:0.984562
with	O	O:0.998591
a	O	O:0.999065
size	O	O:0.954279
==	O	O:0.995448
1	O	O:0.996051
to	O	O:0.987968
0	O	O:0.983009
:	O	O:0.995004
#CODE	O	O:0.994524
	
absolute	B-API	O:0.820474
(	O	O:0.999033
a	O	O:0.996788
-	O	O:0.997072
b	O	O:0.987812
)	O	O:0.996522
=	O	B-API:0.786579
(	O	O:0.998230
atol	O	O:0.935676
+	O	O:0.998392
rtol	O	O:0.909371
*	O	O:0.998954
absolute	B-API	O:0.857561
(	O	O:0.998244
b	O	O:0.990612
))	O	O:0.931033
	
Then	O	O:0.994908
I	O	O:0.999083
reshape	O	O:0.996896
this	O	O:0.968776
to	O	O:0.999280
form	O	O:0.999964
a	O	O:0.998102
2D	O	O:0.973416
numpy	O	O:0.990523
array	O	O:0.974449
.	O	O:0.986022
	
n=5	O	B-API:0.695579
(	O	O:0.998043
min	O	O:0.983695
length	O	O:0.994066
of	O	O:0.996047
sequence	O	O:0.995866
)	O	O:0.998422
	
I	O	O:0.998879
have	O	O:0.998027
written	O	O:0.994904
a	O	O:0.995534
function	O	O:0.953529
which	O	O:0.988946
contains	O	O:0.995581
nested	O	O:0.960882
loops	O	O:0.958925
and	O	O:0.998713
a	O	O:0.994078
conditional	O	B-API:0.705350
statement	O	O:0.995355
;	O	O:0.999148
the	O	O:0.999396
purpose	O	O:0.997127
of	O	O:0.998033
the	O	O:0.994377
loop	O	O:0.979596
is	O	O:0.997286
to	O	O:0.998332
return	O	O:0.999265
a	O	O:0.998369
list	O	O:0.976892
of	O	O:0.999672
indices	O	O:0.975158
for	O	O:0.999460
the	O	O:0.998891
nearest	O	O:0.974767
elements	O	O:0.964532
in	O	O:0.994195
array	O	O:0.998852
x	O	O:0.998255
when	O	O:0.996821
compared	O	O:0.987841
to	O	O:0.999121
array	O	O:0.999105
y	O	O:0.970330
.	O	O:0.992456
	
I	O	O:0.998503
also	O	O:0.999659
want	O	O:0.998407
to	O	O:0.997875
color	O	O:0.999751
the	O	O:0.998022
1D	O	O:0.976194
histogram	O	O:0.999444
bars	O	O:0.993973
according	O	O:0.996201
to	O	O:0.999083
the	O	O:0.999933
same	O	O:0.985743
normalization	O	O:0.986658
.	O	O:0.996804
	
If	O	O:0.987812
you	O	O:0.997700
are	O	O:0.999617
calling	O	O:0.996815
it	O	O:0.998452
with	O	O:0.998572
an	O	O:0.999419
empty	O	O:0.985762
matrix	O	O:0.989576
for	O	O:0.984969
[	O	O:0.994430
low	O	O:0.967753
,	O	O:0.998649
high	O	O:0.930537
]	O	O:0.996522
it	O	O:0.997370
will	O	O:0.999832
just	O	O:0.999556
use	O	O:0.998990
whatever	O	O:0.986207
the	O	O:0.996112
max	O	O:0.901321
and	O	O:0.999701
min	O	O:0.993603
values	O	O:0.964710
in	O	O:0.996862
the	O	O:0.997888
array	O	O:0.977635
are	O	O:0.992958
.	O	O:0.996524
	
Creating	O	O:0.987057
a	O	O:0.995066
class	O	O:0.995418
deriving	O	O:0.996041
from	O	O:0.956848
`	O	O:0.997217
ndarray	B-API	B-API:0.815444
`	O	O:0.994815
and	O	O:0.993645
overriding	O	O:0.998498
indexing	O	O:0.991350
such	O	O:0.997833
that	O	O:0.998851
the	O	O:0.999521
absolute	O	O:0.974168
indices	O	O:0.956593
are	O	O:0.998312
used	O	O:0.991850
.	O	O:0.989692
	
One	O	O:0.986230
solution	O	O:0.960687
is	O	O:0.998337
to	O	O:0.998429
sort	O	O:0.998858
both	O	O:0.992914
arrays	O	O:0.858009
(	O	O:0.998891
adding	O	O:0.980468
an	O	O:0.996297
index	O	O:0.999742
column	O	O:0.999272
so	O	O:0.999660
that	O	O:0.999273
the	O	O:0.999792
sorted	O	O:0.988292
arrays	O	O:0.991308
still	O	O:0.994066
contains	O	O:0.998437
the	O	O:0.999621
original	O	O:0.990971
indices	O	O:0.985262
)	O	O:0.997488
.	O	O:0.991167
	
Use	O	O:0.957379
`	O	O:0.994970
reshape	B-API	B-API:0.895022
`	O	O:0.983228
:	O	O:0.968281
#CODE	O	O:0.997790
	
What's	O	O:0.996507
wrong	O	O:0.994231
with	O	O:0.998261
the	O	O:0.999333
normal	O	O:0.979382
div	O	O:0.538384
/	O	O:0.998271
mod	O	O:0.987820
operations	O	O:0.985434
?	O	O:0.986145
	
You	O	O:0.995725
can	O	O:0.997761
use	O	O:0.999614
`	O	O:0.975803
argmin	B-API	B-API:0.956533
`	O	O:0.999653
to	O	O:0.997612
find	O	O:0.999719
the	O	O:0.999543
False	O	O:0.986723
values	O	O:0.981673
,	O	O:0.996736
and	O	O:0.999947
this	O	O:0.997266
will	O	O:0.996240
be	O	O:0.999180
faster	O	O:0.991852
and	O	O:0.999364
take	O	O:0.995570
less	O	O:0.949475
memory	O	O:0.998452
than	O	O:0.994269
using	O	O:0.997450
nonzero	B-API	O:0.767658
,	O	O:0.978160
but	O	O:0.998573
this	O	O:0.967680
is	O	O:0.999798
linear	O	O:0.842994
in	O	O:0.999079
the	O	O:0.997842
length	O	O:0.993270
of	O	O:0.988814
`	O	O:0.999767
a	O	O:0.975654
`	O	O:0.991808
.	O	O:0.971213
	
I'd	O	O:0.997448
like	O	O:0.997677
it	O	O:0.999763
to	O	O:0.999645
be	O	O:0.999965
like	O	O:0.999655
8x10^8	O	O:0.944469
or	O	O:0.999490
.8x10	O	O:0.940803
^9	O	O:0.981694
to	O	O:0.999445
save	O	O:0.997316
space	O	O:0.999173
instead	O	O:0.999669
of	O	O:0.999702
putting	O	O:0.982068
all	O	O:0.998532
those	O	O:0.993873
zeros	O	O:0.949671
.	O	O:0.988396
	
The	O	O:0.996894
one	O	O:0.997922
I	O	O:0.999424
pointed	O	O:0.996256
out	O	O:0.974409
in	O	O:0.999816
a	O	O:0.997389
comment	O	O:0.972621
to	O	O:0.999528
other	O	O:0.999741
answer	O	O:0.997762
as	O	O:0.998964
to	O	O:0.997029
encode	O	O:0.997131
the	O	O:0.999255
binary	O	O:0.993558
representation	O	O:0.996944
of	O	O:0.998454
the	O	O:0.998978
array	O	O:0.998040
as	O	O:0.999372
a	O	O:0.996102
Base64	O	O:0.991506
text	O	O:0.983313
block	O	O:0.987357
.	O	O:0.987393
	
due	O	O:0.967969
to	O	O:0.995036
broadcasting	O	O:0.999242
,	O	O:0.999364
you	O	O:0.999104
don't	O	O:0.999805
need	O	O:0.999791
to	O	O:0.999938
repeat	O	O:0.999636
duplicate	O	O:0.996561
indices	O	O:0.994057
,	O	O:0.999378
thus	O	O:0.894076
:	O	O:0.998149
#CODE	O	O:0.997342
	
Maybe	O	O:0.992188
`	O	O:0.997279
flatten()	B-API	B-API:0.930210
`	O	O:0.999717
the	O	O:0.998251
original	O	O:0.994662
array	O	O:0.997807
,	O	O:0.999872
then	O	O:0.997262
use	O/	O:0.999835
your	O	O:0.997142
1D	O	O:0.976624
solution	O	O:0.997772
,	O	O:0.999293
finally	O	O:0.993187
calculate	O	O:0.975687
the	O	O:0.999614
real	O	O:0.990533
nD	O	O:0.996342
indices	O	O:0.987489
using	O	O:0.999021
the	O	O:0.998943
original	O	O:0.923172
shape	O	O:0.986672
?	O	O:0.987831
	
Note	O	O:0.997451
that	O	O:0.998595
the	O	O:0.999460
diagonal	O	O:0.949584
is	O	O:0.998162
always	O	O:0.997853
zero	O	O:0.991594
since	O	O:0.985241
`	O	O:0.996823
mahalanobis	B-API	O:0.824938
(	O	O:0.999166
x	O	O:0.958489
,	O	O:0.998988
x	O	O:0.993400
)`	O	O:0.992013
equals	O	O:0.996756
zero	O	O:0.961832
for	O	O:0.993653
	
possible	O	O:0.991068
duplicate	O	O:0.998069
of	O	O:0.986850
[	O	O:0.992590
NumPy	O	O:0.997794
min	B-API	O:0.690744
/	O	O:0.993375
max	B-API	O:0.807076
in-place	O	O:0.988306
assignment	O	O:0.973695
]	O	O:0.958990
(	O	O:0.983855
#URL	O	O:0.986138
)	O	O:0.996092
	
Once	O	O:0.994574
the	O	O:0.999521
tree	O	O:0.989417
structure	O	O:0.991605
has	O	O:0.999104
been	O	O:0.994348
built	O	O:0.992455
,	O	O:0.999597
go	O	O:0.996655
back	O	O:0.992998
and	O	O:0.999860
collect	O	O:0.926539
all	O	O:0.997270
the	O	O:0.997172
branches	O	O:0.930503
and	O	O:0.998903
leaves	O	O:0.998399
into	O	O:0.944403
the	O	O:0.993502
array	O	O:0.977521
structure	O	O:0.995405
and	O	O:0.999652
by	O	O:0.997842
definition	O	O:0.984118
,	O	O:0.998651
they	O	O:0.997306
will	O	O:0.998740
be	O	O:0.999763
unique	O	O:0.987951
.	O	O:0.952213
	
I	O	O:0.993159
wrote	O	O:0.993826
the	O	O:0.995576
following	O	O:0.987442
code	O	O:0.978809
but	O	O:0.999580
the	O	O:0.999236
output	O	O:0.993970
only	O	O:0.992520
contains	O	O:0.998958
the	O	O:0.997713
ids	O	O:0.753119
(	O	O:0.998845
single	O	O:0.998096
column	O	O:0.998199
)	O	O:0.996237
.	O	O:0.989285
	
Maximum	O	O:0.905727
is	O	O:0.997785
always	O	O:0.991613
bigger	O	O:0.991885
than	O	O:0.985913
the	O	O:0.994391
minimum	O	O:0.911615
(	O	O:0.999412
more	O	O:0.990321
to	O	O:0.999423
the	O	O:0.999946
right	O	O:0.996705
on	O	O:0.999698
a	O	O:0.999180
1d	O	O:0.972726
axis	O	O:0.974974
,	O	O:0.999560
not	O	O:0.999465
by	O	O:0.999358
absolute	O	O:0.995519
value	O	O:0.991365
)	O	O:0.997280
.	O	O:0.986292
	
Note	O	O:0.997669
that	O	O:0.994965
`	O	O:0.999781
unq_count	O	B-API:0.588668
`	O	O:0.999489
doesn't	O	O:0.994412
count	O	O:0.998546
the	O	O:0.999942
occurrences	O	O:0.986691
of	O	O:0.998746
the	O	O:0.999772
last	O	O:0.995923
unique	O	O:0.989779
item	O	O:0.988324
,	O	O:0.999125
because	O	O:0.999371
that	O	O:0.951244
is	O	O:0.999850
not	O	O:0.998999
needed	O	O:0.999508
to	O	O:0.999544
split	O	O:0.979754
the	O	O:0.998202
index	O	O:0.996611
array	O	O:0.992778
.	O	O:0.995604
	
If	O	O:0.993243
yes	O	O:0.992695
,	O	O:0.999816
you	O	O:0.999387
can	O	O:0.999176
use	O	O:0.999846
the	O	O:0.998653
Linux	O	O:0.954865
terminal	O	O:0.993220
to	O	O:0.999117
strip	O	O:0.998950
quotes	O	O:0.996574
from	O	O:0.998663
the	O	O:0.999901
ends	O	O:0.988546
of	O	O:0.999745
the	O	O:0.999937
rows	O	O:0.979981
quickly	O	O:0.964428
.	O	O:0.997285
	
The	O	O:0.951190
append	B-API	O:0.639362
method	O	O:0.994781
for	O	O:0.999517
a	O	O:0.997666
numpy	O	O:0.925541
array	O	O:0.993850
returns	O	O:0.997791
a	O	O:0.999704
copy	O	B-API:0.596581
of	O	O:0.999390
the	O	O:0.986943
array	O	O:0.998267
with	O	O:0.999313
new	O	O:0.999425
items	O	O:0.998777
added	O	O:0.976745
to	O	O:0.999441
the	O	O:0.999920
end	O	O:0.973682
.	O	O:0.991205
	
I	O	O:0.999154
want	O	O:0.999366
to	O	O:0.995758
get	O	O:0.999881
the	O	O:0.999843
norm	B-API	O:0.925769
of	O	O:0.999700
this	O	O:0.994664
array	O	O:0.999300
using	O	O:0.997456
numpy	O	O:0.921329
.	O	O:0.951818
	
The	O	O:0.998607
only	O	O:0.992577
problem	O	O:0.998869
here	O	O:0.912480
is	O	O:0.999331
that	O	O:0.990167
I	O	O:0.999368
think	O	O:0.998574
it	O	O:0.996631
will	O	O:0.999716
append	O	O:0.995561
directly	O	O:0.993318
to	O	O:0.998870
the	O	O:0.999932
column	O	O:0.997628
,	O	O:0.999858
when	O	O:0.998874
I	O	O:0.998912
would	O	O:0.999794
prefer	O	O:0.994243
it	O	O:0.999831
to	O	O:0.999615
append	O	O:0.998631
to	O	O:0.999503
a	O	O:0.999957
new	O	O:0.978777
column	O	O:0.995778
.	O	O:0.985874
	
You	O	O:0.991982
don't	O	O:0.999084
need	O	O:0.998416
to	O	O:0.999135
import	O	O:0.997673
string	O	O:0.988933
,	O	O:0.998087
and	O	O:0.999707
you	O	O:0.998233
don't	O	O:0.999342
need	O	O:0.998983
to	O	O:0.999908
loop	O	O:0.999925
through	O	O:0.989704
all	O	O:0.999041
the	O	O:0.998481
lines	O	O:0.976643
and	O	O:0.998703
append	O	O:0.998639
text	O	O:0.971628
or	O	O:0.999129
count	O	O:0.977739
the	O	O:0.999470
characters	O	O:0.935859
.	O	O:0.988621
	
The	O	O:0.998358
transpose	O	O:0.982076
of	O	O:0.999501
the	O	O:0.998485
transpose	O	O:0.994014
of	O	O:0.999723
a	O	O:0.991284
matrix	O	O:0.971953
==	O	O:0.996913
that	O	O:0.988310
matrix	O	O:0.999318
,	O	O:0.999496
or	O	O:0.998754
,	O	O:0.997367
[	O	O:0.999169
A^T	O	O:0.992134
]	O	O:0.985236
^T	O	O:0.955160
==	O	O:0.951532
A	O	O:0.989258
.	O	O:0.987987
	
Currently	O	O:0.992279
I	O	O:0.999221
am	O	O:0.999735
looping	O	O:0.973793
through	O	O:0.985560
the	O	O:0.985909
arrays	O	O:0.967281
and	O	O:0.999597
using	O	O:0.997576
numpy.dstack	B-API	B-API:0.883595
to	O	O:0.992475
stack	O	O:0.995876
the	O	O:0.999091
1000	O	O:0.975440
arrays	O	O:0.996847
into	O	O:0.998811
a	O	O:0.998257
rather	O	O:0.971245
large	O	O:0.989749
3d	O	O:0.820007
array	O	O:0.976015
...	O	O:0.986927
and	O	O:0.999867
then	O	O:0.999653
will	O	O:0.999127
calculate	O	O:0.997499
the	O	O:0.999950
mean	O	O:0.991424
across	O	O:0.990059
the	O	O:0.997054
3rd	O	O:0.792097
(	O	O:0.996482
?	O	O:0.998818
)	O	O:0.998700
dimension	O	O:0.990091
.	O	O:0.988811
	
If	O	O:0.995078
you	O	O:0.999038
strip	O	O:0.981888
all	O	O:0.999293
these	O	O:0.994978
out	O	O:0.984025
and	O	O:0.999873
just	O	O:0.997819
call	O	O:0.973968
lapack	O	O:0.766885
in	O	O:0.998172
your	O	O:0.991471
for	O	O:0.998283
loop	O	O:0.910057
(	O	O:0.997902
since	O	O:0.998201
you	O	O:0.997352
already	O	O:0.999861
know	O	O:0.999053
the	O	O:0.999869
dimensions	O	O:0.981927
of	O	O:0.999537
your	O	O:0.988663
matrix	O	O:0.997831
and	O	O:0.999793
maybe	O	O:0.999014
know	O	O:0.992833
that	O	O:0.986010
it's	O	O:0.998016
real	O	O:0.929752
,	O	O:0.998762
not	O	O:0.995713
complex	O	O:0.986054
)	O	O:0.999477
,	O	O:0.997976
things	O	O:0.985134
run	O	O:0.966865
MUCH	O	O:0.985047
faster	O	O:0.822300
(	O	O:0.994781
Note	O	O:0.998825
that	O	O:0.997541
I've	O	O:0.999012
made	O	O:0.994228
my	O	O:0.992400
array	O	O:0.995807
larger	O	O:0.927340
)	O	O:0.982391
:	O	O:0.979494
#CODE	O	O:0.995002
	
First	O	O:0.994959
,	O	O:0.999435
you	O	O:0.999729
have	O	O:0.999538
a	O	O:0.999881
binomial	O	O:0.734173
response	O	O:0.969026
:	O	O:0.996887
having	O	O:0.977218
or	O	O:0.998791
not	O	O:0.995827
having	O	O:0.999003
a	O	O:0.999259
particular	O	O:0.960069
behavior	O	O:0.988067
.	O	O:0.984258
	
The	O	O:0.995627
call	O	O:0.926799
to	O	O:0.994708
`	O	O:0.998133
np.sqrt	B-API	B-API:0.959537
`	O	O:0.999533
,	O	O:0.996372
which	O	O:0.996120
is	O	O:0.999533
a	O	O:0.997297
Python	O	O:0.929193
function	O	O:0.998565
call	O	O:0.903869
,	O	O:0.997682
is	O	O:0.982019
killing	O	O:0.990109
your	O	O:0.993323
performance	O	O:0.984259
You	O	O:0.998436
are	O	O:0.998936
computing	O	O:0.996162
the	O	O:0.996708
square	O	O:0.987392
root	O	O:0.990433
of	O	O:0.997033
scalar	O	O:0.996984
floating	O	O:0.997710
point	O	O:0.997093
value	O	O:0.996015
,	O	O:0.999659
so	O	O:0.999382
you	O	O:0.998991
should	O	O:0.999418
use	O	O:0.999470
the	O	O:0.996225
`	O	O:0.994343
sqrt	B-API	B-API:0.869113
`	O	O:0.999262
function	O	O:0.994881
from	O	O:0.999088
the	O	O:0.997458
C	O	O:0.951855
math	O	O:0.968763
library	O	O:0.984200
.	O	O:0.989596
	
This	O	O:0.994939
would	O	O:0.998412
call	O	O:0.994831
the	O	O:0.995760
function	O	O:0.945097
`	O	O:0.993854
np.loadtxt	B-API	B-API:0.880334
`	O	O:0.999710
which	O	O:0.982412
would	O	O:0.999821
load	O	O:0.982981
the	O	O:0.999707
file	O	O:0.968283
`	O	O:0.998232
GPBUSD1d.txt	O	O:0.885264
'`	O	O:0.997766
and	O	O:0.994773
transpose	O	O:0.872481
(	O	O:0.992371
"	O	O:0.994005
unpack	O	O:0.581721
")	O	O:0.985326
it	O	O:0.983722
.	O	O:0.992735
	
You	O	O:0.995905
can't	O	O:0.998030
change	O	O:0.986305
the	O	O:0.999391
typing	O	O:0.969906
of	O	O:0.997079
the	O	O:0.996289
array	O	O:0.982078
in-place	O	O:0.872080
(	O	O:0.995605
unless	O	O:0.996210
I'm	O	O:0.998414
grossly	O	O:0.994770
mistaken	O	O:0.991358
)	O	O:0.994647
,	O	O:0.996142
but	O	O:0.998689
you	O	O:0.996712
can	O	O:0.999653
floor	B-API	O:0.990734
.	O	O:0.995886
	
Finally	O	O:0.994745
I	O	O:0.999756
just	O	O:0.999316
transpose	O	O:0.975094
the	O	O:0.998744
dataframe	O	O:0.999815
to	O	O:0.999662
get	O	O:0.999932
ids	O	O:0.998874
as	O	O:0.999818
rows	O	O:0.979134
and	O	O:0.999652
categories	O	O:0.998746
as	O	O:0.994461
columns	O	O:0.984290
.	O	O:0.984537
	
The	O	O:0.994459
following	O	O:0.997125
way	O	O:0.998885
of	O	O:0.998646
obtaining	O	O:0.991922
the	O	O:0.999483
unique	O	O:0.988943
elements	O	O:0.975765
in	O	O:0.998938
all	O	O:0.999027
sub-arrays	O	O:0.900126
is	O	O:0.998472
very	O	O:0.957333
fast	O	O:0.874108
:	O	O:0.993194
#CODE	O	O:0.992541
	
You	O	O:0.996064
can't	O	O:0.994921
use	O	O:0.997020
the	O	O:0.997930
numpy	O	O:0.970048
reshape	B-API	O:0.892018
for	O	O:0.998844
a	O	O:0.994884
simple	O	O:0.536229
reason	O	O:0.983638
:	O	O:0.998409
you	O	O:0.999922
have	O	O:0.999904
data	O	O:0.999834
duplicity	O	O:0.995780
in	O	O:0.999934
your	O	O:0.998794
original	O	O:0.987637
array	O	O:0.970335
(	O	O:0.997041
time	O	O:0.994537
and	O	O:0.999717
positions	O	O:0.993409
)	O	O:0.986855
and	O	O:0.999493
not	O	O:0.996706
in	O	O:0.999761
the	O	O:0.998301
result	O	O:0.996695
you	O	O:0.999344
want	O	O:0.996763
.	O	O:0.997221
	
So	O	O:0.984712
it	O	O:0.996411
does	O	O:0.995875
not	O	O:0.999417
make	O	O:0.999377
much	O	O:0.994151
sense	O	O:0.998294
to	O	O:0.997218
me	O	O:0.998777
to	O	O:0.997803
reshape	O	O:0.998194
it	O	O:0.998559
to	O	O:0.999888
a	O	O:0.999821
"	O	O:0.995843
1d-matrix	O	O:0.872867
"	O	O:0.995682
.	O	O:0.978725
	
Now	O	O:0.995119
create	O	O:0.995075
5-bit	O	O:0.993318
bitstrings	O	O:0.997401
from	O	O:0.997741
each	O	O:0.987313
integer	O	O:0.963674
and	O	O:0.999698
join	O	O:0.997336
them	O	O:0.932621
together	O	O:0.803785
:	O	O:0.992748
#CODE	O	O:0.993039
	
It	O	O:0.987813
would	O	O:0.998362
probably	O	O:0.999079
be	O	O:0.999884
just	O	O:0.998250
as	O	O:0.999513
much	O	O:0.980639
work	O	O:0.998252
to	O	O:0.999643
translate	O	O:0.999811
the	O	O:0.999175
top	O	O:0.989819
Matlab	O	O:0.978263
routine	O	O:0.995497
from	O	O:0.995817
Maurits	O	O:0.928966
.	O	O:0.993625
	
In	O	O:0.991920
the	O	O:0.999142
particular	O	O:0.999063
case	O	O:0.998439
of	O	O:0.999919
your	O	O:0.993667
example	O	O:0.997492
,	O	O:0.999743
where	O	O:0.999822
your	O	O:0.999350
unique	O	O:0.991562
values	O	O:0.993642
are	O	O:0.999395
sequential	O	O:0.996662
integers	O	O:0.985021
,	O	O:0.999347
you	O	O:0.999554
can	O	O:0.999127
use	O	O:0.999816
`	O	O:0.997738
find_objects	B-API	B-API:0.882475
`	O	O:0.998541
directly	O	O:0.868845
.	O	O:0.995348
	
axis=1	O	O:0.949297
refers	O	O:0.980928
to	O	O:0.998586
working	O	O:0.999809
on	O	O:0.999931
rows	O	O:0.985078
in	O	O:0.999772
this	O	O:0.998810
2d	O	O:0.991003
case	O	O:0.956309
(	O	O:0.997846
axis=0	O	O:0.986044
,	O	O:0.998152
in	O	O:0.998523
contrast	O	O:0.994484
,	O	O:0.999477
would	O	O:0.998939
be	O	O:0.999683
getting	O	O:0.998585
you	O	O:0.995768
the	O	O:0.999718
max	B-API	O:0.976990
in	O	O:0.999495
each	O	O:0.996696
column	O	O:0.998476
)	O	O:0.998095
	
There	O	O:0.979836
are	O	O:0.998495
many	O	O:0.998614
other	O	O:0.984559
`	O	O:0.998800
ufunc	B-API	B-API:0.871615
`	O	O:0.998415
,	O	O:0.981540
and	O	O:0.999922
other	O	O:0.997968
iteration	O	O:0.988101
modes	O	O:0.984658
-	O	O:0.997854
`	O	O:0.999126
accumulate	B-API	O:0.577038
`	O	O:0.998054
,	O	O:0.977339
`	O	O:0.997542
reduceat	B-API	B-API:0.944334
`	O	O:0.998302
.	O	O:0.969993
	
All	O	O:0.996706
diagonal	O	O:0.998705
elements	O	O:0.996212
will	O	O:0.999300
be	O	O:0.999881
of	O	O:0.999823
the	O	O:0.995033
form	O	O:0.996460
`	O	O:0.998334
s_i	O	O:0.930142
**	O	O:0.999512
2	O	O:0.972452
/	O	O:0.995505
s_i	O	O:0.898124
**	O	O:0.997294
2	O	O:0.973088
==	O	O:0.985585
1	O	O:0.940103
`	O	O:0.995087
.	O	O:0.966563
	
@USER	O	O:0.961953
In	O	O:0.997855
the	O	O:0.998926
example	O	O:0.992710
above	O	O:0.995559
,	O	O:0.999907
I	O	O:0.999525
get	O	O:0.998779
the	O	O:0.998505
following	O	O:0.981821
error	O	O:0.961308
:	O	O:0.999223
Non-broadcastable	O	O:0.994961
operand	O	O:0.997572
with	O	O:0.990929
shape	O	O:0.947752
(	O	O:0.998625
100	O	O:0.983444
)	O	O:0.998136
doesn't	O	O:0.995633
match	O	O:0.997667
the	O	O:0.999587
broadcast	B-API	O:0.920161
shape	O	O:0.968454
(	O	O:0.998028
100,100	O	O:0.988480
)	O	O:0.996374
	
is	O	O:0.997293
calculated	O	O:0.974712
such	O	O:0.998321
that	O	O:0.998124
all	O	O:0.991283
but	O	O:0.999163
the	O	O:0.993801
diagonal	O	O:0.975290
#CODE	O	O:0.982907
	
To	O	O:0.991934
compute	O	O:0.958077
the	O	O:0.999579
number	O	O:0.994752
of	O	O:0.999346
unique	O	O:0.997358
elements	O	O:0.993693
in	O	O:0.999409
a	O	O:0.999155
numpy	O	O:0.984806
array	O	O:0.997075
,	O	O:0.999443
you	O	O:0.999384
can	O	O:0.999147
use	O	O:0.999730
`	O	O:0.998652
unique	B-API	B-API:0.736134
(	O	O:0.999121
x	O	O:0.968168
)	O	O:0.998233
.size	O	B-API:0.749368
`	O	O:0.998305
or	O	O:0.983684
`	O	O:0.998210
len	B-API	B-API:0.999535
(	O	O:0.997643
unique	B-API	B-API:0.815834
(	O	O:0.994418
x	O	O:0.980966
))`	O	B-API:0.519711
(	O	O:0.997348
see	O	O:0.988365
`	O	O:0.996920
numpy.unique	B-API	B-API:0.949942
`	O	O:0.998816
)	O	O:0.992093
.	O	O:0.992241
	
Or	O	O:0.989686
would	O	O:0.999585
that	O	O:0.999904
basically	O	O:0.999876
require	O	O:0.997213
implementing	O	O:0.992030
the	O	O:0.992877
outer	O	O:0.987237
loop	O	O:0.975921
in	O	O:0.996170
Cython	O	O:0.989385
?	O	O:0.994812
	
For	O	O:0.996118
a	O	O:0.989304
tensor	O	O:0.974756
it	O	O:0.982698
is	O	O:0.998897
not	O	O:0.996599
clear	O	O:0.995757
how	O	O:0.997924
to	O	O:0.998855
define	O	O:0.999678
an	O	O:0.999457
inverse	O	O:0.987095
or	O	O:0.999720
a	O	O:0.996811
transpose	O	O:0.852086
.	O	O:0.995571
	
Second	O	O:0.995469
,	O	O:0.998928
you	O	O:0.999339
are	O	O:0.999736
doing	O	O:0.999606
transpose	B-API	O:0.982972
the	O	O:0.998392
hard	O	O:0.883274
way	O	O:0.990441
.	O	O:0.990806
	
Where	O	O:0.990669
does	O	O:0.972753
log	B-API	O:0.979072
(	O	O:0.999416
b	O	O:0.992777
,	O	O:0.998997
2	O	O:0.987820
)	O	O:0.999634
come	O	O:0.962701
from	O	O:0.997395
?	O	O:0.993508
	
(	O	O:0.997312
The	O	O:0.999442
values	O	O:0.969777
in	O	O:0.999646
the	O	O:0.999542
corners	O	O:0.992635
correspond	O	O:0.990399
to	O	O:0.999484
the	O	O:0.999965
diagonal	O	O:0.995665
elements	O	O:0.987438
.	O	O:0.997860
)	O	O:0.999222
	
I	O	O:0.997816
tried	O	O:0.996663
using	O	O:0.986683
the	O	O:0.979990
scipy.stat	B-API	B-API:0.676415
module	O	O:0.995453
by	O	O:0.997730
creating	O	O:0.998120
my	O	O:0.983882
numbers	O	O:0.977437
with	O	O:0.994653
`	O	O:0.998280
np.random.normal	B-API	B-API:0.982776
`	O	O:0.998831
,	O	O:0.994984
since	O	O:0.999223
it	O	O:0.997916
only	O	O:0.999099
takes	O	O:0.999516
data	O	O:0.976434
and	O	O:0.999304
not	O	O:0.999686
stat	O	O:0.961419
values	O	O:0.993422
like	O	O:0.996314
mean	O	O:0.997047
and	O	O:0.999226
std	O	O:0.810695
dev	O	O:0.711217
(	O	O:0.954004
is	O	O:0.997589
there	O	O:0.997325
any	O	O:0.997876
way	O	O:0.995973
to	O	O:0.995322
use	O	O:0.999873
these	O	O:0.998336
values	O	O:0.977700
directly	O	O:0.979349
)	O	O:0.998294
.	O	O:0.974937
	
The	O	O:0.993984
asymptotic	O	O:0.990577
complexity	O	O:0.997997
of	O	O:0.999630
both	O	O:0.996421
of	O	O:0.999462
the	O	O:0.995801
`	O	O:0.994026
matrix_rank	B-API	B-API:0.972438
`	O	O:0.998497
and	O	O:0.989349
`	O	O:0.998534
det	B-API	B-API:0.928776
`	O	O:0.996410
calls	O	O:0.943088
are	O	O:0.999518
therefore	O	O:0.962510
O	O	O:0.675037
(	O	O:0.998942
n^3	O	O:0.958253
)	O	O:0.998894
,	O	O:0.999002
the	O	O:0.999428
complexity	O	O:0.985327
of	O	O:0.999285
LU	O	O:0.959303
decomposition	O	O:0.980031
.	O	O:0.973805
	
I	O	O:0.996805
think	O	O:0.998920
the	O	O:0.966857
np.std()	B-API	B-API:0.991544
is	O	O:0.997773
just	O	O:0.992013
universal	O	O:0.991173
std	B-API	O:0.584705
.	O	O:0.962934
	
Golub	O	O:0.951883
and	O	O:0.996075
Van	O	O:0.985340
Loan	O	O:0.992762
also	O	O:0.991286
provide	O	O:0.998962
a	O	O:0.998297
way	O	O:0.986120
of	O	O:0.998922
storing	O	O:0.993782
a	O	O:0.996530
matrix	O	O:0.968613
in	O	O:0.997562
diagonal	O	O:0.997720
dominant	O	O:0.976442
form	O	O:0.990684
.	O	O:0.987314
	
I	O	O:0.995720
see	O	O:0.998682
no	O	O:0.984196
reason	O	O:0.994946
why	O	O:0.994739
`	O	O:0.999387
numpy	O	O:0.956136
`	O	O:0.999386
would	O	O:0.997520
need	O	O:0.999745
to	O	O:0.999863
make	O	O:0.999909
a	O	O:0.999730
copy	O	B-API:0.672344
for	O	O:0.999908
an	O	O:0.981280
operation	O	O:0.993123
like	O	O:0.997837
this	O	O:0.999318
,	O	O:0.999427
as	O	O:0.999728
long	O	O:0.991587
as	O	O:0.998271
it	O	O:0.997187
does	O	O:0.997428
the	O	O:0.998822
necessary	O	O:0.997086
checks	O	O:0.989731
for	O	O:0.997510
overlaps	O	O:0.758805
(	O	O:0.997271
though	O	O:0.998908
of	O	O:0.999462
course	O	O:0.998832
as	O	O:0.999798
others	O	O:0.997241
have	O	O:0.996126
noted	O	O:0.995802
,	O	O:0.999039
`	O	O:0.996090
resize	B-API	B-API:0.710870
`	O	O:0.999527
may	O	O:0.997929
itself	O	O:0.999726
have	O	O:0.999350
to	O	O:0.999267
allocate	O	O:0.999866
a	O	O:0.999430
new	O	O:0.997306
block	O	O:0.998408
of	O	O:0.994709
memory	O	O:0.969203
)	O	O:0.998518
.	O	O:0.982742
	
I	O	O:0.998522
found	O	O:0.998997
another	O	O:0.993797
stack	O	O:0.969065
question	O	O:0.997444
about	O	O:0.996886
this	O	O:0.993868
here	O	O:0.907342
,	O	O:0.999249
but	O	O:0.997845
I	O	O:0.994595
am	O	O:0.999380
not	O	O:0.994330
entirely	O	O:0.998271
sure	O	O:0.987213
how	O	O:0.996716
it	O	O:0.997398
was	O	O:0.997167
resolved	O	O:0.987796
,	O	O:0.997824
I'm	O	O:0.998080
still	O	O:0.999306
a	O	O:0.999585
little	O	O:0.930615
confused	O	O:0.971888
.	O	O:0.985451
	
Maybe	O	O:0.978996
`	O	O:0.997856
floor	B-API	B-API:0.697836
(	O	O:0.990650
arange	B-API	B-API:0.769686
(	O	O:0.995554
0	O	O:0.984457
,	O	O:0.998239
10	O	O:0.969330
,	O	O:0.998228
0.1	O	O:0.910136
))`	O	O:0.916189
?	O	O:0.989469
	
In	O	O:0.990367
python	O	O:0.992987
,	O	O:0.999461
I	O	O:0.998801
would	O	O:0.999866
like	O	O:0.999269
to	O	O:0.999882
convolve	O	O:0.996846
the	O	O:0.998984
two	O	O:0.995630
matrices	O	O:0.996748
along	O	O:0.994268
the	O	O:0.996633
second	O	O:0.971128
axis	O	O:0.993505
only	O	O:0.991652
.	O	O:0.998768
	
`	O	O:0.997738
view	B-API	B-API:0.814233
`	O	O:0.999261
is	O	O:0.989578
basically	O	O:0.998188
taking	O	O:0.998265
your	O	O:0.989496
two	O	O:0.998511
coordinates	O	O:0.995490
as	O	O:0.999772
a	O	O:0.999537
single	O	O:0.962965
variable	O	O:0.998951
that	O	O:0.994011
can	O	O:0.999532
be	O	O:0.999974
used	O	O:0.998971
to	O	O:0.998759
find	O	O:0.999612
the	O	O:0.999730
unique	O	O:0.973785
coordinates	O	O:0.967490
.	O	O:0.988575
	
Keep	O	O:0.976826
in	O	O:0.998773
mind	O	O:0.996419
that	O	O:0.997244
machine	O	O:0.998184
precision	O	O:0.997812
for	O	O:0.999640
a	O	O:0.997069
32-bit	O	O:0.668699
double	O	B-API:0.659263
is	O	O:0.980965
~	O	O:0.848008
10^-16	O	O:0.978839
,	O	O:0.998308
which	O	O:0.998137
will	O	O:0.998765
be	O	O:0.999920
an	O	O:0.999752
absolute	O	O:0.972781
limiting	O	O:0.974005
factor	O	O:0.744751
.	O	O:0.987896
	
Also	O	O:0.992712
,	O	O:0.999615
if	O	O:0.999345
there	O	O:0.992737
is	O	O:0.999773
then	O	O:0.995597
I	O	O:0.999818
could	O	O:0.999966
just	O	O:0.999025
append	O	O:0.991155
to	O	O:0.993053
the	O	O:0.999787
b	O	O:0.962469
and	O	O:0.999618
c	O	O:0.994777
arrays	O	O:0.993147
each	O	O:0.991037
time	O	O:0.996069
instead	O	O:0.999637
of	O	O:0.999406
overwriting	O	O:0.968829
and	O	O:0.999493
starting	O	O:0.999371
from	O	O:0.993182
scratch	O	O:0.994644
each	O	O:0.988413
loop	O	O:0.979448
.	O	O:0.993671
	
Use	O	O:0.956853
`	O	O:0.987810
multiprocessing.Process	B-API	B-API:0.979495
(	O	O:0.999337
target	O	O:0.988289
=	O	O:0.984317
somefunc	O	O:0.795011
,	O	O:0.999025
args	O	O:0.880761
=	O	O:0.725296
(	O	O:0.997437
sa	O	O:0.972301
,	O	O:0.997032
)`	O	O:0.522230
(	O	O:0.989778
and	O	O:0.999426
`	O	O:0.999353
start	O	O:0.657654
`	O	O:0.999757
,	O	O:0.998292
maybe	O	O:0.998959
`	O	O:0.999769
join	B-API	O:0.566081
`)	O	O:0.999764
to	O	O:0.997826
call	O	O:0.996846
`	O	O:0.997336
somefunc	O	B-API:0.962288
`	O	O:0.999292
in	O	O:0.998018
a	O	O:0.999819
separate	O	O:0.967675
process	O	O:0.977298
,	O	O:0.999071
passing	O	O:0.991091
the	O	O:0.991698
shared	O	O:0.887057
array	O	O:0.990111
.	O	O:0.982194
	
Take	O	O:0.997647
a	O	O:0.998515
look	O	O:0.987779
a	O	O:0.999470
the	O	O:0.991192
concatenate	B-API	B-API:0.536294
function	O	O:0.985934
.	O	O:0.985549
	
Unlike	O	O:0.963089
Joe	O	O:0.992447
Kington's	O	O:0.991961
answer	O	O:0.982890
,	O	O:0.999295
the	O	O:0.998903
benefit	O	O:0.991504
of	O	O:0.999559
this	O	O:0.980106
is	O	O:0.999886
that	O	O:0.993462
you	O	O:0.999289
don't	O	O:0.999885
need	O	O:0.999311
to	O	O:0.999906
know	O	O:0.999920
the	O	O:0.999878
original	O	O:0.996185
shape	O	O:0.998638
of	O	O:0.999626
the	O	O:0.999907
data	O	O:0.996735
in	O	O:0.999598
the	O	O:0.998297
`	O	O:0.999062
.mat	O	B-API:0.772060
`	O	O:0.999672
file	O	O:0.977725
,	O	O:0.999720
i.e.	O	O:0.998185
no	O	O:0.999176
need	O	O:0.997318
to	O	O:0.999452
reshape	O	O:0.999331
upon	O	O:0.988170
reading	O	O:0.963193
in	O	O:0.995019
.	O	O:0.989337
	
but	O	O:0.993428
I	O	O:0.999214
think	O	O:0.999141
,	O	O:0.995967
finding	O	O:0.989571
the	O	O:0.991183
local	O	O:0.994136
max	O	O:0.980683
can	O	O:0.996873
be	O	O:0.999914
simplified	O	O:0.990300
to	O	O:0.943949
:	O	O:0.999334
#CODE	O	O:0.995348
	
@USER	O	O:0.961941
`	O	O:0.995375
swapaxes	B-API	B-API:0.897583
`	O	O:0.998153
seemed	O	O:0.958861
to	O	O:0.999598
be	O	O:0.999762
indistinguishable	O	O:0.996068
from	O	O:0.986054
`	O	O:0.997830
transpose	B-API	O:0.854137
(	O	O:0.999546
0	O	O:0.989537
,	O	O:0.997405
2	O	O:0.983641
,	O	O:0.997385
1	O	O:0.991652
)`	O	O:0.971948
.	O	O:0.982546
	
Do	O	O:0.991176
gradient	B-API	O:0.997601
actually	O	O:0.997089
compute	O	O:0.963221
really	O	O:0.999093
a	O	O:0.997463
gradient	O	O:0.917914
?	O	O:0.993928
	
I	O	O:0.993451
would	O	O:0.999062
suggest	O	O:0.987970
to	O	O:0.999596
first	O	O:0.998333
program	O	O:0.997467
it	O	O:0.999122
with	O	O:0.998343
`	O	O:0.991635
np.nditer	B-API	B-API:0.949909
`	O	O:0.998602
and	O	O:0.999431
then	O	O:0.998918
translate	O	O:0.996392
it	O	O:0.999763
into	O	O:0.980951
C	O	O:0.918894
.	O	O:0.978590
	
As	O	O:0.996391
you	O	O:0.998950
can	O	O:0.999690
see	O	O:0.999964
,	O	O:0.999928
using	O	O:0.999637
the	O	O:0.997712
join	B-API	B-API:0.616904
function	O	O:0.996179
on	O	O:0.996566
the	O	O:0.998650
list	O	O:0.782410
(	O	O:0.994548
`	O	O:0.999781
binary_list	O	O:0.616179
`)	O	O:0.999722
works	O	O:0.991587
properly	O	O:0.995184
,	O	O:0.999472
but	O	O:0.999067
on	O	O:0.999234
the	O	O:0.999468
equivalent	O	O:0.989833
numpy	O	O:0.990220
array	O	O:0.959397
(	O	O:0.990627
`	O	O:0.999381
binary_split_array	O	O:0.517103
`)	O	O:0.999240
it	O	O:0.975957
doesn't	O	O:0.990133
:	O	O:0.999686
we	O	O:0.999813
can	O	O:0.999559
see	O	O:0.999835
the	O	O:0.999443
string	O	O:0.995308
returned	O	O:0.956898
is	O	O:0.999519
only	O	O:0.992864
72	O	O:0.997848
characters	O	O:0.997859
long	O	O:0.993957
instead	O	O:0.999709
of	O	O:0.996656
80	O	O:0.938111
.	O	O:0.992468
	
@USER	O	O:0.964640
.B	O	O:0.848212
.	O	O:0.998494
the	O	O:0.999264
above	O	O:0.981226
question	O	O:0.981935
is	O	O:0.997976
significantly	O	O:0.991147
different	O	O:0.998563
from	O	O:0.991116
mine	O	O:0.898506
;	O	O:0.998655
it	O	O:0.997067
asks	O	O:0.982652
for	O	O:0.999118
both	O	O:0.957161
min	B-API	O:0.787052
and	O	O:0.997211
max	B-API	O:0.871633
,	O	O:0.978818
and	O	O:0.998825
it	O	O:0.991630
is	O	O:0.993589
for	O	O:0.996224
2D	O	O:0.865344
matrix	O	O:0.949153
	
This	O	O:0.998494
will	O	O:0.998742
join	O	O:0.994083
the	O	O:0.999817
rows	O	O:0.969062
and	O	O:0.999538
write	O	O:0.999899
them	O	O:0.968556
to	O	O:0.999877
a	O	O:0.999892
new	O	O:0.931169
csv	O	O:0.925373
:	O	O:0.991894
#CODE	O	O:0.992972
	
The	O	O:0.992918
reason	O	O:0.996305
I	O	O:0.999676
have	O	O:0.998536
`	O	O:0.996317
-det	O	O:0.692790
(	O	O:0.999483
mat	O	O:0.995964
)`	O	O:0.978745
in	O	O:0.997453
the	O	O:0.997200
energy	O	O:0.962981
function	O	O:0.991938
is	O	O:0.998490
because	O	O:0.998287
the	O	O:0.999196
simulated	O	O:0.997297
annealing	O	O:0.974570
algorithm	O	O:0.996214
does	O	O:0.984445
minimization	O	O:0.988636
.	O	O:0.996132
	
Also	O	O:0.973197
is	O	O:0.994125
`	O	O:0.998458
x	O	O:0.800930
`	O	O:0.999229
unique	O	O:0.842935
?	O	O:0.995592
	
Pandas	O	O:0.991327
append	B-API	O:0.959528
filtered	O	O:0.990600
row	O	O:0.998590
to	O	O:0.998347
another	O	O:0.999462
DataFrame	O	O:0.999684
	
Again	O	O:0.992690
,	O	O:0.999603
the	O	O:0.999735
code	O	O:0.968723
notes	O	O:0.999321
that	O	O:0.999608
set	O	O:0.999044
of	O	O:0.999632
combinations	O	O:0.638133
is	O	O:0.997906
not	O	O:0.996419
unique	O	O:0.931788
;	O	O:0.987524
but	O	O:0.989986
it	O	O:0.999741
does	O	O:0.999081
have	O	O:0.999734
a	O	O:0.999889
unique	O	O:0.974783
subset	O	O:0.973339
,	O	O:0.998882
namely	O	O:0.992701
[[	O	O:0.998010
2	O	O:0.993752
3	O	O:0.989818
]	O	O:0.995029
,	O	O:0.996189
[	O	O:0.998135
0	O	O:0.992960
1	O	O:0.983836
]]	O	O:0.996426
,	O	O:0.998669
which	O	O:0.999191
as	O	O:0.998806
you	O	O:0.999657
just	O	O:0.998862
revealed	O	O:0.998713
,	O	O:0.999096
you	O	O:0.999444
do	O	O:0.998585
consider	O	O:0.999271
a	O	O:0.998217
valid	O	O:0.932435
combination	O	O:0.994518
.	O	O:0.980744
	
That	O	O:0.998774
concatenate	B-API	O:0.960782
action	O	O:0.978925
should	O	O:0.996610
be	O	O:0.999091
pretty	O	O:0.995728
fast	O	O:0.871505
.	O	O:0.986074
	
If	O	O:0.995369
you	O	O:0.999611
want	O	O:0.999552
to	O	O:0.999938
pass	O	O:0.997751
in	O	O:0.999268
the	O	O:0.998922
transpose	O	O:0.982274
,	O	O:0.999283
you'll	O	O:0.999000
need	O	O:0.998829
to	O	O:0.999877
set	O	O:0.998424
`	O	O:0.999038
rowvar	O	B-API:0.856942
`	O	O:0.999605
to	O	O:0.991151
zero	O	O:0.995902
.	O	O:0.993896
	
You	O	O:0.994567
can	O	O:0.997641
override	O	O:0.999526
this	O	O:0.999566
behavior	O	O:0.999664
by	O	O:0.998390
using	O	O:0.998373
the	O	O:0.984768
arguments	O	O:0.770122
`	O	O:0.996670
vmin	O	B-API:0.894541
`	O	O:0.999212
and	O	O:0.986085
`	O	O:0.999588
vmax	O	B-API:0.983225
`	O	O:0.996953
(	O	O:0.987516
or	O	O:0.998932
`	O	O:0.999523
norm	O	O:0.847435
`)	O	O:0.999880
of	O	O:0.995218
`	O	O:0.986548
imshow	B-API	B-API:0.919830
`	O	O:0.997866
.	O	O:0.948200
	
@USER	O	O:0.972774
,	O	O:0.994603
`	O	O:0.998397
cs	O	O:0.518197
`	O	O:0.998051
is	O	O:0.985767
sorted	O	O:0.948349
and	O	O:0.997797
`	O	O:0.991467
searchsorted()	B-API	B-API:0.992648
`	O	O:0.997662
exploits	O	O:0.985656
that	O	O:0.998501
to	O	O:0.999290
do	O	O:0.999953
a	O	O:0.999296
binary	O	O:0.844345
search	O	O:0.982113
-	O	O:0.999598
only	O	O:0.996853
`	O	O:0.998352
O	O	B-API:0.875052
(	O	O:0.996002
log	B-API	O:0.903631
(	O	O:0.981815
len	B-API	B-API:0.996456
(	O	O:0.998396
weights	O	O:0.986857
)))`	O	O:0.957747
comparisons	O	O:0.985099
are	O	O:0.994695
needed	O	O:0.995835
.	O	O:0.993957
	
Think	O	O:0.983339
`	O	O:0.998477
flatten	B-API	O:0.731449
`	O	O:0.998560
without	O	O:0.953334
the	O	O:0.998409
copy	O	B-API:0.892588
.	O	O:0.987945
	
In	O	O:0.998430
your	O	O:0.995611
case	O	O:0.995566
it	O	O:0.999591
looks	O	O:0.999010
like	O	O:0.998857
the	O	O:0.999381
weight	O	O:0.991848
arrays	O	O:0.995257
will	O	O:0.999410
have	O	O:0.999747
the	O	O:0.999942
same	O	O:0.997027
dimension	O	O:0.998448
as	O	O:0.996643
'	O	O:0.990087
A	O	O:0.994459
'	O	O:0.995949
,	O	O:0.999480
so	O	O:0.999384
you	O	O:0.998131
reshape	O	O:0.999760
them	O	O:0.994776
accordingly	O	O:0.987594
and	O	O:0.999651
multiply	O	O:0.934306
dx	O	O:0.916602
and	O	O:0.999541
dy	O	O:0.995474
by	O	O:0.996407
their	O	O:0.995946
individual	O	O:0.965467
weight	O	O:0.978022
vectors	O	O:0.846003
.	O	O:0.990586
	
Does	O	O:0.997124
this	O	O:0.998721
mean	O	O:0.995034
the	O	O:0.999817
standard	O	O:0.995557
error	O	O:0.995127
of	O	O:0.999095
the	O	O:0.998547
gradient	O	O:0.990995
or	O	O:0.995598
intercept	O	O:0.996149
?	O	O:0.998172
	
Also	O	O:0.993069
,	O	O:0.999689
the	O	O:0.998799
algo	O	O:0.932409
has	O	O:0.999381
a	O	O:0.999496
lot	O	O:0.988635
of	O	O:0.997815
matrices	O	O:0.943485
manipulation	O	O:0.966773
(	O	O:0.997746
fft	B-API	O:0.897499
,	O	O:0.998036
filters	O	O:0.925308
,	O	O:0.998251
etc	O	O:0.998417
.	O	O:0.998965
)	O	O:0.999587
,	O	O:0.999742
so	O	O:0.999317
using	O	O:0.998385
numpy	O	O:0.963979
/	O	O:0.986946
scipy	O	O:0.988304
should	O	O:0.994496
result	O	O:0.998733
in	O	O:0.999040
faster	O	O:0.960985
run	O	O:0.984851
time	O	O:0.978264
.	O	O:0.991767
	
You	O	O:0.995821
can	O	O:0.998722
broadcast	O	O:0.999584
that	O	O:0.999709
into	O	O:0.996154
an	O	O:0.999449
array	O	O:0.998248
using	O	O:0.997360
expressions	O	O:0.961487
,	O	O:0.994877
for	O	O:0.994778
example	O	O:0.870161
#CODE	O	O:0.983961
	
If	O	O:0.997846
I	O	O:0.998377
use	O	O:0.999265
the	O	O:0.980047
above	O	O:0.988313
test	O	O:0.960254
on	O	O:0.999567
the	O	O:0.999884
absolute	O	O:0.997834
values	O	O:0.994734
of	O	O:0.999628
the	O	O:0.999104
angles	O	O:0.983374
to	O	O:0.998973
be	O	O:0.999760
tested	O	O:0.993428
,	O	O:0.999103
everything	O	O:0.994063
	
The	O	O:0.996267
returned	O	O:0.981635
gradient	O	O:0.989820
hence	O	O:0.979980
has	O	O:0.983515
	
"	O	O:0.989564
In	O	O:0.997059
the	O	O:0.999389
first	O	O:0.995073
case	O	O:0.998038
the	O	O:0.998814
gradient	O	O:0.954236
is	O	O:0.995002
1	O	O:0.978536
mV	O	O:0.994295
/	O	O:0.996833
ms	O	O:0.989729
,	O	O:0.998520
in	O	O:0.998984
the	O	O:0.997904
second	O	O:0.983984
case	O	O:0.997216
it	O	O:0.995917
is	O	O:0.998482
50	O	O:0.947061
mV	O	O:0.986945
/	O	O:0.991863
ms	O	O:0.931707
.	O	O:0.987534
	
If	O	O:0.992928
True	O	O:0.957645
,	O	O:0.999282
uses	O	O:0.980578
the	O	O:0.999225
old	O	O:0.986380
behavior	O	O:0.995446
from	O	O:0.990544
Numeric	O	O:0.911764
,	O	O:0.996549
(	O	O:0.994996
correlate	B-API	O:0.724290
(	O	O:0.999310
a	O	O:0.998529
,	O	O:0.998113
v	O	O:0.990026
)	O	O:0.998169
==	O	O:0.978644
correlate	B-API	O:0.762691
(	O	O:0.994625
v	O	O:0.986471
,	O	O:0.999836
a	O	O:0.997047
)	O	O:0.996163
,	O	O:0.997679
and	O	O:0.999679
the	O	O:0.997943
conjugate	O	B-API:0.648540
is	O	O:0.995272
not	O	O:0.997157
taken	O	O:0.992111
for	O	O:0.998457
complex	O	O:0.905139
arrays	O	O:0.944507
)	O	O:0.994280
.	O	O:0.980891
	
Why	O	O:0.992842
don't	O	O:0.997872
you	O	O:0.999896
just	O	O:0.999798
compress	O	O:0.998843
the	O	O:0.999571
files	O	O:0.995423
with	O	O:0.997116
the	O	O:0.999288
built-in	O	O:0.963176
`	O	O:0.997016
gzip	O	B-API:0.952474
`	O	O:0.998643
module	O	O:0.958018
?	O	O:0.996812
	
So	O	O:0.996831
you	O	O:0.999708
need	O	O:0.999504
to	O	O:0.999727
write	O	O:0.999910
some	O	O:0.977678
function	O	O:0.999840
that	O	O:0.997825
convert	O	O:0.990147
a	O	O:0.999711
poly	O	O:0.565409
parameters	O	O:0.984725
array	O	O:0.996020
to	O	O:0.999775
a	O	O:0.999908
latex	O	O:0.942154
string	O	O:0.996567
,	O	O:0.998905
here	O	O:0.940596
is	O	O:0.999367
an	O	O:0.987669
example	O	O:0.917884
:	O	O:0.991290
#CODE	O	O:0.995188
	
In	O	O:0.999581
your	O	O:0.995921
example	O	O:0.994370
,	O	O:0.999660
the	O	O:0.999024
square	O	O:0.948566
root	O	O:0.961360
is	O	O:0.999649
calculated	O	O:0.995253
by	O	O:0.997061
evaluating	O	O:0.990165
the	O	O:0.989710
the	O	O:0.990933
module	O	O:0.972414
and	O	O:0.999517
the	O	O:0.999718
argument	O	O:0.990326
of	O	O:0.999667
your	O	O:0.996592
complex	O	O:0.983271
number	O	O:0.970218
(	O	O:0.997764
essentially	O	O:0.999062
via	O	O:0.995941
the	O	O:0.993300
log	B-API	O:0.951236
function	O	O:0.998194
,	O	O:0.998568
which	O	O:0.997917
returns	O	O:0.967422
log	B-API	O:0.964537
(	O	O:0.995897
module	O	O:0.992426
)	O	O:0.994798
+	O	O:0.994041
i	O	O:0.995172
phase	O	O:0.990745
)	O	O:0.991697
.	O	O:0.984460
	
I	O	O:0.993536
am	O	O:0.998901
trying	O	O:0.989065
to	O	O:0.999069
run	O	O:0.995402
hstack	B-API	O:0.921278
to	O	O:0.999612
join	O	O:0.999396
a	O	O:0.999436
column	O	O:0.997315
of	O	O:0.999712
integer	O	O:0.970997
values	O	O:0.993261
to	O	O:0.998635
a	O	O:0.999978
list	O	O:0.977622
of	O	O:0.999798
columns	O	O:0.999449
created	O	O:0.997802
by	O	O:0.999168
a	O	O:0.988288
TF-IDF	O	B-API:0.655048
(	O	O:0.999028
so	O	O:0.998947
I	O	O:0.999144
can	O	O:0.999869
eventually	O	O:0.997456
use	O	O:0.999677
all	O	O:0.991333
of	O	O:0.998668
these	O	O:0.997816
columns	O	O:0.998034
/	O	O:0.998600
features	O	O:0.970731
in	O	O:0.999440
a	O	O:0.999057
classifier	O	O:0.956088
)	O	O:0.998282
.	O	O:0.987169
	
How	O	O:0.991580
to	O	O:0.999028
pass	O	O:0.996937
these	O	O:0.980988
`	O	O:0.998689
norm	O	B-API:0.895875
`	O	O:0.998246
and	O	O:0.959403
`	O	O:0.999693
cmap	O	B-API:0.940720
`	O	O:0.999471
parameters	O	O:0.638512
in	O	O:0.999551
matplotlib	O	O:0.993728
to	O	O:0.995307
`	O	O:0.999577
plt.show	B-API	B-API:0.842190
`	O	O:0.999480
or	O	O:0.987759
`	O	O:0.998419
imshow()	B-API	B-API:0.978304
`	O	O:0.998270
?	O	O:0.978943
	
Forget	O	O:0.990922
about	O	O:0.995189
the	O	O:0.996245
C	O	O:0.924053
stack	O	O:0.906467
,	O	O:0.999247
numpy	O	O:0.993425
objects	O	O:0.975169
can't	O	O:0.989268
use	O	O:0.995148
it	O	O:0.991015
.	O	O:0.985568
	
You	O	O:0.997184
can	O	O:0.997791
use	O	O:0.999854
the	O	O:0.998025
append	B-API	B-API:0.537857
function	O	O:0.995948
as	O	O:0.988822
he	O	O:0.972956
has	O	O:0.992320
defined	O	O:0.897400
.	O	O:0.980644
	
This	O	O:0.993869
can	O	O:0.998976
be	O	O:0.999908
particularly	O	O:0.998118
tricky	O	O:0.992463
when	O	O:0.994844
trying	O	O:0.997896
to	O	O:0.999827
append	O	O:0.996426
to	O	O:0.999280
a	O	O:0.999863
numpy	O	O:0.995819
array	O	O:0.993832
quickly	O	O:0.972309
.	O	O:0.991247
	
I	O	O:0.998551
have	O	O:0.999799
a	O	O:0.998811
question	O	O:0.991654
regarding	O	O:0.993970
to	O	O:0.998572
the	O	O:0.999489
`	O	O:0.996383
fft	B-API	B-API:0.877085
`	O	O:0.998406
and	O	O:0.986419
`	O	O:0.999100
ifft	B-API	B-API:0.973799
`	O	O:0.998282
functions	O	O:0.947031
.	O	O:0.993942
	
So	O	O:0.995226
for	O	O:0.998897
now	O	O:0.993304
,	O	O:0.998959
I	O	O:0.999828
just	O	O:0.998758
changed	O	O:0.985126
the	O	O:0.995574
max	B-API	O:0.602719
(	O	O:0.998412
z	O	O:0.991918
)	O	O:0.999509
to	O	O:0.999703
a	O	O:0.999886
number	O	O:0.991097
that	O	O:0.998732
I	O	O:0.999968
know	O	O:0.989192
is	O	O:0.994644
the	O	O:0.988245
max	B-API	O:0.533066
(	O	O:0.997776
1567	O	O:0.959025
)	O	O:0.998312
.	O	O:0.982964
	
The	O	O:0.989447
`	O	O:0.998931
add	B-API	O:0.908473
`	O	O:0.998905
operation	O	O:0.933213
does	O	O:0.997168
not	O	O:0.998827
do	O	O:0.999476
the	O	O:0.999581
same	O	O:0.989461
thing	O	O:0.998771
as	O	O:0.998802
`	O	O:0.998839
join	B-API	B-API:0.922788
`	O	O:0.997132
.	O	O:0.961293
	
You	O	O:0.994220
don't	O	O:0.998547
specify	O	O:0.956884
`	O	O:0.999403
x	O	O:0.870331
`	O	O:0.999481
or	O	O:0.982046
`	O	O:0.999438
y	O	O:0.817242
`	O	O:0.998884
,	O	O:0.991741
and	O	O:0.999972
your	O	O:0.990544
`	O	O:0.995540
mat	O	O:0.804341
[:	O	O:0.998556
,	O	O:0.996013
i+1	O	O:0.957921
]`	O	O:0.991210
indexing	O	O:0.983848
will	O	O:0.997738
not	O	O:0.999807
work	O	O:0.999588
with	O	O:0.999750
a	O	O:0.999131
structured	O	O:0.945334
array	O	O:0.987563
.	O	O:0.984549
	
This	O	O:0.974310
is	O	O:0.999036
because	O	O:0.993992
in	O	O:0.999744
some	O	O:0.996814
cases	O	O:0.973114
it's	O	O:0.983355
not	O	O:0.998468
just	O	O:0.998313
NaNs	O	O:0.996012
and	O	O:0.998627
1s	O	O:0.988546
,	O	O:0.990882
but	O	O:0.999644
other	O	O:0.994693
integers	O	O:0.993213
,	O	O:0.997637
which	O	O:0.997302
gives	O	O:0.998785
a	O	O:0.998378
std	O	O:0.509792
>	O	O:0.988859
0	O	O:0.949435
.	O	O:0.985151
	
`	O	O:0.988541
fromiter	B-API	B-API:0.949355
`	O	O:0.999011
wants	O	O:0.991739
a	O	O:0.999504
1d	O	O:0.883185
input	O	O:0.996057
,	O	O:0.998931
e.g.	O	O:0.985369
`	O	O:0.996540
[	O	O:0.993477
1	O	O:0.999241
,	O	O:0.995072
2	O	O:0.988979
,	O	O:0.997962
3	O	O:0.986640
]`	O	O:0.988836
(	O	O:0.998196
or	O	O:0.999736
the	O	O:0.998862
generator	O	O:0.998563
equivalent	O	O:0.982823
)	O	O:0.998708
.	O	O:0.985434
	
read	O	O:0.783967
more	O	O:0.955677
:	O	O:0.991936
take()	B-API	B-API:0.677867
	
For	O	O:0.996464
this	O	O:0.995148
I'm	O	O:0.999626
using	O	O:0.999584
an	O	O:0.998246
instance	O	O:0.989566
of	O	O:0.997292
the	O	O:0.991426
`	O	O:0.999275
numpy	O	O:0.821789
`	O	O:0.999618
class	O	O:0.913234
`	O	O:0.996872
RandomState	B-API	B-API:0.899196
`	O	O:0.997181
.	O	O:0.958258
	
You	O	O:0.994517
can	O	O:0.998356
write	O	O:0.999825
a	O	O:0.999744
thinly	O	O:0.903270
wrapped	O	O:0.995945
subclass	O	O:0.975402
to	O	O:0.992438
`	O	O:0.999560
np.ndarray	B-API	B-API:0.944789
`	O	O:0.998558
.	O	O:0.973680
	
Using	O	O:0.957675
`	O	O:0.982880
ndarray.reshape	B-API	B-API:0.978593
`	O	O:0.997777
#CODE	O	O:0.949997
	
E.g.	O	O:0.989138
this	O	O:0.996627
works	O	O:0.996441
in	O	O:0.998858
the	O	O:0.967070
interpreter	O	O:0.944092
:	O	O:0.991146
`	O	O:0.999022
>>>	O	O:0.991658
a	O	O:0.998454
=	O	O:0.612869
np.arange	B-API	B-API:0.944257
(	O	O:0.992821
10	O	O:0.985155
,	O	O:0.998778
dtype=float	O	O:0.643662
)	O	O:0.994420
.resize	B-API	B-API:0.995966
(	O	O:0.995504
1	O	O:0.985960
,	O	O:0.998517
5	O	O:0.994379
)`	O	O:0.990823
,	O	O:0.998847
because	O	O:0.998392
the	O	O:0.993193
interpreter	O	O:0.996482
doesn't	O	O:0.995852
"	O	O:0.999708
see	O	O:0.994234
"	O	O:0.998275
the	O	O:0.997530
intermediate	O	O:0.950768
value	O	O:0.978482
.	O	O:0.978229
	
I	O	O:0.992276
attempted	O	O:0.999379
your	O	O:0.942000
suggestion	O	O:0.970196
but	O	O:0.995756
got	O	O:0.991111
stuck	O	O:0.993432
trying	O	O:0.997802
to	O	O:0.999666
iterate	O	O:0.998624
through	O	O:0.995536
the	O	O:0.997913
existing	O	O:0.965812
dtype	B-API	B-API:0.869429
.	O	O:0.977359
	
`	O	O:0.957199
numpy.setdiff1d	B-API	B-API:0.980724
(	O	O:0.999801
a	O	O:0.997170
,	O	O:0.999219
a	O	O:0.997715
[	O	O:0.988378
sel_id	O	O:0.963173
])`	O	O:0.995363
should	O	O:0.992272
do	O	O:0.998994
the	O	O:0.998870
trick	O	O:0.978133
.	O	O:0.990558
	
Instead	O	O:0.997286
of	O	O:0.998017
disabling	O	O:0.997868
the	O	O:0.998582
behavior	O	O:0.990979
you	O	O:0.997790
could	O	O:0.998175
try	O	O:0.999887
using	O	O:0.988500
np.select	B-API	B-API:0.979302
:	O	O:0.956584
	
+1	O	O:0.975964
I	O	O:0.998385
liked	O	O:0.994505
you	O	O:0.986891
approach	O	O:0.992071
,	O	O:0.998815
but	O	O:0.998964
how	O	O:0.998736
to	O	O:0.999755
make	O	O:0.999423
`	O	O:0.999640
np.copyto()	B-API	B-API:0.784156
`	O	O:0.999888
work	O	O:0.990370
with	O	O:0.999951
a	O	O:0.999139
memoryvew	O	O:0.867129
?	O	O:0.996579
	
Just	O	O:0.988943
import	O	O:0.932366
Decimal	O	O:0.809536
and	O	O:0.997242
for	O	O:0.999359
the	O	O:0.989522
printing	O	O:0.985106
just	O	O:0.983045
write	O	O:0.996210
print	O	O:0.936543
Decimal	O	B-API:0.734780
(	O	O:0.993053
ndarray	B-API	O:0.575673
[	O	O:0.996478
i	O	O:0.972803
])	O	O:0.993076
.	O	O:0.973726
	
Or	O	O:0.994142
,	O	O:0.998875
for	O	O:0.999725
that	O	O:0.984559
matter	O	O:0.996932
,	O	O:0.998694
numpy.genfromtxt	B-API	B-API:0.944165
.	O	O:0.978037
	
glad	O	O:0.917093
to	O	O:0.998582
hear	O	O:0.992649
it	O	O:0.999086
-	O	O:0.999591
I	O	O:0.999717
only	O	O:0.997809
recently	O	O:0.995595
found	O	O:0.996068
out	O	O:0.997819
about	O	O:0.992379
`	O	O:0.992901
np.einsum	B-API	B-API:0.973477
`	O	O:0.997200
myself	O	O:0.785044
,	O	O:0.998536
and	O	O:0.998016
it	O	O:0.995381
has	O	O:0.996521
rocked	O	O:0.984554
my	O	O:0.990837
world	O	O:0.997763
ever	O	O:0.994406
since	O	O:0.996874
	
The	O	O:0.981443
`	O	O:0.998151
dtype	B-API	B-API:0.846203
`	O	O:0.999319
could	O	O:0.986239
be	O	O:0.999835
deduced	O	O:0.998153
from	O	O:0.980852
one	O	O:0.992644
(	O	O:0.998443
or	O	O:0.999893
more	O	O:0.996840
)	O	O:0.999810
of	O	O:0.997126
the	O	O:0.999092
dictionary	O	O:0.998289
items	O	O:0.891461
:	O	O:0.996134
#CODE	O	O:0.998299
	
I	O	O:0.989193
didn't	O	O:0.990543
realize	O	O:0.922236
`	O	O:0.994762
array_split	B-API	B-API:0.987460
`	O	O:0.996408
existed	O	O:0.887466
!	O	O:0.992589
	
However	O	O:0.995980
,	O	O:0.998805
in	O	O:0.999756
that	O	O:0.998323
case	O	O:0.999686
,	O	O:0.999870
you	O	O:0.997862
could	O	O:0.999746
just	O	O:0.999216
do	O	O:0.995325
:	O	O:0.985644
(	O	O:0.995582
`	O	O:0.998953
searchsorted	B-API	B-API:0.888737
`	O	O:0.999571
uses	O	O:0.944926
bisection	O	O:0.997134
)	O	O:0.995404
#CODE	O	O:0.975335
	
Btw	O	O:0.992758
.	O	O:0.998476
you	O	O:0.999151
can	O	O:0.999952
also	O	O:0.999976
implicitly	O	O:0.999838
force	O	O:0.989627
the	O	O:0.997149
`	O	O:0.997053
dtype	B-API	B-API:0.919216
`	O	O:0.999554
to	O	O:0.990919
be	O	O:0.999840
`	O	O:0.999353
float	O	B-API:0.677361
`	O	O:0.999898
when	O	O:0.991078
using	O	O:0.998843
dots	O	O:0.549837
:	O	O:0.961939
#CODE	O	O:0.994568
	
dtypes	B-API	B-API:0.805691
.	O	O:0.979307
	
I	O	O:0.996770
would	O	O:0.999733
prefer	O	O:0.996569
using	O	O:0.999705
the	O	O:0.981191
xor	O	O:0.911174
ufunc	O	O:0.948190
I	O	O:0.997704
think	O	O:0.998138
,	O	O:0.994917
which	O	O:0.982322
is	O	O:0.991513
`	O	O:0.996923
bitwise_xor	B-API	B-API:0.929016
`	O	O:0.995145
(	O	O:0.985690
or	O	O:0.999136
`	O	O:0.998731
logical_xor	B-API	B-API:0.812447
`)	O	O:0.996535
:	O	O:0.989996
#CODE	O	O:0.994715
	
This	O	O:0.971899
is	O	O:0.998989
the	O	O:0.999334
root	O	O:0.991356
of	O	O:0.997733
why	O	O:0.999713
your	O	O:0.998113
`	O	O:0.998834
fromarrays	B-API	B-API:0.887045
`	O	O:0.997785
works	O	O:0.957168
,	O	O:0.998467
but	O	O:0.993451
not	O	O:0.996722
the	O	O:0.999553
`	O	O:0.988597
append_fields	O	B-API:0.969689
`	O	O:0.998804
.	O	O:0.973653
	
The	O	O:0.991773
dtype	B-API	B-API:0.757191
should	O	O:0.995626
be	O	O:0.998040
big	O	O:0.989289
endian	O	O:0.865410
.	O	O:0.976235
	
parameterArray	O	O:0.813685
+=	O	O:0.993518
line.split()	O	O:0.654621
\nline	O	O:0.926420
=	O	O:0.990584
self.inputBuffer.next()	O	B-API:0.605500
\	O	O:0.997019
nnp.parameterArray	O	O:0.862800
=	O	O:0.934352
np.array	B-API	B-API:0.975984
(	O	O:0.998537
parameterArray	O	O:0.944513
)	O	O:0.997445
	
As	O	O:0.995080
JoshAdel	O	O:0.996338
points	O	O:0.993085
out	O	O:0.993618
,	O	O:0.999687
`	O	O:0.998641
vectorize	B-API	B-API:0.623202
`	O	O:0.997822
wraps	O	O:0.733988
`	O	O:0.997360
frompyfunc	B-API	B-API:0.950045
`	O	O:0.998020
.	O	O:0.971234
	
Sorry	O	O:0.974881
,	O	O:0.998902
the	O	O:0.997910
line	O	O:0.964139
was	O	O:0.991067
output	O	O:0.989957
[	O	O:0.998312
i	O	O:0.993936
,	O	O:0.999434
j	O	O:0.985829
]	O	O:0.993514
=	O	O:0.921747
np.sum	B-API	B-API:0.778172
(	O	O:0.991508
ssd_difference	O	O:0.755148
[	O	O:0.989218
#URL	O	O:0.962577
(	O	O:0.997797
)	O	O:0.998585
)	O	O:0.995408
	
(	O	O:0.992823
or	O	O:0.997952
`	O	O:0.998011
np.array	B-API	B-API:0.901134
([[	O	O:0.998947
1	O	O:0.976010
]	O	O:0.992677
,	O	O:0.994106
[	O	O:0.996973
2	O	O:0.992531
]	O	O:0.992583
,	O	O:0.995838
[	O	O:0.996980
3	O	O:0.990477
]	O	O:0.994376
,	O	O:0.996107
[	O	O:0.997860
4	O	O:0.990261
]])	O	O:0.996789
.shape	B-API	B-API:0.720359
`)	O	O:0.995062
	
Thank	O	O:0.990263
you	O	O:0.994943
for	O	O:0.999785
the	O	O:0.998401
great	O	O:0.992712
tipp	O	O:0.974488
with	O	O:0.994709
`	O	O:0.995161
plt.hist	B-API	B-API:0.885096
(	O	O:0.998612
img.ravel()	O	B-API:0.533525
)`	O	O:0.961172
!	O	O:0.972610
	
The	O	O:0.973599
`	O	O:0.997486
recarray	B-API	B-API:0.886984
`	O	O:0.998516
class	O	O:0.974740
accepts	O	O:0.997998
an	O	O:0.996974
aligned	O	O:0.947236
parameter	O	O:0.987144
,	O	O:0.989018
but	O	O:0.996003
looks	O	O:0.995952
to	O	O:0.999753
lose	O	O:0.998332
it	O	O:0.998996
in	O	O:0.998695
`	O	O:0.999254
format_parser	B-API	B-API:0.733841
`	O	O:0.998404
.	O	O:0.969284
	
In	O	O:0.997137
case	O	O:0.995479
someone	O	O:0.996239
comes	O	O:0.989556
past	O	O:0.996726
this	O	O:0.994233
,	O	O:0.999339
numpy	O	O:0.974272
(	O	O:0.999254
as	O	O:0.999528
of	O	O:0.998019
1.8	O	O:0.953925
I	O	O:0.999540
think	O	O:0.998775
)	O	O:0.995495
support	O	O:0.901660
higher	O	O:0.981814
that	O	O:0.988569
2D	O	O:0.994115
generation	O	O:0.998551
of	O	O:0.998236
position	O	O:0.993927
grids	O	O:0.992076
with	O	O:0.988310
meshgrid	B-API	O:0.597476
.	O	O:0.993137
	
`	O	O:0.968768
numpy.random.choice	B-API	B-API:0.991466
`	O	O:0.989224
is	O	O:0.992300
not	O	O:0.998153
implemented	O	O:0.978470
in	O	O:0.990481
Python	O	O:0.958659
but	O	O:0.997391
in	O	O:0.999644
a	O	O:0.998169
`	O	O:0.982221
.pyx	O	B-API:0.986713
`	O	O:0.999741
file	O	O:0.960854
which	O	O:0.999217
needs	O	O:0.999226
to	O	O:0.999592
be	O	O:0.999785
compiled	O	O:0.996183
to	O	O:0.996736
C	O	O:0.997687
using	O	O:0.993749
Cython	O	O:0.823054
.	O	O:0.961032
	
A	O	O:0.997512
plain	O	O:0.963784
`	O	O:0.993203
.copy	B-API	B-API:0.986996
`	O	O:0.998421
did	O	O:0.971013
work	O	O:0.998087
for	O	O:0.999381
me	O	O:0.925914
.	O	O:0.980043
	
`	O	O:0.982547
A	O	O:0.985806
[	O	O:0.990200
np.ix_	B-API	B-API:0.964473
(	O	O:0.994613
x	O	O:0.980733
,	O	O:0.999250
y	O	O:0.992580
)]`	O	O:0.976115
	
einsum	B-API	B-API:0.793458
:	O	O:0.994080
5.2	O	O:0.942164
s	O	O:0.966764
	
10**423	O	O:0.915199
exceeds	O	O:0.995014
the	O	O:0.993435
largest	O	O:0.979464
int	O	O:0.956798
representable	O	O:0.992891
as	O	O:0.998489
an	O	O:0.988602
integer	O	O:0.817533
(	O	O:0.991451
or	O	O:0.999283
float	O	O:0.947922
)	O	O:0.999362
NumPy	O	O:0.987378
dtype	B-API	B-API:0.739403
,	O	O:0.998279
so	O	O:0.994783
there	O	O:0.980761
is	O	O:0.999505
no	O	O:0.998227
point	O	O:0.994966
in	O	O:0.999006
using	O	O:0.997554
NumPy	O	O:0.900791
here	O	O:0.525946
:	O	O:0.991522
`	O	O:0.994607
np.iinfo	B-API	B-API:0.944611
(	O	O:0.989212
'	O	O:0.994088
int64	O	O:0.909704
')	O	O:0.991723
.max	B-API	B-API:0.902098
<	O	O:0.994553
10**423	O	O:0.904164
`	O	O:0.994877
.	O	O:0.971581
	
Probably	O	O:0.993535
,	O	O:0.998807
better	O	O:0.991055
performance	O	O:0.992422
is	O	O:0.999431
by	O	O:0.996012
using	O	O:0.994790
`	O	O:0.883309
numpy.fromiter	B-API	B-API:0.998149
`	O	O:0.985758
:	O	O:0.953572
#CODE	O	O:0.997776
	
Why	O	O:0.990802
are	O	O:0.999439
the	O	O:0.999614
polyfit	B-API	O:0.793278
constants	O	O:0.993060
from	O	O:0.998245
the	O	O:0.999753
third	O	O:0.991560
case	O	O:0.996852
listed	O	O:0.997129
as	O	O:0.996683
NAN	O	O:0.507656
?	O	O:0.990451
	
Try	O	O:0.982115
`	O	O:0.987663
numpy.array_split	B-API	B-API:0.985587
`	O	O:0.998096
.	O	O:0.971492
	
Using	O	O:0.961579
np.repeat	B-API	B-API:0.659982
on	O	O:0.996473
sub-arrays	O	O:0.947450
	
shows	O	O:0.994428
that	O	O:0.988220
'	O	O:0.998205
region	O	O:0.980003
'	O	O:0.995097
has	O	O:0.998617
an	O	O:0.994473
`	O	O:0.993574
object	O	O:0.826578
`	O	O:0.997898
dtype	B-API	B-API:0.957115
:	O	O:0.995167
#CODE	O	O:0.973491
	
What	O	O:0.990620
I	O	O:0.998425
am	O	O:0.999379
looking	O	O:0.981111
for	O	O:0.997061
is	O	O:0.998669
something	O	O:0.995031
along	O	O:0.992878
the	O	O:0.999632
original	O	O:0.990629
functionality	O	O:0.996958
of	O	O:0.994364
`	O	O:0.990762
np.unique	B-API	B-API:0.961703
`	O	O:0.997728
#CODE	O	O:0.946745
	
In	O	O:0.997417
my	O	O:0.992548
opinion	O	O:0.993632
,	O	O:0.996982
np.matrix	B-API	B-API:0.540188
should	O	O:0.993973
override	O	O:0.960956
for	O	O:0.999119
addition	O	O:0.983449
and	O	O:0.998671
subtraction	O	O:0.991371
as	O	O:0.994994
well	O	O:0.961312
.	O	O:0.995066
	
or	O	O:0.992283
`	O	O:0.993821
np.vstack	B-API	B-API:0.919989
`	O	O:0.999286
,	O	O:0.980008
`	O	O:0.997794
np.dstack	B-API	B-API:0.964109
`	O	O:0.998128
`	O	O:0.987679
np.r_	B-API	B-API:0.679148
`	O	O:0.999077
,	O	O:0.962801
`	O	O:0.998513
np.c_	B-API	B-API:0.868584
`	O	O:0.999298
,	O	O:0.982498
`	O	O:0.997403
np.concatenate	B-API	B-API:0.930421
`	O	O:0.999756
depending	O	O:0.989963
on	O	O:0.999659
the	O	O:0.998557
desired	O	O:0.975311
shapes	O	O:0.914285
.	O	O:0.992089
	
TypeError	O	O:0.996879
when	O	O:0.994729
using	O	O:0.998059
SymPy	O	O:0.991110
matrices	O	O:0.921916
for	O	O:0.973724
numpy.linalg.eig	B-API	B-API:0.951554
	
Doing	O	O:0.985452
`	O	O:0.992535
a.astype	O	B-API:0.982688
(	O	O:0.999103
float	O	O:0.931264
)`	O	O:0.975070
actually	O	O:0.989525
creates	O	O:0.997604
a	O	O:0.995121
*	O	O:0.998142
new	O	O:0.936533
*	O	O:0.999139
ndarray	B-API	O:0.736185
which	O	O:0.991316
is	O	O:0.997379
of	O	O:0.998260
type	O	O:0.755741
`	O	O:0.998875
float	O	B-API:0.738936
`	O	O:0.997624
.	O	O:0.951286
	
Trying	O	O:0.996294
to	O	O:0.998328
vectorize	B-API	O:0.999451
the	O	O:0.998186
code	O	O:0.997117
also	O	O:0.997045
resulted	O	O:0.998812
in	O	O:0.999121
very	O	O:0.983463
poor	O	O:0.991127
performance	O	O:0.993084
,	O	O:0.994290
	
Also	O	O:0.997546
look	O	O:0.994419
into	O	O:0.993353
the	O	O:0.995599
genfromtxt	B-API	B-API:0.679232
and	O	O:0.998480
loadtxt	B-API	O:0.868147
family	O	O:0.986917
of	O	O:0.998230
Numpy	O	O:0.971014
functions	O	O:0.991852
.	O	O:0.979898
	
`	O	O:0.997099
coll	O	O:0.950856
[	O	O:0.999435
1	O	O:0.991741
]	O	O:0.968965
.set_color	B-API	B-API:0.868168
(	O	O:0.994299
"	O	O:0.998608
r	O	O:0.974426
")	O	O:0.982012
#	O	O:0.994314
this	O	O:0.990021
does	O	O:0.995097
not	O	O:0.999528
work	O	O:0.998849
,	O	O:0.999698
coll	O	O:0.994302
not	O	O:0.997189
indexable	O	O:0.998462
this	O	O:0.996739
way	O	O:0.990348
`	O	O:0.996343
	
The	O	O:0.980592
`	O	O:0.998137
testing.assert_equal	B-API	B-API:0.571125
`	O	O:0.999234
approach	O	O:0.902874
is	O	O:0.999179
almost	O	O:0.994805
good	O	O:0.975200
,	O	O:0.996625
except	O	O:0.997913
that	O	O:0.996434
it	O	O:0.999692
presumably	O	O:0.999012
fails	O	O:0.995773
if	O	O:0.992544
`	O	O:0.998866
__debug__	O	B-API:0.730413
`	O	O:0.994222
is	O	O:0.987083
False	O	O:0.956802
!	O	O:0.975931
	
I've	O	O:0.993325
just	O	O:0.980329
checked	O	O:0.984232
and	O	O:0.999349
found	O	O:0.988506
out	O	O:0.994589
that	O	O:0.998473
my	O	O:0.997429
implementation	O	O:0.990236
is	O	O:0.998536
about	O	O:0.983036
2.x	O	O:0.968990
times	O	O:0.935607
*	O	O:0.998053
faster	O	O:0.947185
*	O	O:0.999748
than	O	O:0.996998
using	O	O:0.996312
`	O	O:0.977665
numpy.convolve	B-API	B-API:0.997893
`	O	O:0.996325
.	O	O:0.936019
	
Not	O	O:0.997227
as	O	O:0.999292
concise	O	O:0.989554
as	O	O:0.998461
I	O	O:0.990304
wanted	O	O:0.980899
(	O	O:0.979153
I	O	O:0.998140
was	O	O:0.997983
experimenting	O	O:0.982151
with	O	O:0.992800
`	O	O:0.998828
mask_indices	B-API	O:0.510677
`	O	O:0.999293
)	O	O:0.992488
,	O	O:0.997571
but	O	O:0.999370
this	O	O:0.997151
will	O	O:0.999751
also	O	O:0.999511
do	O	O:0.999771
the	O	O:0.997744
work	O	O:0.744948
:	O	O:0.997879
#CODE	O	O:0.997854
	
The	O	O:0.991814
documentation	O	O:0.995524
of	O	O:0.995129
`	O	O:0.983423
numpy.nonzero()	B-API	B-API:0.916709
`	O	O:0.997630
describes	O	O:0.981671
how	O	O:0.999916
its	O	O:0.992875
result	O	O:0.999079
must	O	O:0.997231
be	O	O:0.999114
interpreted	O	O:0.991309
.	O	O:0.967477
	
scikits-learn	O	O:0.962642
pca	B-API	O:0.947759
dimension	O	O:0.998291
reduction	O	O:0.991420
issue	O	O:0.984788
	
`	O	O:0.990209
np.mean	B-API	B-API:0.913671
`	O	O:0.999159
can	O	O:0.999007
also	O	O:0.999964
preserve	O	O:0.997663
dimensions	O	O:0.994172
if	O	O:0.997561
needed	O	O:0.996892
.	O	O:0.994437
	
Are	O	O:0.997770
there	O	O:0.998862
alternatives	O	O:0.996538
to	O	O:0.998830
do	O	O:0.999913
the	O	O:0.999858
sorts	O	O:0.982265
of	O	O:0.998979
things	O	O:0.971825
`	O	O:0.998914
einsum	B-API	B-API:0.706844
`	O	O:0.999471
can	O	O:0.995448
do	O	O:0.999890
with	O	O:0.999464
sparse	O	O:0.954094
matrices	O	O:0.991358
?	O	O:0.989395
	
Your	O	O:0.996931
immediate	O	O:0.988748
problem	O	O:0.976273
is	O	O:0.986133
`	O	O:0.985527
numpy.putmask	B-API	B-API:0.982180
`	O	O:0.997517
.	O	O:0.964811
	
why	O	O:0.990141
not	O	O:0.994226
`	O	O:0.999173
np.array	B-API	B-API:0.986645
([	O	O:0.998985
o.value1	O	O:0.506721
for	O	O:0.997297
o	O	O:0.961357
in	O	O:0.997593
objects	O	O:0.967038
])`	O	O:0.993788
?	O	O:0.987800
	
In	O	O:0.999192
a	O	O:0.997529
comment	O	O:0.979551
to	O	O:0.995902
`	O	O:0.999802
@USER	O	O:0.870643
`	O	O:0.999688
s	O	O:0.947518
answer	O	O:0.996961
I	O	O:0.997711
suggested	O	O:0.990125
`	O	O:0.973359
np.delete	B-API	B-API:0.981964
`	O	O:0.997534
.	O	O:0.957622
	
I	O	O:0.998529
have	O	O:0.999665
a	O	O:0.977783
`	O	O:0.986294
numpy.ndarray	B-API	B-API:0.929694
`	O	O:0.997247
.	O	O:0.949624
	
I	O	O:0.992892
believe	O	O:0.996616
it	O	O:0.998009
comes	O	O:0.995727
down	O	O:0.989430
to	O	O:0.999138
the	O	O:0.999927
fact	O	O:0.991911
that	O	O:0.997167
Python	O	O:0.995258
calls	O	O:0.999317
a	O	O:0.986869
`	O	O:0.923518
__getitem__	B-API	B-API:0.859645
`	O	O:0.998837
on	O	O:0.998678
your	O	O:0.998925
objects	O	O:0.974214
and	O	O:0.998585
treats	O	O:0.995549
the	O	O:0.997771
entire	O	O:0.995963
block	O	O:0.998574
of	O	O:0.999500
code	O	O:0.992525
of	O	O:0.998785
`	O	O:0.997078
for	O	O:0.975271
`	O	O:0.999271
loop	O	O:0.968435
as	O	O:0.999685
an	O	O:0.819246
inline	O	B-API:0.784972
statement	O	O:0.993992
.	O	O:0.984597
	
In	O	O:0.992713
the	O	O:0.994140
Notes	O	O:0.981503
section	O	O:0.992894
to	O	O:0.993336
column_stack	B-API	O:0.921307
,	O	O:0.999648
it	O	O:0.999566
points	O	O:0.988333
out	O	O:0.997358
this	O	O:0.991794
:	O	O:0.995665
	
`	O	O:0.958882
logical_or	B-API	B-API:0.978534
(	O	O:0.999770
a	O	O:0.997342
,	O	O:0.948436
logical_or	B-API	B-API:0.932218
(	O	O:0.997280
b	O	O:0.981410
,	O	O:0.999392
c	O	O:0.985290
))`	O	O:0.939344
	
How	O	O:0.992230
about	O	O:0.994907
reading	O	O:0.999353
them	O	O:0.985354
in	O	O:0.999261
correctly	O	O:0.997211
as	O	O:0.998996
numpy.datetime64	O	O:0.710735
objects	O	O:0.992219
using	O	O:0.971757
numpy.loadtxt	B-API	B-API:0.994535
(	O	O:0.990990
they	O	O:0.993235
are	O	O:0.998463
coming	O	O:0.995430
from	O	O:0.999148
a	O	O:0.997995
csv	O	O:0.993353
file	O	O:0.990915
)	O	O:0.998633
?	O	O:0.994176
	
Also	O	O:0.994112
-	O	O:0.999402
I	O	O:0.999171
see	O	O:0.999503
that	O	O:0.987644
np.getfromtxt()	O	O:0.687187
has	O	O:0.999564
a	O	O:0.991473
'	O	O:0.988707
dtype	B-API	B-API:0.521549
'	O	O:0.997627
option	O	O:0.983229
which	O	O:0.996541
allows	O	O:0.987943
the	O	O:0.999716
user	O	O:0.979686
to	O	O:0.998710
specify	O	O:0.999025
the	O	O:0.999594
datatype	O	O:0.974773
of	O	O:0.999357
each	O	O:0.980520
column	O	O:0.997841
.	O	O:0.992053
	
No	O	O:0.995764
worries	O	O:0.987813
,	O	O:0.999227
the	O	O:0.998884
dtype	B-API	B-API:0.942623
is	O	O:0.998764
inferred	O	O:0.901504
as	O	O:0.990721
`	O	O:0.990091
int64	O	B-API:0.733455
`	O	O:0.998244
unless	O	O:0.980688
you	O	O:0.999713
pass	O	O:0.992682
it	O	O:0.998599
explicitly	O	O:0.985325
	
whats	O	O:0.995323
the	O	O:0.998664
result	O	O:0.998305
of	O	O:0.997713
`	O	O:0.997831
print	O	O:0.998158
a	O	O:0.998731
`	O	O:0.961655
after	O	O:0.936681
`	O	O:0.999789
a	O	O:0.979702
=	O	O:0.920451
np.loadtxt	B-API	B-API:0.732962
`	O	O:0.988228
	
Keep	O	O:0.976617
in	O	O:0.998761
mind	O	O:0.996727
that	O	O:0.996094
`	O	O:0.998893
np.cov	B-API	B-API:0.873504
`	O	O:0.998080
is	O	O:0.995663
basically	O	O:0.999152
doing	O	O:0.995799
`	O	O:0.993518
data.dot	O	B-API:0.952031
(	O	O:0.998407
data.T	O	O:0.908149
)`	O	O:0.944281
.	O	O:0.979724
	
If	O	O:0.995396
you	O	O:0.999616
want	O	O:0.999552
to	O	O:0.999866
vectorize	B-API	O:0.999419
operations	O	O:0.993204
,	O	O:0.999269
you	O	O:0.999800
need	O	O:0.999019
to	O	O:0.999895
think	O	O:0.999865
in	O	O:0.999633
terms	O	O:0.994739
of	O	O:0.998770
these	O	O:0.965874
higher	O	O:0.993323
dimensional	O	O:0.945871
arrays	O	O:0.911663
.	O	O:0.981116
	
Does	O	O:0.973636
`	O	O:0.998170
s2	O	O:0.908363
=	O	O:0.985004
pd.Series	B-API	B-API:0.939492
(	O	O:0.994211
s	O	O:0.959935
,	O	O:0.999242
dtype	B-API	B-API:0.788177
=o	O	O:0.971784
bject	O	O:0.891368
)`	O	O:0.986666
work	O	O:0.957423
?	O	O:0.998368
	
`	O	O:0.985184
PyArray_DATA	B-API	B-API:0.927798
`	O	O:0.997558
is	O	O:0.995719
defined	O	O:0.945348
in	O	O:0.991382
	
`	O	O:0.998835
a	O	O:0.937594
[:	O	O:0.972974
,	O	O:0.992674
:	O	O:0.997163
,	O	O:0.999528
5	O	O:0.996822
]	O	O:0.996365
.shape	B-API	B-API:0.893475
=	O	O:0.741104
(	O	O:0.996064
10	O	O:0.978240
,	O	O:0.998028
10	O	O:0.986505
,	O	O:0.998316
1	O	O:0.993134
)`	O	O:0.985022
	
Can	O	O:0.983681
you	O	O:0.997808
print	O	O:0.997774
`	O	O:0.999458
datas	O	O:0.875205
[	O	O:0.999431
0	O	O:0.993434
]	O	O:0.991098
.shape	B-API	B-API:0.934824
`	O	O:0.995891
?	O	O:0.982687
	
actually	O	O:0.994101
used	O	O:0.940537
is	O	O:0.999543
this	O	O:0.995779
line	O	O:0.995788
within	O	O:0.989846
the	O	O:0.997574
definition	O	O:0.986403
for	O	O:0.992651
`	O	O:0.998014
np.array_repr	B-API	B-API:0.839419
`	O	O:0.997549
	
That's	O	O:0.991581
why	O	O:0.996374
`	O	O:0.997246
dstack	B-API	B-API:0.842070
`	O	O:0.996960
behaves	O	O:0.980866
the	O	O:0.998190
way	O	O:0.898751
it	O	O:0.995895
does	O	O:0.989101
.	O	O:0.997495
	
>>>	O	O:0.976692
x	O	O:0.976106
=	O	O:0.946567
np.asanyarray	B-API	B-API:0.950960
(	O	O:0.987471
[	O	O:0.996208
]	O	O:0.997902
,	O	O:0.990980
dtype=	O	O:0.850595
'	O	O:0.995676
float64	O	O:0.822959
')	O	O:0.990882
	
This	O	O:0.983584
doesn't	O	O:0.998582
work	O	O:0.996539
for	O	O:0.999890
floating	O	O:0.985782
point	O	O:0.974698
types	O	O:0.663375
(	O	O:0.997149
it	O	O:0.997583
will	O	O:0.997637
not	O	O:0.999320
consider	O	O:0.997460
+	O	O:0.991239
0.0	O	O:0.923802
and	O	O:0.999133
-	O	O:0.997800
0.0	O	O:0.882910
the	O	O:0.999520
same	O	O:0.988675
value	O	O:0.995536
)	O	O:0.998958
,	O	O:0.998111
and	O	O:0.998912
`	O	O:0.994786
np.intersect1d	B-API	B-API:0.993782
`	O	O:0.999043
uses	O	O:0.828809
sorting	O	O:0.989880
,	O	O:0.996869
so	O	O:0.997470
it	O	O:0.979929
is	O	O:0.996854
has	O	O:0.997221
linearithmic	O	O:0.967252
,	O	O:0.996625
not	O	O:0.994527
linear	O	O:0.930474
,	O	O:0.997375
performance	O	O:0.981355
.	O	O:0.986124
	
But	O	O:0.995887
off	O	O:0.996537
course	O	O:0.998139
,	O	O:0.999351
isreal	B-API	O:0.741089
would	O	O:0.998272
be	O	O:0.999838
more	O	O:0.997507
readable	O	O:0.942000
:-)	O	O:0.984121
	
mshgrd	O	O:0.894341
=	O	O:0.953567
ax.pcolormesh	B-API	B-API:0.902885
(	O	O:0.993355
X	O	O:0.983297
,	O	O:0.998608
Y	O	O:0.987291
,	O	O:0.999073
Z	O	O:0.979135
)	O	O:0.997248
	
Otherwise	O	O:0.992777
,	O	O:0.999330
the	O	O:0.999340
performance	O	O:0.996489
advantages	O	O:0.996875
of	O	O:0.999522
using	O	O:0.998293
numpy	O	O:0.995889
are	O	O:0.985248
quickly	O	O:0.993722
nullified	O	O:0.978948
,	O	O:0.999753
regardless	O	O:0.999585
of	O	O:0.999522
how	O	O:0.999087
you	O	O:0.999547
implement	O	O:0.999248
your	O	O:0.998447
ringbuffer	B-API	O:0.896942
.	O	O:0.995985
	
The	O	O:0.984891
answer	O	O:0.907088
is	O	O:0.983904
numpy.clip	B-API	B-API:0.934078
#CODE	O	O:0.983306
	
Can	O	O:0.985716
you	O	O:0.998176
please	O	O:0.997491
go	O	O:0.998828
into	O	O:0.997777
more	O	O:0.995654
depth	O	O:0.996946
about	O	O:0.990662
nesting	O	O:0.996475
a	O	O:0.995779
recarray	B-API	O:0.720578
in	O	O:0.999851
another	O	O:0.999044
by	O	O:0.998878
using	O	O:0.997392
the	O	O:0.849053
np.object	O	B-API:0.860559
method	O	O:0.988162
?	O	O:0.989118
	
Why	O	O:0.996901
do	O	O:0.997369
you	O	O:0.999721
need	O	O:0.998109
`	O	O:0.999699
vectorize	B-API	O:0.765638
`	O	O:0.998506
for	O	O:0.994558
that	O	O:0.993725
?	O	O:0.995061
	
I	O	O:0.989431
did	O	O:0.989409
try	O	O:0.994057
gc.colletc()	O	O:0.806039
without	O	O:0.988985
success	O	O:0.949085
but	O	O:0.993535
adding	O	O:0.998286
a	O	O:0.994729
clf()	B-API	B-API:0.809310
inside	O	O:0.995628
the	O	O:0.997331
loop	O	O:0.981384
does	O	O:0.996750
the	O	O:0.999391
trick	O	O:0.994336
!	O	O:0.986023
	
not	O	O:0.998161
a	O	O:0.999435
bad	O	O:0.952319
solution	O	O:0.996501
;	O	O:0.998473
though	O	O:0.993123
I	O	O:0.999715
am	O	O:0.999479
somewhat	O	O:0.996431
wary	O	O:0.993840
of	O	O:0.998819
the	O	O:0.997926
performance	O	O:0.998086
of	O	O:0.967990
random.shuffle	B-API	B-API:0.943594
.	O	O:0.994052
	
date2num	B-API	B-API:0.783078
,	O	O:0.985237
ValueError	O	O:0.939730
:	O	O:0.996906
ordinal	O	O:0.988987
must	O	O:0.998327
be	O	O:0.996248
>	O	O:0.998813
=	O	O:0.920774
1	O	O:0.967250
	
And	O	O:0.996519
you	O	O:0.999162
could	O	O:0.999551
override	O	O:0.992950
`	O	O:0.999242
__mul__	B-API	B-API:0.869789
`	O	O:0.999301
,	O	O:0.982880
`	O	O:0.999114
__add__	B-API	B-API:0.936006
`	O	O:0.999298
,	O	O:0.987276
`	O	O:0.999140
__sub__	B-API	B-API:0.870786
`	O	O:0.999447
accordingly	O	O:0.895601
,	O	O:0.999382
but	O	O:0.996116
I	O	O:0.997138
don't	O	O:0.999896
know	O	O:0.989037
exactly	O	O:0.998688
how	O	O:0.998483
numpy-like	O	O:0.970283
you	O	O:0.998184
actually	O	O:0.997988
*	O	O:0.999931
need	O	O:0.986708
*	O	O:0.999925
this	O	O:0.998553
to	O	O:0.999269
be	O	O:0.999891
,	O	O:0.999877
so	O	O:0.996801
I	O	O:0.998366
can't	O	O:0.999299
say	O	O:0.991647
for	O	O:0.999612
sure	O	O:0.888192
.	O	O:0.985650
	
`	O	O:0.988563
np.array	B-API	B-API:0.983312
=	O	O:0.980573
partial	O	O:0.804804
(	O	O:0.977699
np.array	B-API	B-API:0.914183
,	O	O:0.995149
dtype=	O	O:0.981693
np.float32	O	O:0.937322
)`	O	O:0.980568
with	O	O:0.976015
`	O	O:0.999033
partial	O	O:0.937196
`	O	O:0.999656
from	O	O:0.988786
the	O	O:0.999574
`	O	O:0.993671
functools	O	B-API:0.943378
`	O	O:0.998021
module	O	O:0.949666
.	O	O:0.994137
	
A	O	O:0.993564
solution	O	O:0.992365
that	O	O:0.877157
worked	O	O:0.997960
uses	O	O:0.964676
griddata	B-API	B-API:0.562609
.	O	O:0.979106
	
Numpy	O	O:0.974193
1.7.0	O	O:0.921539
assert_array_almost_equal	B-API	O:0.796604
documentation	O	O:0.987729
	
You	O	O:0.984773
can	O	O:0.999239
read	O	O:0.988877
matlab	O	O:0.959021
(	O	O:0.999312
.mat	B-API	O:0.933501
)	O	O:0.999680
files	O	O:0.970432
in	O	O:0.998232
Python	O	O:0.991528
,	O	O:0.997481
try	O	O:0.994212
this	O	O:0.957331
:	O	O:0.998679
#CODE	O	O:0.997228
	
Thanks	O	O:0.966437
for	O	O:0.998247
the	O	O:0.998685
idea	O	O:0.975830
of	O	O:0.993258
genfromtxt()	B-API	B-API:0.904283
.	O	O:0.994470
	
If	O	O:0.992817
you	O	O:0.998983
are	O	O:0.999780
using	O	O:0.999596
numpy	O	O:0.982612
,	O	O:0.993440
for	O	O:0.999151
multidimensional	O	O:0.954493
lists	O	O:0.807122
`	O	O:0.991090
numpy.repeat	B-API	B-API:0.960030
`	O	O:0.996430
is	O	O:0.998558
your	O	O:0.998219
best	O	O:0.967593
bet	O	O:0.968997
.	O	O:0.983131
	
If	O	O:0.995709
the	O	O:0.998124
following	O	O:0.987285
equation	O	O:0.973136
is	O	O:0.996867
element-wise	O	O:0.974055
True	O	O:0.985480
,	O	O:0.999759
then	O	O:0.986818
allclose	B-API	O:0.952461
returns	O	O:0.973223
`	O	O:0.997369
True	O	B-API:0.522675
`	O	O:0.993406
:	O	O:0.977762
#CODE	O	O:0.997799
	
`	O	O:0.983510
np.vstack	B-API	B-API:0.970857
`	O	O:0.999925
just	O	O:0.968980
vertically	O	O:0.997289
stacks	O	O:0.990527
the	O	O:0.997950
arrays	O	O:0.947850
you	O	O:0.999077
pass	O	O:0.974410
to	O	O:0.999019
it	O	O:0.999886
,	O	O:0.999230
and	O	O:0.999782
so	O	O:0.999819
something	O	O:0.999157
else	O	O:0.990699
in	O	O:0.999933
your	O	O:0.997472
code	O	O:0.990103
may	O	O:0.999769
be	O	O:0.999858
cutting	O	O:0.986716
off	O	O:0.996542
the	O	O:0.999851
rest	O	O:0.992044
of	O	O:0.999874
the	O	O:0.996158
results	O	O:0.995843
inadvertently	O	O:0.959663
.	O	O:0.994294
	
If	O	O:0.998222
you	O	O:0.999719
move	O	O:0.990936
the	O	O:0.999631
line	O	O:0.965182
`	O	O:0.999336
np_verticies=	O	O:0.637178
np.array	B-API	B-API:0.825395
(	O	O:0.997592
verticies	O	O:0.995905
)`	O	O:0.997390
outside	O	O:0.995210
of	O	O:0.987457
`	O	O:0.995264
Fnumpy	O	O:0.570818
`	O	O:0.998714
and	O	O:0.998916
the	O	O:0.999433
timed	O	O:0.740297
section	O	O:0.999749
your	O	O:0.990640
results	O	O:0.999400
will	O	O:0.998684
be	O	O:0.999727
very	O	O:0.992561
different	O	O:0.933202
:	O	O:0.985549
#CODE	O	O:0.992513
	
`	O	O:0.987445
fromiter	B-API	O:0.550702
`'	O	O:0.997656
s	O	O:0.949127
example	O	O:0.935218
is	O	O:0.996577
essentially	O	O:0.991436
this	O	O:0.984796
:	O	O:0.995699
`	O	O:0.995638
np.fromiter	B-API	B-API:0.789170
((	O	O:0.989560
x*x	O	O:0.853082
for	O	O:0.997189
x	O	O:0.954904
in	O	O:0.990389
range	O	O:0.985390
(	O	O:0.998006
5	O	O:0.990601
))	O	O:0.744711
,	O	O:0.996034
int	O	O:0.854187
)`	O	O:0.943754
.	O	O:0.971381
	
In	O	O:0.990577
Python	O	O:0.990878
,	O	O:0.999606
I	O	O:0.999604
have	O	O:0.999642
a	O	O:0.998080
numpy.array	B-API	O:0.754143
of	O	O:0.998844
integers	O	O:0.912589
`	O	O:0.998553
[	O	O:0.990520
2	O	O:0.998231
,	O	O:0.996448
4	O	O:0.983890
,	O	O:0.998075
7	O	O:0.987471
,	O	O:0.998550
8	O	O:0.987623
,	O	O:0.998430
9	O	O:0.985614
,	O	O:0.998493
10	O	O:0.986417
,	O	O:0.998331
15	O	O:0.984731
,	O	O:0.998175
10	O	O:0.973539
8]	O	O:0.983229
`	O	O:0.995626
.	O	O:0.971793
	
I	O	O:0.998449
will	O	O:0.999144
go	O	O:0.997406
with	O	O:0.999031
newaxis	B-API	O:0.993066
then	O	O:0.994776
.	O	O:0.998546
	
pcolormesh	B-API	B-API:0.597459
returns	O	O:0.988601
a	O	O:0.985970
QuadMesh	B-API	O:0.928936
.	O	O:0.989207
	
And	O	O:0.998731
when	O	O:0.997863
I	O	O:0.999666
call	O	O:0.999623
each	O	O:0.952273
of	O	O:0.995460
the	O	O:0.997958
instructions	O	O:0.997075
inside	O	O:0.992145
f()	B-API	O:0.613002
individually	O	O:0.979590
it	O	O:0.998378
gives	O	O:0.997908
me	O	O:0.994320
an	O	O:0.999778
other	O	O:0.990446
result	O	O:0.983722
(	O	O:0.996548
which	O	O:0.995117
is	O	O:0.996977
correct	O	O:0.945696
):	O	O:0.996023
#CODE	O	O:0.993330
	
Here's	O	O:0.981638
one	O	O:0.998480
vectorized	O	O:0.993399
approach	O	O:0.997609
based	O	O:0.981479
on	O	O:0.996711
`	O	O:0.986095
np.einsum	B-API	B-API:0.948132
`	O	O:0.997420
-	O	O:0.986699
#CODE	O	O:0.995254
	
What's	O	O:0.991430
the	O	O:0.992791
`	O	O:0.997660
dtype	B-API	B-API:0.847766
`	O	O:0.999573
of	O	O:0.990482
these	O	O:0.994667
arrays	O	O:0.981439
?	O	O:0.990161
	
try	O	O:0.986059
adding	O	O:0.994846
a	O	O:0.996496
`	O	O:0.965474
show()	B-API	B-API:0.928466
`	O	O:0.998848
in	O	O:0.996834
the	O	O:0.999679
end	O	O:0.969110
	
`	O	O:0.986942
pandas.DataFrame	B-API	B-API:0.960443
`	O	O:0.997887
	
You	O	O:0.994819
can	O	O:0.998780
define	O	O:0.999752
your	O	O:0.998808
own	O	O:0.998837
types	O	O:0.994977
by	O	O:0.996360
creating	O	O:0.995466
a	O	O:0.980035
class	O	O:0.976898
and	O	O:0.999169
writing	O	O:0.998677
a	O	O:0.965251
`	O	O:0.975435
__add__	B-API	B-API:0.798452
`	O	O:0.999324
or	O	O:0.979740
`	O	O:0.998789
__sub__	B-API	B-API:0.979963
`	O	O:0.995302
method	O	O:0.982318
.	O	O:0.995702
	
On	O	O:0.990761
the	O	O:0.999195
other	O	O:0.997938
hand	O	O:0.993346
,	O	O:0.999847
if	O	O:0.999134
I	O	O:0.998453
did	O	O:0.998880
with	O	O:0.990347
`	O	O:0.999230
genfromtxt	B-API	B-API:0.677057
`	O	O:0.999509
,	O	O:0.998434
the	O	O:0.999804
third	O	O:0.986530
column	O	O:0.992980
is	O	O:0.996401
problem	O	O:0.980982
because	O	O:0.991463
it	O	O:0.997080
includes	O	O:0.997410
comma	O	O:0.996821
inside	O	O:0.992207
double-quota	O	O:0.825855
.	O	O:0.982327
	
Apparently	O	O:0.989782
,	O	O:0.999602
if	O	O:0.999323
there	O	O:0.987823
is	O	O:0.999259
no	O	O:0.987810
'	O	O:0.994344
missing_value	O	O:0.839175
'	O	O:0.984986
attribute	O	O:0.992567
Netcdf4	O	O:0.996810
defaults	O	O:0.991226
to	O	O:0.999867
a	O	O:0.999810
missing	O	O:0.973024
value	O	O:0.999526
appropriate	O	O:0.992586
for	O	O:0.999447
the	O	O:0.995555
dtype	B-API	B-API:0.933153
.	O	O:0.974450
	
do	O	O:0.992261
be	O	O:0.998584
aware	O	O:0.995512
that	O	O:0.995663
if	O	O:0.999261
you	O	O:0.999855
have	O	O:0.998148
NaNs	O	O:0.998235
,	O	O:0.999719
there	O	O:0.997149
is	O	O:0.999521
an	O	O:0.998501
equivalent	O	O:0.997974
np.nanstd	B-API	O:0.885743
with	O	O:0.997834
the	O	O:0.997849
similar	O	O:0.998628
ddof	O	O:0.887421
options	O	O:0.989862
	
[	O	O:0.989485
True	O	O:0.965754
,	O	O:0.998644
True	O	O:0.987544
]]	O	O:0.995412
,	O	O:0.998702
dtype	B-API	B-API:0.624025
=b	O	O:0.990156
ool	O	O:0.968032
)`	O	O:0.981652
	
@USER	O	O:0.988457
true	O	O:0.919747
,	O	O:0.998845
although	O	O:0.996660
`	O	O:0.995581
np.array	B-API	B-API:0.969923
([	O	O:0.998873
x	O	O:0.911849
for	O	O:0.997758
bb	O	O:0.902775
in	O	O:0.997047
b	O	O:0.936042
for	O	O:0.999191
x	O	O:0.924691
in	O	O:0.996771
bb	O	O:0.984007
])`	O	O:0.998834
will	O	O:0.984194
do	O	O:0.999595
the	O	O:0.998853
job	O	O:0.945232
.	O	O:0.987224
	
return	O	O:0.641118
matrix_power	B-API	B-API:0.964047
(	O	O:0.996975
self	O	O:0.947672
,	O	O:0.999761
other	O	O:0.992843
)	O	O:0.997541
	
vector	O	O:0.970792
=	O	O:0.931338
numpy.array	B-API	B-API:0.929376
(	O	O:0.987429
vector	O	O:0.989181
);	O	O:0.962095
	
If	O	O:0.998157
so	O	O:0.999751
then	O	O:0.997704
you	O	O:0.999863
should	O	O:0.999905
have	O	O:0.999908
no	O	O:0.999622
problem	O	O:0.996948
fitting	O	O:0.990825
the	O	O:0.992306
`	O	O:0.994274
numpy.fft.rfftfreq	B-API	B-API:0.992657
`	O	O:0.999327
method	O	O:0.998194
into	O	O:0.997542
your	O	O:0.995276
own	O	O:0.991645
code	O	O:0.969501
.	O	O:0.989944
	
This	O	O:0.954549
fails	O	O:0.942065
:	O	O:0.997414
`	O	O:0.992084
einsum	B-API	B-API:0.827926
(	O	O:0.996033
'	O	O:0.997343
i	O	O:0.978870
...,	O	O:0.985674
i	O	O:0.989071
...	O	O:0.973778
	
Python	O	O:0.900736
&	O	O:0.992557
Numpy	O	O:0.991046
-	O	O:0.996813
create	O	O:0.969647
dynamic	O	O:0.979868
,	O	O:0.999756
arbitrary	O	O:0.994121
subsets	O	O:0.964360
of	O	O:0.995364
ndarray	B-API	O:0.878580
	
For	O	O:0.990743
example	O	O:0.991910
,	O	O:0.999642
I	O	O:0.999757
have	O	O:0.999696
a	O	O:0.994821
`	O	O:0.996783
ndarray	B-API	B-API:0.785823
`	O	O:0.999546
that	O	O:0.711664
is	O	O:0.995813
:	O	O:0.991126
#CODE	O	O:0.992966
	
I	O	O:0.998264
went	O	O:0.991652
with	O	O:0.996790
the	O	O:0.998846
np.memmap	B-API	B-API:0.690746
because	O	O:0.996762
the	O	O:0.998885
performance	O	O:0.988704
is	O	O:0.997403
similar	O	O:0.984675
to	O	O:0.999247
hdf5	O	O:0.996449
and	O	O:0.998209
I	O	O:0.998502
already	O	O:0.998488
have	O	O:0.991093
numpy	O	O:0.991821
in	O	O:0.998233
production	O	O:0.960455
.	O	O:0.990854
	
its	O	O:0.920243
np.log	B-API	B-API:0.752981
not	O	O:0.994654
m.log	O	O:0.848764
	
what	O	O:0.972293
happens	O	O:0.998099
if	O	O:0.998630
you	O	O:0.992885
[	O	O:0.998284
`	O	O:0.996550
Py_INCREF	O	B-API:0.955449
(	O	O:0.999527
self	O	O:0.906707
)`]	O	O:0.655350
(	O	O:0.988970
#URL	O	O:0.993644
)	O	O:0.997861
after	O	O:0.984740
`	O	O:0.996500
.base	B-API	B-API:0.987127
`	O	O:0.997817
assignment	O	O:0.775758
?	O	O:0.996800
	
File	O	O:0.971597
"	O	O:0.990377
/	O	O:0.965699
usr	O	O:0.957208
/	O	O:0.986819
lib64	O	O:0.893573
/	O	O:0.985195
python2.6	O	O:0.804398
/	O	O:0.984020
site-packages	O	O:0.946555
/	O	O:0.994801
numpy	O	O:0.957563
/	O	O:0.995193
core	O	O:0.929841
/	O	O:0.995360
fromnumeric.py	O	O:0.857845
"	O	O:0.995057
,	O	O:0.997188
line	O	O:0.995446
806	O	O:0.987779
,	O	O:0.999373
in	O	O:0.996549
searchsorted	B-API	O:0.626656
	
why	O	O:0.979531
isn't	O	O:0.997112
the	O	O:0.997504
`	O	O:0.997346
ndarray	B-API	B-API:0.927524
`	O	O:0.999355
constructor	O	O:0.986692
mentioned	O	O:0.995743
here	O	O:0.970128
?	O	O:0.994943
	
>>>	O	O:0.976842
z	O	O:0.972156
=	O	O:0.968283
numpy.array	B-API	B-API:0.692569
([	O	O:0.989644
1	O	O:0.979628
,	O	O:0.997761
2	O	O:0.985580
]	O	O:0.988094
	
Is	O	O:0.996583
there	O	O:0.997752
an	O	O:0.999407
equivelent	O	O:0.990821
to	O	O:0.997544
`	O	O:0.999943
fseek	O	O:0.903693
`	O	O:0.999938
when	O	O:0.992940
using	O	O:0.999414
`	O	O:0.996427
fromfile	B-API	B-API:0.932807
`	O	O:0.999554
to	O	O:0.997966
skip	O	O:0.998629
the	O	O:0.999929
beginning	O	O:0.994434
of	O	O:0.998894
the	O	O:0.997219
file	O	O:0.991719
?	O	O:0.994988
	
The	O	O:0.993017
linear	O	O:0.958422
algebra	O	O:0.993645
functions	O	O:0.986613
are	O	O:0.998030
generally	O	O:0.998394
grouped	O	O:0.983605
in	O	O:0.990440
`	O	O:0.987471
numpy.linalg	B-API	B-API:0.984390
`	O	O:0.997664
.	O	O:0.960734
	
np.mean	B-API	B-API:0.956925
:	O	O:0.986727
#CODE	O	O:0.992727
	
As	O	O:0.996003
others	O	O:0.999095
have	O	O:0.999027
said	O	O:0.998692
,	O	O:0.999687
32-bit	O	O:0.995060
versions	O	O:0.994886
of	O	O:0.998300
numpy	O	O:0.996709
still	O	O:0.996409
support	O	O:0.983436
64-bit	O	O:0.946023
dtypes	B-API	B-API:0.803414
.	O	O:0.978350
	
`	O	O:0.987163
vstack	B-API	B-API:0.841946
`	O	O:0.997661
is	O	O:0.991895
coercing	O	O:0.970415
the	O	O:0.998349
type	O	O:0.927710
of	O	O:0.994348
`	O	O:0.999122
d	O	O:0.948308
`	O	O:0.999510
to	O	O:0.991870
the	O	O:0.999986
type	O	O:0.954466
of	O	O:0.996493
`	O	O:0.998792
e	O	O:0.865847
`	O	O:0.998303
.	O	O:0.944413
	
`	O	O:0.987623
df.plot	B-API	B-API:0.813599
`	O	O:0.998892
returns	O	O:0.866446
an	O	O:0.997876
AxesSubplot	O	O:0.944066
,	O	O:0.995440
which	O	O:0.993785
has	O	O:0.999415
a	O	O:0.998890
`	O	O:0.974342
axvspan	B-API	B-API:0.984495
`	O	O:0.995858
method	O	O:0.976241
.	O	O:0.995691
	
With	O	O:0.998078
the	O	O:0.999277
variables	O	O:0.991711
defined	O	O:0.990638
above	O	O:0.993458
,	O	O:0.997438
`	O	O:0.987677
np.searchsorted	B-API	B-API:0.975670
(	O	O:0.998951
lat	O	O:0.887193
,	O	O:0.998745
x	O	O:0.988984
)`	O	O:0.916252
is	O	O:0.998730
16x	O	O:0.980047
faster	O	O:0.993305
than	O	O:0.996612
the	O	O:0.998526
equivalent	O	O:0.988143
call	O	O:0.900592
`	O	O:0.998023
np.nanargmin	B-API	B-API:0.698160
((	O	O:0.995504
lat-x	O	O:0.931621
)	O	O:0.993547
**2	O	O:0.994038
)`	O	O:0.982166
on	O	O:0.996230
my	O	O:0.989487
computer	O	O:0.992344
.	O	O:0.992997
	
Pypy	O	O:0.993771
with	O	O:0.993167
iterators	O	O:0.957046
is	O	O:0.999310
still	O	O:0.992092
solving	O	O:0.998829
this	O	O:0.992177
about	O	O:0.996574
3x	O	O:0.980056
faster	O	O:0.965571
than	O	O:0.990677
CPython	O	O:0.953899
+	O	O:0.996992
Numpy	O	O:0.993378
,	O	O:0.999511
even	O	O:0.999428
when	O	O:0.999454
using	O	O:0.998097
`	O	O:0.992020
np.searchsorted	B-API	B-API:0.995146
`	O	O:0.988962
(	O	O:0.982360
see	O	O:0.999453
my	O	O:0.996909
solution	O	O:0.985141
)	O	O:0.998240
.	O	O:0.982255
	
and	O	O:0.995491
`	O	O:0.993802
hstack	B-API	B-API:0.892362
((	O	O:0.994073
a	O	O:0.991687
,	O	O:0.992340
z	O	O:0.989682
))`	O	O:0.907815
?	O	O:0.991380
	
Have	O	O:0.991645
you	O	O:0.998185
tried	O	O:0.997976
passing	O	O:0.982097
`	O	O:0.983736
interpolation=	O	O:0.914264
'	O	O:0.999159
nearest	O	O:0.967594
'`	O	O:0.994594
to	O	O:0.993537
`	O	O:0.999659
imshow	B-API	B-API:0.929024
`	O	O:0.999168
?	O	O:0.980751
	
`	O	O:0.963413
cumsum	B-API	B-API:0.987350
`	O	O:0.996990
might	O	O:0.988349
not	O	O:0.999577
be	O	O:0.999575
the	O	O:0.999515
best	O	O:0.864046
example	O	O:0.980448
.	O	O:0.990094
	
I	O	O:0.995894
think	O	O:0.996260
you're	O	O:0.964592
after	O	O:0.990170
`	O	O:0.995770
plt.axis	B-API	B-API:0.934492
([	O	O:0.998703
xmin	O	O:0.897694
,	O	O:0.999226
xmax	O	O:0.972456
,	O	O:0.999492
ymin	O	O:0.970014
,	O	O:0.999675
ymax	O	O:0.926489
])`	O	O:0.978419
:	O	O:0.989281
#CODE	O	O:0.996123
	
Is	O	O:0.965724
`	O	O:0.985836
(	O	O:0.995569
dry	O	O:0.988375
,	O	O:0.999499
unrch	O	O:0.956032
)	O	O:0.998031
=	O	O:0.877845
((	O	O:0.975925
G	O	O:0.949595
==	O	O:0.986876
3	O	O:0.983405
)	O	O:0.997931
.sum()	B-API	B-API:0.960496
,	O	O:0.992146
(	O	O:0.996537
G	O	O:0.976769
==	O	O:0.996401
1	O	O:0.991130
)	O	O:0.998563
.sum()	B-API	B-API:0.886328
)`	O	O:0.995580
more	O	O:0.965625
vectorized	O	O:0.973326
?	O	O:0.989499
	
Then	O	O:0.992657
,	O	O:0.999310
`	O	O:0.997064
np.array	B-API	B-API:0.997222
(	O	O:0.995950
np.matrix	B-API	B-API:0.952764
(	O	O:0.987913
s.strip	O	B-API:0.800336
(	O	O:0.990762
'	O	O:0.992768
[	O	O:0.999339
]')))`	O	O:0.995378
will	O	O:0.995986
do	O	O:0.999377
the	O	O:0.999742
same	O	O:0.948691
magic	O	O:0.989525
.	O	O:0.992621
	
I'm	O	O:0.992986
trying	O	O:0.997561
to	O	O:0.999104
vectorize	B-API	O:0.996839
Z	O	O:0.942777
,	O	O:0.992293
but	O	O:0.993859
I'm	O	O:0.995353
finding	O	O:0.997823
it	O	O:0.998273
rather	O	O:0.997794
difficult	O	O:0.993651
for	O	O:0.999689
a	O	O:0.990763
triple	O	O:0.907504
for	O	O:0.995886
loop	O	O:0.950634
.	O	O:0.978995
	
How	O	O:0.983277
would	O	O:0.999086
that	O	O:0.999638
be	O	O:0.999925
done	O	O:0.998997
using	O	O:0.983375
np.dot	B-API	B-API:0.918608
?	O	O:0.950150
	
I	O	O:0.989340
was	O	O:0.996721
surprised	O	O:0.976755
how	O	O:0.996868
descending	O	O:0.985598
sorting	O	O:0.995845
of	O	O:0.990361
np.array	B-API	B-API:0.919547
seem	O	O:0.995892
so	O	O:0.995664
un-pythonic	O	O:0.962108
.	O	O:0.992396
	
`	O	O:0.985498
numpy.genfromtxt	B-API	B-API:0.994291
`	O	O:0.998877
accepts	O	O:0.965637
generators	O	O:0.996606
,	O	O:0.999465
so	O	O:0.999442
you	O	O:0.998908
can	O	O:0.999821
chain	O	O:0.998692
`	O	O:0.999095
genfromtext	O	B-API:0.980293
`	O	O:0.998536
and	O	O:0.988692
`	O	O:0.997569
ifilter	O	B-API:0.995697
`	O	O:0.988710
:	O	O:0.974181
#CODE	O	O:0.997795
	
I	O	O:0.998327
also	O	O:0.997207
tried	O	O:0.984301
`	O	O:0.993962
df.query()	B-API	B-API:0.999101
`	O	O:0.997461
,	O	O:0.991418
but	O	O:0.998987
no	O	O:0.997789
much	O	O:0.972170
improvement	O	O:0.991864
.	O	O:0.981152
	
According	O	O:0.989121
to	O	O:0.998308
the	O	O:0.999444
documentation	O	O:0.950734
(	O	O:0.997398
e.g.	O	O:0.997371
,	O	O:0.999646
here	O	O:0.977440
)	O	O:0.999500
,	O	O:0.998620
`	O	O:0.997606
PyArray_SimpleNew	B-API	B-API:0.960626
`	O	O:0.998749
has	O	O:0.995645
a	O	O:0.999658
return	O	O:0.836020
of	O	O:0.996799
type	O	O:0.603352
`	O	O:0.998178
PyObject	O	O:0.650225
*	O	O:0.998248
`	O	O:0.998218
and	O	O:0.999534
thus	O	O:0.999205
the	O	O:0.998389
above	O	O:0.955000
should	O	O:0.998019
be	O	O:0.998903
perfectly	O	O:0.997359
fine	O	O:0.916266
.	O	O:0.991967
	
Edit	O	O:0.911482
:	O	O:0.991888
`	O	O:0.997722
np.where	B-API	B-API:0.918509
`	O	O:0.996760
is	O	O:0.993326
optional	O	O:0.979975
,	O	O:0.994838
thanks	O	O:0.905536
@USER	O	O:0.958242
.	O	O:0.984750
	
or	O	O:0.998196
with	O	O:0.996769
`	O	O:0.996246
numpy.concatenate	B-API	B-API:0.975409
`	O	O:0.998751
?	O	O:0.980193
	
@USER	O	O:0.977585
you	O	O:0.995023
can	O	O:0.999085
do	O	O:0.999832
it	O	O:0.999719
,	O	O:0.999017
it's	O	O:0.998962
easy	O	O:0.991124
with	O	O:0.997719
`	O	O:0.992855
np.histogram	B-API	B-API:0.951476
`	O	O:0.998019
.	O	O:0.958222
	
`	O	O:0.996237
numpy.base_repr	B-API	B-API:0.883622
`	O	O:0.998773
uses	O	O:0.966875
this	O	O:0.995003
,	O	O:0.998221
but	O	O:0.999445
only	O	O:0.997955
operates	O	O:0.999073
on	O	O:0.998050
scalars	O	O:0.926649
.	O	O:0.993666
	
Python	O	O:0.971706
apply_along_axis	B-API	B-API:0.580314
of	O	O:0.999048
multiple	O	O:0.984413
arrays	O	O:0.978611
	
`	O	O:0.994270
numpy.average()	B-API	B-API:0.939685
`	O	O:0.998689
has	O	O:0.999038
a	O	O:0.999282
weights	O	O:0.802215
option	O	O:0.984268
,	O	O:0.998655
but	O	O:0.997887
`	O	O:0.992406
numpy.std()	B-API	B-API:0.995398
`	O	O:0.998327
does	O	O:0.941405
not	O	O:0.998045
.	O	O:0.998496
	
I	O	O:0.995783
wanted	O	O:0.998608
to	O	O:0.990981
write	O	O:0.998159
`	O	O:0.999194
M.det()	O	B-API:0.623952
`	O	O:0.999836
instead	O	O:0.998240
of	O	O:0.999351
`	O	O:0.984929
numpy.linalg.det	B-API	B-API:0.942621
(	O	O:0.998484
M	O	O:0.988454
)`	O	O:0.973437
,	O	O:0.991584
	
I	O	O:0.991731
was	O	O:0.997012
working	O	O:0.974682
with	O	O:0.999508
something	O	O:0.999486
like	O	O:0.995248
```	O	O:0.999636
s	O	O:0.961162
=	O	O:0.979610
pd.DataFrame	B-API	B-API:0.863499
([	O	O:0.980077
'	O	O:0.981622
1	O	O:0.969269
'	O	O:0.996576
,	O	O:0.992558
'	O	O:0.998356
na	O	O:0.891643
'	O	O:0.998140
,	O	O:0.998661
'	O	O:0.996730
3	O	O:0.971830
'	O	O:0.997932
,	O	O:0.998509
'	O	O:0.997641
4	O	O:0.986779
'])	O	O:0.991138
.	O	O:0.966561
	
tested	O	O:0.950677
it	O	O:0.999487
a	O	O:0.999186
bit	O	O:0.842350
myself	O	O:0.948072
:	O	O:0.989981
sympy.sin	O	B-API:0.841950
is	O	O:0.999243
much	O	O:0.948603
slower	O	O:0.995113
than	O	O:0.970123
numpy.sin	B-API	B-API:0.778220
	
I	O	O:0.988193
was	O	O:0.998422
thinking	O	O:0.978439
of	O	O:0.999577
something	O	O:0.998544
like	O	O:0.997162
`	O	O:0.999438
frombuffer	B-API	B-API:0.798679
`	O	O:0.998353
.	O	O:0.958300
	
Tables	O	O:0.991958
have	O	O:0.997861
an	O	O:0.996986
append	B-API	O:0.889779
method	O	O:0.998719
that	O	O:0.995778
can	O	O:0.999741
easily	O	O:0.999867
add	O	O:0.999488
additional	O	O:0.996874
rows	O	O:0.933828
.	O	O:0.986777
	
@USER	O	O:0.987163
,	O	O:0.999146
I	O	O:0.996181
tested	O	O:0.996901
the	O	O:0.966697
append	B-API	O:0.727152
method	O	O:0.996277
of	O	O:0.999453
array	O	O:0.999622
by	O	O:0.996817
measure	O	O:0.967229
the	O	O:0.996742
time	O	O:0.986653
it	O	O:0.999440
cost	O	O:0.987552
,	O	O:0.999932
since	O	O:0.993295
resize	B-API	O:0.943662
the	O	O:0.999213
array	O	O:0.994660
will	O	O:0.992176
use	O	O:0.999539
more	O	O:0.980672
time	O	O:0.967240
.	O	O:0.990591
	
I	O	O:0.998161
think	O	O:0.998837
you	O	O:0.998047
need	O	O:0.999018
to	O	O:0.999812
use	O	O:0.999857
append	B-API	O:0.636282
function	O	O:0.995974
to	O	O:0.998223
append	B-API	O:0.998939
new	O	O:0.990082
array	O	O:0.996846
with	O	O:0.995126
previous	O	O:0.991672
array	O	O:0.998022
,	O	O:0.997244
asarray	B-API	O:0.503994
function	O	O:0.997422
converts	O	O:0.992187
input	O	O:0.997780
to	O	O:0.996242
array	O	O:0.998225
.	O	O:0.990475
	
I	O	O:0.995439
would	O	O:0.999707
store	O	O:0.961630
all	O	O:0.999961
your	O	O:0.999679
data	O	O:0.994996
in	O	O:0.999883
a	O	O:0.996964
python	O	O:0.983687
list	O	O:0.975482
and	O	O:0.998919
use	O	O:0.999049
the	O	O:0.983757
append	B-API	B-API:0.716148
function	O	O:0.993532
to	O	O:0.997930
add	O	O:0.999772
new	O	O:0.988599
measurement	O	O:0.985652
.	O	O:0.982356
	
The	O	O:0.984721
Series	O	O:0.993713
must	O	O:0.999176
also	O	O:0.999711
have	O	O:0.999952
a	O	O:0.998522
`	O	O:0.997519
name	O	O:0.896143
`	O	O:0.999759
to	O	O:0.997642
be	O	O:0.999974
used	O	O:0.997770
with	O	O:0.991321
`	O	O:0.999564
join	B-API	B-API:0.815452
`	O	O:0.999460
,	O	O:0.993144
which	O	O:0.999378
gets	O	O:0.992691
pulled	O	O:0.991684
in	O	O:0.999040
as	O	O:0.999731
a	O	O:0.999269
new	O	O:0.975955
field	O	O:0.995742
called	O	O:0.843994
`	O	O:0.998557
name	O	O:0.579971
`	O	O:0.998555
.	O	O:0.975877
	
NumPy	O	O:0.996517
by	O	O:0.992565
itself	O	O:0.938709
is	O	O:0.999548
a	O	O:0.989351
fairly	O	O:0.878434
low-level	O	O:0.952404
tool	O	O:0.946058
,	O	O:0.996392
and	O	O:0.999724
will	O	O:0.997954
be	O	O:0.999252
very	O	O:0.998486
much	O	O:0.971882
similar	O	O:0.997509
to	O	O:0.999048
using	O	O:0.999474
MATLAB	O	O:0.892104
.	O	O:0.994581
pandas	O	O:0.996723
on	O	O:0.998742
the	O	O:0.999437
other	O	O:0.998109
hand	O	O:0.981583
provides	O	O:0.998494
rich	O	O:0.971275
time	O	O:0.997728
series	O	O:0.998566
functionality	O	O:0.998223
,	O	O:0.999824
data	O	O:0.996957
alignment	O	O:0.997766
,	O	O:0.999835
NA-friendly	O	O:0.995049
statistics	O	O:0.983495
,	O	O:0.996639
groupby	B-API	O:0.595318
,	O	O:0.998553
merge	O	O:0.800934
and	O	O:0.999641
join	B-API	O:0.937207
methods	O	O:0.952308
,	O	O:0.990366
and	O	O:0.999695
lots	O	O:0.992970
of	O	O:0.998883
other	O	O:0.991573
conveniences	O	O:0.984470
.	O	O:0.976509
	
already	O	O:0.994243
have	O	O:0.993960
all	O	O:0.999043
header	O	O:0.998313
names	O	O:0.996582
listed	O	O:0.999051
then	O	O:0.998843
you	O	O:0.999928
can	O	O:0.999832
use	O	O:0.999710
"	O	O:0.999258
join	B-API	B-API:0.702554
"	O	O:0.985343
and	O	O:0.991944
	
Because	O	O:0.990240
these	O	O:0.995364
are	O	O:0.999649
irregular	O	O:0.992314
operations	O	O:0.991883
,	O	O:0.997432
I	O	O:0.999185
can't	O	O:0.998898
use	O	O:0.992281
merge	B-API	O:0.878632
/	O	O:0.985918
join	B-API	B-API:0.611940
.	O	O:0.974025
	
It	O	O:0.990010
should	O	O:0.998261
be	O	O:0.999897
a	O	O:0.999676
bit	O	O:0.859929
quicker	O	O:0.998036
just	O	O:0.990752
by	O	O:0.998872
not	O	O:0.997794
using	O	O:0.998216
so	O	O:0.995117
many	O	O:0.992697
intermediary	O	O:0.976650
bitstrings	O	O:0.977649
-	O	O:0.996018
it's	O	O:0.996718
all	O	O:0.999780
done	O	O:0.991342
in	O	O:0.999361
the	O	O:0.995711
join	B-API	B-API:0.509819
method	O	O:0.991589
.	O	O:0.993553
	
How	O	O:0.988236
can	O	O:0.999018
i	O	O:0.999203
use	O	O:0.999152
the	O	O:0.992655
unique	B-API	O:0.606492
(	O	O:0.999248
a	O	O:0.999380
,	O	O:0.999869
rows	O	O:0.992339
)	O	O:0.999697
from	O	O:0.999504
MATLab	O	O:0.993970
at	O	O:0.997467
python	O	O:0.976006
?	O	O:0.994091
	
If	O	O:0.996867
you	O	O:0.999160
convert	O	O:0.996006
your	O	O:0.999154
2D	O	O:0.995667
coordinates	O	O:0.997216
into	O	O:0.914489
`	O	O:0.999235
target_map	O	B-API:0.692798
`	O	O:0.999696
into	O	O:0.987857
flat	O	O:0.984574
indices	O	O:0.987300
into	O	O:0.971821
it	O	O:0.999386
using	O	O:0.998533
`	O	O:0.974234
np.ravel_multi_index	B-API	B-API:0.987276
`	O	O:0.999321
,	O	O:0.997178
you	O	O:0.999701
can	O	O:0.998958
use	O	O:0.999409
`	O	O:0.993020
np.unique	B-API	B-API:0.983783
`	O	O:0.997932
and	O	O:0.957959
`	O	O:0.997544
np.bincount	B-API	B-API:0.988067
`	O	O:0.999117
to	O	O:0.996346
speed	O	O:0.999710
things	O	O:0.994169
up	O	O:0.993560
quite	O	O:0.999108
a	O	O:0.989378
bit	O	B-API:0.600842
:	O	O:0.993110
#CODE	O	O:0.992679
	
To	O	O:0.995230
get	O	O:0.996166
the	O	O:0.999883
unobserved	O	O:0.978556
values	O	O:0.980324
filled	O	O:0.983187
,	O	O:0.999839
we'll	O	O:0.991260
use	O	O:0.995165
the	O	O:0.994545
`	O	O:0.990511
unstack	B-API	B-API:0.966130
`	O	O:0.996193
and	O	O:0.984283
`	O	O:0.999688
stack	B-API	B-API:0.865057
`	O	O:0.998944
methods	O	O:0.796791
.	O	O:0.992450
	
The	O	O:0.992364
actual	O	O:0.986154
RMS	O	O:0.987434
would	O	O:0.997384
be	O	O:0.998043
`	O	O:0.999570
norm	B-API	B-API:0.973156
(	O	O:0.999459
x	O	O:0.965227
)	O	O:0.997044
/	O	O:0.988697
sqrt	B-API	B-API:0.825929
(	O	O:0.996771
x.size	O	O:0.904967
)`	O	O:0.947392
,	O	O:0.998107
but	O	O:0.997917
for	O	O:0.997919
minimization	O	O:0.995715
the	O	O:0.996058
constant	O	O:0.977328
multiplier	O	O:0.988917
doesn't	O	O:0.997710
make	O	O:0.995847
any	O	O:0.998077
difference	O	O:0.980440
.	O	O:0.983729
	
You	O	O:0.994160
could	O	O:0.999107
check	O	O:0.999381
whether	O	O:0.999384
this	O	O:0.968703
is	O	O:0.998133
the	O	O:0.997515
case	O	O:0.989774
,	O	O:0.999267
and	O	O:0.999719
append	O	O:0.976416
to	O	O:0.998836
your	O	O:0.999761
sample	O	O:0.978123
in	O	O:0.999811
a	O	O:0.998541
loop	O	O:0.991373
if	O	O:0.998355
necessary	O	O:0.996693
.	O	O:0.994955
	
The	O	O:0.994815
above	O	O:0.974945
code	O	O:0.982102
works	O	O:0.989143
,	O	O:0.998949
but	O	O:0.995812
would	O	O:0.998799
be	O	O:0.999820
better	O	O:0.999450
to	O	O:0.996757
append	O	O:0.995726
the	O	O:0.995006
data_array	O	O:0.790466
retrieved	O	O:0.996467
from	O	O:0.993603
for	O	O:0.999886
loop	O	O:0.997170
directly	O	O:0.994691
into	O	O:0.987253
the	O	O:0.997075
numpy	O	O:0.993548
array	O	O:0.991888
rather	O	O:0.998820
than	O	O:0.998010
using	O	O:0.993722
python	O	O:0.963871
list	O	O:0.700357
.	O	O:0.979592
	
If	O	O:0.994705
you	O	O:0.999592
want	O	O:0.999649
an	O	O:0.999715
intersection	O	O:0.992276
between	O	O:0.991099
the	O	O:0.997755
two	O	O:0.996496
arrays	O	O:0.992332
you	O	O:0.998298
can	O	O:0.999712
loop	O	O:0.999623
;	O	O:0.998919
for	O	O:0.999197
i	O	O:0.995165
data	O	O:0.961773
:	O	O:0.998497
and	O	O:0.999760
get	O	O:0.999039
i	O	O:0.994340
from	O	O:0.998960
first	O	O:0.989574
array	O	O:0.994850
,	O	O:0.995354
and	O	O:0.999550
i	O	O:0.996879
from	O	O:0.992780
second	O	O:0.986674
array.But	O	O:0.654939
I'm	O	O:0.996024
not	O	O:0.999129
sure	O	O:0.998227
if	O	O:0.997818
I	O	O:0.997795
follow	O	O:0.998771
it	O	O:0.995606
correctly	O	O:0.999398
,	O	O:0.999855
you	O	O:0.999773
have	O	O:0.999893
some	O	O:0.999911
data	O	O:0.997788
which	O	O:0.999056
has	O	O:0.999369
0	O	O:0.999195
occurences	O	O:0.987995
in	O	O:0.999676
some	O	O:0.999630
columns	O	O:0.999139
of	O	O:0.999808
your	O	O:0.996772
array	O	O:0.997994
,	O	O:0.999867
if	O	O:0.999736
you	O	O:0.999405
append	O	O:0.980401
the	O	O:0.999768
other	O	O:0.995844
values	O	O:0.990594
to	O	O:0.999744
a	O	O:0.999989
new	O	O:0.965020
array	O	O:0.998139
the	O	O:0.998111
memory	O	O:0.996488
of	O	O:0.999619
where	O	O:0.996563
in	O	O:0.999891
the	O	O:0.999852
data	O	O:0.998719
those	O	O:0.999006
values	O	O:0.996227
came	O	O:0.986981
from	O	O:0.993693
is	O	O:0.998125
already	O	O:0.995031
automatically	O	O:0.991336
stored	O	O:0.933875
.	O	O:0.975613
	
(	O	O:0.994482
2	O	O:0.988100
)	O	O:0.998802
Collect	O	O:0.994934
the	O	O:0.999601
parts	O	O:0.984452
of	O	O:0.998199
the	O	O:0.998841
SQL	O	O:0.974699
command	O	O:0.984180
in	O	O:0.998682
a	O	O:0.998231
list	O	O:0.838299
and	O	O:0.999624
do	O	O:0.999501
a	O	O:0.991791
`	O	O:0.984063
str.join	B-API	B-API:0.897299
`	O	O:0.998950
in	O	O:0.997292
the	O	O:0.999769
end	O	O:0.989849
,	O	O:0.999083
to	O	O:0.998259
avoid	O	O:0.998687
allocating	O	O:0.996593
an	O	O:0.994354
increasingly	O	O:0.996021
long	O	O:0.990116
string	O	O:0.998279
each	O	O:0.986016
time	O	O:0.968554
(	O	O:0.999102
you	O	O:0.998910
can't	O	O:0.999519
really	O	O:0.999322
append	O	O:0.990299
to	O	O:0.999131
a	O	O:0.999839
string	O	O:0.957772
in	O	O:0.999428
Python	O	O:0.997592
as	O	O:0.999216
they	O	O:0.986251
are	O	O:0.999275
immutable	O	O:0.985699
)	O	O:0.997063
.	O	O:0.980614
	
append	O	O:0.774847
C	O	O:0.914891
:\	O	O:0.997821
libav\usr\bin\	O	O:0.844970
to	O	O:0.998598
the	O	O:0.999476
'	O	O:0.988208
Path	O	O:0.703474
'	O	O:0.998556
environment	O	O:0.996678
variable	O	O:0.993099
	
How	O	O:0.995922
to	O	O:0.998432
efficiently	O	O:0.999822
join	O	O:0.961329
a	O	O:0.999091
list	O	O:0.986941
of	O	O:0.999309
values	O	O:0.982902
to	O	O:0.999649
a	O	O:0.999979
list	O	O:0.979664
of	O	O:0.999297
intervals	O	O:0.981126
?	O	O:0.997318
	
The	O	O:0.995002
alignment	O	O:0.991785
angles	O	O:0.959980
may	O	O:0.997519
be	O	O:0.999696
unique	O	O:0.993733
,	O	O:0.999099
a	O	O:0.998959
discrete	O	O:0.930401
set	O	O:0.991773
,	O	O:0.999461
or	O	O:0.999916
a	O	O:0.999144
continuum	O	O:0.994242
as	O	O:0.998932
below	O	O:0.915794
.	O	O:0.990643
	
Alternatively	O	O:0.992907
,	O	O:0.999536
you	O	O:0.999633
could	O	O:0.999557
assign	O	O:0.998602
the	O	O:0.999967
flip	O	O:0.957633
cards	O	O:0.997378
their	O	O:0.978881
own	O	O:0.998456
unique	O	O:0.934327
IDs	O	O:0.933825
and	O	O:0.999647
store	O	O:0.999495
them	O	O:0.950794
in	O	O:0.999393
the	O	O:0.999419
same	O	O:0.996621
record	O	O:0.988300
array	O	O:0.998821
as	O	O:0.998377
the	O	O:0.999486
regular	O	O:0.976658
cards	O	O:0.990023
,	O	O:0.998786
as	O	O:0.999500
the	O	O:0.996342
properties	O	O:0.992678
seem	O	O:0.996328
to	O	O:0.999870
have	O	O:0.999955
the	O	O:0.999820
same	O	O:0.994828
names	O	O:0.992894
,	O	O:0.999376
and	O	O:0.999942
then	O	O:0.999438
have	O	O:0.999872
a	O	O:0.999509
`	O	O:0.997574
flip_id	O	O:0.547502
`	O	O:0.999670
field	O	O:0.993888
that	O	O:0.998164
would	O	O:0.999560
be	O	O:0.999960
some	O	O:0.999625
set	O	O:0.992258
value	O	O:0.999679
such	O	O:0.994976
as	O	O:0.999671
`	O	O:0.983708
0	O	O:0.842376
`	O	O:0.998821
or	O	O:0.832858
`	O	O:0.999075
None	O	O:0.920788
`	O	O:0.999810
for	O	O:0.997773
cards	O	O:0.993067
without	O	O:0.995148
flip	O	O:0.881489
aspects	O	O:0.959895
and	O	O:0.999580
then	O	O:0.999631
the	O	O:0.999671
ID	O	O:0.986125
of	O	O:0.997749
the	O	O:0.999703
flip	O	O:0.988183
card	O	O:0.977479
for	O	O:0.999774
those	O	O:0.997214
cards	O	O:0.991621
that	O	O:0.997899
do	O	O:0.999210
have	O	O:0.999596
a	O	O:0.999111
flip	O	O:0.572945
.	O	O:0.991466
	
You	O	O:0.994535
can	O	O:0.998101
notice	O	O:0.999837
that	O	O:0.999427
there	O	O:0.990178
is	O	O:0.999691
gray	O	O:0.974418
strip	O	O:0.891708
on	O	O:0.995839
top	O	O:0.982311
and	O	O:0.999284
on	O	O:0.998928
the	O	O:0.994751
left	O	O:0.954767
...	O	O:0.953279
	
Furthermore	O	O:0.996047
you	O	O:0.999721
then	O	O:0.999390
go	O	O:0.999863
and	O	O:0.999864
compute	O	O:0.967444
the	O	O:0.999309
norm	O	O:0.856839
of	O	O:0.997851
those	O	O:0.998941
three	O	O:0.994062
values	O	O:0.937106
.	O	O:0.980427
	
My	O	O:0.993415
question	O	O:0.996212
concerns	O	O:0.999238
iterating	O	O:0.993721
through	O	O:0.995093
the	O	O:0.999692
rows	O	O:0.983398
of	O	O:0.999835
a	O	O:0.999765
data	O	O:0.996811
frame	O	O:0.999837
and	O	O:0.999792
on	O	O:0.999815
each	O	O:0.963688
row	O	O:0.998211
setting	O	O:0.998274
a	O	O:0.998442
field	O	O:0.993054
based	O	O:0.988776
on	O	O:0.999078
information	O	O:0.993708
in	O	O:0.999801
a	O	O:0.999721
different	O	O:0.997739
data	O	O:0.997260
frame	O	O:0.999456
.	O	O:0.996041
	
EDIT	O	O:0.869144
:	O	O:0.991981
Adding	O	O:0.986736
logic	O	O:0.997934
to	O	O:0.996728
default	O	O:0.999881
empty	O	O:0.988700
strings	O	O:0.980462
to	O	O:0.997922
`	O	O:0.999926
0	O	O:0.835100
`	O	O:0.999796
,	O	O:0.995377
use	O	O:0.999429
a	O	O:0.997609
different	O	O:0.982966
value	O	O:0.998825
if	O	O:0.997834
you	O	O:0.999811
want	O	O:0.998800
to	O	O:0.998881
handle	O	O:0.999927
empty	O	O:0.995627
strings	O	O:0.975129
in	O	O:0.998116
`	O	O:0.999387
years	O	O:0.887145
`	O	O:0.999845
colomn	O	O:0.764842
differently	O	O:0.994203
#CODE	O	O:0.989034
	
I	O	O:0.994299
would	O	O:0.998894
suggest	O	O:0.998197
that	O	O:0.999541
you	O	O:0.998970
use	O	O:0.998620
2-dimensional	O	O:0.961820
numpy	O	O:0.965943
array	O	O:0.978197
.	O	O:0.981477
	
I	O	O:0.994900
renamed	O	O:0.999632
them	O	O:0.948645
to	O	O:0.997154
aa	O	O:0.998813
,	O	O:0.998296
ab	O	O:0.978256
and	O	O:0.998593
ac	O	O:0.970774
but	O	O:0.998650
still	O	O:0.994125
get	O	O:0.998919
the	O	O:0.999764
same	O	O:0.988880
error	O	O:0.980040
.	O	O:0.993541
	
In	O	O:0.998010
this	O	O:0.998699
last	O	O:0.995642
case	O	O:0.997499
,	O	O:0.998952
RAM	O	O:0.996873
usage	O	O:0.995849
fits	O	O:0.995156
the	O	O:0.999613
equivalent	O	O:0.945844
`	O	O:0.999146
chunk	O	O:0.877942
`	O	O:0.999335
size	O	O:0.932376
#CODE	O	O:0.994727
	
`	O	O:0.995575
pandas	O	O:0.903899
`	O	O:0.999775
,	O	O:0.998689
like	O	O:0.996917
`	O	O:0.999348
numpy	O	O:0.867603
`	O	O:0.997606
and	O	O:0.997638
many	O	O:0.999576
other	O	O:0.979635
modules	O	O:0.977814
,	O	O:0.966529
is	O	O:0.998652
not	O	O:0.996075
written	O	O:0.991590
in	O	O:0.998027
pure	O	O:0.924678
Python	O	O:0.982583
-	O	O:0.994896
it	O	O:0.997572
has	O	O:0.999423
components	O	O:0.990933
written	O	O:0.965335
in	O	O:0.998138
C	O	O:0.834467
and	O	O:0.998986
Cython	O	O:0.997516
that	O	O:0.995300
get	O	O:0.997994
compiled	O	O:0.998111
into	O	O:0.989895
version-	O	O:0.802462
and	O	O:0.999649
platform-specific	O	O:0.989474
libraries	O	O:0.960694
during	O	O:0.980099
the	O	O:0.997247
build	O	O:0.894106
process	O	O:0.935419
.	O	O:0.991134
	
It	O	O:0.995165
gave	O	O:0.986060
me	O	O:0.997579
the	O	O:0.994334
error	O	O:0.828190
:	O	O:0.999283
cqid	O	O:0.986803
=	O	O:0.998219
row	O	O:0.989816
[	O	O:0.985690
'	O	O:0.999392
ClearQuest	O	O:0.982584
ID	O	O:0.978505
']	O	O:0.968325
TypeError	O	O:0.777299
:	O	O:0.996369
string	O	O:0.997221
indices	O	O:0.996703
must	O	O:0.998642
be	O	O:0.999603
integers	O	O:0.987422
,	O	O:0.991685
not	O	O:0.990532
str	O	O:0.968216
...........	O	O:0.948211
	
The	O	O:0.989863
use	O	O:0.993292
case	O	O:0.955489
is	O	O:0.999093
that	O	O:0.992403
I	O	O:0.999804
have	O	O:0.999641
different	O	O:0.992894
time	O	O:0.994066
series	O	O:0.999047
coming	O	O:0.994050
from	O	O:0.999590
different	O	O:0.999671
data	O	O:0.995426
sources	O	O:0.984114
.	O	O:0.992986
	
How	O	O:0.991210
can	O	O:0.998600
I	O	O:0.999922
get	O	O:0.999139
pandas	O	O:0.994086
Timestamp	O	O:0.976912
offset	O	O:0.993288
by	O	O:0.996720
certain	O	O:0.991388
amount	O	O:0.994445
of	O	O:0.994781
months	O	O:0.968974
?	O	O:0.997459
	
I	O	O:0.996644
managed	O	O:0.997344
to	O	O:0.994273
get	O	O:0.999795
the	O	O:0.999764
stats	O	O:0.998440
by	O	O:0.997531
placing	O	O:0.997241
everything	O	O:0.964007
in	O	O:0.997086
nested	O	O:0.947297
dictionary	O	O:0.986812
,	O	O:0.997469
but	O	O:0.998423
I	O	O:0.998730
feel	O	O:0.997890
that	O	O:0.994478
there	O	O:0.998621
may	O	O:0.999312
be	O	O:0.999850
a	O	O:0.999762
much	O	O:0.850443
easier	O	O:0.996145
way	O	O:0.994753
to	O	O:0.999232
the	O	O:0.999953
approach	O	O:0.998757
by	O	O:0.995784
using	O	O:0.999194
pandas	O	O:0.989066
dataframes	O	O:0.834800
and	O	O:0.994182
groubpy	O	O:0.991266
.	O	O:0.968914
	
Just	O	O:0.996910
to	O	O:0.999392
get	O	O:0.999986
a	O	O:0.999803
sense	O	O:0.991407
of	O	O:0.999271
what	O	O:0.980801
I'm	O	O:0.999246
trying	O	O:0.996835
to	O	O:0.998030
achieve	O	O:0.995739
.	O	O:0.993958
	
Which	O	O:0.974578
is	O	O:0.996777
suspect	O	O:0.919303
is	O	O:0.997858
due	O	O:0.931111
to	O	O:0.999380
my	O	O:0.999832
data	O	O:0.991345
range	O	O:0.995254
,,	O	O:0.994050
but	O	O:0.994596
it	O	O:0.997237
may	O	O:0.999827
well	O	O:0.999310
be	O	O:0.999923
that	O	O:0.998760
I	O	O:0.997655
don't	O	O:0.999235
understand	O	O:0.975039
the	O	O:0.999549
other	O	O:0.974237
parameters	O	O:0.903285
.	O	O:0.987816
	
Your	O	O:0.995228
second	O	O:0.979267
one	O	O:0.996243
doesn't	O	O:0.995178
really	O	O:0.998127
make	O	O:0.998026
sense	O	O:0.996288
as	O	O:0.997067
an	O	O:0.984784
aggregation	O	O:0.848549
.	O	O:0.980189
	
How	O	O:0.994480
can	O	O:0.998949
I	O	O:0.999950
get	O	O:0.998541
the	O	O:0.999169
index	O	O:0.999547
of	O	O:0.998899
certain	O	O:0.989445
element	O	O:0.998325
of	O	O:0.998721
a	O	O:0.995720
Series	O	O:0.984137
in	O	O:0.996957
python	O	O:0.993158
pandas	O	O:0.993643
?	O	O:0.994947
	
(	O	O:0.985020
Very	O	O:0.986890
,	O	O:0.999542
very	O	O:0.995140
late	O	O:0.979664
reply	O	O:0.996406
-	O	O:0.997592
apologies	O	O:0.983599
.	O	O:0.995835
)	O	O:0.998562
That's	O	O:0.997765
true	O	O:0.989022
,	O	O:0.999547
you'd	O	O:0.996077
use	O	O:0.981591
the	O	O:0.993063
method	O	O:0.992695
EdChum	O	O:0.992083
suggested	O	O:0.994048
for	O	O:0.999127
longer	O	O:0.998554
lists	O	O:0.992360
of	O	O:0.999017
columns	O	O:0.985722
.	O	O:0.995348
	
If	O	O:0.991032
actual_sum	O	O:0.653700
and	O	O:0.999314
expected_to_date	O	O:0.879246
are	O	O:0.995468
equal	O	O:0.996103
,	O	O:0.999353
put	O	O:0.997247
a	O	O:0.995737
0	O	O:0.884258
	
`	O	O:0.994969
ts	O	O:0.877353
[	O	O:0.999237
ts	O	O:0.920181
[	O	O:0.995473
'	O	O:0.997981
values	O	O:0.996348
']	O	O:0.997236
0	O	O:0.980158
]`	O	O:0.995956
should	O	O:0.993769
produce	O	O:0.999238
the	O	O:0.999152
output	O	O:0.981365
you	O	O:0.997649
are	O	O:0.999471
looking	O	O:0.997800
for	O	O:0.996787
.	O	O:0.981676
	
And	O	O:0.998093
I	O	O:0.999239
get	O	O:0.999548
the	O	O:0.992956
counts	O	O:0.676169
:	O	O:0.992345
#CODE	O	O:0.997865
	
The	O	O:0.997166
standard	O	O:0.984044
deviation	O	O:0.995900
differs	O	O:0.924423
between	O	O:0.985449
pandas	O	O:0.977892
and	O	O:0.999253
numpy	O	O:0.976720
.	O	O:0.962413
	
I	O	O:0.996066
would	O	O:0.999800
like	O	O:0.998720
to	O	O:0.999869
get	O	O:0.999945
rid	O	O:0.999000
of	O	O:0.999638
the	O	O:0.998439
loops	O	O:0.995121
,	O	O:0.999036
if	O	O:0.999437
that	O	O:0.992857
is	O	O:0.999426
possible	O	O:0.968165
.	O	O:0.991957
	
If	O	O:0.997831
I	O	O:0.999453
change	O	O:0.995856
the	O	O:0.996366
names	O	O:0.991696
then	O	O:0.996238
there	O	O:0.998689
is	O	O:0.999696
nothing	O	O:0.974194
to	O	O:0.996736
reference	O	O:0.999113
.	O	O:0.990318
	
I	O	O:0.998606
even	O	O:0.998698
tried	O	O:0.993570
building	O	O:0.994467
from	O	O:0.975450
the	O	O:0.996853
git	O	O:0.960538
,	O	O:0.997628
but	O	O:0.998796
whatever	O	O:0.998570
I	O	O:0.999762
seem	O	O:0.998321
to	O	O:0.996295
do	O	O:0.999899
,	O	O:0.999848
I	O	O:0.999179
get	O	O:0.999123
the	O	O:0.999284
same	O	O:0.980717
error	O	O:0.923607
:	O	O:0.996467
#CODE	O	O:0.995246
	
I	O	O:0.999080
want	O	O:0.998802
to	O	O:0.994512
do	O	O:0.999873
the	O	O:0.999810
following	O	O:0.992830
operations	O	O:0.996314
on	O	O:0.999526
the	O	O:0.999876
data	O	O:0.989015
storage	O	O:0.975161
:	O	O:0.997168
	
How	O	O:0.991458
do	O	O:0.993991
I	O	O:0.999171
get	O	O:0.997779
it	O	O:0.998401
to	O	O:0.999539
actually	O	O:0.999945
show	O	O:0.992978
the	O	O:0.996995
graph	O	O:0.988277
?	O	O:0.992057
	
#URL	O	O:0.959252
shows	O	O:0.998632
a	O	O:0.998687
way	O	O:0.992687
to	O	O:0.999087
get	O	O:0.999932
the	O	O:0.999753
number	O	O:0.998735
of	O	O:0.999581
days	O	O:0.992154
in	O	O:0.999976
a	O	O:0.998891
month	O	O:0.921042
,	O	O:0.999156
making	O	O:0.988484
the	O	O:0.998063
rest	O	O:0.998379
more	O	O:0.989366
or	O	O:0.999868
less	O	O:0.994937
trivial	O	O:0.996036
as	O	O:0.998963
they	O	O:0.971676
don't	O	O:0.998192
vary	O	O:0.940980
.	O	O:0.996153
	
to	O	O:0.998232
create	O	O:0.999417
average	O	O:0.984965
values	O	O:0.998896
with	O	O:0.998014
an	O	O:0.999343
equidistant	O	O:0.987795
time-vector	O	O:0.815407
.	O	O:0.981275
	
I	O	O:0.996971
get	O	O:0.999660
something	O	O:0.998454
where	O	O:0.999301
all	O	O:0.998600
"	O	O:0.999472
newlines	O	O:0.941803
"	O	O:0.997041
are	O	O:0.993932
escaped	O	O:0.963546
.	O	O:0.983062
	
Reproducing	O	O:0.985158
without	O	O:0.998873
a	O	O:0.998248
data	O	O:0.986013
file	O	O:0.998870
,	O	O:0.999761
using	O	O:0.999482
Jeff's	O	O:0.817512
suggestion	O	O:0.629410
:	O	O:0.992615
#CODE	O	O:0.991277
	
However	O	O:0.994865
,	O	O:0.999364
I	O	O:0.999818
also	O	O:0.999300
want	O	O:0.998005
to	O	O:0.998662
get	O	O:0.999920
it	O	O:0.999668
on	O	O:0.999895
the	O	O:0.999793
basis	O	O:0.997364
of	O	O:0.998343
the	O	O:0.997550
`	O	O:0.997542
Group	O	O:0.895468
`	O	O:0.999414
variable	O	O:0.982605
,	O	O:0.998811
which	O	O:0.996956
means	O	O:0.995978
I	O	O:0.999231
don't	O	O:0.999739
want	O	O:0.995407
to	O	O:0.999550
get	O	O:0.999733
`	O	O:0.999072
Bob	O	O:0.987907
`'	O	O:0.998035
s	O	O:0.892030
`	O	O:0.995083
Value	O	O:0.780734
`	O	O:0.999756
based	O	O:0.896149
on	O	O:0.999473
the	O	O:0.983731
`	O	O:0.997183
Jared	O	O:0.988277
`'	O	O:0.997879
s	O	O:0.962810
`	O	O:0.995804
Value	O	O:0.566259
`	O	O:0.998935
,	O	O:0.995356
since	O	O:0.998915
those	O	O:0.996801
two	O	O:0.999499
records's	O	O:0.928336
`	O	O:0.995955
Group	O	O:0.958623
`	O	O:0.999550
value	O	O:0.905075
is	O	O:0.999213
different	O	O:0.990747
-	O	O:0.997170
I	O	O:0.999549
only	O	O:0.997603
compute	O	O:0.887637
it	O	O:0.999051
within	O	O:0.998637
each	O	O:0.993773
specific	O	O:0.983576
`	O	O:0.995251
Group	O	O:0.887512
`	O	O:0.998734
variable	O	O:0.920104
.	O	O:0.994610
	
I	O	O:0.993707
try	O	O:0.998929
to	O	O:0.991488
use	O	O:0.999890
jsonlint	O	O:0.890696
to	O	O:0.996569
validate	O	O:0.996773
these	O	O:0.998982
json	O	O:0.974744
files	O	O:0.993037
but	O	O:0.997640
encounter	O	O:0.999373
some	O	O:0.996438
error	O	O:0.989820
messages	O	O:0.961238
.	O	O:0.986977
	
The	O	O:0.987688
logic	O	O:0.996070
to	O	O:0.999194
arrive	O	O:0.999691
at	O	O:0.999761
that	O	O:0.998390
database	O	O:0.994470
is	O	O:0.999603
an	O	O:0.996377
intricate	O	O:0.995842
mix	O	O:0.977646
of	O	O:0.996058
Python	O	O:0.969457
processing	O	O:0.981648
and	O	O:0.999335
SQL	O	O:0.997306
joins	O	O:0.968130
done	O	O:0.941345
in	O	O:0.998038
sqlite3	O	O:0.952873
.	O	O:0.986103
	
I	O	O:0.998673
want	O	O:0.998879
to	O	O:0.998942
take	O	O:0.999868
advantage	O	O:0.999359
of	O	O:0.999313
the	O	O:0.992875
`	O	O:0.998054
str	O	B-API:0.554425
`	O	O:0.999679
accessor	O	O:0.972217
to	O	O:0.999647
split	O	O:0.998958
the	O	O:0.999774
data	O	O:0.997868
into	O	O:0.997908
two	O	O:0.999582
columns	O	O:0.998962
,	O	O:0.999874
such	O	O:0.999626
that	O	O:0.999298
the	O	O:0.999580
first	O	O:0.997324
column	O	O:0.982696
is	O	O:0.997507
,	O	O:0.999151
Name	O	O:0.982047
,	O	O:0.998077
contains	O	O:0.983519
the	O	O:0.998763
actual	O	O:0.980459
name	O	O:0.942616
(	O	O:0.999422
first	O	O:0.999009
name	O	O:0.998323
last	O	O:0.991674
name	O	O:0.995991
)	O	O:0.998773
,	O	O:0.997353
and	O	O:0.999649
the	O	O:0.999208
second	O	O:0.969808
column	O	O:0.997651
,	O	O:0.998407
Email	O	O:0.979841
,	O	O:0.997535
contains	O	O:0.981318
the	O	O:0.997967
email	O	O:0.995910
address	O	O:0.935104
)	O	O:0.998313
.	O	O:0.983319
	
In	O	O:0.995468
fact	O	O:0.992464
the	O	O:0.999517
only	O	O:0.986742
really	O	O:0.998904
relevant	O	O:0.999388
data	O	O:0.999053
needed	O	O:0.999307
for	O	O:0.999857
the	O	O:0.998224
plot	O	B-API:0.543591
is	O	O:0.997858
the	O	O:0.998135
first	O	O:0.987688
and	O	O:0.999364
second	O	O:0.993420
column	O	O:0.995715
,	O	O:0.988723
namely	O	O:0.991009
:	O	O:0.993285
`	O	O:0.998060
Compression	O	O:0.992110
Force	O	O:0.982711
`	O	O:0.987494
and	O	O:0.961806
`	O	O:0.999219
Compression	O	O:0.909698
Velocity	O	O:0.941085
`	O	O:0.985810
.	O	O:0.947424
	
How	O	O:0.995086
to	O	O:0.997874
get	O	O:0.999908
special	O	O:0.998201
characters	O	O:0.995780
from	O	O:0.997034
Excel	O	O:0.995291
to	O	O:0.996371
screen	O	O:0.999694
using	O	O:0.997511
pandas	O	O:0.989213
?	O	O:0.989201
	
And	O	O:0.990353
replace	O	O:0.898284
`'	O	O:0.995255
Month	O	O:0.968891
'`	O	O:0.995821
with	O	O:0.991960
`'	O	O:0.985184
Day	O	O:0.983418
'`	O	O:0.993304
below	O	O:0.925227
.	O	O:0.991695
	
But	O	O:0.997654
if	O	O:0.999397
you	O	O:0.999751
have	O	O:0.999632
a	O	O:0.999878
huge	O	O:0.938549
amount	O	O:0.996933
to	O	O:0.998701
data	O	O:0.999697
,	O	O:0.999684
it	O	O:0.998572
*	O	O:0.999094
might	O	O:0.996957
*	O	O:0.999817
be	O	O:0.999509
interesting	O	O:0.995346
to	O	O:0.998777
think	O	O:0.999743
of	O	O:0.999566
a	O	O:0.998406
more	O	O:0.990812
complex	O	O:0.994818
data	O	O:0.990790
model	O	O:0.986048
.	O	O:0.994457
	
What	O	O:0.993491
are	O	O:0.998209
you	O	O:0.999429
trying	O	O:0.998583
to	O	O:0.999659
do	O	O:0.999843
where	O	O:0.999803
this	O	O:0.982631
is	O	O:0.999610
the	O	O:0.994197
bottleneck	O	O:0.975260
?	O	O:0.990735
	
How	O	O:0.992381
can	O	O:0.998131
I	O	O:0.999952
change	O	O:0.996145
that	O	O:0.990596
and	O	O:0.999431
use	O	O:0.993289
insted	O	O:0.970179
the	O	O:0.997194
first	O	O:0.996499
line	O	O:0.996354
of	O	O:0.997803
output	O	O:0.998027
code	O	O:0.997558
as	O	O:0.999722
a	O	O:0.996041
column	O	O:0.878911
(	O	O:0.995401
In	O	O:0.999662
this	O	O:0.998114
case	O	O:0.999196
line	O	O:0.983943
10	O	O:0.912218
:	O	O:0.998007
Sub-Data	O	O:0.925457
Item	O	O:0.999059
...	O	O:0.991309
)	O	O:0.996158
	
My	O	O:0.988353
objective	O	O:0.972927
was	O	O:0.996907
to	O	O:0.999392
have	O	O:0.999981
a	O	O:0.999591
DTM	O	O:0.987615
like	O	O:0.998836
the	O	O:0.999774
one	O	O:0.999126
you	O	O:0.999529
get	O	O:0.998806
in	O	O:0.999624
R	O	O:0.970278
tm	O	O:0.982706
.	O	O:0.981115
	
So	O	O:0.998614
right	O	O:0.998117
now	O	O:0.997911
all	O	O:0.999725
the	O	O:0.999824
data	O	O:0.996984
comes	O	O:0.997937
from	O	O:0.999788
each	O	O:0.987872
iteration	O	O:0.998718
group	O	O:0.947660
,	O	O:0.998538
and	O	O:0.999722
all	O	O:0.999508
of	O	O:0.999385
its	O	O:0.952908
is	O	O:0.999584
transformed	O	O:0.990870
into	O	O:0.982524
one	O	O:0.995880
column	O	O:0.988676
vector	O	O:0.988609
.	O	O:0.990954
	
I	O	O:0.993912
am	O	O:0.998995
trying	O	O:0.996236
to	O	O:0.999662
get	O	O:0.999796
to	O	O:0.999761
the	O	O:0.999969
point	O	O:0.998521
where	O	O:0.998766
I	O	O:0.999465
can	O	O:0.998951
run	O	O:0.962827
#CODE	O	O:0.995586
	
While	O	O:0.993508
I	O	O:0.999070
don't	O	O:0.999446
get	O	O:0.996671
that	O	O:0.998256
warning	O	O:0.998405
with	O	O:0.994735
#CODE	O	O:0.991266
	
Thanks	O	O:0.957121
@USER	O	O:0.988522
-	O	O:0.997503
I	O	O:0.999525
mean	O	O:0.999243
that	O	O:0.990420
,	O	O:0.999883
if	O	O:0.999535
we	O	O:0.999161
do	O	O:0.996406
`	O	O:0.999229
A-B	O	O:0.682449
`	O	O:0.999396
we	O	O:0.994556
should	O	O:0.999939
only	O	O:0.999230
get	O	O:0.999752
the	O	O:0.999583
NaNs	O	O:0.988999
in	O	O:0.995882
`	O	O:0.997954
A	O	O:0.972729
`	O	O:0.998950
,	O	O:0.974428
and	O	O:0.999598
not	O	O:0.998802
the	O	O:0.998938
NaNs	O	O:0.981802
in	O	O:0.995368
`	O	O:0.999090
B	O	O:0.841210
`	O	O:0.998369
.	O	O:0.930171
	
I	O	O:0.998334
have	O	O:0.999678
three	O	O:0.997771
columns	O	O:0.994085
in	O	O:0.999546
my	O	O:0.999856
data	O	O:0.999159
set	O	O:0.997835
,	O	O:0.999688
namely	O	O:0.997213
"	O	O:0.998637
age	O	O:0.910581
"	O	O:0.998374
,	O	O:0.987320
"	O	O:0.999475
race	O	O:0.791238
"	O	O:0.998245
,	O	O:0.996665
"	O	O:0.998001
sex	O	O:0.862278
"	O	O:0.996689
,	O	O:0.999174
that	O	O:0.995722
I	O	O:0.999791
care	O	O:0.998453
about	O	O:0.953338
.	O	O:0.975266
	
Cannot	O	O:0.985034
get	O	O:0.998115
the	O	O:0.999709
average	O	O:0.945379
date	O	O:0.956107
using	O	O:0.997923
pandas	O	O:0.975026
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
All	O	O:0.995657
values	O	O:0.990284
ought	O	O:0.993014
to	O	O:0.999768
be	O	O:0.999878
integers	O	O:0.989587
,	O	O:0.999041
no	O	O:0.997383
floats	O	O:0.889647
.	O	O:0.992635
	
Note	O	O:0.954102
:	O	O:0.999538
this	O	O:0.999459
will	O	O:0.999446
get	O	O:0.999795
tripped	O	O:0.998955
up	O	O:0.998746
by	O	O:0.999672
some	O	O:0.990234
strings	O	O:0.978360
,	O	O:0.999741
so	O	O:0.998790
use	O	O:0.997580
with	O	O:0.989139
caution	O	O:0.957070
.	O	O:0.992082
	
The	O	O:0.995631
purpose	O	O:0.991921
of	O	O:0.998347
all	O	O:0.999163
these	O	O:0.998776
stuff	O	O:0.943250
is	O	O:0.999415
a	O	O:0.997522
geographical	O	O:0.944354
representation	O	O:0.996789
of	O	O:0.999239
data	O	O:0.996760
on	O	O:0.999915
a	O	O:0.998466
spatial	O	O:0.715826
grid	O	O:0.981399
.	O	O:0.984265
	
Since	O	O:0.990574
Name	O	O:0.984544
`	O	O:0.998093
C	O	B-API:0.757612
`	O	O:0.998308
does	O	O:0.965839
not	O	O:0.999820
have	O	O:0.999396
`	O	O:0.998707
3	O	O:0.946514
`	O	O:0.999559
or	O	O:0.989024
`	O	O:0.999613
5	O	O:0.948811
`	O	O:0.999081
in	O	O:0.997125
the	O	O:0.999670
column	O	O:0.995039
`	O	O:0.996561
Activity	O	O:0.781667
`	O	O:0.999523
,	O	O:0.995550
I	O	O:0.998970
do	O	O:0.996125
not	O	O:0.997642
want	O	O:0.998908
to	O	O:0.998269
get	O	O:0.999974
this	O	O:0.999700
data	O	O:0.999384
frame	O	O:0.999754
.	O	O:0.996362
	
Data	O	O:0.958132
has	O	O:0.992247
to	O	O:0.998740
be	O	O:0.999796
collected	O	O:0.987984
before	O	O:0.988718
local	O	O:0.996470
data	O	O:0.994632
frame	O	O:0.998556
is	O	O:0.998809
created	O	O:0.809232
.	O	O:0.986896
	
PANDAS	O	O:0.833339
:	O	O:0.994974
Extracting	O	O:0.994553
values	O	O:0.996451
from	O	O:0.999360
a	O	O:0.999873
column	O	O:0.998912
by	O	O:0.998397
applying	O	O:0.998360
a	O	O:0.990982
condition	O	O:0.987244
on	O	O:0.999324
other	O	O:0.998455
columnns	O	O:0.972249
	
If	O	O:0.995472
you	O	O:0.998468
try	O	O:0.999728
to	O	O:0.999481
produce	O	O:0.999968
the	O	O:0.999739
groups	O	O:0.994507
from	O	O:0.998847
my	O	O:0.998840
example	O	O:0.995826
you'll	O	O:0.995537
see	O	O:0.999262
what	O	O:0.995177
I	O	O:0.999436
mean	O	O:0.993980
.	O	O:0.971707
	
`	O	O:0.995575
pandas	O	O:0.903899
`	O	O:0.999775
,	O	O:0.998689
like	O	O:0.996917
`	O	O:0.999348
numpy	O	O:0.867603
`	O	O:0.997606
and	O	O:0.997638
many	O	O:0.999576
other	O	O:0.979635
modules	O	O:0.977814
,	O	O:0.966529
is	O	O:0.998652
not	O	O:0.996075
written	O	O:0.991590
in	O	O:0.998027
pure	O	O:0.924678
Python	O	O:0.982583
-	O	O:0.994896
it	O	O:0.997572
has	O	O:0.999423
components	O	O:0.990933
written	O	O:0.965335
in	O	O:0.998138
C	O	O:0.834467
and	O	O:0.998986
Cython	O	O:0.997516
that	O	O:0.995300
get	O	O:0.997994
compiled	O	O:0.998111
into	O	O:0.989895
version-	O	O:0.802462
and	O	O:0.999649
platform-specific	O	O:0.989474
libraries	O	O:0.960694
during	O	O:0.980099
the	O	O:0.997247
build	O	O:0.894106
process	O	O:0.935419
.	O	O:0.991134
	
Not	O	O:0.997483
sure	O	O:0.995065
how	O	O:0.999385
to	O	O:0.999114
get	O	O:0.999600
around	O	O:0.995289
this	O	O:0.997600
...	O	O:0.996908
pretty	O	O:0.994915
new	O	O:0.985440
to	O	O:0.994935
pandas	O	O:0.999131
.	O	O:0.994733
	
Here's	O	O:0.987136
the	O	O:0.980504
product	O	O:0.830957
:	O	O:0.991189
#CODE	O	O:0.996869
	
However	O	O:0.997082
,	O	O:0.999501
as	O	O:0.999793
the	O	O:0.999286
data	O	O:0.971644
became	O	O:0.997565
large	O	O:0.996810
,	O	O:0.999244
we	O	O:0.998177
played	O	O:0.993788
with	O	O:0.997633
SQLAlchemy	O	O:0.955618
/	O	O:0.997309
SQLite3	O	O:0.952794
.	O	O:0.984124
	
But	O	O:0.998319
this	O	O:0.998954
time	O	O:0.998383
I	O	O:0.999837
get	O	O:0.999880
another	O	O:0.959769
error	O	O:0.919632
:	O	O:0.990366
#CODE	O	O:0.993429
	
Makes	O	O:0.994820
the	O	O:0.998041
change	O	O:0.954593
the	O	O:0.999589
idea	O	O:0.980991
of	O	O:0.999226
trying	O	O:0.997786
to	O	O:0.999260
use	O	O:0.999873
this	O	O:0.986347
approach	O	O:0.997268
all	O	O:0.998266
together	O	O:0.919349
.	O	O:0.991073
	
For	O	O:0.998776
a	O	O:0.997718
generalized	O	O:0.971525
scenario	O	O:0.998173
where	O	O:0.997468
there	O	O:0.987995
are	O	O:0.999402
many	O	O:0.999648
different	O	O:0.999134
combinations	O	O:0.997442
of	O	O:0.998744
values	O	O:0.990783
under	O	O:0.994200
'	O	O:0.997515
COL1	O	O:0.961306
'	O	O:0.993120
and	O	O:0.996393
'	O	O:0.997561
COL3	O	O:0.778553
'	O	O:0.987627
,	O	O:0.998889
this	O	O:0.982010
works	O	O:0.992865
but	O	O:0.991816
is	O	O:0.993798
probably	O	O:0.984789
not	O	O:0.998358
nearly	O	O:0.988416
as	O	O:0.998552
efficient	O	O:0.977683
as	O	O:0.998870
it	O	O:0.995967
can	O	O:0.995824
be	O	O:0.997294
:	O	O:0.998206
#CODE	O	O:0.988919
	
Similarly	O	O:0.989362
in	O	O:0.999910
your	O	O:0.998231
example	O	O:0.998175
where	O	O:0.999069
you	O	O:0.999533
plot	O	O:0.990879
`	O	O:0.999550
col1	O	O:0.961985
,	O	O:0.999655
col2	O	O:0.969247
`	O	O:0.998133
differently	O	O:0.994763
based	O	O:0.996743
on	O	O:0.991779
`	O	O:0.996101
col3	O	O:0.855288
`	O	O:0.999025
,	O	O:0.998511
what	O	O:0.999157
if	O	O:0.998550
there	O	O:0.998948
are	O	O:0.999452
NA	O	O:0.966681
values	O	O:0.998244
that	O	O:0.997303
break	O	O:0.992752
the	O	O:0.999226
association	O	O:0.960032
between	O	O:0.966711
`	O	O:0.997589
col1	O	O:0.962819
,	O	O:0.999463
col2	O	O:0.947906
,	O	O:0.998084
col3	O	O:0.956338
`	O	O:0.997421
?	O	O:0.979860
	
For	O	O:0.990399
example	O	O:0.991952
,	O	O:0.999486
I	O	O:0.999787
want	O	O:0.999010
to	O	O:0.999630
take	O	O:0.999877
values	O	O:0.997942
from	O	O:0.996312
`	O	O:0.999145
col_3	O	B-API:0.549091
`	O	O:0.998298
and	O	O:0.973018
`	O	O:0.998742
col_4	O	B-API:0.906118
`	O	O:0.998365
and	O	O:0.992912
use	O	O:0.999887
them	O	O:0.894469
to	O	O:0.998437
generate	O	O:0.999667
a	O	O:0.999782
single	O	O:0.977824
values	O	O:0.983887
.	O	O:0.979681
	
The	O	O:0.991010
speed	O	O:0.929909
difference	O	O:0.976836
is	O	O:0.995019
astonishing	O	O:0.805531
.	O	O:0.990944
	
The	O	O:0.994722
summation	O	O:0.991687
in	O	O:0.999426
one	O	O:0.999325
group	O	O:0.963549
won't	O	O:0.997203
reduce	O	O:0.989070
the	O	O:0.999840
size	O	O:0.989630
of	O	O:0.999821
the	O	O:0.999088
result	O	O:0.999054
,	O	O:0.999566
the	O	O:0.999051
summation	O	O:0.994362
I	O	O:0.999667
want	O	O:0.999298
to	O	O:0.995852
do	O	O:0.998750
is	O	O:0.997545
across	O	O:0.992223
different	O	O:0.994005
groups	O	O:0.904966
.	O	O:0.981141
	
If	O	O:0.994893
you	O	O:0.999146
really	O	O:0.998737
prefer	O	O:0.997600
`	O	O:0.997064
1	O	O:0.973258
`'	O	O:0.993290
s	O	O:0.901710
and	O	O:0.998524
`	O	O:0.997368
0	O	O:0.916215
`'	O	O:0.998308
s	O	O:0.919075
replace	O	O:0.793839
the	O	O:0.999376
last	O	O:0.973397
line	O	O:0.984762
with	O	O:0.974302
:	O	O:0.996199
#CODE	O	O:0.997434
	
So	O	O:0.995747
traverse	O	O:0.991557
the	O	O:0.999850
data	O	O:0.998137
once	O	O:0.996608
and	O	O:0.999932
generate	O	O:0.995906
both	O	O:0.989082
arrays	O	O:0.984730
would	O	O:0.998454
be	O	O:0.999256
preferred	O	O:0.994981
.	O	O:0.976669
	
Im	O	O:0.990446
not	O	O:0.998950
fully	O	O:0.999046
adjusted	O	O:0.989145
to	O	O:0.993446
how	O	O:0.999794
Pandas	O	O:0.993275
is	O	O:0.999308
using	O	O:0.997352
matplotlib	O	O:0.951715
so	O	O:0.982451
i	O	O:0.991765
often	O	O:0.994460
switch	O	O:0.989640
to	O	O:0.999169
matplotlib	O	O:0.999242
myself	O	O:0.996802
if	O	O:0.999619
plots	O	O:0.995373
get	O	O:0.997961
more	O	O:0.993079
complicated	O	O:0.993675
,	O	O:0.994705
eg	O	O:0.977799
:	O	O:0.992344
#CODE	O	O:0.995547
	
The	O	O:0.997547
table	O	O:0.996560
that	O	O:0.994365
gives	O	O:0.999771
this	O	O:0.995935
message	O	O:0.992027
contains	O	O:0.998282
a	O	O:0.998762
few	O	O:0.988382
columns	O	O:0.995523
,	O	O:0.999618
none	O	O:0.998464
of	O	O:0.999914
them	O	O:0.998692
have	O	O:0.999879
data	O	O:0.998176
in	O	O:0.999941
them	O	O:0.980230
.	O	O:0.995695
	
so	O	O:0.998376
yes	O	O:0.975111
later	O	O:0.999006
i	O	O:0.998417
have	O	O:0.997963
open	O	O:0.973352
the	O	O:0.999235
file	O	O:0.969301
but	O	O:0.997697
thanks	O	O:0.988296
to	O	O:0.998906
pandas	O	O:0.999943
i	O	O:0.998253
can	O	O:0.998525
use	O	O:0.999708
the	O	O:0.993495
`	O	O:0.994432
chunksize	O	B-API:0.855099
`	O	O:0.997796
command	O	O:0.992681
to	O	O:0.999456
get	O	O:0.999878
the	O	O:0.998460
information	O	O:0.998025
i	O	O:0.996110
need	O	O:0.996578
.	O	O:0.996122
	
create	O	O:0.969708
column	O	O:0.999560
names	O	O:0.998160
by	O	O:0.996882
joining	O	O:0.991538
two	O	O:0.996763
labels	O	O:0.990018
of	O	O:0.999603
different	O	O:0.997538
levels	O	O:0.998732
with	O	O:0.995800
pandas	O	O:0.997880
	
@USER	O	O:0.982605
so	O	O:0.995350
how	O	O:0.987277
should	O	O:0.998666
i	O	O:0.997908
write	O	O:0.998126
it	O	O:0.999267
so	O	O:0.999710
that	O	O:0.998700
the	O	O:0.997694
program	O	O:0.985149
gives	O	O:0.994710
seq	O	O:0.990496
to	O	O:0.993383
'	O	O:0.999579
Hsequence	O	O:0.981841
'	O	O:0.999223
column	O	O:0.999693
when	O	O:0.977299
'	O	O:0.999215
Hcolumn	O	O:0.993833
'	O	O:0.996923
contains	O	O:0.990611
the	O	O:0.997709
title	O	O:0.994877
from	O	O:0.996348
fasta	O	O:0.995794
file	O	O:0.994226
?	O	O:0.993643
	
Also	O	O:0.996037
,	O	O:0.999009
in	O	O:0.999418
my	O	O:0.995920
larger	O	O:0.981501
directory	O	O:0.995910
,	O	O:0.999573
this	O	O:0.987549
is	O	O:0.999347
taking	O	O:0.969952
forever	O	O:0.977145
-	O	O:0.999319
as	O	O:0.994803
in	O	O:0.998850
,	O	O:0.999486
about	O	O:0.998514
a	O	O:0.998737
gig	O	O:0.943094
of	O	O:0.998517
CSVs	O	O:0.830633
is	O	O:0.998708
timing	O	O:0.991354
out	O	O:0.994838
for	O	O:0.997675
me	O	O:0.837013
(	O	O:0.998116
by	O	O:0.997627
my	O	O:0.998671
hand	O	O:0.991951
)	O	O:0.999852
at	O	O:0.993186
around	O	O:0.985061
20	O	O:0.953513
minutes	O	O:0.940284
.	O	O:0.983176
	
The	O	O:0.985862
key	O	O:0.979754
was	O	O:0.996141
unstacking	O	O:0.992868
the	O	O:0.998977
data	O	O:0.985440
first	O	O:0.963115
:	O	O:0.997721
#CODE	O	O:0.995489
	
I	O	O:0.999154
want	O	O:0.999365
to	O	O:0.993737
get	O	O:0.999925
the	O	O:0.998460
latitude	O	O:0.948436
and	O	O:0.999444
longitude	O	O:0.995363
coordinates	O	O:0.964983
for	O	O:0.999115
any	O	O:0.998849
one	O	O:0.997861
of	O	O:0.999733
the	O	O:0.999672
columns	O	O:0.997588
in	O	O:0.999569
the	O	O:0.999883
data	O	O:0.999187
frame	O	O:0.999806
below	O	O:0.992889
.	O	O:0.995502
	
Option	O	O:0.980509
values	O	O:0.986926
are	O	O:0.999584
restored	O	O:0.998581
automatically	O	O:0.998447
when	O	O:0.997141
you	O	O:0.998859
exit	O	O:0.994329
the	O	O:0.999178
`	O	O:0.998738
with	O	O:0.962806
`	O	O:0.999814
block	O	O:0.985910
.	O	O:0.995764
	
I	O	O:0.993990
am	O	O:0.998943
finding	O	O:0.986151
difficulty	O	O:0.989496
to	O	O:0.998918
plot	O	O:0.997606
reason	O	O:0.998848
every	O	O:0.997112
csv	O	O:0.998602
file	O	O:0.995330
starts	O	O:0.987792
with	O	O:0.999766
different	O	O:0.997665
date	O	O:0.913867
,	O	O:0.998354
that's	O	O:0.997450
the	O	O:0.998419
reason	O	O:0.993770
I	O	O:0.996935
was	O	O:0.998782
trying	O	O:0.993604
to	O	O:0.999341
convert	O	O:0.997278
into	O	O:0.980414
no	O	O:0.997843
.	O	O:0.999190
of	O	O:0.999589
days	O	O:0.978055
,	O	O:0.999854
so	O	O:0.999786
that	O	O:0.997794
I	O	O:0.999801
can	O	O:0.999904
plot	O	O:0.995992
all	O	O:0.999379
in	O	O:0.999758
one	O	O:0.999453
go	O	O:0.999208
with	O	O:0.999626
starting	O	O:0.994624
day	O	O:0.998937
-	O	O:0.997757
1	O	O:0.986370
,	O	O:0.999078
for	O	O:0.992022
example	O	O:0.788643
:	O	O:0.991921
-	O	O:0.999653
csv	O	O:0.998922
file	O	O:0.995111
2	O	O:0.997078
fall	O	O:0.997095
short	O	O:0.996721
as	O	O:0.998649
compared	O	O:0.935157
to	O	O:0.997351
csv	O	O:0.999650
file	O	O:0.984584
1	O	O:0.986011
.	O	O:0.995361
	
Most	O	O:0.996518
of	O	O:0.998969
the	O	O:0.999264
time	O	O:0.997244
you	O	O:0.999463
can	O	O:0.999917
get	O	O:0.999972
away	O	O:0.999711
with	O	O:0.999727
using	O	O:0.999703
something	O	O:0.993207
else	O	O:0.962796
...	O	O:0.989094
	
In	O	O:0.997479
that	O	O:0.997862
case	O	O:0.998133
the	O	O:0.999464
index	O	O:0.982649
is	O	O:0.999218
composed	O	O:0.998072
of	O	O:0.999272
integers	O	O:0.993158
from	O	O:0.997137
0	O	O:0.994160
to	O	O:0.994399
n	O	O:0.971804
:	O	O:0.995280
#CODE	O	O:0.995442
	
You	O	O:0.997691
have	O	O:0.998703
a	O	O:0.999353
difference	O	O:0.966169
between	O	O:0.996738
a	O	O:0.993154
mac	O	O:0.909221
and	O	O:0.999718
a	O	O:0.993171
pc	O	O:0.884760
,	O	O:0.997069
and	O	O:0.998873
*	O	O:0.999572
presumably	O	O:0.982836
*	O	O:0.999596
the	O	O:0.998859
same	O	O:0.987886
code	O	O:0.972769
.	O	O:0.995960
	
Suppose	O	O:0.985568
you	O	O:0.999631
want	O	O:0.999098
to	O	O:0.999821
find	O	O:0.999920
the	O	O:0.999888
row	O	O:0.998818
or	O	O:0.999924
rows	O	O:0.997156
where	O	O:0.998507
`	O	O:0.999783
beef	O	O:0.614508
`	O	O:0.999743
production	O	O:0.870359
was	O	O:0.997001
the	O	O:0.996342
highest	O	O:0.937991
.	O	O:0.981705
	
The	O	O:0.996102
number	O	O:0.996491
of	O	O:0.998493
columns	O	O:0.995846
may	O	O:0.998721
differ	O	O:0.993214
and	O	O:0.999823
so	O	O:0.998755
does	O	O:0.985606
the	O	O:0.999644
column	O	O:0.997509
names	O	O:0.984083
.	O	O:0.994264
	
How	O	O:0.994973
do	O	O:0.992810
I	O	O:0.999116
avoid	O	O:0.977674
that	O	O:0.973046
and	O	O:0.999409
rather	O	O:0.999156
generate	O	O:0.960363
it	O	O:0.997915
in	O	O:0.999803
a	O	O:0.997960
sparse	O	O:0.871038
matrix	O	O:0.995204
CSR	O	O:0.955246
format	O	O:0.981902
?	O	O:0.987281
	
I	O	O:0.991839
download	O	O:0.935395
and	O	O:0.996914
scrape	O	O:0.984247
a	O	O:0.990254
webpage	O	O:0.970912
for	O	O:0.999800
some	O	O:0.998538
data	O	O:0.984163
in	O	O:0.999054
TSV	O	O:0.986496
format	O	O:0.988885
.	O	O:0.983158
	
You	O	O:0.995250
can	O	O:0.999198
set	O	O:0.998694
parameter	O	O:0.999014
`	O	O:0.997487
labels=False	O	B-API:0.652103
`	O	O:0.999799
to	O	O:0.995798
get	O	O:0.999936
the	O	O:0.999256
integer	O	O:0.885817
representation	O	O:0.980918
#CODE	O	O:0.986338
	
it's	O	O:0.967046
not	O	O:0.995247
too	O	O:0.999490
much	O	O:0.991050
of	O	O:0.999798
a	O	O:0.996794
stretch	O	O:0.968332
to	O	O:0.999683
insert	O	O:0.999091
NaN's	O	O:0.999109
into	O	O:0.996564
the	O	O:0.999911
data	O	O:0.991980
using	O	O:0.999314
reindexing	O	O:0.972920
so	O	O:0.995968
that	O	O:0.997565
i	O	O:0.994413
get	O	O:0.998761
this	O	O:0.969928
:	O	O:0.997902
#CODE	O	O:0.996352
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
Data-driven	O	O:0.915383
DOM	O	O:0.994023
manipulation	O	O:0.979313
(	O	O:0.999120
maybe	O	O:0.998912
the	O	O:0.999423
hardest	O	O:0.975393
thing	O	O:0.997906
to	O	O:0.998954
wrap	O	O:0.995595
one's	O	O:0.996683
head	O	O:0.957526
around	O	O:0.951316
):	O	O:0.999808
your	O	O:0.998183
data	O	O:0.998690
gets	O	O:0.998484
transformed	O	O:0.997593
into	O	O:0.982636
DOM	O	O:0.996679
elements	O	O:0.951644
.	O	O:0.986688
	
Your	O	O:0.988895
regex	O	O:0.982911
is	O	O:0.999337
matching	O	O:0.979427
on	O	O:0.998710
all	O	O:0.993554
`	O	O:0.998640
-	O	O:0.988232
`	O	O:0.999124
characters	O	O:0.802198
:	O	O:0.996980
#CODE	O	O:0.996265
	
1	O	O:0.985943
)	O	O:0.999115
create	O	O:0.995150
additional	O	O:0.998333
columns	O	O:0.999263
with	O	O:0.993842
clock	O	O:0.992437
time	O	O:0.997481
headings	O	O:0.995781
for	O	O:0.998981
5	O	O:0.984318
minute	O	O:0.930113
intervals	O	O:0.981861
between	O	O:0.953556
9:30	O	O:0.964461
and	O	O:0.998836
4:00	O	O:0.976613
pm	O	O:0.989486
,	O	O:0.999159
so	O	O:0.998884
the	O	O:0.999589
headings	O	O:0.997853
of	O	O:0.999550
the	O	O:0.999737
data	O	O:0.999021
frame	O	O:0.999832
look	O	O:0.994980
like	O	O:0.990533
:	O	O:0.997636
	
`	O	O:0.993443
Index	O	O:0.537797
([	O	O:0.999221
u'id	O	O:0.898441
opinion	O	O:0.989305
']	O	O:0.995371
,	O	O:0.986482
dtype=	O	O:0.842818
'	O	O:0.988423
object	O	O:0.982679
')`	O	O:0.998069
Thanks	O	O:0.981200
for	O	O:0.999113
the	O	O:0.991447
response	O	O:0.919828
	
The	O	O:0.997023
end	O	O:0.989606
product	O	O:0.993267
would	O	O:0.995760
be	O	O:0.999103
ten	O	O:0.999260
timeseries	O	O:0.992495
plots	O	O:0.993074
with	O	O:0.999005
charted	O	O:0.989409
lines	O	O:0.997756
over	O	O:0.992062
time	O	O:0.994360
for	O	O:0.999696
each	O	O:0.941930
TID	O	O:0.973235
.	O	O:0.987223
	
And	O	O:0.995217
get	O	O:0.999502
the	O	O:0.997409
result	O	O:0.959906
:	O	O:0.993489
#CODE	O	O:0.996290
	
However	O	O:0.994807
,	O	O:0.999290
I	O	O:0.999507
still	O	O:0.998371
don't	O	O:0.996201
get	O	O:0.998707
why	O	O:0.999162
`	O	O:0.999207
iconv	O	O:0.801914
`	O	O:0.998401
messes	O	O:0.919981
it	O	O:0.998937
up	O	O:0.954408
.	O	O:0.991244
	
If	O	O:0.996876
you	O	O:0.999393
have	O	O:0.999497
huge	O	O:0.998801
CSV	O	O:0.998677
data	O	O:0.992825
,	O	O:0.999732
NYSOL's	O	O:0.998416
mcmd	O	O:0.777709
is	O	O:0.999030
the	O	O:0.997907
best	O	O:0.909276
.	O	O:0.986726
	
I	O	O:0.992241
get	O	O:0.994341
#CODE	O	O:0.979203
	
If	O	O:0.996778
I	O	O:0.998475
use	O	O:0.999791
a	O	O:0.962171
tweaked	O	O:0.909573
version	O	O:0.996290
of	O	O:0.994204
@USER	O	O:0.927051
'	O	O:0.998627
s	O	O:0.989869
suggestion	O	O:0.995523
below	O	O:0.990757
,	O	O:0.999716
I	O	O:0.998705
get	O	O:0.999546
this	O	O:0.979358
error	O	O:0.974500
:	O	O:0.994062
#CODE	O	O:0.993436
	
ValueError	O	O:0.915519
:	O	O:0.994053
Unknown	O	O:0.986549
format	O	O:0.998299
code	O	O:0.942747
'	O	O:0.998765
f	O	O:0.983684
'	O	O:0.994087
for	O	O:0.997661
object	O	O:0.991809
of	O	O:0.996216
type	O	O:0.504873
'	O	O:0.997822
str	O	O:0.861194
'	O	O:0.994387
-	O	O:0.998952
why	O	O:0.998989
do	O	O:0.998870
I	O	O:0.999613
get	O	O:0.999042
this	O	O:0.994430
the	O	O:0.999357
second	O	O:0.974153
time	O	O:0.977326
but	O	O:0.998404
not	O	O:0.999131
the	O	O:0.999834
first	O	O:0.989248
time	O	O:0.987088
?	O	O:0.996778
	
Any	O	O:0.993278
suggestion	O	O:0.995171
about	O	O:0.994820
the	O	O:0.994014
reason	O	O:0.962631
?	O	O:0.994397
	
I	O	O:0.998535
have	O	O:0.999851
a	O	O:0.999766
data	O	O:0.998175
set	O	O:0.986568
which	O	O:0.997571
has	O	O:0.999429
multiple	O	O:0.997883
columns	O	O:0.995765
,	O	O:0.998205
strings	O	O:0.984947
and	O	O:0.998684
integers	O	O:0.984836
	
is	O	O:0.996332
the	O	O:0.995729
condition	O	O:0.993424
,	O	O:0.999231
returning	O	O:0.999244
a	O	O:0.996850
booleans	O	O:0.986873
array	O	O:0.996616
of	O	O:0.997759
True	O	O:0.878840
/	O	O:0.998176
False	O	O:0.960497
for	O	O:0.999494
all	O	O:0.997374
values	O	O:0.961537
meeting	O	O:0.991536
the	O	O:0.999084
condition	O	O:0.975531
or	O	O:0.998109
not	O	O:0.998826
,	O	O:0.999895
and	O	O:0.999849
then	O	O:0.998859
the	O	O:0.999876
corresponding	O	O:0.985492
A	O	O:0.996109
values	O	O:0.986543
are	O	O:0.996551
selected	O	O:0.990690
	
I	O	O:0.993213
fixed	O	O:0.996744
this	O	O:0.979117
bug	O	O:0.989799
in	O	O:0.998873
0.11-dev	O	O:0.916122
in	O	O:0.998773
any	O	O:0.991411
event	O	O:0.994364
,	O	O:0.999056
see	O	O:0.988581
here	O	O:0.926539
:	O	O:0.998266
#URL	O	O:0.995110
thanks	O	O:0.974189
!	O	O:0.981601
	
To	O	O:0.996463
split	O	O:0.813650
`	O	O:0.998886
my_data2	O	B-API:0.566872
`	O	O:0.999555
into	O	O:0.932911
two	O	O:0.999253
arrays	O	O:0.991599
of	O	O:0.998301
roughly	O	O:0.987258
equal	O	O:0.991299
size	O	O:0.893341
:	O	O:0.991141
#CODE	O	O:0.996539
	
to	O	O:0.995969
get	O	O:0.999949
a	O	O:0.997375
`	O	O:0.995315
Series	O	O:0.975195
`	O	O:0.999719
of	O	O:0.941380
`	O	O:0.998706
list	O	B-API:0.842475
`	O	O:0.999644
s	O	O:0.978795
of	O	O:0.998670
strings	O	O:0.838939
.	O	O:0.991762
	
For	O	O:0.991777
example	O	O:0.992195
,	O	O:0.999334
you	O	O:0.998813
can't	O	O:0.999218
sum	O	O:0.998915
a	O	O:0.999869
mix	O	O:0.979750
of	O	O:0.998907
strings	O	O:0.895208
and	O	O:0.999571
floats	O	O:0.962697
in	O	O:0.984184
pandas	O	O:0.991094
but	O	O:0.999303
Excel	O	O:0.993764
would	O	O:0.998922
silently	O	O:0.995107
drop	O	O:0.925972
the	O	O:0.998168
string	O	O:0.994330
value	O	O:0.995158
and	O	O:0.999237
sum	O	O:0.995171
the	O	O:0.993507
floats	O	O:0.866634
.	O	O:0.982974
	
Notice	O	O:0.991250
how	O	O:0.999521
the	O	O:0.999706
values	O	O:0.980413
in	O	O:0.998845
the	O	O:0.999788
second	O	O:0.992454
column	O	O:0.996394
are	O	O:0.998596
no	O	O:0.999458
longer	O	O:0.998727
integers	O	O:0.993893
,	O	O:0.999638
as	O	O:0.998957
they	O	O:0.962139
were	O	O:0.984473
originally	O	O:0.987462
.	O	O:0.991195
	
I	O	O:0.998064
have	O	O:0.999523
a	O	O:0.994687
large	O	O:0.842133
but	O	O:0.995018
very	O	O:0.956863
sparse	O	O:0.969850
matrix	O	O:0.929334
(	O	O:0.997235
50,000	O	O:0.993454
rows*	O	O:0.988977
100,000	O	O:0.993996
columns	O	O:0.998255
,	O	O:0.999683
only	O	O:0.999219
10%	O	O:0.999580
of	O	O:0.999645
the	O	O:0.998432
values	O	O:0.986297
are	O	O:0.997715
known	O	O:0.994720
)	O	O:0.997489
.	O	O:0.950485
	
In	O	O:0.993968
python	O	O:0.996911
normally	O	O:0.997116
you	O	O:0.998777
don't	O	O:0.999098
need	O	O:0.998535
and	O	O:0.999848
you	O	O:0.999111
shouldn't	O	O:0.995511
use	O	O:0.999649
a	O	O:0.998500
semicolon	O	O:0.984826
at	O	O:0.999417
the	O	O:0.999810
end	O	O:0.992572
of	O	O:0.997834
the	O	O:0.992385
line	O	O:0.986668
.	O	O:0.987724
	
That's	O	O:0.997005
all	O	O:0.999117
data	O	O:0.993552
python	O	O:0.979092
is	O	O:0.999559
reading	O	O:0.932831
in	O	O:0.998394
,	O	O:0.995811
apparently	O	O:0.954152
:	O	O:0.999239
the	O	O:0.998991
16	O	O:0.998038
first	O	O:0.996280
lines	O	O:0.994901
,	O	O:0.999334
or	O	O:0.999802
at	O	O:0.999604
least	O	O:0.998537
I	O	O:0.998537
am	O	O:0.997524
not	O	O:0.998460
able	O	O:0.999617
to	O	O:0.999670
get	O	O:0.999945
the	O	O:0.999964
rest	O	O:0.998876
of	O	O:0.999893
data	O	O:0.992331
in	O	O:0.999391
.	O	O:0.994041
	
The	O	O:0.987616
problem	O	O:0.949677
is	O	O:0.998402
to	O	O:0.999086
find	O	O:0.999794
average	O	O:0.990003
values	O	O:0.996078
of	O	O:0.996907
temp1	O	O:0.959636
,	O	O:0.998506
temp2	O	O:0.905319
and	O	O:0.999283
temp3	O	O:0.955015
for	O	O:0.999231
a	O	O:0.994078
period	O	O:0.952697
of	O	O:0.997600
time	O	O:0.912647
(	O	O:0.999624
say	O	O:0.998733
,	O	O:0.999637
2	O	O:0.998477
days	O	O:0.992829
)	O	O:0.999802
over	O	O:0.985784
the	O	O:0.999518
same	O	O:0.984877
intervals	O	O:0.942625
(	O	O:0.998504
for	O	O:0.999860
that	O	O:0.987703
example	O	O:0.994345
-	O	O:0.999362
15	O	O:0.988247
minutes	O	O:0.983699
)	O	O:0.997135
.	O	O:0.984876
	
In	O	O:0.995370
generally	O	O:0.993018
I	O	O:0.999333
wonder	O	O:0.979648
if	O	O:0.989802
pandas	O	O:0.972597
should	O	O:0.998235
not	O	O:0.999259
at	O	O:0.999868
least	O	O:0.997802
throw	O	O:0.998758
a	O	O:0.988323
warning	O	O:0.987178
,	O	O:0.999091
afterall	O	O:0.979397
broadcasting	O	O:0.999047
the	O	O:0.998868
result	O	O:0.996810
to	O	O:0.999733
both	O	O:0.999899
columns	O	O:0.997976
should	O	O:0.998865
be	O	O:0.999542
almost	O	O:0.996635
never	O	O:0.982922
what	O	O:0.962346
is	O	O:0.991696
wanted	O	O:0.958083
.	O	O:0.986599
	
I	O	O:0.994770
get	O	O:0.999272
pandas	O	O:0.997961
error	O	O:0.999353
when	O	O:0.992495
I	O	O:0.997868
try	O	O:0.999086
to	O	O:0.996710
read	O	O:0.998032
HDF5	O	O:0.995891
format	O	O:0.998536
files	O	O:0.998448
that	O	O:0.999036
I	O	O:0.999939
have	O	O:0.999606
created	O	O:0.963570
with	O	O:0.996176
h5py	O	O:0.936792
.	O	O:0.990751
	
Additionally	O	O:0.996566
you	O	O:0.999178
can	O	O:0.999518
use	O	O:0.999520
numpys	O	O:0.940826
matrix	O	O:0.975940
#CODE	O	O:0.989604
	
I	O	O:0.990415
updated	O	O:0.995267
pandas	O	O:0.955759
'	O	O:0.998576
sudo	O	O:0.989731
pip	O	O:0.991719
install	O	O:0.961084
--	O	O:0.992605
upgrade	O	O:0.950226
pandas	O	O:0.992932
'	O	O:0.997157
,	O	O:0.994902
between	O	O:0.998110
both	O	O:0.991049
of	O	O:0.999113
these	O	O:0.990893
fixes	O	O:0.985497
,	O	O:0.998757
everything	O	O:0.959707
worked	O	O:0.968425
.	O	O:0.994371
	
Sorry	O	O:0.975342
can't	O	O:0.996301
reproduce	O	O:0.979887
nor	O	O:0.999540
understand	O	O:0.998603
your	O	O:0.999552
real	O	O:0.850671
problem	O	O:0.993782
,	O	O:0.995838
please	O	O:0.990685
post	O	O:0.993412
what	O	O:0.998678
you	O	O:0.999619
see	O	O:0.998576
in	O	O:0.999965
your	O	O:0.995734
question	O	O:0.990437
	
When	O	O:0.992939
I	O	O:0.999535
used	O	O:0.994416
'	O	O:0.990036
ethnicity	O	O:0.978701
'	O	O:0.996846
or	O	O:0.994232
'	O	O:0.999165
veteran	O	O:0.983247
'	O	O:0.999019
as	O	O:0.999863
a	O	O:0.998343
value	O	O:0.998158
my	O	O:0.992848
results	O	O:0.999392
came	O	O:0.979925
out	O	O:0.998470
really	O	O:0.989725
strange	O	O:0.951453
and	O	O:0.997304
didn't	O	O:0.992252
match	O	O:0.992572
my	O	O:0.998966
value	O	O:0.998909
counts	O	O:0.983455
numbers	O	O:0.949589
.	O	O:0.992437
	
`	O	O:0.997221
post_start	O	B-API:0.695631
`	O	O:0.997957
is	O	O:0.999148
the	O	O:0.999337
date	O	O:0.889470
that	O	O:0.997749
the	O	O:0.999656
employee	O	O:0.989450
started	O	O:0.969045
in	O	O:0.998111
the	O	O:0.998766
post	O	O:0.917930
,	O	O:0.998540
and	O	O:0.999239
`	O	O:0.999491
change_date	O	B-API:0.818754
`	O	O:0.997919
is	O	O:0.998837
the	O	O:0.999337
date	O	O:0.889465
that	O	O:0.996401
the	O	O:0.999562
post	O	O:0.916572
title	O	O:0.995169
was	O	O:0.992304
changed	O	O:0.971768
.	O	O:0.985756
	
How	O	O:0.996031
do	O	O:0.997107
I	O	O:0.999375
replace	O	O:0.948833
the	O	O:0.998553
ints	O	O:0.956513
with	O	O:0.997221
the	O	O:0.999864
float	O	O:0.984794
values	O	O:0.998447
from	O	O:0.999163
another	O	O:0.998609
column	O	O:0.996601
(	O	O:0.998932
by	O	O:0.999326
same	O	O:0.994583
row	O	O:0.989783
)	O	O:0.998127
,	O	O:0.998561
but	O	O:0.998939
leave	O	O:0.973678
all	O	O:0.999547
the	O	O:0.997931
nulls	O	O:0.940638
?	O	O:0.993757
	
There	O	O:0.989929
may	O	O:0.998671
be	O	O:0.999876
a	O	O:0.999881
more	O	O:0.866891
foolproof	O	O:0.995403
,	O	O:0.999104
cleaner	O	O:0.995296
way	O	O:0.998123
of	O	O:0.999460
computing	O	O:0.990737
date	O	O:0.937376
time	O	O:0.996620
differences	O	O:0.980717
in	O	O:0.997844
pandas	O	O:0.993880
.	O	O:0.995239
	
However	O	O:0.996240
,	O	O:0.999774
to	O	O:0.999527
get	O	O:0.999916
the	O	O:0.999758
row	O	O:0.998500
sum	O	O:0.990486
,	O	O:0.999824
one	O	O:0.999002
needs	O	O:0.999188
to	O	O:0.999636
specify	O	O:0.995266
axis=1	O	O:0.958286
.	O	O:0.988373
	
Using	O	O:0.987509
the	O	O:0.981300
second	O	O:0.975456
method	O	O:0.999349
I	O	O:0.999240
get	O	O:0.999635
the	O	O:0.997526
following	O	O:0.969944
error	O	O:0.928281
:	O	O:0.995313
#CODE	O	O:0.995271
	
Filter	O	O:0.992286
data	O	O:0.996310
to	O	O:0.999629
get	O	O:0.999952
only	O	O:0.999818
first	O	O:0.999845
day	O	O:0.999026
of	O	O:0.999492
the	O	O:0.999188
month	O	O:0.997581
rows	O	O:0.953924
	
(	O	O:0.981242
FYI	O	O:0.985144
if	O	O:0.999122
i	O	O:0.998098
insert	O	O:0.997649
a	O	O:0.997970
print	O	O:0.896699
print	O	O:0.893187
(	O	O:0.998848
vals	O	O:0.969891
)	O	O:0.999162
in	O	O:0.997347
the	O	O:0.999465
middle	O	O:0.989019
of	O	O:0.996731
that	O	O:0.992311
loop	O	O:0.998575
,	O	O:0.999270
it	O	O:0.995412
prints	O	O:0.956673
#CODE	O	O:0.993558
	
For	O	O:0.998032
days	O	O:0.973795
in	O	O:0.999944
a	O	O:0.996767
month	O	O:0.514005
(	O	O:0.990534
'	O	O:0.998103
2015-07	O	O:0.964076
'	O	O:0.999107
say	O	O:0.996275
)	O	O:0.999509
You	O	O:0.997161
could	O	O:0.998082
change	O	O:0.974024
#CODE	O	O:0.994047
	
Doesnt	O	O:0.991352
the	O	O:0.999184
frame	O	O:0.999717
variable	O	O:0.997947
get	O	O:0.997723
overwritten	O	O:0.995187
during	O	O:0.998872
each	O	O:0.987961
iteration	O	O:0.994622
in	O	O:0.998854
the	O	O:0.998251
loop	O	O:0.979627
?	O	O:0.994004
	
Any	O	O:0.991176
other	O	O:0.993230
advice	O	O:0.991269
I	O	O:0.998856
can	O	O:0.999695
leverage	O	O:0.990163
in	O	O:0.998972
the	O	O:0.994896
meantime	O	O:0.981699
?	O	O:0.992228
	
If	O	O:0.976905
`	O	O:0.996428
Change	O	O:0.967791
Closing	O	O:0.989263
Date	O	O:0.861443
`	O	O:0.964920
is	O	O:0.983600
True	O	O:0.982148
,	O	O:0.999096
I	O	O:0.998429
would	O	O:0.999746
like	O	O:0.998882
to	O	O:0.999950
add	O	O:0.997179
`	O	O:0.998869
Closing	O	O:0.972352
Date2	O	O:0.996047
`	O	O:0.998877
column	O	O:0.996284
into	O	O:0.996758
my	O	O:0.998572
new	O	O:0.992391
column	O	O:0.999126
with	O	O:0.994694
adding	O	O:0.992075
1	O	O:0.986191
year	O	O:0.834723
.	O	O:0.988102
	
If	O	O:0.994686
you	O	O:0.998286
REALLY	O	O:0.999323
want	O	O:0.998927
to	O	O:0.999544
get	O	O:0.999972
by	O	O:0.999768
a	O	O:0.999858
group	O	O:0.822887
individually	O	O:0.986846
#CODE	O	O:0.991008
	
but	O	O:0.997305
I	O	O:0.998708
get	O	O:0.999501
the	O	O:0.986056
error	O	O:0.823999
:	O	O:0.991351
#CODE	O	O:0.995227
	
I	O	O:0.994386
am	O	O:0.999398
new	O	O:0.925406
to	O	O:0.998681
pandas	O	O:0.999834
for	O	O:0.999736
data	O	O:0.981388
analysis	O	O:0.996381
and	O	O:0.999355
I	O	O:0.999876
just	O	O:0.994623
installed	O	O:0.993320
pandas	O	O:0.998813
with	O	O:0.999467
required	O	O:0.987664
dependencies	O	O:0.969565
(	O	O:0.998204
NumPy	O	O:0.991935
,	O	O:0.996848
python-dateutil	O	O:0.970730
,	O	O:0.999237
pytz	O	O:0.981091
,	O	O:0.998826
numexpr	O	O:0.969546
,	O	O:0.997703
bottleneck	O	O:0.976876
and	O	O:0.999427
matplotlib	O	O:0.989921
)	O	O:0.991733
.	O	O:0.969429
	
What	O	O:0.996954
do	O	O:0.998247
you	O	O:0.999503
get	O	O:0.999196
if	O	O:0.999744
you	O	O:0.999512
print	O	O:0.997944
that	O	O:0.996679
?	O	O:0.997319
	
Can't	O	O:0.995793
you	O	O:0.998860
use	O	O:0.999405
sets	O	O:0.962389
and	O	O:0.998509
intersections	O	O:0.990159
?	O	O:0.974954
	
is	O	O:0.996027
there	O	O:0.998196
a	O	O:0.998534
way	O	O:0.991160
to	O	O:0.998749
insert	O	O:0.996170
`	O	O:0.999352
s	O	O:0.875157
`	O	O:0.999884
into	O	O:0.524022
`	O	O:0.999351
df	O	O:0.756164
`	O	O:0.999474
without	O	O:0.977824
creating	O	O:0.998676
a	O	O:0.991151
reindexed	O	O:0.986053
copy	O	O:0.903924
of	O	O:0.997908
`	O	O:0.991536
df	O	O:0.819263
`	O	O:0.999596
first	O	O:0.945870
?	O	O:0.997960
	
I'm	O	O:0.993013
using	O	O:0.997783
python	O	O:0.916728
2.7.5	O	O:0.657117
(	O	O:0.997266
with	O	O:0.995580
all	O	O:0.999724
the	O	O:0.999786
packages	O	O:0.983586
in	O	O:0.998181
the	O	O:0.997989
python	O	O:0.899274
(	O	O:0.998080
x	O	O:0.985452
,	O	O:0.999603
y	O	O:0.993152
)	O	O:0.998806
bundle	O	O:0.826003
)	O	O:0.999045
,	O	O:0.995632
and	O	O:0.999392
running	O	O:0.997532
files	O	O:0.982758
from	O	O:0.995821
the	O	O:0.975565
command	O	O:0.956959
prompt	O	O:0.984153
.	O	O:0.993265
	
Any	O	O:0.969068
suggestions	O	O:0.974144
??	O	O:0.990239
	
This	O	O:0.995279
will	O	O:0.998653
never	O	O:0.998605
get	O	O:0.999471
the	O	O:0.998845
similar	O	O:0.996212
graph	O	O:0.998360
as	O	O:0.998769
the	O	O:0.997399
kernel	O	O:0.988393
estimate	O	O:0.996430
base	O	O:0.999173
of	O	O:0.999794
the	O	O:0.999748
original	O	O:0.999305
data	O	O:0.999243
,	O	O:0.998693
result	O	O:0.994519
:	O	O:0.994691
	
The	O	O:0.991407
working	O	O:0.977492
version	O	O:0.998280
I	O	O:0.999222
have	O	O:0.987535
is	O	O:0.999059
this	O	O:0.994533
one	O	O:0.997052
,	O	O:0.998688
but	O	O:0.997038
I	O	O:0.998700
feel	O	O:0.996403
there	O	O:0.969756
is	O	O:0.999064
potential	O	O:0.967325
for	O	O:0.996003
improvement	O	O:0.956859
,	O	O:0.998697
as	O	O:0.998774
I	O	O:0.998953
find	O	O:0.997986
my	O	O:0.990241
solution	O	O:0.992588
unreadable	O	O:0.982428
and	O	O:0.999219
I	O	O:0.999093
am	O	O:0.997672
unsure	O	O:0.972007
about	O	O:0.992266
how	O	O:0.996302
it	O	O:0.996335
would	O	O:0.999572
generalize	O	O:0.997452
to	O	O:0.999251
multiindexes	O	O:0.998123
#CODE	O	O:0.994318
	
Also	O	O:0.998172
,	O	O:0.999941
once	O	O:0.998181
you	O	O:0.999727
get	O	O:0.999353
to	O	O:0.999822
15	O	O:0.999555
points	O	O:0.992014
,	O	O:0.998991
you'll	O	O:0.998988
be	O	O:0.999499
able	O	O:0.999225
to	O	O:0.998910
upvote	O	O:0.998796
as	O	O:0.999272
well	O	O:0.977429
.	O	O:0.997597
	
You	O	O:0.997299
can	O	O:0.999848
then	O	O:0.999877
get	O	O:0.999922
the	O	O:0.999934
last	O	O:0.997053
first	O	O:0.999110
value	O	O:0.999645
by	O	O:0.996213
forward	O	O:0.991466
filling	O	O:0.925396
`	O	O:0.997444
first_values	O	B-API:0.740600
`	O	O:0.998749
,	O	O:0.998585
reindexing	O	O:0.997046
like	O	O:0.978679
`	O	O:0.999639
second_values	O	B-API:0.611160
`	O	O:0.998482
,	O	O:0.997727
stacking	O	O:0.992970
again	O	O:0.982395
and	O	O:0.999360
indexing	O	O:0.999258
into	O	O:0.994657
the	O	O:0.998732
result	O	O:0.996641
using	O	O:0.999478
the	O	O:0.998215
original	O	O:0.964733
`'	O	O:0.994493
time	O	O:0.958018
'	O	O:0.998313
,	O	O:0.998178
'	O	O:0.998785
second	O	O:0.996753
'`	O	O:0.997177
pairs	O	O:0.875056
:	O	O:0.993651
#CODE	O	O:0.997690
	
how	O	O:0.990379
do	O	O:0.996787
i	O	O:0.998210
avoid	O	O:0.984534
creating	O	O:0.985565
so	O	O:0.998730
many	O	O:0.997955
variables	O	O:0.990385
as	O	O:0.999355
I	O	O:0.999679
add	O	O:0.999160
columns	O	O:0.992283
together	O	O:0.946832
?	O	O:0.997148
	
Any	O	O:0.987195
suggestion	O	O:0.989641
on	O	O:0.998303
how	O	O:0.999417
to	O	O:0.999527
efficiently	O	O:0.999441
achieve	O	O:0.997069
this	O	O:0.994902
?	O	O:0.997784
	
I	O	O:0.986218
get	O	O:0.975723
:	O	O:0.983746
#CODE	O	O:0.996543
	
For	O	O:0.992143
instance	O	O:0.993276
,	O	O:0.999644
I	O	O:0.999684
can	O	O:0.999108
compute	O	O:0.990390
the	O	O:0.999800
value	O	O:0.997577
for	O	O:0.999669
data	O	O:0.998852
record	O	O:0.981862
3	O	O:0.997371
by	O	O:0.994307
taking	O	O:0.980102
`	O	O:0.963914
len	O	B-API:0.999576
(	O	O:0.999212
set	O	O:0.836592
([	O	O:0.994216
4	O	O:0.975114
,	O	O:0.998184
4	O	O:0.989027
,	O	O:0.998250
6	O	O:0.989013
,	O	O:0.998803
12	O	O:0.994035
]))`	O	O:0.957136
which	O	O:0.993738
gives	O	O:0.987357
3	O	O:0.976626
.	O	O:0.985753
	
@USER	O	O:0.969549
That's	O	O:0.999268
a	O	O:0.998531
great	O	O:0.875016
suggestion	O	O:0.961793
(	O	O:0.996313
for	O	O:0.999697
some	O	O:0.970501
use-cases	O	O:0.976913
)	O	O:0.998293
it	O	O:0.997574
should	O	O:0.999458
be	O	O:0.999774
its	O	O:0.998291
own	O	O:0.969015
answer	O	O:0.849079
(	O	O:0.998638
so	O	O:0.998595
I	O	O:0.998530
can	O	O:0.999237
upvote	O	O:0.992033
it	O	O:0.998994
)	O	O:0.998366
Though	O	O:0.996643
it	O	O:0.999555
does	O	O:0.998889
need	O	O:0.998981
tweak	O	O:0.998757
to	O	O:0.999634
multiply	O	O:0.998900
by	O	O:0.993732
100	O	O:0.969876
.	O	O:0.975724
	
python	O	O:0.986298
how	O	O:0.997567
to	O	O:0.999450
sum	O	O:0.999618
together	O	O:0.998360
all	O	O:0.999058
values	O	O:0.991850
within	O	O:0.997669
a	O	O:0.998735
time	O	O:0.980413
interval	O	O:0.996074
in	O	O:0.997627
datetime64	O	O:0.689386
?	O	O:0.991613
	
was	O	O:0.977080
trying	O	O:0.995671
to	O	O:0.998980
do	O	O:0.999945
a	O	O:0.997901
"	O	O:0.980582
for	O	O:0.998908
i	O	O:0.963848
in	O	O:0.993349
range	O	O:0.973479
(	O	O:0.988452
len	O	B-API:0.994149
(	O	O:0.997233
results	O	O:0.995119
))"	O	O:0.968697
before	O	O:0.991057
the	O	O:0.993681
"	O	O:0.991504
for	O	O:0.999025
item	O	O:0.995854
in	O	O:0.995408
results	O	O:0.989679
[	O	O:0.999006
i	O	O:0.995938
]"	O	O:0.999106
that	O	O:0.988353
you	O	O:0.995802
did	O	O:0.988948
but	O	O:0.999083
not	O	O:0.998285
working	O	O:0.997461
for	O	O:0.996465
me	O	O:0.952297
...	O	O:0.964718
	
But	O	O:0.996413
,	O	O:0.999463
on	O	O:0.999182
the	O	O:0.999629
other	O	O:0.999202
hand	O	O:0.996656
,	O	O:0.999751
if	O	O:0.999960
your	O	O:0.999352
columns	O	O:0.997465
aren't	O	O:0.998051
in	O	O:0.999643
the	O	O:0.999801
same	O	O:0.997874
order	O	O:0.996098
,	O	O:0.999912
then	O	O:0.998406
my	O	O:0.999083
suggestion	O	O:0.996025
won't	O	O:0.999074
work	O	O:0.995908
.	O	O:0.999081
	
When	O	O:0.997010
I	O	O:0.998001
execute	O	O:0.992601
the	O	O:0.984679
program	O	O:0.980468
for	O	O:0.999611
the	O	O:0.999916
data	O	O:0.995080
of	O	O:0.999651
the	O	O:0.999709
same	O	O:0.996665
day	O	O:0.996153
,	O	O:0.999223
processor	O	O:0.998664
time	O	O:0.994198
becomes	O	O:0.999305
long	O	O:0.998795
from	O	O:0.996677
the	O	O:0.999282
same	O	O:0.988839
point	O	O:0.987908
.	O	O:0.994791
	
I'm	O	O:0.995646
new	O	O:0.973372
to	O	O:0.998518
pandas	O	O:0.999397
,	O	O:0.999187
python	O	O:0.985093
,	O	O:0.998680
and	O	O:0.999674
scripting	O	O:0.969771
in	O	O:0.995961
general	O	O:0.977691
,	O	O:0.999037
so	O	O:0.995074
am	O	O:0.998180
still	O	O:0.998836
getting	O	O:0.998595
my	O	O:0.997526
head	O	O:0.977209
around	O	O:0.994001
the	O	O:0.987374
basics	O	O:0.961734
.	O	O:0.986225
	
You	O	O:0.989834
can	O	O:0.998223
,	O	O:0.999940
for	O	O:0.999439
example	O	O:0.990552
,	O	O:0.998563
use	O	O:0.996128
interpolation	O	O:0.986848
to	O	O:0.998386
get	O	O:0.999703
equally	O	O:0.996294
spaced	O	O:0.998097
datapoints	O	O:0.995142
out	O	O:0.989344
off	O	O:0.999471
your	O	O:0.991048
timeseries	O	O:0.943556
.	O	O:0.993159
	
What	O	O:0.987437
I	O	O:0.995246
was	O	O:0.997370
hoping	O	O:0.872579
for	O	O:0.994193
was	O	O:0.982157
to	O	O:0.999346
add	O	O:0.999242
up	O	O:0.998821
all	O	O:0.999169
of	O	O:0.999747
the	O	O:0.998793
frequencies	O	O:0.956062
across	O	O:0.993887
the	O	O:0.998090
websites	O	O:0.985524
and	O	O:0.999583
to	O	O:0.999599
create	O	O:0.997865
two	O	O:0.997798
columns	O	O:0.987715
:	O	O:0.997927
Column	O	O:0.998697
A	O	O:0.999502
with	O	O:0.995605
the	O	O:0.997679
word	O	O:0.987559
,	O	O:0.998137
and	O	O:0.999417
Column	O	O:0.997894
B	O	O:0.988774
with	O	O:0.998865
all	O	O:0.997721
of	O	O:0.999782
the	O	O:0.997873
frequencies	O	O:0.987745
added	O	O:0.986077
together	O	O:0.970904
.	O	O:0.992240
	
It	O	O:0.983735
does	O	O:0.991293
not	O	O:0.999772
work	O	O:0.999132
without	O	O:0.991750
dropping	O	O:0.972103
index	O	O:0.983082
.	O	O:0.992401
	
Now	O	O:0.990138
I	O	O:0.997839
was	O	O:0.998283
wondering	O	O:0.984793
how	O	O:0.998546
I	O	O:0.999506
could	O	O:0.999850
subtract	O	O:0.968088
my	O	O:0.997941
multi-year	O	O:0.983983
timeseries	O	O:0.994376
from	O	O:0.998175
this	O	O:0.999383
standard	O	O:0.998319
year	O	O:0.975877
,	O	O:0.999048
in	O	O:0.999565
order	O	O:0.996646
to	O	O:0.999647
get	O	O:0.999934
a	O	O:0.999197
timeseries	O	O:0.992282
that	O	O:0.999582
show	O	O:0.996006
which	O	O:0.999062
days	O	O:0.989477
were	O	O:0.998919
below	O	O:0.997669
or	O	O:0.999289
above	O	O:0.964854
it's	O	O:0.998042
standard	O	O:0.980480
.	O	O:0.993764
	
I	O	O:0.991330
may	O	O:0.996262
try	O	O:0.995374
installing	O	O:0.996663
an	O	O:0.998506
older	O	O:0.989168
version	O	O:0.990081
to	O	O:0.999314
find	O	O:0.999123
out	O	O:0.998988
what	O	O:0.995558
was	O	O:0.992156
actually	O	O:0.997462
getting	O	O:0.991507
calculated	O	O:0.941793
.	O	O:0.978181
	
Is	O	O:0.994834
there	O	O:0.998989
any	O	O:0.995287
disadvantage	O	O:0.983195
?	O	O:0.991483
	
The	O	O:0.996323
length	O	O:0.989866
of	O	O:0.997600
the	O	O:0.999306
frame	O	O:0.998900
is	O	O:0.999687
over	O	O:0.955898
2	O	O:0.997560
million	O	O:0.994575
rows	O	O:0.930065
and	O	O:0.999324
looping	O	O:0.999631
to	O	O:0.990667
extract	O	O:0.996948
the	O	O:0.999597
elements	O	O:0.990734
I	O	O:0.999526
need	O	O:0.996570
is	O	O:0.999547
a	O	O:0.998633
poor	O	O:0.771956
choice	O	O:0.981396
.	O	O:0.977542
	
edit	O	O:0.942251
I	O	O:0.999139
believe	O	O:0.978752
'	O	O:0.990102
endog	O	O:0.886071
'	O	O:0.998355
as	O	O:0.998050
defined	O	O:0.765596
is	O	O:0.996825
incorrect-I	O	O:0.750008
should	O	O:0.998633
be	O	O:0.999306
passing	O	O:0.998264
the	O	O:0.988945
values	O	O:0.945891
for	O	O:0.998256
which	O	O:0.998244
I	O	O:0.999655
want	O	O:0.999510
to	O	O:0.990667
predict	O	O:0.996727
;	O	O:0.997184
therefore	O	O:0.996866
I've	O	O:0.999842
created	O	O:0.999197
a	O	O:0.997285
date	O	O:0.814624
range	O	O:0.999350
of	O	O:0.998898
12	O	O:0.983723
periods	O	O:0.995856
past	O	O:0.988090
the	O	O:0.999675
last	O	O:0.980146
recorded	O	O:0.990420
value	O	O:0.992867
.	O	O:0.985772
	
@USER	O	O:0.945885
It	O	O:0.994392
should	O	O:0.998329
be	O	O:0.999924
a	O	O:0.999679
little	O	O:0.890561
quicker	O	O:0.991540
with	O	O:0.998575
a	O	O:0.990787
boolean	O	O:0.973659
index	O	O:0.999389
like	O	O:0.996516
that	O	O:0.998154
,	O	O:0.999138
but	O	O:0.998331
it	O	O:0.998546
does	O	O:0.998181
do	O	O:0.999737
a	O	O:0.999269
cast	O	B-API:0.862727
(	O	O:0.998809
timedelta	O	O:0.807659
)	O	O:0.998105
so	O	O:0.967028
I'm	O	O:0.996937
not	O	O:0.998212
100%	O	O:0.999152
sure	O	O:0.987699
on	O	O:0.998652
that	O	O:0.992841
.	O	O:0.998395
	
I	O	O:0.999018
still	O	O:0.998697
get	O	O:0.996112
the	O	O:0.999630
same	O	O:0.996599
TypeError	O	O:0.998504
message	O	O:0.996841
using	O	O:0.998769
the	O	O:0.990526
line	O	O:0.913104
you	O	O:0.993231
suggest	O	O:0.993604
.	O	O:0.996955
	
Use	O	O:0.986240
regex	O	O:0.994379
with	O	O:0.983488
`	O	O:0.998598
python	O	O:0.929871
`	O	O:0.998356
engine	O	O:0.938444
#CODE	O	O:0.994529
	
(	O	O:0.986053
it's	O	O:0.995322
pretty	O	O:0.991784
clear	O	O:0.997698
that	O	O:0.995006
`	O	O:0.998785
id	O	O:0.725934
`	O	O:0.999360
maps	O	O:0.859161
to	O	O:0.998725
`	O	O:0.999928
individual	O	O:0.663850
`	O	O:0.998495
,	O	O:0.995438
but	O	O:0.999514
I	O	O:0.998330
would	O	O:0.999700
clean	O	O:0.997712
that	O	O:0.998738
up	O	O:0.996592
too	O	O:0.994270
)	O	O:0.996629
.	O	O:0.967965
	
Being	O	O:0.994793
able	O	O:0.999059
to	O	O:0.999693
quickly	O	O:0.999667
determine	O	O:0.994314
the	O	O:0.998536
time	O	O:0.990812
difference	O	O:0.988956
between	O	O:0.985424
Order	O	O:0.989818
1	O	O:0.957190
and	O	O:0.996999
Order	O	O:0.987628
2	O	O:0.694223
(	O	O:0.990797
per	O	O:0.990948
PersonID	O	O:0.963694
)	O	O:0.998265
would	O	O:0.997010
be	O	O:0.999248
great	O	O:0.994267
too	O	O:0.918876
.	O	O:0.984426
	
Thus	O	O:0.992708
,	O	O:0.999539
if	O	O:0.999242
there	O	O:0.989526
is	O	O:0.999554
an	O	O:0.998365
update	O	O:0.977434
to	O	O:0.999585
some	O	O:0.999572
value	O	O:0.998920
on	O	O:0.999677
a	O	O:0.998553
memory	O	O:0.982368
page	O	O:0.994841
,	O	O:0.999717
that	O	O:0.997149
page	O	O:0.972066
is	O	O:0.997726
	
and	O	O:0.997716
make	O	O:0.995661
this	O	O:0.995893
a	O	O:0.997264
Series	O	O:0.983687
,	O	O:0.999458
mapping	O	O:0.997697
names	O	O:0.994860
to	O	O:0.999095
their	O	O:0.999949
respective	O	O:0.956143
numbers	O	O:0.700451
:	O	O:0.993641
#CODE	O	O:0.996617
	
That	O	O:0.965893
is	O	O:0.998289
,	O	O:0.998181
for	O	O:0.999546
each	O	O:0.959304
second	O	O:0.981865
there	O	O:0.989377
is	O	O:0.999518
a	O	O:0.996431
value	O	O:0.969700
and	O	O:0.999272
they	O	O:0.986236
should	O	O:0.996164
not	O	O:0.999636
be	O	O:0.999554
averaged	O	O:0.996070
,	O	O:0.999547
just	O	O:0.998616
grouped	O	O:0.998057
together	O	O:0.981718
to	O	O:0.999707
a	O	O:0.999925
new	O	O:0.886229
series	O	O:0.998853
..	O	O:0.976230
	
Specifically	O	O:0.995665
,	O	O:0.998290
in	O	O:0.999777
this	O	O:0.997494
case	O	O:0.999091
,	O	O:0.999672
I'd	O	O:0.999749
only	O	O:0.999522
like	O	O:0.999814
to	O	O:0.999904
drop	O	O:0.989518
row	O	O:0.998997
with	O	O:0.993110
Indices	O	O:0.979289
'	O	O:0.998206
1991-12-31	O	O:0.900876
'	O	O:0.994669
and	O	O:0.994954
'	O	O:0.998376
1992-01-31	O	O:0.770303
'	O	O:0.990244
.	O	O:0.988462
	
Or	O	O:0.995774
read	O	O:0.960803
it	O	O:0.999765
in	O	O:0.999627
directly	O	O:0.995630
as	O	O:0.999610
a	O	O:0.996953
csv	O	O:0.980196
,	O	O:0.999627
by	O	O:0.997998
appending	O	O:0.921314
'	O	O:0.993033
na	O	O:0.930675
'	O	O:0.997356
to	O	O:0.997912
the	O	O:0.999970
list	O	O:0.993007
of	O	O:0.999373
values	O	O:0.993438
to	O	O:0.999511
be	O	O:0.999940
considered	O	O:0.987998
NaN	O	B-API:0.745027
:	O	O:0.991855
#CODE	O	O:0.993675
	
I	O	O:0.998771
fail	O	O:0.996555
to	O	O:0.996785
see	O	O:0.999862
the	O	O:0.999736
corelation	O	O:0.941371
between	O	O:0.975813
"	O	O:0.996429
John	O	O:0.971591
"	O	O:0.992936
and	O	O:0.999594
the	O	O:0.999434
dates	O	B-API:0.586137
in	O	O:0.996359
the	O	O:0.999019
target	O	O:0.963399
.	O	O:0.988225
	
I	O	O:0.987343
get	O	O:0.984574
:	O	O:0.984357
	
The	O	O:0.990874
question	O	O:0.935035
is	O	O:0.997760
,	O	O:0.998379
how	O	O:0.998368
can	O	O:0.998995
I	O	O:0.999985
remove	O	O:0.989715
or	O	O:0.998488
filter	O	O:0.877896
out	O	O:0.999583
all	O	O:0.999627
entries	O	O:0.997644
that	O	O:0.999307
have	O	O:0.999634
frequency	O	O:0.998154
1	O	O:0.971606
?	O	O:0.994271
	
For	O	O:0.994329
all	O	O:0.997911
the	O	O:0.999705
other	O	O:0.993069
names	O	O:0.996078
that	O	O:0.989100
are	O	O:0.999772
not	O	O:0.998951
in	O	O:0.999543
the	O	O:0.997799
top	O	O:0.991452
ten	O	O:0.994230
frequencies	O	O:0.945915
I	O	O:0.999337
want	O	O:0.999587
to	O	O:0.997100
combine	O	O:0.999538
their	O	O:0.997524
number	O	O:0.999180
of	O	O:0.999598
occurences	O	O:0.999130
together	O	O:0.995334
under	O	O:0.999562
say	O	O:0.997103
the	O	O:0.999572
name	O	O:0.914138
"	O	O:0.999135
other	O	O:0.982331
"	O	O:0.995691
.	O	O:0.959152
	
You	O	O:0.995806
should	O	O:0.998284
get	O	O:0.999275
the	O	O:0.999903
following	O	O:0.970803
result	O	O:0.985896
:	O	O:0.996418
	
Which	O	O:0.990422
indeed	O	O:0.949405
is	O	O:0.997370
longer	O	O:0.973833
(	O	O:0.998936
50	O	O:0.989137
)	O	O:0.999156
than	O	O:0.995872
my	O	O:0.998585
number	O	O:0.998498
of	O	O:0.999166
columns	O	O:0.998182
/	O	O:0.998177
indices	O	O:0.924474
(	O	O:0.996458
25	O	O:0.979062
)	O	O:0.996625
.	O	O:0.981053
	
I	O	O:0.994897
am	O	O:0.999501
new	O	O:0.926642
to	O	O:0.993854
Python	O	O:0.979167
(	O	O:0.994943
and	O	O:0.999598
programming	O	O:0.995276
in	O	O:0.994078
general	O	O:0.963805
!	O	O:0.990871
)	O	O:0.994893
,	O	O:0.998929
trying	O	O:0.997349
to	O	O:0.998578
conduct	O	O:0.999819
some	O	O:0.998966
data	O	O:0.999085
analysis	O	O:0.998879
using	O	O:0.997354
Pandas	O	O:0.949776
.	O	O:0.927514
	
I	O	O:0.995822
would	O	O:0.999766
like	O	O:0.998676
to	O	O:0.999897
combine	O	O:0.998232
these	O	O:0.999521
columns	O	O:0.999630
into	O	O:0.987198
start	O	O:0.993437
time	O	O:0.783713
(	O	O:0.998384
index	O	O:0.997947
)	O	O:0.998832
and	O	O:0.999461
length	O	O:0.989740
in	O	O:0.992622
actual	O	O:0.984337
seconds	O	O:0.972608
.	O	O:0.988020
	
I'm	O	O:0.994425
looking	O	O:0.995798
to	O	O:0.999639
find	O	O:0.999529
,	O	O:0.999724
for	O	O:0.999714
each	O	O:0.961146
Census	O	O:0.982726
Block	O	O:0.998050
centroid	O	O:0.991417
,	O	O:0.998456
the	O	O:0.998790
distance	O	O:0.990271
to	O	O:0.997685
it's	O	O:0.999881
closest	O	O:0.995664
restaurant	O	O:0.992758
.	O	O:0.991209
	
You	O	O:0.998248
will	O	O:0.997924
get	O	O:0.999792
the	O	O:0.999789
exception	O	O:0.986740
"	O	O:0.999570
appended	O	O:0.995582
items	O	O:0.980822
do	O	O:0.989586
not	O	O:0.999561
match	O	O:0.999419
existing	O	O:0.998734
items	O	O:0.976189
in	O	O:0.998684
table	O	O:0.995005
!	O	O:0.990835
	
Honestly	O	O:0.981876
-	O	O:0.997327
we	O	O:0.997913
were	O	O:0.998371
going	O	O:0.989640
to	O	O:0.997406
originally	O	O:0.999500
do	O	O:0.997036
visualizations	O	O:0.995333
with	O	O:0.991836
it	O	O:0.995324
(	O	O:0.999625
heatmaps	O	O:0.988589
)	O	O:0.995485
-	O	O:0.997375
but	O	O:0.996955
for	O	O:0.999727
a	O	O:0.998325
lot	O	O:0.965612
of	O	O:0.996274
reasons	O	O:0.951459
we're	O	O:0.996873
now	O	O:0.997539
going	O	O:0.996725
to	O	O:0.997031
use	O	O:0.997106
D3	O	O:0.953896
...	O	O:0.937399
	
For	O	O:0.990864
example	O	O:0.987675
,	O	O:0.999751
if	O	O:0.999239
I	O	O:0.999774
say	O	O:0.999566
year	O	O:0.898578
,	O	O:0.999568
the	O	O:0.999328
entire	O	O:0.991334
column	O	O:0.999149
needs	O	O:0.998976
to	O	O:0.999768
be	O	O:0.999887
appended	O	O:0.998565
into	O	O:0.977480
a	O	O:0.998713
list	O	O:0.931427
like	O	O:0.993312
[	O	O:0.999500
1	O	O:0.996783
year	O	O:0.943053
,	O	O:0.999210
3	O	O:0.989007
minutes	O	O:0.994231
,	O	O:0.999556
2	O	O:0.997491
hours	O	O:0.984661
]	O	O:0.995102
.	O	O:0.981259
	
Anyone	O	O:0.989260
have	O	O:0.996442
any	O	O:0.998685
suggestions	O	O:0.988482
for	O	O:0.998659
how	O	O:0.996092
to	O	O:0.997290
accomplish	O	O:0.999358
this	O	O:0.994296
?	O	O:0.998332
	
Yeah	O	O:0.973395
I	O	O:0.998894
know	O	O:0.992260
it	O	O:0.993420
gives	O	O:0.990902
NaN	O	O:0.831788
padding	O	O:0.973896
,	O	O:0.998623
but	O	O:0.999613
only	O	O:0.997891
on	O	O:0.999973
the	O	O:0.999296
indices	O	O:0.991444
the	O	O:0.997837
joining	O	O:0.723588
is	O	O:0.998876
done	O	O:0.987654
over	O	O:0.966969
.	O	O:0.980861
	
The	O	O:0.996989
paired	O	O:0.975673
measurements	O	O:0.988741
should	O	O:0.999018
have	O	O:0.999634
the	O	O:0.999943
same	O	O:0.993341
month	O	O:0.966304
,	O	O:0.999788
just	O	O:0.999191
different	O	O:0.998774
years	O	O:0.961971
.	O	O:0.992318
	
You	O	O:0.995362
can	O	O:0.999171
get	O	O:0.999766
started	O	O:0.997031
on	O	O:0.998556
debugging	O	O:0.999142
this	O	O:0.997936
by	O	O:0.998866
just	O	O:0.996873
adding	O	O:0.998178
a	O	O:0.994962
line	O	O:0.929684
to	O	O:0.999859
your	O	O:0.999815
code	O	O:0.975402
and	O	O:0.999760
running	O	O:0.967751
again	O	O:0.762480
:	O	O:0.993100
#CODE	O	O:0.992860
	
When	O	O:0.996104
I	O	O:0.998258
run	O	O:0.996120
the	O	O:0.996034
solution	O	O:0.993740
I	O	O:0.998486
get	O	O:0.999466
the	O	O:0.996258
error	O	O:0.971233
.	O	O:0.984809
	
Then	O	O:0.993854
let's	O	O:0.999229
add	O	O:0.996669
a	O	O:0.998179
helper	O	O:0.892137
column	O	O:0.992563
,	O	O:0.995299
called	O	O:0.993407
Safe	O	O:0.991972
,	O	O:0.999585
that	O	O:0.999130
will	O	O:0.999309
be	O	O:0.999959
a	O	O:0.999892
concatenation	O	O:0.976486
of	O	O:0.998947
all	O	O:0.995232
the	O	O:0.999713
Safex	O	O:0.976580
columns	O	O:0.990069
.	O	O:0.993295
	
product	O	O:0.983270
1111	O	O:0.972178
non-null	O	O:0.931340
object	O	O:0.979408
	
In	O	O:0.991910
R	O	O:0.980717
,	O	O:0.999629
using	O	O:0.997808
the	O	O:0.991905
car	O	O:0.864545
package	O	O:0.988212
,	O	O:0.998490
there	O	O:0.993000
is	O	O:0.999699
a	O	O:0.996799
useful	O	O:0.845746
function	O	O:0.996763
`	O	O:0.998001
some	O	O:0.647756
(	O	O:0.999303
x	O	O:0.981801
,	O	O:0.998910
n	O	O:0.996926
)`	O	O:0.985254
which	O	O:0.988695
is	O	O:0.998974
similar	O	O:0.990088
to	O	O:0.998272
head	O	O:0.995857
but	O	O:0.996621
selects	O	O:0.993948
,	O	O:0.998930
in	O	O:0.999662
this	O	O:0.996033
example	O	O:0.998235
,	O	O:0.999793
10	O	O:0.999565
rows	O	O:0.986252
at	O	O:0.999062
random	O	O:0.987511
from	O	O:0.989937
x	O	O:0.956724
.	O	O:0.991810
	
The	O	O:0.979997
separator	O	O:0.942466
(	O	O:0.998882
between	O	O:0.997931
cells	O	O:0.982966
)	O	O:0.998255
is	O	O:0.999725
defined	O	O:0.986155
by	O	O:0.997037
the	O	O:0.993137
operating	O	O:0.824875
system	O	O:0.963826
(	O	O:0.999024
at	O	O:0.999804
least	O	O:0.996917
under	O	O:0.999294
Windows	O	O:0.971917
)	O	O:0.998282
,	O	O:0.997165
and	O	O:0.999805
when	O	O:0.997457
the	O	O:0.993555
system	O	O:0.997068
wide	O	O:0.974258
list	O	O:0.983360
separator	O	O:0.998958
differs	O	O:0.996063
from	O	O:0.997910
comma	O	O:0.993276
,	O	O:0.998865
pandas	O	O:0.985228
(	O	O:0.998122
or	O	O:0.999764
anything	O	O:0.999635
else	O	O:0.996582
I	O	O:0.999657
tried	O	O:0.994711
)	O	O:0.994828
cannot	O	O:0.986213
determine	O	O:0.997222
what	O	O:0.994948
separator	O	O:0.989405
should	O	O:0.997833
be	O	O:0.999403
used	O	O:0.992015
.	O	O:0.973956
	
Setting	O	O:0.978713
up	O	O:0.996769
a	O	O:0.996341
histogram	O	O:0.990673
with	O	O:0.999280
a	O	O:0.997695
range	O	O:0.989828
and	O	O:0.999776
an	O	O:0.999336
appropriate	O	O:0.987387
bin	O	O:0.976268
size	O	O:0.980054
is	O	O:0.998012
an	O	O:0.995271
unknown	O	O:0.972512
.	O	O:0.977343
	
Thanks	O	O:0.988205
TravisJ	O	O:0.979415
,	O	O:0.999200
I	O	O:0.999582
guess	O	O:0.995526
I	O	O:0.985579
was	O	O:0.998394
just	O	O:0.992652
struggling	O	O:0.998692
to	O	O:0.998263
get	O	O:0.999714
the	O	O:0.986354
(	O	O:0.998153
...	O	O:0.998957
something	O	O:0.998251
involving	O	O:0.997455
group	O	O:0.972932
...	O	O:0.996168
)	O	O:0.998545
in	O	O:0.999115
when	O	O:0.995041
i	O	O:0.994813
was	O	O:0.999329
using	O	O:0.998143
the	O	O:0.956471
ax=fig1	O	B-API:0.799371
....	O	O:0.867161
method	O	O:0.990220
.	O	O:0.992952
	
I	O	O:0.994463
am	O	O:0.998771
optimising	O	O:0.984066
the	O	O:0.999344
span	O	O:0.942255
of	O	O:0.999570
an	O	O:0.997152
exponential	O	O:0.995324
moving	O	O:0.975516
average	O	O:0.740745
and	O	O:0.999771
the	O	O:0.999359
number	O	O:0.980834
of	O	O:0.999251
lagged	O	O:0.946502
variables	O	O:0.996868
that	O	O:0.998753
I	O	O:0.999816
use	O	O:0.997394
in	O	O:0.967931
the	O	O:0.988105
regression	O	O:0.938991
.	O	O:0.985201
	
The	O	O:0.996939
error	O	O:0.987645
message	O	O:0.996978
that	O	O:0.997991
I	O	O:0.999295
get	O	O:0.978443
is	O	O:0.935323
:	O	O:0.989938
#CODE	O	O:0.994352
	
It	O	O:0.989160
doesn't	O	O:0.996713
however	O	O:0.999703
take	O	O:0.999414
advantage	O	O:0.999475
of	O	O:0.999398
the	O	O:0.996135
psql	O	O:0.695139
package	O	O:0.985814
in	O	O:0.995128
Pandas	O	O:0.991890
.	O	O:0.986551
	
On	O	O:0.997248
a	O	O:0.997767
much	O	O:0.973611
larger	O	O:0.998729
data	O	O:0.996495
set	O	O:0.986196
,	O	O:0.999805
this	O	O:0.996112
runs	O	O:0.970221
in	O	O:0.999752
790	O	O:0.982635
ms	O	O:0.997344
compared	O	O:0.981616
to	O	O:0.999457
1345	O	O:0.997864
ms	O	O:0.986347
for	O	O:0.998185
ajcr's	O	O:0.904059
and	O	O:0.998187
Primer's	O	O:0.987409
solutions	O	O:0.898252
.	O	O:0.981655
	
I've	O	O:0.994776
put	O	O:0.988977
together	O	O:0.991536
one	O	O:0.998618
approach	O	O:0.994837
to	O	O:0.999655
that	O	O:0.999774
solution	O	O:0.998800
that	O	O:0.998567
should	O	O:0.999266
scale	O	O:0.996172
relatively	O	O:0.996867
well	O	O:0.985370
.	O	O:0.996011
	
I	O	O:0.986353
was	O	O:0.994444
hoping	O	O:0.936773
there	O	O:0.989685
was	O	O:0.993823
an	O	O:0.999433
easy	O	O:0.991176
way	O	O:0.999013
to	O	O:0.998905
get	O	O:0.999941
the	O	O:0.999909
set	O	O:0.995500
of	O	O:0.999635
B	O	O:0.988410
values	O	O:0.995515
per	O	O:0.993434
each	O	O:0.977735
A	O	O:0.999048
value	O	O:0.999383
like	O	O:0.978027
`	O	O:0.998655
{	O	O:0.986149
'	O	O:0.999312
one	O	O:0.985790
'	O	O:0.991977
:[	O	O:0.993042
'	O	O:0.993209
A	O	O:0.993716
'	O	O:0.996898
,	O	O:0.997054
'	O	O:0.998522
B	O	O:0.995925
']	O	O:0.997768
,	O	O:0.970805
'	O	O:0.997482
two	O	O:0.989262
'	O	O:0.994966
:[	O	O:0.995162
'	O	O:0.995418
A	O	O:0.998804
']	O	O:0.994713
,	O	O:0.976023
'	O	O:0.998754
three	O	O:0.970099
'	O	O:0.992801
:[	O	O:0.995443
'	O	O:0.997657
B	O	O:0.991389
']	O	O:0.987296
}	O	O:0.866480
`	O	O:0.993652
but	O	O:0.991621
I	O	O:0.999312
don't	O	O:0.998302
see	O	O:0.998241
anything	O	O:0.999764
like	O	O:0.999447
that	O	O:0.999248
in	O	O:0.999537
the	O	O:0.999256
pandas	O	O:0.991730
documentation	O	O:0.994127
	
To	O	O:0.989221
avoid	O	O:0.969733
chained	O	O:0.874570
indexing	O	O:0.987758
,	O	O:0.998938
you	O	O:0.999606
need	O	O:0.999508
to	O	O:0.999890
get	O	O:0.999965
all	O	O:0.999971
your	O	O:0.999178
conditions	O	O:0.996136
into	O	O:0.998425
a	O	O:0.999636
single	O	O:0.987268
set	O	O:0.996642
of	O	O:0.997110
brackets	O	O:0.929793
.	O	O:0.994070
	
But	O	O:0.996495
trying	O	O:0.997321
to	O	O:0.999464
parse	O	O:0.997646
the	O	O:0.998351
column	O	O:0.994748
name	O	O:0.979037
and	O	O:0.999646
hierarchy	O	O:0.999310
and	O	O:0.998434
auto-generate	O	O:0.972675
the	O	O:0.997413
insertable	O	O:0.884936
thing	O	O:0.998728
with	O	O:0.996775
matching	O	O:0.994642
index	O	O:0.996251
is	O	O:0.997007
unpleasant	O	O:0.925910
.	O	O:0.990909
	
The	O	O:0.991958
seaborn	O	O:0.970285
package	O	O:0.998145
will	O	O:0.997388
allow	O	O:0.996867
you	O	O:0.999354
to	O	O:0.999318
plot	O	O:0.999622
long	O	O:0.999413
form	O	O:0.999900
data	O	O:0.999521
like	O	O:0.999665
you	O	O:0.999960
have	O	O:0.998802
without	O	O:0.997662
pivoting	O	O:0.968058
but	O	O:0.985345
pandas	O	O:0.994918
requires	O	O:0.984014
shared	O	O:0.956099
index	O	O:0.996031
and	O	O:0.999325
one	O	O:0.999689
column	O	O:0.996289
per	O	O:0.991357
plotted	O	O:0.991126
line	O	O:0.997490
by	O	O:0.996635
default	O	O:0.992938
so	O	O:0.999612
your	O	O:0.995486
solution	O	O:0.969359
is	O	O:0.999461
the	O	O:0.996541
correct	O	O:0.994103
one	O	O:0.995143
.	O	O:0.995564
	
Unable	O	O:0.982185
to	O	O:0.998309
filter	O	O:0.988917
out	O	O:0.995625
missing	O	O:0.940103
(	O	O:0.998523
NaN	O	O:0.901968
)	O	O:0.999755
location	O	O:0.999603
data	O	O:0.997114
while	O	O:0.999148
using	O	O:0.996583
Pandas	O	O:0.935605
and	O	O:0.998596
Geocoder	O	O:0.976718
modules	O	O:0.908688
in	O	O:0.995122
Python	O	O:0.971417
	
problem	O	O:0.910512
is	O	O:0.998301
the	O	O:0.995029
sum	O	O:0.966073
i	O	O:0.998124
now	O	O:0.998265
get	O	O:0.992922
is	O	O:0.999770
lined	O	O:0.988760
up	O	O:0.991693
in	O	O:0.999127
week	O	O:0.980534
intervals	O	O:0.987313
but	O	O:0.999178
not	O	O:0.997387
in	O	O:0.999767
the	O	O:0.997105
right	O	O:0.984893
sequence	O	O:0.992306
.	O	O:0.999278
this	O	O:0.997192
wouldn't	O	O:0.998874
be	O	O:0.999866
a	O	O:0.997958
problem	O	O:0.709027
but	O	O:0.998048
i	O	O:0.995992
need	O	O:0.999591
to	O	O:0.999731
get	O	O:0.999908
to	O	O:0.999884
the	O	O:0.999982
month	O	O:0.989546
of	O	O:0.999786
each	O	O:0.989520
date	O	O:0.967705
in	O	O:0.999681
order	O	O:0.993431
to	O	O:0.999216
do	O	O:0.999678
the	O	O:0.999846
next	O	O:0.975197
step	O	O:0.998907
i	O	O:0.995063
guess	O	O:0.997091
.	O	O:0.990802
	
How	O	O:0.992382
could	O	O:0.997709
I	O	O:0.999868
sum	O	O:0.999226
consecutive	O	O:0.986147
day	O	O:0.996958
values	O	O:0.989838
here	O	O:0.978888
,	O	O:0.999905
so	O	O:0.999344
I	O	O:0.999082
would	O	O:0.999705
get	O	O:0.999589
something	O	O:0.999867
like	O	O:0.999163
this	O	O:0.998624
?	O	O:0.997788
	
I	O	O:0.994704
changed	O	O:0.997009
this	O	O:0.989427
to	O	O:0.998939
use	O	O:0.999786
\t	O	O:0.931529
as	O	O:0.997589
the	O	O:0.989559
separator	O	O:0.966203
.	O	O:0.985083
	
It's	O	O:0.993420
possible	O	O:0.985506
,	O	O:0.999358
but	O	O:0.998339
if	O	O:0.999928
your	O	O:0.999734
data	O	O:0.989891
is	O	O:0.999643
organized	O	O:0.979433
it's	O	O:0.998039
very	O	O:0.987069
quick	O	O:0.992382
with	O	O:0.993217
shifting	O	O:0.962921
it	O	O:0.995706
	
@USER	O	O:0.978875
fixed	O	O:0.957281
,	O	O:0.995971
was	O	O:0.995993
a	O	O:0.998296
typo	O	O:0.929273
;	O	O:0.999870
this	O	O:0.998863
take	O	O:0.999580
a	O	O:0.999685
full	O	O:0.923756
uri	O	O:0.994482
	
Just	O	O:0.987541
get	O	O:0.997650
rid	O	O:0.997590
of	O	O:0.998365
it	O	O:0.995038
and	O	O:0.999896
reindent	O	O:0.981465
the	O	O:0.996832
loop	O	O:0.994665
body	O	O:0.991239
to	O	O:0.999248
the	O	O:0.999981
left	O	O:0.992894
one	O	O:0.998096
level	O	O:0.993587
.	O	O:0.993345
	
However	O	O:0.995213
,	O	O:0.999531
I	O	O:0.999866
still	O	O:0.998441
get	O	O:0.995464
the	O	O:0.996361
warning	O	O:0.980788
.	O	O:0.986011
	
For	O	O:0.992808
any	O	O:0.996634
x	O	O:0.940221
in	O	O:0.997674
dataset2	O	O:0.971330
it	O	O:0.997126
has	O	O:0.998183
mapped	O	O:0.994427
value	O	O:0.993744
in	O	O:0.993635
col2	O	O:0.958536
.	O	O:0.990403
	
but	O	O:0.996580
you	O	O:0.999696
then	O	O:0.999798
need	O	O:0.999874
to	O	O:0.999880
store	O	O:0.999401
these	O	O:0.999287
dfs	O	O:0.994007
somewhere	O	O:0.992134
which	O	O:0.998794
means	O	O:0.998079
either	O	O:0.998060
in	O	O:0.999356
a	O	O:0.999401
list	O	O:0.854273
or	O	O:0.999658
tuple	O	O:0.984707
or	O	O:0.999821
some	O	O:0.994761
other	O	O:0.999550
container	O	O:0.998870
or	O	O:0.998256
use	O	O:0.999153
a	O	O:0.992638
generator	O	O:0.917363
	
and	O	O:0.999041
so	O	O:0.999340
on	O	O:0.993130
for	O	O:0.999541
the	O	O:0.999708
remaining	O	O:0.987155
location	O	O:0.995889
categories	O	O:0.954758
.	O	O:0.993024
	
@USER	O	O:0.978293
do	O	O:0.981362
**	O	O:0.999463
all	O	O:0.987206
**	O	O:0.999829
the	O	O:0.999829
columns	O	O:0.994268
in	O	O:0.998631
the	O	O:0.999606
DF	O	O:0.999861
require	O	O:0.995635
that	O	O:0.999096
same	O	O:0.995139
replacement	O	O:0.999460
?	O	O:0.996246
	
did	O	O:0.991299
you	O	O:0.998699
get	O	O:0.999819
any	O	O:0.999699
warnings	O	O:0.993135
while	O	O:0.997198
installing	O	O:0.996210
numpy	O	O:0.986970
or	O	O:0.998161
pandas	O	O:0.996293
?	O	O:0.997987
	
This	O	O:0.988099
`	O	O:0.999275
df	O	O:0.818494
`	O	O:0.999802
consist	O	O:0.980771
of	O	O:0.999580
volume	O	O:0.996184
observations	O	O:0.993005
at	O	O:0.999419
every	O	O:0.989995
10	O	O:0.991525
second	O	O:0.971444
for	O	O:0.993848
22	O	O:0.977558
non-consecutive	O	O:0.957403
days	O	O:0.913755
.	O	O:0.991773
	
I've	O	O:0.992334
also	O	O:0.994350
included	O	O:0.999179
a	O	O:0.994900
section	O	O:0.990695
to	O	O:0.998767
immediately	O	O:0.999719
identify	O	O:0.987946
any	O	O:0.999502
redundant	O	O:0.995514
genes	O	O:0.995741
that	O	O:0.996387
don't	O	O:0.999747
have	O	O:0.999691
any	O	O:0.999369
SNPs	O	O:0.997908
that	O	O:0.998513
fall	O	O:0.997145
within	O	O:0.999208
their	O	O:0.984280
range	O	O:0.990385
.	O	O:0.978855
	
Using	O	O:0.994665
some	O	O:0.954144
string	O	O:0.998204
formatting	O	O:0.998101
to	O	O:0.998946
get	O	O:0.999471
the	O	O:0.999350
index	O	O:0.996772
,	O	O:0.997495
but	O	O:0.998397
works	O	O:0.995207
for	O	O:0.999561
any	O	O:0.992604
combination	O	O:0.998440
of	O	O:0.991714
months	O	O:0.931436
(	O	O:0.999491
as	O	O:0.999883
long	O	O:0.992588
as	O	O:0.998807
the	O	O:0.999203
first	O	O:0.982422
month	O	O:0.952101
is	O	O:0.996660
explicitly	O	O:0.979742
included	O	O:0.985379
)	O	O:0.994918
.	O	O:0.978796
	
Any	O	O:0.979611
suggestions	O	O:0.972029
please	O	O:0.967363
?	O	O:0.993580
	
I	O	O:0.986218
get	O	O:0.975723
:	O	O:0.983746
#CODE	O	O:0.996543
	
I	O	O:0.996414
understand	O	O:0.999062
that	O	O:0.992542
we	O	O:0.998869
can	O	O:0.999670
line	O	O:0.999970
them	O	O:0.998594
all	O	O:0.999483
together	O	O:0.997151
side	O	O:0.996659
by	O	O:0.997385
side	O	O:0.995380
so	O	O:0.999087
their	O	O:0.994308
dates	O	O:0.958335
match	O	O:0.940110
and	O	O:0.999754
loop	O	O:0.998233
row	O	O:0.995841
by	O	O:0.995241
row	O	O:0.986755
,	O	O:0.997713
but	O	O:0.999651
then	O	O:0.998233
when	O	O:0.999846
i	O	O:0.999237
have	O	O:0.998927
100k	O	O:0.996949
different	O	O:0.996870
securities	O	O:0.977550
,	O	O:0.999728
this	O	O:0.990050
is	O	O:0.999559
slow	O	O:0.900329
in	O	O:0.996894
memory	O	O:0.961857
.	O	O:0.988941
	
I	O	O:0.995822
would	O	O:0.999794
like	O	O:0.998377
to	O	O:0.999777
automate	O	O:0.999349
this	O	O:0.999144
table	O	O:0.998816
so	O	O:0.999140
If	O	O:0.999408
I	O	O:0.999710
change	O	O:0.996697
my	O	O:0.993055
parameters	O	O:0.890134
in	O	O:0.999449
my	O	O:0.998619
code	O	O:0.994402
,	O	O:0.999817
I	O	O:0.999591
get	O	O:0.999794
a	O	O:0.999139
new	O	O:0.997374
table	O	O:0.998588
with	O	O:0.998090
that	O	O:0.999657
new	O	O:0.999336
data	O	O:0.993070
.	O	O:0.991576
	
But	O	O:0.996981
I	O	O:0.999158
get	O	O:0.999220
,	O	O:0.998666
which	O	O:0.998541
I	O	O:0.996743
cannot	O	O:0.999314
understand	O	O:0.974293
,	O	O:0.998486
#CODE	O	O:0.981499
	
Here's	O	O:0.987136
the	O	O:0.980504
product	O	O:0.830957
:	O	O:0.991189
#CODE	O	O:0.996869
	
(	O	O:0.986724
My	O	O:0.998959
actual	O	O:0.976395
problem	O	O:0.988997
involves	O	O:0.997148
parsing	O	O:0.992871
strings	O	O:0.995158
into	O	O:0.987464
lists	O	O:0.992969
,	O	O:0.999509
then	O	O:0.998860
checking	O	O:0.994950
for	O	O:0.999059
presents	O	O:0.989999
of	O	O:0.999507
a	O	O:0.996494
1	O	O:0.988197
or	O	O:0.999220
0	O	O:0.980548
in	O	O:0.998275
one	O	O:0.996865
list	O	O:0.965237
and	O	O:0.999769
if	O	O:0.999535
so	O	O:0.996222
marking	O	O:0.986673
the	O	O:0.998903
cosponsoring	O	O:0.958330
element	O	O:0.991827
in	O	O:0.998883
the	O	O:0.999270
other	O	O:0.996408
list	O	O:0.985077
with	O	O:0.998868
a	O	O:0.999218
asterix	O	O:0.892094
,	O	O:0.998885
but	O	O:0.997378
I	O	O:0.996129
didn't	O	O:0.999424
want	O	O:0.994838
to	O	O:0.999553
put	O	O:0.999527
that	O	O:0.995697
in	O	O:0.999409
my	O	O:0.995457
example	O	O:0.971407
and	O	O:0.998965
it	O	O:0.989762
is	O	O:0.997610
long	O	O:0.966877
and	O	O:0.998921
harder	O	O:0.980392
to	O	O:0.986138
follow	O	O:0.994062
.	O	O:0.992090
	
What	O	O:0.973742
is	O	O:0.999323
the	O	O:0.998555
error	O	O:0.991996
you	O	O:0.996971
get	O	O:0.997503
?	O	O:0.999149
	
So	O	O:0.998157
first	O	O:0.997792
chunk	O	O:0.982659
is	O	O:0.996998
stored	O	O:0.926709
as	O	O:0.996514
integer	O	O:0.693307
and	O	O:0.996455
in	O	O:0.999100
second	O	O:0.945732
chunk	O	O:0.994607
gets	O	O:0.979389
NaN	O	O:0.928904
values	O	O:0.974587
and	O	O:0.999393
store	O	O:0.956577
cannot	O	O:0.991691
convert	O	O:0.967683
NaN	O	O:0.933016
to	O	O:0.997454
integer	O	O:0.990395
	
Just	O	O:0.994719
play	O	O:0.963100
around	O	O:0.995575
with	O	O:0.993827
it	O	O:0.999211
to	O	O:0.999243
get	O	O:0.999832
it	O	O:0.999288
right	O	O:0.995942
.	O	O:0.997050
	
I	O	O:0.996827
get	O	O:0.998655
the	O	O:0.997725
following	O	O:0.972509
error	O	O:0.928351
:	O	O:0.995313
#CODE	O	O:0.995271
	
Edit	O	O:0.848538
:	O	O:0.996388
Here's	O	O:0.998131
an	O	O:0.999441
example	O	O:0.997018
of	O	O:0.998981
generating	O	O:0.996516
a	O	O:0.999436
close-enough	O	O:0.976187
data	O	O:0.998806
set	O	O:0.995724
,	O	O:0.999907
so	O	O:0.999177
you	O	O:0.999300
can	O	O:0.999859
get	O	O:0.999985
some	O	O:0.999786
idea	O	O:0.996685
of	O	O:0.999671
what	O	O:0.987757
I	O	O:0.999409
mean	O	O:0.973214
:	O	O:0.980268
#CODE	O	O:0.994700
	
@USER	O	O:0.981672
that	O	O:0.995003
means	O	O:0.999319
you	O	O:0.999742
have	O	O:0.999424
non	O	O:0.998544
string	O	O:0.998201
values	O	O:0.995504
mixed	O	O:0.800765
in	O	O:0.998535
;	O	O:0.998339
you	O	O:0.999555
need	O	O:0.999833
to	O	O:0.999884
specify	O	O:0.998408
`	O	O:0.999514
na=True	O	O:0.820621
`	O	O:0.999669
or	O	O:0.984462
`	O	O:0.999247
na=False	O	O:0.839264
`	O	O:0.999579
depending	O	O:0.979923
on	O	O:0.999787
what	O	O:0.998179
those	O	O:0.998344
values	O	O:0.969660
are	O	O:0.996746
.	O	O:0.999031
see	O	O:0.998210
my	O	O:0.996068
edits	O	O:0.972261
.	O	O:0.990377
	
Preferably	O	O:0.995970
,	O	O:0.999070
use	O	O:0.994691
Pandas	O	O:0.960250
for	O	O:0.997931
the	O	O:0.999037
data	O	O:0.980473
structure	O	O:0.995107
and	O	O:0.999764
Python	O	O:0.994517
for	O	O:0.995537
the	O	O:0.975933
language	O	O:0.938338
.	O	O:0.983337
	
Then	O	O:0.998426
as	O	O:0.999095
in	O	O:0.999089
the	O	O:0.999388
first	O	O:0.991228
point	O	O:0.994269
,	O	O:0.999443
I	O	O:0.999458
would	O	O:0.999867
like	O	O:0.999503
to	O	O:0.999906
calculate	O	O:0.999275
the	O	O:0.999725
number	O	O:0.995452
of	O	O:0.999481
continuous	O	O:0.979602
up	O	O:0.993428
and	O	O:0.999894
down	O	O:0.994557
sequences	O	O:0.987342
from	O	O:0.994960
the	O	O:0.999017
previous	O	O:0.981701
point	O	O:0.983308
.	O	O:0.990688
	
0	O	O:0.970234
can	O	O:0.998715
be	O	O:0.999866
changed	O	O:0.997266
to	O	O:0.996806
1	O	O:0.998520
or	O	O:0.999815
other	O	O:0.999795
values	O	O:0.997910
later	O	O:0.989457
in	O	O:0.999822
the	O	O:0.998581
code	O	O:0.957630
	
and	O	O:0.996091
in	O	O:0.999262
the	O	O:0.995951
instance	O	O:0.992674
when	O	O:0.989741
i	O	O:0.994283
am	O	O:0.999942
able	O	O:0.998236
to	O	O:0.999803
set	O	O:0.998542
the	O	O:0.999867
index	O	O:0.999296
of	O	O:0.999711
the	O	O:0.999651
df	O	O:0.992380
to	O	O:0.999306
the	O	O:0.999890
range	O	O:0.997544
,	O	O:0.999886
the	O	O:0.999949
data	O	O:0.992231
in	O	O:0.999843
the	O	O:0.999729
4	O	O:0.998640
columns	O	O:0.998251
change	O	O:0.985800
to	O	O:0.999324
NaN	O	O:0.979484
since	O	O:0.999448
they	O	O:0.999414
have	O	O:0.999919
no	O	O:0.999926
data	O	O:0.998915
that	O	O:0.998514
matches	O	O:0.998255
the	O	O:0.997527
new	O	O:0.937281
index	O	O:0.993903
.	O	O:0.987923
	
(	O	O:0.988970
Note	O	O:0.999003
that	O	O:0.999296
this	O	O:0.998729
produces	O	O:0.998548
an	O	O:0.998928
unrealistically	O	O:0.993770
high	O	O:0.990720
number	O	O:0.996640
of	O	O:0.998268
flooding	O	O:0.988787
events	O	O:0.925543
,	O	O:0.994000
but	O	O:0.996876
that's	O	O:0.999161
just	O	O:0.999536
because	O	O:0.999881
of	O	O:0.997739
how	O	O:0.999237
the	O	O:0.999797
sample	O	O:0.997582
data	O	O:0.981041
is	O	O:0.999784
set	O	O:0.978140
up	O	O:0.965856
and	O	O:0.997926
not	O	O:0.997882
reflective	O	O:0.994013
of	O	O:0.999315
a	O	O:0.996734
typical	O	O:0.993074
pond	O	O:0.964684
,	O	O:0.996582
though	O	O:0.981309
I'm	O	O:0.998503
not	O	O:0.999397
an	O	O:0.999609
expert	O	O:0.991993
on	O	O:0.999402
pond	O	O:0.943584
flooding	O	O:0.995778
!	O	O:0.980473
)	O	O:0.992392
#CODE	O	O:0.983334
	
What	O	O:0.990674
output	O	O:0.995804
do	O	O:0.998573
you	O	O:0.999317
get	O	O:0.998440
from	O	O:0.999635
this	O	O:0.997170
?	O	O:0.998852
	
`	O	O:0.992412
Ideally	O	O:0.995252
,	O	O:0.999719
for	O	O:0.999790
the	O	O:0.996662
pages	O	O:0.988710
that	O	O:0.998719
have	O	O:0.999915
multiple	O	O:0.999804
groups	O	O:0.993711
of	O	O:0.995245
34	O	O:0.976679
,	O	O:0.999437
i'd	O	O:0.998937
like	O	O:0.998508
to	O	O:0.999921
add	O	O:0.999858
a	O	O:0.999269
suffix	O	O:0.993383
of	O	O:0.998487
_1	O	O:0.936889
,	O	O:0.999191
_2	O	O:0.868313
,	O	O:0.998542
_3	O	O:0.890817
,	O	O:0.998825
etc	O	O:0.995199
.	O	O:0.996425
	
That	O	O:0.989749
means	O	O:0.999538
duplicating	O	O:0.997154
values	O	O:0.973125
from	O	O:0.996261
cols	O	O:0.979797
`	O	O:0.998760
product_id	O	B-API:0.718297
`	O	O:0.997857
and	O	O:0.997130
tem_name	O	O:0.938762
`	O	O:0.994686
as	O	O:0.998878
long	O	O:0.996564
as	O	O:0.997892
there	O	O:0.995490
are	O	O:0.999659
items	O	O:0.982228
in	O	O:0.997749
list	O	O:0.942368
`	O	O:0.998731
prices	O	B-API:0.535566
`	O	O:0.998369
.	O	O:0.978997
	
cool	O	O:0.817730
,	O	O:0.998640
but	O	O:0.999107
I	O	O:0.999146
get	O	O:0.999740
a	O	O:0.992759
syntax	O	O:0.994694
error	O	O:0.984989
for	O	O:0.994703
	
problem	O	O:0.910512
is	O	O:0.998301
the	O	O:0.995029
sum	O	O:0.966073
i	O	O:0.998124
now	O	O:0.998265
get	O	O:0.992922
is	O	O:0.999770
lined	O	O:0.988760
up	O	O:0.991693
in	O	O:0.999127
week	O	O:0.980534
intervals	O	O:0.987313
but	O	O:0.999178
not	O	O:0.997387
in	O	O:0.999767
the	O	O:0.997105
right	O	O:0.984893
sequence	O	O:0.992306
.	O	O:0.999278
this	O	O:0.997192
wouldn't	O	O:0.998874
be	O	O:0.999866
a	O	O:0.997958
problem	O	O:0.709027
but	O	O:0.998048
i	O	O:0.995992
need	O	O:0.999591
to	O	O:0.999731
get	O	O:0.999908
to	O	O:0.999884
the	O	O:0.999982
month	O	O:0.989546
of	O	O:0.999786
each	O	O:0.989520
date	O	O:0.967705
in	O	O:0.999681
order	O	O:0.993431
to	O	O:0.999216
do	O	O:0.999678
the	O	O:0.999846
next	O	O:0.975197
step	O	O:0.998907
i	O	O:0.995063
guess	O	O:0.997091
.	O	O:0.990802
	
For	O	O:0.998795
empty	O	O:0.995947
date	O	O:0.983730
cells	O	O:0.983619
I	O	O:0.997481
am	O	O:0.999810
inserting	O	O:0.995355
a	O	O:0.993215
NaT	O	O:0.558873
,	O	O:0.999436
which	O	O:0.998657
I	O	O:0.999118
would	O	O:0.999911
have	O	O:0.995575
thought	O	O:0.995424
would	O	O:0.998585
be	O	O:0.999246
fine	O	O:0.995612
,	O	O:0.998956
but	O	O:0.995254
in	O	O:0.998406
Oracle	O	O:0.998188
that	O	O:0.993919
is	O	O:0.999443
becoming	O	O:0.997985
some	O	O:0.994512
weird	O	O:0.989342
invalid	O	O:0.986317
time	O	O:0.991772
that	O	O:0.996770
displays	O	O:0.998564
as	O	O:0.996619
"	O	O:0.994489
0001-255-255	O	O:0.780251
00:00	O	O:0.951347
:	O	O:0.990766
00	O	O:0.982992
"	O	O:0.981862
(	O	O:0.994897
Something	O	O:0.999472
like	O	O:0.999105
MAXINT	O	O:0.995230
or	O	O:0.999003
0	O	O:0.997416
being	O	O:0.997314
converted	O	O:0.982994
to	O	O:0.999766
a	O	O:0.999623
timestamp	O	O:0.762732
I'm	O	O:0.997653
guessing	O	O:0.997330
?	O	O:0.997559
)	O	O:0.996744
#CODE	O	O:0.988894
	
I	O	O:0.996066
would	O	O:0.999865
like	O	O:0.999129
to	O	O:0.999896
get	O	O:0.999912
the	O	O:0.999875
following	O	O:0.979154
result	O	O:0.984995
:	O	O:0.995966
#CODE	O	O:0.996322
	
so	O	O:0.991046
in	O	O:0.997950
all	O	O:0.999406
both	O	O:0.997675
suggestions	O	O:0.990315
below	O	O:0.952459
worked	O	O:0.992004
for	O	O:0.990172
me	O	O:0.510925
:	O	O:0.983471
	
I	O	O:0.996828
get	O	O:0.998826
the	O	O:0.997926
following	O	O:0.996105
error	O	O:0.973811
message	O	O:0.902184
:	O	O:0.994927
#CODE	O	O:0.992648
	
I	O	O:0.995367
would	O	O:0.999543
suggest	O	O:0.996419
using	O	O:0.999136
the	O	O:0.982231
duplicated	O	O:0.717035
method	O	O:0.995326
on	O	O:0.998016
the	O	O:0.998074
Pandas	O	O:0.998433
Index	O	O:0.856517
itself	O	O:0.866285
:	O	O:0.993773
#CODE	O	O:0.993923
	
I	O	O:0.995902
would	O	O:0.999859
like	O	O:0.998772
to	O	O:0.999901
group	O	O:0.997756
the	O	O:0.999756
x	O	O:0.992313
values	O	O:0.998363
into	O	O:0.995052
equal	O	O:0.998996
size	O	O:0.995804
bins	O	O:0.971314
,	O	O:0.999039
and	O	O:0.999663
for	O	O:0.999794
each	O	O:0.959326
bin	O	O:0.986126
take	O	O:0.997786
the	O	O:0.999544
average	O	O:0.964996
value	O	O:0.997505
of	O	O:0.997938
both	O	O:0.988848
x	O	O:0.976573
and	O	O:0.998182
y	O	O:0.969125
.	O	O:0.961277
	
For	O	O:0.999494
this	O	O:0.999695
data	O	O:0.999474
set	O	O:0.996397
the	O	O:0.999834
two	O	O:0.988572
numbers	O	O:0.897536
are	O	O:0.999025
always	O	O:0.999247
equal	O	O:0.988796
.	O	O:0.978456
	
Do	O	O:0.995186
you	O	O:0.999596
want	O	O:0.999542
to	O	O:0.999830
check	O	O:0.999919
if	O	O:0.999748
the	O	O:0.999465
value	O	O:0.990331
is	O	O:0.995949
in	O	O:0.998525
the	O	O:0.999199
provided	O	O:0.971499
bounds	O	O:0.973464
and	O	O:0.999318
return	O	O:0.996832
a	O	O:0.957265
boolean	O	O:0.679310
True	O	O:0.917041
/	O	O:0.990803
False	O	O:0.985943
array	O	O:0.997197
,	O	O:0.999288
or	O	O:0.999569
you	O	O:0.999739
want	O	O:0.999716
to	O	O:0.999701
represent	O	O:0.999972
your	O	O:0.998785
values	O	O:0.993405
in	O	O:0.999601
categories	O	O:0.998581
represented	O	O:0.995682
by	O	O:0.999134
those	O	O:0.994104
bounds	O	O:0.938475
?	O	O:0.992403
	
The	O	O:0.988569
series	O	O:0.997469
I'd	O	O:0.999783
like	O	O:0.999421
to	O	O:0.999779
get	O	O:0.999409
would	O	O:0.996155
contain	O	O:0.971386
:	O	O:0.998352
#CODE	O	O:0.994602
	
The	O	O:0.994930
error	O	O:0.991754
I	O	O:0.996380
get	O	O:0.973762
:	O	O:0.982956
#CODE	O	O:0.996507
	
How	O	O:0.995720
do	O	O:0.995641
you	O	O:0.999741
deal	O	O:0.995770
with	O	O:0.998953
apparently	O	O:0.997427
overlapping	O	O:0.998867
date	O	O:0.899980
ranges	O	O:0.975834
?	O	O:0.990394
	
There	O	O:0.987800
are	O	O:0.999716
more	O	O:0.999294
columns	O	O:0.995588
in	O	O:0.999666
the	O	O:0.999887
data	O	O:0.996467
that	O	O:0.995593
are	O	O:0.999732
not	O	O:0.999704
shown	O	O:0.995550
above	O	O:0.983306
,	O	O:0.999196
and	O	O:0.999614
using	O	O:0.999729
this	O	O:0.977590
code	O	O:0.969244
causes	O	O:0.984922
the	O	O:0.998966
non-numeric	O	O:0.980250
columns	O	O:0.995306
to	O	O:0.999532
drop	O	O:0.982404
off	O	O:0.993857
.	O	O:0.995391
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
python	O	O:0.969942
-	O	O:0.998506
trying	O	O:0.996735
to	O	O:0.999396
get	O	O:0.999957
a	O	O:0.999531
new	O	O:0.991835
pandas	O	O:0.999002
release	O	O:0.917998
	
In	O	O:0.996659
the	O	O:0.999323
process	O	O:0.984645
of	O	O:0.999343
creating	O	O:0.996233
an	O	O:0.998672
example	O	O:0.996246
with	O	O:0.997422
code	O	O:0.995240
,	O	O:0.999780
I	O	O:0.998873
managed	O	O:0.994626
to	O	O:0.990431
get	O	O:0.999701
it	O	O:0.998742
working	O	O:0.985743
.	O	O:0.995868
	
Can	O	O:0.985121
you	O	O:0.996638
post	O	O:0.997341
raw	O	O:0.999148
data	O	O:0.994324
and	O	O:0.999717
example	O	O:0.998406
code	O	O:0.987308
that	O	O:0.993357
demonstrates	O	O:0.998620
this	O	O:0.994888
'	O	O:0.999115
cutting	O	O:0.953234
'	O	O:0.997524
off	O	O:0.983902
	
Running	O	O:0.997288
your	O	O:0.997053
code	O	O:0.989062
on	O	O:0.999526
the	O	O:0.999712
sample	O	O:0.998036
data	O	O:0.993092
produces	O	O:0.998355
the	O	O:0.999919
same	O	O:0.984106
result	O	O:0.995660
.	O	O:0.996343
	
I	O	O:0.998673
want	O	O:0.998879
to	O	O:0.998434
take	O	O:0.999811
advantage	O	O:0.999728
of	O	O:0.999531
sortedness	O	O:0.960838
since	O	O:0.998943
with	O	O:0.999002
very	O	O:0.996372
large	O	O:0.993990
series	O	O:0.998171
merging	O	O:0.996597
when	O	O:0.997239
we	O	O:0.999536
know	O	O:0.997317
it's	O	O:0.995357
sorted	O	O:0.959505
should	O	O:0.997559
be	O	O:0.999361
linear	O	O:0.971739
in	O	O:0.997838
total	O	O:0.990716
length	O	O:0.996127
of	O	O:0.997692
the	O	O:0.997803
arrays	O	O:0.989811
,	O	O:0.997495
whereas	O	O:0.998365
any	O	O:0.998752
sort	O	O:0.955364
will	O	O:0.997776
be	O	O:0.998899
non-linear	O	O:0.954285
.	O	O:0.945204
	
What	O	O:0.997456
if	O	O:0.998824
you	O	O:0.999851
just	O	O:0.999034
changed	O	O:0.994107
the	O	O:0.998387
index	O	O:0.999694
from	O	O:0.998133
date	O	O:0.948118
/	O	O:0.998757
status	O	O:0.995332
to	O	O:0.997628
date	O	O:0.982925
/	O	O:0.997044
var1	O	O:0.933768
/	O	O:0.992919
status	O	O:0.969612
?	O	O:0.988684
	
which	O	O:0.997920
when	O	O:0.997138
imported	O	O:0.997304
into	O	O:0.997410
pandas	O	O:0.999478
data	O	O:0.993666
frames	O	O:0.988268
and	O	O:0.999897
each	O	O:0.995604
joined	O	O:0.927641
to	O	O:0.999699
a	O	O:0.999914
common	O	O:0.948530
timestamp	O	O:0.970242
,	O	O:0.999076
with	O	O:0.999613
a	O	O:0.999051
day	O	O:0.998427
of	O	O:0.999512
year	O	O:0.971067
field	O	O:0.998779
added	O	O:0.977331
,	O	O:0.999575
so	O	O:0.998274
looking	O	O:0.999047
something	O	O:0.998869
like	O	O:0.976488
:	O	O:0.998217
#CODE	O	O:0.996128
	
This	O	O:0.988692
works	O	O:0.998774
only	O	O:0.998312
if	O	O:0.999878
your	O	O:0.990572
object	O	O:0.948911
is	O	O:0.999390
table	O	O:0.985465
format	O	O:0.983966
(	O	O:0.997055
rather	O	O:0.998926
than	O	O:0.996244
fixed	O	O:0.987924
format	O	O:0.992596
)	O	O:0.994638
.	O	O:0.986936
	
Drop	O	O:0.985423
range	O	O:0.998903
of	O	O:0.999485
columns	O	O:0.999284
by	O	O:0.998181
labels	O	O:0.974919
	
You	O	O:0.996141
could	O	O:0.999152
put	O	O:0.978532
```	O	O:0.997175
[	O	O:0.975455
'	O	O:0.999482
col1	O	O:0.995117
']```	O	O:0.996380
at	O	O:0.996581
the	O	O:0.999306
end	O	O:0.994443
to	O	O:0.998307
get	O	O:0.999723
an	O	O:0.998805
int	O	O:0.828592
.	O	O:0.988629
	
Hence	O	O:0.992737
,	O	O:0.999590
the	O	O:0.999653
width	O	O:0.995681
of	O	O:0.999543
each	O	O:0.993950
bin	O	O:0.996608
over	O	O:0.992633
the	O	O:0.996818
interval	O	O:0.996393
from	O	O:0.993757
[	O	O:0.998791
-1	O	O:0.997710
,	O	O:0.998064
1	O	O:0.984563
]	O	O:0.995803
should	O	O:0.996651
be	O	O:0.999613
`	O	O:0.999254
2	O	O:0.796126
/	O	O:0.995424
10=	O	O:0.984070
0.20	O	O:0.840598
`	O	O:0.997201
;	O	O:0.996009
however	O	O:0.997872
,	O	O:0.999877
the	O	O:0.995653
graph	O	O:0.978711
does	O	O:0.995323
not	O	O:0.999829
have	O	O:0.999922
any	O	O:0.999703
bins	O	O:0.994526
with	O	O:0.999725
a	O	O:0.999644
width	O	O:0.992775
of	O	O:0.994118
0.20	O	O:0.836274
.	O	O:0.992816
	
For	O	O:0.992160
encoding	O	O:0.998444
training	O	O:0.998322
data	O	O:0.997795
you	O	O:0.999517
can	O	O:0.999738
use	O	O:0.999583
fit_transform	O	B-API:0.668148
which	O	O:0.997696
will	O	O:0.996561
discover	O	O:0.997354
the	O	O:0.999288
category	O	O:0.929621
labels	O	O:0.977683
and	O	O:0.999471
create	O	O:0.990542
appropriate	O	O:0.998679
dummy	O	O:0.991531
variables	O	O:0.935567
.	O	O:0.985617
	
I	O	O:0.995953
think	O	O:0.995989
you're	O	O:0.986627
confusing	O	O:0.992400
how	O	O:0.999240
to	O	O:0.998598
filter	O	O:0.994225
here	O	O:0.991024
,	O	O:0.999743
if	O	O:0.998173
you're	O	O:0.997819
looking	O	O:0.996729
for	O	O:0.999921
a	O	O:0.998728
specific	O	O:0.990462
value	O	O:0.999243
then	O	O:0.987948
`	O	O:0.999922
stock	O	O:0.967692
[	O	O:0.999479
stock	O	O:0.963449
[	O	O:0.986498
'	O	O:0.996744
Whs	O	O:0.983312
']	O	O:0.980239
==	O	O:0.685297
'	O	O:0.992353
VKO	O	O:0.980283
']`	O	O:0.997964
will	O	O:0.995651
return	O	O:0.997136
only	O	O:0.999566
the	O	O:0.999972
rows	O	O:0.987072
where	O	O:0.999325
that	O	O:0.999401
condition	O	O:0.998033
is	O	O:0.999137
satisfied	O	O:0.993221
,	O	O:0.998793
for	O	O:0.999886
your	O	O:0.996591
last	O	O:0.984820
part	O	O:0.999091
the	O	O:0.998178
reason	O	O:0.997936
you	O	O:0.998951
get	O	O:0.999652
an	O	O:0.999946
empty	O	O:0.992816
row	O	O:0.980330
is	O	O:0.998685
that	O	O:0.992172
you're	O	O:0.996632
slicing	O	O:0.997394
the	O	O:0.999651
first	O	O:0.992092
3	O	O:0.998168
rows	O	O:0.988258
and	O	O:0.999929
then	O	O:0.999255
comparing	O	O:0.999427
the	O	O:0.999702
first	O	O:0.997074
value	O	O:0.997907
with	O	O:0.999590
your	O	O:0.995746
string	O	O:0.991915
but	O	O:0.999067
the	O	O:0.999359
first	O	O:0.994894
string	O	O:0.997073
value	O	O:0.988964
is	O	O:0.972187
'	O	O:0.992578
VKO	O	O:0.861216
'	O	O:0.976705
and	O	O:0.999020
not	O	O:0.987395
'	O	O:0.997545
ZZZ	O	O:0.977933
'	O	O:0.998205
,	O	O:0.999130
you	O	O:0.998431
should	O	O:0.998840
do	O	O:0.999347
this	O	O:0.996279
:	O	O:0.997664
`	O	O:0.999654
stock	O	O:0.963109
[	O	O:0.999459
stock	O	O:0.960813
[	O	O:0.986484
'	O	O:0.996744
Whs	O	O:0.983321
']	O	O:0.981567
==	O	O:0.868184
'	O	O:0.994061
ZZZ	O	O:0.998073
']`	O	O:0.998610
to	O	O:0.994221
filter	O	O:0.988340
the	O	O:0.999288
resuls	O	O:0.966587
first	O	O:0.991026
	
I	O	O:0.994988
had	O	O:0.996643
changed	O	O:0.983812
the	O	O:0.999545
data	O	O:0.991741
on	O	O:0.999632
the	O	O:0.998502
local	O	O:0.996589
file	O	O:0.979286
.	O	O:0.991983
	
Note	O	O:0.996305
that	O	O:0.999353
this	O	O:0.994784
is	O	O:0.999436
slightly	O	O:0.994513
different	O	O:0.998807
as	O	O:0.997334
we	O	O:0.995681
are	O	O:0.999343
returning	O	O:0.995025
the	O	O:0.992456
first	O	O:0.990865
index	O	O:0.996307
here	O	O:0.876122
(	O	O:0.997682
and	O	O:0.999393
not	O	O:0.999039
the	O	O:0.998981
normally	O	O:0.997099
returned	O	O:0.998536
last	O	O:0.975803
,	O	O:0.999833
youy	O	O:0.943880
could	O	O:0.998627
do	O	O:0.999242
either	O	O:0.998905
)	O	O:0.996469
.	O	O:0.985560
	
I'm	O	O:0.993404
not	O	O:0.999095
sure	O	O:0.997386
how	O	O:0.999135
the	O	O:0.999198
archive	O	O:0.996489
block	O	O:0.993265
reading	O	O:0.978992
works	O	O:0.985019
and	O	O:0.998458
how	O	O:0.998616
much	O	O:0.985965
data	O	O:0.997272
it	O	O:0.999088
loads	O	O:0.998600
into	O	O:0.969939
memory	O	O:0.972563
,	O	O:0.996757
but	O	O:0.997846
it's	O	O:0.995763
clear	O	O:0.998798
that	O	O:0.999027
you	O	O:0.999622
will	O	O:0.999873
have	O	O:0.999954
to	O	O:0.999957
somehow	O	O:0.999954
control	O	O:0.994183
the	O	O:0.999828
size	O	O:0.987417
of	O	O:0.998236
the	O	O:0.996984
chunks	O	O:0.986901
.	O	O:0.987233
	
Regarding	O	O:0.991069
nesting	O	O:0.996197
of	O	O:0.988572
functions	O	O:0.934243
:	O	O:0.999399
if	O	O:0.999494
you	O	O:0.999462
believe	O	O:0.999622
a	O	O:0.993133
function	O	O:0.974038
has	O	O:0.999239
a	O	O:0.999483
general	O	O:0.960050
purpose	O	O:0.988858
or	O	O:0.992714
is	O	O:0.993708
reusable	O	O:0.982929
,	O	O:0.999613
then	O	O:0.994813
it	O	O:0.999625
should	O	O:0.999846
be	O	O:0.999916
defined	O	O:0.995974
at	O	O:0.995464
the	O	O:0.998280
top	O	O:0.997465
level	O	O:0.995285
of	O	O:0.999557
a	O	O:0.997417
module	O	O:0.989591
or	O	O:0.999891
some	O	O:0.998186
place	O	O:0.998904
where	O	O:0.999883
other	O	O:0.997272
functions	O	O:0.996145
can	O	O:0.992034
call	O	O:0.994741
it	O	O:0.997790
.	O	O:0.967756
	
I	O	O:0.997490
get	O	O:0.999435
an	O	O:0.989370
error	O	O:0.940022
saying	O	O:0.946903
:	O	O:0.995369
lambda	O	O:0.945578
(	O	O:0.997748
)	O	O:0.998804
takes	O	O:0.988869
exactly	O	O:0.993893
1	O	O:0.973070
argument	O	O:0.970751
(	O	O:0.996227
3	O	O:0.997962
given	O	O:0.984366
)	O	O:0.997875
	
You	O	O:0.997161
can	O	O:0.998741
get	O	O:0.999624
the	O	O:0.999918
list	O	O:0.993845
of	O	O:0.999576
columns	O	O:0.994550
with	O	O:0.990319
:	O	O:0.996142
#CODE	O	O:0.997358
	
One	O	O:0.965923
is	O	O:0.997667
I	O	O:0.998847
only	O	O:0.999207
wanted	O	O:0.998284
to	O	O:0.998112
get	O	O:0.999906
the	O	O:0.999950
mean	O	O:0.998289
of	O	O:0.999538
the	O	O:0.999861
next	O	O:0.999479
rows	O	O:0.996772
that	O	O:0.998446
relate	O	O:0.998452
to	O	O:0.999320
the	O	O:0.999958
same	O	O:0.992133
group	O	O:0.917731
.	O	O:0.997019
	
By	O	O:0.984584
default	O	O:0.995917
this	O	O:0.998171
will	O	O:0.998878
add	O	O:0.999494
a	O	O:0.999851
column	O	O:0.997152
of	O	O:0.997461
integers	O	O:0.841664
(	O	O:0.999126
because	O	O:0.999185
R	O	O:0.960471
factors	O	O:0.989665
are	O	O:0.997874
encoded	O	O:0.997714
as	O	O:0.998356
integers	O	O:0.894559
)	O	O:0.996527
.	O	O:0.986216
	
I	O	O:0.993552
am	O	O:0.999262
trying	O	O:0.996938
to	O	O:0.999397
calculate	O	O:0.998795
the	O	O:0.999675
percent	O	O:0.997517
change	O	O:0.994060
by	O	O:0.998424
month	O	O:0.928833
for	O	O:0.997822
each	O	O:0.774789
product	O	O:0.960237
.	O	O:0.988810
	
If	O	O:0.992967
i	O	O:0.997185
want	O	O:0.999540
only	O	O:0.988873
USA	O	O:0.997077
Equities	O	O:0.970281
vs	O	O:0.988220
all	O	O:0.997276
other	O	O:0.988604
equity	O	O:0.811277
and	O	O:0.997545
not	O	O:0.996593
the	O	O:0.999110
enitre	O	O:0.979049
89	O	O:0.994306
columns	O	O:0.998023
how	O	O:0.996805
do	O	O:0.997598
i	O	O:0.995630
do	O	O:0.992385
it	O	O:0.997669
?	O	O:0.993761
	
Pandas	O	O:0.903128
:	O	O:0.991828
Efficient	O	O:0.995875
way	O	O:0.998356
to	O	O:0.998818
get	O	O:0.999951
first	O	O:0.999014
row	O	O:0.999056
with	O	O:0.995199
element	O	O:0.997603
that	O	O:0.993299
is	O	O:0.999586
smaller	O	O:0.985765
than	O	O:0.998858
a	O	O:0.999068
given	O	O:0.955863
value	O	O:0.994979
	
I	O	O:0.998376
first	O	O:0.994147
thought	O	O:0.953697
this	O	O:0.981268
was	O	O:0.997615
a	O	O:0.999328
spacing	O	O:0.990280
issue	O	O:0.992309
in	O	O:0.999371
the	O	O:0.999769
columns	O	O:0.997914
values	O	O:0.990842
,	O	O:0.999880
so	O	O:0.999763
I	O	O:0.999359
replaced	O	O:0.999854
them	O	O:0.984455
with	O	O:0.994792
underscores	O	O:0.963646
,	O	O:0.998166
but	O	O:0.999014
it	O	O:0.999014
also	O	O:0.996692
doesn't	O	O:0.999894
work	O	O:0.996603
in	O	O:0.999973
columns	O	O:0.998474
which	O	O:0.999123
only	O	O:0.998822
contain	O	O:0.999465
a	O	O:0.998620
single	O	O:0.940608
word	O	O:0.991211
and	O	O:0.999647
no	O	O:0.996808
spaces	O	O:0.778820
?	O	O:0.992322
	
Are	O	O:0.996149
you	O	O:0.998361
getting	O	O:0.999510
the	O	O:0.999468
values	O	O:0.988524
from	O	O:0.997848
the	O	O:0.998302
GUI	O	O:0.996688
ok	O	O:0.964421
,	O	O:0.998944
but	O	O:0.999964
your	O	O:0.992985
calculations	O	O:0.994273
are	O	O:0.999104
returning	O	O:0.996430
nothin	O	O:0.862550
?	O	O:0.993931
	
This	O	O:0.918909
is	O	O:0.998922
not	O	O:0.995301
precisely	O	O:0.998738
what	O	O:0.993655
I'm	O	O:0.991163
after	O	O:0.992599
,	O	O:0.998020
but	O	O:0.998120
I	O	O:0.998911
think	O	O:0.999146
I'll	O	O:0.990002
have	O	O:0.994333
to	O	O:0.999270
write	O	O:0.999914
a	O	O:0.998879
loop	O	O:0.995152
top	O	O:0.996083
get	O	O:0.995492
that	O	O:0.992902
.	O	O:0.998072
	
Hence	O	O:0.992737
,	O	O:0.999590
the	O	O:0.999653
width	O	O:0.995681
of	O	O:0.999543
each	O	O:0.993950
bin	O	O:0.996608
over	O	O:0.992633
the	O	O:0.996818
interval	O	O:0.996393
from	O	O:0.993757
[	O	O:0.998791
-1	O	O:0.997710
,	O	O:0.998064
1	O	O:0.984563
]	O	O:0.995803
should	O	O:0.996651
be	O	O:0.999613
`	O	O:0.999254
2	O	O:0.796126
/	O	O:0.995424
10=	O	O:0.984070
0.20	O	O:0.840598
`	O	O:0.997201
;	O	O:0.996009
however	O	O:0.997872
,	O	O:0.999877
the	O	O:0.995653
graph	O	O:0.978711
does	O	O:0.995323
not	O	O:0.999829
have	O	O:0.999922
any	O	O:0.999703
bins	O	O:0.994526
with	O	O:0.999725
a	O	O:0.999644
width	O	O:0.992775
of	O	O:0.994118
0.20	O	O:0.836274
.	O	O:0.992816
	
I'm	O	O:0.988165
having	O	O:0.998605
a	O	O:0.996295
problem	O	O:0.956129
trying	O	O:0.997886
to	O	O:0.998996
get	O	O:0.999978
a	O	O:0.999724
character	O	O:0.999322
count	O	O:0.997281
column	O	O:0.999442
of	O	O:0.998369
the	O	O:0.999047
string	O	O:0.998987
values	O	O:0.994903
in	O	O:0.999594
another	O	O:0.998738
column	O	O:0.997844
,	O	O:0.995237
and	O	O:0.999199
haven't	O	O:0.987847
figured	O	O:0.976676
out	O	O:0.995599
how	O	O:0.996307
to	O	O:0.997707
do	O	O:0.999908
it	O	O:0.998590
efficiently	O	O:0.972115
.	O	O:0.995088
	
I	O	O:0.998684
think	O	O:0.999080
I	O	O:0.994204
get	O	O:0.997751
the	O	O:0.996373
idea	O	O:0.946249
.	O	O:0.989573
	
How	O	O:0.994480
can	O	O:0.999112
I	O	O:0.999958
get	O	O:0.999699
the	O	O:0.998518
position	O	O:0.991094
of	O	O:0.995817
index	O	O:0.998885
`	O	O:0.999435
18	O	O:0.776110
`	O	O:0.998696
?	O	O:0.976436
	
When	O	O:0.997124
using	O	O:0.996896
`	O	O:0.996255
groupy-apply	O	B-API:0.744162
`	O	O:0.999342
,	O	O:0.998723
instead	O	O:0.999868
of	O	O:0.998729
dropping	O	O:0.980713
the	O	O:0.998654
group	O	O:0.680147
key	O	O:0.998642
index	O	O:0.997360
using	O	O:0.989513
:	O	O:0.981042
#CODE	O	O:0.982131
	
No	O	O:0.997536
real	O	O:0.943724
advantage	O	O:0.997685
if	O	O:0.993880
there	O	O:0.996767
are	O	O:0.999057
just	O	O:0.998970
two	O	O:0.997760
categories	O	O:0.806136
:	O	O:0.994024
#CODE	O	O:0.997036
	
@USER	O	O:0.982598
I	O	O:0.996608
suspect	O	O:0.998754
something	O	O:0.993554
else	O	O:0.938342
is	O	O:0.999618
going	O	O:0.987688
on	O	O:0.999514
then	O	O:0.995260
,	O	O:0.999931
because	O	O:0.999831
when	O	O:0.995354
I	O	O:0.999845
memory	O	O:0.999252
profile	O	O:0.956014
this	O	O:0.992594
way	O	O:0.978355
(	O	O:0.999089
with	O	O:0.997476
`	O	O:0.999717
drop	O	O:0.775374
`)	O	O:0.999931
using	O	O:0.998270
the	O	O:0.978573
snippet	O	O:0.976348
that	O	O:0.986187
Michael	O	O:0.999075
Laszlo	O	O:0.988634
posted	O	O:0.982290
,	O	O:0.998903
I	O	O:0.996855
do	O	O:0.997098
not	O	O:0.991110
see	O	O:0.995010
memory	O	O:0.983812
growth	O	O:0.976932
.	O	O:0.990217
	
Of	O	O:0.996181
course	O	O:0.996428
you	O	O:0.998424
may	O	O:0.999342
not	O	O:0.999849
like	O	O:0.998823
the	O	O:0.999852
index	O	O:0.999610
as	O	O:0.998546
tuples	O	O:0.970987
;	O	O:0.999489
you	O	O:0.998807
could	O	O:0.999851
reset	O	O:0.993631
the	O	O:0.999426
index	O	O:0.998244
within	O	O:0.989412
the	O	O:0.999586
list	O	O:0.983155
comprehension	O	O:0.997925
to	O	O:0.999441
get	O	O:0.999920
the	O	O:0.999547
following	O	O:0.997559
if	O	O:0.999293
you	O	O:0.998739
prefer	O	O:0.981625
(	O	O:0.999319
for	O	O:0.999136
example	O	O:0.976676
,	O	O:0.999566
this	O	O:0.998876
if	O	O:0.996999
for	O	O:0.999635
part	O	O:0.968094
1	O	O:0.860509
):	O	O:0.993934
#CODE	O	O:0.985673
	
Here	O	O:0.911255
is	O	O:0.998632
how	O	O:0.992079
I	O	O:0.998805
am	O	O:0.999672
trying	O	O:0.995636
to	O	O:0.999445
get	O	O:0.999921
the	O	O:0.999162
output	O	O:0.991620
to	O	O:0.999262
look	O	O:0.999013
like	O	O:0.986095
:	O	O:0.998000
#CODE	O	O:0.996669
	
memory	O	O:0.980048
efficient	O	O:0.979420
Python	O	O:0.920151
(	O	O:0.998616
pandas	O	O:0.994839
)	O	O:0.999896
aggregates	O	O:0.972368
of	O	O:0.999270
categories	O	O:0.993167
from	O	O:0.998011
one	O	O:0.999157
csv	O	O:0.997869
file	O	O:0.991135
per	O	O:0.984622
period	O	O:0.981506
	
But	O	O:0.998255
this	O	O:0.999433
last	O	O:0.998431
line	O	O:0.998269
generate	O	O:0.991915
the	O	O:0.999568
error	O	O:0.961544
message	O	O:0.933025
:	O	O:0.994840
`	O	O:0.999293
no	O	O:0.997797
item	O	O:0.998911
named	O	O:0.989038
timestamp	O	O:0.880430
`	O	O:0.989862
.	O	O:0.955691
	
The	O	O:0.992121
problem	O	O:0.993664
here	O	O:0.991811
,	O	O:0.999783
well	O	O:0.997840
the	O	O:0.999586
biggest	O	O:0.985512
one	O	O:0.998379
,	O	O:0.996426
is	O	O:0.999636
that	O	O:0.999102
your	O	O:0.999461
`	O	O:0.999872
data	O	O:0.940328
`	O	O:0.998196
is	O	O:0.993118
string	O	O:0.976342
,	O	O:0.997668
not	O	O:0.999185
valid	O	O:0.998708
data	O	O:0.997379
structure	O	O:0.998805
,	O	O:0.999904
same	O	O:0.998064
thing	O	O:0.997225
with	O	O:0.997905
dictionary	O	O:0.998637
inside	O	O:0.996539
it	O	O:0.999143
,	O	O:0.999498
you	O	O:0.999721
creating	O	O:0.997306
strings	O	O:0.965211
,	O	O:0.999558
not	O	O:0.999675
data	O	O:0.997444
structures	O	O:0.995357
.	O	O:0.995933
	
I	O	O:0.998506
also	O	O:0.999488
want	O	O:0.998501
to	O	O:0.999316
create	O	O:0.999851
a	O	O:0.999631
new	O	O:0.993444
column	O	O:0.999332
that	O	O:0.989115
shows	O	O:0.998939
the	O	O:0.999375
difference	O	O:0.994953
in	O	O:0.999492
days	O	O:0.971560
between	O	O:0.997767
the	O	O:0.997552
end	O	O:0.983671
and	O	O:0.999812
begin	O	O:0.996156
dates	O	O:0.739359
.	O	O:0.980082
	
In	O	O:0.994856
the	O	O:0.999478
next	O	O:0.981439
column	O	O:0.989331
(	O	O:0.998470
B	O	O:0.993070
)	O	O:0.999359
,	O	O:0.997981
I	O	O:0.999738
want	O	O:0.998878
to	O	O:0.998316
create	O	O:0.999639
an	O	O:0.999325
indexed	O	O:0.999373
series	O	O:0.999606
that	O	O:0.994939
begins	O	O:0.995836
at	O	O:0.999435
1000	O	O:0.993294
based	O	O:0.983383
on	O	O:0.998604
the	O	O:0.998630
percent	O	O:0.993003
changes	O	O:0.968840
.	O	O:0.994325
	
I	O	O:0.995793
can't	O	O:0.998265
use	O	O:0.991395
fixed	O	O:0.973214
position	O	O:0.977773
to	O	O:0.987274
slice	O	O:0.994607
it	O	O:0.998125
.	O	O:0.991387
	
This	O	O:0.995813
gets	O	O:0.986151
you	O	O:0.999328
to	O	O:0.999740
where	O	O:0.999881
I	O	O:0.998369
am	O	O:0.998968
.	O	O:0.984746
	
I	O	O:0.996937
am	O	O:0.999169
using	O	O:0.999067
this	O	O:0.994818
to	O	O:0.999550
generate	O	O:0.999618
nodes	O	O:0.990460
in	O	O:0.999858
a	O	O:0.998361
graph	O	O:0.987650
,	O	O:0.999063
if	O	O:0.998555
x1	O	O:0.975127
,	O	O:0.998169
x2	O	O:0.953007
are	O	O:0.998221
not	O	O:0.999442
exactly	O	O:0.999588
equal	O	O:0.994295
,	O	O:0.998445
networkx	O	O:0.989233
recognizes	O	O:0.999290
them	O	O:0.991618
as	O	O:0.999874
different	O	O:0.996450
nodes	O	O:0.980215
,	O	O:0.998486
if	O	O:0.999252
x1=x2	O	O:0.988179
,	O	O:0.999578
i	O	O:0.997600
get	O	O:0.999382
a	O	O:0.999539
recombinant	O	O:0.986414
tree	O	O:0.996139
which	O	O:0.984809
is	O	O:0.999346
what	O	O:0.993090
i	O	O:0.995239
want	O	O:0.992969
.	O	O:0.987193
	
My	O	O:0.976645
example	O	O:0.926061
was	O	O:0.994042
not	O	O:0.998740
good	O	O:0.992671
enough	O	O:0.995752
,	O	O:0.999495
as	O	O:0.999641
your	O	O:0.987997
script	O	O:0.996165
smartly	O	O:0.992385
took	O	O:0.993175
the	O	O:0.999410
size	O	O:0.992817
from	O	O:0.998929
the	O	O:0.999807
length	O	O:0.996921
of	O	O:0.997456
the	O	O:0.998498
df	O	O:0.966657
.	O	O:0.987764
	
iPython's	O	O:0.968493
Rmagic	O	O:0.652669
is	O	O:0.995279
already	O	O:0.996374
able	O	O:0.997394
to	O	O:0.999257
perform	O	O:0.998650
an	O	O:0.998096
automagic	O	O:0.992459
conversion	O	O:0.986369
between	O	O:0.980639
the	O	O:0.998642
two	O	O:0.993590
in	O	O:0.999749
a	O	O:0.999477
number	O	O:0.991438
of	O	O:0.997823
situations	O	O:0.988581
,	O	O:0.998487
and	O	O:0.998883
might	O	O:0.998397
be	O	O:0.999532
a	O	O:0.999845
good	O	O:0.811759
way	O	O:0.998962
to	O	O:0.999219
get	O	O:0.999803
familiar	O	O:0.995255
with	O	O:0.996902
Python	O	O:0.979081
.	O	O:0.994027
	
So	O	O:0.995437
if	O	O:0.999889
your	O	O:0.997357
dataset	O	O:0.965373
is	O	O:0.998441
really	O	O:0.992749
large	O	O:0.994847
,	O	O:0.997768
perhaps	O	O:0.998004
store	O	O:0.997854
them	O	O:0.998293
first	O	O:0.996977
in	O	O:0.999019
on-disk	O	O:0.987821
database	O	O:0.992278
/	O	O:0.999209
HDF	O	O:0.984890
rather	O	O:0.989852
than	O	O:0.994976
csv	O	O:0.994117
file	O	O:0.990562
and	O	O:0.999787
sort	O	O:0.998447
them	O	O:0.981736
there	O	O:0.994436
,	O	O:0.998350
and	O	O:0.999879
then	O	O:0.997762
query	O	O:0.951189
.	O	O:0.996502
	
One	O	O:0.979158
had	O	O:0.992870
no	O	O:0.997419
problem	O	O:0.991879
at	O	O:0.998281
all	O	O:0.960973
(	O	O:0.998631
the	O	O:0.999467
xlsx	O	O:0.980879
file	O	O:0.997272
,	O	O:0.999647
example	O	O:0.996723
2	O	O:0.989120
)	O	O:0.998224
and	O	O:0.999069
the	O	O:0.998745
other	O	O:0.741284
(	O	O:0.997346
xls	O	O:0.982724
,	O	O:0.999524
example	O	O:0.990767
1	O	O:0.991578
)	O	O:0.998924
had	O	O:0.995295
a	O	O:0.998713
difference	O	O:0.919801
between	O	O:0.995673
the	O	O:0.997126
columns	O	O:0.987583
.	O	O:0.989482
	
then	O	O:0.993131
with	O	O:0.999760
the	O	O:0.999352
`	O	O:0.998180
sorted	O	O:0.671237
`	O	O:0.997561
function	O	O:0.972018
and	O	O:0.998807
`	O	O:0.998336
datetime	O	B-API:0.967959
`	O	O:0.993061
module	O	O:0.674282
(	O	O:0.998707
remember	O	O:0.988644
the	O	O:0.996312
`	O	O:0.995468
sorted	O	O:0.787570
`	O	O:0.999482
function	O	O:0.995299
change	O	O:0.987799
the	O	O:0.998058
`	O	O:0.998026
data	O	O:0.852800
`	O	O:0.999819
it	O	O:0.999092
self	O	O:0.982692
)	O	O:0.998184
#CODE	O	O:0.968726
	
BUT	O	O:0.982636
,	O	O:0.999712
I	O	O:0.999226
get	O	O:0.999249
the	O	O:0.992286
"	O	O:0.997244
SettingWithCopyWarning	O	O:0.847009
"	O	O:0.985843
:	O	O:0.981504
	
This	O	O:0.973208
is	O	O:0.997097
machine	O	O:0.998205
generated	O	O:0.995853
data	O	O:0.987475
.	O	O:0.990744
	
You	O	O:0.993953
can't	O	O:0.995160
use	O	O:0.997825
`	O	O:0.997631
or	O	O:0.968506
`	O	O:0.999864
with	O	O:0.993550
arrays	O	O:0.996294
,	O	O:0.999808
if	O	O:0.999258
you	O	O:0.997592
try	O	O:0.999736
this	O	O:0.999504
you	O	O:0.999781
get	O	O:0.999818
an	O	O:0.999656
error	O	O:0.992612
`	O	O:0.991534
ValueError	O	O:0.846041
:	O	O:0.998593
The	O	O:0.999121
truth	O	O:0.997647
value	O	O:0.998420
of	O	O:0.998015
a	O	O:0.992236
Series	O	O:0.964872
is	O	O:0.996931
ambiguous	O	O:0.891257
.	O	O:0.990809
	
Incidentally	O	O:0.992124
,	O	O:0.999835
this	O	O:0.991728
is	O	O:0.999418
the	O	O:0.999869
same	O	O:0.993692
result	O	O:0.999548
that	O	O:0.999291
you	O	O:0.999865
would	O	O:0.999903
get	O	O:0.999814
with	O	O:0.999830
the	O	O:0.999069
Spearman	O	O:0.986275
R	O	O:0.967682
coefficient	O	O:0.997472
as	O	O:0.999025
well	O	O:0.974340
.	O	O:0.996269
	
How	O	O:0.992408
could	O	O:0.997300
I	O	O:0.999885
do	O	O:0.999523
to	O	O:0.999217
have	O	O:0.999681
exactly	O	O:0.999601
one	O	O:0.999849
calendar	O	O:0.994402
year	O	O:0.949779
between	O	O:0.995133
dates	O	O:0.726411
in	O	O:0.998937
spite	O	O:0.997428
of	O	O:0.999754
leap	O	O:0.858895
years	O	O:0.993240
?	O	O:0.991865
	
"	O	O:0.986862
However	O	O:0.996703
,	O	O:0.999572
we	O	O:0.999693
still	O	O:0.999578
have	O	O:0.999257
one	O	O:0.999532
large	O	O:0.983899
difference	O	O:0.972412
.	O	O:0.978852
	
All	O	O:0.997487
that	O	O:0.996131
remains	O	O:0.984985
is	O	O:0.999513
to	O	O:0.996710
merged	O	O:0.999709
the	O	O:0.999697
contents	O	O:0.994624
of	O	O:0.999340
the	O	O:0.998339
second-level	O	O:0.841338
dictionaries	O	O:0.850945
:	O	O:0.994559
#CODE	O	O:0.997736
	
I	O	O:0.993548
am	O	O:0.998888
trying	O	O:0.994208
to	O	O:0.999636
create	O	O:0.999742
a	O	O:0.999660
single	O	O:0.981274
image	O	O:0.999652
with	O	O:0.997119
heatmaps	O	O:0.994397
representing	O	O:0.995455
the	O	O:0.998741
correlation	O	O:0.998099
of	O	O:0.999394
features	O	O:0.991997
of	O	O:0.999895
data	O	O:0.996614
points	O	O:0.996960
for	O	O:0.999577
each	O	O:0.989042
label	O	O:0.992517
separately	O	O:0.975608
.	O	O:0.992092
	
I	O	O:0.997204
have	O	O:0.996094
two	O	O:0.994169
Series	O	O:0.997541
which	O	O:0.999098
have	O	O:0.999558
a	O	O:0.999692
format	O	O:0.995511
equal	O	O:0.989876
to	O	O:0.998894
this	O	O:0.995438
:	O	O:0.997505
#CODE	O	O:0.997357
	
However	O	O:0.993962
,	O	O:0.999877
when	O	O:0.998878
I	O	O:0.999237
do	O	O:0.999814
the	O	O:0.997281
following	O	O:0.969258
,	O	O:0.999581
the	O	O:0.998294
error	O	O:0.970257
does	O	O:0.992051
not	O	O:0.999834
show	O	O:0.997278
up	O	O:0.993257
and	O	O:0.999828
I	O	O:0.999359
get	O	O:0.996415
the	O	O:0.998818
expected	O	O:0.974957
result	O	O:0.978384
:	O	O:0.997068
#CODE	O	O:0.996222
	
As	O	O:0.991483
brackets	O	O:0.988606
are	O	O:0.999670
part	O	O:0.998440
of	O	O:0.999213
the	O	O:0.996572
regex	O	O:0.985873
syntax	O	O:0.997373
if	O	O:0.996913
you're	O	O:0.998768
trying	O	O:0.996739
to	O	O:0.999708
match	O	O:0.999173
literal	O	O:0.998966
brackets	O	O:0.997291
you	O	O:0.999757
need	O	O:0.999178
to	O	O:0.999634
escape	O	O:0.999724
them	O	O:0.928490
:	O	O:0.995084
#CODE	O	O:0.997047
	
Yeah	O	O:0.978179
,	O	O:0.998998
the	O	O:0.999367
best	O	O:0.971850
idea	O	O:0.990577
I've	O	O:0.994325
had	O	O:0.998993
this	O	O:0.997552
whole	O	O:0.995558
time	O	O:0.992092
was	O	O:0.991566
to	O	O:0.999353
actually	O	O:0.999952
sign	O	O:0.997959
up	O	O:0.992303
to	O	O:0.999309
SO	O	O:0.999491
so	O	O:0.998589
I	O	O:0.998741
can	O	O:0.999862
post	O	O:0.992326
my	O	O:0.999507
own	O	O:0.998710
questions	O	O:0.997006
instead	O	O:0.999318
of	O	O:0.999362
trying	O	O:0.995356
to	O	O:0.999660
funble	O	O:0.997059
my	O	O:0.998406
way	O	O:0.998465
through	O	O:0.998030
problems	O	O:0.995216
by	O	O:0.997521
patching	O	O:0.998388
together	O	O:0.966437
answers	O	O:0.986734
to	O	O:0.999270
other	O	O:0.999883
peoples	O	O:0.991752
questions	O	O:0.991963
-	O	O:0.999015
sometimes	O	O:0.999251
what	O	O:0.998868
I	O	O:0.999303
need	O	O:0.999483
just	O	O:0.982883
isn't	O	O:0.999602
covered	O	O:0.942772
in	O	O:0.999070
other	O	O:0.997372
people's	O	O:0.983710
questions	O	O:0.948740
.	O	O:0.985327
	
But	O	O:0.998076
when	O	O:0.995999
I	O	O:0.996792
try	O	O:0.998508
and	O	O:0.989968
import	O	O:0.990412
pandas	O	O:0.992179
I	O	O:0.994092
get	O	O:0.962361
:	O	O:0.984413
#CODE	O	O:0.996678
	
However	O	O:0.995208
,	O	O:0.999395
I	O	O:0.999682
can't	O	O:0.998820
get	O	O:0.996989
the	O	O:0.999901
column	O	O:0.998087
to	O	O:0.999837
fill	O	O:0.997727
up	O	O:0.998451
with	O	O:0.999378
the	O	O:0.999361
appropriate	O	O:0.998559
user	O	O:0.990094
inputted	O	O:0.995027
value	O	O:0.991075
.	O	O:0.980399
	
Also	O	O:0.969477
I'm	O	O:0.997020
not	O	O:0.998051
getting	O	O:0.997320
any	O	O:0.989966
traceback	O	O:0.990890
messages	O	O:0.984289
but	O	O:0.998778
I	O	O:0.999204
think	O	O:0.999017
I	O	O:0.998174
have	O	O:0.998865
an	O	O:0.999340
idea	O	O:0.997369
of	O	O:0.999357
where	O	O:0.998802
my	O	O:0.995919
problem	O	O:0.991337
may	O	O:0.997262
be	O	O:0.997337
.	O	O:0.997600
	
Basically	O	O:0.989155
I'm	O	O:0.998242
trying	O	O:0.998986
to	O	O:0.999577
get	O	O:0.999643
at	O	O:0.999271
this	O	O:0.966000
:	O	O:0.997726
#CODE	O	O:0.995190
	
So	O	O:0.997704
this	O	O:0.962205
is	O	O:0.999030
not	O	O:0.998869
a	O	O:0.999702
fully	O	O:0.965721
working	O	O:0.984985
answer	O	O:0.926037
,	O	O:0.998164
but	O	O:0.998370
maybe	O	O:0.997797
it	O	O:0.999649
can	O	O:0.999559
be	O	O:0.999951
extended	O	O:0.997579
to	O	O:0.999299
ultimatively	O	O:0.997756
get	O	O:0.996897
you	O	O:0.999329
there	O	O:0.998789
.	O	O:0.996278
	
I	O	O:0.998233
have	O	O:0.999291
a	O	O:0.993748
pandas	O	O:0.995618
Series	O	O:0.999621
holding	O	O:0.980933
one	O	O:0.998919
numpy	O	O:0.992148
array	O	O:0.994711
per	O	O:0.988341
entry	O	O:0.928490
(	O	O:0.999175
same	O	O:0.996801
length	O	O:0.990958
for	O	O:0.999296
all	O	O:0.999297
entries	O	O:0.964781
)	O	O:0.997469
and	O	O:0.999500
I	O	O:0.999206
would	O	O:0.999405
like	O	O:0.997225
to	O	O:0.999803
convert	O	O:0.998347
this	O	O:0.997816
to	O	O:0.999792
a	O	O:0.999903
2D	O	O:0.933585
numpy	O	O:0.990747
array	O	O:0.982785
.	O	O:0.986070
	
For	O	O:0.990646
example	O	O:0.981098
,	O	O:0.998995
let's	O	O:0.998619
say	O	O:0.997384
I	O	O:0.999885
want	O	O:0.999458
to	O	O:0.991659
select	O	O:0.974306
50%	O	O:0.940200
(	O	O:0.993638
but	O	O:0.999851
this	O	O:0.997754
could	O	O:0.999680
change	O	O:0.992222
)	O	O:0.998828
.	O	O:0.966351
	
For	O	O:0.999152
this	O	O:0.995335
purpose	O	O:0.995983
I	O	O:0.998838
would	O	O:0.999700
like	O	O:0.998484
to	O	O:0.999951
find	O	O:0.999778
the	O	O:0.999909
soonest	O	O:0.949670
date	O	O:0.789430
(	O	O:0.998220
month	O	O:0.941476
)	O	O:0.998071
and	O	O:0.998873
from	O	O:0.999276
there	O	O:0.990472
start	O	O:0.998503
counting	O	O:0.990894
months	O	O:0.954726
and	O	O:0.999882
their	O	O:0.993350
averages	O	O:0.788301
.	O	O:0.971931
	
You've	O	O:0.985835
changed	O	O:0.999049
your	O	O:0.998614
data	O	O:0.996060
,	O	O:0.999873
so	O	O:0.999385
the	O	O:0.995311
script	O	O:0.997816
as	O	O:0.995900
written	O	O:0.937903
doesn't	O	O:0.995666
work	O	O:0.979378
.	O	O:0.998679
	
Hopefully	O	O:0.980670
you'll	O	O:0.996774
get	O	O:0.998300
an	O	O:0.999440
answer	O	O:0.995163
soon	O	O:0.937984
.	O	O:0.992519
	
This	O	O:0.994916
should	O	O:0.999330
get	O	O:0.999624
you	O	O:0.999715
to	O	O:0.999845
the	O	O:0.999977
point	O	O:0.992934
in	O	O:0.999944
your	O	O:0.999405
code	O	O:0.998224
where	O	O:0.999605
you	O	O:0.998782
start	O	O:0.999260
dropping	O	O:0.996496
columns	O	O:0.990558
and	O	O:0.999562
start	O	O:0.997435
concatenating	O	O:0.836233
.	O	O:0.974343
	
So	O	O:0.992280
,	O	O:0.999666
if	O	O:0.997863
k	O	O:0.992149
were	O	O:0.997825
equal	O	O:0.996880
to	O	O:0.996554
2	O	O:0.998597
,	O	O:0.996873
and	O	O:0.999745
this	O	O:0.995510
were	O	O:0.996037
my	O	O:0.999486
data	O	O:0.993453
frame	O	O:0.997630
:	O	O:0.997807
#CODE	O	O:0.995964
	
It	O	O:0.996029
seems	O	O:0.999141
as	O	O:0.999019
though	O	O:0.995371
the	O	O:0.999555
second	O	O:0.974972
approach	O	O:0.996355
,	O	O:0.999754
using	O	O:0.998403
"	O	O:0.995934
where	O	O:0.952942
"	O	O:0.989386
is	O	O:0.997909
only	O	O:0.998618
returning	O	O:0.999833
data	O	O:0.995368
from	O	O:0.999197
the	O	O:0.999821
last	O	O:0.989244
few	O	O:0.997657
appended	O	O:0.997312
files	O	O:0.996036
,	O	O:0.999091
while	O	O:0.998851
the	O	O:0.999355
first	O	O:0.993232
approach	O	O:0.976219
is	O	O:0.998289
returning	O	O:0.992015
much	O	O:0.992901
more	O	O:0.993732
data	O	O:0.985168
.	O	O:0.994877
	
I	O	O:0.998808
have	O	O:0.998952
to	O	O:0.996318
improve	O	O:0.999624
this	O	O:0.998525
to	O	O:0.999160
get	O	O:0.999950
rid	O	O:0.998040
of	O	O:0.998305
redundancy	O	O:0.983853
,	O	O:0.998842
and	O	O:0.999146
I	O	O:0.995126
am	O	O:0.996753
not	O	O:0.996727
sure	O	O:0.997064
how	O	O:0.999135
to	O	O:0.999440
go	O	O:0.999860
about	O	O:0.998650
this	O	O:0.990205
.	O	O:0.991591
	
Are	O	O:0.995610
you	O	O:0.999642
able	O	O:0.999122
to	O	O:0.999700
post	O	O:0.999594
raw	O	O:0.999034
data	O	O:0.994319
and	O	O:0.999865
code	O	O:0.997454
to	O	O:0.995249
reproduce	O	O:0.999783
this	O	O:0.992611
issue	O	O:0.994769
?	O	O:0.996077
	
The	O	O:0.992958
relative	O	O:0.987518
size	O	O:0.986945
between	O	O:0.996556
consecutive	O	O:0.968026
levels	O	O:0.991639
.	O	O:0.990072
	
This	O	O:0.993825
will	O	O:0.998595
potentially	O	O:0.998701
cater	O	O:0.996355
the	O	O:0.996580
corner	O	O:0.987704
cases	O	O:0.995378
if	O	O:0.999158
you	O	O:0.998642
happen	O	O:0.997880
to	O	O:0.999905
have	O	O:0.999935
conditions	O	O:0.995534
like	O	O:0.995027
:	O	O:0.999605
"	O	O:0.999706
value	O	O:0.993917
"	O	O:0.998145
360	O	O:0.991972
then	O	O:0.995613
+360	O	O:0.997042
else	O	O:0.994457
-360	O	O:0.971971
but	O	O:0.998416
the	O	O:0.999338
sequence	O	O:0.998180
of	O	O:0.998941
the	O	O:0.998768
update	O	O:0.994368
will	O	O:0.997027
cause	O	O:0.999318
the	O	O:0.999655
results	O	O:0.995241
reapply	O	O:0.961882
,	O	O:0.999093
ie	O	O:0.998649
.	O	O:0.992576
	
I'll	O	O:0.991204
put	O	O:0.985839
an	O	O:0.999098
example	O	O:0.993944
of	O	O:0.998815
what	O	O:0.988384
I'm	O	O:0.999737
suggesting	O	O:0.995744
in	O	O:0.999477
my	O	O:0.988364
answer	O	O:0.977718
.	O	O:0.990779
	
But	O	O:0.995849
you	O	O:0.999725
said	O	O:0.999255
you	O	O:0.999926
want	O	O:0.999595
only	O	O:0.999409
the	O	O:0.999961
time	O	O:0.996269
points	O	O:0.994993
from	O	O:0.999316
the	O	O:0.999580
longest	O	O:0.948569
`	O	O:0.998590
csv	O	O:0.764447
`	O	O:0.998941
.	O	O:0.955483
	
replacing	O	O:0.995480
this	O	O:0.986849
in	O	O:0.999325
code	O	O:0.998555
just	O	O:0.999106
drop	O	O:0.985656
those	O	O:0.999740
whole	O	O:0.997900
rows	O	O:0.983034
...	O	O:0.969093
	
Thank	O	O:0.979108
you	O	O:0.995323
for	O	O:0.998605
response	O	O:0.983663
and	O	O:0.998004
for	O	O:0.998957
helping	O	O:0.939885
me	O	O:0.982219
get	O	O:0.990723
to	O	O:0.999878
next	O	O:0.999941
level	O	O:0.998550
of	O	O:0.998712
pyhton	O	O:0.987804
,	O	O:0.999964
great	O	O:0.984783
stuff	O	O:0.974481
!	O	O:0.984227
	
For	O	O:0.993301
instance	O	O:0.993680
,	O	O:0.999579
you	O	O:0.999385
can	O	O:0.999827
insert	O	O:0.999961
new	O	O:0.999600
values	O	O:0.995876
into	O	O:0.882907
the	O	O:0.996721
index	O	O:0.940461
(	O	O:0.997213
and	O	O:0.999954
even	O	O:0.995851
choose	O	O:0.996997
what	O	O:0.996200
value	O	O:0.995701
it	O	O:0.998269
should	O	O:0.999053
have	O	O:0.984610
):	O	O:0.997912
#CODE	O	O:0.995070
	
What	O	O:0.995897
I	O	O:0.999601
need	O	O:0.999045
to	O	O:0.996924
do	O	O:0.999170
is	O	O:0.999676
to	O	O:0.995564
compute	O	O:0.998523
the	O	O:0.998943
average	O	O:0.849287
temperature	O	O:0.997406
for	O	O:0.999221
every	O	O:0.981066
run	O	O:0.950057
,	O	O:0.999258
averaging	O	O:0.993940
all	O	O:0.997994
the	O	O:0.999561
temperature	O	O:0.995790
measurements	O	O:0.984135
belonging	O	O:0.996502
to	O	O:0.999865
a	O	O:0.999689
run	O	O:0.710096
.	O	O:0.993436
	
@USER	O	O:0.988515
I	O	O:0.998293
get	O	O:0.996462
`	O	O:0.988484
Type	O	O:0.958825
Error	O	O:0.986773
:	O	O:0.886909
'	O	O:0.997726
bool	O	O:0.579936
'	O	O:0.992934
object	O	O:0.930032
is	O	O:0.998399
not	O	O:0.993491
callable	O	O:0.993756
`	O	O:0.999612
when	O	O:0.983660
I	O	O:0.999775
do	O	O:0.999489
that	O	O:0.956219
	
For	O	O:0.999299
your	O	O:0.997322
specific	O	O:0.997976
request	O	O:0.999493
of	O	O:0.999284
entries	O	O:0.963778
between	O	O:0.992225
12:00	O	O:0.990844
to	O	O:0.996161
13:00	O	O:0.999056
for	O	O:0.999537
every	O	O:0.997936
single	O	O:0.983235
day	O	O:0.996468
,	O	O:0.999304
you	O	O:0.999732
can	O	O:0.999874
fetch	O	O:0.999691
the	O	O:0.999972
rows	O	O:0.972043
with	O	O:0.977784
:	O	O:0.998130
#CODE	O	O:0.998321
	
Also	O	O:0.993723
,	O	O:0.999871
their	O	O:0.997277
order	O	O:0.968436
matters	O	O:0.916568
(	O	O:0.997772
they	O	O:0.990968
are	O	O:0.999652
sorted	O	O:0.997169
by	O	O:0.995617
decreasing	O	O:0.995197
standard	O	O:0.964833
deviation	O	O:0.998347
across	O	O:0.997801
rows	O	O:0.944339
and	O	O:0.999527
should	O	O:0.999588
appear	O	O:0.978053
in	O	O:0.999914
this	O	O:0.999421
order	O	O:0.992955
in	O	O:0.999213
the	O	O:0.986987
heatmap	O	O:0.992684
.	O	O:0.994095
)	O	O:0.998798
	
I'm	O	O:0.992454
not	O	O:0.998187
averse	O	O:0.997322
the	O	O:0.998064
reformatting	O	O:0.992686
the	O	O:0.999452
data	O	O:0.983441
in	O	O:0.999278
Pandas	O	O:0.994063
-->	O	O:0.999034
dumping	O	O:0.975331
to	O	O:0.996114
CSV	O	O:0.997902
-->	O	O:0.998544
importing	O	O:0.989361
to	O	O:0.993057
NetworkX	O	O:0.996653
,	O	O:0.995791
but	O	O:0.997572
it	O	O:0.999002
seems	O	O:0.999491
as	O	O:0.999694
if	O	O:0.994749
I	O	O:0.998533
should	O	O:0.999418
be	O	O:0.999412
able	O	O:0.999628
to	O	O:0.999538
generate	O	O:0.999740
the	O	O:0.999653
edges	O	O:0.993844
from	O	O:0.993961
the	O	O:0.999335
index	O	O:0.998238
and	O	O:0.999895
the	O	O:0.999901
nodes	O	O:0.976410
from	O	O:0.998647
the	O	O:0.998915
values	O	O:0.969360
.	O	O:0.986380
	
What	O	O:0.970539
is	O	O:0.998635
the	O	O:0.998264
simplest	O	O:0.986474
way	O	O:0.996173
to	O	O:0.998869
get	O	O:0.999982
a	O	O:0.999778
sum	O	O:0.979947
of	O	O:0.999956
only	O	O:0.996328
numbers	O	O:0.996259
across	O	O:0.996146
the	O	O:0.998576
entire	O	O:0.991298
frame	O	O:0.999242
?	O	O:0.995919
	
I	O	O:0.998079
think	O	O:0.996891
you	O	O:0.997818
mean	O	O:0.998982
a	O	O:0.999219
Lorenz	O	O:0.930523
plot	O	O:0.912763
:	O	O:0.991656
#URL	O	O:0.994235
This	O	O:0.998728
would	O	O:0.999586
make	O	O:0.998848
sense	O	O:0.999675
then	O	O:0.995305
as	O	O:0.999457
it	O	O:0.997806
requires	O	O:0.998409
a	O	O:0.999060
specific	O	O:0.996540
preordering	O	O:0.974015
of	O	O:0.999419
the	O	O:0.999139
data	O	O:0.992525
.	O	O:0.994636
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
Despite	O	O:0.983211
the	O	O:0.992669
title	O	O:0.992481
,	O	O:0.999517
similar	O	O:0.998529
problems	O	O:0.997336
can	O	O:0.998669
occur	O	O:0.999335
with	O	O:0.999676
other	O	O:0.996524
operating	O	O:0.996262
systems	O	O:0.997290
if	O	O:0.996700
you	O	O:0.998621
mix	O	O:0.989451
32-bit	O	O:0.984377
and	O	O:0.996987
64-fit	O	O:0.938068
versions	O	O:0.964221
.	O	O:0.979580
	
Use	O	O:0.954827
`	O	O:0.998025
select_as_coordinates	O	B-API:0.725472
`	O	O:0.999511
to	O	O:0.997474
actually	O	O:0.999838
execute	O	O:0.997990
your	O	O:0.997689
query	O	O:0.891414
;	O	O:0.999706
this	O	O:0.993742
returns	O	O:0.998317
an	O	O:0.992706
`	O	O:0.997676
Int64Index	O	O:0.955847
`	O	O:0.999693
of	O	O:0.996302
the	O	O:0.999447
row	O	O:0.995125
number	O	O:0.934385
(	O	O:0.999177
the	O	O:0.999825
coordinates	O	O:0.962181
)	O	O:0.997455
.	O	O:0.992303
	
Somehow	O	O:0.991744
create	O	O:0.997303
a	O	O:0.998963
mapping	O	O:0.983804
so	O	O:0.999799
that	O	O:0.999295
instead	O	O:0.999888
of	O	O:0.999876
the	O	O:0.998429
labels	O	O:0.996789
being	O	O:0.981476
29	O	O:0.990841
,	O	O:0.998680
30	O	O:0.986011
etc	O	O:0.995986
,	O	O:0.999899
they	O	O:0.999194
say	O	O:0.998336
"	O	O:0.999700
week	O	O:0.989130
29	O	O:0.978815
"	O	O:0.998223
,	O	O:0.994574
"	O	O:0.997443
Week	O	O:0.940600
30	O	O:0.975378
"	O	O:0.993852
etc	O	O:0.975246
.	O	O:0.994807
	
The	O	O:0.994412
fix	O	O:0.971003
you	O	O:0.999194
describe	O	O:0.993768
would	O	O:0.999669
work	O	O:0.999627
,	O	O:0.999979
of	O	O:0.999373
course	O	O:0.986125
,	O	O:0.999834
but	O	O:0.999524
then	O	O:0.997339
I	O	O:0.999958
could	O	O:0.999890
skip	O	O:0.920086
pandas	O	O:0.999747
all-together	O	O:0.989384
and	O	O:0.999230
directly	O	O:0.997132
plot	O	O:0.989014
the	O	O:0.998697
results	O	O:0.998014
of	O	O:0.998642
my	O	O:0.999448
individual	O	O:0.994516
simulations	O	O:0.925067
.	O	O:0.980110
	
These	O	O:0.996644
two	O	O:0.998112
timezones	O	O:0.901571
have	O	O:0.997802
different	O	O:0.998377
names	O	O:0.993441
but	O	O:0.997664
represent	O	O:0.989069
the	O	O:0.999606
same	O	O:0.991852
thing	O	O:0.998520
,	O	O:0.999396
however	O	O:0.993808
	
which	O	O:0.988566
would	O	O:0.999785
just	O	O:0.999741
change	O	O:0.997968
the	O	O:0.999668
last	O	O:0.990935
data	O	O:0.995734
point	O	O:0.994892
.	O	O:0.996008
	
What	O	O:0.996652
do	O	O:0.993514
you	O	O:0.999882
mean	O	O:0.998465
by	O	O:0.999230
reproducible	O	O:0.977269
example	O	O:0.965483
?	O	O:0.991202
	
But	O	O:0.981218
thought	O	O:0.960874
i'd	O	O:0.997582
make	O	O:0.990270
it	O	O:0.999359
clear	O	O:0.996779
what	O	O:0.997696
my	O	O:0.998776
next	O	O:0.990420
objective	O	O:0.986684
was	O	O:0.994834
,	O	O:0.998225
in	O	O:0.999387
case	O	O:0.996855
someone	O	O:0.994097
could	O	O:0.998283
illuminate	O	O:0.999235
a	O	O:0.993387
better	O	O:0.868265
method	O	O:0.999378
to	O	O:0.998731
get	O	O:0.999835
there	O	O:0.995974
.	O	O:0.996137
	
What	O	O:0.990675
output	O	O:0.996132
do	O	O:0.998798
you	O	O:0.999364
get	O	O:0.999584
when	O	O:0.999043
you	O	O:0.999810
just	O	O:0.999592
enter	O	O:0.973119
`	O	O:0.998433
pd	O	O:0.707371
`	O	O:0.999141
in	O	O:0.995555
the	O	O:0.995801
console	O	O:0.979430
?	O	O:0.990447
	
When	O	O:0.995939
I	O	O:0.999517
train	O	O:0.982328
on	O	O:0.998501
each	O	O:0.989133
label	O	O:0.998622
I	O	O:0.999567
get	O	O:0.999196
et	O	O:0.969862
better	O	O:0.994443
than	O	O:0.997064
73%	O	O:0.967989
on	O	O:0.999491
each	O	O:0.973572
label	O	O:0.992546
.	O	O:0.990408
	
but	O	O:0.997142
what	O	O:0.990004
value	O	O:0.998365
does	O	O:0.998077
it	O	O:0.999909
grab	O	O:0.986342
when	O	O:0.993390
indexing	O	O:0.996867
?	O	O:0.998911
in	O	O:0.999437
other	O	O:0.998782
words	O	O:0.993891
,	O	O:0.998583
if	O	O:0.997208
i'm	O	O:0.995316
just	O	O:0.997202
testing	O	O:0.999026
one	O	O:0.998115
side	O	O:0.994607
i'll	O	O:0.993615
get	O	O:0.998613
the	O	O:0.999657
value	O	O:0.999304
corresponding	O	O:0.983320
to	O	O:0.999669
that	O	O:0.999837
row	O	O:0.999117
if	O	O:0.999302
true	O	O:0.966721
.	O	O:0.996862
since	O	O:0.999555
both	O	O:0.997923
sides	O	O:0.997366
could	O	O:0.997267
be	O	O:0.999645
true	O	O:0.982880
and	O	O:0.999542
one	O	O:0.999563
of	O	O:0.999603
them	O	O:0.733800
is	O	O:0.999148
always	O	O:0.995867
true	O	O:0.989251
,	O	O:0.998591
which	O	O:0.999041
row's	O	O:0.997796
values	O	O:0.996520
will	O	O:0.998951
be	O	O:0.999808
selected	O	O:0.992701
?	O	O:0.980005
	
However	O	O:0.987977
,	O	O:0.999754
this	O	O:0.991649
is	O	O:0.999736
a	O	O:0.998058
bug	O	O:0.996483
as	O	O:0.997907
you	O	O:0.994824
should	O	O:0.999376
get	O	O:0.999755
an	O	O:0.999281
error	O	O:0.989726
.	O	O:0.986088
	
guys	O	O:0.970168
at	O	O:0.999187
least	O	O:0.998982
tell	O	O:0.992669
me	O	O:0.972156
why	O	O:0.996065
i	O	O:0.983669
am	O	O:0.999100
getting	O	O:0.990643
downvoted	O	O:0.982730
?	O	O:0.992186
	
In	O	O:0.999144
some	O	O:0.991662
cases	O	O:0.998753
the	O	O:0.999213
data	O	O:0.971070
might	O	O:0.999600
be	O	O:0.999858
out	O	O:0.999658
of	O	O:0.999032
sync	O	O:0.737231
which	O	O:0.997651
makes	O	O:0.997143
direct	O	O:0.991972
comparisons	O	O:0.978648
difficult	O	O:0.963828
.	O	O:0.991584
	
I	O	O:0.995825
would	O	O:0.999784
like	O	O:0.998763
to	O	O:0.999952
generate	O	O:0.999714
a	O	O:0.999118
matrix	O	O:0.984989
which	O	O:0.997887
contains	O	O:0.997804
the	O	O:0.999457
output	O	O:0.990320
of	O	O:0.998662
the	O	O:0.990544
function	O	O:0.998264
for	O	O:0.998551
every	O	O:0.986037
combination	O	O:0.996878
of	O	O:0.988809
X	O	O:0.962159
and	O	O:0.998643
Y	O	O:0.956866
.	O	O:0.957219
	
I'm	O	O:0.995532
trying	O	O:0.998434
to	O	O:0.999389
get	O	O:0.999943
the	O	O:0.999957
data	O	O:0.999195
to	O	O:0.999612
in	O	O:0.999988
the	O	O:0.999780
column	O	O:0.994685
"	O	O:0.997985
Structure	O	O:0.995248
"	O	O:0.999487
to	O	O:0.998430
repeat	O	O:0.998814
the	O	O:0.998061
row	O	O:0.988998
labels	O	O:0.989867
so	O	O:0.998408
it	O	O:0.999528
look	O	O:0.996354
like	O	O:0.998258
this	O	O:0.981888
:	O	O:0.996747
#CODE	O	O:0.995132
	
decision	O	O:0.947722
for	O	O:0.999638
single	O	O:0.997733
rows	O	O:0.992596
to	O	O:0.999112
get	O	O:0.999968
converted	O	O:0.999222
into	O	O:0.997795
a	O	O:0.994131
series	O	O:0.984065
-	O	O:0.997694
why	O	O:0.998007
not	O	O:0.999491
a	O	O:0.998652
	
I	O	O:0.992241
get	O	O:0.994341
#CODE	O	O:0.979203
	
More	O	O:0.994413
info	O	O:0.995343
as	O	O:0.997328
requested	O	O:0.955158
#CODE	O	O:0.989377
	
[	O	O:0.989380
Their	O	O:0.994081
product	O	O:0.992292
page	O	O:0.976946
]	O	O:0.978901
(	O	O:0.995041
#URL	O	O:0.985054
)	O	O:0.998007
holds	O	O:0.980938
the	O	O:0.994994
answer	O	O:0.918822
.	O	O:0.983760
	
Next	O	O:0.995495
,	O	O:0.999811
you	O	O:0.999867
wish	O	O:0.999612
to	O	O:0.999812
get	O	O:0.999968
the	O	O:0.999929
specific	O	O:0.998876
groups	O	O:0.990882
from	O	O:0.999305
this	O	O:0.998529
`	O	O:0.999545
grouped	O	O:0.636735
`	O	O:0.996825
object	O	O:0.898489
.	O	O:0.993718
	
To	O	O:0.992011
get	O	O:0.994597
datetime64	O	O:0.839216
that	O	O:0.997830
uses	O	O:0.996129
seconds	O	O:0.984614
directly	O	O:0.854450
:	O	O:0.992465
#CODE	O	O:0.992458
	
The	O	O:0.997948
only	O	O:0.992798
option	O	O:0.999119
you	O	O:0.998178
may	O	O:0.999733
have	O	O:0.998078
is	O	O:0.999888
to	O	O:0.998124
setup	O	O:0.999850
your	O	O:0.999127
data	O	O:0.997622
structures	O	O:0.999560
to	O	O:0.999436
be	O	O:0.999907
light	O	O:0.997571
weight	O	O:0.994901
so	O	O:0.998970
each	O	O:0.971093
worker	O	O:0.965894
isn't	O	O:0.999211
boated	O	O:0.986285
by	O	O:0.999559
redundant	O	O:0.993984
copies	O	O:0.980334
of	O	O:0.998714
the	O	O:0.999339
same	O	O:0.999787
data	O	O:0.995710
or	O	O:0.999888
excessive	O	O:0.997904
amounts	O	O:0.998841
of	O	O:0.999225
data	O	O:0.990907
which	O	O:0.998927
might	O	O:0.999391
be	O	O:0.999452
better	O	O:0.997933
off	O	O:0.995954
split	O	O:0.832012
across	O	O:0.996642
different	O	O:0.983973
workers	O	O:0.947722
.	O	O:0.985174
	
Inplace	O	O:0.969942
dropping	O	O:0.925520
seems	O	O:0.997441
more	O	O:0.997524
like	O	O:0.994653
idiomatic	O	O:0.998581
pandas	O	O:0.999182
to	O	O:0.999006
me	O	O:0.999065
than	O	O:0.996980
making	O	O:0.997398
a	O	O:0.999242
copy	O	O:0.507789
only	O	O:0.999497
to	O	O:0.997871
instantly	O	O:0.999856
garbage	O	O:0.992625
collect	O	O:0.891370
the	O	O:0.999153
now-defunct	O	O:0.954503
original	O	O:0.979466
.	O	O:0.994080
	
And	O	O:0.992888
fortunately	O	O:0.982615
,	O	O:0.999757
these	O	O:0.998317
days	O	O:0.979951
,	O	O:0.998939
`	O	O:0.998908
-pylab	O	O:0.576767
`	O	O:0.996652
has	O	O:0.986234
been	O	O:0.989995
deprecated	O	O:0.985473
and	O	O:0.999408
using	O	O:0.994936
`	O	O:0.919693
--	O	O:0.968206
matplotlib	O	O:0.951159
`	O	O:0.993710
and	O	O:0.996784
importing	O	O:0.995314
`	O	O:0.991214
pylab	O	O:0.899990
`	O	O:0.998530
manually	O	O:0.732913
is	O	O:0.998489
encouraged	O	O:0.698495
.	O	O:0.981370
	
Are	O	O:0.995529
you	O	O:0.999613
sure	O	O:0.997638
you	O	O:0.998615
don't	O	O:0.999701
mean	O	O:0.998083
`	O	O:0.999294
range	O	O:0.954770
(	O	O:0.998638
1	O	O:0.987264
,	O	O:0.993836
len	O	B-API:0.999564
(	O	O:0.993915
DF	O	O:0.997753
)):	O	B-API:0.508603
`	O	O:0.996757
?	O	O:0.973511
	
Where	O	O:0.987138
"	O	O:0.999338
timeblock	O	O:0.948381
"	O	O:0.997987
#1	O	O:0.988355
will	O	O:0.995269
include	O	O:0.995128
the	O	O:0.999390
first	O	O:0.996390
4:59	O	O:0.992727
minutes	O	O:0.995884
of	O	O:0.998847
observation	O	O:0.982367
period	O	O:0.994348
#1	O	O:0.992192
,	O	O:0.998592
#2	O	O:0.993183
will	O	O:0.997117
include	O	O:0.995830
5:00	O	O:0.992613
to	O	O:0.999099
9:59	O	O:0.994122
minutes	O	O:0.997053
...	O	O:0.994051
through	O	O:0.985618
to	O	O:0.997620
25:00	O	O:0.994275
and	O	O:0.999596
over	O	O:0.988287
,	O	O:0.996660
for	O	O:0.999291
each	O	O:0.944492
observation	O	O:0.967871
period	O	O:0.987461
.	O	O:0.988581
	
It	O	O:0.993629
seems	O	O:0.998398
like	O	O:0.997985
I'm	O	O:0.999519
maybe	O	O:0.998603
getting	O	O:0.998096
confused	O	O:0.959937
between	O	O:0.982027
the	O	O:0.998154
underlying	O	O:0.993927
data	O	O:0.989223
and	O	O:0.999611
views	O	O:0.991605
on	O	O:0.989922
it	O	O:0.995154
.	O	O:0.996002
	
When	O	O:0.994520
I	O	O:0.997537
try	O	O:0.999279
specifying	O	O:0.953306
index_col=0	O	O:0.941857
,	O	O:0.999215
as	O	O:0.999891
some	O	O:0.993608
examples	O	O:0.989216
in	O	O:0.998677
the	O	O:0.997606
documentation	O	O:0.993972
do	O	O:0.995284
,	O	O:0.999859
I	O	O:0.999290
get	O	O:0.999728
a	O	O:0.989918
"	O	O:0.963859
IndexError	O	O:0.844080
:	O	O:0.990839
list	O	O:0.990617
index	O	O:0.999865
out	O	O:0.998741
of	O	O:0.999648
range	O	O:0.991364
"	O	O:0.998813
error	O	O:0.982508
,	O	O:0.997341
which	O	O:0.987282
was	O	O:0.998882
a	O	O:0.999261
solution	O	O:0.963669
to	O	O:0.998806
several	O	O:0.999701
related	O	O:0.972177
questions	O	O:0.992400
but	O	O:0.995435
for	O	O:0.999751
some	O	O:0.945425
reason	O	O:0.983952
isn't	O	O:0.994962
working	O	O:0.985964
for	O	O:0.998488
me	O	O:0.899807
.	O	O:0.979222
	
That's	O	O:0.997711
what	O	O:0.996288
I	O	O:0.999292
thought	O	O:0.996901
about	O	O:0.987008
my	O	O:0.994190
original	O	O:0.976154
code	O	O:0.987031
but	O	O:0.997448
for	O	O:0.999798
some	O	O:0.976141
reason	O	O:0.998487
when	O	O:0.994837
I	O	O:0.999764
check	O	O:0.998352
len	O	B-API:0.999719
(	O	O:0.996241
Sframe	O	O:0.939811
)	O	O:0.999042
at	O	O:0.998452
the	O	O:0.999767
end	O	O:0.979986
in	O	O:0.997947
the	O	O:0.998777
main	O	O:0.987180
code	O	O:0.988235
,	O	O:0.999646
it	O	O:0.999373
still	O	O:0.994016
has	O	O:0.999233
the	O	O:0.999447
duplicate	O	O:0.998111
values	O	O:0.997339
even	O	O:0.998207
if	O	O:0.999757
the	O	O:0.995704
conditional	O	O:0.632571
statement	O	O:0.996403
applies	O	O:0.981420
option	O	O:0.997296
2	O	O:0.972578
to	O	O:0.998329
remove	O	O:0.995451
duplicates	O	O:0.987424
.	O	O:0.989046
	
The	O	O:0.997077
main	O	O:0.982392
thing	O	O:0.999280
I	O	O:0.999462
need	O	O:0.998862
to	O	O:0.997129
do	O	O:0.999226
is	O	O:0.999463
to	O	O:0.997874
group	O	O:0.999439
the	O	O:0.999749
days	O	O:0.996369
by	O	O:0.999656
week	O	O:0.998765
such	O	O:0.998896
that	O	O:0.999391
I	O	O:0.999224
can	O	O:0.999835
get	O	O:0.999643
sum	O	O:0.997592
of	O	O:0.999881
the	O	O:0.999748
data	O	O:0.998515
to	O	O:0.999773
be	O	O:0.999989
by	O	O:0.998918
week	O	O:0.947053
.	O	O:0.981461
	
To	O	O:0.997893
move	O	O:0.971761
the	O	O:0.999855
third	O	O:0.990426
row	O	O:0.996710
to	O	O:0.998919
the	O	O:0.999979
first	O	O:0.996354
,	O	O:0.999642
you	O	O:0.999452
can	O	O:0.999852
create	O	O:0.999298
an	O	O:0.999869
index	O	O:0.999635
moving	O	O:0.994803
the	O	O:0.999603
target	O	O:0.993228
row	O	O:0.996547
to	O	O:0.998514
the	O	O:0.999967
first	O	O:0.982476
element	O	O:0.986029
.	O	O:0.990516
	
So	O	O:0.996776
using	O	O:0.999915
your	O	O:0.985929
approach	O	O:0.971362
,	O	O:0.999278
how	O	O:0.997500
can	O	O:0.994756
I	O	O:0.999844
:	O	O:0.999877
1	O	O:0.991091
)	O	O:0.999783
plot	O	O:0.972623
the	O	O:0.999400
scores	O	O:0.961210
as	O	O:0.999602
a	O	O:0.997503
histogram	O	O:0.988046
in	O	O:0.999694
a	O	O:0.998854
memory-conscious	O	O:0.868447
way	O	O:0.994037
,	O	O:0.998883
and	O	O:0.999349
2	O	O:0.998424
)	O	O:0.997915
extract	O	O:0.949411
the	O	O:0.999279
scores	O	O:0.973577
belonging	O	O:0.991231
to	O	O:0.999554
the	O	O:0.999986
certain	O	O:0.995130
cell	O	O:0.997118
types	O	O:0.992749
to	O	O:0.999572
plot	O	O:0.999327
those	O	O:0.999368
as	O	O:0.999392
well	O	O:0.986846
?	O	O:0.997925
	
I	O	O:0.998468
have	O	O:0.999438
a	O	O:0.996615
CSV	O	O:0.988272
file	O	O:0.995443
,	O	O:0.999455
I	O	O:0.999110
wanted	O	O:0.997559
to	O	O:0.986605
filter	O	O:0.990169
it	O	O:0.999672
where	O	O:0.999533
I	O	O:0.999901
keep	O	O:0.999335
just	O	O:0.999197
rows	O	O:0.998728
where	O	O:0.998201
I	O	O:0.999960
have	O	O:0.999759
values	O	O:0.982482
in	O	O:0.999162
row	O	O:0.995010
"	O	O:0.999189
d	O	O:0.947691
"	O	O:0.998613
bigger	O	O:0.983714
then	O	O:0.974427
0	O	O:0.991251
.	O	O:0.993423
	
Simulations	O	O:0.924662
can	O	O:0.998763
be	O	O:0.999958
repeated	O	O:0.991509
for	O	O:0.998066
different	O	O:0.989065
scenarios	O	O:0.947205
and	O	O:0.999549
each	O	O:0.996914
one	O	O:0.996168
of	O	O:0.999558
these	O	O:0.995014
scenarios	O	O:0.998890
will	O	O:0.996713
produce	O	O:0.999747
a	O	O:0.999794
different	O	O:0.994151
hourly	O	O:0.990064
set	O	O:0.992657
of	O	O:0.999685
data	O	O:0.984357
for	O	O:0.999868
each	O	O:0.966137
room	O	O:0.956876
and	O	O:0.999745
each	O	O:0.982279
variable	O	O:0.959993
.	O	O:0.989545
	
To	O	O:0.996040
get	O	O:0.987549
around	O	O:0.998153
this	O	O:0.990263
,	O	O:0.999113
I'm	O	O:0.999305
passing	O	O:0.978072
in	O	O:0.999399
a	O	O:0.999286
large	O	O:0.973656
number	O	O:0.983897
for	O	O:0.996372
the	O	O:0.998004
max_results	O	B-API:0.654503
parameter	O	O:0.985769
and	O	O:0.999363
specifying	O	O:0.998434
a	O	O:0.973018
chunksize	O	B-API:0.810051
.	O	O:0.981167
	
You	O	O:0.998443
get	O	O:0.999143
back	O	O:0.996710
a	O	O:0.999311
float	O	O:0.659282
because	O	O:0.999206
each	O	O:0.962228
row	O	O:0.998788
contains	O	O:0.998069
a	O	O:0.999239
mix	O	O:0.962557
of	O	O:0.995633
`	O	O:0.990529
float	O	B-API:0.590304
`	O	O:0.998043
and	O	O:0.950615
`	O	O:0.998934
int	O	B-API:0.740016
`	O	O:0.997973
types	O	O:0.595956
.	O	O:0.993772
	
Should	O	O:0.997072
I	O	O:0.998135
use	O	O:0.999063
something	O	O:0.968433
different	O	O:0.971094
.	O	O:0.985159
	
The	O	O:0.997433
best	O	O:0.964827
would	O	O:0.999378
be	O	O:0.999724
to	O	O:0.999839
convert	O	O:0.992820
that	O	O:0.997310
one	O	O:0.999822
file	O	O:0.998232
to	O	O:0.999841
a	O	O:0.999972
an	O	O:0.994604
actual	O	O:0.992709
comma	O	O:0.978159
(	O	O:0.999031
semicolon	O	O:0.997730
or	O	O:0.999656
other	O	O:0.998751
)	O	O:0.999446
separated	O	O:0.994930
file	O	O:0.996433
or	O	O:0.999605
make	O	O:0.997087
sure	O	O:0.997369
that	O	O:0.999546
compound	O	O:0.982308
values	O	O:0.988761
are	O	O:0.986742
quoted	O	O:0.962589
(	O	O:0.994811
"	O	O:0.995868
Alabama	O	O:0.971974
County	O	O:0.979609
")	O	O:0.995011
and	O	O:0.999724
then	O	O:0.998735
specify	O	O:0.993938
the	O	O:0.995332
quotechar	O	O:0.623156
:	O	O:0.994006
#CODE	O	O:0.994809
	
I	O	O:0.995833
would	O	O:0.999857
like	O	O:0.999309
to	O	O:0.999870
calculate	O	O:0.999395
the	O	O:0.999811
average	O	O:0.958227
of	O	O:0.999499
time	O	O:0.992333
per	O	O:0.997176
org	O	O:0.966133
per	O	O:0.976543
cluster	O	O:0.730695
.	O	O:0.988559
	
I	O	O:0.995394
found	O	O:0.998563
a	O	O:0.992256
way	O	O:0.919967
which	O	O:0.995168
seems	O	O:0.999001
very	O	O:0.974275
inefficient	O	O:0.847245
(	O	O:0.995895
stacking	O	O:0.944099
and	O	O:0.999214
unstacking	O	O:0.957772
which	O	O:0.995375
will	O	O:0.997488
create	O	O:0.994154
many	O	O:0.999528
many	O	O:0.999008
columns	O	O:0.994003
in	O	O:0.999793
case	O	O:0.999097
of	O	O:0.999686
millions	O	O:0.996302
of	O	O:0.999371
categories	O	O:0.966262
)	O	O:0.998561
.	O	O:0.986187
	
I	O	O:0.987850
was	O	O:0.997894
going	O	O:0.946531
to	O	O:0.996169
suggest	O	O:0.997516
cumcount	O	B-API:0.776782
and	O	O:0.999134
tail	O	O:0.682729
(	O	O:0.993188
1	O	O:0.972778
)	O	O:0.995159
,	O	O:0.994991
but	O	O:0.997545
you're	O	O:0.989294
after	O	O:0.999599
something	O	O:0.998076
else	O	O:0.845749
(	O	O:0.999406
these	O	O:0.996998
would	O	O:0.998160
be	O	O:0.999686
much	O	O:0.996344
faster	O	O:0.953401
)	O	O:0.996607
.	O	O:0.967344
	
This	O	O:0.978110
is	O	O:0.999032
because	O	O:0.996704
working	O	O:0.995318
with	O	O:0.999125
dictionaries	O	O:0.910050
is	O	O:0.999254
so	O	O:0.998308
easy	O	O:0.966021
and	O	O:0.999811
thinking	O	O:0.995712
of	O	O:0.999560
them	O	O:0.985465
like	O	O:0.999236
simple	O	O:0.996792
dicts	O	O:0.990527
often	O	O:0.988204
means	O	O:0.999096
you	O	O:0.997054
can	O	O:0.999829
find	O	O:0.999963
a	O	O:0.999795
solution	O	O:0.992519
to	O	O:0.999744
an	O	O:0.999939
issue	O	O:0.997841
without	O	O:0.994479
having	O	O:0.986238
to	O	O:0.995373
get	O	O:0.999481
too	O	O:0.998797
deep	O	O:0.992644
into	O	O:0.964010
pandas	O	O:0.986999
.	O	O:0.989660
	
If	O	O:0.984658
you're	O	O:0.997148
trying	O	O:0.997999
to	O	O:0.999676
slice	O	O:0.999030
each	O	O:0.996485
string	O	O:0.997564
to	O	O:0.999602
get	O	O:0.999928
the	O	O:0.999543
substring	O	O:0.999388
from	O	O:0.997256
5	O	O:0.996920
to	O	O:0.998823
7	O	O:0.999281
,	O	O:0.999611
you	O	O:0.999640
need	O	O:0.999814
a	O	O:0.998098
`	O	O:0.983499
:	O	O:0.964811
`	O	O:0.999232
,	O	O:0.998638
not	O	O:0.999827
a	O	O:0.998273
`	O	O:0.992890
,	O	O:0.963450
`	O	O:0.995161
:	O	O:0.978782
#CODE	O	O:0.998411
	
However	O	O:0.993068
,	O	O:0.999572
since	O	O:0.999816
each	O	O:0.989954
of	O	O:0.999968
your	O	O:0.998926
new	O	O:0.992393
`	O	O:0.998977
DataFrames	O	O:0.595751
`	O	O:0.997179
is	O	O:0.999124
a	O	O:0.999461
summary	O	O:0.950245
of	O	O:0.999543
a	O	O:0.999172
single	O	O:0.973398
customer	O	O:0.997419
,	O	O:0.998581
I	O	O:0.998736
would	O	O:0.999060
suggest	O	O:0.995769
writing	O	O:0.997920
one	O	O:0.982190
function	O	O:0.999324
that	O	O:0.995333
can	O	O:0.999752
return	O	O:0.999573
all	O	O:0.999033
of	O	O:0.999856
your	O	O:0.999160
desired	O	O:0.995318
results	O	O:0.998329
in	O	O:0.999760
a	O	O:0.999654
single	O	O:0.772914
`	O	O:0.996665
Series	O	O:0.747454
`	O	O:0.998324
.	O	O:0.971631
	
I	O	O:0.998747
want	O	O:0.999071
to	O	O:0.998769
get	O	O:0.999944
statistics	O	O:0.992690
of	O	O:0.999375
debt_ratio	O	O:0.994744
based	O	O:0.997297
on	O	O:0.999834
subgroups	O	O:0.988604
of	O	O:0.997894
market_capitalization	O	O:0.897891
.	O	O:0.994455
	
Any	O	O:0.982355
ideas	O	O:0.981200
why	O	O:0.999405
this	O	O:0.995802
error	O	O:0.994702
might	O	O:0.998940
be	O	O:0.999455
showing	O	O:0.998092
up	O	O:0.992372
so	O	O:0.998523
I	O	O:0.998296
can	O	O:0.999725
know	O	O:0.999276
what	O	O:0.999477
to	O	O:0.999265
go	O	O:0.999648
after	O	O:0.998835
to	O	O:0.996488
fix	O	O:0.995537
?	O	O:0.995063
	
I	O	O:0.992413
believe	O	O:0.995843
it	O	O:0.964069
is	O	O:0.998435
getting	O	O:0.957220
at	O	O:0.999120
what	O	O:0.988486
I	O	O:0.999238
want	O	O:0.994622
.	O	O:0.950778
	
I	O	O:0.986453
haven't	O	O:0.995936
done	O	O:0.977891
any	O	O:0.995178
stress	O	O:0.806229
testing	O	O:0.986443
but	O	O:0.995021
I'd	O	O:0.997145
imagine	O	O:0.999442
this	O	O:0.998347
could	O	O:0.997916
get	O	O:0.999769
slow	O	O:0.994190
on	O	O:0.999499
very	O	O:0.989970
large	O	O:0.994894
DataFrames	O	O:0.919491
.	O	O:0.980112
	
Is	O	O:0.995939
there	O	O:0.999342
a	O	O:0.999251
quick	O	O:0.962011
way	O	O:0.994890
to	O	O:0.998815
sort	O	O:0.998978
my	O	O:0.999801
data	O	O:0.999238
by	O	O:0.999951
a	O	O:0.999501
given	O	O:0.930502
column	O	O:0.999518
that	O	O:0.997941
only	O	O:0.998359
takes	O	O:0.998623
chunks	O	O:0.997831
into	O	O:0.982415
account	O	O:0.896147
and	O	O:0.998344
doesn't	O	O:0.993227
require	O	O:0.988753
loading	O	O:0.998734
entire	O	O:0.981892
datasets	O	O:0.992335
in	O	O:0.989418
memory	O	O:0.988348
?	O	O:0.995323
	
Take	O	O:0.997694
a	O	O:0.998964
look	O	O:0.946312
at	O	O:0.999367
the	O	O:0.996325
regex	O	O:0.972015
docs	O	O:0.969846
.	O	O:0.993045
	
Any	O	O:0.954641
logic	O	O:0.984080
requirements	O	O:0.963397
(	O	O:0.998793
like	O	O:0.997390
comparing	O	O:0.999414
elem+1	O	O:0.879270
to	O	O:0.999475
elem	O	O:0.995488
)	O	O:0.999507
should	O	O:0.998987
be	O	O:0.999238
in	O	O:0.999971
your	O	O:0.986102
question	O	O:0.995175
so	O	O:0.998975
there	O	O:0.977739
is	O	O:0.999093
no	O	O:0.990130
confusion	O	O:0.985060
.	O	O:0.986644
	
I'd	O	O:0.998881
like	O	O:0.998837
to	O	O:0.999754
get	O	O:0.999923
a	O	O:0.999661
list	O	O:0.977602
as	O	O:0.998380
`	O	O:0.991468
[	O	O:0.976374
'	O	O:0.999570
abcd	O	O:0.909216
'	O	O:0.998071
,	O	O:0.995455
'	O	O:0.999609
ddse	O	O:0.922171
'	O	O:0.999017
,	O	O:0.996596
'	O	O:0.999164
123d	O	O:0.934380
'	O	O:0.998230
,	O	O:0.996814
'	O	O:0.998716
aaaaa*	O	O:0.976486
']`	O	O:0.993872
.	O	O:0.984067
	
but	O	O:0.993865
get	O	O:0.996677
the	O	O:0.999667
following	O	O:0.976394
error	O	O:0.956303
:	O	O:0.994078
	
I	O	O:0.992241
get	O	O:0.994341
#CODE	O	O:0.979203
	
Ideally	O	O:0.997053
the	O	O:0.998679
question	O	O:0.988289
would	O	O:0.997060
provide	O	O:0.998829
a	O	O:0.999147
self-contained	O	O:0.961433
piece	O	O:0.998448
of	O	O:0.999106
code	O	O:0.993951
generating	O	O:0.999053
the	O	O:0.999049
data	O	O:0.993784
structure	O	O:0.999228
,	O	O:0.999845
or	O	O:0.999892
even	O	O:0.999214
just	O	O:0.999939
something	O	O:0.999937
like	O	O:0.994908
`	O	O:0.999812
df	O	O:0.946186
=	O	O:0.993274
[[	O	O:0.993972
1	O	O:0.993824
,	O	O:0.998462
2	O	O:0.992924
]	O	O:0.994230
,	O	O:0.996250
[	O	O:0.996000
2	O	O:0.995837
,	O	O:0.998276
3	O	O:0.993370
]	O	O:0.994544
,	O	O:0.995767
[	O	O:0.997715
4	O	O:0.994145
,	O	O:0.998602
5	O	O:0.991009
]]`	O	O:0.994565
,	O	O:0.998355
enough	O	O:0.991312
to	O	O:0.997684
try	O	O:0.999798
to	O	O:0.999463
get	O	O:0.999980
an	O	O:0.999743
answer	O	O:0.998671
without	O	O:0.994043
diving	O	O:0.981928
into	O	O:0.943793
panda	O	O:0.993179
.	O	O:0.986707
	
I'm	O	O:0.986348
running	O	O:0.997092
daily	O	O:0.983301
simulations	O	O:0.917848
in	O	O:0.999216
a	O	O:0.997886
batch	O	O:0.814880
:	O	O:0.997978
I	O	O:0.999499
do	O	O:0.998521
365	O	O:0.991412
simluations	O	O:0.970320
to	O	O:0.999715
get	O	O:0.999557
results	O	O:0.999171
for	O	O:0.999815
a	O	O:0.999237
full	O	O:0.846557
year	O	O:0.914570
.	O	O:0.989081
	
I	O	O:0.993664
edited	O	O:0.996202
my	O	O:0.979771
answer	O	O:0.992796
to	O	O:0.998264
use	O	O:0.999769
capwords	O	O:0.903221
per	O	O:0.999198
your	O	O:0.990780
suggestion	O	O:0.991307
,	O	O:0.999911
that	O	O:0.997747
fixed	O	O:0.998403
the	O	O:0.999193
problem	O	O:0.968697
I	O	O:0.996328
missed	O	O:0.995545
where	O	O:0.994635
it	O	O:0.998489
capitalized	O	O:0.996562
the	O	O:0.993481
'	O	O:0.991814
s	O	O:0.967683
'	O	O:0.993940
in	O	O:0.999001
Guy's	O	O:0.952879
Name	O	O:0.982672
.	O	O:0.988472
	
Does	O	O:0.990056
not	O	O:0.999474
work	O	O:0.998307
exactly	O	O:0.999423
right	O	O:0.999347
since	O	O:0.999346
categories	O	O:0.992326
can	O	O:0.999594
be	O	O:0.999967
mixed	O	O:0.966747
like	O	O:0.990595
that	O	O:0.998097
so	O	O:0.999335
it	O	O:0.999791
will	O	O:0.998364
produce	O	O:0.999820
more	O	O:0.998356
duplications	O	O:0.988379
	
Essentially	O	O:0.995155
,	O	O:0.999349
I	O	O:0.999821
want	O	O:0.997589
to	O	O:0.996613
look	O	O:0.999698
at	O	O:0.998966
quintiles	O	O:0.966088
(	O	O:0.999313
since	O	O:0.997306
there	O	O:0.996831
are	O	O:0.999745
5	O	O:0.998905
days	O	O:0.980042
in	O	O:0.999844
a	O	O:0.999524
business	O	O:0.958138
week	O	O:0.990040
)	O	O:0.999587
rank	O	O:0.767311
1	O	O:0.989683
and	O	O:0.996437
5	O	O:0.974808
and	O	O:0.996687
see	O	O:0.995834
how	O	O:0.998380
they	O	O:0.998759
change	O	O:0.997525
from	O	O:0.998708
week	O	O:0.993371
to	O	O:0.998976
week	O	O:0.998452
.	O	O:0.993540
	
Doing	O	O:0.997671
this	O	O:0.996258
transformation	O	O:0.996653
for	O	O:0.996099
500,000	O	O:0.968121
file	O	O:0.952903
takes	O	O:0.989854
time	O	O:0.988035
.	O	O:0.990739
	
The	O	O:0.986570
requirement	O	O:0.968827
isn't	O	O:0.998732
easy	O	O:0.968728
to	O	O:0.999878
wrap	O	O:0.999633
once	O	O:0.998270
mind	O	O:0.994235
around	O	O:0.993584
,	O	O:0.999298
so	O	O:0.997788
sorry	O	O:0.978607
If	O	O:0.998727
I	O	O:0.996416
am	O	O:0.998856
not	O	O:0.997467
being	O	O:0.995911
clear	O	O:0.961210
.	O	O:0.985289
	
My	O	O:0.987136
question	O	O:0.947894
is	O	O:0.998641
,	O	O:0.999012
from	O	O:0.999233
`	O	O:0.998626
result	O	O:0.980713
`	O	O:0.999823
how	O	O:0.995783
can	O	O:0.999828
I	O	O:0.999966
get	O	O:0.999607
the	O	O:0.997597
column	O	O:0.999674
index	O	O:0.999233
of	O	O:0.999573
the	O	O:0.999836
first	O	O:0.999489
level	O	O:0.991427
as	O	O:0.992488
list	O	O:0.521888
:	O	O:0.993372
#CODE	O	O:0.994824
	
This	O	O:0.975336
function	O	O:0.999031
will	O	O:0.999544
then	O	O:0.999947
work	O	O:0.999769
out	O	O:0.999765
the	O	O:0.999574
maximum	O	O:0.980537
,	O	O:0.997812
minimum	O	O:0.983492
,	O	O:0.996804
and	O	O:0.999630
return	O	O:0.997016
rages	O	O:0.966067
of	O	O:0.999227
values	O	O:0.990413
based	O	O:0.993167
on	O	O:0.999383
the	O	O:0.998506
fact	O	O:0.988793
I	O	O:0.999625
want	O	O:0.997661
5	O	O:0.922255
categories	O	O:0.929021
:	O	O:0.981686
(	O	O:0.999059
1	O	O:0.997502
,	O	O:0.998647
2	O	O:0.987824
)	O	O:0.997171
,	O	O:0.991289
(	O	O:0.997209
3	O	O:0.988911
,	O	O:0.999209
4	O	O:0.991179
)	O	O:0.998032
,	O	O:0.990107
(	O	O:0.998367
5	O	O:0.989693
,	O	O:0.999164
6	O	O:0.987371
)	O	O:0.997830
,	O	O:0.986463
(	O	O:0.998066
7	O	O:0.977189
,	O	O:0.997478
8)	O	O:0.954851
,	O	O:0.991236
(	O	O:0.997022
9	O	O:0.985033
,	O	O:0.998870
10	O	O:0.975161
)	O	O:0.996769
.	O	O:0.984408
	
Any	O	O:0.991962
suggestions	O	O:0.993166
of	O	O:0.999612
a	O	O:0.996130
better	O	O:0.951885
way	O	O:0.993649
?	O	O:0.991598
	
In	O	O:0.990482
addition	O	O:0.999281
this	O	O:0.991856
is	O	O:0.998627
unlikely	O	O:0.978903
to	O	O:0.999034
be	O	O:0.999869
only	O	O:0.999267
time	O	O:0.997940
I	O	O:0.999841
have	O	O:0.999169
to	O	O:0.997017
do	O	O:0.999933
this	O	O:0.998952
so	O	O:0.999640
being	O	O:0.998510
able	O	O:0.998493
to	O	O:0.999406
change	O	O:0.999342
the	O	O:0.997915
numbers	O	O:0.915725
and	O	O:0.999521
columns	O	O:0.997227
i'm	O	O:0.989275
interested	O	O:0.991532
in	O	O:0.997565
would	O	O:0.997919
be	O	O:0.999639
good	O	O:0.987652
.	O	O:0.982868
	
And	O	O:0.993762
at	O	O:0.999552
that	O	O:0.998106
time	O	O:0.999048
i	O	O:0.997890
think	O	O:0.999021
the	O	O:0.997719
state	O	O:0.989094
becomes	O	O:0.984660
bad	O	O:0.993402
,	O	O:0.999207
so	O	O:0.999042
subsequent	O	O:0.968408
calls	O	O:0.994095
will	O	O:0.996341
lead	O	O:0.978309
to	O	O:0.999560
exceptions	O	O:0.998711
like	O	O:0.986898
these	O	O:0.989849
:	O	O:0.995550
#CODE	O	O:0.994514
	
Let	O	O:0.982810
me	O	O:0.979710
fix	O	O:0.985037
that	O	O:0.987312
and	O	O:0.999801
return	O	O:0.979431
to	O	O:0.998394
this	O	O:0.999324
issue	O	O:0.997028
,	O	O:0.999696
as	O	O:0.999274
I	O	O:0.998781
have	O	O:0.999631
read	O	O:0.983113
something	O	O:0.999229
about	O	O:0.998315
format	O	O:0.998082
changes	O	O:0.961422
between	O	O:0.973647
10	O	O:0.932360
and	O	O:0.996398
12	O	O:0.944473
.	O	O:0.954289
	
All	O	O:0.998326
the	O	O:0.999734
data	O	O:0.995959
,	O	O:0.999853
columns	O	O:0.998161
222	O	O:0.980944
and	O	O:0.999163
333	O	O:0.970444
are	O	O:0.988381
offset	O	O:0.997213
as	O	O:0.996075
required	O	O:0.947495
,	O	O:0.996256
but	O	O:0.998176
it	O	O:0.997927
isn't	O	O:0.999624
even	O	O:0.998831
the	O	O:0.999909
same	O	O:0.997835
size	O	O:0.995335
as	O	O:0.999774
the	O	O:0.998824
output	O	O:0.977055
in	O	O:0.998227
the	O	O:0.999314
first	O	O:0.996865
order	O	O:0.973909
.	O	O:0.991032
	
But	O	O:0.995781
I	O	O:0.999104
can	O	O:0.999880
only	O	O:0.998866
get	O	O:0.999463
this	O	O:0.978756
:	O	O:0.998353
#CODE	O	O:0.996174
	
I	O	O:0.996814
have	O	O:0.999685
summary-level	O	O:0.998462
data	O	O:0.998096
of	O	O:0.999854
the	O	O:0.999849
count	O	O:0.992316
of	O	O:0.999444
people	O	O:0.995249
by	O	O:0.999032
age	O	O:0.984102
group	O	O:0.910245
,	O	O:0.998179
city	O	O:0.927223
,	O	O:0.997730
income	O	O:0.858070
and	O	O:0.999598
the	O	O:0.998920
industry	O	O:0.807685
in	O	O:0.996302
which	O	O:0.998611
they	O	O:0.999539
work	O	O:0.999363
,	O	O:0.999913
or	O	O:0.999057
in	O	O:0.999635
this	O	O:0.998743
case	O	O:0.999824
four	O	O:0.994673
dimensions	O	O:0.967900
.	O	O:0.989767
	
@USER	O	O:0.781280
:	O	O:0.984734
Yes	O	O:0.992198
,	O	O:0.999605
it	O	O:0.999210
can	O	O:0.999590
as	O	O:0.999956
I	O	O:0.999711
said	O	O:0.998767
,	O	O:0.994583
"	O	O:0.995694
They	O	O:0.996699
all	O	O:0.999564
suck	O	O:0.974658
in	O	O:0.999591
different	O	O:0.998519
ways	O	O:0.947665
"	O	O:0.995029
.	O	O:0.986133
	
Error	O	O:0.804262
:	O	O:0.998345
list	O	O:0.986481
indices	O	O:0.997578
must	O	O:0.998603
be	O	O:0.999577
integers	O	O:0.986590
,	O	O:0.989730
not	O	O:0.994334
Series	O	O:0.995982
	
Just	O	O:0.993941
so	O	O:0.999327
that	O	O:0.996418
it	O	O:0.999137
does	O	O:0.996414
not	O	O:0.999888
fail	O	O:0.998450
silently	O	O:0.983418
if	O	O:0.999376
the	O	O:0.998532
wrong	O	O:0.995260
kind	O	O:0.997905
of	O	O:0.999617
data	O	O:0.953406
is	O	O:0.999592
passed	O	O:0.891932
in	O	O:0.992807
.	O	O:0.980584
	
If	O	O:0.995410
you	O	O:0.999617
want	O	O:0.999493
to	O	O:0.999856
take	O	O:0.999869
advantage	O	O:0.999438
of	O	O:0.998703
NumPy	O	O:0.958250
/	O	O:0.996215
Pandas	O	O:0.993438
to	O	O:0.995458
perform	O	O:0.996499
fast	O	O:0.827510
(	O	O:0.999337
er	O	O:0.997906
)	O	O:0.999335
calculations	O	O:0.991104
you	O	O:0.999364
must	O	O:0.999748
keep	O	O:0.998649
the	O	O:0.999966
data	O	O:0.994461
in	O	O:0.999876
a	O	O:0.998951
NumPy	O	O:0.993012
array	O	O:0.980446
or	O	O:0.993410
Pandas	O	O:0.993559
NDFrame	O	O:0.881752
.	O	O:0.976582
	
Your	O	O:0.992638
benchmark	O	O:0.825812
is	O	O:0.998842
actually	O	O:0.993163
too	O	O:0.998777
small	O	O:0.991565
to	O	O:0.996899
show	O	O:0.996524
the	O	O:0.999274
real	O	O:0.845910
difference	O	O:0.987500
.	O	O:0.973505
	
I	O	O:0.986781
was	O	O:0.998881
able	O	O:0.989084
to	O	O:0.998979
resolve	O	O:0.999567
this	O	O:0.998118
by	O	O:0.998717
opening	O	O:0.980757
/	O	O:0.983405
closing	O	O:0.995893
a	O	O:0.997149
connection	O	O:0.994504
each	O	O:0.991621
time	O	O:0.997831
i	O	O:0.999094
need	O	O:0.999081
to	O	O:0.998062
execute	O	O:0.999772
a	O	O:0.998239
query	O	O:0.601479
.	O	O:0.995177
	
I	O	O:0.997764
used	O	O:0.998940
a	O	O:0.997621
chunksize	O	O:0.787322
of	O	O:0.998176
4	O	O:0.981058
to	O	O:0.999605
make	O	O:0.999060
the	O	O:0.999658
grouping	O	O:0.999020
noticeable	O	O:0.988320
on	O	O:0.999076
the	O	O:0.999449
small	O	O:0.982062
dataset	O	O:0.992891
;	O	O:0.996829
you'll	O	O:0.998422
want	O	O:0.999062
to	O	O:0.999265
change	O	O:0.998531
it	O	O:0.999024
to	O	O:0.998403
90000	O	O:0.999234
for	O	O:0.999526
your	O	O:0.996409
real	O	O:0.846691
dataset	O	O:0.990169
.	O	O:0.951719
	
It's	O	O:0.990296
mostly	O	O:0.972095
trial	O	O:0.975030
and	O	O:0.997767
error	O	O:0.990546
for	O	O:0.993909
me	O	O:0.963852
,	O	O:0.999464
plus	O	O:0.996110
knowledge	O	O:0.998987
that	O	O:0.998959
you	O	O:0.999698
can	O	O:0.999799
do	O	O:0.999969
a	O	O:0.999623
lot	O	O:0.988726
just	O	O:0.997175
with	O	O:0.995743
```	O	O:0.998671
rank	O	O:0.752518
```	O	O:0.999106
and	O	O:0.996090
```	O	O:0.999757
count	O	B-API:0.532894
```	O	O:0.999462
,	O	O:0.994697
which	O	O:0.997696
are	O	O:0.999100
both	O	O:0.997789
pretty	O	O:0.989852
fast	O	O:0.952422
.	O	O:0.988716
	
And	O	O:0.997525
those	O	O:0.999539
columns	O	O:0.997889
which	O	O:0.999227
have	O	O:0.999679
differing	O	O:0.991495
values	O	O:0.909967
:	O	O:0.992254
#CODE	O	O:0.997863
	
(	O	O:0.994272
I	O	O:0.999490
will	O	O:0.996388
use	O	O:0.992840
logistic	O	O:0.844373
regression	O	O:0.923781
and	O	O:0.998225
random	O	O:0.979114
forest	O	O:0.924086
to	O	O:0.997659
do	O	O:0.999577
the	O	O:0.998778
prediction	O	O:0.983338
,	O	O:0.999583
which	O	O:0.997258
support	O	O:0.969461
sparse	O	O:0.966150
matrix	O	O:0.989863
.	O	O:0.991509
)	O	O:0.999235
Is	O	O:0.998824
there	O	O:0.998175
anyway	O	O:0.998737
to	O	O:0.999120
efficiently	O	O:0.998310
slicing	O	O:0.998921
a	O	O:0.999671
sparseDataFrame	O	O:0.907434
or	O	O:0.998988
for	O	O:0.999638
the	O	O:0.999753
whole	O	O:0.989752
process	O	O:0.979199
I	O	O:0.997669
am	O	O:0.999383
doing	O	O:0.985561
,	O	O:0.998163
it	O	O:0.994213
should	O	O:0.999144
be	O	O:0.999736
improved	O	O:0.997875
in	O	O:0.987577
anyway	O	O:0.984242
?	O	O:0.997467
	
I	O	O:0.989224
looked	O	O:0.993559
here	O	O:0.858485
,	O	O:0.998972
but	O	O:0.999631
when	O	O:0.997135
I	O	O:0.999223
ran	O	O:0.999317
that	O	O:0.971354
in	O	O:0.997836
iPython	O	O:0.979438
Notebook	O	O:0.998050
,	O	O:0.998351
I	O	O:0.999114
don't	O	O:0.998221
get	O	O:0.996435
anything	O	O:0.998360
.	O	O:0.993973
	
does	O	O:0.988215
not	O	O:0.998372
produce	O	O:0.999233
any	O	O:0.998395
difference	O	O:0.993156
in	O	O:0.999192
terms	O	O:0.994353
of	O	O:0.999152
file	O	O:0.976128
size	O	O:0.996189
than	O	O:0.995014
...	O	O:0.986180
	
You	O	O:0.995141
will	O	O:0.997132
either	O	O:0.999932
have	O	O:0.999537
to	O	O:0.999849
split	O	O:0.997998
the	O	O:0.999871
table	O	O:0.998866
up	O	O:0.996832
or	O	O:0.999890
choose	O	O:0.998639
another	O	O:0.996451
storage	O	O:0.989254
format	O	O:0.982322
.	O	O:0.989622
	
To	O	O:0.995241
get	O	O:0.998304
the	O	O:0.999797
number	O	O:0.998821
of	O	O:0.999103
groups	O	O:0.996181
you	O	O:0.999789
can	O	O:0.999481
use	O	O:0.999826
the	O	O:0.998573
ngroups	O	O:0.507878
attribute	O	O:0.964830
:	O	O:0.992667
#CODE	O	O:0.995857
	
this	O	O:0.970613
does	O	O:0.990892
not	O	O:0.999202
seem	O	O:0.998663
to	O	O:0.999341
work	O	O:0.999669
and	O	O:0.999802
I	O	O:0.998425
am	O	O:0.995345
not	O	O:0.994081
sure	O	O:0.995912
if	O	O:0.998020
it	O	O:0.999594
just	O	O:0.957042
is	O	O:0.999649
not	O	O:0.994202
possible	O	O:0.998147
,	O	O:0.999552
I	O	O:0.996978
can	O	O:0.999721
always	O	O:0.999799
generate	O	O:0.999684
separate	O	O:0.989370
dictionaries	O	O:0.996271
from	O	O:0.998871
a	O	O:0.998427
master	O	O:0.979960
dictionary	O	O:0.998769
to	O	O:0.998579
get	O	O:0.999544
around	O	O:0.995146
having	O	O:0.993096
to	O	O:0.998716
update	O	O:0.999776
data	O	O:0.994695
in	O	O:0.999917
multiple	O	O:0.998684
locations	O	O:0.983077
	
I	O	O:0.998534
want	O	O:0.998588
to	O	O:0.991130
compare	O	O:0.998956
these	O	O:0.999075
two	O	O:0.999667
data	O	O:0.998907
frames	O	O:0.998938
by	O	O:0.999380
row	O	O:0.999189
based	O	O:0.967780
on	O	O:0.998711
column	O	O:0.993652
Value	O	O:0.988188
and	O	O:0.999732
keep	O	O:0.984582
the	O	O:0.997630
row	O	O:0.995832
from	O	O:0.999112
first	O	O:0.997692
or	O	O:0.999899
second	O	O:0.994754
depending	O	O:0.999073
where	O	O:0.998482
the	O	O:0.994727
Value	O	O:0.762085
is	O	O:0.990713
bigger	O	O:0.660752
.	O	O:0.983188
	
Then	O	O:0.995759
,	O	O:0.999813
you	O	O:0.999300
can	O	O:0.999187
run	O	O:0.998736
`	O	O:0.999888
sudo	O	O:0.985790
port	O	O:0.983856
install	O	O:0.983329
py27-pandas	O	O:0.963652
`	O	O:0.997372
to	O	O:0.994346
get	O	O:0.999833
Python	O	O:0.993533
and	O	O:0.999899
all	O	O:0.999384
of	O	O:0.998774
the	O	O:0.997359
dependencies	O	O:0.988490
installed	O	O:0.970874
.	O	O:0.993372
	
See	O	O:0.986318
the	O	O:0.985991
shape	O	O:0.992489
method	O	O:0.998560
of	O	O:0.999632
the	O	O:0.999410
input	O	O:0.997357
array	O	O:0.991055
,	O	O:0.998534
and	O	O:0.999646
you	O	O:0.998783
should	O	O:0.998654
get	O	O:0.999906
something	O	O:0.999863
like	O	O:0.995281
`	O	O:0.997897
(	O	O:0.988258
N	O	O:0.992616
,	O	O:0.997388
)`	O	O:0.695634
and	O	O:0.998223
not	O	O:0.993716
`	O	O:0.992678
(	O	O:0.987844
N	O	O:0.994726
,	O	O:0.997918
1	O	O:0.979072
)`	O	O:0.967916
.	O	O:0.983421
	
So	O	O:0.995214
,	O	O:0.999504
will	O	O:0.998743
the	O	O:0.999876
lower	O	O:0.988074
value	O	O:0.997367
always	O	O:0.997619
come	O	O:0.997318
first	O	O:0.997710
,	O	O:0.999410
or	O	O:0.998986
could	O	O:0.999713
that	O	O:0.999856
change	O	O:0.992524
?	O	O:0.997209
	
and	O	O:0.997987
get	O	O:0.998036
the	O	O:0.998385
following	O	O:0.969457
error	O	O:0.943948
:	O	O:0.994047
	
In	O	O:0.998013
order	O	O:0.994985
to	O	O:0.999763
have	O	O:0.999453
the	O	O:0.999667
index	O	O:0.999617
the	O	O:0.999696
exact	O	O:0.999786
same	O	O:0.998380
as	O	O:0.999446
the	O	O:0.999418
first	O	O:0.991695
example	O	O:0.991513
you'd	O	O:0.999155
need	O	O:0.999434
to	O	O:0.999864
change	O	O:0.998356
to	O	O:0.998508
int	O	O:0.986402
from	O	O:0.995476
float	O	O:0.721360
.	O	O:0.994209
	
The	O	O:0.984950
graph	O	O:0.992807
bit	O	O:0.973877
is	O	O:0.994836
sorted	O	O:0.879123
but	O	O:0.997068
the	O	O:0.997045
part	O	O:0.979664
i'm	O	O:0.995380
finding	O	O:0.998772
hard	O	O:0.934997
is	O	O:0.999214
the	O	O:0.997943
fact	O	O:0.990450
the	O	O:0.998647
column	O	O:0.994345
headers	O	O:0.997815
can	O	O:0.999118
change	O	O:0.998986
so	O	O:0.999805
picking	O	O:0.982982
up	O	O:0.998660
their	O	O:0.999110
data	O	O:0.999447
without	O	O:0.996608
manually	O	O:0.995021
calling	O	O:0.998106
them	O	O:0.799880
is	O	O:0.998410
something	O	O:0.992255
I'm	O	O:0.997693
unable	O	O:0.986721
to	O	O:0.998113
do	O	O:0.998474
.	O	O:0.994890
	
If	O	O:0.992403
pytables	O	O:0.992109
used	O	O:0.982895
msgpack	O	O:0.987424
it	O	O:0.996784
would	O	O:0.998831
be	O	O:0.999530
easier	O	O:0.995223
for	O	O:0.999484
other	O	O:0.995419
languages	O	O:0.982544
to	O	O:0.998271
read	O	O:0.998789
the	O	O:0.999374
data	O	O:0.986569
but	O	O:0.999264
obviously	O	O:0.999814
their	O	O:0.998790
target	O	O:0.848546
is	O	O:0.991939
python	O	O:0.904489
.	O	O:0.988305
	
The	O	O:0.987714
company	O	O:0.993422
name	O	O:0.990516
may	O	O:0.998829
be	O	O:0.999547
variable	O	O:0.998128
length	O	O:0.961110
,	O	O:0.997109
it	O	O:0.999568
will	O	O:0.995248
however	O	O:0.999819
always	O	O:0.999904
be	O	O:0.998917
after	O	O:0.996886
the	O	O:0.995639
first	O	O:0.974642
`	O	O:0.997298
\s	O	O:0.819484
`	O	O:0.998767
	
To	O	O:0.995080
get	O	O:0.997705
the	O	O:0.999795
same	O	O:0.998453
form	O	O:0.998730
of	O	O:0.998300
broadcasting	O	O:0.998121
to	O	O:0.999675
occur	O	O:0.999641
like	O	O:0.998035
the	O	O:0.999124
diagram	O	O:0.993756
above	O	O:0.987456
shows	O	O:0.999321
we	O	O:0.999724
have	O	O:0.999070
to	O	O:0.999719
decompose	O	O:0.999178
to	O	O:0.999575
numpy	O	O:0.999857
arrays	O	O:0.996124
which	O	O:0.999767
then	O	O:0.999646
become	O	O:0.999643
anonymous	O	O:0.997106
data	O	O:0.953534
:	O	O:0.995059
#CODE	O	O:0.997307
	
I	O	O:0.998649
want	O	O:0.999102
to	O	O:0.998289
generate	O	O:0.999843
a	O	O:0.999583
plot	O	O:0.925991
showing	O	O:0.998488
these	O	O:0.999199
dates	O	O:0.860243
graphically	O	O:0.958779
.	O	O:0.992576
	
How	O	O:0.927822
is	O	O:0.998039
it	O	O:0.999161
possible	O	O:0.998598
to	O	O:0.999327
get	O	O:0.999859
the	O	O:0.999806
label	O	O:0.998964
of	O	O:0.998818
value	O	O:0.985830
'	O	O:0.998528
12	O	O:0.955449
'	O	O:0.994019
?	O	O:0.994753
	
You	O	O:0.988952
shall	O	O:0.998234
note	O	O:0.996653
that	O	O:0.992945
`	O	O:0.996664
and	O	O:0.985106
`	O	O:0.999069
and	O	O:0.969449
`	O	O:0.999138
or	O	O:0.837594
`	O	O:0.997037
are	O	O:0.995460
not	O	O:0.999602
appropriate	O	O:0.997741
for	O	O:0.999662
a	O	O:0.997294
vector	O	O:0.990517
of	O	O:0.998516
booleans	O	O:0.983759
,	O	O:0.999171
use	O	O:0.989711
`	O	O:0.965671
`	O	O:0.980558
and	O	O:0.994655
`	O	O:0.996327
|	O	O:0.820302
`	O	O:0.998143
instead	O	O:0.987386
.	O	O:0.997185
	
No	O	O:0.990247
,	O	O:0.999692
this	O	O:0.999260
table	O	O:0.984919
is	O	O:0.999775
used	O	O:0.995925
by	O	O:0.998595
a	O	O:0.998652
lot	O	O:0.913552
of	O	O:0.998957
other	O	O:0.984541
code	O	O:0.946787
(	O	O:0.994413
mostly	O	O:0.993399
C#	O	O:0.992761
)	O	O:0.997971
,	O	O:0.998337
I	O	O:0.998510
am	O	O:0.999632
just	O	O:0.996176
doing	O	O:0.999959
some	O	O:0.991107
data	O	O:0.992134
analysis	O	O:0.997857
on	O	O:0.999362
it	O	O:0.999638
from	O	O:0.999042
Python	O	O:0.994220
,	O	O:0.999424
so	O	O:0.990696
I'm	O	O:0.998093
not	O	O:0.998406
in	O	O:0.999964
a	O	O:0.999006
position	O	O:0.995753
to	O	O:0.998265
change	O	O:0.999734
the	O	O:0.997585
semantics	O	O:0.980739
/	O	O:0.998932
data	O	O:0.990125
structure	O	O:0.995736
.	O	O:0.994750
	
#	O	O:0.995841
Valid	O	O:0.997907
positions	O	O:0.990873
in	O	O:0.995201
output	O	O:0.997048
array	O	O:0.997930
to	O	O:0.998955
be	O	O:0.999870
changed	O	O:0.980031
	
Is	O	O:0.995879
there	O	O:0.999254
a	O	O:0.998667
bug	O	O:0.983693
in	O	O:0.999201
my	O	O:0.998825
code	O	O:0.991988
or	O	O:0.998153
is	O	O:0.999753
there	O	O:0.999432
another	O	O:0.993370
reason	O	O:0.994955
for	O	O:0.997964
the	O	O:0.998573
huge	O	O:0.889529
computation	O	O:0.991308
speed	O	O:0.976382
difference	O	O:0.994595
between	O	O:0.981852
those	O	O:0.997729
two	O	O:0.999150
lines	O	O:0.992097
of	O	O:0.998107
code	O	O:0.977966
?	O	O:0.998072
	
I	O	O:0.997846
also	O	O:0.998831
used	O	O:0.998125
a	O	O:0.993670
longer	O	O:0.887039
window	O	O:0.996373
because	O	O:0.997551
there	O	O:0.997262
were	O	O:0.999243
only	O	O:0.999019
15	O	O:0.997692
values	O	O:0.974167
per	O	O:0.978007
array	O	O:0.993838
but	O	O:0.995083
you	O	O:0.995020
seemed	O	O:0.997285
to	O	O:0.999547
be	O	O:0.999920
planning	O	O:0.998964
on	O	O:0.998365
using	O	O:0.999113
the	O	O:0.998631
last	O	O:0.917061
50	O	O:0.989169
days	O	O:0.941974
.	O	O:0.994078
	
I	O	O:0.993913
am	O	O:0.999303
trying	O	O:0.996118
to	O	O:0.999477
get	O	O:0.999968
the	O	O:0.999966
data	O	O:0.999319
into	O	O:0.997424
the	O	O:0.999297
following	O	O:0.952555
shape	O	O:0.956982
:	O	O:0.994348
#CODE	O	O:0.997017
	
I	O	O:0.999599
then	O	O:0.998789
get	O	O:0.999038
the	O	O:0.999750
following	O	O:0.977929
error	O	O:0.947196
:	O	O:0.995350
#CODE	O	O:0.995271
	
I	O	O:0.998471
want	O	O:0.992081
to	O	O:0.960943
:	O	O:0.999947
plot	O	O:0.996732
a	O	O:0.999513
heatmap	O	O:0.992523
of	O	O:0.997973
x	O	O:0.977121
,	O	O:0.999489
y	O	O:0.972000
and	O	O:0.999560
the	O	O:0.998684
colour	O	O:0.796196
is	O	O:0.996425
the	O	O:0.998662
z	O	O:0.978888
value	O	O:0.995492
..	O	O:0.974321
	
I'm	O	O:0.996812
also	O	O:0.981257
running	O	O:0.995799
python	O	O:0.943473
3.4	O	O:0.952174
and	O	O:0.997519
I	O	O:0.997447
didn't	O	O:0.985423
get	O	O:0.990687
any	O	O:0.995933
warning	O	O:0.999128
when	O	O:0.996063
I	O	O:0.998533
ran	O	O:0.999671
your	O	O:0.992865
code	O	O:0.985153
exactly	O	O:0.998663
as	O	O:0.990524
is	O	O:0.986686
.	O	O:0.975091
	
This	O	O:0.990604
does	O	O:0.996617
it	O	O:0.999384
in	O	O:0.999937
a	O	O:0.999415
one	O	O:0.987767
liner	O	O:0.988989
but	O	O:0.966865
is	O	O:0.998085
not	O	O:0.997617
so	O	O:0.999064
readable	O	O:0.985341
,	O	O:0.999504
basically	O	O:0.999738
it	O	O:0.999836
tests	O	O:0.997370
where	O	O:0.999280
the	O	O:0.999636
value	O	O:0.999062
counts	O	O:0.982975
for	O	O:0.999717
each	O	O:0.989451
column	O	O:0.990155
is	O	O:0.999352
equal	O	O:0.989261
to	O	O:0.998282
1	O	O:0.999745
,	O	O:0.999162
filters	O	O:0.988470
the	O	O:0.997978
resultant	O	O:0.997089
list	O	O:0.988231
out	O	O:0.981510
and	O	O:0.999604
uses	O	O:0.947898
the	O	O:0.997199
index	O	O:0.998050
as	O	O:0.999423
a	O	O:0.996868
boolean	O	O:0.846519
indec	O	O:0.744348
:	O	O:0.989018
#CODE	O	O:0.993719
	
I	O	O:0.997158
still	O	O:0.996772
think	O	O:0.989967
pandas	O	O:0.923845
is	O	O:0.999408
not	O	O:0.988085
correctly	O	O:0.999295
handling	O	O:0.999052
your	O	O:0.997034
empty	O	O:0.970534
column	O	O:0.996524
and	O	O:0.999157
you	O	O:0.999917
end	O	O:0.996569
up	O	O:0.997588
with	O	O:0.996496
either	O	O:0.999479
with	O	O:0.999115
5	O	O:0.998408
columns	O	O:0.999370
,	O	O:0.999455
or	O	O:0.999901
with	O	O:0.998334
6	O	O:0.998784
columns	O	O:0.996136
,	O	O:0.999169
but	O	O:0.999595
shifted	O	O:0.995123
one	O	O:0.999085
to	O	O:0.999125
the	O	O:0.999912
left	O	O:0.923236
.	O	O:0.986498
	
However	O	O:0.994830
,	O	O:0.999150
I	O	O:0.999103
am	O	O:0.998486
receiving	O	O:0.995606
this	O	O:0.989860
warning	O	O:0.991360
`	O	O:0.995906
/	O	O:0.978872
usr	O	O:0.992791
/	O	O:0.990106
local	O	O:0.935565
/	O	O:0.988423
lib	O	O:0.936244
/	O	O:0.987895
python2.7	O	O:0.755090
/	O	O:0.981442
dist-packages	O	O:0.914951
/	O	O:0.994135
pandas	O	O:0.979287
/	O	O:0.996031
core	O	O:0.754753
/	O	O:0.992829
index	O	O:0.991539
.	O	O:0.989452
	
It	O	O:0.992318
looks	O	O:0.997726
like	O	O:0.999590
this	O	O:0.999417
changed	O	O:0.991514
at	O	O:0.999652
some	O	O:0.980732
point	O	O:0.996797
;	O	O:0.999064
maybe	O	O:0.985087
he	O	O:0.997072
has	O	O:0.997437
an	O	O:0.996660
old	O	O:0.994315
version	O	O:0.991675
of	O	O:0.995538
pandas	O	O:0.998758
where	O	O:0.997849
S	O	O:0.956762
and	O	O:0.998701
Sec	O	O:0.964253
are	O	O:0.994004
no	O	O:0.996549
good	O	O:0.870839
.	O	O:0.994209
	
I	O	O:0.998487
have	O	O:0.999554
also	O	O:0.997540
heard	O	O:0.996858
of	O	O:0.997894
Orange	O	O:0.948858
library	O	O:0.994485
for	O	O:0.994949
imputation	O	O:0.933801
,	O	O:0.994008
but	O	O:0.993950
haven't	O	O:0.970155
had	O	O:0.999356
a	O	O:0.997883
chance	O	O:0.954847
to	O	O:0.996083
use	O	O:0.999617
it	O	O:0.991719
yet	O	O:0.956396
.	O	O:0.993738
	
I	O	O:0.994946
managed	O	O:0.993406
to	O	O:0.996864
find	O	O:0.998129
how	O	O:0.999749
this	O	O:0.991381
is	O	O:0.999335
almost	O	O:0.984790
done	O	O:0.938564
:	O	O:0.989858
#CODE	O	O:0.993673
	
For	O	O:0.999327
this	O	O:0.996040
purpose	O	O:0.997571
you	O	O:0.999004
need	O	O:0.996391
pandas	O	O:0.999368
-	O	O:0.999908
most	O	O:0.979126
popular	O	O:0.991085
python	O	O:0.974572
package	O	O:0.990951
for	O	O:0.996733
working	O	O:0.964653
with	O	O:0.989724
timeseries	O	O:0.990462
and	O	O:0.999746
another	O	O:0.998704
analytic	O	O:0.980363
data	O	O:0.977999
.	O	O:0.990916
	
well	O	O:0.970648
,	O	O:0.999912
what	O	O:0.995622
I	O	O:0.998743
am	O	O:0.999529
trying	O	O:0.992328
to	O	O:0.999260
do	O	O:0.997837
is	O	O:0.999466
to	O	O:0.998746
have	O	O:0.999916
all	O	O:0.999903
my	O	O:0.998415
results	O	O:0.999570
ready	O	O:0.997606
out	O	O:0.997443
of	O	O:0.999170
mysql	O	O:0.955098
,	O	O:0.999304
and	O	O:0.999766
then	O	O:0.996924
do	O	O:0.999685
different	O	O:0.999705
types	O	O:0.945355
of	O	O:0.998910
merging	O	O:0.986939
to	O	O:0.998958
get	O	O:0.999887
my	O	O:0.998231
plots	O	O:0.988227
.	O	O:0.993444
	
I	O	O:0.997123
agree	O	O:0.994213
with	O	O:0.962562
Chang	O	O:0.986955
that	O	O:0.998678
it	O	O:0.999362
would	O	O:0.999782
help	O	O:0.996245
to	O	O:0.999899
have	O	O:0.999963
a	O	O:0.999812
very	O	O:0.982717
clear	O	O:0.999196
example	O	O:0.997254
of	O	O:0.997437
how	O	O:0.998543
the	O	O:0.999650
exact	O	O:0.994312
alignment	O	O:0.993324
should	O	O:0.997235
be	O	O:0.997513
.	O	O:0.997046
	
You	O	O:0.996169
mention	O	O:0.989882
in	O	O:0.999294
update	O	O:0.978647
2	O	O:0.996277
above	O	O:0.996538
that	O	O:0.998688
you	O	O:0.999913
want	O	O:0.999778
to	O	O:0.999393
get	O	O:0.999973
the	O	O:0.999870
columns	O	O:0.995280
and	O	O:0.999724
the	O	O:0.999873
only	O	O:0.985786
way	O	O:0.989923
is	O	O:0.997800
opening	O	O:0.979225
the	O	O:0.994950
hdf	O	O:0.925448
.	O	O:0.980581
	
So	O	O:0.996595
where	O	O:0.999380
those	O	O:0.998145
indices	O	O:0.981241
don't	O	O:0.999147
match	O	O:0.992530
up	O	O:0.951581
(	O	O:0.995872
50	O	O:0.962306
,	O	O:0.997497
and	O	O:0.999382
51	O	O:0.989264
)	O	O:0.998308
,	O	O:0.999403
you	O	O:0.999008
get	O	O:0.998102
`	O	O:0.999621
NaN	O	O:0.749167
`	O	O:0.999822
as	O	O:0.995613
I	O	O:0.997884
would	O	O:0.998906
hope	O	O:0.833060
.	O	O:0.995309
	
However	O	O:0.992434
,	O	O:0.999528
if	O	O:0.998593
I	O	O:0.999463
save	O	O:0.985511
it	O	O:0.997958
as	O	O:0.999507
a	O	O:0.995306
csv	O	O:0.951536
file	O	O:0.980831
and	O	O:0.997792
reload	O	O:0.985992
it	O	O:0.986582
again	O	O:0.995532
,	O	O:0.999419
I	O	O:0.996875
got	O	O:0.998146
error	O	O:0.977623
message	O	O:0.949189
and	O	O:0.999203
the	O	O:0.998266
plot	O	B-API:0.814012
is	O	O:0.996969
not	O	O:0.996374
quite	O	O:0.997599
right	O	O:0.991409
either	O	O:0.990825
,	O	O:0.998014
#CODE	O	O:0.993891
	
My	O	O:0.996656
main	O	O:0.990549
goal	O	O:0.988010
is	O	O:0.998600
to	O	O:0.997736
match	O	O:0.998701
the	O	O:0.999431
index	O	O:0.999327
value	O	O:0.999334
from	O	O:0.994048
`	O	O:0.999466
ds2	O	O:0.797444
`	O	O:0.999675
into	O	B-API:0.823456
`	O	O:0.997841
ds1	O	B-API:0.830594
`	O	O:0.998241
and	O	O:0.993319
replace	O	O:0.918504
it	O	O:0.997492
with	O	O:0.999374
corresponding	O	O:0.995052
value	O	O:0.998453
,	O	O:0.999343
so	O	O:0.999659
the	O	O:0.997910
output	O	O:0.979858
would	O	O:0.999117
look	O	O:0.997838
like	O	O:0.998323
#CODE	O	O:0.996801
	
That	O	O:0.992034
would	O	O:0.998592
be	O	O:0.999936
a	O	O:0.999361
possibility	O	O:0.768268
but	O	O:0.999135
the	O	O:0.995147
problem	O	O:0.944161
is	O	O:0.999074
that	O	O:0.996797
each	O	O:0.995561
frame5	O	O:0.945747
has	O	O:0.998710
a	O	O:0.995878
different	O	O:0.973051
index	O	O:0.995457
.	O	O:0.989093
	
First	O	O:0.995080
,	O	O:0.999446
you	O	O:0.999745
need	O	O:0.999422
some	O	O:0.999496
kind	O	O:0.999094
of	O	O:0.999385
mapping	O	O:0.984378
of	O	O:0.999482
what	O	O:0.991776
makes	O	O:0.996935
up	O	O:0.998974
each	O	O:0.989618
level	O	O:0.986108
.	O	O:0.993807
	
PyTables	O	O:0.933214
3.1	O	O:0.756940
was	O	O:0.997268
just	O	O:0.997683
released	O	O:0.999702
that	O	O:0.997649
changes	O	O:0.996416
the	O	O:0.999589
file	O	O:0.952808
caching	O	O:0.991225
mechanism	O	O:0.998864
at	O	O:0.999333
least	O	O:0.998317
on	O	O:0.999871
a	O	O:0.997357
lower	O	O:0.960092
HDF5	O	O:0.983303
version	O	O:0.990742
,	O	O:0.999155
do	O	O:0.997366
to	O	O:0.998535
see	O	O:0.999949
your	O	O:0.990146
version	O	O:0.947442
:	O	O:0.996561
#CODE	O	O:0.995576
	
backfilling	O	O:0.997166
data	O	O:0.997832
from	O	O:0.999628
one	O	O:0.999821
column	O	O:0.999931
into	O	O:0.995584
another	O	O:0.988381
	
Also	O	O:0.994986
,	O	O:0.999422
I	O	O:0.999850
know	O	O:0.994203
I	O	O:0.997930
am	O	O:0.999683
missing	O	O:0.960573
patterns	O	O:0.993157
that	O	O:0.992404
may	O	O:0.999883
be	O	O:0.999574
useful	O	O:0.994197
because	O	O:0.996358
if	O	O:0.999350
a	O	O:0.999636
pattern	O	O:0.979521
exists	O	O:0.979826
between	O	O:0.989048
Variable_1	O	B-API:0.528674
and	O	O:0.997912
Variable_2	O	O:0.612318
and	O	O:0.995486
Variable_3	O	O:0.633700
and	O	O:0.995305
Variable_4	O	O:0.846730
are	O	O:0.989007
missing	O	O:0.988984
completely	O	O:0.992199
at	O	O:0.998333
random	O	O:0.954081
,	O	O:0.999599
then	O	O:0.998486
concatenating	O	O:0.999895
them	O	O:0.997668
as	O	O:0.999448
strings	O	O:0.953063
will	O	O:0.998945
not	O	O:0.999825
capture	O	O:0.991738
the	O	O:0.997396
pattern	O	O:0.961970
between	O	O:0.982342
Variable_1	O	O:0.640282
and	O	O:0.998992
Variable_2	O	O:0.629419
.	O	O:0.959196
	
Do	O	O:0.994931
you	O	O:0.999388
know	O	O:0.999418
what	O	O:0.993700
is	O	O:0.998411
the	O	O:0.998715
difference	O	O:0.979402
in	O	O:0.999223
this	O	O:0.998632
case	O	O:0.996792
between	O	O:0.993904
both	O	O:0.974116
?	O	O:0.994853
	
The	O	O:0.995152
goal	O	O:0.949960
is	O	O:0.999521
to	O	O:0.998722
take	O	O:0.999542
the	O	O:0.999396
2x2	O	O:0.993657
piece	O	O:0.997748
of	O	O:0.999011
df	O	O:0.963857
with	O	O:0.996947
index	O	O:0.991069
(	O	O:0.998851
4	O	O:0.994497
,	O	O:0.998737
5	O	O:0.976533
)	O	O:0.998801
and	O	O:0.999383
columns	O	O:0.988163
(	O	O:0.991990
'	O	O:0.999277
date	O	O:0.814158
'	O	O:0.997933
,	O	O:0.990430
'	O	O:0.997154
val	O	O:0.968895
')	O	O:0.997041
and	O	O:0.995042
replace	O	O:0.801315
it	O	O:0.998120
with	O	O:0.999507
a	O	O:0.998905
same-shaped	O	O:0.910457
,	O	O:0.998941
same-typed	O	O:0.987206
2x2	O	O:0.981425
block	O	O:0.985720
.	O	O:0.989145
	
Convert	O	O:0.925848
Matrix	O	O:0.993147
format	O	O:0.990102
to	O	O:0.996531
Column	O	O:0.999577
in	O	O:0.996834
Pandas	O	O:0.986982
	
`	O	O:0.992490
nan	O	B-API:0.773631
`	O	O:0.996549
is	O	O:0.980572
commonly	O	O:0.995627
used	O	O:0.975008
for	O	O:0.999556
this	O	O:0.977610
purpose	O	O:0.963693
,	O	O:0.998201
but	O	O:0.989332
here	O	O:0.961384
I'm	O	O:0.999505
actually	O	O:0.999847
just	O	O:0.999265
using	O	O:0.999707
the	O	O:0.990645
time	O	O:0.960089
that	O	O:0.980317
was	O	O:0.991974
already	O	O:0.999131
there	O	O:0.997791
if	O	O:0.998208
there	O	O:0.994454
isn't	O	O:0.999505
a	O	O:0.999475
new	O	O:0.969826
one	O	O:0.997989
defined	O	O:0.952369
for	O	O:0.999198
it	O	O:0.990955
in	O	O:0.998673
the	O	O:0.997563
`	O	O:0.998122
time_map	O	B-API:0.729601
`	O	O:0.997306
`	O	O:0.996382
dict	O	O:0.729185
`	O	O:0.998524
.	O	O:0.966206
	
I	O	O:0.998738
want	O	O:0.998895
to	O	O:0.997237
drop	O	O:0.996168
all	O	O:0.999285
values	O	O:0.933418
after	O	O:0.996118
index	O	O:0.997796
`	O	O:0.996153
5	O	O:0.827826
`	O	O:0.999091
because	O	O:0.980996
it	O	O:0.998640
has	O	O:0.999586
no	O	O:0.996691
values	O	O:0.909973
,	O	O:0.992887
but	O	O:0.995947
not	O	O:0.997416
index	O	O:0.999805
`	O	O:0.998559
2	O	O:0.891909
`	O	O:0.999285
,	O	O:0.986141
`	O	O:0.998454
3	O	O:0.587563
`	O	O:0.998510
.	O	O:0.980562
	
You	O	O:0.990187
should	O	O:0.998522
be	O	O:0.999841
able	O	O:0.999273
to	O	O:0.996543
uninstall	O	O:0.994245
Anaconda	O	O:0.855733
(	O	O:0.995695
it	O	O:0.996673
is	O	O:0.999548
only	O	O:0.998784
a	O	O:0.999572
directory	O	O:0.990173
)	O	O:0.999458
to	O	O:0.998133
reverse	O	O:0.999470
any	O	O:0.998112
changes	O	O:0.966604
.	O	O:0.992413
	
Since	O	O:0.992144
it	O	O:0.993582
is	O	O:0.999805
a	O	O:0.998040
very	O	O:0.978868
large	O	O:0.997617
data	O	O:0.992554
frame	O	O:0.999686
,	O	O:0.999548
I	O	O:0.998802
think	O	O:0.996430
it	O	O:0.991426
might	O	O:0.998555
be	O	O:0.999369
inefficient	O	O:0.997763
to	O	O:0.996036
do	O	O:0.999873
a	O	O:0.998387
loop	O	O:0.954748
and	O	O:0.999806
row	O	O:0.999438
by	O	O:0.986764
row	O	O:0.992265
extraction	O	O:0.946167
.	O	O:0.987825
	
Since	O	O:0.994374
the	O	O:0.997545
NumPy	O	O:0.969705
array	O	O:0.969199
has	O	O:0.989646
no	O	O:0.998094
index	O	O:0.996440
,	O	O:0.999451
there	O	O:0.998294
should	O	O:0.998557
be	O	O:0.999790
no	O	O:0.998097
"	O	O:0.986313
Unalignable	O	O:0.924528
boolean	O	O:0.917978
Series	O	O:0.990191
"	O	O:0.988632
problem	O	O:0.961747
.	O	O:0.986110
	
My	O	O:0.993714
guess	O	O:0.964156
is	O	O:0.999578
that	O	O:0.980312
I	O	O:0.999376
am	O	O:0.998203
either	O	O:0.993424
not	O	O:0.998980
applying	O	O:0.998851
the	O	O:0.999066
functions	O	O:0.991771
correctly	O	O:0.996586
for	O	O:0.999957
a	O	O:0.999696
column	O	O:0.980310
or	O	O:0.999785
the	O	O:0.999590
values	O	O:0.980592
I	O	O:0.997859
am	O	O:0.999416
getting	O	O:0.981421
arent	O	O:0.993684
integers	O	O:0.949447
.	O	O:0.993132
	
which	O	O:0.991495
gives	O	O:0.995771
you	O	O:0.999961
your	O	O:0.999496
date	O	O:0.969887
as	O	O:0.999700
a	O	O:0.998125
list	O	O:0.961805
arranged	O	O:0.990145
in	O	O:0.999158
the	O	O:0.999767
order	O	O:0.994086
of	O	O:0.994506
importance	O	O:0.981462
...	O	O:0.987563
	
I'm	O	O:0.993332
not	O	O:0.998647
sure	O	O:0.999040
what	O	O:0.995647
the	O	O:0.997246
difference	O	O:0.955948
was	O	O:0.971643
.	O	O:0.993996
	
The	O	O:0.995068
mongodb	O	O:0.970734
collection	O	O:0.996687
contains	O	O:0.995968
sensor	O	O:0.998168
values	O	O:0.982492
tagged	O	O:0.995131
with	O	O:0.997260
date	O	O:0.681564
and	O	O:0.999362
time	O	O:0.974972
.	O	O:0.979873
	
This	O	O:0.963427
should	O	O:0.997464
not	O	O:0.999529
make	O	O:0.997327
any	O	O:0.995496
difference	O	O:0.983050
.	O	O:0.985714
	
I	O	O:0.995890
would	O	O:0.999816
like	O	O:0.998386
to	O	O:0.999945
split	O	O:0.995808
that	O	O:0.999342
file	O	O:0.999580
into	O	O:0.999351
files	O	O:0.997795
of	O	O:0.985188
len	O	B-API:0.999634
(	O	O:0.999166
index	O	O:0.990464
)	O	O:0.999063
=	O	O:0.934682
2	O	O:0.995959
,	O	O:0.999103
using	O	O:0.993889
linux	O	B-API:0.565378
:	O	O:0.965969
#CODE	O	O:0.989227
	
You	O	O:0.995023
can	O	O:0.997956
coerce	O	O:0.987452
the	O	O:0.999416
response	O	O:0.996687
into	O	O:0.998142
a	O	O:0.999521
data	O	O:0.997432
frame	O	O:0.999693
after	O	O:0.998819
you	O	O:0.995387
get	O	O:0.996526
it	O	O:0.998976
.	O	O:0.997294
	
Oh	O	O:0.991675
wait	O	O:0.934289
,	O	O:0.999846
your	O	O:0.989845
matrix	O	O:0.989485
must	O	O:0.997593
already	O	O:0.999766
be	O	O:0.998809
in	O	O:0.999546
the	O	O:0.998866
form	O	O:0.998179
of	O	O:0.998753
differences	O	O:0.998604
from	O	O:0.998725
the	O	O:0.999028
mean	O	O:0.971840
(	O	O:0.999516
by	O	O:0.999274
column	O	O:0.997718
)	O	O:0.996453
?	O	O:0.993346
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
I	O	O:0.996827
get	O	O:0.998655
the	O	O:0.997725
following	O	O:0.972509
error	O	O:0.928351
:	O	O:0.995313
#CODE	O	O:0.995271
	
I	O	O:0.996110
am	O	O:0.998635
curious	O	O:0.970569
why	O	O:0.999128
doing	O	O:0.993551
`	O	O:0.997914
unique_df	O	B-API:0.826308
[	O	O:0.999233
i	O	O:0.988409
]	O	O:0.995244
=	O	O:0.926975
"	O	O:0.997558
AAA	O	O:0.967422
"`	O	O:0.997438
no	O	O:0.977429
longer	O	O:0.997634
modifies	O	O:0.993870
the	O	O:0.999569
data	O	O:0.997590
frame	O	O:0.999823
values	O	O:0.992123
.	O	O:0.992489
	
Unfortunately	O	O:0.996683
I	O	O:0.999369
get	O	O:0.999657
an	O	O:0.996472
error	O	O:0.993888
,	O	O:0.996547
and	O	O:0.999483
the	O	O:0.994521
shading	O	O:0.907841
doesn't	O	O:0.995547
work	O	O:0.989943
.	O	O:0.999262
	
The	O	O:0.997436
range	O	O:0.997168
of	O	O:0.999620
the	O	O:0.998595
values	O	O:0.985326
in	O	O:0.996857
`	O	O:0.999610
megaball	O	B-API:0.582945
`	O	O:0.999495
are	O	O:0.997545
from	O	O:0.999172
1	O	O:0.988798
to	O	O:0.996783
25	O	O:0.997868
,	O	O:0.996906
and	O	O:0.999855
this	O	O:0.999043
line	O	O:0.992452
of	O	O:0.996653
code	O	O:0.741913
:	O	O:0.997869
#CODE	O	O:0.995649
	
yes	O	O:0.911644
it	O	O:0.992038
works	O	O:0.994068
fine	O	O:0.991401
but	O	O:0.998787
I	O	O:0.999765
need	O	O:0.999525
to	O	O:0.998549
drop	O	O:0.931818
'	O	O:0.995776
2014-07-16	O	O:0.998965
14:24	O	O:0.964435
'	O	O:0.996261
thnx	O	O:0.964217
	
If	O	O:0.996885
you	O	O:0.999459
have	O	O:0.999665
more	O	O:0.996921
pressing	O	O:0.997654
things	O	O:0.987626
to	O	O:0.999136
do	O	O:0.999854
,	O	O:0.999763
you	O	O:0.999109
could	O	O:0.999366
temporarily	O	O:0.998721
rename	O	O:0.990054
it	O	O:0.999765
out	O	O:0.998395
of	O	O:0.999607
the	O	O:0.997334
way	O	O:0.998765
to	O	O:0.999334
get	O	O:0.999845
through	O	O:0.999357
your	O	O:0.992244
installs	O	O:0.991279
,	O	O:0.999872
then	O	O:0.983966
rename	O	O:0.992188
it	O	O:0.999782
back	O	O:0.967253
.	O	O:0.996144
	
As	O	O:0.996391
you	O	O:0.999242
can	O	O:0.999669
see	O	O:0.999893
,	O	O:0.999949
the	O	O:0.999635
lines	O	O:0.982810
overlap	O	O:0.992108
perfectly	O	O:0.996789
for	O	O:0.999559
the	O	O:0.998006
days	O	O:0.968977
where	O	O:0.998295
there	O	O:0.996486
is	O	O:0.999488
data	O	O:0.960174
:	O	O:0.999375
no	O	O:0.999875
original	O	O:0.999138
data	O	O:0.990542
is	O	O:0.995273
'	O	O:0.997815
changed	O	O:0.926780
'	O	O:0.989597
.	O	O:0.985219
	
I	O	O:0.998468
have	O	O:0.999703
a	O	O:0.996332
massive	O	O:0.981881
file	O	O:0.993420
with	O	O:0.997785
per	O	O:0.995604
timestamp	O	O:0.987035
survey	O	O:0.996450
data	O	O:0.998267
from	O	O:0.998603
about	O	O:0.998704
thousands	O	O:0.997542
of	O	O:0.998443
different	O	O:0.988706
people	O	O:0.981171
and	O	O:0.999494
over	O	O:0.968705
20	O	O:0.989351
different	O	O:0.993191
locations	O	O:0.944329
.	O	O:0.986337
	
So	O	O:0.997601
if	O	O:0.999413
you	O	O:0.999779
have	O	O:0.999733
a	O	O:0.999938
million	O	O:0.993045
items	O	O:0.996608
that	O	O:0.996503
,	O	O:0.999945
on	O	O:0.999421
average	O	O:0.898698
,	O	O:0.999803
belong	O	O:0.988660
to	O	O:0.999425
three	O	O:0.999806
categories	O	O:0.997982
each	O	O:0.994828
,	O	O:0.999935
then	O	O:0.999113
you	O	O:0.999963
need	O	O:0.999800
storage	O	O:0.998858
for	O	O:0.999611
the	O	O:0.999476
million	O	O:0.990324
items	O	O:0.992316
plus	O	O:0.996369
three	O	O:0.998316
million	O	O:0.979801
references	O	O:0.926930
.	O	O:0.979757
	
Given	O	O:0.983725
how	O	O:0.996154
the	O	O:0.998005
sample	O	O:0.965912
was	O	O:0.992632
built	O	O:0.989826
,	O	O:0.999030
there	O	O:0.984497
was	O	O:0.998666
a	O	O:0.999733
need	O	O:0.995312
to	O	O:0.999461
weight	O	O:0.999631
adjust	O	O:0.978659
the	O	O:0.999599
respondent	O	O:0.991266
data	O	O:0.996568
so	O	O:0.999093
that	O	O:0.998768
not	O	O:0.999869
every	O	O:0.998417
one	O	O:0.993317
is	O	O:0.998583
deemed	O	O:0.981848
as	O	O:0.997985
"	O	O:0.998054
equal	O	O:0.968391
"	O	O:0.999408
when	O	O:0.983059
performing	O	O:0.990374
the	O	O:0.995212
analysis	O	O:0.948708
.	O	O:0.984905
	
What	O	O:0.990230
I'm	O	O:0.997542
hoping	O	O:0.988828
to	O	O:0.998507
achieve	O	O:0.993702
is	O	O:0.999417
knowing	O	O:0.989550
where	O	O:0.997296
the	O	O:0.998439
first	O	O:0.979806
/	O	O:0.999341
last	O	O:0.992115
row	O	O:0.999044
of	O	O:0.998741
trimmed	O	O:0.996371
data	O	O:0.995116
is	O	O:0.999148
located	O	O:0.984672
so	O	O:0.998862
I	O	O:0.998733
can	O	O:0.999917
set	O	O:0.997087
up	O	O:0.999589
a	O	O:0.996728
for-loop	O	O:0.993386
to	O	O:0.999489
go	O	O:0.999765
through	O	O:0.998087
the	O	O:0.999106
data	O	O:0.992013
and	O	O:0.999289
perform	O	O:0.999093
mathematical	O	O:0.957581
calculations	O	O:0.987198
with	O	O:0.995545
the	O	O:0.998693
values	O	O:0.983999
and	O	O:0.999761
then	O	O:0.999760
send	O	O:0.998296
those	O	O:0.999537
results	O	O:0.999654
back	O	O:0.997247
into	O	O:0.998792
new	O	O:0.996929
columns	O	O:0.999516
attached	O	O:0.992454
directly	O	O:0.996316
to	O	O:0.999095
the	O	O:0.999986
same	O	O:0.998283
date	O	O:0.963344
as	O	O:0.999867
the	O	O:0.998034
date	O	O:0.790669
in	O	O:0.994853
question	O	O:0.967182
.	O	O:0.993690
	
Ultimately	O	O:0.994344
I	O	O:0.999660
want	O	O:0.999333
to	O	O:0.996577
be	O	O:0.999973
able	O	O:0.998493
to	O	O:0.999696
loop	O	O:0.999771
through	O	O:0.990081
the	O	O:0.999811
json	O	O:0.986597
to	O	O:0.997741
display	O	O:0.999445
the	O	O:0.998552
dates	O	O:0.720054
and	O	O:0.999814
corresponding	O	O:0.993573
values	O	O:0.886849
,	O	O:0.997494
but	O	O:0.998825
I	O	O:0.999196
cant	O	O:0.998240
do	O	O:0.997913
that	O	O:0.998296
until	O	O:0.998102
this	O	O:0.997082
error	O	O:0.984918
is	O	O:0.998299
no	O	O:0.988002
longer	O	O:0.997595
happening	O	O:0.981478
.	O	O:0.993351
	
They	O	O:0.994025
are	O	O:0.998223
however	O	O:0.998936
extremely	O	O:0.998776
useful	O	O:0.999155
once	O	O:0.996580
you	O	O:0.999711
get	O	O:0.999395
to	O	O:0.999785
grips	O	O:0.999716
with	O	O:0.999694
them	O	O:0.969160
.	O	O:0.997603
	
I	O	O:0.998331
know	O	O:0.999180
the	O	O:0.998091
values	O	O:0.967061
within	O	O:0.983330
the	O	O:0.999053
CSV	O	O:0.942905
are	O	O:0.997098
not	O	O:0.999331
all	O	O:0.998977
"	O	O:0.997988
NaN	O	O:0.658650
"	O	O:0.999032
so	O	O:0.995232
why	O	O:0.997740
does	O	O:0.997930
the	O	O:0.997712
output	O	O:0.990062
looks	O	O:0.997169
like	O	O:0.998935
this	O	O:0.997729
and	O	O:0.999728
how	O	O:0.999326
can	O	O:0.998598
I	O	O:0.999968
get	O	O:0.999804
the	O	O:0.999398
correct	O	O:0.996558
output	O	O:0.996209
with	O	O:0.999684
the	O	O:0.999331
numbers	O	O:0.981066
in	O	O:0.999677
reach	O	O:0.995792
of	O	O:0.999834
the	O	O:0.999493
rows	O	O:0.978973
?	O	O:0.994580
	
I've	O	O:0.991059
filtered	O	O:0.998160
my	O	O:0.998997
data	O	O:0.997579
as	O	O:0.999626
suggested	O	O:0.966488
here	O	O:0.894587
:	O	O:0.994944
With	O	O:0.998647
Pandas	O	O:0.994888
in	O	O:0.998386
Python	O	O:0.997122
,	O	O:0.999392
select	O	O:0.933524
the	O	O:0.999409
highest	O	O:0.996043
value	O	O:0.998030
row	O	O:0.995705
for	O	O:0.999733
each	O	O:0.951474
group	O	O:0.811038
#CODE	O	O:0.993722
	
I	O	O:0.987548
was	O	O:0.999266
able	O	O:0.994668
to	O	O:0.999592
get	O	O:0.999847
the	O	O:0.999866
more	O	O:0.993112
precise	O	O:0.997274
value	O	O:0.996987
in	O	O:0.998309
my	O	O:0.997125
previous	O	O:0.997859
environment	O	O:0.998906
by	O	O:0.996662
doing	O	O:0.998120
the	O	O:0.996573
incremental	O	O:0.810188
update	O	O:0.911119
to	O	O:0.998717
cumulative	O	O:0.998547
mean	O	O:0.997423
instead	O	O:0.999586
of	O	O:0.999237
taking	O	O:0.993333
a	O	O:0.998595
batch	O	O:0.903484
sum	O	O:0.964434
and	O	O:0.998858
divide	O	O:0.827234
.	O	O:0.967243
	
Then	O	O:0.991525
use	O	O:0.997681
the	O	O:0.993981
`	O	O:0.976057
~	O	B-API:0.596723
`	O	O:0.999566
to	O	O:0.998321
flip	O	O:0.999209
the	O	O:0.997882
bools	O	O:0.847652
.	O	O:0.991178
	
The	O	O:0.996040
above	O	O:0.994663
entire	O	O:0.994597
expression	O	O:0.990593
is	O	O:0.997422
therefore	O	O:0.997029
evaluating	O	O:0.998549
to	O	O:0.998427
an	O	O:0.999943
array	O	O:0.998624
of	O	O:0.999626
truth	O	O:0.992543
values	O	O:0.997425
,	O	O:0.997541
rather	O	O:0.999057
than	O	O:0.999493
a	O	O:0.999564
single	O	O:0.883613
`	O	O:0.998267
True	O	O:0.759278
`	O	O:0.998260
/	O	O:0.716946
`	O	O:0.997856
False	O	O:0.654054
`	O	O:0.997390
.	O	O:0.961733
	
For	O	O:0.994492
the	O	O:0.992753
multiprocessing	O	O:0.842552
:	O	O:0.996929
You	O	O:0.999321
can	O	O:0.999607
distribute	O	O:0.999060
the	O	O:0.999841
data	O	O:0.998674
sets	O	O:0.998100
across	O	O:0.998670
cores	O	O:0.995490
,	O	O:0.999493
do	O	O:0.996205
`	O	O:0.998333
partial_fit	O	B-API:0.966760
`	O	O:0.999840
,	O	O:0.998050
get	O	O:0.999360
the	O	O:0.999181
weight	O	O:0.991301
vectors	O	O:0.982229
,	O	O:0.999657
average	O	O:0.997515
them	O	O:0.994830
,	O	O:0.999764
distribute	O	O:0.999182
them	O	O:0.977069
to	O	O:0.999771
the	O	O:0.999949
estimators	O	O:0.975894
,	O	O:0.999142
do	O	O:0.998209
partial	O	O:0.993898
fit	O	O:0.840512
again	O	O:0.986172
.	O	O:0.991112
	
the	O	O:0.998079
size	O	O:0.989754
of	O	O:0.996048
Y	O	O:0.832412
is	O	O:0.999004
100e6	O	O:0.982151
x	O	O:0.972743
1	O	O:0.963802
	
Put	O	O:0.971603
I	O	O:0.997950
think	O	O:0.999018
that	O	O:0.984430
following	O	O:0.999198
this	O	O:0.998221
route	O	O:0.993341
would	O	O:0.998657
lead	O	O:0.996176
to	O	O:0.999669
an	O	O:0.999882
inefficient	O	O:0.985970
solution	O	O:0.989910
.	O	O:0.991208
	
Your	O	O:0.992799
example	O	O:0.997765
come	O	O:0.985415
at	O	O:0.999863
a	O	O:0.998473
good	O	O:0.958203
time	O	O:0.997629
for	O	O:0.998804
me	O	O:0.979359
,	O	O:0.999367
so	O	O:0.999265
I	O	O:0.999150
now	O	O:0.999694
have	O	O:0.998000
something	O	O:0.999627
concrete	O	O:0.994614
to	O	O:0.998714
train	O	O:0.992771
with	O	O:0.996130
.	O	O:0.993659
	
One	O	O:0.993313
thing	O	O:0.996954
I	O	O:0.999629
find	O	O:0.998034
very	O	O:0.988068
confortable	O	O:0.992098
with	O	O:0.996249
Numpy	O	O:0.940155
is	O	O:0.998375
the	O	O:0.998081
vectorization	O	O:0.998962
of	O	O:0.997619
operations	O	O:0.994261
with	O	O:0.995397
arrays	O	O:0.954873
(	O	O:0.998358
ie	O	O:0.998976
.	O	O:0.999167
the	O	O:0.999372
absence	O	O:0.995360
of	O	O:0.998156
any	O	O:0.997781
explicit	O	O:0.994603
looping	O	O:0.985129
)	O	O:0.994835
,	O	O:0.991209
and	O	O:0.999558
the	O	O:0.998056
implicit	O	O:0.959732
element-by-element	O	O:0.979435
behavior	O	O:0.996227
of	O	O:0.995638
operations	O	O:0.837026
.	O	O:0.992121
	
I	O	O:0.992287
suggest	O	O:0.996808
to	O	O:0.995175
set	O	O:0.998856
it	O	O:0.999449
to	O	O:0.999815
some	O	O:0.999797
reasonable	O	O:0.998135
upper	O	O:0.995293
limit	O	O:0.966246
,	O	O:0.998229
though	O	O:0.991493
.	O	O:0.994606
	
Gonna	O	O:0.975161
try	O	O:0.993532
to	O	O:0.999735
find	O	O:0.999959
another	O	O:0.996431
solution	O	O:0.991329
.	O	O:0.989726
	
Is	O	O:0.995399
it	O	O:0.999233
possible	O	O:0.998177
to	O	O:0.999600
construct	O	O:0.999817
a	O	O:0.997560
`	O	O:0.997666
numpy	O	O:0.936129
`	O	O:0.999252
matrix	O	O:0.991902
from	O	O:0.999706
a	O	O:0.987120
function	O	O:0.985376
?	O	O:0.993679
	
I	O	O:0.997349
have	O	O:0.997861
2D	O	O:0.979529
numpy	O	O:0.994318
array	O	O:0.991385
,	O	O:0.999474
with	O	O:0.997537
example	O	O:0.973837
shape	O	O:0.983417
:	O	O:0.995935
#CODE	O	O:0.996100
	
`	O	O:0.992623
grid	O	O:0.972940
[	O	O:0.999446
0	O	O:0.992697
]`	O	O:0.991221
can	O	O:0.995080
be	O	O:0.999948
used	O	O:0.998800
as	O	O:0.999383
a	O	O:0.998093
proxy	O	O:0.870916
for	O	O:0.993702
the	O	O:0.994012
index	O	O:0.990540
`	O	O:0.997904
i	O	O:0.875933
`	O	O:0.999658
,	O	O:0.988403
and	O	O:0.999098
	
Thank	O	O:0.987187
you	O	O:0.994529
Martijn	O	O:0.988784
:)	O	O:0.995746
-	O	O:0.999586
your	O	O:0.997061
are	O	O:0.997290
BIG	O	O:0.991505
help	O	O:0.896146
,	O	O:0.996660
and	O	O:0.999854
just	O	O:0.998666
one	O	O:0.998071
thing	O	O:0.996208
confuses	O	O:0.993541
me	O	O:0.988245
,	O	O:0.999231
how	O	O:0.998592
do	O	O:0.995371
I	O	O:0.999716
tell	O	O:0.993925
python	O	O:0.969770
to	O	O:0.999328
read	O	O:0.995750
all	O	O:0.999767
CDR	O	O:0.994180
records	O	O:0.997291
if	O	O:0.997673
record	O	O:0.904490
is	O	O:0.998469
907	O	O:0.966297
bytes	O	O:0.995247
long	O	O:0.963918
.	O	O:0.989305
	
I	O	O:0.999154
want	O	O:0.999367
to	O	O:0.995767
get	O	O:0.999968
the	O	O:0.999875
elements	O	O:0.996688
of	O	O:0.999732
a	O	O:0.997770
`	O	O:0.998616
numpy	O	O:0.903318
`	O	O:0.999575
array	O	O:0.991066
using	O	O:0.998330
an	O	O:0.989355
index	O	O:0.997068
array	O	O:0.998024
like	O	O:0.995383
so	O	O:0.998152
#CODE	O	O:0.993288
	
I	O	O:0.996341
can	O	O:0.998982
weight	O	O:0.999810
them	O	O:0.995960
how	O	O:0.999160
I	O	O:0.999815
want	O	O:0.999592
to	O	O:0.995868
as	O	O:0.999988
long	O	O:0.995271
as	O	O:0.999638
sum	O	O:0.977811
of	O	O:0.999839
their	O	O:0.962668
weights	O	O:0.993041
adds	O	O:0.969475
to	O	O:0.997111
1	O	O:0.996679
.	O	O:0.991193
	
I	O	O:0.995926
wanted	O	O:0.998137
to	O	O:0.985793
try	O	O:0.999787
to	O	O:0.998201
duplicate	O	O:0.999941
those	O	O:0.998381
performance	O	O:0.998260
gains	O	O:0.999201
when	O	O:0.993758
solving	O	O:0.991210
the	O	O:0.998806
distance	O	O:0.967106
between	O	O:0.994789
two	O	O:0.997448
equal	O	O:0.997419
sized	O	O:0.976573
arrays	O	O:0.944899
.	O	O:0.981406
	
Even	O	O:0.993406
if	O	O:0.997422
it	O	O:0.993492
worked	O	O:0.992093
,	O	O:0.999226
I	O	O:0.990227
would	O	O:0.998927
not	O	O:0.997107
expect	O	O:0.999840
any	O	O:0.998209
speed-up	O	O:0.980698
from	O	O:0.999381
this	O	O:0.997523
compared	O	O:0.996035
to	O	O:0.999189
an	O	O:0.999828
ordinary	O	O:0.995357
loop	O	O:0.985073
,	O	O:0.999157
since	O	O:0.998402
it	O	O:0.998394
needs	O	O:0.999820
to	O	O:0.999546
call	O	O:0.998656
a	O	O:0.996433
Python	O	O:0.634561
function	O	O:0.996901
for	O	O:0.998824
every	O	O:0.981980
entry	O	O:0.968385
.	O	O:0.978740
	
@USER	O	O:0.964073
,	O	O:0.997267
you're	O	O:0.997602
right	O	O:0.996514
,	O	O:0.999918
if	O	O:0.999674
you	O	O:0.999765
have	O	O:0.999444
to	O	O:0.999881
convert	O	O:0.999060
everything	O	O:0.999457
to	O	O:0.999345
ndarrays	O	O:0.999348
it's	O	O:0.984179
often	O	O:0.989423
not	O	O:0.997729
worth	O	O:0.968096
it	O	O:0.996514
.	O	O:0.993327
	
An	O	O:0.992885
example	O	O:0.996981
implementation	O	O:0.997427
without	O	O:0.994699
recalculating	O	O:0.974493
the	O	O:0.980135
distance	O	O:0.993801
array	O	O:0.994042
would	O	O:0.998500
be	O	O:0.999587
this	O	O:0.989064
:	O	O:0.991099
#CODE	O	O:0.995448
	
I	O	O:0.998696
need	O	O:0.998137
to	O	O:0.998360
return	O	O:0.999691
all	O	O:0.997816
of	O	O:0.999581
the	O	O:0.998000
points	O	O:0.994500
within	O	O:0.997663
a	O	O:0.998965
distance	O	O:0.989982
of	O	O:0.999315
X	O	O:0.995095
units	O	O:0.997777
from	O	O:0.997725
every	O	O:0.990509
point	O	O:0.991233
.	O	O:0.986525
	
EDIT	O	O:0.871912
:	O	O:0.991755
Actually	O	O:0.998834
renaming	O	O:0.996251
my	O	O:0.982722
package	O	O:0.977692
does	O	O:0.986743
not	O	O:0.997508
fix	O	O:0.990826
it	O	O:0.995585
.	O	O:0.993659
	
2	O	O:0.973124
)	O	O:0.999492
look	O	O:0.971111
at	O	O:0.999774
the	O	O:0.998016
lengths	O	O:0.899003
distance	O	O:0.914328
(	O	O:0.998891
point	O	O:0.996457
,	O	O:0.998966
centre	O	O:0.985423
,	O	O:0.987528
metric=	O	O:0.996651
...	O	O:0.998721
)	O	O:0.999593
of	O	O:0.998659
all	O	O:0.998462
the	O	O:0.999249
rays	O	O:0.863397
.	O	O:0.989897
	
Sorry	O	O:0.977480
,	O	O:0.998372
all	O	O:0.996855
are	O	O:0.999501
positive	O	O:0.998268
values	O	O:0.987842
greater	O	O:0.995677
than	O	O:0.993308
0	O	O:0.944367
.	O	O:0.990869
	
After	O	O:0.996778
that	O	O:0.998331
I	O	O:0.999727
convert	O	O:0.977727
the	O	O:0.992396
image	O	O:0.981560
to	O	O:0.997212
BGR	O	O:0.997379
model	O	O:0.945118
:	O	O:0.994331
#CODE	O	O:0.996877
	
How	O	O:0.994177
do	O	O:0.994908
I	O	O:0.999504
standardize	O	O:0.985390
a	O	O:0.975782
matrix	O	O:0.954981
?	O	O:0.994349
	
Speed	O	O:0.964182
can	O	O:0.997943
probably	O	O:0.999738
be	O	O:0.999829
increased	O	O:0.998742
by	O	O:0.995969
ensuring	O	O:0.989894
that	O	O:0.991286
the	O	O:0.999451
record	O	O:0.966450
array	O	O:0.997698
you	O	O:0.999463
pass	O	O:0.983214
to	O	O:0.998505
Cython	O	O:0.992832
is	O	O:0.997528
contiguous	O	O:0.726196
.	O	O:0.986174
	
fid	O	O:0.803690
is	O	O:0.996393
the	O	O:0.998121
file	O	O:0.988679
currently	O	O:0.997790
being	O	O:0.996020
looked	O	O:0.982437
at	O	O:0.991338
	
I'm	O	O:0.992556
guessing	O	O:0.993026
it's	O	O:0.996997
opening	O	O:0.994326
TWO	O	O:0.991544
filehandles	O	O:0.969938
per	O	O:0.990157
iteration	O	O:0.994458
,	O	O:0.999815
just	O	O:0.999467
based	O	O:0.996111
on	O	O:0.998967
the	O	O:0.993204
498	O	O:0.872774
(	O	O:0.999499
a	O	O:0.999031
bit	O	O:0.989177
less	O	O:0.991135
than	O	O:0.993389
half	O	O:0.976684
1024	O	O:0.984079
,	O	O:0.997164
and	O	O:0.999421
Python	O	O:0.992654
would	O	O:0.998407
have	O	O:0.999833
some	O	O:0.999366
files	O	O:0.999668
open	O	O:0.963325
itself	O	O:0.986481
(	O	O:0.999413
maybe	O	O:0.996631
25-odd	O	O:0.978705
?	O	O:0.996829
)	O	O:0.997705
.	O	O:0.989718
	
The	O	O:0.995639
idea	O	O:0.938864
is	O	O:0.999583
to	O	O:0.999123
count	O	O:0.998911
the	O	O:0.999492
number	O	O:0.997379
of	O	O:0.999752
occurrences	O	O:0.998352
of	O	O:0.999630
each	O	O:0.975539
transition	O	O:0.997405
,	O	O:0.999430
and	O	O:0.999422
use	O	O:0.998542
the	O	O:0.995479
counts	O	O:0.909913
in	O	O:0.999185
a	O	O:0.999604
vectorized	O	O:0.990677
update	O	O:0.976058
of	O	O:0.996711
the	O	O:0.982482
matrix	O	O:0.990600
.	O	O:0.985463
	
I	O	O:0.998091
kept	O	O:0.999626
them	O	O:0.960411
in	O	O:0.999387
to	O	O:0.999419
distinguish	O	O:0.999960
them	O	O:0.995664
from	O	O:0.999266
the	O	O:0.998696
`	O	O:0.998859
math	O	O:0.891492
`	O	O:0.999899
ones	O	O:0.976600
,	O	O:0.999587
which	O	O:0.998434
won't	O	O:0.999138
work	O	O:0.997786
for	O	O:0.999973
this	O	O:0.988666
approach	O	O:0.972052
.	O	O:0.988723
	
Powers	O	O:0.990896
of	O	O:0.996900
two	O	O:0.985830
are	O	O:0.999195
simple	O	O:0.994866
to	O	O:0.995225
compute	O	O:0.977644
,	O	O:0.998700
but	O	O:0.999448
mixed	O	O:0.972705
radix	O	O:0.998210
sizes	O	O:0.981745
can	O	O:0.998294
be	O	O:0.999729
faster	O	O:0.994821
and	O	O:0.996407
use	O	O:0.994044
less	O	O:0.539657
memory	O	O:0.927735
.	O	O:0.974557
	
The	O	O:0.994196
stars	O	O:0.938874
/	O	O:0.998938
dots	O	O:0.974284
are	O	O:0.998342
the	O	O:0.998583
`	O	O:0.992593
X	O	O:0.635281
`	O	O:0.998941
and	O	O:0.986245
`	O	O:0.999389
Y	O	O:0.652601
`	O	O:0.999248
plotted	O	O:0.906570
with	O	O:0.999431
two	O	O:0.996644
modifications	O	O:0.996972
,	O	O:0.999629
I	O	O:0.999531
removed	O	O:0.988239
the	O	O:0.997031
first	O	O:0.974939
position	O	O:0.984200
and	O	O:0.998835
added	O	O:0.999599
a	O	O:0.995428
false	O	O:0.928277
one	O	O:0.999084
to	O	O:0.999092
make	O	O:0.999787
this	O	O:0.999556
a	O	O:0.999849
full	O	O:0.988450
example	O	O:0.997931
of	O	O:0.999316
the	O	O:0.998793
sought	O	O:0.979958
algorithm	O	O:0.982698
.	O	O:0.992855
	
Please	O	O:0.989859
look	O	O:0.985109
at	O	O:0.999328
my	O	O:0.992533
EDIT	O	O:0.986633
2	O	O:0.992061
,	O	O:0.999458
where	O	O:0.998768
I	O	O:0.998665
described	O	O:0.999583
my	O	O:0.988463
problem	O	O:0.996825
with	O	O:0.999364
input	O	O:0.998511
data	O	O:0.997157
...	O	O:0.993231
and	O	O:0.999737
why	O	O:0.998402
I	O	O:0.997365
can't	O	O:0.998684
get	O	O:0.946419
matrix	O	O:0.998254
..	O	O:0.983680
	
pyqt	O	O:0.706599
:	O	O:0.992966
Convert	O	O:0.992470
numpy	O	O:0.996420
array	O	O:0.994751
to	O	O:0.991974
QImage	O	O:0.964550
	
To	O	O:0.997703
find	O	O:0.991249
the	O	O:0.999618
difference	O	O:0.977721
between	O	O:0.999146
your	O	O:0.996882
data	O	O:0.993283
and	O	O:0.999976
a	O	O:0.999119
point	O	O:0.953815
,	O	O:0.998646
you'd	O	O:0.999294
just	O	O:0.997963
do	O	O:0.999624
`	O	O:0.999651
data	O	O:0.963027
-	O	O:0.999764
point	O	O:0.986984
`	O	O:0.996935
.	O	O:0.976940
	
Unfortunately	O	O:0.998515
when	O	O:0.995531
numpy	O	O:0.997339
reads	O	O:0.994729
the	O	O:0.998369
19-digit	O	O:0.980464
number	O	O:0.996847
as	O	O:0.999759
a	O	O:0.999249
floating	O	O:0.968932
point	O	O:0.994020
number	O	O:0.989486
,	O	O:0.999198
there	O	O:0.984469
is	O	O:0.997253
not	O	O:0.995651
enough	O	O:0.997338
precision	O	O:0.999046
to	O	O:0.998174
get	O	O:0.999900
all	O	O:0.999389
the	O	O:0.999754
significant	O	O:0.976924
digits	O	O:0.978934
,	O	O:0.999457
so	O	O:0.999364
there	O	O:0.982445
is	O	O:0.999768
a	O	O:0.997726
rounding	O	O:0.972599
error	O	O:0.979007
.	O	O:0.986798
	
The	O	O:0.990519
exceptions	O	O:0.921264
are	O	O:0.998884
very	O	O:0.995715
rare	O	O:0.982432
,	O	O:0.999433
if	O	O:0.997463
any	O	O:0.992478
.	O	O:0.991212
	
I	O	O:0.995325
can't	O	O:0.998122
reproduce	O	O:0.997431
your	O	O:0.998041
problem	O	O:0.993974
on	O	O:0.999599
Linux	O	O:0.994737
using	O	O:0.998971
the	O	O:0.995266
same	O	O:0.971181
versions	O	O:0.993947
of	O	O:0.996254
numpy	O	O:0.969888
and	O	O:0.998986
python	O	O:0.986923
and	O	O:0.999827
a	O	O:0.995702
quickly	O	O:0.802748
made	O	O:0.990247
test	O	O:0.957149
file	O	O:0.975981
(	O	O:0.999326
with	O	O:0.996450
dos	O	O:0.997517
line	O	O:0.996891
endings	O	O:0.995555
,	O	O:0.999802
even	O	O:0.991452
)	O	O:0.999572
...	O	O:0.975758
	
I	O	O:0.997017
imagine	O	O:0.997201
I	O	O:0.996079
would	O	O:0.999785
have	O	O:0.998792
to	O	O:0.999705
use	O	O:0.999824
the	O	O:0.996639
uncompiled	O	O:0.969314
source	O	O:0.991632
provided	O	O:0.993061
from	O	O:0.999408
each	O	O:0.991886
of	O	O:0.998570
these	O	O:0.999276
three	O	O:0.992329
projects	O	O:0.956601
.	O	O:0.981565
	
However	O	O:0.994830
,	O	O:0.999121
I	O	O:0.998946
am	O	O:0.999346
checking	O	O:0.978772
optimization	O	O:0.996561
routine	O	O:0.988769
result	O	O:0.994646
,	O	O:0.999319
and	O	O:0.999487
sometimes	O	O:0.996542
power	O	O:0.939614
is	O	O:0.991021
negative	O	O:0.895301
,	O	O:0.997541
sometimes	O	O:0.991890
it	O	O:0.991776
is	O	O:0.997914
positive	O	O:0.841218
.	O	O:0.979792
	
What	O	O:0.995346
about	O	O:0.997668
array	O	O:0.998219
of	O	O:0.994277
arrays	O	O:0.981382
that	O	O:0.997911
contains	O	O:0.999149
some	O	O:0.990360
structures	O	O:0.989846
?	O	O:0.992352
	
The	O	O:0.998088
y	O	O:0.995172
data	O	O:0.994775
takes	O	O:0.998573
the	O	O:0.999681
shape	O	O:0.994344
of	O	O:0.998178
the	O	O:0.995682
triangle	O	O:0.999611
wave	O	O:0.968382
below	O	O:0.977044
.	O	O:0.993034
	
There	O	O:0.991563
are	O	O:0.999741
some	O	O:0.996930
algorithm	O	O:0.998673
to	O	O:0.999366
calculate	O	O:0.995894
faster	O	O:0.999370
the	O	O:0.999134
results	O	O:0.994634
for	O	O:0.999398
low	O	O:0.926088
valued	O	O:0.959398
matrix	O	O:0.970850
,	O	O:0.994573
but	O	O:0.999549
just	O	O:0.994597
google	O	O:0.980673
for	O	O:0.999318
this	O	O:0.973593
.	O	O:0.990214
	
Those	O	O:0.970708
are	O	O:0.996735
not	O	O:0.999502
random	O	O:0.995106
replacements	O	O:0.962460
by	O	O:0.992007
any	O	O:0.992661
means	O	O:0.972773
.	O	O:0.991044
	
I	O	O:0.992182
would	O	O:0.999245
suggest	O	O:0.996320
to	O	O:0.999719
make	O	O:0.999553
the	O	O:0.999200
library	O	O:0.992417
use	O	O:0.992104
an	O	O:0.936861
(	O	O:0.998683
NumPy-	O	O:0.966934
)	O	O:0.999212
array	O	O:0.994588
you	O	O:0.998789
allocate	O	O:0.973228
in	O	O:0.997764
Python	O	O:0.989393
and	O	O:0.999907
pass	O	O:0.978104
on	O	O:0.992661
to	O	O:0.998844
the	O	O:0.999631
library	O	O:0.977132
.	O	O:0.991164
	
For	O	O:0.994028
the	O	O:0.998016
simple	O	O:0.993913
case	O	O:0.998366
of	O	O:0.999058
"	O	O:0.998022
remove	O	O:0.973866
column	O	O:0.997911
3	O	O:0.958825
"	O	O:0.997877
,	O	O:0.998108
`	O	O:0.998886
delete	O	B-API:0.932759
`	O	O:0.999220
makes	O	O:0.992279
more	O	O:0.994625
sense	O	O:0.987773
;	O	O:0.995544
for	O	O:0.999294
a	O	O:0.999379
more	O	O:0.880552
complicated	O	O:0.995119
case	O	O:0.996517
,	O	O:0.999477
`	O	O:0.999575
take	O	O:0.844897
`	O	O:0.999655
probably	O	O:0.974230
makes	O	O:0.999412
more	O	O:0.969086
sense	O	O:0.973110
.	O	O:0.985863
	
I	O	O:0.998736
have	O	O:0.998928
an	O	O:0.998625
array	O	O:0.999257
of	O	O:0.998376
points	O	O:0.957584
in	O	O:0.997607
numpy	O	O:0.925135
:	O	O:0.994301
#CODE	O	O:0.994120
	
I	O	O:0.998020
have	O	O:0.999476
done	O	O:0.993051
7	O	O:0.994887
of	O	O:0.999141
the	O	O:0.997590
problems	O	O:0.996343
on	O	O:0.993422
Project	O	O:0.938472
Euler	O	O:0.979930
(	O	O:0.998353
nothing	O	O:0.991693
to	O	O:0.999685
brag	O	O:0.996639
about	O	O:0.986887
,	O	O:0.997026
but	O	O:0.996714
it	O	O:0.995972
might	O	O:0.999702
give	O	O:0.996460
you	O	O:0.999931
a	O	O:0.999403
better	O	O:0.994908
idea	O	O:0.997860
of	O	O:0.999691
where	O	O:0.996890
I	O	O:0.999779
stand	O	O:0.997733
in	O	O:0.996344
skills	O	O:0.980962
)	O	O:0.997878
.	O	O:0.985179
	
How	O	O:0.996126
do	O	O:0.995239
I	O	O:0.999745
find	O	O:0.996544
the	O	O:0.990409
length	O	O:0.945632
(	O	O:0.996403
or	O	O:0.999850
dimensions	O	O:0.994465
,	O	O:0.999786
size	O	O:0.998220
)	O	O:0.999511
of	O	O:0.999695
a	O	O:0.997438
numpy	O	O:0.985699
matrix	O	O:0.985763
in	O	O:0.995768
python	O	O:0.988344
?	O	O:0.995723
	
It's	O	O:0.992921
longer	O	O:0.999432
than	O	O:0.998194
the	O	O:0.999635
other	O	O:0.976066
answer	O	O:0.973017
but	O	O:0.982176
is	O	O:0.999443
more	O	O:0.968685
generic	O	O:0.912271
(	O	O:0.996426
can	O	O:0.998358
be	O	O:0.999942
used	O	O:0.999748
with	O	O:0.995169
values	O	O:0.991346
that	O	O:0.990868
are	O	O:0.999708
not	O	O:0.999477
strings	O	O:0.983560
)	O	O:0.997222
.	O	O:0.989845
	
I	O	O:0.997721
coded	O	O:0.998926
my	O	O:0.989608
own	O	O:0.986794
routine	O	O:0.995601
with	O	O:0.994400
Python	O	O:0.976610
/	O	O:0.995153
Numpy	O	O:0.946900
,	O	O:0.989848
and	O	O:0.999137
it	O	O:0.991696
is	O	O:0.997801
giving	O	O:0.991840
me	O	O:0.997653
a	O	O:0.997619
little	O	O:0.930285
bit	O	O:0.999582
different	O	O:0.995244
results	O	O:0.997805
from	O	O:0.998036
the	O	O:0.998851
MATLAB	O	O:0.994663
code	O	O:0.991205
somebody	O	O:0.994979
else	O	O:0.983436
did	O	O:0.987701
,	O	O:0.999019
and	O	O:0.999515
I	O	O:0.998170
am	O	O:0.997057
having	O	O:0.987949
hard	O	O:0.982711
time	O	O:0.996559
finding	O	O:0.995004
out	O	O:0.994799
where	O	O:0.996845
it	O	O:0.993450
is	O	O:0.999265
coming	O	O:0.978775
from	O	O:0.998979
because	O	O:0.998042
of	O	O:0.999383
different	O	O:0.995204
random	O	O:0.919645
draws	O	O:0.938552
.	O	O:0.981430
	
How	O	O:0.988526
can	O	O:0.995415
1,000,000	O	O:0.999439
4-byte	O	O:0.996902
ints	O	O:0.944367
be	O	O:0.998877
compressed	O	O:0.997563
any	O	O:0.978186
smaller	O	O:0.903207
?	O	O:0.983537
	
If	O	O:0.998763
this	O	O:0.995964
number	O	O:0.980063
is	O	O:0.999075
less	O	O:0.991040
than	O	O:0.999443
a	O	O:0.999710
third	O	O:0.983183
of	O	O:0.999316
the	O	O:0.997195
total	O	O:0.994613
I'll	O	O:0.985830
use	O	O:0.995845
my	O	O:0.990146
answer	O	O:0.972994
above	O	O:0.971641
.	O	O:0.988821
	
I	O	O:0.998020
have	O	O:0.999476
done	O	O:0.993051
7	O	O:0.994887
of	O	O:0.999141
the	O	O:0.997590
problems	O	O:0.996343
on	O	O:0.993422
Project	O	O:0.938472
Euler	O	O:0.979930
(	O	O:0.998353
nothing	O	O:0.991693
to	O	O:0.999685
brag	O	O:0.996639
about	O	O:0.986887
,	O	O:0.997026
but	O	O:0.996714
it	O	O:0.995972
might	O	O:0.999702
give	O	O:0.996460
you	O	O:0.999931
a	O	O:0.999403
better	O	O:0.994908
idea	O	O:0.997860
of	O	O:0.999691
where	O	O:0.996890
I	O	O:0.999779
stand	O	O:0.997733
in	O	O:0.996344
skills	O	O:0.980962
)	O	O:0.997878
.	O	O:0.985179
	
Apologies	O	O:0.978961
if	O	O:0.999238
this	O	O:0.984721
is	O	O:0.999921
a	O	O:0.995268
wrongly	O	O:0.980293
framed	O	O:0.995773
question	O	O:0.990139
or	O	O:0.998732
if	O	O:0.999717
this	O	O:0.997174
question	O	O:0.980200
was	O	O:0.988844
already	O	O:0.998183
asked	O	O:0.966240
earlier	O	O:0.921428
(	O	O:0.993430
I	O	O:0.995337
couldn't	O	O:0.997569
find	O	O:0.981719
it	O	O:0.999434
)	O	O:0.998728
	
If	O	O:0.996399
you	O	O:0.998860
can	O	O:0.999608
choose	O	O:0.999819
,	O	O:0.999834
I	O	O:0.999596
strongly	O	O:0.983383
recommend	O	O:0.906669
pandas	O	O:0.967849
:	O	O:0.996553
it	O	O:0.997878
has	O	O:0.998087
"	O	O:0.999164
column	O	O:0.992518
indexing	O	O:0.981439
"	O	O:0.998771
built-in	O	O:0.944761
plus	O	O:0.997786
a	O	O:0.998495
lot	O	O:0.965750
of	O	O:0.999485
other	O	O:0.982220
features	O	O:0.961311
.	O	O:0.975719
	
But	O	O:0.998422
this	O	O:0.999253
will	O	O:0.999704
iterate	O	O:0.997296
through	O	O:0.997504
the	O	O:0.995750
entire	O	O:0.962200
array	O	O:0.992573
and	O	O:0.999155
allocate	O	O:0.998112
a	O	O:0.994635
new	O	O:0.971150
array	O	O:0.993765
in	O	O:0.989884
memory	O	O:0.996324
containing	O	O:0.996226
the	O	O:0.999017
all	O	O:0.999410
the	O	O:0.995601
results	O	O:0.995651
,	O	O:0.998961
and	O	O:0.999944
only	O	O:0.999652
then	O	O:0.999376
check	O	O:0.999648
to	O	O:0.998852
see	O	O:0.999647
if	O	O:0.998537
it	O	O:0.994467
is	O	O:0.999475
empty	O	O:0.783326
.	O	O:0.982497
	
Since	O	O:0.997315
some	O	O:0.990278
askers	O	O:0.947479
and	O	O:0.999929
some	O	O:0.989433
answers	O	O:0.994357
both	O	O:0.992602
avoid	O	O:0.981320
that	O	O:0.996288
constraint	O	O:0.998296
,	O	O:0.999647
I	O	O:0.998895
encourage	O	O:0.988144
anyone	O	O:0.922586
who's	O	O:0.988323
here	O	O:0.875879
and	O	O:0.998578
doesn't	O	O:0.997750
mind	O	O:0.977477
having	O	O:0.995938
PIL	O	O:0.970837
to	O	O:0.996780
look	O	O:0.998271
below	O	O:0.990237
,	O	O:0.998735
and	O	O:0.999610
any	O	O:0.999143
non-PIL	O	O:0.874423
answers	O	O:0.918159
(	O	O:0.999341
new	O	O:0.988151
or	O	O:0.998940
old	O	O:0.992423
)	O	O:0.999533
to	O	O:0.993680
mention	O	O:0.999712
that	O	O:0.992759
they're	O	O:0.999556
a	O	O:0.999581
PIL-is-used	O	O:0.981818
type	O	O:0.988304
of	O	O:0.997371
answer	O	O:0.987827
,	O	O:0.999633
to	O	O:0.999558
distinguish	O	O:0.999255
themselves	O	O:0.999316
from	O	O:0.999361
answers	O	O:0.992203
meeting	O	O:0.996245
the	O	O:0.997863
original	O	O:0.973945
constraint	O	O:0.991509
.	O	O:0.989384
	
As	O	O:0.993056
I	O	O:0.999110
understand	O	O:0.999878
your	O	O:0.981594
question	O	O:0.988948
,	O	O:0.999699
you	O	O:0.999596
have	O	O:0.999596
a	O	O:0.999740
2D	O	O:0.992173
array	O	O:0.998595
of	O	O:0.994320
"	O	O:0.998080
z	O	O:0.990715
"	O	O:0.997886
values	O	O:0.993471
that	O	O:0.997416
ranges	O	O:0.999208
from	O	O:0.999297
some	O	O:0.997996
xmin	O	O:0.985637
to	O	O:0.998747
xmax	O	O:0.997634
,	O	O:0.998880
and	O	O:0.999777
ymin	O	O:0.988175
to	O	O:0.999001
ymax	O	O:0.997161
in	O	O:0.999587
each	O	O:0.979852
direction	O	O:0.971325
.	O	O:0.994842
	
The	O	O:0.986264
covariance	O	O:0.991947
matrix	O	O:0.998672
of	O	O:0.999714
a	O	O:0.994826
dataset	O	O:0.961994
A	O	O:0.972905
is	O	O:0.994171
:	O	O:0.987151
1	O	O:0.985954
/(	O	O:0.997990
N-1	O	O:0.977474
)	O	O:0.997368
*	O	O:0.997906
AA^T	O	O:0.989594
	
I	O	O:0.998482
have	O	O:0.999628
a	O	O:0.995646
large	O	O:0.660332
(	O	O:0.997273
500k	O	O:0.989344
by	O	O:0.996088
500k	O	O:0.968951
)	O	O:0.995242
,	O	O:0.996737
sparse	O	O:0.938403
matrix	O	O:0.976424
.	O	O:0.983876
	
I	O	O:0.994923
can't	O	O:0.998303
comment	O	O:0.984964
on	O	O:0.999777
a	O	O:0.998003
numpy	O	O:0.992785
array	O	O:0.998072
as	O	O:0.997268
I	O	O:0.992515
haven't	O	O:0.997510
used	O	O:0.965963
one	O	O:0.992498
before	O	O:0.963320
,	O	O:0.996952
but	O	O:0.997601
for	O	O:0.999338
using	O	O:0.999282
a	O	O:0.994774
list	O	O:0.855566
of	O	O:0.997740
lists	O	O:0.926754
Python	O	O:0.981138
already	O	O:0.993775
has	O	O:0.997508
built	O	O:0.976340
in	O	O:0.994436
support	O	O:0.792976
.	O	O:0.988353
	
If	O	O:0.978598
`	O	O:0.999012
finer_fxy	O	B-API:0.648283
`	O	O:0.998416
is	O	O:0.998191
stored	O	O:0.956501
in	O	O:0.998068
the	O	O:0.997408
probably-default	O	O:0.686038
`	O	O:0.997734
float64	O	O:0.565325
`	O	O:0.999246
s	O	O:0.843175
,	O	O:0.999910
this	O	O:0.995727
would	O	O:0.999740
take	O	O:0.999127
about	O	O:0.999458
64	O	O:0.998087
GiB	O	O:0.985889
of	O	O:0.991079
memory	O	O:0.933631
;	O	O:0.999019
not	O	O:0.996030
surprising	O	O:0.998775
that	O	O:0.993046
you're	O	O:0.997316
running	O	O:0.994395
out	O	O:0.987143
.	O	O:0.992222
	
Sebastian's	O	O:0.976894
solution	O	O:0.979809
for	O	O:0.999734
a	O	O:0.996810
way	O	O:0.917983
around	O	O:0.986854
the	O	O:0.995980
integer-values-only	O	O:0.810341
restriction	O	O:0.969673
and	O	O:0.999705
big-values	O	O:0.881954
problem	O	O:0.944199
.	O	O:0.984474
	
This	O	O:0.985548
allows	O	O:0.989945
the	O	O:0.999220
column	O	O:0.997355
to	O	O:0.999196
hold	O	O:0.999720
float	O	O:0.994643
values	O	O:0.988649
at	O	O:0.998750
first	O	O:0.994713
,	O	O:0.998283
and	O	O:0.999752
strings	O	O:0.965152
later	O	O:0.972080
.	O	O:0.995675
	
Efficient	O	O:0.979822
slicing	O	O:0.995212
of	O	O:0.998894
matrices	O	O:0.989278
using	O	O:0.997477
matrix	O	O:0.975488
multiplication	O	O:0.983423
,	O	O:0.998846
with	O	O:0.995192
Python	O	O:0.988733
,	O	O:0.999518
NumPy	O	O:0.986235
,	O	O:0.995811
SciPy	O	O:0.977544
	
Is	O	O:0.995921
there	O	O:0.999231
a	O	O:0.999651
more	O	O:0.953048
compact	O	O:0.992780
way	O	O:0.995912
to	O	O:0.998024
operate	O	O:0.998450
on	O	O:0.999450
array	O	O:0.997665
elements	O	O:0.998384
,	O	O:0.999120
without	O	O:0.997650
having	O	O:0.990703
to	O	O:0.992676
use	O	O:0.999476
the	O	O:0.997482
standard	O	O:0.959901
for	O	O:0.996662
loop	O	O:0.968306
.?	O	O:0.942371
	
Please	O	O:0.989517
look	O	O:0.969927
at	O	O:0.999780
this	O	O:0.966940
answer	O	O:0.965787
:	O	O:0.987932
#URL	O	O:0.984598
	
When	O	O:0.994334
I	O	O:0.997962
tried	O	O:0.998330
this	O	O:0.982651
,	O	O:0.998661
I	O	O:0.997166
got	O	O:0.999469
sort	O	O:0.948277
of	O	O:0.998904
similar	O	O:0.993154
shaped	O	O:0.995131
"	O	O:0.998265
tiles	O	O:0.969409
"	O	O:0.998344
of	O	O:0.999194
different	O	O:0.996067
colors	O	O:0.944927
rather	O	O:0.997851
than	O	O:0.987657
3	O	O:0.979926
Gaussian	O	O:0.972365
humps	O	O:0.973104
.	O	O:0.985527
	
I	O	O:0.996339
created	O	O:0.989827
the	O	O:0.994780
first	O	O:0.989140
array	O	O:0.996969
like	O	O:0.996085
this	O	O:0.991624
:	O	O:0.996853
	
(	O	O:0.988198
Note	O	O:0.999577
that	O	O:0.998040
I	O	O:0.999676
can't	O	O:0.999356
imagine	O	O:0.993352
any	O	O:0.997574
reason	O	O:0.986899
why	O	O:0.998984
this	O	O:0.995846
should	O	O:0.999565
be	O	O:0.999200
necessary	O	O:0.999223
.	O	O:0.994324
)	O	O:0.996806
	
SOLUTION	O	O:0.850173
:	O	O:0.997469
i	O	O:0.997809
have	O	O:0.999796
some	O	O:0.998381
scattered	O	O:0.993881
points	O	O:0.848529
(	O	O:0.995684
i	O	O:0.992181
don't	O	O:0.999337
know	O	O:0.991049
how	O	O:0.999724
many	O	O:0.984243
)	O	O:0.997925
and	O	O:0.998917
i	O	O:0.997233
want	O	O:0.988297
to	O	O:0.994766
reduce	O	O:0.997505
it	O	O:0.998566
to	O	O:0.999847
a	O	O:0.999890
8	O	O:0.923983
meaning	O	O:0.990331
point	O	O:0.995188
.	O	O:0.999436
one	O	O:0.999471
of	O	O:0.998371
the	O	O:0.993952
technique	O	O:0.998763
i	O	O:0.994024
can	O	O:0.998943
use	O	O:0.998391
is	O	O:0.997860
to	O	O:0.998853
clusterize	O	O:0.999962
them	O	O:0.994549
with	O	O:0.999758
some	O	O:0.997446
cluster	O	O:0.985648
algorithms	O	O:0.985177
.	O	O:0.990989
	
that	O	O:0.991537
blas	O	O:0.754447
is	O	O:0.998959
reference	O	O:0.997265
blas	O	O:0.975074
from	O	O:0.995929
netlib	O	O:0.969755
-	O	O:0.999410
the	O	O:0.997153
slowest	O	O:0.988493
blas	O	O:0.767381
around	O	O:0.985159
.	O	O:0.994010
install	O	O:0.990682
atlas	O	O:0.919744
or	O	O:0.998107
mkl	O	O:0.975812
instead	O	O:0.997869
.	O	O:0.991118
	
EDIT	O	O:0.856723
:	O	O:0.995331
Answer	O	O:0.995625
updated	O	O:0.988556
for	O	O:0.999103
a	O	O:0.988765
2D	O	O:0.770917
array	O	O:0.975601
.	O	O:0.978657
	
But	O	O:0.997187
you	O	O:0.999772
lose	O	O:0.997330
a	O	O:0.999785
lot	O	O:0.978974
of	O	O:0.998717
NumPy	O	O:0.971971
power	O	O:0.996139
that	O	O:0.975500
way	O	O:0.991527
.	O	O:0.992838
	
Because	O	O:0.994334
I	O	O:0.999444
view	O	O:0.878819
doesn't	O	O:0.993645
really	O	O:0.995484
have	O	O:0.999027
to	O	O:0.999509
do	O	O:0.999889
with	O	O:0.999068
filtering	O	O:0.971109
,	O	O:0.999683
but	O	O:0.997043
rather	O	O:0.997888
with	O	O:0.999769
different	O	O:0.999183
representation	O	O:0.995943
of	O	O:0.998396
the	O	O:0.999522
same	O	O:0.998970
data	O	O:0.988530
.	O	O:0.997464
	
@USER	O	O:0.925380
,	O	O:0.998224
not	O	O:0.997938
sure	O	O:0.999152
what	O	O:0.997506
you	O	O:0.999900
mean	O	O:0.999723
by	O	O:0.996428
"	O	O:0.999184
changing	O	O:0.996309
original	O	O:0.987919
values	O	O:0.941197
"	O	O:0.989620
.	O	O:0.990946
	
this	O	O:0.986577
could	O	O:0.999561
also	O	O:0.999777
be	O	O:0.999978
achieved	O	O:0.994417
elegantly	O	O:0.989482
with	O	O:0.992173
numpy's	O	O:0.955986
`	O	O:0.999409
where	O	O:0.959874
`	O	O:0.997246
function	O	O:0.984854
	
I	O	O:0.998715
need	O	O:0.999173
to	O	O:0.999433
specify	O	O:0.999419
datatypes	O	O:0.982016
for	O	O:0.998886
all	O	O:0.998853
numerical	O	O:0.981123
types	O	O:0.983242
since	O	O:0.992047
I	O	O:0.999768
care	O	O:0.999182
about	O	O:0.983200
int	O	O:0.754124
8/	O	O:0.977126
16	O	O:0.893036
/	O	O:0.992567
32	O	O:0.985307
,	O	O:0.997891
etc	O	O:0.979861
,	O	O:0.999070
but	O	O:0.998999
I	O	O:0.999123
would	O	O:0.999925
like	O	O:0.998870
to	O	O:0.999835
benefit	O	O:0.999873
from	O	O:0.998594
the	O	O:0.999071
auto	O	O:0.966280
string	O	O:0.994793
length	O	O:0.993088
detection	O	O:0.993624
that	O	O:0.994578
works	O	O:0.999371
if	O	O:0.998892
I	O	O:0.997999
don't	O	O:0.999667
specify	O	O:0.940918
datatypes	O	O:0.976421
.	O	O:0.983581
	
In	O	O:0.995655
the	O	O:0.998799
following	O	O:0.992033
trivial	O	O:0.961393
function	O	O:0.999221
,	O	O:0.999467
I	O	O:0.999842
have	O	O:0.998178
declared	O	O:0.990088
the	O	O:0.999293
numpy	O	O:0.980539
array	O	O:0.992389
argument	O	O:0.987542
`	O	O:0.999237
arr	O	O:0.879963
`	O	O:0.999803
using	O	O:0.986348
the	O	O:0.985074
buffer	O	O:0.632136
syntax	O	O:0.982013
.	O	O:0.986946
	
I	O	O:0.994289
remember	O	O:0.995629
that	O	O:0.984229
there	O	O:0.992682
was	O	O:0.999211
a	O	O:0.999245
smart	O	O:0.961581
trick	O	O:0.998801
about	O	O:0.996433
turning	O	O:0.981880
on	O	O:0.989366
and	O	O:0.999050
off	O	O:0.999134
the	O	O:0.998932
right	O	O:0.995109
intersections	O	O:0.997527
of	O	O:0.999785
rows	O	O:0.990030
and	O	O:0.999913
columns	O	O:0.999690
to	O	O:0.999067
turn	O	O:0.999502
off	O	O:0.997806
one-by-one	O	O:0.991247
all	O	O:0.997926
the	O	O:0.997706
lightbulbs	O	O:0.762467
,	O	O:0.997254
but	O	O:0.998606
it	O	O:0.999430
wont	O	O:0.999864
come	O	O:0.999480
back	O	O:0.996511
to	O	O:0.999373
my	O	O:0.999458
mind	O	O:0.989369
...	O	O:0.991957
	
However	O	O:0.998507
this	O	O:0.997786
code	O	O:0.980961
is	O	O:0.999407
to	O	O:0.999528
slow	O	O:0.997344
in	O	O:0.999488
the	O	O:0.999015
current	O	O:0.979417
version	O	O:0.989466
,	O	O:0.997666
and	O	O:0.999583
I	O	O:0.998907
am	O	O:0.998240
wondering	O	O:0.991589
wheater	O	O:0.983783
there	O	O:0.987323
is	O	O:0.999625
a	O	O:0.996831
faster	O	O:0.862793
solution	O	O:0.992762
.	O	O:0.985800
thanks	O	O:0.954353
!	O	O:0.985991
	
This	O	O:0.991828
would	O	O:0.999140
probably	O	O:0.999357
be	O	O:0.999616
the	O	O:0.999807
most	O	O:0.963635
efficient	O	O:0.994383
way	O	O:0.998209
to	O	O:0.999046
access	O	O:0.999555
a	O	O:0.998726
numpy	O	O:0.981534
array	O	O:0.998542
stored	O	O:0.983392
on	O	O:0.998816
disk	O	O:0.920567
.	O	O:0.996641
	
hmmmmm	O	O:0.832272
,	O	O:0.998174
probably	O	O:0.994802
it	O	O:0.999359
will	O	O:0.999207
help	O	O:0.999611
some	O	O:0.998501
others	O	O:0.997845
to	O	O:0.999828
sort	O	O:0.999811
dictionarys	O	O:0.996509
or	O	O:0.999547
to	O	O:0.999759
prevent	O	O:0.999629
from	O	O:0.999359
using	O	O:0.998310
commands	O	O:0.996552
like	O	O:0.978555
sorted	O	O:0.989662
=	O	O:0.969839
sorted	O	O:0.613519
(	O	O:0.997330
...	O	O:0.983579
)	O	O:0.996822
.	O	O:0.988765
	
The	O	O:0.987931
ticket	O	O:0.993431
simply	O	O:0.998522
spoke	O	O:0.996837
of	O	O:0.998492
random	O	O:0.923672
number	O	O:0.997119
seeding	O	O:0.989726
with	O	O:0.996897
64-bit	O	O:0.988166
,	O	O:0.999604
perhaps	O	O:0.999418
its	O	O:0.998796
referring	O	O:0.997199
to	O	O:0.999537
a	O	O:0.999923
different	O	O:0.991310
random	O	O:0.953813
number	O	O:0.985703
generator	O	O:0.988285
.	O	O:0.995275
	
Not	O	O:0.996256
really	O	O:0.995229
elegant	O	O:0.992202
at	O	O:0.996757
all	O	O:0.994590
but	O	O:0.998562
you	O	O:0.999108
can	O	O:0.999782
get	O	O:0.999938
close	O	O:0.998110
to	O	O:0.999919
what	O	O:0.999816
you	O	O:0.999865
want	O	O:0.999737
using	O	O:0.999877
a	O	O:0.995447
tuple	O	O:0.791309
to	O	O:0.999328
store	O	O:0.995626
pointers	O	O:0.995021
to	O	O:0.999295
the	O	O:0.999848
arrays	O	O:0.953053
.	O	O:0.991589
	
For	O	O:0.993995
example	O	O:0.986481
I	O	O:0.998943
am	O	O:0.999196
looking	O	O:0.978361
for	O	O:0.996063
4.2	O	O:0.710020
but	O	O:0.996079
I	O	O:0.999749
know	O	O:0.996051
in	O	O:0.995935
the	O	O:0.996511
array	O	O:0.992283
there	O	O:0.978563
is	O	O:0.999060
no	O	O:0.986670
4.2	O	O:0.887060
but	O	O:0.996900
I	O	O:0.999594
want	O	O:0.999029
to	O	O:0.993574
return	O	O:0.996799
the	O	O:0.999112
index	O	O:0.999029
of	O	O:0.999639
the	O	O:0.999398
value	O	O:0.998941
4.1	O	O:0.959780
instead	O	O:0.999543
of	O	O:0.997153
4.4	O	O:0.776141
.	O	O:0.992208
	
Print	O	O:0.877840
'	O	O:0.995635
Length	O	O:0.998138
of	O	O:0.999046
together	O	O:0.747962
'	O	O:0.999414
goes	O	O:0.996810
just	O	O:0.993919
before	O	O:0.995955
the	O	O:0.985258
matrix	O	O:0.982621
line	O	O:0.977939
.	O	O:0.993416
	
solve	O	O:0.973928
a	O	O:0.996976
nonlinear	O	O:0.813164
equation	O	O:0.990164
at	O	O:0.996879
several	O	O:0.997889
intermediate	O	O:0.988861
points	O	O:0.981247
of	O	O:0.998864
a	O	O:0.994235
calculation	O	O:0.967586
,	O	O:0.998871
not	O	O:0.999733
just	O	O:0.999110
as	O	O:0.999868
the	O	O:0.999831
final	O	O:0.971621
result	O	O:0.994664
.	O	O:0.991467
	
Find	O	O:0.979043
where	O	O:0.989640
they're	O	O:0.998422
located	O	O:0.984306
at	O	O:0.984490
(	O	O:0.992828
assumes	O	O:0.995669
the	O	O:0.999223
data	O	O:0.913900
is	O	O:0.998452
sorted	O	O:0.926779
!!	O	O:0.945486
):	O	O:0.974855
#CODE	O	O:0.989078
	
You	O	O:0.996675
need	O	O:0.996557
Python	O	O:0.998224
to	O	O:0.999842
keep	O	O:0.999619
track	O	O:0.992966
of	O	O:0.999897
your	O	O:0.979847
vector	O	O:0.997829
so	O	O:0.999281
that	O	O:0.997940
it	O	O:0.999723
can	O	O:0.999777
be	O	O:0.999784
deleted	O	O:0.996824
*	O	O:0.996925
after	O	O:0.983171
*	O	O:0.997650
the	O	O:0.997840
numpy	O	O:0.975143
array	O	O:0.979736
.	O	O:0.989883
	
I	O	O:0.998507
find	O	O:0.998620
that	O	O:0.997677
I	O	O:0.999927
have	O	O:0.999221
to	O	O:0.999147
first	O	O:0.999765
build	O	O:0.983011
a	O	O:0.996908
list	O	O:0.819204
and	O	O:0.999781
then	O	O:0.997869
cast	O	O:0.871445
it	O	O:0.997042
(	O	O:0.999577
using	O	O:0.997534
"	O	O:0.990470
array	O	O:0.960513
")	O	O:0.994914
to	O	O:0.994926
an	O	O:0.999680
array	O	O:0.988721
.	O	O:0.991059
	
I	O	O:0.998797
have	O	O:0.999081
an	O	O:0.998375
numpy	O	O:0.997637
one	O	O:0.998311
dimensional	O	O:0.981925
array	O	O:0.995196
c	O	O:0.992995
that	O	O:0.992193
is	O	O:0.999338
supposed	O	O:0.997722
to	O	O:0.999590
be	O	O:0.999907
filled	O	O:0.991995
with	O	O:0.997198
the	O	O:0.999634
contents	O	O:0.995871
of	O	O:0.992514
	
but	O	O:0.996941
the	O	O:0.999016
issue	O	O:0.991360
now	O	O:0.994059
,	O	O:0.999866
when	O	O:0.997489
I	O	O:0.998646
am	O	O:0.999875
trying	O	O:0.991050
to	O	O:0.999663
save	O	O:0.997604
the	O	O:0.999820
name	O	O:0.994660
of	O	O:0.998700
the	O	O:0.999600
file	O	O:0.999045
as	O	O:0.999842
well	O	O:0.994960
in	O	O:0.999576
the	O	O:0.997948
csv	O	O:0.995534
file	O	O:0.996069
like	O	O:0.997634
this	O	O:0.991605
:	O	O:0.997219
#CODE	O	O:0.996006
	
After	O	O:0.987650
you	O	O:0.997469
do	O	O:0.999384
this	O	O:0.999543
no	O	O:0.998691
matter	O	O:0.998321
where	O	O:0.998829
the	O	O:0.995945
template	O	O:0.980677
object	O	O:0.981848
is	O	O:0.997397
in	O	O:0.999146
a	O	O:0.993632
calculation	O	O:0.947884
.	O	O:0.985945
	
So	O	O:0.995961
the	O	O:0.998985
easiest	O	O:0.982421
thing	O	O:0.996775
to	O	O:0.999119
do	O	O:0.999752
would	O	O:0.999430
be	O	O:0.999686
to	O	O:0.999957
take	O	O:0.999780
a	O	O:0.999725
sample	O	O:0.986668
of	O	O:0.999189
say	O	O:0.992943
,	O	O:0.999813
1000	O	O:0.984886
points	O	O:0.983980
,	O	O:0.999511
from	O	O:0.999935
your	O	O:0.997916
data	O	O:0.977250
:	O	O:0.998516
#CODE	O	O:0.997498
	
Your	O	O:0.988938
array	O	O:0.998347
consists	O	O:0.990323
of	O	O:0.979581
:	O	O:0.985948
#CODE	O	O:0.997538
	
The	O	O:0.995066
final	O	O:0.978055
DF	O	O:0.999886
should	O	O:0.999310
have	O	O:0.998763
as	O	O:0.999922
many	O	O:0.999074
columns	O	O:0.998204
as	O	O:0.999174
all	O	O:0.998956
the	O	O:0.999505
df	O	O:0.992442
columns	O	O:0.998961
added	O	O:0.993630
together	O	O:0.991003
,	O	O:0.999262
so	O	O:0.997710
it	O	O:0.998394
grow	O	O:0.985153
additively	O	O:0.905892
and	O	O:0.999105
not	O	O:0.996825
be	O	O:0.996255
combinatorial	O	O:0.911398
.	O	O:0.921966
	
I'm	O	O:0.990597
sorting	O	O:0.997146
the	O	O:0.999758
cells	O	O:0.986734
of	O	O:0.998809
the	O	O:0.999376
matrix	O	O:0.999427
by	O	O:0.993829
the	O	O:0.999105
float	O	O:0.890506
value	O	O:0.995508
,	O	O:0.998890
producing	O	O:0.999464
a	O	O:0.998571
list	O	O:0.964558
of	O	O:0.996843
`	O	O:0.985756
(	O	O:0.996642
row	O	O:0.997921
,	O	O:0.998344
col	O	O:0.985281
,	O	O:0.999381
value	O	O:0.998554
)`	O	O:0.988727
tuples	O	O:0.957261
.	O	O:0.990431
	
Is	O	O:0.996300
it	O	O:0.998846
essential	O	O:0.998523
that	O	O:0.999101
you	O	O:0.999914
need	O	O:0.999872
a	O	O:0.999633
numpy	O	O:0.980906
array	O	O:0.992938
?	O	O:0.991999
	
Mh	O	O:0.642203
.	O	O:0.987573
but	O	O:0.998607
look	O	O:0.980472
at	O	O:0.999301
this	O	O:0.946003
:	O	O:0.994947
	
All	O	O:0.993224
variables	O	O:0.980628
are	O	O:0.999167
dependent	O	O:0.996447
on	O	O:0.998764
each	O	O:0.977066
other	O	O:0.996066
and	O	O:0.999513
I	O	O:0.997883
am	O	O:0.998838
only	O	O:0.990729
looking	O	O:0.998840
for	O	O:0.999019
local	O	O:0.988834
minima	O	O:0.995191
from	O	O:0.994256
the	O	O:0.998678
initial	O	O:0.981464
guess	O	O:0.977977
.	O	O:0.990296
	
The	O	O:0.995602
basic	O	O:0.986088
idea	O	O:0.952335
is	O	O:0.998070
to	O	O:0.998246
simply	O	O:0.999773
run	O	O:0.993408
all	O	O:0.998515
the	O	O:0.999718
usual	O	O:0.999311
steps	O	O:0.998957
of	O	O:0.999827
a	O	O:0.998773
root	O	O:0.978647
finder	O	O:0.987871
in	O	O:0.999230
parallel	O	O:0.994986
on	O	O:0.999505
a	O	O:0.997738
vector	O	O:0.998967
of	O	O:0.999210
variables	O	O:0.978366
,	O	O:0.999854
using	O	O:0.999811
a	O	O:0.959657
function	O	O:0.992682
that	O	O:0.996403
can	O	O:0.999642
be	O	O:0.999937
evaluated	O	O:0.998919
on	O	O:0.998779
a	O	O:0.997463
vector	O	O:0.998391
of	O	O:0.998949
variables	O	O:0.941377
and	O	O:0.999608
equivalent	O	O:0.969444
vector	O	O:0.883277
(	O	O:0.997601
s	O	O:0.992061
)	O	O:0.999699
of	O	O:0.998213
parameters	O	O:0.986645
that	O	O:0.998652
define	O	O:0.995463
the	O	O:0.999746
individual	O	O:0.987539
component	O	O:0.993295
functions	O	O:0.987286
.	O	O:0.992349
	
Hence	O	O:0.994548
,	O	O:0.999470
with	O	O:0.998408
NetworkX	O	O:0.994587
,	O	O:0.999715
you	O	O:0.999267
can	O	O:0.999867
put	O	O:0.999171
in	O	O:0.999827
an	O	O:0.998203
adjacency	O	O:0.982598
matrix	O	O:0.983172
and	O	O:0.999770
find	O	O:0.995671
out	O	O:0.996599
which	O	O:0.998317
authors	O	O:0.983875
are	O	O:0.999127
clustered	O	O:0.996995
together	O	O:0.943222
.	O	O:0.987426
	
The	O	O:0.991253
issue	O	O:0.998408
your	O	O:0.992541
having	O	O:0.986926
more	O	O:0.979624
likely	O	O:0.918466
is	O	O:0.999483
a	O	O:0.994088
python	O	O:0.988631
mmap	O	O:0.712297
issue	O	O:0.991763
,	O	O:0.998508
since	O	O:0.997008
python	O	O:0.998810
mmaps	O	O:0.998790
handle	O	O:0.992430
all	O	O:0.998386
the	O	O:0.995738
memory	O	O:0.981089
mapping	O	O:0.961335
and	O	O:0.999648
file	O	O:0.994215
closing	O	O:0.952586
for	O	O:0.998311
numpy	O	O:0.946450
memmaps	O	O:0.901919
.	O	O:0.972902
	
So	O	O:0.991322
far	O	O:0.985451
,	O	O:0.999559
I'm	O	O:0.997358
sticking	O	O:0.982234
with	O	O:0.997410
C++	O	O:0.992588
-	O	O:0.999226
on	O	O:0.999446
my	O	O:0.998566
tests	O	O:0.996668
,	O	O:0.999737
at	O	O:0.999796
least	O	O:0.997507
2	O	O:0.998690
orders	O	O:0.986259
of	O	O:0.997650
magnitude	O	O:0.989849
faster	O	O:0.966594
!	O	O:0.989295
	
Sorting	O	O:0.995483
ends	O	O:0.972545
up	O	O:0.996647
being	O	O:0.989201
the	O	O:0.997747
slowest	O	O:0.946754
step	O	O:0.994504
but	O	O:0.996760
it's	O	O:0.998695
still	O	O:0.997600
faster	O	O:0.996296
if	O	O:0.998007
m	O	O:0.938913
is	O	O:0.999059
large	O	O:0.924583
because	O	O:0.996249
the	O	O:0.982768
n*log	O	B-API:0.579613
(	O	O:0.998140
n	O	O:0.987844
)	O	O:0.999677
sort	O	O:0.631446
is	O	O:0.998488
faster	O	O:0.927349
than	O	O:0.937999
(	O	O:0.995824
n*m	O	O:0.966402
)	O	O:0.997314
.	O	O:0.983919
	
Basically	O	O:0.995084
,	O	O:0.999128
I	O	O:0.999021
am	O	O:0.998639
getting	O	O:0.994313
a	O	O:0.997892
memory	O	O:0.981506
error	O	O:0.987809
in	O	O:0.998706
python	O	O:0.997131
when	O	O:0.996727
trying	O	O:0.997311
to	O	O:0.999632
perform	O	O:0.998187
an	O	O:0.999421
algebraic	O	O:0.994090
operation	O	O:0.994014
on	O	O:0.998998
a	O	O:0.998230
numpy	O	O:0.956139
matrix	O	O:0.989034
.	O	O:0.987729
	
Surely	O	O:0.995453
there	O	O:0.997835
must	O	O:0.998455
be	O	O:0.999916
a	O	O:0.999675
way	O	O:0.977132
to	O	O:0.999138
populate	O	O:0.999837
a	O	O:0.998805
boost	O	O:0.688412
::	O	O:0.998004
python	O	O:0.959882
::	O	O:0.995666
numeric	O	O:0.795950
::	O	O:0.993932
array	O	O:0.998342
with	O	O:0.999039
data	O	O:0.998962
from	O	O:0.999895
a	O	O:0.998997
simple	O	O:0.964741
std	O	O:0.747704
::	O	O:0.994693
vector	O	O:0.994097
without	O	O:0.990375
having	O	O:0.989186
to	O	O:0.995868
get	O	O:0.999861
some	O	O:0.998471
3rd	O	O:0.995832
party	O	O:0.986047
library	O	O:0.982876
.	O	O:0.987627
	
Here	O	O:0.984402
again	O	O:0.999056
a	O	O:0.994514
if	O	O:0.982191
statement	O	O:0.999250
could	O	O:0.997621
do	O	O:0.998301
,	O	O:0.999546
but	O	O:0.996500
I	O	O:0.998752
am	O	O:0.999601
wondering	O	O:0.989192
if	O	O:0.999216
there	O	O:0.981834
is	O	O:0.999429
a	O	O:0.997513
workarouns	O	O:0.712849
and	O	O:0.999804
a	O	O:0.997780
Python	O	O:0.869058
library	O	O:0.997412
where	O	O:0.995160
negative	O	O:0.988234
exposant	O	O:0.899419
is	O	O:0.995820
allowed	O	O:0.946097
.	O	O:0.991823
	
The	O	O:0.987738
key	O	O:0.996616
point	O	O:0.997876
here	O	O:0.928121
is	O	O:0.999266
that	O	O:0.989055
Tabular	O	O:0.988348
and	O	O:0.998977
NumPy	O	O:0.995203
set	O	O:0.976674
certain	O	O:0.987459
standards	O	O:0.961715
for	O	O:0.999743
what	O	O:0.998014
counts	O	O:0.988402
as	O	O:0.997480
"	O	O:0.998901
fast	O	O:0.944931
"	O	O:0.998678
or	O	O:0.993784
"	O	O:0.998980
slow	O	O:0.861462
"	O	O:0.995629
--	O	O:0.994479
and	O	O:0.999523
then	O	O:0.999518
,	O	O:0.999937
force	O	O:0.991052
you	O	O:0.999053
to	O	O:0.999732
be	O	O:0.999985
explicit	O	O:0.999476
about	O	O:0.990076
operations	O	O:0.991063
that	O	O:0.985225
are	O	O:0.999630
going	O	O:0.996243
to	O	O:0.998391
be	O	O:0.999727
slow	O	O:0.962982
.	O	O:0.985282
	
Asume	O	O:0.962151
that	O	O:0.999476
your	O	O:0.998582
numpy	O	O:0.993152
module	O	O:0.987861
is	O	O:0.998442
located	O	O:0.947807
at	O	O:0.992014
/	O	O:0.973558
Users	O	O:0.957896
/	O	O:0.982514
Me	O	O:0.911710
/	O	O:0.993518
python	O	O:0.980336
/	O	O:0.994449
modules	O	O:0.947578
directory	O	O:0.989835
.	O	O:0.989255
	
I	O	O:0.982733
am	O	O:0.998175
not	O	O:0.997214
responsible	O	O:0.996714
from	O	O:0.997953
any	O	O:0.996899
brain	O	O:0.998308
damage	O	O:0.997381
resulting	O	O:0.997553
from	O	O:0.998967
attempting	O	O:0.979168
to	O	O:0.998545
understand	O	O:0.999759
this	O	O:0.996876
code	O	O:0.966757
.	O	O:0.995764
	
There	O	O:0.997641
a	O	O:0.998586
plenty	O	O:0.993898
of	O	O:0.999237
places	O	O:0.997474
where	O	O:0.997228
you're	O	O:0.995545
inadvertently	O	O:0.997548
creating	O	O:0.998689
additional	O	O:0.986531
temporary	O	O:0.969857
arrays	O	O:0.933101
,	O	O:0.995688
but	O	O:0.994230
they're	O	O:0.995291
mostly	O	O:0.995013
irrelevant	O	O:0.997723
,	O	O:0.998224
as	O	O:0.996876
they're	O	O:0.996317
overwhelmed	O	O:0.993377
by	O	O:0.998839
what	O	O:0.997317
goes	O	O:0.983246
on	O	O:0.999255
during	O	O:0.992944
the	O	O:0.999074
call	O	O:0.927263
to	O	O:0.996996
`	O	O:0.999487
select	O	B-API:0.824259
`	O	O:0.998940
.	O	O:0.978659
	
The	O	O:0.996180
fact	O	O:0.995937
that	O	O:0.997008
you	O	O:0.999202
are	O	O:0.999860
using	O	O:0.998726
`	O	O:0.975504
object	O	O:0.740765
`	O	O:0.996229
arrays	O	B-API:0.725578
(	O	O:0.997525
not	O	O:0.997152
very	O	O:0.983052
common	O	O:0.936975
and	O	O:0.998119
not	O	O:0.997545
very	O	O:0.983569
memory-efficient	O	O:0.976843
)	O	O:0.997193
presents	O	O:0.995528
a	O	O:0.999531
particular	O	O:0.973091
problem	O	O:0.998024
when	O	O:0.996764
trying	O	O:0.998379
to	O	O:0.999805
determine	O	O:0.996322
the	O	O:0.999312
index	O	O:0.998191
of	O	O:0.998325
non-None	O	O:0.991551
array	O	O:0.998855
items	O	O:0.969864
.	O	O:0.987586
	
where	O	O:0.994502
things	O	O:0.995432
improve	O	O:0.988737
as	O	O:0.999384
the	O	O:0.998234
number	O	O:0.994803
of	O	O:0.999120
bits	O	O:0.986433
increases	O	O:0.993692
.	O	O:0.994446
	
Really	O	O:0.964433
,	O	O:0.998997
4D	O	O:0.981821
arrays	O	O:0.964949
are	O	O:0.998785
just	O	O:0.999032
1D	O	O:0.997388
arrays	O	O:0.951674
in	O	O:0.997113
memory	O	O:0.982832
anyway	O	O:0.962355
(	O	O:0.999037
Unless	O	O:0.999163
you	O	O:0.999462
really	O	O:0.999443
have	O	O:0.999107
view	O	O:0.924455
objects	O	O:0.990605
,	O	O:0.987896
but	O	O:0.997710
it	O	O:0.997577
should	O	O:0.999638
still	O	O:0.999857
work	O	O:0.999242
with	O	O:0.999765
those	O	O:0.999520
as	O	O:0.999804
well	O	O:0.989548
)	O	O:0.999112
	
I'll	O	O:0.992688
add	O	O:0.985402
comments	O	O:0.996277
to	O	O:0.998385
explain	O	O:0.998819
things	O	O:0.983583
in	O	O:0.999598
a	O	O:0.998479
bit	O	O:0.896714
.	O	O:0.989032
	
I	O	O:0.994945
was	O	O:0.997936
assuming	O	O:0.996009
that	O	O:0.998052
the	O	O:0.999097
rgb	O	O:0.933234
and	O	O:0.999401
ycc	O	O:0.949874
matrices	O	O:0.980611
were	O	O:0.996117
just	O	O:0.999219
a	O	O:0.999176
matrix	O	O:0.985987
that	O	O:0.997896
had	O	O:0.996244
as	O	O:0.999874
many	O	O:0.998226
rows	O	O:0.990390
as	O	O:0.998243
pixels	O	O:0.966692
and	O	O:0.999834
a	O	O:0.999435
column	O	O:0.958563
per	O	O:0.991173
colour	O	O:0.980576
component	O	O:0.978080
.	O	O:0.986189
	
For	O	O:0.990607
example	O	O:0.991832
,	O	O:0.999662
suppose	O	O:0.996400
`	O	O:0.999804
a	O	O:0.994182
=	O	O:0.988929
ones	O	O:0.972767
((	O	O:0.873862
3	O	O:0.994334
,	O	O:0.995088
3	O	O:0.987136
))`	O	O:0.866066
.	O	O:0.988455
	
Therefore	O	O:0.990908
,	O	O:0.998440
n	O	O:0.979029
and	O	O:0.998626
m	O	O:0.994004
correspond	O	O:0.994556
to	O	O:0.998997
indices	O	O:0.998886
in	O	O:0.998610
the	O	O:0.998770
array	O	O:0.982396
,	O	O:0.995350
but	O	O:0.993463
I'm	O	O:0.997785
not	O	O:0.999516
sure	O	O:0.996623
how	O	O:0.996839
?	O	O:0.996166
	
Update	O	O:0.878946
:	O	O:0.996714
As	O	O:0.999394
mentioned	O	O:0.995553
in	O	O:0.999715
my	O	O:0.997055
comment	O	O:0.996085
below	O	O:0.994092
,	O	O:0.999131
I	O	O:0.999025
should	O	O:0.999744
have	O	O:0.994628
stated	O	O:0.997551
that	O	O:0.996062
I'm	O	O:0.999123
trying	O	O:0.998235
to	O	O:0.998749
do	O	O:0.999903
this	O	O:0.997351
on	O	O:0.999049
2D	O	O:0.987880
arrays	O	O:0.982386
,	O	O:0.998765
and	O	O:0.999873
therefore	O	O:0.999281
get	O	O:0.999805
a	O	O:0.999919
set	O	O:0.956634
of	O	O:0.999568
2D	O	O:0.988850
indices	O	O:0.995687
back	O	O:0.912622
.	O	O:0.994552
	
Need	O	O:0.988361
to	O	O:0.998804
add	O	O:0.999835
a	O	O:0.999579
check	O	O:0.977370
for	O	O:0.999730
that	O	O:0.972659
,	O	O:0.999566
but	O	O:0.999551
otherwise	O	O:0.995176
thanks	O	O:0.989052
!	O	O:0.990453
	
I	O	O:0.998145
think	O	O:0.997509
you	O	O:0.997594
just	O	O:0.999321
want	O	O:0.999332
`	O	O:0.998335
label	O	O:0.968207
==	O	O:0.997316
num	O	O:0.879772
`	O	O:0.999158
where	O	O:0.901625
`	O	O:0.999567
num	O	O:0.523141
`	O	O:0.997193
is	O	O:0.996842
the	O	O:0.999523
number	O	O:0.991138
of	O	O:0.996169
the	O	O:0.997566
object	O	O:0.995988
in	O	O:0.995578
`	O	O:0.999205
label	O	O:0.931779
`	O	O:0.993037
(	O	O:0.996129
the	O	O:0.999174
labeled	O	O:0.956016
array	O	O:0.989672
)	O	O:0.997549
.	O	O:0.988717
	
My	O	O:0.987967
question	O	O:0.947947
is	O	O:0.998811
how	O	O:0.994682
can	O	O:0.999501
I	O	O:0.999981
go	O	O:0.999744
thru	O	O:0.978444
the	O	O:0.998855
array	O	O:0.997205
to	O	O:0.998500
access	O	O:0.999081
the	O	O:0.999023
object	O	O:0.989264
in	O	O:0.998831
the	O	O:0.997827
array	O	O:0.988162
?	O	O:0.992953
	
The	O	O:0.993820
matrix	O	O:0.986994
in	O	O:0.999231
the	O	O:0.999106
example	O	O:0.990984
above	O	O:0.956614
is	O	O:0.998638
singular	O	O:0.717539
(	O	O:0.997377
determinant	O	O:0.989838
~	O	O:0.852612
0	O	O:0.980912
)	O	O:0.996768
.	O	O:0.970052
	
See	O	O:0.975509
the	O	O:0.998811
note	O	O:0.977510
at	O	O:0.995287
#URL	O	O:0.957493
	
would	O	O:0.998356
turn	O	O:0.996941
into	O	O:0.990027
either	O	O:0.998613
this	O	O:0.979404
array	O	O:0.972572
:	O	O:0.994504
#CODE	O	O:0.995479
	
Note	O	O:0.996246
that	O	O:0.999299
this	O	O:0.994582
is	O	O:0.999893
a	O	O:0.996976
bit	O	O:0.993582
more	O	O:0.991055
sophisticated	O	O:0.988866
than	O	O:0.996064
the	O	O:0.998303
simple	O	O:0.978779
do-it-yourself	O	O:0.980744
convolve-method	O	O:0.931078
,	O	O:0.999065
since	O	O:0.996772
it	O	O:0.999152
tries	O	O:0.999087
to	O	O:0.998526
handle	O	O:0.999449
the	O	O:0.999555
problems	O	O:0.987717
at	O	O:0.999204
the	O	O:0.999580
beginning	O	O:0.980394
and	O	O:0.999672
the	O	O:0.999837
end	O	O:0.986273
of	O	O:0.999362
the	O	O:0.999572
data	O	O:0.999581
by	O	O:0.997815
reflecting	O	O:0.986362
it	O	O:0.982593
(	O	O:0.997388
which	O	O:0.998634
may	O	O:0.997655
or	O	O:0.999200
may	O	O:0.999395
not	O	O:0.999920
work	O	O:0.998455
in	O	O:0.999960
your	O	O:0.995810
case	O	O:0.998400
...	O	O:0.996026
)	O	O:0.996239
.	O	O:0.987355
	
Usually	O	O:0.995623
,	O	O:0.999123
in	O	O:0.999402
numpy	O	O:0.997588
,	O	O:0.999855
you	O	O:0.999802
keep	O	O:0.988294
the	O	O:0.999762
string	O	O:0.999540
data	O	O:0.995977
in	O	O:0.999931
a	O	O:0.999607
separate	O	O:0.907817
array	O	O:0.982773
.	O	O:0.983293
	
Any	O	O:0.981913
idea	O	O:0.989487
what	O	O:0.992528
might	O	O:0.999181
be	O	O:0.998763
happening	O	O:0.996192
?	O	O:0.986481
	
but	O	O:0.993292
the	O	O:0.998289
size	O	O:0.942148
is	O	O:0.998416
wrong	O	O:0.987797
because	O	O:0.997306
i've	O	O:0.996970
assigned	O	O:0.998044
1000	O	O:0.980539
as	O	O:0.997585
the	O	O:0.987949
period	O	O:0.977831
size	O	O:0.971440
.	O	O:0.990194
	
This	O	O:0.964926
may	O	O:0.997966
not	O	O:0.999622
be	O	O:0.999659
perfectly	O	O:0.991256
pythonic	O	O:0.896047
(	O	O:0.998336
perhaps	O	O:0.997037
someone	O	O:0.992884
can	O	O:0.999625
think	O	O:0.999795
of	O	O:0.999909
a	O	O:0.998090
nicer	O	O:0.989568
implementation	O	O:0.998629
using	O	O:0.998966
generators	O	O:0.969515
or	O	O:0.981292
itertools	O	O:0.767010
?	O	O:0.993000
)	O	O:0.994819
but	O	O:0.997519
it	O	O:0.994417
is	O	O:0.999670
hard	O	O:0.954538
to	O	O:0.999036
imagine	O	O:0.998264
any	O	O:0.992919
method	O	O:0.999196
that	O	O:0.997917
relies	O	O:0.996990
on	O	O:0.999345
searching	O	O:0.991955
one	O	O:0.998990
point	O	O:0.996867
at	O	O:0.999766
a	O	O:0.999126
time	O	O:0.964132
beating	O	O:0.998404
this	O	O:0.996116
in	O	O:0.998272
speed	O	O:0.924397
.	O	O:0.993431
	
Thanks	O	O:0.974684
,	O	O:0.999835
your	O	O:0.996897
post	O	O:0.941261
helped	O	O:0.998641
me	O	O:0.990370
solve	O	O:0.994866
this	O	O:0.984887
problem	O	O:0.978095
.	O	O:0.990278
	
Now	O	O:0.996039
imagine	O	O:0.998469
that	O	O:0.998758
the	O	O:0.999737
next	O	O:0.993934
time	O	O:0.998491
step	O	O:0.999931
some	O	O:0.999405
values	O	O:0.997230
change	O	O:0.960243
,	O	O:0.999680
so	O	O:0.991583
should	O	O:0.998880
this	O	O:0.998548
picture	O	O:0.995665
.	O	O:0.990555
	
Since	O	O:0.991385
get_probability	O	O:0.792994
is	O	O:0.999726
a	O	O:0.988851
function	O	O:0.990079
,	O	O:0.998887
so	O	O:0.999714
what	O	O:0.996683
value	O	O:0.994458
is	O	O:0.999434
being	O	O:0.990217
passed	O	O:0.988741
to	O	O:0.998154
count	O	O:0.994227
parameter	O	O:0.997793
here	O	O:0.972193
???	O	O:0.997382
	
taking	O	O:0.972660
the	O	O:0.995802
sum	O	O:0.916187
for	O	O:0.999612
each	O	O:0.970422
column	O	O:0.990689
.	O	O:0.991370
	
You	O	O:0.990187
should	O	O:0.998544
be	O	O:0.999843
able	O	O:0.999055
to	O	O:0.999544
just	O	O:0.999916
load	O	O:0.994812
the	O	O:0.999533
entire	O	O:0.989228
thing	O	O:0.998864
into	O	O:0.979441
memory	O	O:0.996257
on	O	O:0.999254
a	O	O:0.998032
modern	O	O:0.911477
machine	O	O:0.977594
.	O	O:0.980282
	
What	O	O:0.994069
I	O	O:0.999592
want	O	O:0.998868
to	O	O:0.993486
do	O	O:0.999088
is	O	O:0.999676
to	O	O:0.997015
calculate	O	O:0.998598
the	O	O:0.999673
geographic	O	O:0.981192
distances	O	O:0.998454
between	O	O:0.998964
rows	O	O:0.948005
(	O	O:0.999242
with	O	O:0.999428
the	O	O:0.999438
special	O	O:0.993079
condition	O	O:0.999033
that	O	O:0.995978
the	O	O:0.999876
first	O	O:0.991043
element	O	O:0.939546
is	O	O:0.998672
always	O	O:0.998388
zero	O	O:0.993297
,	O	O:0.998667
at	O	O:0.999251
the	O	O:0.998502
starting	O	O:0.995173
point	O	O:0.995646
)	O	O:0.998313
.	O	O:0.988896
	
We	O	O:0.995920
can	O	O:0.999520
simply	O	O:0.999787
use	O	O:0.999785
the	O	O:0.976050
leastsq	O	B-API:0.703854
function	O	O:0.997649
to	O	O:0.999192
find	O	O:0.999766
the	O	O:0.999858
best	O	O:0.977855
coefficients	O	O:0.954562
.	O	O:0.992948
	
If	O	O:0.990279
the	O	O:0.999342
list	O	O:0.964407
of	O	O:0.997463
python	O	O:0.992002
objects	O	O:0.987818
doesn't	O	O:0.997736
grow	O	O:0.966264
at	O	O:0.999625
all	O	O:0.998478
from	O	O:0.998993
frame	O	O:0.999744
to	O	O:0.999664
frame	O	O:0.999972
,	O	O:0.999552
the	O	O:0.999040
leak	O	O:0.927821
is	O	O:0.999500
probably	O	O:0.988896
in	O	O:0.999620
the	O	O:0.997864
C	O	O:0.989435
code	O	O:0.985808
or	O	O:0.999341
the	O	O:0.999490
python-to-C	O	O:0.943490
link	O	O:0.986009
	
Any	O	O:0.936127
and	O	O:0.998878
all	O	O:0.995937
advice	O	O:0.804826
is	O	O:0.993491
greatly	O	O:0.923700
appreciated	O	O:0.963868
.	O	O:0.979181
	
Numpy	O	O:0.813250
:	O	O:0.989490
Is	O	O:0.999266
there	O	O:0.999283
an	O	O:0.998686
array	O	O:0.998779
size	O	O:0.991406
limit	O	O:0.955817
?	O	O:0.996933
	
Then	O	O:0.993129
do	O	O:0.999676
this	O	O:0.997215
after	O	O:0.998212
each	O	O:0.860599
calculation	O	O:0.962011
:	O	O:0.995397
for	O	O:0.999462
i	O	O:0.985532
in	O	O:0.995042
range	O	O:0.977717
(	O	O:0.987067
len	O	B-API:0.999172
(	O	O:0.995515
array	O	O:0.952296
)):	O	O:0.893588
array	O	O:0.973979
[	O	O:0.997457
i	O	O:0.993273
]	O	O:0.985547
[	O	O:0.995843
i	O	O:0.997326
]=	O	O:0.991230
0	O	O:0.939775
	
I	O	O:0.998430
know	O	O:0.995682
the	O	O:0.998591
random	O	O:0.827332
functions	O	O:0.990305
and	O	O:0.998855
numbers	O	O:0.990262
seem	O	O:0.948269
odd	O	O:0.979463
,	O	O:0.997999
but	O	O:0.993308
conceptually	O	O:0.996323
this	O	O:0.998846
still	O	O:0.994567
should	O	O:0.999361
work	O	O:0.998465
,	O	O:0.999900
as	O	O:0.998781
it	O	O:0.974642
worked	O	O:0.995134
when	O	O:0.995823
both	O	O:0.990040
were	O	O:0.999289
set	O	O:0.995561
to	O	O:0.999841
variables	O	O:0.999018
individually	O	O:0.984641
.	O	O:0.997074
	
@USER	O	O:0.960006
are	O	O:0.999870
your	O	O:0.998962
numbers	O	O:0.949733
in	O	O:0.999345
the	O	O:0.999500
range	O	O:0.998874
of	O	O:0.997114
-128	O	O:0.979507
to	O	O:0.998925
127	O	O:0.996463
before	O	O:0.994444
you	O	O:0.998588
convert	O	O:0.998183
them	O	O:0.991534
to	O	O:0.998517
8b	O	O:0.996166
it	O	O:0.998052
?	O	O:0.997686
	
In	O	O:0.996883
the	O	O:0.996639
future	O	O:0.981983
,	O	O:0.998455
how	O	O:0.998210
should	O	O:0.999151
I	O	O:0.999943
go	O	O:0.999633
about	O	O:0.987846
trying	O	O:0.992916
to	O	O:0.999583
find	O	O:0.999576
routines	O	O:0.998811
like	O	O:0.998944
this	O	O:0.998546
?	O	O:0.997661
	
At	O	O:0.996140
20,000	O	O:0.992929
elements	O	O:0.987808
,	O	O:0.999143
your	O	O:0.996064
method	O	O:0.993460
is	O	O:0.999334
about	O	O:0.991348
25%	O	O:0.987180
faster	O	O:0.803352
.	O	O:0.987981
	
I'll	O	O:0.962640
fix	O	O:0.958194
it	O	O:0.999592
just	O	O:0.997308
for	O	O:0.999611
you	O	O:0.988079
:P	O	O:0.986490
	
Then	O	O:0.993401
I	O	O:0.999492
convert	O	O:0.976307
it	O	O:0.994929
to	O	O:0.999771
a	O	O:0.999885
numpy	O	O:0.920691
array	O	O:0.968074
:	O	O:0.995006
#CODE	O	O:0.995501
	
Just	O	O:0.996823
throwing	O	O:0.987771
in	O	O:0.999214
my	O	O:0.998354
two	O	O:0.999324
cents	O	O:0.995486
you	O	O:0.998576
could	O	O:0.999472
do	O	O:0.999889
this	O	O:0.999093
pretty	O	O:0.993639
simply	O	O:0.998111
using	O	O:0.999449
list	O	O:0.878628
comprehension	O	O:0.978843
if	O	O:0.990867
it's	O	O:0.990872
always	O	O:0.998620
a	O	O:0.999409
2d	O	O:0.883520
array	O	O:0.997852
like	O	O:0.995301
that	O	O:0.996677
#CODE	O	O:0.997294
	
While	O	O:0.997354
its	O	O:0.996632
expected	O	O:0.998973
value	O	O:0.997898
here	O	O:0.978004
is	O	O:0.999671
zero	O	O:0.917800
,	O	O:0.999406
the	O	O:0.999728
particular	O	O:0.995265
realizations	O	O:0.996239
will	O	O:0.998367
fluctuate	O	O:0.997683
around	O	O:0.998030
that	O	O:0.995703
expected	O	O:0.998528
value	O	O:0.995612
.	O	O:0.989351
	
Then	O	O:0.996663
if	O	O:0.999680
each	O	O:0.996431
item	O	O:0.958497
is	O	O:0.999379
weighted	O	O:0.971639
with	O	O:0.994896
weight	O	O:0.979332
w_i	O	O:0.976833
,	O	O:0.999694
the	O	O:0.996971
"	O	O:0.997241
summed	O	O:0.968327
histogram	O	O:0.998714
"	O	O:0.998387
would	O	O:0.999120
have	O	O:0.998636
weight	O	O:0.997896
sum	O	O:0.843359
(	O	O:0.999666
i	O	O:0.997352
in	O	O:0.999814
items	O	O:0.990304
)	O	O:0.996860
w_i	O	O:0.975563
D_ij	O	O:0.704325
.	O	O:0.980840
	
This	O	O:0.992049
approach	O	O:0.997256
will	O	O:0.999379
take	O	O:0.999384
an	O	O:0.999647
overhead	O	O:0.998360
because	O	O:0.998136
of	O	O:0.999464
crating	O	O:0.995856
a	O	O:0.999374
new	O	O:0.958657
array	O	O:0.990166
in	O	O:0.987281
memory	O	O:0.974096
.	O	O:0.990762
	
"	O	O:0.994589
Eric's	O	O:0.984905
suggestion	O	O:0.983737
for	O	O:0.996048
revising	O	O:0.992428
this	O	O:0.976963
question	O	O:0.973267
is	O	O:0.999631
a	O	O:0.998567
good	O	O:0.903478
start	O	O:0.986152
,	O	O:0.999180
but	O	O:0.999078
I	O	O:0.999234
think	O	O:0.999641
the	O	O:0.995852
question	O	O:0.871969
"	O	O:0.995694
Given	O	O:0.997591
a	O	O:0.997145
Cartesian	O	O:0.913263
plane	O	O:0.994624
,	O	O:0.998593
how	O	O:0.998570
to	O	O:0.998604
discretize	O	O:0.998895
it	O	O:0.999318
in	O	O:0.999891
a	O	O:0.998076
matrix	O	O:0.985538
form	O	O:0.996667
?	O	O:0.995208
	
it	O	O:0.975587
is	O	O:0.999052
the	O	O:0.999354
same	O	O:0.993618
as	O	O:0.999766
long	O	O:0.996987
as	O	O:0.999410
you	O	O:0.995027
ignore	O	O:0.957165
precision	O	O:0.998437
issue	O	O:0.994524
-	O	O:0.998051
which	O	O:0.988754
matters	O	O:0.996629
quite	O	O:0.996478
often	O	O:0.994471
when	O	O:0.997771
you	O	O:0.997770
start	O	O:0.998929
taking	O	O:0.998227
exponential	O	O:0.979630
of	O	O:0.994946
numbers	O	O:0.759900
.	O	O:0.993408
	
Google	O	O:0.967535
Protocol	O	O:0.979732
Buffers	O	O:0.995807
support	O	O:0.970646
self-describing	O	O:0.973647
too	O	O:0.975539
,	O	O:0.998770
are	O	O:0.994668
pretty	O	O:0.986085
fast	O	O:0.726655
(	O	O:0.995012
but	O	O:0.998274
Python	O	O:0.991193
support	O	O:0.925152
is	O	O:0.998925
poor	O	O:0.928282
at	O	O:0.998972
present	O	O:0.957866
time	O	O:0.989783
,	O	O:0.999076
slow	O	O:0.955111
and	O	O:0.999510
buggy	O	O:0.982209
)	O	O:0.993584
.	O	O:0.932627
	
Not	O	O:0.997424
all	O	O:0.998625
people	O	O:0.991640
can	O	O:0.996936
install	O	O:0.995819
NumPy	O	O:0.984490
(	O	O:0.994530
or	O	O:0.999656
even	O	O:0.996198
Python	O	O:0.998638
:D	O	O:0.996724
)	O	O:0.997264
as	O	O:0.997508
many	O	O:0.990714
Blender	O	O:0.989767
users	O	O:0.962241
are	O	O:0.999376
just	O	O:0.995969
artists	O	O:0.965473
.	O	O:0.981220
	
All	O	O:0.997969
possible	O	O:0.994523
solutions	O	O:0.998384
are	O	O:0.998927
mentioned	O	O:0.991359
in	O	O:0.999157
the	O	O:0.996049
comments	O	O:0.970667
.	O	O:0.985653
	
I've	O	O:0.995849
also	O	O:0.991496
refined	O	O:0.999645
your	O	O:0.994801
approach	O	O:0.996548
to	O	O:0.999357
allow	O	O:0.998787
zooming	O	O:0.991081
in	O	O:0.998036
over	O	O:0.997736
a	O	O:0.998674
section	O	O:0.979962
of	O	O:0.999448
the	O	O:0.999467
data	O	O:0.995693
and	O	O:0.999900
to	O	O:0.999708
produce	O	O:0.999836
better	O	O:0.991969
results	O	O:0.998704
at	O	O:0.999673
the	O	O:0.997611
borders	O	O:0.931522
.	O	O:0.982548
	
I	O	O:0.998715
need	O	O:0.999173
to	O	O:0.999433
specify	O	O:0.999419
datatypes	O	O:0.982016
for	O	O:0.998886
all	O	O:0.998853
numerical	O	O:0.981123
types	O	O:0.983242
since	O	O:0.992047
I	O	O:0.999768
care	O	O:0.999182
about	O	O:0.983200
int	O	O:0.754124
8/	O	O:0.977126
16	O	O:0.893036
/	O	O:0.992567
32	O	O:0.985307
,	O	O:0.997891
etc	O	O:0.979861
,	O	O:0.999070
but	O	O:0.998999
I	O	O:0.999123
would	O	O:0.999925
like	O	O:0.998870
to	O	O:0.999835
benefit	O	O:0.999873
from	O	O:0.998594
the	O	O:0.999071
auto	O	O:0.966280
string	O	O:0.994793
length	O	O:0.993088
detection	O	O:0.993624
that	O	O:0.994578
works	O	O:0.999371
if	O	O:0.998892
I	O	O:0.997999
don't	O	O:0.999667
specify	O	O:0.940918
datatypes	O	O:0.976421
.	O	O:0.983581
	
I	O	O:0.992453
would	O	O:0.998980
appreciate	O	O:0.992501
any	O	O:0.999232
assistance	O	O:0.980311
you	O	O:0.998642
can	O	O:0.999197
offer	O	O:0.997702
.	O	O:0.996596
	
Let's	O	O:0.993197
say	O	O:0.995120
for	O	O:0.999295
example	O	O:0.982339
I	O	O:0.999177
have	O	O:0.999617
a	O	O:0.988983
matrix	O	O:0.990246
X	O	O:0.991117
which	O	O:0.987320
is	O	O:0.999184
my	O	O:0.995535
input	O	O:0.993150
.	O	O:0.993250
	
@USER	O	O:0.963496
-	O	O:0.996303
By	O	O:0.998387
the	O	O:0.998661
way	O	O:0.989209
,	O	O:0.996424
indexing	O	O:0.996867
returns	O	O:0.997827
a	O	O:0.997077
view	O	B-API:0.906389
(	O	O:0.999265
essentially	O	O:0.998620
a	O	O:0.999357
pointer	O	O:0.990297
)	O	O:0.999542
into	O	O:0.958488
the	O	O:0.995471
array	O	O:0.943180
.	O	O:0.984164
	
Note	O	O:0.997669
that	O	O:0.995821
`	O	O:0.999929
view	O	B-API:0.675236
`	O	O:0.999631
holds	O	O:0.882235
the	O	O:0.999903
same	O	O:0.999088
data	O	O:0.997044
as	O	O:0.999897
the	O	O:0.999592
original	O	O:0.979203
array	O	O:0.982837
!	O	O:0.983096
	
EDIT	O	O:0.866717
:	O	O:0.996217
What	O	O:0.999815
sort	O	O:0.956938
of	O	O:0.998330
sequence	O	O:0.936808
is	O	O:0.998409
it	O	O:0.994185
you're	O	O:0.996916
making	O	O:0.978187
?	O	O:0.990980
	
The	O	O:0.995847
relative	O	O:0.975889
error	O	O:0.981289
is	O	O:0.999112
less	O	O:0.982347
than	O	O:0.992634
2	O	O:0.982526
-24	O	O:0.990065
,	O	O:0.998741
which	O	O:0.995625
is	O	O:0.997945
1	O	O:0.987901
/	O	O:0.997551
2	O	O:0.993358
ULP	O	O:0.997407
divided	O	O:0.994090
by	O	O:0.999028
the	O	O:0.998513
smallest	O	O:0.989848
the	O	O:0.998454
value	O	O:0.997226
could	O	O:0.998179
be	O	O:0.998087
(	O	O:0.999821
the	O	O:0.999288
smallest	O	O:0.997244
value	O	O:0.992353
in	O	O:0.998481
the	O	O:0.999026
interval	O	O:0.993036
for	O	O:0.999507
a	O	O:0.999715
particular	O	O:0.988333
ULP	O	O:0.994636
,	O	O:0.999132
so	O	O:0.999593
the	O	O:0.999494
power	O	O:0.994480
of	O	O:0.996665
two	O	O:0.999183
that	O	O:0.998016
bounds	O	O:0.995639
it	O	O:0.998315
)	O	O:0.999016
.	O	O:0.985573
	
This	O	O:0.969202
is	O	O:0.997658
called	O	O:0.921321
matrix	O	O:0.991524
transposition	O	O:0.971521
.	O	O:0.984560
	
@USER	O	O:0.983574
The	O	O:0.996976
solutions	O	O:0.992839
there	O	O:0.998550
all	O	O:0.999738
make	O	O:0.996176
use	O	O:0.998164
of	O	O:0.995261
the	O	O:0.994393
fact	O	O:0.996150
that	O	O:0.998276
only	O	O:0.999032
a	O	O:0.999837
3x3	O	O:0.893607
sliding	O	O:0.787339
window	O	O:0.961704
is	O	O:0.996719
needed	O	O:0.981453
,	O	O:0.999172
but	O	O:0.998793
I	O	O:0.999445
need	O	O:0.999742
something	O	O:0.997040
that	O	O:0.996105
works	O	O:0.998542
for	O	O:0.999818
all	O	O:0.996218
sizes	O	O:0.995140
of	O	O:0.997108
templates	O	O:0.968574
.	O	O:0.995085
	
(	O	O:0.984735
0008	O	O:0.984823
,	O	O:0.999347
103e	O	O:0.863751
)	O	O:0.997031
Series	O	O:0.989088
Description	O	O:0.987624
LO	O	O:0.958122
:	O	O:0.969757
'	O	O:0.996376
Screen	O	O:0.996611
Save	O	O:0.960748
'	O	O:0.984636
	
@USER	O	O:0.989603
khanSever	O	O:0.943125
20k	O	O:0.959368
wouldn't	O	O:0.995971
be	O	O:0.999843
a	O	O:0.999375
problem	O	O:0.894873
for	O	O:0.999328
modern	O	O:0.961886
computers	O	O:0.979270
,	O	O:0.999269
if	O	O:0.998622
you	O	O:0.998649
are	O	O:0.999498
really	O	O:0.999420
thresholded	O	O:0.996496
by	O	O:0.998620
speed	O	O:0.916415
in	O	O:0.998076
this	O	O:0.997933
kind	O	O:0.997354
of	O	O:0.998034
computation	O	O:0.989348
,	O	O:0.999638
I	O	O:0.998805
would	O	O:0.999374
say	O	O:0.999477
that	O	O:0.999382
you	O	O:0.998492
shouldn't	O	O:0.999806
have	O	O:0.998287
had	O	O:0.999207
an	O	O:0.999821
inhomogenous	O	O:0.992260
data	O	O:0.998423
array	O	O:0.999229
to	O	O:0.999631
begin	O	O:0.999879
with	O	O:0.997628
.	O	O:0.994511
	
@USER	O	O:0.954582
Eweiwi	O	O:0.835058
:	O	O:0.997638
Did	O	O:0.999341
you	O	O:0.999839
find	O	O:0.999258
my	O	O:0.999417
answer	O	O:0.996043
anyway	O	O:0.994837
useful	O	O:0.982241
?	O	O:0.995702
	
You	O	O:0.997371
can	O	O:0.999649
now	O	O:0.999650
compute	O	O:0.991324
the	O	O:0.996656
function	O	O:0.994823
`	O	O:0.995671
f	O	O:0.704056
(	O	O:0.999562
x	O	O:0.994472
)`	O	O:0.982455
at	O	O:0.999151
any	O	O:0.995675
point	O	O:0.973691
`	O	O:0.998031
x	O	O:0.664762
`	O	O:0.998393
.	O	O:0.975194
	
BTW	O	O:0.948882
:	O	O:0.999151
this	O	O:0.993392
is	O	O:0.999913
a	O	O:0.998641
neat	O	O:0.926714
workaround	O	O:0.986561
,	O	O:0.996200
but	O	O:0.998343
if	O	O:0.996196
it	O	O:0.999539
were	O	O:0.998772
possible	O	O:0.998821
to	O	O:0.998951
use	O	O:0.999670
the	O	O:0.994088
`	O	O:0.993683
in	O	O:0.899313
`	O	O:0.998889
operator	O	O:0.989585
would	O	O:0.999783
have	O	O:0.999255
preferred	O	O:0.999194
,	O	O:0.999885
as	O	O:0.998982
in	O	O:0.998407
my	O	O:0.985160
"	O	O:0.999532
real	O	O:0.959673
case	O	O:0.993067
"	O	O:0.996594
I	O	O:0.998840
have	O	O:0.999607
a	O	O:0.997258
pool	O	O:0.994262
of	O	O:0.998944
roughly	O	O:0.989679
10	O	O:0.995349
values	O	O:0.967848
,	O	O:0.999384
non	O	O:0.997347
only	O	O:0.983408
`	O	O:0.996935
(	O	O:0.994045
6	O	O:0.993206
,	O	O:0.995957
8)	O	O:0.923431
`	O	O:0.994689
.	O	O:0.970526
	
In	O	O:0.998451
this	O	O:0.996604
example	O	O:0.996144
I	O	O:0.999679
want	O	O:0.998530
to	O	O:0.996054
return	O	O:0.999033
an	O	O:0.998533
array	O	O:0.997309
of	O	O:0.994464
[	O	O:0.993695
202	O	O:0.995231
203	O	O:0.972629
206	O	O:0.981272
210	O	O:0.972797
]	O	O:0.986239
	
So	O	O:0.986222
f	O	O:0.821587
(	O	O:0.998470
x	O	O:0.976894
,	O	O:0.999417
y	O	O:0.990679
)	O	O:0.999111
=	O	O:0.947071
0	O	O:0.981661
	
I	O	O:0.997784
present	O	O:0.995075
below	O	O:0.990327
a	O	O:0.996815
sample	O	O:0.970799
silhouette	O	O:0.993143
implementation	O	O:0.959658
in	O	O:0.998211
both	O	O:0.982249
MATLAB	O	O:0.974753
and	O	O:0.998382
Python	O	O:0.959995
/	O	O:0.972367
Numpy	O	O:0.884945
(	O	O:0.998948
keep	O	O:0.944834
in	O	O:0.999383
mind	O	O:0.997760
that	O	O:0.998166
I	O	O:0.999336
am	O	O:0.999870
more	O	O:0.974104
fluent	O	O:0.979231
in	O	O:0.994456
MATLAB	O	O:0.866752
):	O	O:0.991400
	
Python	O	O:0.966427
import	O	O:0.866705
Column	O	O:0.994344
Data	O	O:0.984524
from	O	O:0.995855
MySQL	O	O:0.990495
as	O	O:0.995184
Array	O	O:0.968387
	
This	O	O:0.975954
is	O	O:0.999568
just	O	O:0.992067
the	O	O:0.999802
partial	O	O:0.992222
count	O	O:0.964042
due	O	O:0.993948
to	O	O:0.998741
the	O	O:0.999447
34	O	O:0.977690
1-chips	O	O:0.896573
.	O	O:0.993373
	
I	O	O:0.998728
want	O	O:0.998232
to	O	O:0.997283
know	O	O:0.999655
how	O	O:0.997536
I	O	O:0.993479
should	O	O:0.999707
index	O	O:0.998549
/	O	O:0.999211
access	O	O:0.997519
some	O	O:0.999683
data	O	O:0.999208
programmatically	O	O:0.990130
in	O	O:0.998870
python	O	O:0.972756
.	O	O:0.992744
	
There	O	O:0.972392
is	O	O:0.999493
a	O	O:0.999351
short	O	O:0.971129
comment	O	O:0.991410
at	O	O:0.998755
the	O	O:0.999771
end	O	O:0.994126
of	O	O:0.998991
the	O	O:0.995780
introduction	O	O:0.995000
to	O	O:0.995832
SciPy	O	O:0.994977
documentation	O	O:0.981278
:	O	O:0.992650
	
What	O	O:0.996394
about	O	O:0.996355
the	O	O:0.999370
maximum	O	O:0.987731
value	O	O:0.993073
in	O	O:0.998814
the	O	O:0.998494
array	O	O:0.983166
?	O	O:0.993000
	
If	O	O:0.997189
you	O	O:0.998188
use	O	O:0.999322
a	O	O:0.998754
list	O	O:0.902983
of	O	O:0.994618
`	O	O:0.994974
True	O	O:0.932169
/	O	O:0.998530
False	O	O:0.937162
`	O	O:0.995777
,	O	O:0.997209
NumPy	O	O:0.998422
will	O	O:0.989272
interpret	O	O:0.999634
that	O	O:0.999621
as	O	O:0.999842
a	O	O:0.999252
list	O	O:0.933615
of	O	O:0.998023
`	O	O:0.996010
1	O	O:0.982895
/	O	O:0.998392
0	O	O:0.963849
`	O	O:0.999238
as	O	O:0.993494
integers	O	O:0.980874
,	O	O:0.999369
that	O	O:0.988329
is	O	O:0.999614
,	O	O:0.999508
indices	O	O:0.991890
,	O	O:0.998782
meaning	O	O:0.999175
that	O	O:0.998155
you	O	O:0.998825
'	O	O:0.999838
either	O	O:0.999364
get	O	O:0.998938
the	O	O:0.999891
second	O	O:0.980690
or	O	O:0.999574
first	O	O:0.998426
element	O	O:0.997953
of	O	O:0.999527
your	O	O:0.986882
array	O	O:0.990939
.	O	O:0.992456
	
But	O	O:0.983390
it's	O	O:0.995388
still	O	O:0.997747
an	O	O:0.998907
array	O	O:0.988584
and	O	O:0.999254
there	O	O:0.987927
is	O	O:0.994741
no	O	O:0.995614
difference	O	O:0.975739
in	O	O:0.997743
asymptotic	O	O:0.965347
complexity	O	O:0.991687
.	O	O:0.982561
	
Here's	O	O:0.987581
one	O	O:0.993393
way	O	O:0.960425
(	O	O:0.998670
same	O	O:0.995830
matrix	O	O:0.997237
as	O	O:0.988141
before	O	O:0.634251
):	O	O:0.983167
#CODE	O	O:0.985157
	
assume	O	O:0.987138
i	O	O:0.997224
have	O	O:0.995692
100	O	O:0.994604
points	O	O:0.996105
whose	O	O:0.991860
coordinates	O	O:0.979505
are	O	O:0.996879
random	O	O:0.973990
,	O	O:0.993652
	
If	O	O:0.995734
you	O	O:0.999788
just	O	O:0.999769
want	O	O:0.999715
the	O	O:0.999530
first	O	O:0.997943
one	O	O:0.999259
,	O	O:0.999418
use	O	O:0.999420
next	O	O:0.953112
with	O	O:0.993356
the	O	O:0.999198
list	O	O:0.984202
comprehension	O	O:0.996080
as	O	O:0.999761
a	O	O:0.994403
generator	O	O:0.973655
expression	O	O:0.987648
.	O	O:0.985911
	
So	O	O:0.992339
I	O	O:0.998811
am	O	O:0.999834
able	O	O:0.988897
to	O	O:0.999611
plot	O	O:0.999336
what	O	O:0.998532
I	O	O:0.999820
want	O	O:0.999675
onto	O	O:0.898732
my	O	O:0.986958
matrix	O	O:0.988737
	
By	O	O:0.995011
X3D	O	O:0.953360
,	O	O:0.999399
are	O	O:0.999431
you	O	O:0.999592
referring	O	O:0.997716
to	O	O:0.998980
the	O	O:0.999800
x3d	O	O:0.989584
standard	O	O:0.988859
for	O	O:0.999707
3d	O	O:0.962146
content	O	O:0.983279
,	O	O:0.998983
as	O	O:0.998860
at	O	O:0.984313
#URL	O	O:0.973150
If	O	O:0.998420
so	O	O:0.998140
,	O	O:0.999491
I	O	O:0.998673
would	O	O:0.999423
very	O	O:0.995434
much	O	O:0.999137
like	O	O:0.998390
to	O	O:0.999495
learn	O	O:0.999828
more	O	O:0.986019
of	O	O:0.999604
what	O	O:0.993175
you	O	O:0.999428
are	O	O:0.999652
doing	O	O:0.999079
--	O	O:0.995273
thanks	O	O:0.849269
	
Would	O	O:0.983421
it	O	O:0.998396
be	O	O:0.999568
prohibitvely	O	O:0.994021
wasteful	O	O:0.978831
to	O	O:0.999543
save	O	O:0.999744
them	O	O:0.997169
with	O	O:0.999894
a	O	O:0.999303
fixed	O	O:0.961156
width	O	O:0.992649
?	O	O:0.983828
	
BSD-licensed	O	O:0.892362
Python	O	O:0.987079
source	O	O:0.992158
code	O	O:0.977054
for	O	O:0.997606
surface	O	O:0.979778
fits	O	O:0.961962
can	O	O:0.999124
be	O	O:0.999760
found	O	O:0.996464
at	O	O:0.985277
	
...	O	O:0.977318
which	O	O:0.998494
returned	O	O:0.949814
`	O	O:0.998585
True	O	O:0.837930
`	O	O:0.999666
on	O	O:0.999126
each	O	O:0.998951
value	O	O:0.998802
of	O	O:0.998448
the	O	O:0.995863
array	O	O:0.989175
.	O	O:0.985576
	
I	O	O:0.997673
have	O	O:0.999260
two	O	O:0.995869
ordered	O	O:0.989289
numpy	O	O:0.989609
arrays	O	O:0.963271
and	O	O:0.999189
I	O	O:0.999807
want	O	O:0.996512
to	O	O:0.995517
interleave	O	O:0.999781
them	O	O:0.995883
so	O	O:0.999812
that	O	O:0.999178
I	O	O:0.999945
take	O	O:0.999431
one	O	O:0.999305
item	O	O:0.997853
from	O	O:0.998088
the	O	O:0.999596
first	O	O:0.995199
array	O	O:0.997574
,	O	O:0.999953
then	O	O:0.999830
another	O	O:0.999658
from	O	O:0.999637
the	O	O:0.999440
second	O	O:0.994356
,	O	O:0.999952
then	O	O:0.999684
back	O	O:0.998607
to	O	O:0.999842
the	O	O:0.999968
first	O	O:0.994620
-	O	O:0.998934
taking	O	O:0.990693
the	O	O:0.999009
next	O	O:0.977305
item	O	O:0.997034
that	O	O:0.992882
is	O	O:0.999804
larger	O	O:0.979857
than	O	O:0.994183
the	O	O:0.998488
one	O	O:0.997064
I	O	O:0.999807
just	O	O:0.999179
took	O	O:0.987886
from	O	O:0.996598
the	O	O:0.998120
second	O	O:0.959967
and	O	O:0.999514
so	O	O:0.998540
on	O	O:0.990205
.	O	O:0.992001
	
Did	O	O:0.995284
you	O	O:0.999429
look	O	O:0.996801
at	O	O:0.999652
the	O	O:0.999193
link	O	O:0.985950
in	O	O:0.999468
my	O	O:0.998231
answer	O	O:0.995618
to	O	O:0.998603
the	O	O:0.999792
SciPy	O	O:0.989668
page	O	O:0.989668
on	O	O:0.997259
Performance	O	O:0.992517
Python	O	O:0.984514
.	O	O:0.985890
	
If	O	O:0.997069
you	O	O:0.999549
want	O	O:0.999434
the	O	O:0.999856
column	O	O:0.999535
indices	O	O:0.997493
instead	O	O:0.999684
of	O	O:0.999861
the	O	O:0.999610
resulting	O	O:0.996214
square	O	O:0.958740
matrix	O	O:0.990386
,	O	O:0.999854
just	O	O:0.996642
replace	O	O:0.853382
`	O	O:0.999309
return	O	O:0.940823
B	O	O:0.986787
`	O	O:0.998401
with	O	O:0.852437
`	O	O:0.999422
return	O	O:0.962713
colset	O	O:0.883672
`	O	O:0.994127
.	O	O:0.959518
	
At	O	O:0.993439
the	O	O:0.999511
end	O	O:0.991924
of	O	O:0.997404
it	O	O:0.992640
all	O	O:0.993623
:	O	O:0.992787
#CODE	O	O:0.995019
	
Is	O	O:0.996786
there	O	O:0.998849
no	O	O:0.998760
equivalent	O	O:0.971369
function	O	O:0.999122
that	O	O:0.993731
gets	O	O:0.987532
the	O	O:0.999773
index	O	O:0.998707
of	O	O:0.999025
the	O	O:0.999798
last	O	O:0.993344
occurrence	O	O:0.993745
?	O	O:0.993516
	
I	O	O:0.998727
want	O	O:0.999046
to	O	O:0.996052
get	O	O:0.999977
a	O	O:0.999549
cartesian	O	O:0.990431
product	O	O:0.998005
of	O	O:0.999280
a	O	O:0.915198
[:	O	O:0.862010
:	O	O:0.996529
i	O	O:0.987870
]	O	O:0.996601
and	O	O:0.997329
b	O	O:0.843587
[:	O	O:0.957703
:	O	O:0.994768
j	O	O:0.986651
]	O	O:0.998934
from	O	O:0.979884
c	O	O:0.971403
.	O	O:0.993380
	
python	O	O:0.925286
/	O	O:0.982946
numpy	O	O:0.946890
:	O	O:0.997683
how	O	O:0.999279
to	O	O:0.999332
get	O	O:0.999866
2D	O	O:0.996561
array	O	O:0.998882
column	O	O:0.994869
length	O	O:0.990266
?	O	O:0.989941
	
Your	O	O:0.979139
example	O	O:0.980408
works	O	O:0.997583
for	O	O:0.999130
me	O	O:0.970487
if	O	O:0.996166
I	O	O:0.998726
sample	O	O:0.981942
around	O	O:0.974583
2**6	O	O:0.907108
points	O	O:0.942590
.	O	O:0.986391
	
NumPy's	O	O:0.989700
main	O	O:0.930410
object	O	O:0.972751
is	O	O:0.996605
the	O	O:0.995646
homogeneous	O	O:0.939328
multidimensional	O	O:0.943647
array	O	O:0.973963
.	O	O:0.986622
	
Pythonic	O	O:0.979975
way	O	O:0.995066
to	O	O:0.998924
import	O	O:0.999795
data	O	O:0.998011
from	O	O:0.999617
multiple	O	O:0.999431
files	O	O:0.998337
into	O	O:0.987365
an	O	O:0.996696
array	O	O:0.977332
	
The	O	O:0.997326
only	O	O:0.995069
thing	O	O:0.999116
I	O	O:0.997278
was	O	O:0.998442
going	O	O:0.979353
to	O	O:0.996794
add	O	O:0.986095
was	O	O:0.993359
this	O	O:0.987082
:	O	O:0.996998
#URL	O	O:0.998136
Indicated	O	O:0.989424
that	O	O:0.999010
this	O	O:0.978421
is	O	O:0.998912
not	O	O:0.993264
likely	O	O:0.995443
to	O	O:0.997885
change	O	O:0.978138
.	O	O:0.992860
	
i	O	O:0.991392
have	O	O:0.999310
a	O	O:0.999479
numpy	O	O:0.994515
array	O	O:0.998599
like	O	O:0.997334
the	O	O:0.998934
following	O	O:0.960060
#CODE	O	O:0.989921
	
I	O	O:0.998650
want	O	O:0.998707
to	O	O:0.993387
write	O	O:0.999876
a	O	O:0.998756
Boost-Python	O	O:0.877723
program	O	O:0.998824
to	O	O:0.999508
take	O	O:0.999921
a	O	O:0.999172
symbolic	O	O:0.898954
python	O	O:0.976964
function	O	O:0.995302
from	O	O:0.995495
user	O	O:0.974752
and	O	O:0.999647
evaluate	O	O:0.993534
its	O	O:0.994163
derivative	O	O:0.989859
in	O	O:0.996499
my	O	O:0.979500
program	O	O:0.988648
.	O	O:0.990666
	
Is	O	O:0.995942
there	O	O:0.999442
a	O	O:0.998705
way	O	O:0.947909
around	O	O:0.995356
this	O	O:0.986027
?	O	O:0.996169
	
Not	O	O:0.997544
sure	O	O:0.996223
if	O	O:0.999355
I	O	O:0.998086
explained	O	O:0.998692
this	O	O:0.988881
all	O	O:0.998464
really	O	O:0.996290
well	O	O:0.992115
,	O	O:0.999031
but	O	O:0.999363
just	O	O:0.996367
print	O	O:0.996077
out	O	O:0.989316
a_strided	O	O:0.766631
and	O	O:0.999190
you'll	O	O:0.995479
see	O	O:0.996412
what	O	O:0.999394
the	O	O:0.997309
result	O	O:0.973640
is	O	O:0.996506
and	O	O:0.998918
how	O	O:0.999394
easy	O	O:0.977844
this	O	O:0.994721
makes	O	O:0.998370
the	O	O:0.997014
operation	O	O:0.925845
.	O	O:0.986330
	
But	O	O:0.998686
when	O	O:0.998426
I	O	O:0.999503
start	O	O:0.999766
calling	O	O:0.995518
columns	O	O:0.995387
by	O	O:0.998730
their	O	O:0.998231
field	O	O:0.990668
names	O	O:0.991942
,	O	O:0.999165
screwy	O	O:0.988003
things	O	O:0.979062
happen	O	O:0.982944
.	O	O:0.996891
	
all	O	O:0.996122
I	O	O:0.998840
get	O	O:0.989388
is	O	O:0.997403
very	O	O:0.995925
high	O	O:0.973487
or	O	O:0.998755
inf	O	O:0.982462
numbers	O	O:0.963263
.	O	O:0.985981
	
If	O	O:0.986999
you're	O	O:0.998819
iterating	O	O:0.996615
through	O	O:0.983365
,	O	O:0.994320
and	O	O:0.999569
applying	O	O:0.991890
the	O	O:0.967171
function	O	O:0.989429
to	O	O:0.996336
_each_	O	O:0.999155
item	O	O:0.996613
,	O	O:0.999893
then	O	O:0.999098
,	O	O:0.999954
yeah	O	O:0.991561
,	O	O:0.999735
the	O	O:0.999827
numpy	O	O:0.993349
functions	O	O:0.996331
will	O	O:0.998161
be	O	O:0.999351
slower	O	O:0.986767
.	O	O:0.973664
	
Slicing	O	O:0.942961
does	O	O:0.987456
not	O	O:0.999642
copy	O	O:0.964070
the	O	O:0.999305
array	O	O:0.987658
into	O	O:0.989049
new	O	O:0.974430
memory	O	O:0.908229
(	O	O:0.995801
unlike	O	O:0.993762
delete	O	O:0.589123
)	O	O:0.996698
.	O	O:0.980049
	
And	O	O:0.985027
here's	O	O:0.992149
the	O	O:0.997786
filled	O	O:0.816879
version	O	O:0.945107
:	O	O:0.990430
#CODE	O	O:0.996854
	
This	O	O:0.973900
is	O	O:0.999714
a	O	O:0.997385
little	O	O:0.967963
bit	O	O:0.993718
annoying	O	O:0.974751
to	O	O:0.997787
do	O	O:0.998768
,	O	O:0.999439
but	O	O:0.999006
at	O	O:0.999721
least	O	O:0.999225
you	O	O:0.999738
can	O	O:0.999017
remove	O	O:0.998295
that	O	O:0.999464
annoying	O	O:0.993613
`	O	O:0.997871
==	O	O:0.824873
`	O	O:0.998647
easily	O	O:0.983475
,	O	O:0.999719
using	O	O:0.985965
sorting	O	B-API:0.732612
(	O	O:0.956022
and	O	O:0.998522
thats	O	O:0.981325
probably	O	O:0.998830
your	O	O:0.996927
speed	O	O:0.936317
killer	O	O:0.996079
)	O	O:0.996093
.	O	O:0.984612
	
I	O	O:0.994389
still	O	O:0.996020
haven't	O	O:0.985973
found	O	O:0.994657
an	O	O:0.998656
entirely	O	O:0.994324
satisfactory	O	O:0.986447
solution	O	O:0.979229
,	O	O:0.998507
but	O	O:0.998688
nevertheless	O	O:0.995498
there	O	O:0.996416
is	O	O:0.999531
something	O	O:0.997922
one	O	O:0.998589
can	O	O:0.999438
do	O	O:0.999892
to	O	O:0.999873
obtain	O	O:0.998606
the	O	O:0.998904
pointer	O	O:0.997397
with	O	O:0.999410
a	O	O:0.998680
lot	O	O:0.993997
less	O	O:0.986720
overhead	O	O:0.982949
in	O	O:0.994303
CPython	O	O:0.973007
.	O	O:0.990193
	
I	O	O:0.998450
also	O	O:0.998523
tried	O	O:0.993824
using	O	O:0.993565
NumPy	O	O:0.955070
masked	O	O:0.852292
arrays	O	O:0.965702
,	O	O:0.998849
with	O	O:0.997714
NaN	O	O:0.827669
fill_value	O	O:0.792955
,	O	O:0.999248
which	O	O:0.998943
also	O	O:0.962957
did	O	O:0.998900
not	O	O:0.998431
work	O	O:0.995001
.	O	O:0.997610
	
cartesian	O	O:0.851580
(	O	O:0.995333
split	O	B-API:0.775763
(	O	O:0.999438
a	O	O:0.998042
,	O	O:0.992836
3	O	O:0.989393
))`	O	O:0.877290
.	O	O:0.988135
	
I	O	O:0.989332
did	O	O:0.999301
a	O	O:0.995171
little	O	O:0.963941
further	O	O:0.972300
experimenting	O	O:0.977927
and	O	O:0.999248
found	O	O:0.997292
a	O	O:0.995831
numpy	O	O:0.980522
specific	O	O:0.996246
way	O	O:0.993771
to	O	O:0.996452
solve	O	O:0.997053
this	O	O:0.963682
:	O	O:0.996790
#CODE	O	O:0.997357
	
When	O	O:0.996888
you	O	O:0.999765
need	O	O:0.999494
to	O	O:0.999910
deal	O	O:0.999711
with	O	O:0.999433
exponential	O	O:0.978614
,	O	O:0.999939
you	O	O:0.998908
quickly	O	O:0.997703
go	O	O:0.999626
into	O	O:0.993110
under	O	O:0.997048
/	O	O:0.998557
over	O	O:0.991437
flow	O	O:0.989406
since	O	O:0.998306
the	O	O:0.996990
function	O	O:0.999024
grows	O	O:0.997008
so	O	O:0.997783
quickly	O	O:0.955700
.	O	O:0.992960
	
Long	O	O:0.977077
story	O	O:0.993284
short	O	O:0.941806
,	O	O:0.998648
not	O	O:0.997382
only	O	O:0.998436
does	O	O:0.998191
tabular	O	O:0.994267
not	O	O:0.999344
act	O	O:0.997612
like	O	O:0.999502
a	O	O:0.999728
spreadsheet	O	O:0.995545
out	O	O:0.998490
of	O	O:0.999430
the	O	O:0.989052
box	O	O:0.998420
,	O	O:0.998395
I	O	O:0.998973
can't	O	O:0.999706
find	O	O:0.997217
a	O	O:0.999595
way	O	O:0.981599
to	O	O:0.998563
make	O	O:0.999148
it	O	O:0.999574
work	O	O:0.991321
.	O	O:0.998535
	
What	O	O:0.996960
do	O	O:0.994527
you	O	O:0.999823
mean	O	O:0.987503
"	O	O:0.999294
two	O	O:0.998940
significant	O	O:0.991744
figures	O	O:0.931673
"	O	O:0.991418
?	O	O:0.990779
	
We	O	O:0.992207
put	O	O:0.972898
it	O	O:0.997878
in	O	O:0.999323
a	O	O:0.996375
list	O	O:0.826069
and	O	O:0.996380
double	O	O:0.666833
it	O	O:0.985104
.	O	O:0.989429
	
For	O	O:0.992559
example	O	O:0.993867
for	O	O:0.999418
value	O	O:0.992510
255	O	O:0.990782
the	O	O:0.999625
coordinates	O	O:0.984063
of	O	O:0.998830
the	O	O:0.997552
box	O	O:0.997200
around	O	O:0.993200
the	O	O:0.998178
value	O	O:0.993740
255	O	O:0.989035
will	O	O:0.998611
be	O	O:0.999696
upper	O	O:0.997504
left	O	O:0.780907
(	O	O:0.991798
0	O	O:0.986416
,	O	O:0.998384
0	O	O:0.965648
)	O	O:0.997515
and	O	O:0.999161
lower	O	O:0.977048
right	O	O:0.843907
(	O	O:0.996672
4	O	O:0.988089
,	O	O:0.998918
6	O	O:0.976482
)	O	O:0.997338
.	O	O:0.985710
	
Like	O	O:0.990564
in	O	O:0.999717
a	O	O:0.999392
java	O	O:0.857629
program	O	O:0.998124
,	O	O:0.999305
you	O	O:0.999300
can	O	O:0.999296
choose	O	O:0.999830
to	O	O:0.999741
start	O	O:0.999927
it	O	O:0.999631
up	O	O:0.997535
with	O	O:0.998966
,	O	O:0.999380
say	O	O:0.997086
,	O	O:0.999478
5GB	O	O:0.996351
of	O	O:0.992316
memory	O	O:0.968577
.	O	O:0.995644
	
However	O	O:0.995799
,	O	O:0.999507
due	O	O:0.995790
to	O	O:0.999139
the	O	O:0.999800
way	O	O:0.998662
the	O	O:0.999669
data	O	O:0.996404
points	O	O:0.991230
lie	O	O:0.991789
it	O	O:0.998509
does	O	O:0.990878
not	O	O:0.999709
give	O	O:0.998640
me	O	O:0.997219
a	O	O:0.996218
y-axis	O	O:0.989740
interception	O	O:0.986900
at	O	O:0.997254
0	O	O:0.945720
.	O	O:0.986209
	
I'd	O	O:0.998143
like	O	O:0.997029
to	O	O:0.999831
sort	O	O:0.998243
it	O	O:0.999800
such	O	O:0.999208
that	O	O:0.999790
my	O	O:0.993981
points	O	O:0.990701
are	O	O:0.999164
ordered	O	O:0.992445
by	O	O:0.987555
x-coordinate	O	O:0.979784
,	O	O:0.996039
and	O	O:0.999955
then	O	O:0.999048
by	O	O:0.999506
y	O	O:0.996967
in	O	O:0.998271
cases	O	O:0.996186
where	O	O:0.996828
the	O	O:0.998304
x	O	O:0.990410
coordinate	O	O:0.974084
is	O	O:0.998778
the	O	O:0.998548
same	O	O:0.974652
.	O	O:0.990576
	
Of	O	O:0.992062
course	O	O:0.999512
this	O	O:0.999504
will	O	O:0.998552
slow	O	O:0.996709
the	O	O:0.999034
program	O	O:0.992828
down	O	O:0.933222
,	O	O:0.999593
but	O	O:0.999193
at	O	O:0.999070
least	O	O:0.997110
it'll	O	O:0.995616
finish	O	O:0.771400
.	O	O:0.988894
	
Im	O	O:0.981900
writing	O	O:0.990737
it	O	O:0.997600
here	O	O:0.951619
because	O	O:0.998231
i	O	O:0.997608
cant	O	O:0.998821
put	O	O:0.992793
image	O	O:0.997757
in	O	O:0.994276
comment	O	O:0.974435
.	O	O:0.990316
	
In	O	O:0.996090
looking	O	O:0.995385
at	O	O:0.998192
`	O	O:0.998955
fill	O	B-API:0.819145
`	O	O:0.999643
,	O	O:0.996949
I	O	O:0.998942
saw	O	O:0.996454
that	O	O:0.989887
`	O	O:0.999789
repeat	O	O:0.578967
`	O	O:0.998070
suits	O	O:0.952020
my	O	O:0.998021
needs	O	O:0.998603
even	O	O:0.994475
better	O	O:0.967123
.	O	O:0.991794
	
Note	O	O:0.998115
that	O	O:0.998363
an	O	O:0.999563
array's	O	O:0.996481
base	O	O:0.995252
will	O	O:0.999400
be	O	O:0.999911
another	O	O:0.998732
array	O	O:0.987766
,	O	O:0.999279
even	O	O:0.997111
if	O	O:0.999326
it	O	O:0.995994
is	O	O:0.999814
a	O	O:0.990914
subset	O	B-API:0.808778
:	O	O:0.995474
#CODE	O	O:0.986962
	
If	O	O:0.996838
you	O	O:0.999206
have	O	O:0.999706
float	O	O:0.998019
data	O	O:0.999174
,	O	O:0.999864
or	O	O:0.999957
data	O	O:0.998774
spread	O	O:0.998776
over	O	O:0.999093
a	O	O:0.999160
huge	O	O:0.924065
range	O	O:0.998001
you	O	O:0.996870
can	O	O:0.999493
convert	O	O:0.996801
it	O	O:0.999800
to	O	O:0.999792
integers	O	O:0.999768
by	O	O:0.992027
doing	O	O:0.971557
:	O	O:0.980350
#CODE	O	O:0.979225
	
@USER	O	O:0.974410
,	O	O:0.999595
plaes	O	O:0.982815
recommend	O	O:0.996581
using	O	O:0.999434
a	O	O:0.979403
generator	O	O:0.603006
(	O	O:0.997643
parenthesis	O	O:0.994823
)	O	O:0.999580
instead	O	O:0.999329
of	O	O:0.999720
a	O	O:0.994847
list	O	O:0.743025
(	O	O:0.999184
brackets	O	O:0.995542
)	O	O:0.999048
in	O	O:0.999522
order	O	O:0.990095
to	O	O:0.999240
save	O	O:0.974138
memory	O	O:0.993213
and	O	O:0.999807
gain	O	O:0.989429
speed	O	O:0.985106
when	O	O:0.993339
managing	O	O:0.996772
high	O	O:0.990297
amounts	O	O:0.998058
of	O	O:0.997989
data	O	O:0.982201
.	O	O:0.997803
	
I	O	O:0.998713
want	O	O:0.998795
to	O	O:0.992933
divide	O	O:0.998841
this	O	O:0.997836
array	O	O:0.999794
into	O	O:0.989937
3	O	O:0.996533
blocks	O	O:0.987690
of	O	O:0.996906
size	O	O:0.991085
2x4	O	O:0.980564
,	O	O:0.998713
and	O	O:0.999851
then	O	O:0.999173
find	O	O:0.998060
the	O	O:0.999965
mean	O	O:0.995941
of	O	O:0.999005
all	O	O:0.999426
three	O	O:0.994638
blocks	O	O:0.849114
(	O	O:0.998733
so	O	O:0.999781
that	O	O:0.999213
the	O	O:0.999913
shape	O	O:0.997890
of	O	O:0.997515
the	O	O:0.999026
mean	O	O:0.941492
is	O	O:0.997121
2x4	O	O:0.808062
.	O	O:0.982799
	
(	O	O:0.985479
Have	O	O:0.999425
a	O	O:0.999415
look	O	O:0.963282
at	O	O:0.999825
the	O	O:0.999268
comments	O	O:0.987513
above	O	O:0.990010
the	O	O:0.999470
code	O	O:0.971260
for	O	O:0.999490
that	O	O:0.996188
portion	O	O:0.995188
.	O	O:0.997819
)	O	O:0.997548
	
That	O	O:0.972944
is	O	O:0.998290
because	O	O:0.996720
`	O	O:0.992449
fsolve	O	B-API:0.949363
`	O	O:0.996052
thinks	O	O:0.970825
it	O	O:0.996765
is	O	O:0.997754
looking	O	O:0.987393
for	O	O:0.999223
an	O	O:0.997483
array	O	O:0.996771
of	O	O:0.997018
length	O	O:0.974208
17	O	O:0.992307
that	O	O:0.991647
solves	O	O:0.987186
`	O	O:0.998928
p	O	O:0.505233
`	O	O:0.998087
.	O	O:0.948025
	
When	O	O:0.989976
there's	O	O:0.999192
a	O	O:0.998950
choice	O	O:0.966245
between	O	O:0.993732
working	O	O:0.948533
with	O	O:0.994883
NumPy	O	O:0.987542
array	O	O:0.980091
and	O	O:0.999614
numeric	O	O:0.974716
lists	O	O:0.912496
,	O	O:0.998022
the	O	O:0.996580
former	O	O:0.971641
are	O	O:0.998536
typically	O	O:0.996730
faster	O	O:0.975904
.	O	O:0.983212
	
Wait	O	O:0.982123
...	O	O:0.993456
why	O	O:0.999133
do	O	O:0.998880
you	O	O:0.999744
need	O	O:0.998303
the	O	O:0.999549
negative	O	O:0.942921
?	O	O:0.991036
	
But	O	O:0.996491
if	O	O:0.999694
a	O	O:0.998866
dense	O	O:0.932572
3d	O	O:0.978646
array	O	O:0.979943
representation	O	O:0.975617
isn't	O	O:0.998439
that	O	O:0.998797
much	O	O:0.992392
bigger	O	O:0.987660
,	O	O:0.996860
storing	O	O:0.989161
it	O	O:0.996040
as	O	O:0.999769
a	O	O:0.997799
chuncked	O	O:0.562895
and	O	O:0.999260
compressed	O	O:0.988871
hdf5	O	O:0.952786
array	O	O:0.964319
is	O	O:0.996732
probably	O	O:0.990915
the	O	O:0.998869
way	O	O:0.989958
to	O	O:0.996092
go	O	O:0.999279
.	O	O:0.997076
	
Index	O	O:0.905109
datetime	O	O:0.594545
in	O	O:0.993763
numpy	O	O:0.981710
array	O	O:0.989055
	
Is	O	O:0.996888
there	O	O:0.999032
an	O	O:0.997374
"	O	O:0.999413
expandable	O	O:0.899087
"	O	O:0.998295
matrix	O	O:0.998887
data	O	O:0.998230
structure	O	O:0.999239
available	O	O:0.994152
in	O	O:0.999879
a	O	O:0.999229
well	O	O:0.945276
tested	O	O:0.984129
module	O	O:0.989378
?	O	O:0.990317
	
You	O	O:0.993806
can	O	O:0.998820
make	O	O:0.999824
this	O	O:0.999447
one-liner	O	O:0.997676
reusable	O	O:0.996712
if	O	O:0.998344
you	O	O:0.998821
are	O	O:0.999377
going	O	O:0.998261
to	O	O:0.998244
repeat	O	O:0.996893
it	O	O:0.999502
a	O	O:0.994722
lot	O	O:0.683132
:	O	O:0.992099
#CODE	O	O:0.992430
	
Here's	O	O:0.984962
my	O	O:0.985924
array	O	O:0.982643
(	O	O:0.997768
rather	O	O:0.995963
,	O	O:0.999416
a	O	O:0.998834
method	O	O:0.996234
of	O	O:0.999505
generating	O	O:0.993313
representative	O	O:0.996441
test	O	O:0.773963
arrays	O	O:0.915741
):	O	O:0.994114
#CODE	O	O:0.992071
	
We	O	O:0.996549
need	O	O:0.998359
more	O	O:0.995511
information	O	O:0.998143
on	O	O:0.999677
your	O	O:0.994361
array	O	O:0.990548
.	O	O:0.994048
	
@USER	O	O:0.891487
:	O	O:0.992512
If	O	O:0.999307
the	O	O:0.999706
code	O	O:0.992391
all	O	O:0.997403
F77	O	O:0.980447
,	O	O:0.999325
why	O	O:0.987531
is	O	O:0.999316
the	O	O:0.998689
question	O	O:0.981630
tagged	O	O:0.964317
Python	O	O:0.984775
?	O	O:0.992929
	
It	O	O:0.994329
does	O	O:0.999084
that	O	O:0.999469
without	O	O:0.999612
densifying	O	O:0.960404
the	O	O:0.993907
matrix	O	O:0.985456
right	O	O:0.989237
?	O	O:0.997779
	
To	O	O:0.998683
speed	O	O:0.977600
up	O	O:0.996464
the	O	O:0.992986
program	O	O:0.991093
,	O	O:0.999083
I	O	O:0.999900
want	O	O:0.999231
to	O	O:0.998506
pass	O	O:0.995595
the	O	O:0.999025
index	O	O:0.999011
through	O	O:0.996593
a	O	O:0.993961
subroutine	O	O:0.949934
,	O	O:0.998823
but	O	O:0.998371
I	O	O:0.998125
cannot	O	O:0.999831
pass	O	O:0.853565
`	O	O:0.989762
[	O	O:0.990739
index	O	O:0.999326
[	O	O:0.995533
0	O	O:0.994051
]	O	O:0.974586
,	O	O:0.978881
:	O	O:0.991211
,	O	O:0.999427
index	O	O:0.999318
[	O	O:0.998581
1	O	O:0.997402
]	O	O:0.987511
,	O	O:0.997104
index	O	O:0.998513
[	O	O:0.997416
2	O	O:0.998353
]]`	O	O:0.996310
through	O	O:0.991832
a	O	O:0.990667
subroutine	O	O:0.974902
because	O	O:0.997993
I	O	O:0.999063
cannot	O	O:0.999915
pass	O	O:0.948867
the	O	O:0.998855
colon	O	O:0.808983
'	O	O:0.973766
:	O	O:0.987757
'	O	O:0.997447
.	O	O:0.996299
	
Any	O	O:0.987031
thoughts	O	O:0.985801
on	O	O:0.998524
what	O	O:0.994131
I'm	O	O:0.999632
doing	O	O:0.998541
wrong	O	O:0.986940
?	O	O:0.984763
	
This	O	O:0.996133
will	O	O:0.998521
be	O	O:0.999549
far	O	O:0.998359
,	O	O:0.998341
far	O	O:0.984367
faster	O	O:0.991369
than	O	O:0.996981
constantly	O	O:0.986086
reallocating	O	O:0.996373
the	O	O:0.994612
array	O	O:0.993880
inside	O	O:0.991294
the	O	O:0.997782
loop	O	O:0.966133
.	O	O:0.988665
	
How	O	O:0.991717
can	O	O:0.998699
I	O	O:0.999961
get	O	O:0.999921
a	O	O:0.998976
new	O	O:0.962045
array	O	O:0.995124
containing	O	O:0.994369
the	O	O:0.999459
values	O	O:0.986905
of	O	O:0.998823
specific	O	O:0.999507
attributes	O	O:0.993771
of	O	O:0.997015
those	O	O:0.995684
objects	O	O:0.986264
?	O	O:0.992383
	
Seriously	O	O:0.986680
,	O	O:0.999425
at	O	O:0.999638
least	O	O:0.997430
leave	O	O:0.995561
a	O	O:0.996999
note	O	O:0.808917
,	O	O:0.999633
but	O	O:0.998364
given	O	O:0.993509
the	O	O:0.998305
"	O	O:0.997592
complexity	O	O:0.988867
"	O	O:0.998762
of	O	O:0.999757
your	O	O:0.992556
actual	O	O:0.994666
request	O	O:0.997394
I'd	O	O:0.998793
say	O	O:0.999466
that	O	O:0.998023
you'll	O	O:0.999483
have	O	O:0.999238
better	O	O:0.998088
chances	O	O:0.997454
with	O	O:0.999197
a	O	O:0.999633
new	O	O:0.956228
question	O	O:0.980173
.	O	O:0.978215
	
and	O	O:0.999239
find	O	O:0.998130
the	O	O:0.998621
roots	O	O:0.983087
with	O	O:0.986179
numpy	O	O:0.964791
:	O	O:0.997459
#CODE	O	O:0.994644
	
I	O	O:0.998697
need	O	O:0.999191
to	O	O:0.998966
create	O	O:0.999762
a	O	O:0.999074
numpy	O	O:0.995178
array	O	O:0.998806
of	O	O:0.998502
N	O	O:0.988325
elements	O	O:0.985225
,	O	O:0.996820
but	O	O:0.999095
I	O	O:0.999748
want	O	O:0.999809
to	O	O:0.997656
access	O	O:0.998543
the	O	O:0.995971
	
I	O	O:0.998884
have	O	O:0.998517
allocated	O	O:0.998292
a	O	O:0.999674
chunk	O	O:0.992229
of	O	O:0.997135
double	O	O:0.593186
in	O	O:0.999791
a	O	O:0.992772
C	O	O:0.676253
library	O	O:0.989457
and	O	O:0.998448
I	O	O:0.999285
would	O	O:0.999467
like	O	O:0.998211
to	O	O:0.999917
create	O	O:0.999703
a	O	O:0.999033
numpy	O	O:0.984703
1D	O	O:0.996168
array	O	O:0.997742
based	O	O:0.982374
on	O	O:0.999799
that	O	O:0.999174
data	O	O:0.999524
;	O	O:0.999876
ideally	O	O:0.998682
I	O	O:0.999858
would	O	O:0.999739
like	O	O:0.997251
two	O	O:0.999585
versions	O	O:0.998102
one	O	O:0.998766
which	O	O:0.999308
only	O	O:0.994756
wraps	O	O:0.998694
the	O	O:0.998339
c_ptr	O	O:0.701524
readonly	O	O:0.985755
-	O	O:0.998499
letting	O	O:0.994229
the	O	O:0.999191
C	O	O:0.980895
layer	O	O:0.996296
retain	O	O:0.968438
ownership	O	O:0.998782
of	O	O:0.999027
the	O	O:0.999307
data	O	O:0.994759
,	O	O:0.999279
and	O	O:0.999929
one	O	O:0.999654
which	O	O:0.993827
copies	O	O:0.995353
the	O	O:0.999059
data	O	O:0.976337
.	O	O:0.995215
	
The	O	O:0.995664
code	O	O:0.990941
included	O	O:0.989953
in	O	O:0.999229
pypy	O	O:0.893834
is	O	O:0.999739
a	O	O:0.997241
new	O	O:0.925299
array	O	O:0.997293
class	O	O:0.991212
which	O	O:0.996697
tries	O	O:0.993437
to	O	O:0.999457
be	O	O:0.999634
compatible	O	O:0.996869
with	O	O:0.995600
numpy	O	O:0.990031
,	O	O:0.996437
IOW	O	O:0.935330
,	O	O:0.998462
it	O	O:0.993929
is	O	O:0.999858
a	O	O:0.998105
reimplementation	O	O:0.997562
from	O	O:0.993707
scratch	O	O:0.993441
,	O	O:0.999178
without	O	O:0.997497
many	O	O:0.986291
features	O	O:0.956471
from	O	O:0.997049
numpy	O	O:0.991003
.	O	O:0.993144
	
Like	O	O:0.994735
I	O	O:0.999456
say	O	O:0.998260
,	O	O:0.994857
I'm	O	O:0.996043
honestly	O	O:0.991180
struggling	O	O:0.992904
,	O	O:0.999459
any	O	O:0.998490
help	O	O:0.939210
would	O	O:0.998997
be	O	O:0.999608
much	O	O:0.992769
appreciated	O	O:0.937762
.	O	O:0.985178
	
with	O	O:0.975348
array	O	O:0.979119
.	O	O:0.993754
	
I'm	O	O:0.990715
not	O	O:0.998721
sure	O	O:0.999448
that	O	O:0.998270
I	O	O:0.999567
understand	O	O:0.998436
the	O	O:0.994673
difference	O	O:0.968610
between	O	O:0.989349
copying	O	O:0.979532
the	O	O:0.988369
matrix	O	O:0.889271
(	O	O:0.997505
example	O	O:0.994566
1	O	O:0.993539
)	O	O:0.998827
and	O	O:0.999011
copying	O	O:0.996969
the	O	O:0.993079
data	O	O:0.872433
(	O	O:0.998979
example	O	O:0.996920
2	O	O:0.989984
)	O	O:0.998236
.	O	O:0.983410
	
Does	O	O:0.987696
anybody	O	O:0.997822
know	O	O:0.993292
of	O	O:0.999361
a	O	O:0.934351
(	O	O:0.994516
common	O	O:0.996500
case	O	O:0.993985
)	O	O:0.999455
faster-than-linear	O	O:0.971847
way	O	O:0.997305
to	O	O:0.999385
find	O	O:0.999855
the	O	O:0.999860
endpoints	O	O:0.996975
of	O	O:0.999691
a	O	O:0.985556
boolean	O	O:0.961659
property	O	O:0.997616
of	O	O:0.997317
an	O	O:0.995017
array	O	O:0.992366
.	O	O:0.984887
	
Any	O	O:0.980258
unrecognized	O	O:0.982766
type	O	O:0.954505
will	O	O:0.997687
work	O	O:0.999786
this	O	O:0.999638
way	O	O:0.998140
,	O	O:0.999713
so	O	O:0.998920
you	O	O:0.996722
might	O	O:0.999875
want	O	O:0.999656
to	O	O:0.999498
use	O	O:0.999459
`	O	O:0.995340
myclass	O	O:0.582030
`	O	O:0.999798
instead	O	O:0.995905
of	O	O:0.998642
`	O	O:0.987980
object	O	O:0.850961
`	O	O:0.997923
.	O	O:0.960475
	
Iterate	O	O:0.991468
over	O	O:0.981177
vectors	O	O:0.929094
in	O	O:0.999468
a	O	O:0.998991
multidimensional	O	O:0.951550
numpy	O	O:0.991531
array	O	O:0.977816
	
This	O	O:0.995360
way	O	O:0.997187
you	O	O:0.997876
can	O	O:0.999876
load	O	O:0.999461
a	O	O:0.999780
large	O	O:0.973190
dataset	O	O:0.997450
from	O	O:0.997952
a	O	O:0.998818
textfile	O	O:0.997979
memory-efficiently	O	O:0.986100
while	O	O:0.999222
retaining	O	O:0.993196
all	O	O:0.996076
the	O	O:0.997362
convenient	O	O:0.995805
parsing	O	O:0.998724
features	O	O:0.986850
of	O	O:0.998002
the	O	O:0.999544
two	O	O:0.996816
functions	O	O:0.987757
.	O	O:0.989752
	
you	O	O:0.991455
may	O	O:0.999114
win	O	O:0.997555
few	O	O:0.998363
cycles	O	O:0.996637
if	O	O:0.998500
you	O	O:0.999826
multiply	O	O:0.996526
by	O	O:0.999313
inverse	O	O:0.996692
instead	O	O:0.998519
of	O	O:0.999292
dividing	O	O:0.973351
in	O	O:0.997110
floating-point	O	O:0.946224
performance	O	O:0.978003
.	O	O:0.981930
	
Without	O	O:0.991768
knowing	O	O:0.991125
the	O	O:0.999175
size	O	O:0.986746
or	O	O:0.999679
quantity	O	O:0.999193
of	O	O:0.999823
the	O	O:0.999536
images	O	O:0.965303
or	O	O:0.999387
the	O	O:0.999749
application	O	O:0.998080
of	O	O:0.999333
the	O	O:0.996420
algorithm	O	O:0.965332
(	O	O:0.997610
computer	O	O:0.994114
vision	O	O:0.996064
?	O	O:0.998400
)	O	O:0.999434
,	O	O:0.999049
I	O	O:0.998543
can't	O	O:0.998441
say	O	O:0.992752
how	O	O:0.999649
big	O	O:0.996832
a	O	O:0.999069
deal	O	O:0.900954
that	O	O:0.999628
kind	O	O:0.996330
of	O	O:0.998103
speedup	O	O:0.808176
is	O	O:0.996159
.	O	O:0.979378
	
Is	O	O:0.996517
there	O	O:0.998698
an	O	O:0.999458
easy	O	O:0.988660
way	O	O:0.997250
to	O	O:0.999066
sort	O	O:0.997219
these	O	O:0.996844
eigenvalues	O	O:0.805879
(	O	O:0.994904
and	O	O:0.999916
associated	O	O:0.992773
vectors	O	O:0.962866
)	O	O:0.998111
in	O	O:0.998629
order	O	O:0.982942
?	O	O:0.995629
	
You	O	O:0.993764
can	O	O:0.999516
pass	O	O:0.999029
a	O	O:0.999219
numpy	O	O:0.990138
array	O	O:0.991323
or	O	O:0.997823
matrix	O	O:0.998689
as	O	O:0.999515
an	O	O:0.995913
argument	O	O:0.998485
when	O	O:0.994510
initializing	O	O:0.996530
a	O	O:0.996676
sparse	O	O:0.632632
matrix	O	O:0.980121
.	O	O:0.981271
	
(	O	O:0.987823
For	O	O:0.999280
most	O	O:0.996428
common	O	O:0.997780
applications	O	O:0.987628
of	O	O:0.998723
quadratic	O	O:0.975656
forms	O	O:0.998245
q	O	O:0.933580
A	O	O:0.998214
,	O	O:0.998495
the	O	O:0.994954
matrix	O	O:0.968290
A	O	O:0.994018
is	O	O:0.999292
symmetric	O	O:0.965948
,	O	O:0.998965
or	O	O:0.999584
even	O	O:0.997688
symmetric	O	O:0.999025
positive	O	O:0.985406
definite	O	O:0.974847
,	O	O:0.998382
so	O	O:0.998462
feel	O	O:0.994322
free	O	O:0.994536
to	O	O:0.999543
assume	O	O:0.999884
that	O	O:0.998406
either	O	O:0.999702
one	O	O:0.999808
of	O	O:0.999263
these	O	O:0.961204
is	O	O:0.999096
the	O	O:0.996168
case	O	O:0.989767
,	O	O:0.998960
if	O	O:0.997855
it	O	O:0.998235
matters	O	O:0.989050
for	O	O:0.999875
your	O	O:0.913257
answer	O	O:0.968524
.	O	O:0.996528
)	O	O:0.997206
	
I	O	O:0.997949
think	O	O:0.998226
you	O	O:0.990648
might	O	O:0.999527
find	O	O:0.998030
the	O	O:0.999557
`	O	O:0.999436
flat	O	B-API:0.933920
`	O	O:0.998356
method	O	O:0.982739
useful	O	O:0.979218
.	O	O:0.993721
	
Now	O	O:0.998727
that	O	O:0.999528
we	O	O:0.999885
have	O	O:0.999404
both	O	O:0.998952
the	O	O:0.999029
starting	O	O:0.991217
and	O	O:0.999881
ending	O	O:0.993861
values	O	O:0.990934
,	O	O:0.999490
we	O	O:0.999742
can	O	O:0.998881
use	O	O:0.999925
the	O	O:0.998757
indices	O	O:0.891543
function	O	O:0.998123
from	O	O:0.999622
this	O	O:0.998596
question	O	O:0.998556
to	O	O:0.999233
get	O	O:0.999886
an	O	O:0.999726
array	O	O:0.998648
of	O	O:0.999091
selector	O	O:0.964162
indices	O	O:0.941690
:	O	O:0.993167
#CODE	O	O:0.995816
	
10	O	O:0.618792
(	O	O:0.993332
i	O	O:0.993033
?	O	O:0.998876
1	O	O:0.991157
)	O	O:0.999273
K	O	O:0.972432
,	O	O:0.999715
where	O	O:0.993177
K	O	O:0.977089
=	O	O:0.996002
k	O	O:0.927426
/	O	O:0.955360
(	O	O:0.993805
n	O	O:0.987451
?	O	O:0.997263
1	O	O:0.970971
)	O	O:0.998731
.	O	O:0.978427
	
This	O	O:0.994673
identifies	O	O:0.996130
which	O	O:0.999848
rows	O	O:0.994689
have	O	O:0.998884
any	O	O:0.999563
element	O	O:0.990421
which	O	O:0.987373
are	O	O:0.995471
True	O	O:0.982785
#CODE	O	O:0.988030
	
Broadcasting	O	O:0.884507
is	O	O:0.999234
a	O	O:0.997835
more	O	O:0.954711
general	O	O:0.989959
way	O	O:0.986803
to	O	O:0.997316
fill	O	O:0.990338
an	O	O:0.997285
array	O	O:0.994144
and	O	O:0.999489
I	O	O:0.998932
would	O	O:0.998253
guess	O	O:0.969554
is	O	O:0.999567
slower	O	O:0.967548
or	O	O:0.999757
equal	O	O:0.990663
to	O	O:0.999341
the	O	O:0.999953
very	O	O:0.983621
narrow	O	O:0.982755
use	O	O:0.999367
case	O	O:0.993899
of	O	O:0.993864
`	O	O:0.996896
fill	O	B-API:0.839348
`	O	O:0.998467
.	O	O:0.962120
	
By	O	O:0.955118
"	O	O:0.995975
not	O	O:0.999176
replicating	O	O:0.999427
data	O	O:0.983410
"	O	O:0.998440
I	O	O:0.999171
am	O	O:0.999644
assuming	O	O:0.993162
you	O	O:0.999842
mean	O	O:0.987578
"	O	O:0.998981
not	O	O:0.995854
allocating	O	O:0.998641
more	O	O:0.951540
memory	O	O:0.980482
"	O	O:0.993321
.	O	O:0.982166
	
Can	O	O:0.984953
you	O	O:0.998649
post	O	O:0.991136
all	O	O:0.998484
/	O	O:0.999718
more	O	O:0.990587
of	O	O:0.999575
the	O	O:0.999269
data	O	O:0.993861
?	O	O:0.996840
	
The	O	O:0.989129
scoring	O	O:0.838809
matrix	O	O:0.994081
would	O	O:0.997602
be	O	O:0.999589
trivial	O	O:0.999077
,	O	O:0.998936
as	O	O:0.998905
the	O	O:0.989199
"	O	O:0.996382
distance	O	O:0.985096
"	O	O:0.992641
between	O	O:0.992669
two	O	O:0.990261
numbers	O	O:0.789948
is	O	O:0.999098
just	O	O:0.997404
their	O	O:0.995078
difference	O	O:0.973204
.	O	O:0.977242
	
Contours	O	O:0.979518
around	O	O:0.992011
scipy	O	O:0.988893
labeled	O	O:0.989315
regions	O	O:0.970569
in	O	O:0.999228
a	O	O:0.998416
2D	O	O:0.913758
grid	O	O:0.981751
	
Why	O	O:0.983465
doesn't	O	O:0.997425
the	O	O:0.999755
shape	O	O:0.998147
of	O	O:0.998312
my	O	O:0.995845
numpy	O	O:0.999196
array	O	O:0.996326
change	O	O:0.924909
?	O	O:0.994105
	
Mind	O	O:0.992352
also	O	O:0.995342
the	O	O:0.999007
indexing	O	O:0.994159
starts	O	O:0.976550
at	O	O:0.998812
`	O	O:0.997189
0	O	O:0.733746
`	O	O:0.997528
	
I	O	O:0.998541
have	O	O:0.999795
a	O	O:0.998581
vague	O	O:0.956153
feeling	O	O:0.998722
that	O	O:0.995143
I	O	O:0.999440
might	O	O:0.999812
have	O	O:0.996169
seen	O	O:0.999617
a	O	O:0.998219
question	O	O:0.953710
addressing	O	O:0.999080
this	O	O:0.984525
problem	O	O:0.977027
,	O	O:0.998692
but	O	O:0.995120
I	O	O:0.996796
can't	O	O:0.999580
find	O	O:0.990396
it	O	O:0.999487
now	O	O:0.990636
.	O	O:0.996033
	
If	O	O:0.996163
you	O	O:0.999769
know	O	O:0.999408
which	O	O:0.999902
rows	O	O:0.985551
are	O	O:0.999463
to	O	O:0.999861
be	O	O:0.999720
deleted	O	O:0.994915
,	O	O:0.999889
just	O	O:0.998338
extract	O	O:0.983304
the	O	O:0.999861
other	O	O:0.999239
rows	O	O:0.923763
(	O	O:0.998769
you	O	O:0.999904
need	O	O:0.998315
)	O	O:0.999858
and	O	O:0.999798
create	O	O:0.996546
a	O	O:0.995392
new	O	O:0.913592
array	O	O:0.980586
.	O	O:0.978809
	
If	O	O:0.995146
there	O	O:0.984409
is	O	O:0.999173
any	O	O:0.997194
other	O	O:0.996235
way	O	O:0.994134
I	O	O:0.998808
guess	O	O:0.998798
I	O	O:0.998720
have	O	O:0.997614
to	O	O:0.997007
do	O	O:0.999831
that	O	O:0.995622
.	O	O:0.996394
	
I	O	O:0.998578
have	O	O:0.999510
a	O	O:0.992595
matrix	O	O:0.986241
,	O	O:0.998805
say	O	O:0.991532
#CODE	O	O:0.993245
	
You	O	O:0.991150
might	O	O:0.999660
find	O	O:0.996450
out	O	O:0.999436
the	O	O:0.999077
distribution	O	O:0.991836
information	O	O:0.998832
using	O	O:0.998300
`	O	O:0.994484
cat	O	O:0.803986
/	O	O:0.997890
etc	O	O:0.911010
/	O	O:0.998404
*-release	O	O:0.876301
`	O	O:0.995034
;)	O	O:0.949465
	
I	O	O:0.989444
was	O	O:0.997232
wondering	O	O:0.985125
if	O	O:0.997146
anyone	O	O:0.992295
found	O	O:0.998213
a	O	O:0.998942
good	O	O:0.901779
workaround	O	O:0.998597
,	O	O:0.999458
as	O	O:0.998814
my	O	O:0.995372
real-world	O	O:0.979104
problem	O	O:0.997378
of	O	O:0.998779
iterating	O	O:0.994856
over	O	O:0.989262
the	O	O:0.999218
Cartesian-product	O	O:0.968603
of	O	O:0.999710
the	O	O:0.999900
rows	O	O:0.989583
in	O	O:0.999037
very	O	O:0.997824
large	O	O:0.995824
arrays	O	O:0.889084
is	O	O:0.998002
so	O	O:0.997988
slow	O	O:0.921150
it's	O	O:0.999048
impeding	O	O:0.964310
progress	O	O:0.990754
.	O	O:0.986188
	
I	O	O:0.998736
have	O	O:0.998924
an	O	O:0.998664
array	O	O:0.997438
of	O	O:0.997831
x	O	O:0.977876
,	O	O:0.999550
y	O	O:0.977848
,	O	O:0.998652
z	O	O:0.985630
distances	O	O:0.995932
and	O	O:0.999696
I	O	O:0.999937
need	O	O:0.997623
to	O	O:0.998750
find	O	O:0.999594
the	O	O:0.999451
differences	O	O:0.991629
between	O	O:0.995956
each	O	O:0.980629
vector	O	O:0.998960
from	O	O:0.999449
one	O	O:0.999686
another	O	O:0.989531
.	O	O:0.990335
	
The	O	O:0.997955
code	O	O:0.976152
above	O	O:0.997922
finds	O	O:0.998370
parts	O	O:0.993978
where	O	O:0.996314
there	O	O:0.998831
are	O	O:0.999488
at	O	O:0.999595
least	O	O:0.997827
MIN_SILENCE	O	O:0.995410
consecutive	O	O:0.985553
elements	O	O:0.981860
smaller	O	O:0.978822
than	O	O:0.991597
SILENCE_THRESHOLD	O	O:0.571328
.	O	O:0.990438
	
The	O	O:0.997157
list	O	O:0.985567
of	O	O:0.999148
indices	O	O:0.972383
will	O	O:0.998770
always	O	O:0.999788
be	O	O:0.999723
ascending	O	O:0.956130
,	O	O:0.998163
never	O	O:0.995006
have	O	O:0.997109
duplicates	O	O:0.983814
,	O	O:0.998924
but	O	O:0.998896
may	O	O:0.999743
have	O	O:0.999883
gaps	O	O:0.997801
like	O	O:0.998900
the	O	O:0.999450
example	O	O:0.968238
.	O	O:0.988046
	
Any	O	O:0.973171
ideas	O	O:0.975037
?	O	O:0.990844
	
sum	O	O:0.878534
function	O	O:0.995949
in	O	O:0.996470
python	O	O:0.985917
	
All	O	O:0.995929
globals	O	O:0.998860
hold	O	O:0.986555
either	O	O:0.999350
values	O	O:0.997223
referenced	O	O:0.994148
by	O	O:0.999074
those	O	O:0.996990
tuples	O	O:0.883015
or	O	O:0.999167
are	O	O:0.999623
lists	O	O:0.997586
of	O	O:0.995523
tuples	O	O:0.891360
.	O	O:0.993750
	
You	O	O:0.993407
can	O	O:0.999485
pass	O	O:0.997883
a	O	O:0.999612
list	O	O:0.900973
or	O	O:0.999632
an	O	O:0.999216
array	O	O:0.999628
as	O	O:0.999338
indexes	O	O:0.983116
to	O	O:0.996440
any	O	O:0.999702
np	O	O:0.899595
array	O	O:0.988450
.	O	O:0.989404
	
The	O	O:0.984751
array	O	O:0.990213
I'm	O	O:0.998861
using	O	O:0.993861
is	O	O:0.993592
quite	O	O:0.900240
large	O	O:0.762131
(	O	O:0.991990
3500x3500	O	O:0.910548
)	O	O:0.999037
,	O	O:0.998705
so	O	O:0.998955
I'm	O	O:0.998934
wondering	O	O:0.998432
where	O	O:0.999191
the	O	O:0.999750
best	O	O:0.992946
place	O	O:0.991343
to	O	O:0.999768
load	O	O:0.995171
it	O	O:0.997324
is	O	O:0.999141
for	O	O:0.999634
repeated	O	O:0.879920
use	O	O:0.909730
.	O	O:0.937942
	
Basically	O	O:0.987787
,	O	O:0.999310
it	O	O:0.999650
comes	O	O:0.995803
down	O	O:0.991826
to	O	O:0.999392
checking	O	O:0.997859
before	O	O:0.990968
you	O	O:0.996337
add	O	O:0.980311
.	O	O:0.995944
	
I	O	O:0.998570
have	O	O:0.999579
a	O	O:0.996857
simple	O	O:0.838381
function	O	O:0.997762
called	O	O:0.991190
get_gradient	O	O:0.811473
which	O	O:0.986317
takes	O	O:0.997851
a	O	O:0.998713
numpy	O	O:0.986026
array	O	O:0.996923
of	O	O:0.976535
[[	O	O:0.995345
x	O	O:0.993910
,	O	O:0.998608
y	O	O:0.974510
,	O	O:0.998375
Vx	O	O:0.981644
,	O	O:0.998766
Vy	O	O:0.990560
]]	O	O:0.990086
and	O	O:0.995243
returns	O	O:0.881991
(	O	O:0.974698
should	O	O:0.997411
return	O	O:0.985453
)	O	O:0.999475
an	O	O:0.997972
array	O	O:0.997453
of	O	O:0.970008
[[	O	O:0.991976
Vx	O	O:0.994579
,	O	O:0.997692
Vy	O	O:0.988451
,	O	O:0.998496
Ax	O	O:0.988973
,	O	O:0.999168
Ay	O	O:0.983191
]]	O	O:0.993130
.	O	O:0.980316
	
I	O	O:0.992159
found	O	O:0.996976
this	O	O:0.956368
post	O	O:0.812835
:	O	O:0.993772
Python	O	O:0.975581
:	O	O:0.999035
finding	O	O:0.995870
an	O	O:0.998319
element	O	O:0.993161
in	O	O:0.998801
an	O	O:0.997580
array	O	O:0.991140
	
So	O	O:0.988718
,	O	O:0.999426
are	O	O:0.998692
VBOs	O	O:0.990367
simply	O	O:0.996238
not	O	O:0.999644
meant	O	O:0.998352
to	O	O:0.998493
be	O	O:0.999891
that	O	O:0.998150
big	O	O:0.923330
(	O	O:0.999639
I	O	O:0.998896
somehow	O	O:0.999115
doubt	O	O:0.992127
that	O	O:0.998150
VBOs	O	O:0.996104
could	O	O:0.999702
only	O	O:0.999894
have	O	O:0.998274
around	O	O:0.999163
17k	O	O:0.985018
triangles	O	O:0.996534
each	O	O:0.984247
)	O	O:0.998772
?	O	O:0.993381
	
`	O	O:0.996121
flags	O	O:0.557031
`	O	O:0.998567
parameter	O	O:0.990795
leads	O	O:0.995872
to	O	O:0.993825
`	O	O:0.999498
TypeError	O	O:0.904113
`	O	O:0.999835
if	O	O:0.996737
input	O	O:0.999072
array	O	O:0.883604
is	O	O:0.991804
not	O	O:0.992936
contiguous	O	O:0.962270
.	O	O:0.976497
	
I	O	O:0.999236
then	O	O:0.999530
have	O	O:0.999556
a	O	O:0.999782
2nd	O	O:0.978014
array	O	O:0.997679
similar	O	O:0.988340
to	O	O:0.997545
#CODE	O	O:0.999145
	
Convert	O	O:0.981874
a	O	O:0.997946
list	O	O:0.886549
of	O	O:0.998744
2D	O	O:0.988289
numpy	O	O:0.996675
arrays	O	O:0.983537
to	O	O:0.997966
one	O	O:0.999896
3D	O	O:0.989934
numpy	O	O:0.989698
array	O	O:0.988971
?	O	O:0.992206
	
I'm	O	O:0.994268
currently	O	O:0.999191
a	O	O:0.999816
grad	O	O:0.548940
student	O	O:0.991460
at	O	O:0.996003
Harvard	O	O:0.914304
and	O	O:0.999861
a	O	O:0.999342
good	O	O:0.823696
friend	O	O:0.998262
of	O	O:0.998362
mine	O	O:0.963904
went	O	O:0.989165
there	O	O:0.978806
(	O	O:0.998075
he	O	O:0.994773
would	O	O:0.999347
have	O	O:0.999060
graduated	O	O:0.999608
two	O	O:0.998778
or	O	O:0.999871
three	O	O:0.996144
years	O	O:0.993551
ago	O	O:0.996108
,	O	O:0.999488
as	O	O:0.998023
he	O	O:0.898607
is	O	O:0.998940
currently	O	O:0.998618
a	O	O:0.998863
second-year	O	O:0.942065
grad	O	O:0.906472
student	O	O:0.998592
here	O	O:0.968624
at	O	O:0.999534
Harvard	O	O:0.986201
with	O	O:0.997493
me	O	O:0.974912
)	O	O:0.998627
.	O	O:0.979105
	
I'm	O	O:0.991471
not	O	O:0.998830
clear	O	O:0.997104
on	O	O:0.999209
how	O	O:0.996153
you	O	O:0.999458
are	O	O:0.999675
wanting	O	O:0.998953
to	O	O:0.999112
plot	O	O:0.995592
it	O	O:0.996230
,	O	O:0.998597
but	O	O:0.999275
it	O	O:0.999216
sound	O	O:0.997607
like	O	O:0.997606
you'll	O	O:0.999619
need	O	O:0.999292
to	O	O:0.999742
select	O	O:0.999658
some	O	O:0.998746
values	O	O:0.996925
of	O	O:0.999721
a	O	O:0.998671
column	O	O:0.987857
.	O	O:0.990602
	
The	O	O:0.994185
issue	O	O:0.983404
I	O	O:0.998157
am	O	O:0.997879
running	O	O:0.956421
in	O	O:0.998581
to	O	O:0.992934
is	O	O:0.999971
that	O	O:0.995942
the	O	O:0.999718
array	O	O:0.995766
can	O	O:0.997843
be	O	O:0.999880
larger	O	O:0.995368
than	O	O:0.991861
3gb	O	O:0.862195
in	O	O:0.997384
size	O	O:0.909364
(	O	O:0.998020
these	O	O:0.996818
are	O	O:0.999268
huge	O	O:0.982332
images	O	O:0.908457
)	O	O:0.997605
and	O	O:0.999535
I	O	O:0.999813
need	O	O:0.995576
to	O	O:0.989440
segment	O	O:0.999996
them	O	O:0.998372
prior	O	O:0.997457
to	O	O:0.999707
ingesting	O	O:0.999950
them	O	O:0.969560
.	O	O:0.995436
	
The	O	O:0.987333
latter	O	O:0.977985
might	O	O:0.997323
be	O	O:0.996502
faster	O	O:0.990381
because	O	O:0.990768
it	O	O:0.997965
doesn't	O	O:0.998868
produce	O	O:0.997710
the	O	O:0.999631
intermediate	O	O:0.950296
`	O	O:0.993096
x**2	O	B-API:0.598790
`	O	O:0.999003
array	O	O:0.947414
.	O	O:0.994602
	
Any	O	O:0.968394
suggestions	O	O:0.974230
?	O	O:0.990563
	
"	O	O:0.982830
A	O	O:0.999633
copy	O	O:0.811065
of	O	O:0.998740
arr	O	O:0.865754
with	O	O:0.999603
the	O	O:0.998742
elements	O	O:0.998024
specified	O	O:0.993261
by	O	O:0.998791
obj	O	O:0.895054
removed	O	O:0.886393
.	O	O:0.968840
	
is	O	O:0.987562
not	O	O:0.995996
it	O	O:0.999908
another	O	O:0.997905
copy	O	O:0.628696
?	O	O:0.995983
	
NOTE	O	O:0.954316
:	O	O:0.998986
the	O	O:0.997961
row	O	O:0.992651
has	O	O:0.971992
"	O	O:0.994898
:	O	O:0.991243
"	O	O:0.997702
,	O	O:0.997535
but	O	O:0.998918
the	O	O:0.986381
"	O	O:0.987827
:	O	O:0.988833
"	O	O:0.999267
does	O	O:0.998533
mean	O	O:0.996214
the	O	O:0.999576
dict	O	O:0.669034
'	O	O:0.984983
:	O	O:0.991699
'	O	O:0.997447
.	O	O:0.996291
	
If	O	O:0.993707
,	O	O:0.999086
for	O	O:0.999839
some	O	O:0.942977
reason	O	O:0.996239
,	O	O:0.999342
I	O	O:0.999051
would	O	O:0.999562
only	O	O:0.999314
save	O	O:0.995476
one	O	O:0.999419
dictionary	O	O:0.999467
then	O	O:0.998148
every	O	O:0.993914
script	O	O:0.998226
loading	O	O:0.995647
this	O	O:0.998241
file	O	O:0.998443
with	O	O:0.997255
pickle	O	O:0.883079
would	O	O:0.999858
mess	O	O:0.991747
up	O	O:0.999555
the	O	O:0.999827
order	O	O:0.991796
of	O	O:0.998889
the	O	O:0.999153
stored	O	O:0.992800
variables	O	O:0.925505
.	O	O:0.988333
	
You	O	O:0.986112
might	O	O:0.999042
also	O	O:0.999379
want	O	O:0.999828
to	O	O:0.999587
take	O	O:0.999947
a	O	O:0.999634
look	O	O:0.970564
at	O	O:0.999670
Anvil	O	O:0.950413
,	O	O:0.996972
announcement	O	O:0.991924
here	O	O:0.934119
.	O	O:0.995579
	
The	O	O:0.997042
other	O	O:0.991966
way	O	O:0.998862
that	O	O:0.994654
I	O	O:0.999827
know	O	O:0.990784
is	O	O:0.995658
to	O	O:0.996502
convert	O	O:0.993610
Y	O	O:0.974935
to	O	O:0.999329
list	O	O:0.998400
iteratively	O	O:0.961822
.	O	O:0.995401
	
This	O	O:0.976979
is	O	O:0.998638
especially	O	O:0.979153
helpful	O	O:0.991631
since	O	O:0.991381
it	O	O:0.996603
includes	O	O:0.997938
the	O	O:0.998499
import	O	O:0.762951
commands	O	O:0.955244
and	O	O:0.999282
info	O	O:0.997105
on	O	O:0.997373
how	O	O:0.999284
to	O	O:0.999212
write	O	O:0.999452
to	O	O:0.999094
file	O	O:0.999243
.	O	O:0.996281
	
But	O	O:0.995557
actually	O	O:0.997319
I	O	O:0.997981
am	O	O:0.998444
not	O	O:0.996057
so	O	O:0.999804
sure	O	O:0.997545
that	O	O:0.999627
from	O	O:0.999702
where	O	O:0.998721
you	O	O:0.999512
are	O	O:0.999644
now	O	O:0.999255
,	O	O:0.999781
using	O	O:0.999320
sparse	O	O:0.930929
matrices	O	O:0.981414
will	O	O:0.997396
gain	O	O:0.979345
you	O	O:0.999784
any	O	O:0.997552
speed-up	O	O:0.944186
.	O	O:0.991978
	
Upon	O	O:0.980311
deeper	O	O:0.994844
examination	O	O:0.996612
of	O	O:0.999140
the	O	O:0.998406
relationship	O	O:0.989920
between	O	O:0.985181
the	O	O:0.997363
python	O	O:0.989972
printout	O	O:0.989454
and	O	O:0.999597
the	O	O:0.999869
structure	O	O:0.986410
of	O	O:0.998425
my	O	O:0.999113
underlying	O	O:0.999312
data	O	O:0.997820
,	O	O:0.999706
I	O	O:0.999634
see	O	O:0.999277
that	O	O:0.992343
the	O	O:0.999407
python	O	O:0.985916
print	O	O:0.919580
command	O	O:0.926557
is	O	O:0.990410
saying	O	O:0.993631
that	O	O:0.997405
there	O	O:0.996206
are	O	O:0.998976
two	O	O:0.999850
empty	O	O:0.996479
columns	O	O:0.995544
at	O	O:0.999107
the	O	O:0.999914
end	O	O:0.992728
of	O	O:0.997749
the	O	O:0.990829
array	O	O:0.991876
.	O	O:0.984764
	
How	O	O:0.992672
to	O	O:0.998727
convert	O	O:0.998600
a	O	O:0.997191
simple	O	O:0.987640
list	O	O:0.996508
of	O	O:0.999236
lists	O	O:0.993311
into	O	O:0.998017
a	O	O:0.998122
numppy	O	O:0.663428
array	O	O:0.993930
?	O	O:0.992181
	
Django	O	O:0.947176
has	O	O:0.998417
a	O	O:0.995834
library	O	O:0.964355
for	O	O:0.999212
encapsulating	O	O:0.980157
all	O	O:0.994034
the	O	O:0.999293
database	O	O:0.997793
work	O	O:0.995700
into	O	O:0.998771
Python	O	O:0.997581
classes	O	O:0.974453
,	O	O:0.999533
so	O	O:0.999249
you	O	O:0.998112
don't	O	O:0.999894
have	O	O:0.999717
to	O	O:0.999921
mess	O	O:0.999106
with	O	O:0.999158
raw	O	O:0.997111
SQL	O	O:0.998670
until	O	O:0.992557
you	O	O:0.999324
have	O	O:0.999562
to	O	O:0.999789
do	O	O:0.999943
something	O	O:0.999345
really	O	O:0.982336
clever	O	O:0.983804
.	O	O:0.986893
	
So	O	O:0.994673
I	O	O:0.996108
got	O	O:0.997683
numpy	O	O:0.976931
,	O	O:0.998310
scipy	O	O:0.959844
,	O	O:0.996211
IPython	O	O:0.976037
,	O	O:0.996063
and	O	O:0.999664
matplotlib	O	O:0.984837
working	O	O:0.803283
(	O	O:0.998743
I	O	O:0.998591
can	O	O:0.999379
import	O	O:0.994324
all	O	O:0.999667
four	O	O:0.992837
with	O	O:0.994841
"	O	O:0.997300
import	O	O:0.947347
_	O	O:0.918520
)"	O	O:0.935928
.	O	O:0.965847
	
@USER	O	O:0.943790
`	O	O:0.997655
new	O	O:0.941684
type	O	O:0.983756
not	O	O:0.994055
compatible	O	O:0.994435
with	O	O:0.992268
array	O	O:0.982227
.	O	O:0.994434
	
Is	O	O:0.994921
there	O	O:0.998535
any	O	O:0.998065
way	O	O:0.994265
to	O	O:0.997596
do	O	O:0.999943
this	O	O:0.995286
in	O	O:0.997927
Python	O	O:0.989370
?	O	O:0.995379
	
Then	O	O:0.996400
you	O	O:0.999486
can	O	O:0.999507
choose	O	O:0.999938
many	O	O:0.998351
methods	O	O:0.993970
to	O	O:0.996817
visualize	O	O:0.994792
it	O	O:0.996309
.	O	O:0.996946
	
Numpy	O	O:0.948283
Array	O	O:0.976770
to	O	O:0.996538
base64	O	O:0.999341
and	O	O:0.999782
back	O	O:0.985475
to	O	O:0.996024
Numpy	O	O:0.996491
Array	O	O:0.984450
-	O	O:0.997095
Python	O	O:0.986717
	
In	O	O:0.998177
each	O	O:0.991654
iteration	O	O:0.998485
of	O	O:0.998204
Gibbs	O	O:0.988121
sampling	O	O:0.995188
,	O	O:0.999051
we	O	O:0.998733
remove	O	O:0.920636
one	O	O:0.995581
(	O	O:0.999477
current	O	O:0.986658
)	O	O:0.999294
word	O	O:0.974949
,	O	O:0.999411
sample	O	O:0.997712
a	O	O:0.997749
new	O	O:0.939406
topic	O	O:0.996294
for	O	O:0.998656
that	O	O:0.995487
word	O	O:0.998240
according	O	O:0.994569
to	O	O:0.999693
a	O	O:0.999592
posterior	O	O:0.992752
conditional	O	O:0.983945
probability	O	O:0.996399
distribution	O	O:0.996091
inferred	O	O:0.994017
from	O	O:0.998121
the	O	O:0.995464
LDA	O	O:0.990074
model	O	O:0.988628
,	O	O:0.998857
and	O	O:0.999550
update	O	O:0.990077
word-topic	O	O:0.987755
counts	O	O:0.977302
,	O	O:0.999430
as	O	O:0.995855
follows	O	O:0.557276
:	O	O:0.996104
#CODE	O	O:0.994081
	
I	O	O:0.993131
am	O	O:0.998949
getting	O	O:0.986354
weird	O	O:0.988998
errors	O	O:0.997617
when	O	O:0.993465
I	O	O:0.998712
try	O	O:0.999639
to	O	O:0.994230
convert	O	O:0.998634
a	O	O:0.998199
black	O	O:0.911350
and	O	O:0.999455
white	O	O:0.974365
PIL	O	O:0.963154
image	O	O:0.983361
to	O	O:0.998955
a	O	O:0.999882
numpy	O	O:0.961285
array	O	O:0.990962
.	O	O:0.990750
	
Numpy	O	O:0.984481
arrays	O	O:0.991116
have	O	O:0.998877
a	O	O:0.999119
`	O	O:0.998532
copy	O	B-API:0.947231
`	O	O:0.999481
method	O	O:0.979237
which	O	O:0.999273
you	O	O:0.999479
can	O	O:0.999416
use	O	O:0.999595
for	O	O:0.998831
just	O	O:0.997647
this	O	O:0.995083
purpose	O	O:0.954597
.	O	O:0.988469
	
Actually	O	O:0.995194
I	O	O:0.997086
could	O	O:0.999301
not	O	O:0.999188
test	O	O:0.991487
with	O	O:0.999077
big	O	O:0.981170
K	O	O:0.978255
,	O	O:0.997343
d	O	O:0.963234
and	O	O:0.999078
N	O	O:0.995554
as	O	O:0.993147
I	O	O:0.976539
was	O	O:0.998276
going	O	O:0.982789
out	O	O:0.993251
of	O	O:0.993142
memory	O	O:0.937791
.	O	O:0.994029
	
With	O	O:0.995835
all	O	O:0.997814
of	O	O:0.999532
these	O	O:0.995527
options	O	O:0.998976
you	O	O:0.999415
have	O	O:0.999353
to	O	O:0.999713
pay	O	O:0.999882
a	O	O:0.998957
JNA	O	O:0.795432
tax	O	O:0.996507
...	O	O:0.997015
all	O	O:0.997705
of	O	O:0.999955
your	O	O:0.997909
data	O	O:0.996145
has	O	O:0.999369
to	O	O:0.999086
be	O	O:0.999839
copied	O	O:0.961552
before	O	O:0.980028
it	O	O:0.995946
can	O	O:0.998775
be	O	O:0.999862
processed	O	O:0.994667
.	O	O:0.976078
	
Useless	O	O:0.909299
because	O	O:0.996199
it	O	O:0.998136
ignores	O	O:0.998390
the	O	O:0.997812
"	O	O:0.995977
cross	O	O:0.955180
platform	O	O:0.998840
issues	O	O:0.987069
,	O	O:0.999242
proprietary	O	O:0.993391
tool	O	O:0.993275
chains	O	O:0.995709
,	O	O:0.999619
certification	O	O:0.994422
gates	O	O:0.985158
,	O	O:0.999644
licensed	O	O:0.989398
technologies	O	O:0.984140
,	O	O:0.997436
and	O	O:0.999606
stringent	O	O:0.987143
performance	O	O:0.986974
requirements	O	O:0.993000
on	O	O:0.999374
top	O	O:0.996580
of	O	O:0.999444
the	O	O:0.995183
issues	O	O:0.995191
with	O	O:0.993925
legacy	O	O:0.992443
codebases	O	O:0.978174
and	O	O:0.999641
workforce	O	O:0.987019
availability	O	O:0.952420
"	O	O:0.944894
(	O	O:0.993282
John	O	O:0.998291
Carmack	O	O:0.979269
)	O	O:0.999503
that	O	O:0.990512
op	O	O:0.989162
is	O	O:0.997860
probably	O	O:0.957041
facing	O	O:0.973718
.	O	O:0.969662
	
And	O	O:0.997676
that	O	O:0.999501
the	O	O:0.999877
values	O	O:0.993100
of	O	O:0.996432
all	O	O:0.974932
(	O	O:0.999381
x	O	O:0.984308
,	O	O:0.999387
y	O	O:0.997822
)	O	O:0.999324
pairs	O	O:0.984914
are	O	O:0.998090
given	O	O:0.986524
.	O	O:0.985882
	
Is	O	O:0.980962
is	O	O:0.999062
possible	O	O:0.990893
to	O	O:0.999683
have	O	O:0.999902
a	O	O:0.999488
3-D	O	O:0.983070
record	O	O:0.982238
array	O	O:0.991669
in	O	O:0.997681
numpy	O	O:0.990254
?	O	O:0.995272
	
However	O	O:0.992435
,	O	O:0.999554
the	O	O:0.997331
evidence	O	O:0.971902
suggests	O	O:0.995233
that	O	O:0.997697
you've	O	O:0.997480
encountered	O	O:0.998436
an	O	O:0.998725
issue	O	O:0.991878
of	O	O:0.999301
this	O	O:0.993295
sort	O	O:0.934785
.	O	O:0.995141
	
There's	O	O:0.989810
_way_	O	O:0.981760
less	O	O:0.973654
overhead	O	O:0.998669
this	O	O:0.987061
way	O	O:0.988122
.	O	O:0.989664
	
I'm	O	O:0.993129
having	O	O:0.989576
trouble	O	O:0.995522
figuring	O	O:0.977984
out	O	O:0.997543
what	O	O:0.998753
kind	O	O:0.994582
of	O	O:0.999648
test	O	O:0.913387
I	O	O:0.999891
need	O	O:0.998826
here	O	O:0.942505
,	O	O:0.999027
and	O	O:0.999457
the	O	O:0.999216
best	O	O:0.931337
numpy	O	O:0.987674
/	O	O:0.996167
scipy	O	O:0.968908
/	O	O:0.992003
R	O	O:0.825039
function	O	O:0.997701
to	O	O:0.993272
use	O	O:0.999409
for	O	O:0.989319
these	O	O:0.990509
kinds	O	O:0.994413
of	O	O:0.990920
issues	O	O:0.920942
.	O	O:0.993810
	
I	O	O:0.998797
have	O	O:0.998454
see	O	O:0.996105
people	O	O:0.997546
using	O	O:0.998039
dictionaries	O	O:0.918932
,	O	O:0.991488
but	O	O:0.999070
the	O	O:0.992728
arrays	O	O:0.973565
are	O	O:0.998297
large	O	O:0.985873
and	O	O:0.998217
filled	O	O:0.948377
with	O	O:0.992850
both	O	O:0.986792
positive	O	O:0.937706
and	O	O:0.999200
negative	O	O:0.942102
floats	O	O:0.796581
.	O	O:0.975754
	
How	O	O:0.991247
can	O	O:0.998031
I	O	O:0.999980
speed	O	O:0.998017
up	O	O:0.990537
iteration	O	O:0.996352
through	O	O:0.993209
this	O	O:0.995484
transformed	O	O:0.988830
numpy	O	O:0.992616
array	O	O:0.984138
?	O	O:0.992411
	
This	O	O:0.954245
is	O	O:0.993579
may	O	O:0.997633
not	O	O:0.999403
be	O	O:0.999609
the	O	O:0.999588
best	O	O:0.944414
way	O	O:0.995559
to	O	O:0.997312
solve	O	O:0.998775
this	O	O:0.995535
but	O	O:0.999571
have	O	O:0.999647
a	O	O:0.999797
look	O	O:0.971509
at	O	O:0.999570
the	O	O:0.994522
following	O	O:0.976998
...	O	O:0.968266
	
All	O	O:0.990393
in	O	O:0.998901
all	O	O:0.998862
,	O	O:0.999641
I	O	O:0.999607
would	O	O:0.999657
go	O	O:0.998367
with	O	O:0.999450
the	O	O:0.994701
#CODE	O	O:0.990279
	
This	O	O:0.915261
is	O	O:0.997816
not	O	O:0.998974
a	O	O:0.999587
matter	O	O:0.983112
of	O	O:0.998390
style	O	O:0.992422
.	O	O:0.998020
without	O	O:0.983066
the	O	O:0.991467
list	O	B-API:0.686312
(	O	O:0.995074
_	O	O:0.963663
)	O	O:0.998601
it	O	O:0.993440
does	O	O:0.996391
not	O	O:0.999670
even	O	O:0.999860
work	O	O:0.999057
at	O	O:0.999952
last	O	O:0.983408
for	O	O:0.999098
the	O	O:0.995919
case	O	O:0.990639
i	O	O:0.996502
have	O	O:0.998837
that	O	O:0.998923
y	O	O:0.985694
is	O	O:0.999382
an	O	O:0.998763
array	O	O:0.997996
itself	O	O:0.976637
	
(	O	O:0.994544
at	O	O:0.998827
least	O	O:0.994474
it	O	O:0.999244
gives	O	O:0.996572
me	O	O:0.996983
an	O	O:0.998142
error	O	O:0.988713
stating	O	O:0.994792
that	O	O:0.997306
the	O	O:0.997500
'	O	O:0.998173
as	O	O:0.991824
'	O	O:0.986095
is	O	O:0.999341
reserved	O	O:0.918065
in	O	O:0.997539
python	O	O:0.990164
2.6	O	O:0.954963
)	O	O:0.998212
Am	O	O:0.995941
I	O	O:0.998511
correct	O	O:0.997785
?	O	O:0.984619
	
Did	O	O:0.995278
you	O	O:0.997936
try	O	O:0.999352
looking	O	O:0.997688
at	O	O:0.999702
numpy	O	O:0.992504
for	O	O:0.999013
matlab	O	O:0.991114
users	O	O:0.972635
manuals	O	O:0.986325
,	O	O:0.998526
like	O	O:0.985449
:	O	O:0.996428
#URL	O	O:0.993309
	
I	O	O:0.980630
would	O	O:0.998669
not	O	O:0.995153
try	O	O:0.999559
to	O	O:0.998987
process	O	O:0.997890
`	O	O:0.999267
arr	O	O:0.872807
`	O	O:0.999692
in	O	O:0.989880
place	O	O:0.996134
-	O	O:0.999364
it	O	O:0.997189
seems	O	O:0.999525
that	O	O:0.999692
a	O	O:0.999630
new	O	O:0.974444
array	O	O:0.987756
is	O	O:0.998379
created	O	O:0.944568
under	O	O:0.998617
the	O	O:0.998965
hood	O	O:0.959169
in	O	O:0.999536
most	O	O:0.994199
cases	O	O:0.994439
anyway	O	O:0.980957
.	O	O:0.991204
	
Now	O	O:0.995010
you	O	O:0.999094
must	O	O:0.999783
initialize	O	O:0.999471
each	O	O:0.998946
element	O	O:0.997501
of	O	O:0.999022
the	O	O:0.997622
numpy	O	O:0.996389
array	O	O:0.993703
to	O	O:0.999175
be	O	O:0.999953
an	O	O:0.999082
1-d	O	O:0.959759
numpy	O	O:0.963322
array	O	O:0.904564
:	O	O:0.992421
#CODE	O	O:0.995320
	
The	O	O:0.994027
easiest	O	O:0.983835
way	O	O:0.987844
around	O	O:0.995002
this	O	O:0.976792
is	O	O:0.998295
to	O	O:0.999413
just	O	O:0.999683
use	O	O:0.999674
a	O	O:0.991777
numpy	O	O:0.960642
array	O	O:0.996028
,	O	O:0.999381
instead	O	O:0.999668
of	O	O:0.999801
a	O	O:0.997844
numpy	O	O:0.933238
matrix	O	O:0.949638
:	O	O:0.991553
#CODE	O	O:0.995256
	
I	O	O:0.993548
am	O	O:0.998772
trying	O	O:0.993534
to	O	O:0.999684
create	O	O:0.998932
an	O	O:0.997917
affinity	O	O:0.993609
matrix	O	O:0.996291
for	O	O:0.998985
an	O	O:0.989327
image	O	O:0.959236
.	O	O:0.983178
	
to	O	O:0.991326
handle	O	O:0.999497
the	O	O:0.999342
error	O	O:0.991391
cases	O	O:0.983052
and	O	O:0.999282
the	O	O:0.999186
return	O	O:0.887315
value	O	O:0.988104
,	O	O:0.998898
they	O	O:0.994534
are	O	O:0.999455
not	O	O:0.999443
related	O	O:0.995333
to	O	O:0.997870
the	O	O:0.999537
array	O	O:0.983624
assignment	O	O:0.968593
.	O	O:0.994761
	
Saving	O	O:0.988142
a	O	O:0.991089
Numpy	O	O:0.968305
array	O	O:0.996049
as	O	O:0.998446
an	O	O:0.990475
image	O	O:0.972109
(	O	O:0.998326
instructions	O	O:0.986944
)	O	O:0.996876
	
Using	O	O:0.995134
this	O	O:0.992081
,	O	O:0.999444
I	O	O:0.999801
know	O	O:0.994022
I	O	O:0.996246
am	O	O:0.998875
calculating	O	O:0.991253
r-squared	O	O:0.984353
correctly	O	O:0.996663
for	O	O:0.999176
linear	O	O:0.793781
best-fit	O	O:0.729713
(	O	O:0.986855
degree	O	O:0.992625
equals	O	O:0.982924
1	O	O:0.988098
)	O	O:0.995393
.	O	O:0.978385
	
No	O	O:0.995172
expert	O	O:0.990531
on	O	O:0.998476
the	O	O:0.995435
topic	O	O:0.984770
,	O	O:0.996989
but	O	O:0.999674
this	O	O:0.990171
is	O	O:0.999748
some	O	O:0.996449
kind	O	O:0.996730
of	O	O:0.997885
adjency	O	O:0.685838
matrix	O	O:0.979894
(	O	O:0.993442
#URL	O	O:0.981196
)	O	O:0.996795
.	O	O:0.981062
	
about	O	O:0.985446
15	O	O:0.989094
times	O	O:0.987305
faster	O	O:0.993877
using	O	O:0.997650
broadcast	O	O:0.721595
	
Arrays	O	O:0.965435
to	O	O:0.992752
Matrix	O	O:0.999803
numpy	O	O:0.986858
	
but	O	O:0.984045
it	O	O:0.995495
appears	O	O:0.998145
to	O	O:0.999700
only	O	O:0.999834
take	O	O:0.999053
square	O	O:0.988073
matrices	O	O:0.988127
.	O	O:0.983816
	
Any	O	O:0.991145
idea	O	O:0.981660
how	O	O:0.999351
that	O	O:0.998377
can	O	O:0.999778
be	O	O:0.999928
done	O	O:0.996325
?	O	O:0.990471
	
In	O	O:0.999350
your	O	O:0.996849
code	O	O:0.992993
,	O	O:0.999343
`	O	O:0.999799
a	O	O:0.985587
[	O	O:0.998139
condition	O	O:0.998334
]	O	O:0.936955
[	O	O:0.998009
index	O	O:0.998733
]`	O	O:0.991689
returns	O	O:0.994990
the	O	O:0.999213
value	O	O:0.987532
in	O	O:0.999376
a	O	O:0.997483
,	O	O:0.997568
but	O	O:0.999241
I	O	O:0.999541
want	O	O:0.999625
the	O	O:0.994658
INDEX	O	O:0.939949
in	O	O:0.999332
a	O	O:0.997974
,	O	O:0.998820
so	O	O:0.999719
that	O	O:0.996844
`	O	O:0.999949
a	O	O:0.996307
[	O	O:0.995713
INDEX	O	O:0.978646
]	O	O:0.984910
=	O	O:0.981151
a	O	O:0.993365
[	O	O:0.989157
condition	O	O:0.998213
]	O	O:0.937163
[	O	O:0.996112
index	O	O:0.997378
]`	O	O:0.984685
.	O	O:0.988693
	
Any	O	O:0.988176
database	O	O:0.998184
that	O	O:0.996933
can	O	O:0.999847
create	O	O:0.998175
an	O	O:0.999636
index	O	O:0.999669
will	O	O:0.996464
provide	O	O:0.998284
relatively	O	O:0.998889
fast	O	O:0.956481
look-ups	O	O:0.929031
(	O	O:0.998452
depending	O	O:0.998464
on	O	O:0.997973
how	O	O:0.997996
many	O	O:0.998818
millions	O	O:0.999532
of	O	O:0.998855
records	O	O:0.940776
you're	O	O:0.998507
storing	O	O:0.986476
)	O	O:0.996378
.	O	O:0.979165
	
Actually	O	O:0.992627
,	O	O:0.999403
the	O	O:0.999685
best	O	O:0.974124
way	O	O:0.995889
to	O	O:0.999253
manage	O	O:0.999796
packages	O	O:0.991000
on	O	O:0.997974
OS	O	O:0.993999
X	O	O:0.960154
is	O	O:0.975919
[	O	O:0.995143
Homebrew	O	O:0.987359
]	O	O:0.922027
(	O	O:0.982689
#URL	O	O:0.977431
)	O	O:0.967340
(	O	O:0.990064
not	O	O:0.999103
Fink	O	O:0.993907
or	O	O:0.997232
MacPorts	O	O:0.982102
:))	O	O:0.995907
-	O	O:0.998680
which	O	O:0.999300
unfortunately	O	O:0.998355
lists	O	O:0.991417
neither	O	O:0.998466
NumPy	O	O:0.993981
now	O	O:0.996118
SciPy	O	O:0.993940
at	O	O:0.998235
the	O	O:0.998454
current	O	O:0.978465
time	O	O:0.977808
.	O	O:0.992024
	
I	O	O:0.995823
would	O	O:0.999786
like	O	O:0.998560
to	O	O:0.999974
keep	O	O:0.997167
`	O	O:0.998701
xcoords	O	B-API:0.628027
`	O	O:0.999922
a	O	O:0.991823
numpy	O	O:0.987367
array	O	O:0.997170
if	O	O:0.996059
possible	O	O:0.985402
.	O	O:0.999414
what	O	O:0.997891
do	O	O:0.996023
you	O	O:0.999782
mean	O	O:0.985616
'	O	O:0.999725
adding	O	O:0.999573
them	O	O:0.981552
to	O	O:0.998045
the	O	O:0.999381
object	O	O:0.948151
before	O	O:0.990189
it	O	O:0.993689
is	O	O:0.999454
returned	O	O:0.875364
'	O	O:0.993791
?	O	O:0.991564
	
But	O	O:0.992751
I	O	O:0.999830
just	O	O:0.999706
need	O	O:0.996976
to	O	O:0.999808
sort	O	O:0.998974
out	O	O:0.999093
which	O	O:0.998795
points	O	O:0.988960
to	O	O:0.999641
send	O	O:0.995305
for	O	O:0.999758
a	O	O:0.996967
complete	O	O:0.770286
graph	O	O:0.984793
.	O	O:0.979919
	
how	O	O:0.996052
do	O	O:0.997971
I	O	O:0.999633
calculate	O	O:0.991529
that	O	O:0.996891
an	O	O:0.999813
array	O	O:0.998076
of	O	O:0.997442
python	O	O:0.996800
numpy	O	O:0.998431
or	O	O:0.999583
me	O	O:0.996008
of	O	O:0.999400
all	O	O:0.998567
the	O	O:0.999602
calculate	O	O:0.870319
decimals	O	O:0.975384
and	O	O:0.999662
not	O	O:0.999847
skip	O	O:0.904913
like	O	O:0.994461
.	O	O:0.995598
	
It	O	O:0.993131
will	O	O:0.994326
support	O	O:0.996765
it	O	O:0.999323
on	O	O:0.998652
the	O	O:0.999732
next	O	O:0.968900
release	O	O:0.939437
.	O	O:0.993242
	
Python	O	O:0.984771
lists	O	O:0.980430
are	O	O:0.997972
defined	O	O:0.994428
with	O	O:0.996984
square	O	O:0.940917
brackets	O	O:0.988202
,	O	O:0.998358
and	O	O:0.999723
we	O	O:0.999736
want	O	O:0.998270
to	O	O:0.999714
generate	O	O:0.999587
a	O	O:0.999593
list	O	O:0.987560
of	O	O:0.999080
lists	O	O:0.833736
(	O	O:0.999604
where	O	O:0.999222
each	O	O:0.970356
piece	O	O:0.998152
contains	O	O:0.998681
one	O	O:0.999268
of	O	O:0.999887
your	O	O:0.997701
defined	O	O:0.995898
segments	O	O:0.986239
)	O	O:0.994941
.	O	O:0.992384
	
The	O	O:0.994059
biggest	O	O:0.966216
gotcha	O	O:0.993562
for	O	O:0.996027
me	O	O:0.856115
was	O	O:0.992702
that	O	O:0.996103
almost	O	O:0.999151
every	O	O:0.991074
standard	O	O:0.931471
operator	O	O:0.927169
is	O	O:0.997862
overloaded	O	O:0.993365
to	O	O:0.999196
distribute	O	O:0.996429
across	O	O:0.981501
the	O	O:0.993272
array	O	O:0.982876
.	O	O:0.986950
	
I	O	O:0.999101
want	O	O:0.999440
to	O	O:0.997481
combine	O	O:0.997826
the	O	O:0.999259
two	O	O:0.998841
into	O	O:0.995763
a	O	O:0.998378
mutli-dimensional	O	O:0.824193
numpy	O	O:0.992206
array	O	O:0.983299
.	O	O:0.986073
	
where	O	O:0.963289
`	O	O:0.998303
nlooks	O	O:0.593144
`	O	O:0.998792
and	O	O:0.981120
`	O	O:0.999653
dfactor	O	B-API:0.848286
`	O	O:0.998977
are	O	O:0.979194
scalars	O	O:0.991958
and	O	O:0.991620
`	O	O:0.999116
Ic	O	O:0.802283
`	O	O:0.997329
is	O	O:0.992043
the	O	O:0.998437
unfiltered	O	O:0.920487
array	O	O:0.956054
.	O	O:0.985561
	
In	O	O:0.997914
a	O	O:0.998370
10x5x5	O	O:0.843173
matrix	O	O:0.998503
with	O	O:0.988416
`	O	O:0.998837
x	O	O:0.977106
[	O	O:0.998884
0	O	O:0.976935
,	O	O:0.990156
:	O	O:0.996385
,	O	O:0.997905
:]	O	O:0.998964
=	O	O:0.987830
0	O	O:0.988798
`	O	O:0.998777
I	O	O:0.993851
would	O	O:0.999689
expect	O	O:0.999774
a	O	O:0.999607
result	O	O:0.989561
of	O	O:0.987494
:	O	O:0.982054
#CODE	O	O:0.997685
	
For	O	O:0.966572
example	O	O:0.964571
:	O	O:0.999084
I	O	O:0.999836
have	O	O:0.999867
a	O	O:0.992482
=	O	O:0.945053
array	O	O:0.987514
([	O	O:0.992383
123	O	O:0.975043
,	O	O:0.997312
412	O	O:0.978191
,	O	O:0.998239
444	O	O:0.984511
])	O	O:0.991540
	
While	O	O:0.992816
it	O	O:0.999792
often	O	O:0.992900
results	O	O:0.998415
in	O	O:0.999439
a	O	O:0.998958
massive	O	O:0.927568
speedup	O	O:0.995605
to	O	O:0.997378
eliminate	O	O:0.994835
for	O	O:0.998941
loops	O	O:0.976492
and	O	O:0.999491
take	O	O:0.995505
advantage	O	O:0.996571
of	O	O:0.998943
numpy	O	O:0.974620
built-ins	O	O:0.980480
/	O	O:0.985825
vectorization	O	O:0.980210
.	O	O:0.982569
	
If	O	O:0.992751
I	O	O:0.999835
understand	O	O:0.998753
correctly	O	O:0.993773
you	O	O:0.999565
have	O	O:0.999807
a	O	O:0.999810
three	O	O:0.985217
dimensional	O	O:0.988130
array	O	O:0.989038
,	O	O:0.999658
something	O	O:0.997936
like	O	O:0.960514
:	O	O:0.998565
#CODE	O	O:0.997128
	
@USER	O	O:0.911251
:	O	O:0.997563
where	O	O:0.992438
is	O	O:0.999867
a	O	O:0.998954
new	O	O:0.971470
array	O	O:0.993791
created	O	O:0.919337
?	O	O:0.993217
	
array	O	O:0.950251
([	O	O:0.991451
41	O	O:0.953637
,	O	O:0.998128
32	O	O:0.986312
,	O	O:0.996941
41	O	O:0.978604
,	O	O:0.998448
33	O	O:0.985757
,	O	O:0.998446
42	O	O:0.973494
,	O	O:0.998947
32	O	O:0.990813
,	O	O:0.997890
42	O	O:0.978245
,	O	O:0.998818
33	O	O:0.983442
])	O	O:0.991133
	
Any	O	O:0.988018
idea	O	O:0.988589
when	O	O:0.995587
it	O	O:0.999485
will	O	O:0.999795
be	O	O:0.999455
ready	O	O:0.992613
?	O	O:0.986388
	
I	O	O:0.994295
see	O	O:0.998034
you've	O	O:0.991916
taken	O	O:0.996957
care	O	O:0.992529
of	O	O:0.998539
my	O	O:0.994006
edge	O	O:0.996116
issues	O	O:0.989435
,	O	O:0.998999
although	O	O:0.999807
your	O	O:0.994380
filter	O	O:0.947389
size	O	O:0.990061
is	O	O:0.997311
hardcoded	O	O:0.985253
;)	O	O:0.982157
.	O	O:0.966602
	
If	O	O:0.992571
you	O	O:0.998351
open	O	O:0.990422
idle	O	O:0.985596
and	O	O:0.999552
type	O	O:0.956680
`	O	O:0.989651
import	O	O:0.908565
matplotlib	O	O:0.973643
`	O	O:0.992646
it	O	O:0.980461
shouldn't	O	O:0.999578
return	O	O:0.991585
an	O	O:0.997109
error	O	O:0.973520
	
No	O	O:0.995172
expert	O	O:0.990531
on	O	O:0.998476
the	O	O:0.995435
topic	O	O:0.984770
,	O	O:0.996989
but	O	O:0.999674
this	O	O:0.990171
is	O	O:0.999748
some	O	O:0.996449
kind	O	O:0.996730
of	O	O:0.997885
adjency	O	O:0.685838
matrix	O	O:0.979894
(	O	O:0.993442
#URL	O	O:0.981196
)	O	O:0.996795
.	O	O:0.981062
	
Edit	O	O:0.880238
:	O	O:0.994180
If	O	O:0.997859
it's	O	O:0.999514
a	O	O:0.999445
floating	O	O:0.987486
point	O	O:0.995935
issue	O	O:0.984170
,	O	O:0.999691
what	O	O:0.999231
sort	O	O:0.970114
of	O	O:0.999699
floating	O	O:0.990418
point	O	O:0.998890
error	O	O:0.993142
mistakes	O	O:0.998781
a	O	O:0.995369
number	O	O:0.984736
much	O	O:0.993317
less	O	O:0.998527
than	O	O:0.994525
1	O	O:0.993590
as	O	O:0.999332
one	O	O:0.993590
around	O	O:0.972459
8	O	O:0.947938
?	O	O:0.987652
	
The	O	O:0.986427
question	O	O:0.980933
was	O	O:0.996562
about	O	O:0.996208
how	O	O:0.997776
to	O	O:0.998769
slice	O	O:0.998891
if	O	O:0.999538
the	O	O:0.999270
rank	O	B-API:0.536273
is	O	O:0.999447
not	O	O:0.998172
known	O	O:0.996577
at	O	O:0.998053
the	O	O:0.998046
time	O	O:0.994799
I	O	O:0.998599
write	O	O:0.998289
the	O	O:0.994134
code	O	O:0.955600
.	O	O:0.990497
	
I	O	O:0.996964
think	O	O:0.999331
a	O	O:0.956313
typical	O	O:0.753163
method	O	O:0.990971
is	O	O:0.994954
to	O	O:0.999339
always	O	O:0.999298
double	O	O:0.920011
the	O	O:0.997994
size	O	O:0.989359
,	O	O:0.999799
when	O	O:0.998798
you	O	O:0.999135
really	O	O:0.998737
don't	O	O:0.999618
know	O	O:0.995326
how	O	O:0.999864
large	O	O:0.979080
things	O	O:0.989245
will	O	O:0.992429
be	O	O:0.999126
.	O	O:0.997860
	
This	O	O:0.965594
script	O	O:0.968872
is	O	O:0.997961
mainly	O	O:0.980223
intended	O	O:0.993201
to	O	O:0.995075
demonstrate	O	O:0.996346
building	O	O:0.997548
an	O	O:0.995787
independent	O	O:0.992345
python	O	O:0.988805
in	O	O:0.999840
your	O	O:0.993269
home	O	O:0.984044
directory	O	O:0.998320
,	O	O:0.995213
and	O	O:0.999207
assumes	O	O:0.990225
the	O	O:0.984675
system	O	O:0.904007
you're	O	O:0.997067
building	O	O:0.994410
on	O	O:0.995898
has	O	O:0.996133
the	O	O:0.999717
proper	O	O:0.969776
dependencies	O	O:0.977699
already	O	O:0.986407
installed	O	O:0.975710
,	O	O:0.996680
but	O	O:0.998572
it	O	O:0.999340
at	O	O:0.999896
least	O	O:0.999211
points	O	O:0.997416
you	O	O:0.994992
in	O	O:0.999711
the	O	O:0.999559
right	O	O:0.992364
direction	O	O:0.957169
.	O	O:0.995384
	
and	O	O:0.995483
use	O	O:0.996970
the	O	O:0.988788
information	O	O:0.985620
on	O	O:0.998004
the	O	O:0.999623
size	O	O:0.998946
inclued	O	O:0.946070
in	O	O:0.999616
the	O	O:0.999095
filename	O	O:0.999069
to	O	O:0.998362
restore	O	O:0.998403
the	O	O:0.999534
initial	O	O:0.970804
shape	O	O:0.989367
	
Hmm	O	O:0.983895
I	O	O:0.998705
added	O	O:0.991694
for	O	O:0.997640
first	O	O:0.983159
example	O	O:0.972973
,	O	O:0.997829
did	O	O:0.995787
you	O	O:0.999580
know	O	O:0.999099
how	O	O:0.999619
to	O	O:0.999759
copy	O	O:0.994297
from	O	O:0.998742
IDE	O	O:0.986704
exactly	O	O:0.999258
with	O	O:0.996859
commas	O	O:0.973695
and	O	O:0.999629
everything	O	O:0.998871
..?	O	O:0.945732
	
@USER	O	O:0.833672
:	O	O:0.995110
Your	O	O:0.998033
answer	O	O:0.996363
will	O	O:0.999279
give	O	O:0.999274
false	O	O:0.999055
positives	O	O:0.993433
in	O	O:0.998325
the	O	O:0.997607
event	O	O:0.997205
that	O	O:0.999028
one	O	O:0.999477
or	O	O:0.999609
more	O	O:0.727945
(	O	O:0.993206
but	O	O:0.998080
not	O	O:0.999173
all	O	O:0.999843
)	O	O:0.999698
of	O	O:0.999389
the	O	O:0.999377
elements	O	O:0.995094
in	O	O:0.995947
B	O	O:0.996811
matches	O	O:0.998482
with	O	O:0.999035
one	O	O:0.999209
of	O	O:0.999920
the	O	O:0.999852
rows	O	O:0.986191
in	O	O:0.991485
A	O	O:0.998648
.	O	O:0.995219
	
I	O	O:0.995822
would	O	O:0.999856
like	O	O:0.999148
to	O	O:0.999881
average	O	O:0.998520
the	O	O:0.998623
2	O	O:0.995813
different	O	O:0.997109
arrays	O	O:0.995360
contained	O	O:0.993508
within	O	O:0.979151
`	O	O:0.996265
record	O	B-API:0.827684
`	O	O:0.998473
.	O	O:0.960413
	
I	O	O:0.998714
need	O	O:0.998600
to	O	O:0.997225
constrained	O	O:0.999601
minimization	O	O:0.998437
of	O	O:0.999847
some	O	O:0.996669
data	O	O:0.993862
(	O	O:0.998942
ie	O	O:0.999779
so	O	O:0.999841
that	O	O:0.999315
I	O	O:0.999816
get	O	O:0.999653
the	O	O:0.998436
minimum	O	O:0.991854
value	O	O:0.995956
within	O	O:0.998572
a	O	O:0.998877
certain	O	O:0.890839
range	O	O:0.995961
)	O	O:0.997121
.	O	O:0.979860
	
In	O	O:0.997773
this	O	O:0.997512
case	O	O:0.999019
,	O	O:0.999612
I	O	O:0.998984
would	O	O:0.999865
like	O	O:0.998155
to	O	O:0.999887
return	O	O:0.995566
the	O	O:0.998766
index	O	O:0.994422
2	O	O:0.937042
(	O	O:0.999478
2nd	O	O:0.996045
row	O	O:0.991803
)	O	O:0.997162
.	O	O:0.986487
	
a	O	O:0.996293
32	O	O:0.986820
bits	O	O:0.991679
process	O	O:0.973906
can	O	O:0.999895
only	O	O:0.999910
access	O	O:0.996577
around	O	O:0.995228
4	O	O:0.991261
GB	O	O:0.992339
of	O	O:0.991200
memory	O	O:0.952990
.	O	O:0.993947
	
How	O	O:0.994297
do	O	O:0.993162
I	O	O:0.999880
find	O	O:0.994873
out	O	O:0.992841
,	O	O:0.999709
if	O	O:0.998692
the	O	O:0.998949
numpy	O	O:0.997003
BLAS	O	O:0.992322
libraries	O	O:0.991203
are	O	O:0.999370
availalbe	O	O:0.990432
as	O	O:0.997464
dynamically-loadable	O	O:0.907869
?	O	O:0.993941
	
(	O	O:0.995481
they	O	O:0.996876
are	O	O:0.999397
at	O	O:0.999840
same	O	O:0.996705
scale	O	O:0.957251
)	O	O:0.997779
	
Now	O	O:0.997404
simply	O	O:0.999261
create	O	O:0.998216
a	O	O:0.998159
new	O	O:0.938456
array	O	O:0.991363
and	O	O:0.993930
multiply	O	O:0.599062
:	O	O:0.978461
#CODE	O	O:0.994424
	
Take	O	O:0.996701
a	O	O:0.998502
look	O	O:0.923861
at	O	O:0.999827
this	O	O:0.985916
Project	O	O:0.984469
Euler	O	O:0.966767
problem	O	O:0.942538
:	O	O:0.990471
#URL	O	O:0.984464
	
Python	O	O:0.880636
:	O	O:0.997422
how	O	O:0.998769
to	O	O:0.999824
store	O	O:0.999716
a	O	O:0.999031
numpy	O	O:0.987914
multidimensional	O	O:0.995399
array	O	O:0.984027
in	O	O:0.995779
PyTables	O	O:0.980567
?	O	O:0.993071
	
How	O	O:0.981942
can	O	O:0.996057
i	O	O:0.999885
load	O	O:0.992833
all	O	O:0.997732
24	O	O:0.993945
joblib	O	O:0.997250
files	O	O:0.986079
in	O	O:0.998513
one	O	O:0.997890
program	O	O:0.998411
without	O	O:0.996105
any	O	O:0.986840
errors	O	O:0.928398
?	O	O:0.991624
	
Where	O	O:0.990310
I'm	O	O:0.998229
stuck	O	O:0.953030
is	O	O:0.999533
what	O	O:0.991801
the	O	O:0.998572
wrapper	O	O:0.994005
code	O	O:0.982708
should	O	O:0.999475
then	O	O:0.999644
look	O	O:0.999786
like	O	O:0.999339
to	O	O:0.999911
pass	O	O:0.999134
a	O	O:0.997612
MxN	O	O:0.978448
numpy	O	O:0.996996
array	O	O:0.989266
to	O	O:0.997844
the	O	O:0.999308
**	O	O:0.998512
coords1	O	O:0.905171
and	O	O:0.997432
**	O	O:0.999821
coords2	O	O:0.873237
arguments	O	O:0.945344
.	O	O:0.983168
	
I	O	O:0.998803
have	O	O:0.999028
created	O	O:0.993074
a	O	O:0.997736
numpy	O	O:0.965369
2d	O	O:0.993280
array	O	O:0.992734
of	O	O:0.997573
type	O	O:0.920859
string	O	O:0.998674
called	O	O:0.974141
'	O	O:0.998377
minutes_array	O	O:0.879635
'	O	O:0.998788
with	O	O:0.997763
the	O	O:0.999628
first	O	O:0.998779
column	O	O:0.997930
as	O	O:0.999655
unix	O	O:0.963379
timestamps	O	O:0.960804
rounded	O	O:0.972915
to	O	O:0.999155
the	O	O:0.999937
nearest	O	O:0.961623
minute	O	O:0.954691
covering	O	O:0.998779
every	O	O:0.993999
minute	O	O:0.954736
from	O	O:0.998779
the	O	O:0.999507
start	O	O:0.996723
of	O	O:0.999553
the	O	O:0.996052
sensor	O	O:0.998016
timeseries	O	O:0.993240
to	O	O:0.999331
the	O	O:0.999985
end	O	O:0.995420
with	O	O:0.998553
three	O	O:0.998986
empty	O	O:0.997399
columns	O	O:0.996273
to	O	O:0.998803
be	O	O:0.999937
filled	O	O:0.997755
with	O	O:0.999054
data	O	O:0.999156
from	O	O:0.999937
each	O	O:0.997002
of	O	O:0.999738
the	O	O:0.998652
3	O	O:0.994823
sensors	O	O:0.994985
where	O	O:0.996739
available	O	O:0.985406
.	O	O:0.994570
	
Which	O	O:0.993694
can	O	O:0.998442
be	O	O:0.999958
done	O	O:0.998299
in	O	O:0.986262
O	O	B-API:0.535411
(	O	O:0.998205
n	O	O:0.960927
)	O	O:0.997562
,	O	O:0.995344
but	O	O:0.999888
your	O	O:0.982582
answer	O	O:0.996118
requires	O	O:0.981421
O	O	B-API:0.546972
(	O	O:0.997636
mn	O	O:0.966835
)	O	O:0.999287
,	O	O:0.999157
where	O	O:0.997951
m	O	O:0.911730
is	O	O:0.999528
size	O	O:0.978491
of	O	O:0.955145
window	O	O:0.971407
.	O	O:0.992308
	
Somehow	O	O:0.974624
I	O	O:0.999450
always	O	O:0.998949
thought	O	O:0.981598
you	O	O:0.995309
can	O	O:0.999719
load	O	O:0.998761
the	O	O:0.999760
shared	O	O:0.971151
library	O	O:0.998296
compiled	O	O:0.981186
with	O	O:0.998448
any	O	O:0.986948
compiler	O	O:0.991606
.	O	O:0.986977
	
`	O	O:0.994722
array	O	O:0.947957
=[	O	O:0.996486
'	O	O:0.992251
NaN	O	O:0.679263
'	O	O:0.997499
,	O	O:0.997566
'	O	O:0.997688
20	O	O:0.966729
'	O	O:0.997843
,	O	O:0.996580
'	O	O:0.999006
383.333	O	O:0.852830
'	O	O:0.998296
,	O	O:0.998009
'	O	O:0.997746
NaN	O	O:0.792879
'	O	O:0.998286
,	O	O:0.998240
'	O	O:0.997748
NaN	O	O:0.793051
'	O	O:0.998286
,	O	O:0.998240
'	O	O:0.997745
NaN	O	O:0.788984
'	O	O:0.998241
,	O	O:0.998635
'	O	O:0.997835
5	O	O:0.970383
'	O	O:0.998117
,	O	O:0.997872
'	O	O:0.997577
100	O	O:0.964956
'	O	O:0.997826
,	O	O:0.997864
'	O	O:0.997676
129	O	O:0.966299
'	O	O:0.997941
,	O	O:0.996556
'	O	O:0.999006
122.5	O	O:0.852830
'	O	O:0.998296
,	O	O:0.998009
'	O	O:0.997746
NaN	O	O:0.792872
'	O	O:0.998179
,	O	O:0.998081
'	O	O:0.997759
NaN	O	O:0.929674
']`	O	O:0.994336
	
array	O	O:0.974049
,	O	O:0.998322
and	O	O:0.999923
then	O	O:0.996259
use	O	O:0.997195
`	O	O:0.999290
view	O	B-API:0.919642
`	O	O:0.999798
to	O	O:0.993331
turn	O	O:0.998774
it	O	O:0.999619
into	O	O:0.996665
a	O	O:0.998384
structured	O	O:0.872614
array	O	O:0.991199
,	O	O:0.998154
and	O	O:0.999926
then	O	O:0.994424
use	O	O:0.993625
	
and	O	O:0.998354
so	O	O:0.999454
all	O	O:0.997298
we	O	O:0.999738
need	O	O:0.998403
to	O	O:0.999418
do	O	O:0.994620
is	O	O:0.986074
:	O	O:0.982472
#CODE	O	O:0.996339
	
Any	O	O:0.992424
clue	O	O:0.974352
to	O	O:0.997378
why	O	O:0.999953
this	O	O:0.992066
is	O	O:0.999336
happening	O	O:0.978918
?	O	O:0.994868
	
I	O	O:0.997010
think	O	O:0.997403
the	O	O:0.989337
definition	O	O:0.996459
used	O	O:0.979066
in	O	O:0.999483
the	O	O:0.999777
field	O	O:0.998988
of	O	O:0.998483
statistics	O	O:0.823761
is	O	O:0.999778
the	O	O:0.999376
value	O	O:0.991229
in	O	O:0.998361
the	O	O:0.999614
middle	O	O:0.992739
of	O	O:0.999838
your	O	O:0.997942
data	O	O:0.999083
array	O	O:0.994910
after	O	O:0.994114
it	O	O:0.986208
has	O	O:0.996568
been	O	O:0.977575
sorted	O	O:0.969254
.	O	O:0.988230
	
Dense	O	O:0.987254
covariance	O	O:0.996487
matrices	O	O:0.995946
of	O	O:0.999400
that	O	O:0.996835
size	O	O:0.999542
suggest	O	O:0.995134
operations	O	O:0.997499
that	O	O:0.996924
run	O	O:0.987885
forever	O	O:0.979062
!	O	O:0.982558
	
In	O	O:0.997862
this	O	O:0.997577
case	O	O:0.998057
,	O	O:0.999514
I'd	O	O:0.999383
like	O	O:0.998244
it	O	O:0.999754
to	O	O:0.999517
return	O	O:0.999570
a	O	O:0.995641
density	O	O:0.827742
that's	O	O:0.997109
essentially	O	O:0.993627
peaked	O	O:0.998407
completely	O	O:0.988537
at	O	O:0.999583
a	O	O:0.997736
difference	O	O:0.996713
of	O	O:0.997686
0	O	O:0.979362
,	O	O:0.999737
with	O	O:0.995869
no	O	O:0.998531
mass	O	O:0.999025
everywhere	O	O:0.999036
else	O	O:0.990245
.	O	O:0.994323
	
If	O	O:0.993889
the	O	O:0.997954
array	O	O:0.980005
is	O	O:0.994920
doubles	O	O:0.911531
(	O	O:0.997138
remember	O	O:0.993054
python	O	O:0.986634
floats	O	O:0.963569
are	O	O:0.998300
C	O	O:0.995199
doubles	O	O:0.996941
by	O	O:0.995028
default	O	O:0.996363
)	O	O:0.999456
then	O	O:0.996007
you	O	O:0.999963
have	O	O:0.999562
to	O	O:0.999832
think	O	O:0.999983
a	O	O:0.999362
bit	O	O:0.973340
harder	O	O:0.991633
as	O	O:0.985225
==	O	O:0.729486
is	O	O:0.994977
not	O	O:0.989367
really	O	O:0.999260
safe	O	O:0.957293
or	O	O:0.999731
what	O	O:0.996852
you	O	O:0.999838
want	O	O:0.998583
for	O	O:0.999551
floating	O	O:0.994387
point	O	O:0.988082
values	O	O:0.951575
.	O	O:0.985547
	
They	O	O:0.996664
all	O	O:0.999007
have	O	O:0.999618
their	O	O:0.994687
strengths	O	O:0.986040
and	O	O:0.998263
weaknesses	O	O:0.973490
.	O	O:0.951005
	
numpy	O	O:0.992631
array	O	O:0.997706
of	O	O:0.998802
chars	O	O:0.984605
to	O	O:0.998095
string	O	O:0.998887
	
matrix	O	O:0.979899
rank	O	O:0.594116
:	O	O:0.997301
#CODE	O	O:0.993684
	
This	O	O:0.996647
slows	O	O:0.992785
down	O	O:0.982030
for	O	O:0.999390
large	O	O:0.961365
sigma	O	O:0.930600
,	O	O:0.998919
at	O	O:0.996586
which	O	O:0.997830
point	O	O:0.997929
using	O	O:0.998578
FFT-based	O	O:0.836453
smoothing	O	O:0.911062
might	O	O:0.994523
be	O	O:0.995753
faster	O	O:0.987122
.	O	O:0.972503
	
What	O	O:0.970540
is	O	O:0.998753
the	O	O:0.997796
fastest	O	O:0.977210
way	O	O:0.995686
to	O	O:0.999079
iterate	O	O:0.999284
through	O	O:0.994465
all	O	O:0.995679
one	O	O:0.999265
dimensional	O	O:0.994327
sub-arrays	O	O:0.992970
of	O	O:0.998762
an	O	O:0.997199
n	O	O:0.995650
dimensional	O	O:0.987282
array	O	O:0.969109
in	O	O:0.994279
python	O	O:0.982638
.	O	O:0.992308
	
This	O	O:0.976242
works	O	O:0.987804
,	O	O:0.998627
but	O	O:0.990331
it's	O	O:0.993781
really	O	O:0.997208
slow	O	O:0.968246
.	O	O:0.988700
	
If	O	O:0.996939
I	O	O:0.999543
create	O	O:0.998118
a	O	O:0.993341
simple	O	O:0.970778
array	O	O:0.997904
like	O	O:0.999310
this	O	O:0.998418
in	O	O:0.998709
Python	O	O:0.987199
I'm	O	O:0.999661
able	O	O:0.994487
to	O	O:0.999882
read	O	O:0.999446
the	O	O:0.999724
values	O	O:0.980529
in	O	O:0.999215
the	O	O:0.999319
C	O	O:0.924560
code	O	O:0.918157
:	O	O:0.992526
	
In	O	O:0.997306
an	O	O:0.999078
ideal	O	O:0.995545
world	O	O:0.995462
,	O	O:0.999224
the	O	O:0.997968
function	O	O:0.988748
or	O	O:0.999219
class	O	O:0.999446
would	O	O:0.999485
support	O	O:0.995941
overlap	O	O:0.983630
between	O	O:0.997363
the	O	O:0.998368
divisions	O	O:0.950273
in	O	O:0.999288
the	O	O:0.999629
input	O	O:0.992884
matrix	O	O:0.993320
too	O	O:0.977290
.	O	O:0.993666
	
My	O	O:0.982760
problem	O	O:0.944431
is	O	O:0.999226
different	O	O:0.989087
because	O	O:0.997621
I	O	O:0.999463
need	O	O:0.999570
to	O	O:0.999026
find	O	O:0.999244
**	O	O:0.999813
all	O	O:0.996562
**	O	O:0.999865
the	O	O:0.999630
roots	O	O:0.989327
of	O	O:0.998655
my	O	O:0.981854
function	O	O:0.999305
,	O	O:0.999316
on	O	O:0.999870
a	O	O:0.998318
given	O	O:0.940581
interval	O	O:0.996661
.	O	O:0.989935
	
How	O	O:0.991223
can	O	O:0.998648
I	O	O:0.999976
create	O	O:0.997788
a	O	O:0.995027
PyArrayObject	O	O:0.924389
from	O	O:0.999197
this	O	O:0.997596
structure	O	O:0.999261
,	O	O:0.999631
specially	O	O:0.999337
how	O	O:0.999153
I	O	O:0.999587
can	O	O:0.999919
create	O	O:0.998439
a	O	O:0.999658
numpy	O	O:0.985221
array	O	O:0.999238
that	O	O:0.999443
hold	O	O:0.973564
3	O	O:0.978932
object	O	O:0.950398
(	O	O:0.998616
off	O	O:0.998212
course	O	O:0.994916
3	O	O:0.967942
is	O	O:0.998867
an	O	O:0.997456
example	O	O:0.996829
here	O	O:0.961537
)	O	O:0.996345
(	O	O:0.999544
each	O	O:0.992921
of	O	O:0.999679
them	O	O:0.926966
is	O	O:0.999750
an	O	O:0.997276
array	O	O:0.993209
)	O	O:0.995457
	
x	O	O:0.869139
:	O	O:0.999206
a	O	O:0.998869
numpy	O	O:0.989139
2d	O	O:0.979862
array	O	O:0.979287
	
Thanks	O	O:0.956681
for	O	O:0.996823
the	O	O:0.990273
info	O	O:0.895374
.	O	O:0.989063
	
How	O	O:0.993176
would	O	O:0.998742
you	O	O:0.999774
avoid	O	O:0.997245
the	O	O:0.999748
loop	O	O:0.983613
in	O	O:0.999228
the	O	O:0.999532
case	O	O:0.998931
that	O	O:0.999564
all	O	O:0.999910
entries	O	O:0.995968
in	O	O:0.994066
`	O	O:0.999310
repl	O	O:0.909497
`	O	O:0.999446
are	O	O:0.997219
the	O	O:0.999722
same	O	O:0.973142
?	O	O:0.994759
	
Pulling	O	O:0.991626
data	O	O:0.996778
from	O	O:0.999779
a	O	O:0.999271
numpy	O	O:0.981755
array	O	O:0.989798
	
There's	O	O:0.996929
no	O	O:0.997312
effective	O	O:0.986584
difference	O	O:0.977781
(	O	O:0.998103
they	O	O:0.998824
both	O	O:0.999522
return	O	O:0.994866
views	O	O:0.994526
into	O	O:0.988578
the	O	O:0.998620
original	O	O:0.980368
array	O	O:0.992564
)	O	O:0.997434
.	O	O:0.989153
	
Thanks	O	O:0.980314
for	O	O:0.997874
all	O	O:0.997094
the	O	O:0.997180
tips	O	O:0.885261
!	O	O:0.985422
	
remove	O	O:0.944781
zero	O	O:0.981878
lines	O	O:0.990802
2-D	O	O:0.988064
numpy	O	O:0.992513
array	O	O:0.978139
	
Instead	O	O:0.997816
of	O	O:0.999053
using	O	O:0.994161
`	O	O:0.997480
PyInt_AsLong	O	B-API:0.849803
`	O	O:0.999557
,	O	O:0.991497
use	O	O:0.997953
the	O	O:0.971535
`	O	O:0.995519
PyArray_*	O	O:0.688732
`	O	O:0.999683
functions	O	O:0.996055
provided	O	O:0.996902
by	O	O:0.997283
Numpy's	O	O:0.985607
C	O	O:0.836562
API	O	O:0.998973
to	O	O:0.996758
access	O	O:0.999500
the	O	O:0.999756
data	O	O:0.993759
;	O	O:0.999061
in	O	O:0.999575
particular	O	O:0.999465
,	O	O:0.999341
see	O	O:0.979957
section	O	O:0.986844
Array	O	O:0.987798
API	O	O:0.991835
.	O	O:0.987878
	
Well	O	O:0.993283
,	O	O:0.999019
I	O	O:0.998905
tried	O	O:0.998936
dividing	O	O:0.983261
by	O	O:0.992609
the	O	O:0.999242
largest	O	O:0.988944
place	O	O:0.987573
value	O	O:0.996540
.	O	O:0.991454
	
All	O	O:0.995953
of	O	O:0.999120
those	O	O:0.991658
numpys	O	O:0.991198
are	O	O:0.995652
linked	O	O:0.988201
to	O	O:0.998682
the	O	O:0.999636
system	O	O:0.985344
Accelerate	O	O:0.888920
framework	O	O:0.985109
:	O	O:0.994242
#CODE	O	O:0.995938
	
and	O	O:0.998292
I	O	O:0.999728
wish	O	O:0.997994
to	O	O:0.998065
create	O	O:0.999792
a	O	O:0.999548
third	O	O:0.987067
array	O	O:0.999093
with	O	O:0.998269
each	O	O:0.986763
element	O	O:0.998656
from	O	O:0.993193
`	O	O:0.999169
b	O	O:0.939193
`	O	O:0.999539
appearing	O	O:0.749622
`	O	O:0.999871
a	O	O:0.981662
`	O	O:0.999161
times	O	O:0.956133
in	O	O:0.999650
the	O	O:0.999217
new	O	O:0.975263
array	O	O:0.995288
,	O	O:0.996318
as	O	O:0.986495
:	O	O:0.976108
#CODE	O	O:0.995611
	
I	O	O:0.995364
can	O	O:0.999308
imagine	O	O:0.999733
a	O	O:0.999710
number	O	O:0.987168
of	O	O:0.999231
approaches	O	O:0.995665
to	O	O:0.998742
storing	O	O:0.999816
both	O	O:0.990862
of	O	O:0.999589
these	O	O:0.999625
data	O	O:0.999011
formats	O	O:0.997639
,	O	O:0.999681
ranging	O	O:0.994981
from	O	O:0.998255
storing	O	O:0.996946
the	O	O:0.999199
metadata	O	O:0.993407
with	O	O:0.997549
the	O	O:0.998540
`	O	O:0.999184
AttributeSet	O	O:0.594007
`	O	O:0.999742
class	O	O:0.993017
for	O	O:0.999682
each	O	O:0.866897
`	O	O:0.990057
Array	O	O:0.928377
`	O	O:0.997319
/	O	O:0.935765
`	O	O:0.997478
CArray	O	B-API:0.863977
`	O	O:0.999538
to	O	O:0.997644
using	O	O:0.999993
a	O	O:0.987062
`	O	O:0.943590
Table	O	O:0.703749
`	O	O:0.998314
for	O	O:0.998036
all	O	O:0.998714
of	O	O:0.997361
the	O	O:0.993987
metadata	O	O:0.985422
.	O	O:0.985979
	
I	O	O:0.999103
want	O	O:0.999498
to	O	O:0.995472
calculate	O	O:0.999460
the	O	O:0.999752
average	O	O:0.945228
of	O	O:0.999906
four	O	O:0.994551
neighbors	O	O:0.996917
in	O	O:0.999482
a	O	O:0.999329
huge	O	O:0.841397
array	O	O:0.984682
.	O	O:0.984210
	
Suppress	O	O:0.951306
Scientific	O	O:0.978679
Notation	O	O:0.977969
in	O	O:0.993132
Numpy	O	O:0.970647
When	O	O:0.990917
Creating	O	O:0.959361
Array	O	O:0.985035
From	O	O:0.984136
Nested	O	O:0.954250
List	O	O:0.985293
	
I	O	O:0.999102
want	O	O:0.998849
to	O	O:0.998072
find	O	O:0.999684
the	O	O:0.997845
vector	O	O:0.997096
x	O	O:0.990017
'	O	O:0.999484
such	O	O:0.999456
that	O	O:0.998475
Ax	O	O:0.952456
'	O	O:0.994359
is	O	O:0.997936
as	O	O:0.998723
close	O	O:0.990900
as	O	O:0.999149
possible	O	O:0.969733
to	O	O:0.994429
	
And	O	O:0.996256
the	O	O:0.998998
dataset	O	O:0.992926
in	O	O:0.997007
question	O	O:0.969935
is	O	O:0.997687
beyond	O	O:0.961017
doubt	O	O:0.941027
particular	O	O:0.943826
:	O	O:0.985356
There	O	O:0.998727
certainly	O	O:0.988690
is	O	O:0.999458
an	O	O:0.995059
upper	O	O:0.984564
bound	O	O:0.911229
and	O	O:0.999661
a	O	O:0.993832
precision	O	O:0.856801
.	O	O:0.987840
	
Only	O	O:0.995650
integers	O	O:0.986525
can	O	O:0.998757
be	O	O:0.999965
used	O	O:0.998442
as	O	O:0.998218
array	O	O:0.974423
or	O	O:0.997906
matrix	O	O:0.995371
indices	O	O:0.980532
.	O	O:0.989044
	
I	O	O:0.989197
can't	O	O:0.999120
find	O	O:0.982188
it	O	O:0.999719
online	O	O:0.991307
anywhere	O	O:0.994500
.	O	O:0.992609
	
I	O	O:0.997229
will	O	O:0.995882
try	O	O:0.999503
your	O	O:0.998656
code	O	O:0.980395
,	O	O:0.999528
but	O	O:0.998437
I	O	O:0.998198
am	O	O:0.999864
also	O	O:0.995616
going	O	O:0.998416
to	O	O:0.996122
try	O	O:0.999546
writing	O	O:0.997762
a	O	O:0.998295
simple	O	O:0.919584
C	O	O:0.964526
extension	O	O:0.997790
to	O	O:0.998303
simply	O	O:0.999867
do	O	O:0.998865
the	O	O:0.999202
reading	O	O:0.954155
,	O	O:0.997706
math	O	O:0.984157
,	O	O:0.997998
and	O	O:0.999477
drawing	O	O:0.997347
all	O	O:0.984045
in	O	O:0.999572
one	O	O:0.998960
place	O	O:0.992690
.	O	O:0.996570
	
Are	O	O:0.994977
there	O	O:0.998695
any	O	O:0.998956
good	O	O:0.992111
greedy	O	O:0.994895
implementations	O	O:0.991055
to	O	O:0.995401
solve	O	O:0.999741
this	O	O:0.995295
or	O	O:0.999564
am	O	O:0.999360
I	O	O:0.999698
on	O	O:0.999685
my	O	O:0.987601
own	O	O:0.998885
to	O	O:0.998131
implement	O	O:0.999188
this	O	O:0.994578
?	O	O:0.997713
	
The	O	O:0.987219
problem	O	O:0.948768
is	O	O:0.999490
that	O	O:0.983192
for	O	O:0.999606
the	O	O:0.998127
array	O	O:0.988402
input	O	O:0.996562
,	O	O:0.999298
SWIG	O	O:0.989858
complains	O	O:0.995492
that	O	O:0.997846
there	O	O:0.989479
is	O	O:0.999048
no	O	O:0.972544
typemap	O	O:0.973311
.	O	O:0.986305
	
Is	O	O:0.983156
`	O	O:0.999253
column_array_to_add	O	O:0.618701
`	O	O:0.999735
another	O	O:0.976705
2D	O	O:0.992325
array	O	O:0.989904
,	O	O:0.996497
or	O	O:0.994404
is	O	O:0.998752
it	O	O:0.999573
a	O	O:0.999361
1D	O	O:0.966593
column	O	O:0.997336
array	O	O:0.997456
,	O	O:0.999584
as	O	O:0.999215
the	O	O:0.993513
name	O	O:0.934454
implies	O	O:0.982177
?	O	O:0.995068
	
the	O	O:0.997795
sum	O	O:0.969078
of	O	O:0.999791
a	O	O:0.996382
triple-product	O	O:0.655210
(	O	O:0.998357
element-wise	O	O:0.956186
)	O	O:0.995484
.	O	O:0.979418
	
I	O	O:0.993238
ran	O	O:0.996744
a	O	O:0.993820
simple	O	O:0.921331
speed	O	O:0.979896
test	O	O:0.931120
comparing	O	O:0.997502
numpy	O	O:0.966128
and	O	O:0.997881
python	O	O:0.995591
list	O	O:0.896800
comprehension	O	O:0.974894
,	O	O:0.998023
and	O	O:0.997448
apparently	O	O:0.995309
list	O	O:0.947075
comprehension	O	O:0.981075
was	O	O:0.982476
faster	O	O:0.949124
.	O	O:0.988204
	
That	O	O:0.971540
is	O	O:0.998051
why	O	O:0.999410
your	O	O:0.995784
sample	O	O:0.983534
loop	O	O:0.980719
has	O	O:0.996316
been	O	O:0.995687
collapsed	O	O:0.991472
to	O	O:0.999730
read	O	O:0.990351
in	O	O:0.999180
the	O	O:0.999651
full	O	O:0.991513
sample	O	O:0.977224
for	O	O:0.999281
the	O	O:0.990837
receiver	O	O:0.796101
and	O	O:0.998640
channel	O	O:0.992369
in	O	O:0.995751
one	O	O:0.997594
large	O	O:0.992379
read	O	O:0.691187
.	O	O:0.984598
	
Something	O	O:0.997789
like	O	O:0.997903
the	O	O:0.999458
following	O	O:0.982361
iterator	O	O:0.995854
should	O	O:0.998837
get	O	O:0.997564
around	O	O:0.999342
both	O	O:0.994010
of	O	O:0.998862
these	O	O:0.972429
problems	O	O:0.935724
:	O	O:0.991722
#CODE	O	O:0.994549
	
I	O	O:0.992704
appreciate	O	O:0.996952
any	O	O:0.996168
input	O	O:0.996184
on	O	O:0.998773
this	O	O:0.994854
...	O	O:0.994801
	
Do	O	O:0.994854
you	O	O:0.999187
really	O	O:0.999455
need	O	O:0.998905
to	O	O:0.999899
find	O	O:0.999934
such	O	O:0.999844
a	O	O:0.999656
weird	O	O:0.783616
thing	O	O:0.995381
?	O	O:0.988147
	
Any	O	O:0.991703
particular	O	O:0.993726
reason	O	O:0.995969
you	O	O:0.997463
don't	O	O:0.999825
want	O	O:0.999485
to	O	O:0.999370
use	O	O:0.999975
a	O	O:0.996677
straightforward	O	O:0.874515
approach	O	O:0.995060
?	O	O:0.991747
	
The	O	O:0.995865
advantage	O	O:0.996854
of	O	O:0.999074
numpy	O	O:0.940686
is	O	O:0.999401
the	O	O:0.997904
support	O	O:0.956719
of	O	O:0.995639
slicing	O	O:0.974349
at	O	O:0.999787
different	O	O:0.991737
levels	O	O:0.990066
.	O	O:0.987023
	
An	O	O:0.987717
implementation	O	O:0.992783
,	O	O:0.999116
however	O	O:0.992847
,	O	O:0.992476
is	O	O:0.998994
not	O	O:0.994903
really	O	O:0.999002
open	O	O:0.951649
to	O	O:0.995810
interpretation	O	O:0.998779
.	O	O:0.988978
	
Python	O	O:0.980180
numpy	O	O:0.991579
masked	O	O:0.958293
array	O	O:0.990749
initialization	O	O:0.981637
	
You	O	O:0.995691
can	O	O:0.998897
further	O	O:0.999391
optimize	O	O:0.997246
by	O	O:0.996488
exploiting	O	O:0.994176
array-order	O	O:0.887910
alignment	O	O:0.997356
to	O	O:0.997377
reduce	O	O:0.995382
excess	O	O:0.955388
memory	O	O:0.991996
consumption	O	O:0.998293
caused	O	O:0.995511
by	O	O:0.997872
copying	O	O:0.983796
the	O	O:0.996897
original	O	O:0.951864
arrays	O	O:0.969499
.	O	O:0.989434
	
For	O	O:0.990901
example	O	O:0.984848
,	O	O:0.999454
any	O	O:0.993568
vector	O	O:0.982952
(	O	O:0.999025
of	O	O:0.999630
the	O	O:0.999197
appropriate	O	O:0.998660
dimension	O	O:0.997754
)	O	O:0.999458
can	O	O:0.999082
be	O	O:0.999918
an	O	O:0.999830
eigenvector	O	O:0.994564
of	O	O:0.998027
the	O	O:0.992958
identity	O	O:0.989806
matrix	O	O:0.985118
.	O	O:0.991716
	
The	O	O:0.994432
normal	O	O:0.982676
64-bit	O	O:0.990622
double-precision	O	O:0.971364
floating	O	O:0.955148
point	O	O:0.990972
has	O	O:0.997090
least	O	O:0.998463
positive	O	O:0.994321
normal	O	O:0.972885
value	O	O:0.997326
2.2E-308	O	O:0.830765
;	O	O:0.999423
storing	O	O:0.991583
logs	O	O:0.983960
gives	O	O:0.997342
you	O	O:0.999683
an	O	O:0.999730
effective	O	O:0.998324
least	O	O:0.998808
positive	O	O:0.991704
normal	O	O:0.960614
1E-	O	O:0.758665
(	O	O:0.998335
1.7E308	O	O:0.809234
)	O	O:0.997264
.	O	O:0.983253
	
index	O	O:0.997780
set	O	O:0.981422
for	O	O:0.999909
each	O	O:0.970003
position	O	O:0.988574
in	O	O:0.991490
the	O	O:0.999206
index	O	O:0.997176
arrays	O	O:0.976560
.	O	O:0.995833
	
I	O	O:0.995818
am	O	O:0.999020
wondering	O	O:0.978473
if	O	O:0.998539
reassigning	O	O:0.997011
temp	O	O:0.811258
[	O	O:0.998633
]	O	O:0.996190
to	O	O:0.998416
a	O	O:0.999917
1-element	O	O:0.876161
shorter	O	O:0.983252
vector	O	O:0.998916
each	O	O:0.990605
time	O	O:0.977502
is	O	O:0.999203
slow	O	O:0.933097
,	O	O:0.998282
would	O	O:0.998301
it	O	O:0.999784
be	O	O:0.999638
faster	O	O:0.995599
to	O	O:0.995494
pre-allocate	O	O:0.999126
a	O	O:0.998845
96-3	O	O:0.860806
length	O	O:0.998925
list	O	O:0.984462
of	O	O:0.999651
vectors	O	O:0.983349
of	O	O:0.998637
length	O	O:0.981845
96	O	O:0.982864
,	O	O:0.998808
95	O	O:0.983742
,	O	O:0.994040
94	O	O:0.991526
...	O	O:0.996613
to	O	O:0.996557
3	O	O:0.999040
?	O	O:0.995224
	
What	O	O:0.994003
would	O	O:0.998801
we	O	O:0.999788
do	O	O:0.999142
,	O	O:0.999855
if	O	O:0.998672
we	O	O:0.999044
wanted	O	O:0.999346
to	O	O:0.999774
change	O	O:0.999497
values	O	O:0.997719
at	O	O:0.999127
indexes	O	O:0.991342
which	O	O:0.994198
are	O	O:0.999864
multiple	O	O:0.998720
of	O	O:0.998333
given	O	O:0.959471
n	O	O:0.996036
,	O	O:0.999730
like	O	O:0.999235
a	O	O:0.998830
[	O	O:0.992697
2	O	O:0.996113
]	O	O:0.993083
,	O	O:0.999500
a	O	O:0.996284
[	O	O:0.987084
4	O	O:0.995239
]	O	O:0.996860
,	O	O:0.999518
a	O	O:0.996760
[	O	O:0.988715
6	O	O:0.994687
]	O	O:0.996328
,	O	O:0.999540
a	O	O:0.995128
[8	O	O:0.901338
]	O	O:0.996999
.....	O	O:0.958643
for	O	O:0.996424
n=2	O	O:0.909457
?	O	O:0.985013
	
Thanks	O	O:0.980492
for	O	O:0.997916
all	O	O:0.994575
the	O	O:0.997071
python	O	O:0.980223
guidance	O	O:0.971684
!	O	O:0.985000
	
I'm	O	O:0.989314
not	O	O:0.996982
really	O	O:0.994624
pro	O	O:0.996200
Matlab	O	O:0.971100
,	O	O:0.998727
but	O	O:0.995007
surely	O	O:0.989761
Stata	O	O:0.997206
can't	O	O:0.997055
be	O	O:0.999244
so	O	O:0.999720
bad	O	O:0.984809
as	O	O:0.999187
to	O	O:0.994802
require	O	O:0.998006
`	O	O:0.999213
adoedit	O	B-API:0.530957
`	O	O:0.999926
just	O	O:0.987117
to	O	O:0.999822
know	O	O:0.999592
what	O	O:0.996344
algorithm	O	O:0.993556
it	O	O:0.998733
is	O	O:0.999029
using	O	O:0.994231
?	O	O:0.972401
	
This	O	O:0.993877
can	O	O:0.999037
be	O	O:0.999860
found	O	O:0.997832
relatively	O	O:0.979799
easily	O	O:0.994105
by	O	O:0.998009
just	O	O:0.995076
looking	O	O:0.999264
at	O	O:0.999022
points	O	O:0.990453
where	O	O:0.998285
the	O	O:0.999051
potential	O	O:0.979239
exceeds	O	O:0.996583
a	O	O:0.994665
certain	O	O:0.843716
threshold	O	O:0.995740
.	O	O:0.988846
	
Negative	O	O:0.965105
indices	O	O:0.957292
are	O	O:0.998376
interpreted	O	O:0.997749
as	O	O:0.999399
counting	O	O:0.991139
from	O	O:0.997735
the	O	O:0.999877
end	O	O:0.996048
of	O	O:0.998579
the	O	O:0.994650
array	O	O:0.991754
	
I	O	O:0.992371
was	O	O:0.997838
using	O	O:0.990675
unsigned	O	O:0.959246
int	O	O:0.809861
indices	O	O:0.974377
to	O	O:0.998186
speed	O	O:0.999555
up	O	O:0.996986
access	O	O:0.986618
according	O	O:0.971896
to	O	O:0.989415
:	O	O:0.999235
#URL	O	O:0.991712
	
I've	O	O:0.974596
tried	O	O:0.984134
to	O	O:0.994400
vectorise	O	O:0.997487
it	O	O:0.999055
using	O	O:0.998021
numpy	O	O:0.919517
but	O	O:0.938428
I'm	O	O:0.993971
not	O	O:0.998076
really	O	O:0.998755
sure	O	O:0.992258
how	O	O:0.997096
to	O	O:0.998624
do	O	O:0.999943
it	O	O:0.999758
given	O	O:0.994681
that	O	O:0.998445
the	O	O:0.998616
matrix	O	O:0.979120
/	O	O:0.994932
2D	O	O:0.958586
array	O	O:0.995622
gets	O	O:0.988248
changed	O	O:0.988326
on	O	O:0.999236
each	O	O:0.961760
iteration	O	O:0.995354
.	O	O:0.991498
	
Numpy	O	O:0.914942
slicing	O	O:0.987927
x	O	O:0.981739
,	O	O:0.998805
y	O	O:0.984114
,	O	O:0.998564
z	O	O:0.994045
array	O	O:0.994815
for	O	O:0.998277
variable	O	O:0.992567
z	O	O:0.942048
	
I	O	O:0.995823
would	O	O:0.999779
like	O	O:0.997988
to	O	O:0.999776
convert	O	O:0.953788
(	O	O:0.999676
a	O	O:0.999643
more	O	O:0.966571
complicated	O	O:0.998905
form	O	O:0.999517
of	O	O:0.998238
)	O	O:0.999620
the	O	O:0.998007
follwing	O	O:0.982059
Matlab	O	O:0.989274
code	O	O:0.977431
#CODE	O	O:0.993616
	
I	O	O:0.998512
have	O	O:0.999589
a	O	O:0.995668
NumPy	O	O:0.979510
array	O	O:0.975271
'	O	O:0.998010
boolarr	O	O:0.977597
'	O	O:0.998051
of	O	O:0.996656
boolean	O	O:0.932091
type	O	O:0.913009
.	O	O:0.982245
	
If	O	O:0.996782
you	O	O:0.999666
have	O	O:0.999847
only	O	O:0.999435
integers	O	O:0.998398
that	O	O:0.996844
are	O	O:0.999383
between	O	O:0.988918
0	O	O:0.941651
and	O	O:0.997380
n	O	O:0.832678
(	O	O:0.987723
if	O	O:0.998406
not	O	O:0.999370
its	O	O:0.999359
no	O	O:0.997587
problem	O	O:0.989973
to	O	O:0.999128
generalize	O	O:0.997988
to	O	O:0.999246
any	O	O:0.999875
integer	O	O:0.971677
range	O	O:0.998210
unless	O	O:0.997876
its	O	O:0.997117
very	O	O:0.994500
sparse	O	O:0.987231
)	O	O:0.998209
,	O	O:0.998376
the	O	O:0.999718
most	O	O:0.986407
efficient	O	O:0.996591
way	O	O:0.989091
is	O	O:0.999456
the	O	O:0.997928
use	O	O:0.995752
of	O	O:0.996037
take	O	O:0.825645
/	O	O:0.998422
fancy	O	O:0.696294
indexing	O	O:0.877053
:	O	O:0.980316
#CODE	O	O:0.993123
	
Instead	O	O:0.993322
of	O	O:0.998581
2D	O	O:0.986435
coordinates	O	O:0.992513
,	O	O:0.998931
I	O	O:0.995395
use	O	O:0.997683
index	O	O:0.967048
for	O	O:0.999716
every	O	O:0.997195
elements	O	O:0.957414
in	O	O:0.996440
the	O	O:0.995827
matrix	O	O:0.981550
.	O	O:0.987125
	
I	O	O:0.991934
already	O	O:0.997104
tried	O	O:0.984223
converting	O	O:0.983929
the	O	O:0.994501
cols	O	O:0.896130
to	O	O:0.995906
int	O	O:0.976463
but	O	O:0.998364
that	O	O:0.980263
didn't	O	O:0.997176
solve	O	O:0.980482
it	O	O:0.996264
.	O	O:0.991823
	
Although	O	O:0.989282
I'm	O	O:0.999156
sure	O	O:0.993859
there	O	O:0.998652
are	O	O:0.998274
methods	O	O:0.992896
for	O	O:0.997806
applying	O	O:0.942622
RK	O	O:0.977738
to	O	O:0.997930
an	O	O:0.999905
equation	O	O:0.999359
such	O	O:0.997523
as	O	O:0.999899
this	O	O:0.982199
,	O	O:0.998455
I	O	O:0.996101
didn't	O	O:0.997452
find	O	O:0.989379
any	O	O:0.999543
evidence	O	O:0.997669
of	O	O:0.999824
them	O	O:0.968669
in	O	O:0.999489
_Numerical	O	O:0.901861
Recipes_	O	O:0.963247
,	O	O:0.999464
which	O	O:0.998728
I	O	O:0.998830
think	O	O:0.997353
qualifies	O	O:0.986350
that	O	O:0.992141
topic	O	O:0.995464
as	O	O:0.999280
relatively	O	O:0.962327
obscure	O	O:0.965221
;-)	O	O:0.978121
	
When	O	O:0.990712
facing	O	O:0.997290
a	O	O:0.995748
big	O	O:0.795365
computation	O	O:0.983900
,	O	O:0.998060
it	O	O:0.999225
will	O	O:0.998351
run	O	O:0.999046
tests	O	O:0.998005
using	O	O:0.998828
several	O	O:0.987073
implementations	O	O:0.945299
to	O	O:0.999356
find	O	O:0.999610
out	O	O:0.998405
which	O	O:0.996062
is	O	O:0.999302
the	O	O:0.998235
fastest	O	O:0.988244
one	O	O:0.998281
on	O	O:0.999275
our	O	O:0.996615
computer	O	O:0.992322
at	O	O:0.999618
this	O	O:0.991241
moment	O	O:0.995625
.	O	O:0.993550
	
Use	O	O:0.988746
an	O	O:0.998135
array	O	O:0.997054
of	O	O:0.998546
floating	O	O:0.990708
point	O	O:0.998353
numbers	O	O:0.926405
instead	O	O:0.996688
.	O	O:0.995683
	
`	O	O:0.996935
numpy	O	O:0.878198
`	O	O:0.999533
slicing	O	O:0.973382
operations	O	O:0.997864
probably	O	O:0.986704
involve	O	O:0.976823
`	O	O:0.996282
for	O	O:0.962578
`	O	O:0.999464
loops	O	O:0.954897
at	O	O:0.999858
some	O	O:0.992746
level	O	O:0.989808
,	O	O:0.996044
but	O	O:0.994474
they're	O	O:0.998045
implemented	O	O:0.980565
in	O	O:0.998800
c	O	O:0.948750
,	O	O:0.998678
and	O	O:0.998954
provide	O	O:0.993505
a	O	O:0.992283
linear	O	O:0.828394
time	O	O:0.991975
solution	O	O:0.979268
for	O	O:0.999444
this	O	O:0.972311
.	O	O:0.989790
	
I	O	O:0.998582
have	O	O:0.999240
one	O	O:0.989390
question	O	O:0.950411
:	O	O:0.996755
Is	O	O:0.999440
there	O	O:0.999663
only	O	O:0.998573
one	O	O:0.999763
way	O	O:0.996877
to	O	O:0.998830
do	O	O:0.999906
addition	O	O:0.999041
of	O	O:0.998230
two	O	O:0.973442
matrix	O	O:0.994227
?	O	O:0.992361
	
@USER	O	O:0.956817
It	O	O:0.992285
is	O	O:0.999015
now	O	O:0.993495
supported	O	O:0.996640
,	O	O:0.999403
at	O	O:0.999419
least	O	O:0.996279
in	O	O:0.999638
my	O	O:0.980124
version	O	O:0.953752
(	O	O:0.997943
1.7.1	O	O:0.950883
)	O	O:0.996539
.	O	O:0.986730
	
I	O	O:0.998885
know	O	O:0.996543
I	O	O:0.997943
could	O	O:0.998945
start	O	O:0.999213
a	O	O:0.999681
number	O	O:0.992097
of	O	O:0.999140
times	O	O:0.993016
at	O	O:0.999730
random	O	O:0.943603
locations	O	O:0.960233
but	O	O:0.982808
I'm	O	O:0.998452
not	O	O:0.999638
able	O	O:0.999222
to	O	O:0.999624
do	O	O:0.999913
that	O	O:0.998656
with	O	O:0.999673
what	O	O:0.998320
I	O	O:0.999459
am	O	O:0.999365
currently	O	O:0.994845
working	O	O:0.992847
on	O	O:0.997865
and	O	O:0.999874
have	O	O:0.999354
to	O	O:0.998336
use	O	O:0.999906
on	O	O:0.995236
of	O	O:0.997852
these	O	O:0.999574
minimisers	O	O:0.994693
out	O	O:0.997227
of	O	O:0.998691
the	O	O:0.980516
box	O	O:0.993611
.	O	O:0.985150
	
For	O	O:0.997659
small	O	O:0.995017
displacements	O	O:0.993190
of	O	O:0.994817
around	O	O:0.991933
4-5	O	O:0.993241
pixels	O	O:0.974712
,	O	O:0.999450
the	O	O:0.999701
direction	O	O:0.965176
of	O	O:0.997767
vector	O	O:0.994241
calculated	O	O:0.994933
seems	O	O:0.997011
to	O	O:0.998672
be	O	O:0.999902
fine	O	O:0.992855
,	O	O:0.998387
but	O	O:0.999578
the	O	O:0.999370
magnitude	O	O:0.997180
of	O	O:0.997526
the	O	O:0.995714
vector	O	O:0.982119
is	O	O:0.996058
too	O	O:0.982328
small	O	O:0.885916
(	O	O:0.981273
that's	O	O:0.997064
why	O	O:0.997993
I	O	O:0.998833
had	O	O:0.998266
to	O	O:0.994744
multiply	O	O:0.996416
u	O	O:0.989695
,	O	O:0.999787
v	O	O:0.998728
by	O	O:0.994124
3	O	O:0.947018
before	O	O:0.985154
plotting	O	O:0.999041
them	O	O:0.947053
)	O	O:0.998147
.	O	O:0.984388
	
However	O	O:0.994774
,	O	O:0.999373
I	O	O:0.999713
will	O	O:0.999636
need	O	O:0.999254
to	O	O:0.999909
access	O	O:0.999632
all	O	O:0.999433
waveforms	O	O:0.984123
at	O	O:0.999521
some	O	O:0.986419
point	O	O:0.990640
.	O	O:0.985400
	
I've	O	O:0.988123
find	O	O:0.978463
this	O	O:0.981262
:	O	O:0.994205
#URL	O	O:0.993066
but	O	O:0.999710
when	O	O:0.996699
I	O	O:0.999130
try	O	O:0.999676
to	O	O:0.987162
install	O	O:0.999632
this	O	O:0.997737
I	O	O:0.999395
get	O	O:0.999761
an	O	O:0.986191
error	O	O:0.921898
:	O	O:0.991339
#CODE	O	O:0.993500
	
yes	O	O:0.977254
,	O	O:0.999243
I	O	O:0.998677
can	O	O:0.999451
assume	O	O:0.998694
either	O	O:0.999879
that	O	O:0.997739
I	O	O:0.999912
have	O	O:0.999834
g	O	O:0.995787
explicitly	O	O:0.991855
or	O	O:0.999692
that	O	O:0.998134
I	O	O:0.999713
can	O	O:0.999470
sample	O	O:0.997021
x	O	O:0.996467
according	O	O:0.983674
to	O	O:0.997965
g	O	O:0.996799
.	O	O:0.991558
	
`	O	O:0.993908
example	O	O:0.794666
`	O	O:0.998060
is	O	O:0.998340
a	O	O:0.998539
structured	O	O:0.895109
array	O	O:0.997630
consisting	O	O:0.991088
of	O	O:0.999469
two	O	O:0.995759
elements	O	O:0.948869
(	O	O:0.984368
`	O	O:0.995572
(	O	O:0.991988
1	O	O:0.998433
,	O	O:0.997237
2	O	O:0.986228
,	O	O:0.996969
3	O	O:0.990617
)`	O	O:0.971198
and	O	O:0.996202
`	O	O:0.994800
(	O	O:0.968857
4	O	O:0.996222
,	O	O:0.997298
5	O	O:0.988191
,	O	O:0.998791
6	O	O:0.993263
)`)	O	O:0.988960
,	O	O:0.999372
each	O	O:0.965432
element	O	O:0.971588
(	O	O:0.998747
or	O	O:0.998820
'	O	O:0.999088
record	O	O:0.981366
')	O	O:0.998671
having	O	O:0.972935
3	O	O:0.972948
fields	O	O:0.948115
.	O	O:0.989923
	
If	O	O:0.995808
i	O	O:0.995469
have	O	O:0.999660
two	O	O:0.999244
variables	O	O:0.981562
-	O	O:0.999520
where	O	O:0.999333
they	O	O:0.995923
either	O	O:0.999237
are	O	O:0.999500
a	O	O:0.999074
1d	O	O:0.954819
array	O	O:0.998752
of	O	O:0.998602
values	O	O:0.973607
length	O	O:0.997232
n	O	O:0.992759
,	O	O:0.998970
or	O	O:0.998720
are	O	O:0.999794
a	O	O:0.999938
single	O	O:0.980755
value	O	O:0.997775
,	O	O:0.998472
how	O	O:0.998328
do	O	O:0.995431
i	O	O:0.999344
loop	O	O:0.997795
through	O	O:0.999089
them	O	O:0.989795
so	O	O:0.999653
that	O	O:0.998947
I	O	O:0.999826
get	O	O:0.999743
n	O	O:0.981799
values	O	O:0.991072
returned	O	O:0.939812
.	O	O:0.994672
	
For	O	O:0.997212
each	O	O:0.986881
point	O	O:0.993877
in	O	O:0.998876
array	O	O:0.984966
A	O	O:0.999168
,	O	O:0.999568
I	O	O:0.999546
need	O	O:0.998737
to	O	O:0.999300
find	O	O:0.999428
how	O	O:0.999758
many	O	O:0.998508
points	O	O:0.987186
in	O	O:0.998990
array	O	O:0.992821
B	O	O:0.989875
are	O	O:0.997683
within	O	O:0.997302
a	O	O:0.996805
certain	O	O:0.868408
distance	O	O:0.994078
of	O	O:0.997086
it	O	O:0.993835
.	O	O:0.997213
	
It	O	O:0.992256
does	O	O:0.960723
,	O	O:0.999747
but	O	O:0.998892
somehow	O	O:0.996325
it	O	O:0.998586
is	O	O:0.999540
8	O	O:0.988205
times	O	O:0.990352
slower	O	O:0.987609
than	O	O:0.996274
copying	O	O:0.972912
to	O	O:0.997834
numpy	O	O:0.999049
array	O	O:0.996889
:(	O	O:0.998386
I	O	O:0.999431
suppose	O	O:0.998847
the	O	O:0.994279
regular	O	O:0.937612
python	O	O:0.988409
overhead	O	O:0.997608
slows	O	O:0.988796
things	O	O:0.996196
down	O	O:0.985391
much	O	O:0.996979
more	O	O:0.994130
than	O	O:0.998971
a	O	O:0.998050
copy	O	B-API:0.654632
...	O	O:0.989569
	
It	O	O:0.996851
all	O	O:0.998214
depends	O	O:0.994411
on	O	O:0.999676
its	O	O:0.987411
dependencies	O	O:0.990221
.	O	O:0.986201
	
Is	O	O:0.996045
there	O	O:0.999383
a	O	O:0.998523
way	O	O:0.985800
to	O	O:0.999478
make	O	O:0.999631
an	O	O:0.999623
array	O	O:0.999302
of	O	O:0.999768
such	O	O:0.990647
strings	O	O:0.991902
?	O	O:0.977134
	
`	O	O:0.992549
grid	O	O:0.960527
[	O	O:0.999391
1	O	O:0.993431
]`	O	O:0.991859
can	O	O:0.996482
be	O	O:0.999951
used	O	O:0.998880
as	O	O:0.999383
a	O	O:0.998093
proxy	O	O:0.870924
for	O	O:0.993897
the	O	O:0.994203
index	O	O:0.992919
`	O	O:0.998253
j	O	O:0.786624
`	O	O:0.999136
.	O	O:0.954394
	
After	O	O:0.990003
doing	O	O:0.997475
so	O	O:0.997088
,	O	O:0.997159
I	O	O:0.998537
discovered	O	O:0.996616
that	O	O:0.996376
if	O	O:0.999394
I	O	O:0.999652
tried	O	O:0.996462
to	O	O:0.994334
open	O	O:0.993672
the	O	O:0.998486
IPython	O	O:0.979444
HTML	O	O:0.989750
Notebook	O	O:0.998187
I	O	O:0.994092
got	O	O:0.998044
the	O	O:0.995296
error	O	O:0.898385
message	O	O:0.831825
:	O	O:0.994646
#CODE	O	O:0.994748
	
(	O	O:0.995757
the	O	O:0.998985
new	O	O:0.971420
matrix	O	O:0.996143
would	O	O:0.999134
have	O	O:0.999754
n-2	O	O:0.999924
rows	O	O:0.993122
m-2	O	O:0.997048
columns	O	O:0.997460
)	O	O:0.998306
.	O	O:0.992089
	
and	O	O:0.987278
duplicate	O	O:0.999326
index	O	O:0.998793
values	O	O:0.992349
at	O	O:0.999031
the	O	O:0.999867
correpsonding	O	O:0.966022
sites	O	O:0.988920
within	O	O:0.977231
	
I	O	O:0.996716
found	O	O:0.996460
that	O	O:0.989396
the	O	O:0.999689
best	O	O:0.985907
way	O	O:0.998200
to	O	O:0.998695
produce	O	O:0.999735
small	O	O:0.995490
pdf	O	O:0.996089
files	O	O:0.971320
is	O	O:0.996217
to	O	O:0.999542
save	O	O:0.996789
as	O	O:0.999130
eps	O	O:0.954474
in	O	O:0.997882
matplotlib	O	O:0.975415
and	O	O:0.999829
then	O	O:0.997129
use	O	O:0.986855
epstopdf	O	B-API:0.696065
.	O	O:0.959711
	
You	O	O:0.997262
could	O	O:0.998518
rearrange	O	O:0.997418
the	O	O:0.999502
image	O	O:0.996440
to	O	O:0.998868
put	O	O:0.998678
the	O	O:0.997094
(	O	O:0.995191
0	O	O:0.996107
,	O	O:0.999510
0	O	O:0.994527
)	O	O:0.998785
in	O	O:0.998106
the	O	O:0.999157
middle	O	O:0.990459
with	O	O:0.996533
some	O	O:0.977911
matrix	O	O:0.997431
manipulation	O	O:0.986651
.	O	O:0.990214
	
Please	O	O:0.986401
,	O	O:0.998778
see	O	O:0.997145
the	O	O:0.999670
next	O	O:0.913881
example	O	O:0.970733
:	O	O:0.993732
	
A	O	O:0.978301
function	O	O:0.996788
that	O	O:0.984655
broadcasts	O	O:0.999400
a	O	O:0.999401
scalar	O	O:0.954817
operation	O	O:0.998247
over	O	O:0.988707
an	O	O:0.996616
array	O	O:0.966452
is	O	O:0.997764
called	O	O:0.984695
a	O	O:0.998151
universal	O	B-API:0.617633
function	O	O:0.997369
,	O	O:0.996246
or	O	O:0.999491
ufunc	O	O:0.885276
.	O	O:0.994244
	
may	O	O:0.994786
not	O	O:0.999542
exist	O	O:0.999489
until	O	O:0.998589
the	O	O:0.999023
datasets	O	O:0.994558
get	O	O:0.993148
quite	O	O:0.995995
big	O	O:0.973435
(	O	O:0.997452
maybe	O	O:0.995546
you'll	O	O:0.999447
need	O	O:0.998968
at	O	O:0.999876
least	O	O:0.999291
10,000	O	O:0.999377
rows	O	O:0.978360
per	O	O:0.998631
data	O	O:0.999019
set	O	O:0.988045
)	O	O:0.999183
.	O	O:0.976283
	
Magic	O	O:0.989769
answers	O	O:0.988011
like	O	O:0.997227
this	O	O:0.996011
are	O	O:0.998708
not	O	O:0.999192
really	O	O:0.997126
helpful	O	O:0.988444
because	O	O:0.998809
they	O	O:0.995390
don't	O	O:0.999611
solve	O	O:0.995062
the	O	O:0.997606
problem	O	O:0.951362
.	O	O:0.986767
	
I	O	O:0.994556
think	O	O:0.999263
what	O	O:0.959148
I	O	O:0.996403
was	O	O:0.997638
missing	O	O:0.771967
is	O	O:0.999393
that	O	O:0.986738
I	O	O:0.999718
really	O	O:0.999301
have	O	O:0.998036
a	O	O:0.996550
3	O	O:0.974086
dimensional	O	O:0.986607
array	O	O:0.988251
,	O	O:0.998374
48x365x3	O	O:0.889535
.	O	O:0.986688
	
I	O	O:0.998626
load	O	O:0.993983
a	O	O:0.998562
some	O	O:0.952227
machine	O	O:0.999111
learning	O	O:0.997942
data	O	O:0.997672
from	O	O:0.999445
a	O	O:0.999060
csv	O	O:0.984019
file	O	O:0.987144
.	O	O:0.990439
	
So	O	O:0.994056
I	O	O:0.999429
have	O	O:0.998594
it	O	O:0.989022
running	O	O:0.973970
(	O	O:0.998278
or	O	O:0.999675
at	O	O:0.999550
least	O	O:0.999228
that	O	O:0.997485
assignment	O	O:0.959454
isn't	O	O:0.997440
throwing	O	O:0.988899
an	O	O:0.997389
error	O	O:0.974238
and	O	O:0.997756
it's	O	O:0.996099
compiling	O	O:0.976911
)	O	O:0.994003
!	O	O:0.949465
	
@USER	O	O:0.956751
The	O	O:0.998030
first	O	O:0.961372
function	O	O:0.992377
is	O	O:0.994521
taking	O	O:0.989607
chunks	O	O:0.987031
of	O	O:0.999090
200	O	O:0.997422
items	O	O:0.997383
from	O	O:0.999379
your	O	O:0.998692
huge	O	O:0.975068
array	O	O:0.992802
,	O	O:0.996674
and	O	O:0.999606
copying	O	O:0.991177
those	O	O:0.986696
chunks	O	O:0.984376
to	O	O:0.999664
a	O	O:0.999965
new	O	O:0.967404
,	O	O:0.999726
even	O	O:0.998105
more	O	O:0.995279
ginormous	O	O:0.989525
array	O	O:0.985088
.	O	O:0.981230
	
@USER	O	O:0.841319
:	O	O:0.992741
With	O	O:0.993721
`	O	O:0.999435
where	O	O:0.942044
`	O	O:0.998777
it	O	O:0.991004
looks	O	O:0.998733
definitely	O	O:0.995381
nice	O	O:0.956493
,	O	O:0.999158
but	O	O:0.999577
have	O	O:0.998404
you	O	O:0.999816
consider	O	O:0.999680
also	O	O:0.999283
the	O	O:0.999927
implications	O	O:0.975546
to	O	O:0.998390
performance	O	O:0.999946
when	O	O:0.997615
implementing	O	O:0.997485
with	O	O:0.997530
`	O	O:0.999309
where	O	O:0.955764
`	O	O:0.999161
?	O	O:0.989343
	
Anyone	O	O:0.988929
any	O	O:0.995594
idea	O	O:0.988134
what	O	O:0.997645
this	O	O:0.995464
means	O	O:0.997727
?!	O	O:0.996861
	
Assuming	O	O:0.992161
you	O	O:0.998844
are	O	O:0.999768
using	O	O:0.999557
g++	O	O:0.965577
to	O	O:0.975037
compile	O	O:0.997550
...	O	O:0.997593
have	O	O:0.995831
you	O	O:0.999206
had	O	O:0.999853
different	O	O:0.998555
results	O	O:0.994938
in	O	O:0.999546
any	O	O:0.998211
way	O	O:0.998982
when	O	O:0.996011
experimenting	O	O:0.994160
with	O	O:0.998057
compiler	O	O:0.996644
optimization	O	O:0.996997
flags	O	O:0.961611
?	O	O:0.992780
	
With	O	O:0.994812
the	O	O:0.999120
overhead	O	O:0.996184
of	O	O:0.999468
the	O	O:0.999805
data	O	O:0.999436
structure	O	O:0.998784
you	O	O:0.999588
could	O	O:0.999881
be	O	O:0.999896
looking	O	O:0.999025
at	O	O:0.997035
usage	O	O:0.995464
much	O	O:0.979284
higher	O	O:0.991140
than	O	O:0.992258
that	O	O:0.994167
--	O	O:0.999459
I	O	O:0.998693
can't	O	O:0.999466
say	O	O:0.991161
how	O	O:0.999576
much	O	O:0.978009
because	O	O:0.999341
I	O	O:0.998290
don't	O	O:0.999880
know	O	O:0.985847
the	O	O:0.999203
memory	O	O:0.971502
model	O	O:0.985069
behind	O	O:0.990565
SciPy	O	O:0.964431
/	O	O:0.981246
numpy	O	O:0.970176
.	O	O:0.985687
	
I	O	O:0.998591
have	O	O:0.998956
serious	O	O:0.984798
doubt	O	O:0.993931
that	O	O:0.991224
adding	O	O:0.990091
two	O	O:0.998182
numpy	O	O:0.988693
arrays	O	O:0.950315
is	O	O:0.999485
a	O	O:0.996680
bottleneck	O	O:0.993936
that	O	O:0.998167
you	O	O:0.999589
can	O	O:0.999817
solve	O	O:0.999616
rewriting	O	O:0.998820
things	O	O:0.969993
in	O	O:0.995927
C	O	O:0.908703
.	O	O:0.989517
	
Where	O	O:0.995809
exactly	O	O:0.984129
is	O	O:0.999567
the	O	O:0.998146
error	O	O:0.976346
occurring	O	O:0.976712
?	O	O:0.992322
	
I	O	O:0.996092
frequently	O	O:0.996936
convert	O	O:0.864353
16-bit	O	O:0.967342
grayscale	O	O:0.989138
image	O	O:0.997232
data	O	O:0.993173
to	O	O:0.998792
8-b	O	O:0.997518
it	O	O:0.999397
image	O	O:0.999543
data	O	O:0.997369
for	O	O:0.998851
display	O	O:0.845775
.	O	O:0.972850
	
Reduce	O	O:0.967525
it	O	O:0.996433
to	O	O:0.999845
a	O	O:0.999860
1	O	O:0.926570
/	O	O:0.997417
10	O	O:0.988569
resolution	O	O:0.994380
,	O	O:0.999551
find	O	O:0.996981
the	O	O:0.999608
one	O	O:0.999148
white	O	O:0.988756
pixel	O	O:0.990255
,	O	O:0.998550
and	O	O:0.999902
then	O	O:0.998536
you	O	O:0.999909
have	O	O:0.999939
a	O	O:0.999664
precise	O	O:0.995724
idea	O	O:0.997642
of	O	O:0.999156
where	O	O:0.997695
to	O	O:0.999516
search	O	O:0.998251
for	O	O:0.999450
the	O	O:0.994982
centroid	O	O:0.962446
.	O	O:0.976906
	
I	O	O:0.993411
ran	O	O:0.996847
a	O	O:0.997797
test	O	O:0.871433
to	O	O:0.999358
compare	O	O:0.999644
the	O	O:0.998434
times	O	O:0.981963
,	O	O:0.998721
and	O	O:0.999572
found	O	O:0.995570
that	O	O:0.968893
my	O	O:0.995823
method	O	O:0.994903
is	O	O:0.999158
faster	O	O:0.991795
by	O	O:0.997970
quite	O	O:0.994197
a	O	O:0.992333
bit	O	O:0.776213
,	O	O:0.997166
but	O	O:0.997488
Freddie	O	O:0.990466
Witherdon	O	O:0.973565
'	O	O:0.998314
s	O	O:0.983324
suggestion	O	O:0.975835
is	O	O:0.999001
even	O	O:0.980347
faster	O	O:0.975705
.	O	O:0.988338
	
I	O	O:0.983618
couldn't	O	O:0.997645
find	O	O:0.987671
it	O	O:0.999312
in	O	O:0.999516
the	O	O:0.996038
OLS	O	O:0.915321
recipe	O	O:0.953452
(	O	O:0.996613
#URL	O	O:0.991431
)	O	O:0.996809
.	O	O:0.981062
	
convert	O	O:0.886554
binary	O	O:0.984322
string	O	O:0.993361
to	O	O:0.998106
numpy	O	O:0.999560
array	O	O:0.989046
	
How	O	O:0.990975
to	O	O:0.999402
know	O	O:0.999763
where	O	O:0.997170
warning	O	O:0.998620
come	O	O:0.996630
from	O	O:0.996617
in	O	O:0.997822
Python	O	O:0.986194
	
How	O	O:0.994187
do	O	O:0.995300
I	O	O:0.999681
add	O	O:0.997052
a	O	O:0.988799
title	O	O:0.979399
to	O	O:0.998735
my	O	O:0.999752
MatPlotLib	O	O:0.992568
basemap	O	O:0.982983
?	O	O:0.992425
	
It	O	O:0.987053
might	O	O:0.999142
help	O	O:0.995908
issue	O	O:0.999631
of	O	O:0.998024
things	O	O:0.970092
refusing	O	O:0.994431
to	O	O:0.997454
update	O	O:0.995766
,	O	O:0.999209
and	O	O:0.999126
at	O	O:0.999644
the	O	O:0.996136
least	O	O:0.995174
it	O	O:0.999077
will	O	O:0.997877
be	O	O:0.999377
faster	O	O:0.987510
.	O	O:0.974335
	
For	O	O:0.994721
future	O	O:0.988423
use	O	O:0.992958
you	O	O:0.984994
should	O	O:0.998160
really	O	O:0.999572
find	O	O:0.992881
out	O	O:0.996119
why	O	O:0.998492
it	O	O:0.994601
is	O	O:0.999634
installed	O	O:0.973394
in	O	O:0.999866
a	O	O:0.998862
location	O	O:0.990668
that	O	O:0.992399
isn't	O	O:0.999690
searched	O	O:0.996906
by	O	O:0.997875
python	O	O:0.995755
by	O	O:0.975134
default	O	O:0.940930
.	O	O:0.951182
	
I've	O	O:0.985169
done	O	O:0.991133
that	O	O:0.980539
and	O	O:0.999662
I'm	O	O:0.999449
still	O	O:0.989380
getting	O	O:0.996677
the	O	O:0.998544
same	O	O:0.970456
error	O	O:0.982089
-	O	O:0.999321
it	O	O:0.998563
can't	O	O:0.999531
find	O	O:0.996264
the	O	O:0.999406
sip	O	O:0.941915
module	O	O:0.980321
.	O	O:0.986138
	
ImportError	O	O:0.889828
:	O	O:0.991936
DLL	O	O:0.996581
load	O	O:0.648531
failed	O	O:0.906626
:	O	O:0.997590
The	O	O:0.998531
specified	O	O:0.989118
module	O	O:0.987967
could	O	O:0.995447
not	O	O:0.999658
be	O	O:0.999279
found	O	O:0.976660
.	O	O:0.970923
	
This	O	O:0.975720
has	O	O:0.971530
happened	O	O:0.962410
previously	O	O:0.836253
(	O	O:0.995102
and	O	O:0.998942
I	O	O:0.987312
was	O	O:0.986982
not	O	O:0.996932
able	O	O:0.997943
to	O	O:0.999513
get	O	O:0.998943
around	O	O:0.995307
it	O	O:0.997630
)	O	O:0.998528
.	O	O:0.986302
	
@USER	O	O:0.949837
SObolev	O	O:0.865353
:	O	O:0.998849
Histograms	O	O:0.997179
of	O	O:0.999629
the	O	O:0.998272
values	O	O:0.994895
falling	O	O:0.976561
within	O	O:0.999485
a	O	O:0.998613
range	O	O:0.996978
of	O	O:0.999615
keys	O	O:0.978471
where	O	O:0.999611
each	O	O:0.987684
bin	O	O:0.967013
is	O	O:0.999462
of	O	O:0.997433
size	O	O:0.971430
0.1	O	O:0.895600
	
Also	O	O:0.996882
,	O	O:0.999362
now	O	O:0.999348
that	O	O:0.995932
I	O	O:0.999724
look	O	O:0.997870
at	O	O:0.996765
it	O	O:0.997873
,	O	O:0.999310
the	O	O:0.998319
y-axis	O	O:0.978222
limits	O	O:0.970619
haven't	O	O:0.997925
been	O	O:0.996235
set	O	O:0.990820
right	O	O:0.991823
.	O	O:0.991381
	
I've	O	O:0.968067
looked	O	O:0.967198
for	O	O:0.999174
various	O	O:0.985383
solutions	O	O:0.978409
to	O	O:0.998949
my	O	O:0.999040
problem	O	O:0.985269
but	O	O:0.998852
can't	O	O:0.996487
get	O	O:0.999220
any	O	O:0.999265
help	O	O:0.918196
.	O	O:0.992891
	
I	O	O:0.998589
normally	O	O:0.998402
use	O	O:0.997606
something	O	O:0.996142
akin	O	O:0.973961
to	O	O:0.999506
the	O	O:0.999903
following	O	O:0.975993
for	O	O:0.999893
this	O	O:0.993769
purpose	O	O:0.979054
and	O	O:0.999860
the	O	O:0.995537
result	O	O:0.938396
is	O	O:0.999597
a	O	O:0.998089
very	O	O:0.976905
nice	O	O:0.997010
plot	O	O:0.979476
where	O	O:0.996872
x1	O	O:0.962099
,	O	O:0.998479
x2	O	O:0.938619
and	O	O:0.997561
x3	O	O:0.983075
are	O	O:0.996793
defined	O	O:0.992062
as	O	O:0.994681
follows	O	O:0.836083
	
And	O	O:0.996458
I	O	O:0.999720
have	O	O:0.999702
all	O	O:0.998496
of	O	O:0.999949
them	O	O:0.971591
installed	O	O:0.992568
.	O	O:0.990574
	
When	O	O:0.991664
I	O	O:0.999603
save	O	O:0.993674
these	O	O:0.995238
plots	O	O:0.980072
to	O	O:0.996243
pdf	O	O:0.998768
,	O	O:0.998375
it	O	O:0.996995
takes	O	O:0.998212
a	O	O:0.999628
long	O	O:0.988168
time	O	O:0.996074
to	O	O:0.998289
write	O	O:0.999268
,	O	O:0.997952
and	O	O:0.999772
reading	O	O:0.995562
the	O	O:0.992528
pdf	O	O:0.891366
is	O	O:0.998978
even	O	O:0.988710
worse	O	O:0.987600
.	O	O:0.988431
	
Seems	O	O:0.997995
like	O	O:0.999347
a	O	O:0.999694
security	O	O:0.966939
setting	O	O:0.981157
on	O	O:0.990452
OS	O	O:0.975979
X	O	O:0.950594
is	O	O:0.990566
preventing	O	O:0.954563
it	O	O:0.997887
,	O	O:0.997106
and	O	O:0.999561
the	O	O:0.999183
quick	O	O:0.895117
fix	O	O:0.949590
seems	O	O:0.996686
to	O	O:0.999484
be	O	O:0.999903
to	O	O:0.998824
run	O	O:0.995260
apache	O	O:0.993598
as	O	O:0.996473
root	O	O:0.941853
.	O	O:0.987026
	
Any	O	O:0.982964
ideas	O	O:0.992678
how	O	O:0.997883
to	O	O:0.999657
deal	O	O:0.999619
with	O	O:0.999887
this	O	O:0.991578
problem	O	O:0.997245
?	O	O:0.995202
	
If	O	O:0.997883
I	O	O:0.998693
remove	O	O:0.958458
the	O	O:0.963626
function	O	O:0.989500
and	O	O:0.999556
put	O	O:0.998186
its	O	O:0.999058
body	O	O:0.999065
back	O	O:0.975164
under	O	O:0.999790
the	O	O:0.995882
"	O	O:0.997754
if	O	O:0.997028
name	O	O:0.982175
==	O	O:0.983271
'	O	O:0.998823
main	O	O:0.987929
'"	O	O:0.998292
block	O	O:0.979359
,	O	O:0.997499
it	O	O:0.998084
works	O	O:0.997922
as	O	O:0.998113
expected	O	O:0.963819
(	O	O:0.999782
like	O	O:0.996188
in	O	O:0.999840
the	O	O:0.999729
original	O	O:0.996187
code	O	O:0.986117
)	O	O:0.998512
.	O	O:0.990742
	
Seems	O	O:0.998001
like	O	O:0.999429
a	O	O:0.999839
bit	O	O:0.979244
of	O	O:0.998908
searching	O	O:0.981309
would	O	O:0.999549
have	O	O:0.999132
turned	O	O:0.996794
up	O	O:0.988042
[	O	O:0.998437
how	O	O:0.998855
to	O	O:0.998849
set	O	O:0.999862
custom	O	O:0.994096
ticks	O	O:0.966254
]	O	O:0.958297
(	O	O:0.992654
#URL	O	O:0.992809
)	O	O:0.999408
,	O	O:0.999201
where	O	O:0.999092
the	O	O:0.998928
defined	O	O:0.930645
`	O	O:0.998389
t11	O	B-API:0.526903
`	O	O:0.998578
is	O	O:0.996895
where	O	O:0.998109
you	O	O:0.998390
would	O	O:0.999679
write	O	O:0.998472
out	O	O:0.994871
A	O	O:0.999698
,	O	O:0.998616
B	O	O:0.969545
,	O	O:0.997330
C	O	O:0.838911
,	O	O:0.997796
and	O	O:0.997451
D	O	O:0.974285
.	O	O:0.971149
	
@USER	O	O:0.969505
,	O	O:0.999527
that	O	O:0.997491
would	O	O:0.999465
require	O	O:0.999213
to	O	O:0.999846
have	O	O:0.999814
root	O	O:0.998091
access	O	O:0.844158
(	O	O:0.999726
sudo	O	O:0.987374
)	O	O:0.998710
which	O	O:0.993651
i	O	O:0.996923
dont	O	O:0.999148
have	O	O:0.994314
!	O	O:0.997320
	
Any	O	O:0.981597
suggestions	O	O:0.983899
how	O	O:0.999330
this	O	O:0.997539
can	O	O:0.999693
work	O	O:0.999438
?	O	O:0.999549
	
Any	O	O:0.992186
help	O	O:0.939779
would	O	O:0.998701
be	O	O:0.999678
appreciated	O	O:0.996009
in	O	O:0.993681
understanding	O	O:0.992919
what	O	O:0.992343
I	O	O:0.998202
am	O	O:0.998697
missing	O	O:0.818782
.	O	O:0.991663
	
How	O	O:0.994147
can	O	O:0.998935
I	O	O:0.999970
add	O	O:0.997455
the	O	O:0.991977
`	O	O:0.993871
P_g	O	B-API:0.793156
`	O	O:0.999750
values	O	O:0.983373
from	O	O:0.999241
each	O	O:0.983817
section	O	O:0.997247
to	O	O:0.999422
their	O	O:0.999904
respective	O	O:0.988420
column	O	O:0.992474
?	O	O:0.994641
	
Is	O	O:0.994674
there	O	O:0.997914
any	O	O:0.998284
other	O	O:0.995482
python	O	O:0.985699
package	O	O:0.996887
that	O	O:0.993936
would	O	O:0.999497
help	O	O:0.991707
?	O	O:0.998688
	
I'm	O	O:0.988773
having	O	O:0.998679
a	O	O:0.995829
problem	O	O:0.960025
,	O	O:0.999741
where	O	O:0.996577
I	O	O:0.998104
can't	O	O:0.999578
do	O	O:0.999081
a	O	O:0.999767
step	O	O:0.991578
graph	O	O:0.999687
of	O	O:0.999106
2	O	O:0.994298
lists	O	O:0.995557
I	O	O:0.999324
have	O	O:0.999120
,	O	O:0.998888
in	O	O:0.999278
which	O	O:0.998181
I	O	O:0.999694
need	O	O:0.999369
list	O	O:0.588966
`	O	O:0.999278
x	O	O:0.866501
`	O	O:0.999748
to	O	O:0.997753
be	O	O:0.999949
the	O	O:0.999760
x	O	O:0.965226
values	O	O:0.994050
,	O	O:0.999376
in	O	O:0.999619
which	O	O:0.999380
each	O	O:0.979005
`	O	O:0.999196
x	O	O:0.950716
[	O	O:0.999497
j	O	O:0.993154
]`	O	O:0.996681
value	O	O:0.997551
will	O	O:0.997877
add	O	O:0.998630
with	O	O:0.996843
`	O	O:0.998198
x	O	O:0.964760
[	O	O:0.999220
j+1	O	O:0.991389
]`	O	O:0.996077
value	O	O:0.990822
for	O	O:0.999391
each	O	O:0.980979
step	O	O:0.990221
.	O	O:0.996389
	
The	O	O:0.996918
best	O	O:0.979852
thing	O	O:0.998747
would	O	O:0.998535
we	O	O:0.999867
if	O	O:0.999858
one	O	O:0.999297
could	O	O:0.998692
integrate	O	O:0.997278
it	O	O:0.999669
into	O	O:0.995611
the	O	O:0.999580
label	O	O:0.991758
of	O	O:0.997858
the	O	O:0.988646
colorbar	O	O:0.991166
(	O	O:0.998469
to	O	O:0.999516
say	O	O:0.999944
the	O	O:0.998486
color	O	O:0.983628
means	O	O:0.993520
A	O	O:0.999497
in	O	O:0.999695
units	O	O:0.993729
of	O	O:0.998543
B	O	O:0.997120
where	O	O:0.996985
B	O	O:0.976195
includes	O	O:0.996021
the	O	O:0.999135
order	O	O:0.991596
of	O	O:0.998456
magnitude	O	O:0.973806
)	O	O:0.998524
.	O	O:0.985205
	
ive	O	O:0.971343
tried	O	O:0.984028
to	O	O:0.993361
fix	O	O:0.996316
it	O	O:0.999359
with	O	O:0.999070
setting	O	O:0.996829
ax	O	O:0.981293
limits	O	O:0.968676
but	O	O:0.995745
that	O	O:0.992349
does	O	O:0.997310
not	O	O:0.999464
work	O	O:0.997175
.	O	O:0.997388
	
@USER	O	O:0.925329
:	O	O:0.996351
I	O	O:0.999411
added	O	O:0.999311
some	O	O:0.977221
more	O	O:0.977947
info	O	O:0.979092
and	O	O:0.999800
also	O	O:0.999725
a	O	O:0.998934
code	O	O:0.913916
used	O	O:0.981827
.	O	O:0.993451
	
If	O	O:0.993930
I	O	O:0.998773
wanted	O	O:0.999154
to	O	O:0.996126
make	O	O:0.999911
a	O	O:0.999625
combined	O	O:0.977873
image	O	O:0.999191
like	O	O:0.996800
the	O	O:0.999863
one	O	O:0.998878
shown	O	O:0.985027
below	O	O:0.967364
(	O	O:0.999520
original	O	O:0.996067
source	O	O:0.994882
here	O	O:0.970791
)	O	O:0.998904
,	O	O:0.995728
	
When	O	O:0.994308
you	O	O:0.998153
**	O	O:0.999899
add	O	O:0.955719
**	O	O:0.999469
two	O	O:0.991427
**	O	O:0.999279
random	O	O:0.986192
variables**	O	O:0.955201
,	O	O:0.999614
the	O	O:0.999777
resulting	O	O:0.994136
density	O	O:0.934697
is	O	O:0.998211
the	O	O:0.985706
**	O	O:0.996797
convolution	O	O:0.975037
**	O	O:0.999446
of	O	O:0.999647
their	O	O:0.895882
**	O	O:0.999125
densities**	O	O:0.798888
.	O	O:0.986761
	
This	O	O:0.995315
made	O	O:0.985394
the	O	O:0.997602
program	O	O:0.993886
work	O	O:0.998752
just	O	O:0.999823
as	O	O:0.999697
in	O	O:0.994215
Windows	O	O:0.993995
,	O	O:0.998681
without	O	O:0.987242
any	O	O:0.997857
other	O	O:0.995559
modifications	O	O:0.990698
necessary	O	O:0.985232
.	O	O:0.996356
	
Using	O	O:0.988824
PySide	O	O:0.983723
in	O	O:0.999611
place	O	O:0.996842
of	O	O:0.999932
PyQt4	O	O:0.988888
results	O	O:0.997499
in	O	O:0.998666
the	O	O:0.999715
same	O	O:0.983809
behavior	O	O:0.983724
.	O	O:0.992825
	
However	O	O:0.993047
,	O	O:0.999453
the	O	O:0.999571
first	O	O:0.989209
item	O	O:0.984657
appears	O	O:0.997496
to	O	O:0.999493
be	O	O:0.999901
a	O	O:0.997949
float	O	B-API:0.712553
#CODE	O	O:0.989888
	
The	O	O:0.998291
code	O	O:0.982982
below	O	O:0.994203
loads	O	O:0.995571
the	O	O:0.998567
image	O	O:0.997958
data	O	O:0.996040
hosted	O	O:0.995741
on	O	O:0.998044
github	O	O:0.968317
and	O	O:0.999134
plots	O	O:0.941822
it	O	O:0.930737
:	O	O:0.994863
#CODE	O	O:0.994788
	
I	O	O:0.993972
reduce	O	O:0.993035
the	O	O:0.993779
values	O	O:0.981584
to	O	O:0.998190
months	O	O:0.999595
using	O	O:0.990039
:	O	O:0.978454
#CODE	O	O:0.986027
	
That	O	O:0.992686
would	O	O:0.997130
solve	O	O:0.991337
Question	O	O:0.994748
1	O	O:0.969998
.	O	O:0.986236
	
I	O	O:0.997055
modified	O	O:0.994260
you	O	O:0.989348
code	O	O:0.989806
,	O	O:0.998757
and	O	O:0.999844
it	O	O:0.999514
can	O	O:0.996286
product	O	O:0.999794
the	O	O:0.999755
same	O	O:0.997763
ticks	O	O:0.990164
now	O	O:0.992937
.	O	O:0.997000
	
`'	O	O:0.971116
$\xi$	O	O:0.800424
(	O	O:0.998405
r	O	O:0.990243
)	O	O:0.999271
M$_{200}$	O	O:0.735994
13.4	O	O:0.784373
'`	O	O:0.952331
:	O	O:0.993497
several	O	O:0.992090
`	O	O:0.997009
$	O	O:0.927105
`	O	O:0.999644
,	O	O:0.998965
where	O	O:0.999069
you	O	O:0.997819
should	O	O:0.999856
have	O	O:0.999848
only	O	O:0.999500
one	O	O:0.999519
.	O	O:0.993247
	
I	O	O:0.998989
just	O	O:0.997927
completed	O	O:0.997917
a	O	O:0.998932
brute	O	O:0.978931
force	O	O:0.996284
test	O	O:0.961504
running	O	O:0.994041
through	O	O:0.995558
all	O	O:0.999201
permutations	O	O:0.994690
of	O	O:0.996623
[	O	O:0.996678
0	O	O:0.998179
,	O	O:0.997514
1	O	O:0.989226
,	O	O:0.997329
2	O	O:0.993871
,	O	O:0.998019
3	O	O:0.992629
,	O	O:0.998740
4	O	O:0.992564
,	O	O:0.999363
5	O	O:0.995689
]	O	O:0.995248
for	O	O:0.997582
the	O	O:0.997365
tmp_planes	O	O:0.540677
,	O	O:0.999762
a	O	O:0.999692
total	O	O:0.985256
of	O	O:0.996715
720	O	O:0.992983
different	O	O:0.996581
arrangements	O	O:0.954558
.	O	O:0.981132
	
The	O	O:0.989490
way	O	O:0.984461
to	O	O:0.996930
fix	O	O:0.997599
it	O	O:0.996990
is	O	O:0.999415
using	O	O:0.997703
pip	O	O:0.970633
,	O	O:0.997395
as	O	O:0.997606
mentioned	O	O:0.984508
by	O	O:0.991486
@USER	O	O:0.969576
.	O	O:0.955625
	
Do	O	O:0.991712
you	O	O:0.999591
mean	O	O:0.999710
a	O	O:0.999498
scatterplot	O	O:0.994048
of	O	O:0.999896
your	O	O:0.995835
dataset	O	O:0.995370
instead	O	O:0.998486
?	O	O:0.997126
	
Plotting	O	O:0.984488
subplots	O	O:0.989170
with	O	O:0.995675
secondary	O	O:0.996409
continuous	O	O:0.983990
y-axis	O	O:0.986031
across	O	O:0.995681
all	O	O:0.997260
subplots	O	O:0.978877
	
However	O	O:0.995065
,	O	O:0.999368
I	O	O:0.999825
want	O	O:0.998638
to	O	O:0.997600
be	O	O:0.999983
able	O	O:0.998735
to	O	O:0.999139
call	O	O:0.999667
something	O	O:0.998175
or	O	O:0.996716
write	O	O:0.999100
some	O	O:0.998032
code	O	O:0.997052
which	O	O:0.999036
then	O	O:0.997424
skips	O	O:0.999702
any	O	O:0.999544
value	O	O:0.990867
in	O	O:0.998356
the	O	O:0.999121
array	O	O:0.991816
which	O	O:0.997125
would	O	O:0.998958
cause	O	O:0.999538
this	O	O:0.998960
error	O	O:0.995248
,	O	O:0.999815
then	O	O:0.996635
ignoring	O	O:0.998817
that	O	O:0.998148
row	O	O:0.999100
altogether	O	O:0.985730
.	O	O:0.992443
	
Any	O	O:0.992136
help	O	O:0.924280
would	O	O:0.998329
be	O	O:0.998889
appreciated	O	O:0.989802
.	O	O:0.974123
	
You	O	O:0.984441
are	O	O:0.993988
typing	O	O:0.999233
your	O	O:0.998011
code	O	O:0.990905
in	O	O:0.999444
at	O	O:0.999123
the	O	O:0.997281
bash	O	O:0.709711
(	O	O:0.997011
terminal	O	O:0.992290
)	O	O:0.997789
prompt	O	O:0.978680
,	O	O:0.998980
not	O	O:0.998007
the	O	O:0.998482
Python	O	O:0.946651
interpreter	O	O:0.984426
prompt	O	O:0.987290
.	O	O:0.993538
	
Also	O	O:0.993876
,	O	O:0.999758
if	O	O:0.999634
you	O	O:0.999714
take	O	O:0.999494
a	O	O:0.999838
look	O	O:0.966064
at	O	O:0.999657
Rob's	O	O:0.979463
answer	O	O:0.988031
,	O	O:0.999540
its	O	O:0.997553
far	O	O:0.995317
simpler	O	O:0.995425
than	O	O:0.997298
the	O	O:0.998947
example	O	O:0.996714
shown	O	O:0.989843
on	O	O:0.999348
the	O	O:0.995892
website	O	O:0.985551
.	O	O:0.987479
	
MPL	O	O:0.890733
is	O	O:0.998947
a	O	O:0.995817
big	O	O:0.907325
project	O	O:0.990132
with	O	O:0.997669
lots	O	O:0.996980
of	O	O:0.999640
moving	O	O:0.987365
parts	O	O:0.989285
,	O	O:0.999633
any	O	O:0.999639
help	O	O:0.993426
keep	O	O:0.999602
them	O	O:0.995715
up	O	O:0.960314
is	O	O:0.996899
appreciated	O	O:0.787924
.	O	O:0.989347
	
I	O	O:0.992923
am	O	O:0.999545
less	O	O:0.979239
certain	O	O:0.995490
if	O	O:0.997339
I	O	O:0.999332
am	O	O:0.998974
solving	O	O:0.976678
the	O	O:0.998971
correct	O	O:0.980800
problem	O	O:0.980277
.	O	O:0.994845
	
I	O	O:0.992719
am	O	O:0.998259
having	O	O:0.996558
a	O	O:0.995755
problem	O	O:0.933753
getting	O	O:0.995970
matplotlib	O	O:0.987200
to	O	O:0.999418
work	O	O:0.999899
well	O	O:0.999429
with	O	O:0.999633
interactive	O	O:0.964598
plotting	O	O:0.990317
...	O	O:0.995354
what	O	O:0.995629
I	O	O:0.999334
see	O	O:0.993368
is	O	O:0.998354
that	O	O:0.976799
after	O	O:0.998776
displaying	O	O:0.996724
a	O	O:0.992683
few	O	O:0.985733
frames	O	O:0.993913
of	O	O:0.999144
my	O	O:0.998646
simulated	O	O:0.998940
data	O	O:0.997520
matplotlib	O	O:0.994954
hangs-and	O	O:0.961428
doesn't	O	O:0.990525
display	O	O:0.983578
any	O	O:0.998620
more	O	O:0.913399
.	O	O:0.987746
	
If	O	O:0.976571
anyone	O	O:0.963927
has	O	O:0.998627
any	O	O:0.997625
idea	O	O:0.988237
,	O	O:0.999415
I	O	O:0.998677
appreciate	O	O:0.993404
the	O	O:0.993413
help	O	O:0.860012
.	O	O:0.992045
	
You	O	O:0.996530
can	O	O:0.999453
populate	O	O:0.999670
a	O	O:0.999001
general	O	O:0.945560
2d	O	O:0.991790
array	O	O:0.965816
by	O	O:0.968468
:	O	O:0.994802
Zhu	O	O:0.989308
shows	O	O:0.996536
in	O	O:0.999018
the	O	O:0.997995
answer	O	O:0.982463
below	O	O:0.967837
.	O	O:0.993707
	
Have	O	O:0.997150
a	O	O:0.998857
look	O	O:0.932493
at	O	O:0.999804
this	O	O:0.976835
example	O	O:0.944444
:	O	O:0.993090
#CODE	O	O:0.995312
	
That	O	O:0.985282
way	O	O:0.988675
,	O	O:0.999184
it	O	O:0.996407
is	O	O:0.999426
possible	O	O:0.993066
to	O	O:0.999622
see	O	O:0.999720
2	O	O:0.998940
dots	O	O:0.987132
on	O	O:0.999267
the	O	O:0.999829
same	O	O:0.996707
place	O	O:0.990107
.	O	O:0.998207
	
This	O	O:0.988368
error	O	O:0.996715
shows	O	O:0.998274
up	O	O:0.995977
when	O	O:0.997244
the	O	O:0.999421
size	O	O:0.996975
of	O	O:0.999093
a	O	O:0.994572
and	O	O:0.997888
b	O	O:0.924429
(	O	O:0.993158
taking	O	O:0.993473
from	O	O:0.992377
above	O	O:0.992506
example	O	O:0.998097
)	O	O:0.992119
is	O	O:0.996261
not	O	O:0.995862
the	O	O:0.999616
same	O	O:0.983052
-	O	O:0.999315
so	O	O:0.998953
,	O	O:0.999748
128	O	O:0.993705
x-values	O	O:0.965385
here	O	O:0.976938
should	O	O:0.999770
be	O	O:0.999242
plotted	O	O:0.989155
against	O	O:0.989270
128	O	O:0.941154
y-values	O	O:0.922762
.	O	O:0.981285
	
[	O	O:0.978640
These	O	O:0.994752
should	O	O:0.997810
all	O	O:0.999804
be	O	O:0.999267
installed	O	O:0.998426
into	O	O:0.882213
/	O	O:0.986814
usr	O	O:0.959084
/	O	O:0.992331
local	O	O:0.937176
/	O	O:0.986440
Cellar	O	O:0.993578
,	O	O:0.998752
which	O	O:0.985547
is	O	O:0.999321
the	O	O:0.998423
default	O	O:0.989545
install	O	O:0.965215
location	O	O:0.988241
for	O	O:0.995716
homebrew	O	O:0.961137
.	O	O:0.982448
]	O	O:0.987283
	
I'm	O	O:0.991379
trying	O	O:0.995839
to	O	O:0.999663
make	O	O:0.999457
an	O	O:0.999525
exponential	O	O:0.993041
fit	O	O:0.980444
to	O	O:0.999345
find	O	O:0.999507
the	O	O:0.997915
Lyapunov	O	O:0.998888
Exponent	O	O:0.988080
of	O	O:0.999814
this	O	O:0.999207
data	O	O:0.999195
,	O	O:0.999622
however	O	O:0.998420
,	O	O:0.999795
I	O	O:0.999908
keep	O	O:0.983277
getting	O	O:0.994863
this	O	O:0.981553
error	O	O:0.924152
:	O	O:0.994551
#CODE	O	O:0.993316
	
So	O	O:0.993480
I	O	O:0.998886
wrote	O	O:0.997850
an	O	O:0.987178
argument	O	O:0.992343
`	O	O:0.994402
origin=	O	O:0.961186
'	O	O:0.999334
lower	O	O:0.932724
'`	O	O:0.980253
.	O	O:0.970763
	
Note	O	O:0.998314
that	O	O:0.997566
I	O	O:0.999539
don't	O	O:0.999551
reduce	O	O:0.944795
to	O	O:0.997124
2	O	O:0.999232
,	O	O:0.999456
I	O	O:0.999312
reduce	O	O:0.979669
to	O	O:0.982340
10000	O	O:0.997693
,	O	O:0.999058
and	O	O:0.999979
then	O	O:0.999274
extract	O	O:0.986467
the	O	O:0.999876
first	O	O:0.971125
2	O	O:0.973684
.	O	O:0.986848
	
which	O	O:0.995862
you	O	O:0.998859
can	O	O:0.999587
run	O	O:0.999230
with	O	O:0.999714
this	O	O:0.997673
sample	O	O:0.993216
code	O	O:0.912532
:	O	O:0.995141
#CODE	O	O:0.996245
	
Try	O	O:0.995007
converting	O	O:0.997999
your	O	O:0.985558
the	O	O:0.999512
pandas	O	O:0.999791
data	O	O:0.997797
series	O	O:0.999850
to	O	O:0.999856
lists	O	O:0.999022
or	O	O:0.999358
numpy	O	O:0.997570
array	O	O:0.992283
before	O	O:0.981317
plotting	O	O:0.959902
.	O	O:0.971834
	
If	O	O:0.995170
I	O	O:0.999578
de-homogenize	O	O:0.994419
only	O	O:0.989457
the	O	O:0.999925
last	O	O:0.991966
column	O	O:0.999243
I	O	O:0.999281
can	O	O:0.999918
find	O	O:0.997951
the	O	O:0.999922
center	O	O:0.995864
of	O	O:0.998939
where	O	O:0.996547
the	O	O:0.998548
ellipse	O	O:0.974234
was	O	O:0.989117
projected	O	O:0.986108
,	O	O:0.998881
but	O	O:0.997904
I	O	O:0.998752
would	O	O:0.999926
like	O	O:0.998444
to	O	O:0.999804
see	O	O:0.999964
some	O	O:0.995983
shape	O	O:0.998207
information	O	O:0.998335
as	O	O:0.999186
well	O	O:0.980271
.	O	O:0.996392
	
Ignoring	O	O:0.994787
a	O	O:0.974953
problem	O	O:0.748413
doesn't	O	O:0.989119
fix	O	O:0.952871
it	O	O:0.998131
.	O	O:0.992485
	
Will	O	O:0.990902
add	O	O:0.981307
the	O	O:0.998356
code	O	O:0.920208
.	O	O:0.991328
	
I	O	O:0.996694
found	O	O:0.998583
that	O	O:0.979423
in	O	O:0.999402
the	O	O:0.998050
folder	O	O:0.989709
C	O	O:0.934724
:\	O	O:0.989212
Program	O	O:0.994791
Files\Python27\DLLs	O	O:0.964900
I	O	O:0.995956
cann't	O	O:0.998120
find	O	O:0.975144
the	O	O:0.999445
_socket	O	O:0.842460
file	O	O:0.980610
	
The	O	O:0.987878
index	O	O:0.967434
is	O	O:0.997346
zero-based	O	O:0.736044
.	O	O:0.975530
	
The	O	O:0.987479
image	O	O:0.996909
ggd4	O	O:0.948733
for	O	O:0.998928
the	O	O:0.998342
test	O	O:0.816809
can	O	O:0.999205
be	O	O:0.999915
downloaded	O	O:0.996361
from	O	O:0.946826
:	O	O:0.991936
	
Load	O	O:0.989531
the	O	O:0.999537
data	O	O:0.999425
sets	O	O:0.997881
individually	O	O:0.996790
,	O	O:0.999830
and	O	O:0.999849
then	O	O:0.998781
plot	O	O:0.997949
each	O	O:0.999509
one	O	O:0.998112
individually	O	O:0.987882
.	O	O:0.994091
	
Have	O	O:0.986492
you	O	O:0.997191
looked	O	O:0.992667
at	O	O:0.999555
mplot3d	O	O:0.987049
on	O	O:0.996864
matplotlib	O	O:0.969499
?	O	O:0.994557
	
The	O	O:0.995575
columns	O	O:0.993640
are	O	O:0.997888
floats	O	O:0.988457
,	O	O:0.996963
I'm	O	O:0.999281
not	O	O:0.998644
using	O	O:0.999054
the	O	O:0.997705
index	O	O:0.997456
of	O	O:0.996148
integers	O	O:0.922264
.	O	O:0.996017
	
Incidentally	O	O:0.941524
(	O	O:0.997600
for	O	O:0.998666
someone	O	O:0.981646
reading	O	O:0.998280
this	O	O:0.986910
in	O	O:0.999550
the	O	O:0.999046
future	O	O:0.994923
as	O	O:0.998654
you	O	O:0.999576
know	O	O:0.999016
yours	O	O:0.996314
)	O	O:0.999619
if	O	O:0.998541
you	O	O:0.999764
need	O	O:0.998877
to	O	O:0.999888
find	O	O:0.999977
your	O	O:0.999409
current	O	O:0.996141
Python	O	O:0.998124
version	O	O:0.995895
you	O	O:0.997196
can	O	O:0.999482
simply	O	O:0.999935
type	O	O:0.987693
`	O	O:0.998776
python	O	O:0.989416
-V	O	O:0.995564
`	O	O:0.992871
in	O	O:0.991343
the	O	O:0.990704
command	O	O:0.986795
line	O	O:0.977313
and	O	O:0.999414
it'll	O	O:0.998530
return	O	O:0.899918
the	O	O:0.991472
details	O	O:0.976133
,	O	O:0.998782
for	O	O:0.999525
example	O	O:0.988245
mine	O	O:0.867455
returns	O	O:0.961138
:	O	O:0.986347
	
The	O	O:0.994888
code	O	O:0.937342
is	O	O:0.999408
located	O	O:0.939076
at	O	O:0.993759
	
find	O	O:0.972107
the	O	O:0.999786
file	O	O:0.995880
from	O	O:0.998179
the	O	O:0.999253
link	O	O:0.986413
	
@USER	O	O:0.860874
:	O	O:0.995219
What	O	O:0.999337
do	O	O:0.997662
you	O	O:0.999596
mean	O	O:0.993963
?	O	O:0.998078
	
Thank	O	O:0.989137
you	O	O:0.996251
in	O	O:0.999427
advance	O	O:0.994284
for	O	O:0.999623
any	O	O:0.997841
help	O	O:0.950286
you	O	O:0.998452
can	O	O:0.999805
give	O	O:0.999416
me	O	O:0.994479
	
how	O	O:0.993365
i	O	O:0.993452
can	O	O:0.999440
add	O	O:0.998789
vector	O	O:0.999329
arrows	O	O:0.984795
starting	O	O:0.999378
from	O	O:0.998327
0	O	O:0.994299
,	O	O:0.998428
0	O	O:0.972284
and	O	O:0.999754
end	O	O:0.995308
at	O	O:0.998720
the	O	O:0.994559
points	O	O:0.972114
that	O	O:0.995388
i	O	O:0.998750
want	O	O:0.998055
?	O	O:0.993448
	
If	O	O:0.996803
you	O	O:0.999487
want	O	O:0.999411
the	O	O:0.999119
sum	O	O:0.660897
(	O	O:0.998932
not	O	O:0.998410
the	O	O:0.999614
integral	O	O:0.989378
)	O	O:0.999380
to	O	O:0.999361
be	O	O:0.999885
one	O	O:0.997602
#CODE	O	O:0.980718
	
As	O	O:0.996357
I	O	O:0.999678
have	O	O:0.999235
no	O	O:0.997305
idea	O	O:0.983566
how	O	O:0.999551
long	O	O:0.993180
`	O	O:0.998968
data_all	O	B-API:0.976689
`	O	O:0.997258
is	O	O:0.993918
,	O	O:0.999121
I	O	O:0.999250
created	O	O:0.993156
a	O	O:0.914240
(	O	O:0.994121
random	O	O:0.957819
)	O	O:0.997930
array	O	O:0.990862
,	O	O:0.999503
which	O	O:0.996723
in	O	O:0.998954
my	O	O:0.999004
case	O	O:0.998670
turned	O	O:0.993858
out	O	O:0.995724
to	O	O:0.999444
give	O	O:0.999719
a	O	O:0.998888
2D	O	O:0.966822
array	O	O:0.997964
with	O	O:0.996090
512	O	O:0.994730
columns	O	O:0.985339
(	O	O:0.997926
lucky	O	O:0.997962
shot	O	O:0.991035
)	O	O:0.997871
.	O	O:0.989516
	
Do	O	O:0.991758
you	O	O:0.999528
mean	O	O:0.999743
something	O	O:0.999603
like	O	O:0.997684
this	O	O:0.993519
:	O	O:0.996979
	
Can	O	O:0.980864
you	O	O:0.998762
copy	O	O:0.747104
and	O	O:0.999828
paste	O	O:0.929228
the	O	O:0.998452
code	O	O:0.986601
lines	O	O:0.994025
described	O	O:0.992030
in	O	O:0.999968
your	O	O:0.993833
comment	O	O:0.992859
,	O	O:0.998264
please	O	O:0.971810
?	O	O:0.993426
	
When	O	O:0.993883
I	O	O:0.998510
print	O	O:0.999348
this	O	O:0.968953
in	O	O:0.994197
A3	O	O:0.910194
(	O	O:0.998652
good	O	O:0.991254
size	O	O:0.993349
)	O	O:0.999036
it	O	O:0.998681
still	O	O:0.998210
almost	O	O:0.999185
unreadable	O	O:0.989198
because	O	O:0.998888
the	O	O:0.997919
letters	O	O:0.950982
are	O	O:0.998562
stacking	O	O:0.995347
in	O	O:0.998751
each	O	O:0.982465
other	O	O:0.990550
.	O	O:0.994118
	
I	O	O:0.998471
mean	O	O:0.996530
my	O	O:0.983790
grid	O	O:0.971108
is	O	O:0.999193
20	O	O:0.993889
units	O	O:0.968573
in	O	O:0.998134
x	O	O:0.996487
direction	O	O:0.988017
however	O	O:0.997821
,	O	O:0.999805
my	O	O:0.999493
resulting	O	O:0.997643
plot	O	O:0.939902
is	O	O:0.999271
10	O	O:0.993390
units	O	O:0.974392
in	O	O:0.998489
x	O	O:0.995181
direction	O	O:0.991971
with	O	O:0.997945
replica	O	O:0.998380
plot	O	O:0.993696
from	O	O:0.998289
10	O	O:0.990309
to	O	O:0.998984
20	O	O:0.999012
units	O	O:0.978203
.	O	O:0.989540
	
Now	O	O:0.996012
how	O	O:0.998947
to	O	O:0.999566
plot	O	O:0.997230
[	O	O:0.998758
M	O	O:0.996734
,	O	O:0.998325
F	O	O:0.954357
+	O	O:0.998331
other	O	O:0.987658
]	O	O:0.991635
	
To	O	O:0.995717
specify	O	O:0.995255
that	O	O:0.999192
you	O	O:0.999808
want	O	O:0.999445
the	O	O:0.999629
first	O	O:0.995151
interval	O	O:0.997484
filled	O	O:0.993362
with	O	O:0.997742
"	O	O:0.999210
pure	O	O:0.953601
"	O	O:0.998027
black	O	O:0.964952
,	O	O:0.998663
set	O	O:0.943419
`	O	O:0.998080
vmin=mean	O	O:0.628819
(	O	O:0.999714
lvls	O	O:0.873063
[:	O	O:0.997371
1	O	O:0.990179
])`	O	O:0.991903
in	O	O:0.999554
your	O	O:0.991122
example	O	O:0.982677
.	O	O:0.993969
	
Your	O	O:0.972777
Data	O	O:0.978985
looks	O	O:0.993220
pretty	O	O:0.995997
good	O	O:0.984085
without	O	O:0.996458
any	O	O:0.995712
filtering	O	O:0.958102
,	O	O:0.999888
your	O	O:0.990490
"	O	O:0.999453
outlieres	O	O:0.969498
"	O	O:0.999419
all	O	O:0.998172
have	O	O:0.999138
a	O	O:0.999132
very	O	O:0.961433
big	O	O:0.992742
error	O	O:0.963306
and	O	O:0.998574
won't	O	O:0.995921
affect	O	O:0.969415
the	O	O:0.998139
fit	O	O:0.757870
much	O	O:0.950236
.	O	O:0.993492
	
This	O	O:0.973865
is	O	O:0.999671
a	O	O:0.998228
terribly	O	O:0.970946
unclear	O	O:0.983831
answer	O	O:0.991260
,	O	O:0.999182
at	O	O:0.999501
least	O	O:0.999745
some	O	O:0.998496
comment	O	O:0.984454
in	O	O:0.998513
the	O	O:0.999557
code	O	O:0.984808
or	O	O:0.999669
explanation	O	O:0.998080
of	O	O:0.998927
why	O	O:0.997925
this	O	O:0.997635
helps	O	O:0.997589
floating	O	O:0.995265
point	O	O:0.994803
error	O	O:0.986508
would	O	O:0.998380
be	O	O:0.999292
nice	O	O:0.987877
.	O	O:0.982861
	
I	O	O:0.996516
produce	O	O:0.999363
a	O	O:0.990279
histogram	O	O:0.997673
where	O	O:0.999172
I	O	O:0.999720
put	O	O:0.998794
the	O	O:0.998044
weights	O	O:0.945603
in	O	O:0.998455
the	O	O:0.997739
parameter	O	O:0.986844
#CODE	O	O:0.987674
	
Besides	O	O:0.995503
,	O	O:0.999569
I	O	O:0.999454
see	O	O:0.999537
that	O	O:0.997121
you	O	O:0.999449
use	O	O:0.997866
`	O	O:0.998483
numpy	O	O:0.916320
`	O	O:0.999072
in	O	O:0.999392
your	O	O:0.999085
code	O	O:0.992025
,	O	O:0.999861
so	O	O:0.999261
you	O	O:0.996976
can	O	O:0.999830
save	O	O:0.993735
and	O	O:0.999915
load	O	O:0.993950
file	O	O:0.995019
by	O	O:0.993255
`	O	O:0.999107
numpy	O	O:0.850892
`	O	O:0.999673
with	O	O:0.997245
a	O	O:0.999805
more	O	O:0.982708
compact	O	O:0.996715
codes	O	O:0.997829
like	O	O:0.999680
this	O	O:0.999843
without	O	O:0.997205
using	O	O:0.997505
the	O	O:0.954099
`	O	O:0.990827
csv	O	O:0.528465
`	O	O:0.996443
module	O	O:0.950275
.	O	O:0.994141
	
Usually	O	O:0.995838
these	O	O:0.999591
sorts	O	O:0.977289
of	O	O:0.998410
simple	O	O:0.926694
array	O	O:0.999375
reshaping	O	O:0.995034
operations	O	O:0.989915
can	O	O:0.997399
be	O	O:0.999948
done	O	O:0.997543
in	O	O:0.999342
a	O	O:0.999418
couple	O	O:0.989664
of	O	O:0.999199
lines	O	O:0.975237
with	O	O:0.997834
Numpy	O	O:0.994485
,	O	O:0.999517
so	O	O:0.997953
I	O	O:0.999395
feel	O	O:0.997725
like	O	O:0.990286
I'm	O	O:0.999165
missing	O	O:0.987985
something	O	O:0.995693
.	O	O:0.988253
	
I	O	O:0.993126
don't	O	O:0.997269
see	O	O:0.996438
any	O	O:0.999149
way	O	O:0.995125
I	O	O:0.998225
could	O	O:0.999235
do	O	O:0.996824
that	O	O:0.996681
.	O	O:0.993944
	
Look	O	O:0.988489
at	O	O:0.998362
the	O	O:0.984745
docs	O	O:0.783123
:	O	O:0.993138
#CODE	O	O:0.996858
	
To	O	O:0.991774
fix	O	O:0.995864
that	O	O:0.999463
we	O	O:0.999879
turn	O	O:0.991811
the	O	O:0.999604
frame	O	O:0.998943
off	O	O:0.997045
on	O	O:0.996482
`	O	O:0.998555
ax1	O	O:0.686748
`	O	O:0.995209
(	O	O:0.997934
so	O	O:0.999715
we	O	O:0.998635
can	O	O:0.999280
see	O	O:0.999576
`	O	O:0.999713
ax2	O	O:0.899744
`)	O	O:0.998971
.	O	O:0.970508
	
At	O	O:0.995191
one	O	O:0.998537
point	O	O:0.994596
I	O	O:0.996501
was	O	O:0.998721
able	O	O:0.986179
to	O	O:0.999138
trick	O	O:0.999885
it	O	O:0.999851
into	O	O:0.996855
working	O	O:0.996571
from	O	O:0.997853
the	O	O:0.997964
console	O	O:0.998023
by	O	O:0.997205
installing	O	O:0.999196
some	O	O:0.989789
thing	O	O:0.996408
in	O	O:0.997904
the	O	O:0.998334
virtualenv	O	O:0.952572
,	O	O:0.996292
but	O	O:0.999615
other	O	O:0.998122
things	O	O:0.999173
only	O	O:0.992108
in	O	O:0.999820
the	O	O:0.998387
global	O	O:0.850681
namespace	O	O:0.984130
,	O	O:0.998107
but	O	O:0.999156
I	O	O:0.996771
forgot	O	O:0.995612
how	O	O:0.972929
I	O	O:0.991553
did	O	O:0.995701
it	O	O:0.986698
.	O	O:0.995743
	
(	O	O:0.991928
Technically	O	O:0.999117
we	O	O:0.999421
could	O	O:0.999854
skip	O	O:0.986513
the	O	O:0.999548
`	O	O:0.985813
FigureCanvas	O	B-API:0.944992
`	O	O:0.997139
,	O	O:0.989564
but	O	O:0.999246
it	O	O:0.998765
will	O	O:0.999399
be	O	O:0.999897
needed	O	O:0.999842
as	O	O:0.999269
soon	O	O:0.980659
as	O	O:0.999065
we	O	O:0.999368
want	O	O:0.998132
to	O	O:0.999550
save	O	O:0.998087
the	O	O:0.999553
plot	O	O:0.973994
to	O	O:0.999549
an	O	O:0.999866
image	O	O:0.997562
,	O	O:0.998854
etc	O	O:0.998354
.	O	O:0.996822
)	O	O:0.998531
#CODE	O	O:0.988496
	
But	O	O:0.995277
how	O	O:0.998395
can	O	O:0.999093
I	O	O:0.999984
make	O	O:0.998408
plt	O	O:0.824700
do	O	O:0.995318
all	O	O:0.999945
this	O	O:0.991353
stuff	O	O:0.990394
?	O	O:0.994867
	
From	O	O:0.998324
your	O	O:0.996367
piece	O	O:0.996988
of	O	O:0.999043
code	O	O:0.972845
it	O	O:0.999464
seems	O	O:0.999325
to	O	O:0.999102
me	O	O:0.999669
that	O	O:0.991996
`	O	O:0.999173
clust_data	O	B-API:0.622319
`	O	O:0.994110
is	O	O:0.976184
already	O	O:0.997569
a	O	O:0.999456
list	O	O:0.974657
of	O	O:0.999572
lists	O	O:0.985599
with	O	O:0.999220
the	O	O:0.999066
correct	O	O:0.994019
shape	O	O:0.989870
and	O	O:0.999855
that	O	O:0.998519
`	O	O:0.998086
cellText	O	B-API:0.564877
`	O	O:0.998784
after	O	O:0.992511
being	O	O:0.985960
filled	O	O:0.862672
is	O	O:0.998028
going	O	O:0.974108
to	O	O:0.998760
be	O	O:0.999872
the	O	O:0.999870
same	O	O:0.992709
of	O	O:0.995952
`	O	O:0.995968
clust_data	O	B-API:0.709582
`	O	O:0.997945
.	O	O:0.950202
	
Anaconda	O	O:0.970043
doesn't	O	O:0.995615
by	O	O:0.996163
default	O	O:0.998800
load	O	O:0.893403
pylab	O	O:0.994816
into	O	O:0.977529
IPython	O	O:0.994519
so	O	O:0.998415
you	O	O:0.999127
can	O	O:0.999643
choose	O	O:0.999816
the	O	O:0.999578
backend	O	O:0.981869
after	O	O:0.990835
launching	O	O:0.976777
IPython	O	O:0.961107
.	O	O:0.979598
	
Most	O	O:0.987071
likely	O	O:0.986032
I'll	O	O:0.999535
have	O	O:0.991342
graphs	O	O:0.996613
with	O	O:0.997651
longer	O	O:0.998800
labels	O	O:0.989810
and	O	O:0.999843
if	O	O:0.999503
I	O	O:0.999121
put	O	O:0.999037
them	O	O:0.985522
near	O	O:0.991884
lines	O	O:0.978914
,	O	O:0.996185
it'll	O	O:0.998373
look	O	O:0.985545
messy	O	O:0.988093
.	O	O:0.993583
	
The	O	O:0.992689
lines	O	O:0.961246
are	O	O:0.998520
random	O	O:0.996789
within	O	O:0.989945
ranges	O	O:0.996851
that	O	O:0.996165
cause	O	O:0.998032
clustering	O	O:0.999146
of	O	O:0.997238
lines	O	O:0.942406
;	O	O:0.999918
a	O	O:0.998565
behavior	O	O:0.989848
I	O	O:0.998404
wanted	O	O:0.994138
to	O	O:0.984138
verify	O	O:0.996866
.	O	O:0.992087
	
have	O	O:0.996471
those	O	O:0.999398
lists	O	O:0.990836
all	O	O:0.998567
the	O	O:0.999660
same	O	O:0.980341
length	O	O:0.985749
aka	O	O:0.986132
would	O	O:0.999076
it	O	O:0.999940
be	O	O:0.999612
directly	O	O:0.997361
compatible	O	O:0.982997
witha	O	O:0.971142
2d	O	O:0.978877
numpy	O	O:0.979258
array	O	O:0.982845
?	O	O:0.992063
	
Any	O	O:0.984151
assistance	O	O:0.976699
will	O	O:0.996183
be	O	O:0.998972
appreciated	O	O:0.988672
.	O	O:0.972584
	
I	O	O:0.999499
have	O	O:0.999765
another	O	O:0.993377
working	O	O:0.992158
project	O	O:0.998289
where	O	O:0.997914
the	O	O:0.997493
toolbar	O	O:0.986879
is	O	O:0.996182
in	O	O:0.998626
the	O	O:0.999553
same	O	O:0.998200
panel	O	O:0.999637
as	O	O:0.999176
the	O	O:0.990575
canvas	O	O:0.976197
,	O	O:0.997891
and	O	O:0.999708
I	O	O:0.999312
think	O	O:0.998187
that	O	O:0.984125
might	O	O:0.998345
be	O	O:0.999338
the	O	O:0.999410
key	O	O:0.991231
difference	O	O:0.987200
between	O	O:0.989388
the	O	O:0.996358
two	O	O:0.986220
.	O	O:0.987314
	
any	O	O:0.984011
of	O	O:0.991585
#CODE	O	O:0.977470
	
Which	O	O:0.993534
way	O	O:0.970935
is	O	O:0.998974
the	O	O:0.997765
easiest	O	O:0.971460
to	O	O:0.999048
load	O	O:0.994593
all	O	O:0.999691
txt	O	O:0.997212
files	O	O:0.991854
?	O	O:0.992351
	
(	O	O:0.987827
Note	O	O:0.999491
that	O	O:0.996796
F	O	O:0.950034
is	O	O:0.999559
not	O	O:0.997257
given	O	O:0.990471
in	O	O:0.999344
the	O	O:0.999671
data	O	O:0.987125
,	O	O:0.998880
but	O	O:0.998995
you	O	O:0.996049
gave	O	O:0.998283
it	O	O:0.999827
as	O	O:0.999767
an	O	O:0.998245
example	O	O:0.989998
)	O	O:0.996057
	
Now	O	O:0.996254
I	O	O:0.999793
need	O	O:0.999513
to	O	O:0.998353
put	O	O:0.999456
this	O	O:0.999057
plot	O	O:0.973755
in	O	O:0.999809
a	O	O:0.997518
PyQt	O	O:0.966810
form	O	O:0.993614
.	O	O:0.988645
	
Where	O	O:0.968764
is	O	O:0.997806
the	O	O:0.996477
URL	O	O:0.985611
API	O	O:0.991015
documented	O	O:0.979230
?	O	O:0.995944
	
Are	O	O:0.994846
there	O	O:0.998111
any	O	O:0.999224
other	O	O:0.988747
option	O	O:0.991867
?	O	O:0.989802
	
You	O	O:0.997957
need	O	O:0.999822
some	O	O:0.997957
criteria	O	O:0.999242
to	O	O:0.999376
select	O	O:0.995463
out	O	O:0.999106
the	O	O:0.998573
"	O	O:0.999185
best	O	O:0.961660
"	O	O:0.997189
in	O	O:0.999637
your	O	O:0.981950
context	O	O:0.983787
.	O	O:0.991264
	
What	O	O:0.996954
do	O	O:0.994777
you	O	O:0.999820
mean	O	O:0.999245
when	O	O:0.999083
you	O	O:0.999683
say	O	O:0.999701
`	O	O:0.999635
the	O	O:0.997591
first	O	O:0.996837
histogram	O	O:0.998569
will	O	O:0.997662
be	O	O:0.999881
the	O	O:0.999923
first	O	O:0.995504
column	O	O:0.997845
as	O	O:0.997592
the	O	O:0.999438
x	O	O:0.993274
values	O	O:0.990785
plotted	O	O:0.985351
against	O	O:0.999245
the	O	O:0.998846
second	O	O:0.996108
column	O	O:0.998378
as	O	O:0.999416
the	O	O:0.997574
y-values	O	O:0.825260
`	O	O:0.992771
.	O	O:0.990840
	
Unfortunately	O	O:0.992713
I	O	O:0.998650
don't	O	O:0.999744
have	O	O:0.997807
any	O	O:0.999589
experience	O	O:0.993702
doing	O	O:0.999182
this	O	O:0.996219
so	O	O:0.995760
won't	O	O:0.998830
be	O	O:0.999822
able	O	O:0.999259
to	O	O:0.998509
help	O	O:0.989186
.	O	O:0.994388
	
A	O	O:0.997800
sample	O	O:0.988054
of	O	O:0.999002
my	O	O:0.998667
data	O	O:0.997845
to	O	O:0.998794
plot	O	O:0.976700
:	O	O:0.997441
#CODE	O	O:0.997134
	
Also	O	O:0.994387
,	O	O:0.999383
I	O	O:0.998457
do	O	O:0.996702
not	O	O:0.996959
want	O	O:0.999070
user	O	O:0.994313
intermediation	O	O:0.979821
at	O	O:0.998032
all	O	O:0.982947
!	O	O:0.982773
	
Rather	O	O:0.997258
than	O	O:0.998342
put	O	O:0.995438
together	O	O:0.996420
an	O	O:0.998331
example	O	O:0.998662
from	O	O:0.994163
scratch	O	O:0.986350
,	O	O:0.999431
there's	O	O:0.997603
an	O	O:0.998976
excellent	O	O:0.998272
example	O	O:0.996278
of	O	O:0.999784
this	O	O:0.997426
written	O	O:0.998805
by	O	O:0.997651
Paul	O	O:0.991753
Ivanov	O	O:0.975239
in	O	O:0.998307
the	O	O:0.999071
matplotlib	O	O:0.977341
examples	O	O:0.827730
(	O	O:0.998046
It's	O	O:0.999922
only	O	O:0.996729
in	O	O:0.999923
the	O	O:0.999440
current	O	O:0.991423
git	O	O:0.979735
tip	O	O:0.992664
,	O	O:0.998359
as	O	O:0.997524
it	O	O:0.986459
was	O	O:0.998551
only	O	O:0.998072
committed	O	O:0.999355
a	O	O:0.998950
few	O	O:0.925070
months	O	O:0.980955
ago	O	O:0.972057
.	O	O:0.989587
It's	O	O:0.998892
not	O	O:0.998860
on	O	O:0.999707
the	O	O:0.998209
webpage	O	O:0.991501
yet	O	O:0.985128
.	O	O:0.997438
)	O	O:0.997331
.	O	O:0.984864
	
what	O	O:0.986487
to	O	O:0.998811
do	O	O:0.999871
next	O	O:0.982352
?	O	O:0.993910
	
I	O	O:0.998015
think	O	O:0.996393
you'll	O	O:0.995909
find	O	O:0.994328
you	O	O:0.999783
get	O	O:0.999273
better	O	O:0.998822
help	O	O:0.996402
if	O	O:0.999624
you	O	O:0.999236
describe	O	O:0.980073
*	O	O:0.999864
what	O	O:0.988227
*	O	O:0.998989
you're	O	O:0.998227
trying	O	O:0.996889
to	O	O:0.999527
do	O	O:0.999855
,	O	O:0.999469
rather	O	O:0.997420
than	O	O:0.994724
*	O	O:0.999450
how	O	O:0.998243
*	O	O:0.999603
you	O	O:0.999736
want	O	O:0.997697
to	O	O:0.998997
do	O	O:0.999664
it	O	O:0.998284
.	O	O:0.992422
	
(	O	O:0.991178
ie	O	O:0.999785
save	O	O:0.970239
etc	O	O:0.996755
)	O	O:0.999179
.	O	O:0.995237
ill	O	O:0.996462
have	O	O:0.999426
a	O	O:0.999391
look	O	O:0.972252
at	O	O:0.999824
the	O	O:0.997913
toolkits	O	O:0.944298
:D	O	O:0.966708
	
in	O	O:0.998934
place	O	O:0.994183
of	O	O:0.998218
#CODE	O	O:0.982296
	
You	O	O:0.995040
could	O	O:0.998906
cast	O	O:0.970540
the	O	O:0.999448
array	O	O:0.991700
to	O	O:0.999045
a	O	O:0.999642
list	O	B-API:0.591526
:	O	O:0.997144
#CODE	O	O:0.997285
	
Add	O	O:0.954486
as	O	O:0.999175
many	O	O:0.989327
symlinks	O	O:0.988753
to	O	O:0.998910
the	O	O:0.999931
directory	O	O:0.998530
as	O	O:0.999042
you	O	O:0.999435
wish	O	O:0.998511
,	O	O:0.999530
it	O	O:0.999184
gives	O	O:0.997691
you	O	O:0.999405
fine-grained	O	O:0.998443
control	O	O:0.997351
over	O	O:0.990942
which	O	O:0.997251
packages	O	O:0.994137
you	O	O:0.999652
want	O	O:0.998977
to	O	O:0.999682
make	O	O:0.999626
accessible	O	O:0.980856
.	O	O:0.991801
	
In	O	O:0.995767
the	O	O:0.999165
end	O	O:0.993348
,	O	O:0.999055
I	O	O:0.999650
found	O	O:0.996859
out	O	O:0.994155
that	O	O:0.999351
the	O	O:0.998241
problem	O	O:0.979750
was	O	O:0.990960
simply	O	O:0.998610
that	O	O:0.999432
matplotlib	O	O:0.983364
could	O	O:0.998295
not	O	O:0.999709
find	O	O:0.998858
any	O	O:0.996875
backend	O	O:0.989586
for	O	O:0.996070
plotting	O	O:0.933932
.	O	O:0.957626
	
Please	O	O:0.985756
change	O	O:0.995162
your	O	O:0.994122
title	O	O:0.995164
to	O	O:0.999049
describe	O	O:0.999827
your	O	O:0.997889
_actual_	O	O:0.938625
issue	O	O:0.990517
.	O	O:0.986749
	
If	O	O:0.991105
you	O	O:0.988857
did	O	O:0.998977
not	O	O:0.999640
create	O	O:0.997402
one	O	O:0.999855
when	O	O:0.998819
you	O	O:0.999277
installed	O	O:0.999544
matplotlib	O	O:0.997229
,	O	O:0.999309
you	O	O:0.999415
can	O	O:0.999470
get	O	O:0.999984
this	O	O:0.999820
template	O	O:0.999559
from	O	O:0.998320
the	O	O:0.999088
matplotlib	O	O:0.985380
source	O	O:0.993707
,	O	O:0.999403
or	O	O:0.999601
from	O	O:0.997970
the	O	O:0.999487
matplotlib	O	O:0.972748
website	O	O:0.984130
.	O	O:0.988580
	
I	O	O:0.996073
am	O	O:0.999193
sorry	O	O:0.973392
to	O	O:0.999332
be	O	O:0.999831
so	O	O:0.999640
needy	O	O:0.869632
,	O	O:0.999342
but	O	O:0.997531
I	O	O:0.998654
really	O	O:0.999212
cant	O	O:0.991953
find	O	O:0.997684
any	O	O:0.998735
useful	O	O:0.990562
information	O	O:0.997090
anywhere	O	O:0.987939
.	O	O:0.995808
	
Or	O	O:0.975033
is	O	O:0.999656
there	O	O:0.998988
another	O	O:0.997137
way	O	O:0.998455
to	O	O:0.997648
change	O	O:0.998872
the	O	O:0.998463
size	O	O:0.946964
?	O	O:0.994550
	
I	O	O:0.993135
did	O	O:0.998829
find	O	O:0.981587
the	O	O:0.999503
way	O	O:0.994959
to	O	O:0.999096
make	O	O:0.999816
my	O	O:0.998155
images	O	O:0.946047
almost	O	O:0.999446
what	O	O:0.998149
I	O	O:0.998409
wanted	O	O:0.996848
with	O	O:0.810728
:	O	O:0.993515
#CODE	O	O:0.997148
	
any	O	O:0.988861
idea	O	O:0.952640
?	O	O:0.994552
	
@USER	O	O:0.945866
:	O	O:0.998079
I	O	O:0.999476
suppose	O	O:0.999542
the	O	O:0.997878
specific	O	O:0.988270
way	O	O:0.991431
I	O	O:0.999249
have	O	O:0.999270
it	O	O:0.999610
set	O	O:0.995284
up	O	O:0.995885
would	O	O:0.999531
work	O	O:0.998386
better	O	O:0.999488
if	O	O:0.999399
you	O	O:0.997643
had	O	O:0.995602
,	O	O:0.999703
say	O	O:0.996152
,	O	O:0.999851
a	O	O:0.997938
1000x1000	O	O:0.779670
matrix	O	O:0.994865
,	O	O:0.998990
as	O	O:0.998300
it	O	O:0.997135
lets	O	O:0.999034
numpy	O	O:0.999692
pick	O	O:0.943994
how	O	O:0.999291
the	O	O:0.999415
tics	O	O:0.958558
should	O	O:0.998137
be	O	O:0.999463
spaced	O	O:0.973088
.	O	O:0.948239
	
As	O	O:0.994135
you	O	O:0.998114
can	O	O:0.999211
see	O	O:0.999906
it	O	O:0.999731
only	O	O:0.996026
covers	O	O:0.999643
half	O	O:0.995079
of	O	O:0.997997
the	O	O:0.992298
matrix	O	O:0.990629
.	O	O:0.985463
	
You	O	O:0.994378
iterate	O	O:0.995935
the	O	O:0.999785
items	O	O:0.968080
in	O	O:0.996116
`	O	O:0.999146
glass	O	O:0.566087
`	O	O:0.998065
,	O	O:0.995773
but	O	O:0.999892
then	O	O:0.997487
compare	O	O:0.998890
to	O	O:0.999796
the	O	O:0.999974
whole	O	O:0.996524
list	O	O:0.996894
instead	O	O:0.999838
of	O	O:0.999617
to	O	O:0.999381
the	O	O:0.999981
current	O	O:0.960086
`	O	O:0.999337
item	O	O:0.777415
`	O	O:0.998974
	
If	O	O:0.996353
that	O	O:0.994881
helps	O	O:0.996686
,	O	O:0.999904
this	O	O:0.979341
is	O	O:0.999472
the	O	O:0.998580
process	O	O:0.991062
that	O	O:0.997129
I	O	O:0.999639
am	O	O:0.999774
doing	O	O:0.986543
to	O	O:0.998572
save	O	O:0.955851
and	O	O:0.998780
plot	O	O:0.737177
:	O	O:0.990922
#CODE	O	O:0.993779
	
Please	O	O:0.983496
consider	O	O:0.989675
answering	O	O:0.998545
your	O	O:0.996765
own	O	O:0.996998
question	O	O:0.988290
or	O	O:0.998297
removing	O	O:0.986670
it	O	O:0.999362
all	O	O:0.999644
together	O	O:0.988979
if	O	O:0.997426
you	O	O:0.997870
feel	O	O:0.979333
it	O	O:0.998587
does	O	O:0.996918
not	O	O:0.999362
add	O	O:0.989583
.	O	O:0.991536
	
Now	O	O:0.986943
"	O	O:0.999036
print	O	O:0.990834
zi	O	O:0.930517
"	O	O:0.994419
gives	O	O:0.987483
me	O	O:0.990156
an	O	O:0.997672
array	O	O:0.998170
like	O	O:0.971157
before	O	O:0.991413
but	O	O:0.998168
with	O	O:0.995497
nan	O	O:0.867468
everywhere	O	O:0.995918
.	O	O:0.993878
	
Im	O	O:0.995398
not	O	O:0.998989
by	O	O:0.998975
computer	O	O:0.993246
to	O	O:0.996411
test	O	O:0.988588
.	O	O:0.996131
	
I	O	O:0.998751
want	O	O:0.998922
to	O	O:0.997567
put	O	O:0.997867
my	O	O:0.996905
custom	O	O:0.941918
datetime	O	O:0.807547
format	O	O:0.955428
but	O	O:0.998649
when	O	O:0.997150
I	O	O:0.999204
tried	O	O:0.998122
my	O	O:0.988463
custom	O	O:0.899924
date	O	O:0.841857
format	O	O:0.966616
is	O	O:0.998620
overlapped	O	O:0.994100
over	O	O:0.995506
the	O	O:0.998238
date	O	O:0.957394
given	O	O:0.995883
by	O	O:0.997994
default	O	O:0.992722
by	O	O:0.987697
pandas	O	O:0.998264
plot	O	O:0.872335
.	O	O:0.988363
	
Change	O	O:0.975834
formatting	O	O:0.993901
on	O	O:0.998778
datetime	O	O:0.957692
ticks	O	O:0.995892
when	O	O:0.992087
plotting	O	O:0.997495
daily	O	O:0.995658
mean	O	O:0.986814
with	O	O:0.993004
Pandas	O	O:0.988037
/	O	O:0.996998
matplotlib	O	O:0.949470
	
Any	O	O:0.990724
other	O	O:0.993662
way	O	O:0.996824
to	O	O:0.997979
get	O	O:0.999978
a	O	O:0.999687
similar	O	O:0.987404
effect	O	O:0.999030
?	O	O:0.996205
	
If	O	O:0.997359
you	O	O:0.998750
see	O	O:0.999575
the	O	O:0.999594
right	O	O:0.996593
side	O	O:0.994319
,	O	O:0.999610
the	O	O:0.999395
size	O	O:0.912421
is	O	O:0.996881
changed	O	O:0.910036
.	O	O:0.990780
	
How	O	O:0.991761
can	O	O:0.999021
I	O	O:0.999936
select	O	O:0.998796
multiple	O	O:0.998571
data	O	O:0.996293
points	O	O:0.993424
with	O	O:0.995509
matplotlib	O	O:0.967764
and	O	O:0.999095
export	O	O:0.923339
it	O	O:0.992286
?	O	O:0.996143
	
Two	O	O:0.992273
steps	O	O:0.993120
to	O	O:0.998894
sketch	O	O:0.999477
an	O	O:0.999659
idea	O	O:0.991289
to	O	O:0.998673
solve	O	O:0.997726
this	O	O:0.980109
:	O	O:0.996744
	
This	O	O:0.942018
is	O	O:0.998070
not	O	O:0.996002
necessarily	O	O:0.997632
the	O	O:0.998770
nicest	O	O:0.965212
possible	O	O:0.997397
way	O	O:0.998735
of	O	O:0.999350
doing	O	O:0.990802
things	O	O:0.977123
,	O	O:0.993157
and	O	O:0.999540
you	O	O:0.998114
may	O	O:0.999452
bump	O	O:0.997662
into	O	O:0.996251
resolution	O	O:0.996519
problems	O	O:0.990534
,	O	O:0.999633
as	O	O:0.999436
well	O	O:0.947785
(	O	O:0.999744
check	O	O:0.998501
the	O	O:0.999770
size	O	O:0.990435
of	O	O:0.998661
the	O	O:0.997320
`	O	O:0.998936
mayavi	O	O:0.562603
`	O	O:0.994909
window	O	O:0.964590
)	O	O:0.998795
.	O	O:0.981333
	
Is	O	O:0.995788
there	O	O:0.999451
a	O	O:0.999079
way	O	O:0.985158
I	O	O:0.999362
can	O	O:0.999767
get	O	O:0.997480
y=x	O	O:0.952532
to	O	O:0.999860
show	O	O:0.999355
up	O	O:0.998639
even	O	O:0.999253
if	O	O:0.999468
I	O	O:0.998921
don't	O	O:0.999654
have	O	O:0.996290
a	O	O:0.999910
list	O	O:0.976836
of	O	O:0.999403
all	O	O:0.999239
the	O	O:0.999225
points	O	O:0.991071
that	O	O:0.997919
I	O	O:0.999639
plotted	O	O:0.995452
?	O	O:0.971065
	
Knowing	O	O:0.995310
all	O	O:0.999293
that	O	O:0.997509
,	O	O:0.999973
your	O	O:0.997217
example	O	O:0.973569
becomes	O	O:0.949792
:	O	O:0.996654
#CODE	O	O:0.992220
	
Any	O	O:0.953916
Ideas	O	O:0.996721
what	O	O:0.990738
might	O	O:0.998739
be	O	O:0.999745
the	O	O:0.999221
problem	O	O:0.921924
?	O	O:0.990810
	
It	O	O:0.991758
appear	O	O:0.995282
that	O	O:0.999479
these	O	O:0.998805
disappear	O	O:0.998594
when	O	O:0.998488
I	O	O:0.999544
add	O	O:0.997764
the	O	O:0.983348
`	O	O:0.991215
facecolors=UWR	O	O:0.582410
(	O	O:0.998716
heatmap	O	O:0.995894
)`	O	O:0.991604
property	O	O:0.996496
to	O	O:0.998665
the	O	O:0.999941
`	O	O:0.993834
surf	O	B-API:0.984137
(	O	O:0.999674
...	O	O:0.993016
)`	O	O:0.870116
.	O	O:0.987579
	
Can	O	O:0.989961
you	O	O:0.998623
post	O	O:0.988185
the	O	O:0.999763
full	O	O:0.925523
traceback	O	O:0.997573
?	O	O:0.995979
	
The	O	O:0.992763
full	O	O:0.990329
list	O	O:0.997510
of	O	O:0.999158
positions	O	O:0.950251
is	O	O:0.999438
given	O	O:0.949101
here	O	O:0.923437
:	O	O:0.992665
#URL	O	O:0.987135
	
unutbu's	O	O:0.881700
answer	O	O:0.944791
should	O	O:0.991302
fix	O	O:0.988454
it	O	O:0.998983
everywhere	O	O:0.991980
.	O	O:0.995833
	
how	O	O:0.990114
can	O	O:0.999493
i	O	O:0.999886
insert	O	O:0.997907
the	O	O:0.999504
plot	O	O:0.992479
returned	O	O:0.997402
by	O	O:0.999095
create_predef_plot	O	O:0.887945
into	O	O:0.894217
f2	O	O:0.938556
#CODE	O	O:0.981182
	
And	O	O:0.995793
the	O	O:0.999410
formatted	O	O:0.992572
ones	O	O:0.848741
(	O	O:0.998703
Used	O	O:0.999042
as	O	O:0.998734
_id	O	O:0.925974
of	O	O:0.999506
the	O	O:0.998704
documents	O	O:0.992310
after	O	O:0.995010
using	O	O:0.991112
aggregation	O	B-API:0.763769
):	O	O:0.945469
#CODE	O	O:0.973116
	
Any	O	O:0.990824
packages	O	O:0.982684
you	O	O:0.995607
accidentally	O	O:0.998428
installed	O	O:0.994329
for	O	O:0.999274
other	O	O:0.995916
Python	O	O:0.989047
installations	O	O:0.977369
,	O	O:0.999711
just	O	O:0.997983
reinstall	O	O:0.999695
them	O	O:0.957575
for	O	O:0.997268
MacPorts	O	O:0.937454
.	O	O:0.964427
	
However	O	O:0.990420
,	O	O:0.999859
other	O	O:0.998092
programs	O	O:0.996149
seem	O	O:0.992009
to	O	O:0.999756
be	O	O:0.999911
ok	O	O:0.997458
with	O	O:0.995455
filling	O	O:0.986055
almost	O	O:0.995009
all	O	O:0.999261
the	O	O:0.996992
memory	O	O:0.951050
before	O	O:0.991586
the	O	O:0.998886
swap	O	B-API:0.550588
is	O	O:0.997579
used	O	O:0.896212
.	O	O:0.993125
	
I'm	O	O:0.990513
not	O	O:0.998694
sure	O	O:0.998032
how	O	O:0.998701
to	O	O:0.997184
tackle	O	O:0.999737
this	O	O:0.993458
problem	O	O:0.989215
and	O	O:0.999744
any	O	O:0.999088
help	O	O:0.894077
or	O	O:0.999387
direction	O	O:0.975248
would	O	O:0.999198
be	O	O:0.999504
very	O	O:0.993360
appreciated	O	O:0.936242
.	O	O:0.985577
	
i	O	O:0.971817
looked	O	O:0.995179
at	O	O:0.999444
sage	O	O:0.974572
,	O	O:0.999317
the	O	O:0.997589
source	O	O:0.972281
code	O	O:0.943319
is	O	O:0.999109
huge	O	O:0.852041
,	O	O:0.997803
does	O	O:0.993247
it	O	O:0.998359
support	O	O:0.997443
python	O	O:0.999086
out	O	O:0.994759
of	O	O:0.998758
the	O	O:0.980937
box	O	O:0.995053
?	O	O:0.991859
	
If	O	O:0.997244
any	O	O:0.997306
one	O	O:0.999655
know	O	O:0.992804
about	O	O:0.997425
it	O	O:0.998873
then	O	O:0.994019
please	O	O:0.998765
reply	O	O:0.996477
me	O	O:0.952827
.	O	O:0.989960
	
I'll	O	O:0.992089
have	O	O:0.997381
a	O	O:0.999202
look	O	O:0.953497
at	O	O:0.999000
it	O	O:0.994043
	
The	O	O:0.998419
main	O	O:0.978333
issue	O	O:0.984401
is	O	O:0.999138
that	O	O:0.982509
you	O	O:0.999409
can't	O	O:0.999635
make	O	O:0.998305
UI	O	O:0.999837
changes	O	O:0.997568
from	O	O:0.999564
a	O	O:0.999765
separate	O	O:0.986484
process	O	O:0.987219
from	O	O:0.997416
the	O	O:0.999442
main	O	O:0.977950
UI	O	O:0.986951
thread	O	O:0.958330
(	O	O:0.999359
the	O	O:0.999279
one	O	O:0.999181
that	O	O:0.999575
all	O	O:0.999760
of	O	O:0.999921
your	O	O:0.988820
Qt	O	O:0.990040
calls	O	O:0.991682
are	O	O:0.994325
in	O	O:0.989572
)	O	O:0.996897
.	O	O:0.985604
	
I	O	O:0.997877
say	O	O:0.996627
"	O	O:0.997213
quick	O	O:0.971615
fix	O	O:0.913215
"	O	O:0.995703
because	O	O:0.991788
there	O	O:0.994707
are	O	O:0.999947
more	O	O:0.997561
changes	O	O:0.998432
that	O	O:0.996975
could	O	O:0.999501
be	O	O:0.999589
recommended	O	O:0.987624
.	O	O:0.971572
	
Maybe	O	O:0.997540
look	O	O:0.985634
at	O	O:0.999513
the	O	O:0.996198
scikit-learn	O	O:0.923241
docs	O	O:0.976045
for	O	O:0.997091
inspiration	O	O:0.984181
?	O	O:0.984992
	
Labels	O	O:0.991660
are	O	O:0.998859
located	O	O:0.982877
at	O	O:0.999147
the	O	O:0.998684
right	O	O:0.995483
place	O	O:0.985115
,	O	O:0.999330
but	O	O:0.998533
label	O	O:0.906385
is	O	O:0.998606
not	O	O:0.989878
correct	O	O:0.995532
.	O	O:0.992707
	
I	O	O:0.992678
ran	O	O:0.990845
the	O	O:0.995055
following	O	O:0.993704
code	O	O:0.995865
to	O	O:0.999265
get	O	O:0.999962
two	O	O:0.999380
plots	O	O:0.999261
next	O	O:0.990386
to	O	O:0.999044
each	O	O:0.997993
other	O	O:0.941682
(	O	O:0.999026
it	O	O:0.995205
is	O	O:0.999781
a	O	O:0.998752
minimal	O	O:0.960353
working	O	O:0.985992
example	O	O:0.998189
that	O	O:0.998418
you	O	O:0.999586
can	O	O:0.999807
copy	O	O:0.825148
):	O	O:0.998778
#CODE	O	O:0.971614
	
here	O	O:0.808777
is	O	O:0.999067
the	O	O:0.998677
code	O	O:0.994550
where	O	O:0.999220
I	O	O:0.999544
create	O	O:0.995606
the	O	O:0.995290
plot	O	O:0.905999
and	O	O:0.999889
a	O	O:0.999483
picture	O	O:0.965111
of	O	O:0.997708
this	O	O:0.926228
:	O	O:0.998147
	
Admittedly	O	O:0.958237
,	O	O:0.998225
I'm	O	O:0.998941
new	O	O:0.953359
to	O	O:0.995388
pandas	O	O:0.998821
but	O	O:0.997607
it	O	O:0.998268
seems	O	O:0.999866
like	O	O:0.998302
at	O	O:0.999949
every	O	O:0.998911
turn	O	O:0.932958
I	O	O:0.998618
am	O	O:0.998471
stopped	O	O:0.979667
,	O	O:0.999654
by	O	O:0.998193
my	O	O:0.994798
ignorance	O	O:0.992324
no	O	O:0.998263
doubt	O	O:0.915856
,	O	O:0.998033
but	O	O:0.987954
it's	O	O:0.990653
getting	O	O:0.996509
tiresome	O	O:0.978625
.	O	O:0.985623
	
Are	O	O:0.998028
all	O	O:0.998621
of	O	O:0.999948
your	O	O:0.996674
modes	O	O:0.999193
needed	O	O:0.998868
to	O	O:0.999367
demonstrate	O	O:0.999497
the	O	O:0.996397
problem	O	O:0.981048
?	O	O:0.995087
	
Note	O	O:0.997615
that	O	O:0.998195
the	O	O:0.999713
explicit	O	O:0.974878
masking	O	O:0.917963
is	O	O:0.997087
no	O	O:0.995131
longer	O	O:0.999471
necessary	O	O:0.997798
in	O	O:0.999393
matplotlib	O	O:0.992307
master	O	O:0.995124
as	O	O:0.994920
arrays	O	O:0.968904
are	O	O:0.997092
now	O	O:0.999168
masked	O	O:0.994718
automatically	O	O:0.974622
internally	O	O:0.956970
.	O	O:0.982959
	
(	O	O:0.993609
The	O	O:0.997770
disadvantage	O	O:0.946645
is	O	O:0.998880
that	O	O:0.982828
this	O	O:0.997141
method	O	O:0.994947
is	O	O:0.998134
much	O	O:0.991780
less	O	O:0.982607
flexible	O	O:0.915824
.	O	O:0.942261
):	O	O:0.993704
#CODE	O	O:0.992424
	
Python	O	O:0.883804
&	O	O:0.979322
Matplotlib	O	O:0.953543
:	O	O:0.997306
creating	O	O:0.997123
a	O	O:0.992439
chart	O	O:0.979617
first	O	O:0.990890
and	O	O:0.998679
showing	O	O:0.988655
it	O	O:0.996161
at	O	O:0.999707
a	O	O:0.998773
second	O	O:0.897104
moment	O	O:0.992631
	
Put	O	O:0.892596
#CODE	O	O:0.975056
	
If	O	O:0.996710
you	O	O:0.998713
require	O	O:0.999203
a	O	O:0.998297
completely	O	O:0.907206
manual	O	O:0.985028
installation	O	O:0.989506
,	O	O:0.998593
you	O	O:0.998149
should	O	O:0.999514
give	O	O:0.999540
those	O	O:0.999522
instructions	O	O:0.997736
a	O	O:0.995866
thorough	O	O:0.971016
read	O	O:0.789508
.	O	O:0.987471
	
Take	O	O:0.996701
a	O	O:0.998493
look	O	O:0.904197
at	O	O:0.999796
this	O	O:0.989567
example	O	O:0.978337
.	O	O:0.987093
	
I	O	O:0.994048
tried	O	O:0.998578
something	O	O:0.995233
like	O	O:0.993136
that	O	O:0.996913
already	O	O:0.995853
,	O	O:0.999399
but	O	O:0.999534
when	O	O:0.996359
I	O	O:0.999824
plot	O	O:0.999704
each	O	O:0.990595
data	O	O:0.999173
point	O	O:0.999742
individually	O	O:0.995236
in	O	O:0.999872
a	O	O:0.995590
for-loop	O	O:0.988285
,	O	O:0.999298
I	O	O:0.999339
see	O	O:0.998922
no	O	O:0.995572
way	O	O:0.997145
to	O	O:0.997032
use	O	O:0.999886
a	O	O:0.985915
colormap	O	O:0.908301
and	O	O:0.998615
colorbar	O	O:0.997042
for	O	O:0.997828
all	O	O:0.997328
of	O	O:0.999483
them	O	O:0.914489
.	O	O:0.996024
	
Here's	O	O:0.977023
how	O	O:0.994293
to	O	O:0.998447
do	O	O:0.999410
it	O	O:0.996542
:	O	O:0.999400
if	O	O:0.999670
you	O	O:0.999852
find	O	O:0.999123
that	O	O:0.999873
an	O	O:0.998908
answer	O	O:0.986060
has	O	O:0.997115
been	O	O:0.988039
helpful	O	O:0.994486
to	O	O:0.998833
you	O	O:0.999935
,	O	O:0.999979
then	O	O:0.999840
move	O	O:0.999775
your	O	O:0.999795
mouse	O	O:0.997050
over	O	O:0.993250
the	O	O:0.997411
upper	O	O:0.970661
left-hand	O	O:0.988804
corner	O	O:0.991176
of	O	O:0.999275
that	O	O:0.988262
answer	O	O:0.991796
(	O	O:0.999495
where	O	O:0.998921
the	O	O:0.998575
answer	O	O:0.985463
"	O	O:0.998622
score	O	O:0.965672
"	O	O:0.996356
appears	O	O:0.957051
between	O	O:0.980996
two	O	O:0.995876
gray	O	O:0.984214
triangles	O	O:0.969489
)	O	O:0.997390
.	O	O:0.989836
	
Can	O	O:0.990307
you	O	O:0.995762
recommend	O	O:0.997741
any	O	O:0.996853
tutorial	O	O:0.994123
for	O	O:0.999178
MATLAB	O	O:0.978707
speakers	O	O:0.966887
?	O	O:0.987837
	
The	O	O:0.994747
second	O	O:0.986954
plot	O	O:0.979696
keeps	O	O:0.993381
rescaling	O	O:0.990411
the	O	O:0.991350
x-axis	O	O:0.987139
for	O	O:0.998548
me	O	O:0.989269
,	O	O:0.998883
losing	O	O:0.992714
the	O	O:0.998710
overview	O	O:0.989576
of	O	O:0.998729
the	O	O:0.999262
full	O	O:0.997045
column	O	O:0.997271
1	O	O:0.994844
plot	O	O:0.962440
.	O	O:0.991777
	
Thanks	O	O:0.967004
for	O	O:0.998809
the	O	O:0.991399
answer	O	O:0.966218
,	O	O:0.998811
I	O	O:0.999207
searched	O	O:0.992348
for	O	O:0.985201
event	O	O:0.988870
handling	O	O:0.965320
examples	O	O:0.963177
but	O	O:0.968719
could	O	O:0.997877
not	O	O:0.999806
find	O	O:0.994981
it	O	O:0.995516
(	O	O:0.998792
I	O	O:0.998976
am	O	O:0.998643
newbie	O	O:0.981587
to	O	O:0.999222
python	O	O:0.999689
)	O	O:0.999532
,	O	O:0.999039
can	O	O:0.999282
you	O	O:0.999757
please	O	O:0.999825
send	O	O:0.985489
me	O	O:0.997047
link	O	O:0.998298
to	O	O:0.999228
at	O	O:0.999979
least	O	O:0.999407
one	O	O:0.999869
such	O	O:0.989685
example	O	O:0.987437
.	O	O:0.964808
	
You	O	O:0.988469
can	O	O:0.998751
find	O	O:0.999347
it	O	O:0.999598
here	O	O:0.970878
.	O	O:0.995971
	
(	O	O:0.993838
I	O	O:0.999712
know	O	O:0.997962
I	O	O:0.998662
add	O	O:0.993209
nothing	O	O:0.981623
new	O	O:0.954149
,	O	O:0.997062
but	O	O:0.997876
the	O	O:0.998898
straightforward	O	O:0.975010
answer	O	O:0.993133
should	O	O:0.998784
be	O	O:0.999473
visible	O	O:0.991367
)	O	O:0.992827
.	O	O:0.967659
	
So	O	O:0.994744
,	O	O:0.999250
I	O	O:0.999194
don't	O	O:0.999464
even	O	O:0.998477
know	O	O:0.999646
where	O	O:0.999110
to	O	O:0.998796
start	O	O:0.999599
looking	O	O:0.992634
	
When	O	O:0.994667
I	O	O:0.998976
try	O	O:0.999270
to	O	O:0.990402
run	O	O:0.999488
the	O	O:0.997750
example	O	O:0.962163
script	O	O:0.995805
at	O	O:0.996504
	
Thanks	O	O:0.967327
for	O	O:0.999824
your	O	O:0.983283
comment	O	O:0.987033
,	O	O:0.999604
I	O	O:0.999731
have	O	O:0.999165
put	O	O:0.979993
everything	O	O:0.999445
,	O	O:0.999526
I	O	O:0.999599
wanna	O	O:0.999134
plot	O	O:0.885215
(	O	O:0.999547
years	O	O:0.986647
,	O	O:0.999453
Frequency_accidents_years	O	O:0.964799
,	O	O:0.999459
regions	O	O:0.981185
)	O	O:0.997476
	
Via	O	O:0.909740
`	O	O:0.995373
apt-get	O	O:0.653101
`	O	O:0.998158
,	O	O:0.994482
I've	O	O:0.995709
tried	O	O:0.986357
installing	O	O:0.980399
ffmpeg	O	O:0.961391
,	O	O:0.999331
every	O	O:0.972801
codec	O	O:0.988890
imaginable	O	O:0.981070
,	O	O:0.998161
and	O	O:0.999850
even	O	O:0.996678
tried	O	O:0.994443
to	O	O:0.997544
compile	O	O:0.993992
ffmpeg	O	O:0.988906
from	O	O:0.984690
source	O	O:0.951034
.	O	O:0.990660
	
@USER	O	O:0.942497
This	O	O:0.991728
isn't	O	O:0.999181
a	O	O:0.997292
bug	O	O:0.965407
,	O	O:0.998415
but	O	O:0.999273
a	O	O:0.996103
design	O	O:0.974384
choice	O	O:0.983822
.	O	O:0.986322
	
The	O	O:0.990624
left-hand	O	O:0.988814
side	O	O:0.979763
can	O	O:0.997949
,	O	O:0.999950
however	O	O:0.997853
,	O	O:0.999595
contain	O	O:0.997761
any	O	O:0.998482
number	O	O:0.997358
of	O	O:0.998513
elements	O	O:0.978661
,	O	O:0.998127
and	O	O:0.999187
provided	O	O:0.984382
it	O	O:0.987193
is	O	O:0.999653
a	O	O:0.998586
tuple	O	O:0.990023
of	O	O:0.998882
variables	O	O:0.948616
the	O	O:0.999330
unpacking	O	O:0.990071
will	O	O:0.998939
take	O	O:0.999086
place	O	O:0.998454
.	O	O:0.997690
	
You	O	O:0.997910
want	O	O:0.995886
to	O	O:0.999376
look	O	O:0.999494
at	O	O:0.999652
the	O	O:0.997963
OO	O	O:0.931852
interface	O	O:0.988093
,	O	O:0.998389
not	O	O:0.999379
the	O	O:0.999407
state	O	O:0.990677
machine	O	O:0.991831
interface	O	O:0.995605
for	O	O:0.998252
matplotlib	O	O:0.922546
.	O	O:0.967570
	
This	O	O:0.991238
would	O	O:0.999102
be	O	O:0.999852
an	O	O:0.999770
interesting	O	O:0.976840
thing	O	O:0.999004
to	O	O:0.999220
add	O	O:0.999123
to	O	O:0.999373
the	O	O:0.999966
emerging	O	O:0.983493
thoughts	O	O:0.997342
about	O	O:0.996202
semantic	O	O:0.994638
objects	O	O:0.914631
in	O	O:0.991157
mpl	O	O:0.966444
.	O	O:0.989134
	
Maybe	O	O:0.996343
you	O	O:0.998550
could	O	O:0.999809
post	O	O:0.999502
a	O	O:0.999845
sample	O	O:0.978530
of	O	O:0.999929
your	O	O:0.998384
data	O	O:0.997589
array	O	O:0.997348
?	O	O:0.996160
	
I	O	O:0.993333
believe	O	O:0.998771
this	O	O:0.928869
is	O	O:0.997030
because	O	O:0.992837
I'm	O	O:0.998101
plotting	O	O:0.996329
the	O	O:0.995504
image	O	O:0.973359
wrong	O	O:0.969619
and	O	O:0.999554
so	O	O:0.998930
it	O	O:0.978881
is	O	O:0.999330
plotting	O	O:0.983699
all	O	O:0.998964
the	O	O:0.999789
data	O	O:0.997363
as	O	O:0.998045
0	O	O:0.969816
.	O	O:0.989483
	
Try	O	O:0.989315
running	O	O:0.990470
with	O	O:0.970261
`	O	O:0.997804
python	O	O:0.973471
-X	O	O:0.998317
faulthandler	O	O:0.827270
`	O	O:0.996163
and	O	O:0.998235
see	O	O:0.999587
if	O	O:0.997760
you	O	O:0.998976
get	O	O:0.999711
a	O	O:0.999626
useful	O	O:0.973986
traceback	O	O:0.998859
at	O	O:0.997802
the	O	O:0.994235
segfault	O	O:0.978464
.	O	O:0.982941
	
Notice	O	O:0.992832
how	O	O:0.999087
only	O	O:0.998339
one	O	O:0.999693
body	O	O:0.971385
has	O	O:0.997481
been	O	O:0.991644
coloured	O	O:0.990922
,	O	O:0.999020
all	O	O:0.999133
other	O	O:0.999042
disjoint	O	O:0.993401
polygons	O	O:0.968777
remain	O	O:0.973202
white	O	O:0.958239
:	O	O:0.982311
	
Thanks	O	O:0.968439
@USER	O	O:0.978933
,	O	O:0.998345
All	O	O:0.998550
I	O	O:0.999814
want	O	O:0.999658
set	O	O:0.990703
a	O	O:0.999348
plot	O	O:0.846455
title	O	O:0.999706
based	O	O:0.989544
on	O	O:0.998298
the	O	O:0.998597
what	O	O:0.997084
user	O	O:0.926896
is	O	O:0.999630
selected	O	O:0.969537
on	O	O:0.998477
the	O	O:0.998318
plot	O	O:0.962488
,	O	O:0.999597
for	O	O:0.999467
example	O	O:0.989642
if	O	O:0.998480
the	O	O:0.999198
plot	O	O:0.859316
shows	O	O:0.999752
a	O	O:0.999840
data	O	O:0.994984
from	O	O:0.996400
'	O	O:0.998941
Jan	O	O:0.994482
2012	O	O:0.975743
'	O	O:0.996413
to	O	O:0.995615
'	O	O:0.999865
July	O	O:0.991350
2014	O	O:0.994999
'	O	O:0.998456
dynamically	O	O:0.998641
want	O	O:0.999067
to	O	O:0.999086
set	O	O:0.999602
the	O	O:0.998805
title	O	O:0.994479
to	O	O:0.994127
'	O	O:0.999695
Years	O	O:0.964684
'	O	O:0.995641
and	O	O:0.999596
if	O	O:0.999414
the	O	O:0.998091
user	O	O:0.951857
selects	O	O:0.988117
from	O	O:0.975174
'	O	O:0.997935
May	O	O:0.998062
2014	O	O:0.979549
'	O	O:0.997043
to	O	O:0.995618
'	O	O:0.999874
July	O	O:0.991826
2014	O	O:0.989070
'	O	O:0.999841
then	O	O:0.998330
dynamically	O	O:0.999817
want	O	O:0.999519
to	O	O:0.999264
set	O	O:0.999676
the	O	O:0.998805
title	O	O:0.994482
to	O	O:0.995061
'	O	O:0.999698
Months	O	O:0.965827
'	O	O:0.996370
and	O	O:0.999622
if	O	O:0.999414
the	O	O:0.998091
user	O	O:0.951858
selects	O	O:0.988183
from	O	O:0.988636
'	O	O:0.998091
July	O	O:0.993923
2014	O	O:0.977857
'	O	O:0.996501
to	O	O:0.995591
'	O	O:0.999728
July	O	O:0.997296
2104	O	O:0.986027
'	O	O:0.999872
then	O	O:0.998100
dynamically	O	O:0.999817
want	O	O:0.999519
to	O	O:0.999264
set	O	O:0.999676
the	O	O:0.998805
title	O	O:0.994483
to	O	O:0.995792
'	O	O:0.999718
Days	O	O:0.944806
'	O	O:0.994514
.	O	O:0.991680
	
I	O	O:0.995835
would	O	O:0.999800
like	O	O:0.997603
to	O	O:0.999934
know	O	O:0.999790
if	O	O:0.999512
I	O	O:0.999722
have	O	O:0.999743
a	O	O:0.997466
triangular	O	O:0.880119
marker	O	O:0.988765
,	O	O:0.989459
is	O	O:0.999309
it	O	O:0.998292
possible	O	O:0.998439
to	O	O:0.999624
control	O	O:0.999390
its	O	O:0.994516
orientation	O	O:0.988902
?	O	O:0.991099
	
I	O	O:0.998762
like	O	O:0.998693
to	O	O:0.999258
sort	O	O:0.998429
these	O	O:0.999051
points	O	O:0.994145
row	O	O:0.998948
by	O	O:0.994853
row	O	O:0.987066
.	O	O:0.972298
	
Before	O	O:0.993724
comparing	O	O:0.989634
between	O	O:0.969917
these	O	O:0.996951
two	O	O:0.996000
PDFs	O	O:0.992004
,	O	O:0.999125
I	O	O:0.999383
would	O	O:0.999820
like	O	O:0.998662
to	O	O:0.999916
compare	O	O:0.999621
original	O	O:0.996663
time	O	O:0.996777
series	O	O:0.997828
and	O	O:0.999629
the	O	O:0.999558
series	O	O:0.990347
of	O	O:0.998518
Gaussian	O	O:0.989627
distributed	O	O:0.996544
numbers	O	O:0.971275
with	O	O:0.992108
the	O	O:0.999537
standard	O	O:0.982929
deviation	O	O:0.986886
and	O	O:0.999857
mean	O	O:0.999351
from	O	O:0.998264
original	O	O:0.996603
wind	O	O:0.955853
velocity	O	O:0.993509
series	O	O:0.995363
.	O	O:0.992543
	
I	O	O:0.997798
will	O	O:0.999774
like	O	O:0.999059
create	O	O:0.999135
a	O	O:0.999373
alpha	O	O:0.635050
channel	O	O:0.993787
,	O	O:0.996814
for	O	O:0.999203
explanation	O	O:0.984771
I	O	O:0.998324
put	O	O:0.998132
a	O	O:0.952576
example	O	O:0.654480
:	O	O:0.992846
	
The	O	O:0.967393
function	O	O:0.988581
is	O	O:0.998741
supposed	O	O:0.994062
to	O	O:0.999110
be	O	O:0.999670
smooth	O	O:0.975288
and	O	O:0.998617
connect	O	O:0.982251
at	O	O:0.984082
0	O	O:0.978000
and	O	O:0.998696
2	O	O:0.993491
pi	O	O:0.894351
in	O	O:0.998146
the	O	O:0.996231
y	O	O:0.992175
range	O	O:0.997574
of	O	O:0.993496
(	O	O:0.995219
0	O	O:0.991086
,	O	O:0.998615
2pi	O	O:0.811640
)	O	O:0.997725
not	O	O:0.997202
touching	O	O:0.994142
0	O	O:0.898630
and	O	O:0.997508
2pi	O	O:0.833392
.	O	O:0.949749
	
I	O	O:0.998450
have	O	O:0.996981
run	O	O:0.993607
a	O	O:0.998340
similar	O	O:0.838159
script	O	O:0.989818
before	O	O:0.972265
,	O	O:0.997794
and	O	O:0.999441
I	O	O:0.998420
think	O	O:0.996257
I've	O	O:0.985862
imported	O	O:0.979596
all	O	O:0.996903
the	O	O:0.999067
relevant	O	O:0.968104
modules	O	O:0.981334
.	O	O:0.995989
	
The	O	O:0.989396
sample	O	O:0.953062
image	O	O:0.994703
makes	O	O:0.989014
things	O	O:0.988218
clear	O	O:0.957432
.	O	O:0.992658
	
Take	O	O:0.980574
Care	O	O:0.988902
,	O	O:0.997979
George	O	O:0.976247
	
I	O	O:0.992248
don't	O	O:0.999754
know	O	O:0.987462
of	O	O:0.999746
any	O	O:0.988399
movie	O	O:0.996893
format	O	O:0.996823
that	O	O:0.972675
is	O	O:0.999213
vector	O	O:0.995008
based	O	O:0.671641
(	O	O:0.995733
but	O	O:0.994150
I	O	O:0.997685
don't	O	O:0.999739
know	O	O:0.995728
a	O	O:0.999679
lot	O	O:0.960063
about	O	O:0.995049
video	O	O:0.994538
codecs	O	O:0.943287
)	O	O:0.996909
.	O	O:0.972033
	
I	O	O:0.992594
can't	O	O:0.999401
find	O	O:0.995801
anything	O	O:0.999888
like	O	O:0.999626
that	O	O:0.998971
in	O	O:0.999606
the	O	O:0.999088
galery	O	O:0.833267
and	O	O:0.999353
all	O	O:0.998206
my	O	O:0.987286
attempts	O	O:0.995667
do	O	O:0.998873
deal	O	O:0.978550
with	O	O:0.997228
the	O	O:0.987967
colorbar	O	O:0.982010
failed	O	O:0.959675
.	O	O:0.993683
	
I	O	O:0.996813
encourage	O	O:0.995981
you	O	O:0.994342
to	O	O:0.999263
try	O	O:0.999977
all	O	O:0.999346
of	O	O:0.999873
the	O	O:0.998858
great	O	O:0.996019
ideas	O	O:0.991172
people	O	O:0.986243
are	O	O:0.998766
telling	O	O:0.997973
you	O	O:0.997677
,	O	O:0.998486
and	O	O:0.999283
I'm	O	O:0.998868
interested	O	O:0.985114
to	O	O:0.998895
see	O	O:0.999564
if	O	O:0.999822
any	O	O:0.999336
of	O	O:0.999913
them	O	O:0.984957
work	O	O:0.991061
!	O	O:0.995389
	
Have	O	O:0.992906
you	O	O:0.998308
tried	O	O:0.997831
setting	O	O:0.999081
your	O	O:0.970997
backend	O	O:0.995138
to	O	O:0.998932
SVG	O	O:0.999521
so	O	O:0.999461
that	O	O:0.999336
all	O	O:0.999803
of	O	O:0.999960
your	O	O:0.987984
images	O	O:0.982011
are	O	O:0.996961
in	O	O:0.998498
vector	O	O:0.990090
format	O	O:0.992139
?	O	O:0.992859
	
I	O	O:0.993416
appreciate	O	O:0.996098
any	O	O:0.987507
help	O	O:0.872198
:)	O	O:0.989304
	
Would	O	O:0.989211
be	O	O:0.997550
better	O	O:0.997583
to	O	O:0.997003
change	O	O:0.998222
the	O	O:0.995370
title	O	O:0.970390
	
My	O	O:0.991212
csv	O	O:0.947973
is	O	O:0.997714
like	O	O:0.967428
:	O	O:0.998734
id	O	O:0.971474
,	O	O:0.998000
author	O	O:0.984135
,	O	O:0.997824
title	O	O:0.997449
,	O	O:0.997918
language	O	O:0.993926
	
After	O	O:0.991015
making	O	O:0.995513
all	O	O:0.995493
of	O	O:0.999722
the	O	O:0.999317
changes	O	O:0.995110
listed	O	O:0.994938
in	O	O:0.999757
steps	O	O:0.994847
2	O	O:0.989213
and	O	O:0.996109
3	O	O:0.888300
(	O	O:0.980930
and	O	O:0.999317
correcting	O	O:0.995890
the	O	O:0.995756
spelling	O	O:0.995966
of	O	O:0.997664
the	O	O:0.997808
title	O	O:0.997973
)	O	O:0.999475
,	O	O:0.999705
I	O	O:0.999563
get	O	O:0.998751
the	O	O:0.996779
following	O	O:0.996785
very-reasonable-looking	O	O:0.957117
plot	O	O:0.889163
:	O	O:0.996966
	
When	O	O:0.994564
I	O	O:0.999618
look	O	O:0.996481
at	O	O:0.998442
the	O	O:0.999095
plot	O	O:0.910862
,	O	O:0.998863
the	O	O:0.999063
x	O	O:0.979895
range	O	O:0.999713
ends	O	O:0.993066
up	O	O:0.998641
being	O	O:0.997206
from	O	O:0.991886
0	O	O:0.980804
to	O	O:0.996535
12000	O	O:0.993507
.	O	O:0.988864
	
It	O	O:0.976541
was	O	O:0.995647
still	O	O:0.999162
at	O	O:0.999141
-1	O	O:0.991755
when	O	O:0.987897
I	O	O:0.991973
saw	O	O:0.995240
it	O	O:0.975627
.	O	O:0.988415
	
when	O	O:0.990536
the	O	O:0.999088
bad	O	O:0.990908
points	O	O:0.987793
are	O	O:0.997315
deleted	O	O:0.994809
,	O	O:0.999139
the	O	O:0.999309
user	O	O:0.945586
can	O	O:0.998682
click	O	O:0.997695
on	O	O:0.999947
different	O	O:0.998784
buttons	O	O:0.993864
to	O	O:0.998213
classify	O	O:0.997721
the	O	O:0.996970
source	O	O:0.752899
(	O	O:0.998871
lets	O	O:0.997614
say	O	O:0.996377
"	O	O:0.999527
star	O	O:0.964402
"	O	O:0.998911
,	O	O:0.996546
"	O	O:0.997615
galaxy	O	O:0.971961
"	O	O:0.998334
,	O	O:0.996585
"	O	O:0.997785
whatever	O	O:0.984803
")	O	O:0.992120
.	O	O:0.985088
	
Your	O	O:0.984834
`	O	O:0.998015
Z	O	O:0.855274
`	O	O:0.997310
'	O	O:0.983421
array	O	O:0.994029
'	O	O:0.985621
is	O	O:0.998545
actually	O	O:0.997602
a	O	O:0.999650
list	O	O:0.912376
of	O	O:0.999453
numpy	O	O:0.996241
arrays	O	O:0.995035
of	O	O:0.999599
different	O	O:0.990015
lengths	O	O:0.970801
.	O	O:0.978659
	
when	O	O:0.981211
the	O	O:0.997912
2D	O	O:0.987822
array	O	O:0.955274
is	O	O:0.998364
viewed	O	O:0.975154
as	O	O:0.999668
a	O	O:0.988853
color	O	O:0.897033
	
I	O	O:0.995968
looked	O	O:0.995020
through	O	O:0.983407
the	O	O:0.998357
examples	O	O:0.937938
in	O	O:0.998493
MatPlotLib	O	O:0.995714
or	O	O:0.997833
R	O	O:0.925305
and	O	O:0.999767
they	O	O:0.996195
all	O	O:0.998431
seem	O	O:0.989332
to	O	O:0.998626
already	O	O:0.999883
start	O	O:0.997819
with	O	O:0.999525
random	O	O:0.998167
data	O	O:0.999120
to	O	O:0.999701
generate	O	O:0.999396
the	O	O:0.997857
image	O	O:0.983765
.	O	O:0.991397
	
Filtering	O	O:0.990561
spreads	O	O:0.972564
out	O	O:0.989351
the	O	O:0.998687
information	O	O:0.981110
and	O	O:0.998250
makes	O	O:0.997991
the	O	O:0.998104
inner	O	O:0.967134
contours	O	O:0.836091
disappear	O	O:0.948858
.	O	O:0.996477
	
This	O	O:0.967157
is	O	O:0.999114
probably	O	O:0.995292
related	O	O:0.993610
to	O	O:0.997466
upgrading	O	O:0.999029
the	O	O:0.990909
library	O	O:0.985194
,	O	O:0.997290
and	O	O:0.999254
having	O	O:0.992532
old	O	O:0.990471
versions	O	O:0.995328
of	O	O:0.993577
the	O	O:0.998254
javascript	O	O:0.990280
hanging	O	O:0.891557
around	O	O:0.971611
.	O	O:0.978039
	
can	O	O:0.996992
you	O	O:0.999823
explain	O	O:0.999833
your	O	O:0.999398
data	O	O:0.997835
format	O	O:0.999015
in	O	O:0.999830
a	O	O:0.997671
little	O	O:0.978269
more	O	O:0.961334
detail	O	O:0.981476
and	O	O:0.999728
give	O	O:0.993255
us	O	O:0.995182
some	O	O:0.995135
copy	O	O:0.570166
/	O	O:0.998275
paste-able	O	O:0.948982
code	O	O:0.989339
to	O	O:0.999031
create	O	O:0.999647
a	O	O:0.998636
toy	O	O:0.977524
version	O	O:0.996683
of	O	O:0.994466
it	O	O:0.995165
?	O	O:0.998364
	
'	O	O:0.987608
To	O	O:0.999323
open	O	O:0.927538
"	O	O:0.999293
Python	O	O:0.986236
,	O	O:0.998557
"	O	O:0.998807
you	O	O:0.998914
need	O	O:0.999501
to	O	O:0.999518
install	O	O:0.997727
X11	O	O:0.953928
'	O	O:0.982840
.	O	O:0.993553
	
@USER	O	O:0.865899
:	O	O:0.994812
You	O	O:0.998548
can	O	O:0.999836
certainly	O	O:0.999813
change	O	O:0.996834
the	O	O:0.998503
exact	O	O:0.997752
shape	O	O:0.999063
by	O	O:0.998319
modifying	O	O:0.997625
the	O	O:0.992203
factor	O	O:0.824789
"	O	O:0.997499
3	O	O:0.951083
"	O	O:0.998601
in	O	O:0.999688
front	O	O:0.995525
of	O	O:0.999123
the	O	O:0.994945
lower	O	O:0.946648
branch	O	O:0.954954
.	O	O:0.985067
	
Downvotes	O	O:0.983201
are	O	O:0.998340
due	O	O:0.994209
to	O	O:0.998730
the	O	O:0.999947
lack	O	O:0.985746
of	O	O:0.999652
research	O	O:0.977858
effort	O	O:0.971800
(	O	O:0.999181
if	O	O:0.998893
you	O	O:0.999596
look	O	O:0.994672
at	O	O:0.999806
the	O	O:0.998696
reasons	O	O:0.982232
for	O	O:0.994669
downvotes	O	O:0.911611
,	O	O:0.992153
it	O	O:0.998799
says	O	O:0.978230
"	O	O:0.999251
This	O	O:0.993040
question	O	O:0.987150
does	O	O:0.994334
not	O	O:0.999343
show	O	O:0.999266
any	O	O:0.998623
research	O	O:0.988984
effort	O	O:0.977607
")	O	O:0.991906
.	O	O:0.972683
	
As	O	O:0.988654
for	O	O:0.998965
the	O	O:0.997528
matplotlib	O	O:0.905672
version	O	O:0.980962
1.1.0	O	O:0.973605
,	O	O:0.998443
it's	O	O:0.999026
a	O	O:0.998505
really	O	O:0.995009
easy	O	O:0.993478
install	O	O:0.983905
,	O	O:0.999357
at	O	O:0.999391
least	O	O:0.998147
on	O	O:0.999638
my	O	O:0.995960
by-now-quite	O	O:0.976096
old	O	O:0.995313
Lucid	O	O:0.985806
it's	O	O:0.994615
no	O	O:0.996478
problem	O	O:0.992736
at	O	O:0.997682
all	O	O:0.987216
.	O	O:0.989574
	
Numpy	O	O:0.987641
index	O	O:0.998932
out	O	O:0.997420
of	O	O:0.999619
range	O	O:0.992022
error	O	O:0.990815
	
Though	O	O:0.994486
I	O	O:0.999774
want	O	O:0.999412
to	O	O:0.996986
add	O	O:0.999938
that	O	O:0.998146
manually	O	O:0.997616
saving	O	O:0.997454
the	O	O:0.990714
chart	O	O:0.996387
from	O	O:0.991490
Qt	O	O:0.984646
Widget	O	O:0.988364
is	O	O:0.988557
OK	O	O:0.940265
.	O	O:0.987353
	
Without	O	O:0.992118
seeing	O	O:0.997793
any	O	O:0.996072
of	O	O:0.997664
the	O	O:0.998730
existing	O	O:0.997729
plotting	O	O:0.985648
functions	O	O:0.989553
,	O	O:0.998839
how	O	O:0.998532
am	O	O:0.998485
I	O	O:0.999856
supposed	O	O:0.999636
to	O	O:0.998561
know	O	O:0.999709
how	O	O:0.999602
similar	O	O:0.995993
or	O	O:0.999927
different	O	O:0.998294
they	O	O:0.994691
are	O	O:0.998328
?	O	O:0.997635
	
You	O	O:0.995869
can	O	O:0.997370
use	O	O:0.999510
spline	O	O:0.995774
to	O	O:0.996224
fit	O	O:0.998518
the	O	O:0.992134
[	O	O:0.997772
blue	O	O:0.976977
curve	O	O:0.994663
-	O	O:0.999264
peak	O	O:0.986006
/	O	O:0.994216
2	O	O:0.982507
]	O	O:0.988240
,	O	O:0.996692
and	O	O:0.999839
then	O	O:0.998790
find	O	O:0.996072
it's	O	O:0.996701
roots	O	O:0.931773
:	O	O:0.996251
#CODE	O	O:0.996693
	
I	O	O:0.992030
had	O	O:0.996496
to	O	O:0.995234
add	O	O:0.995374
`	O	O:0.994654
colorbar	O	O:0.874567
(	O	O:0.999486
im2	O	O:0.994521
)`	O	O:0.994952
right	O	O:0.986300
after	O	O:0.997571
the	O	O:0.998367
definition	O	O:0.993417
of	O	O:0.991951
im2	O	O:0.943282
...	O	O:0.990584
	
Creating	O	O:0.985678
sample	O	O:0.980993
data	O	O:0.981071
#CODE	O	O:0.993739
	
The	O	O:0.994759
numbers	O	O:0.975257
choose	O	O:0.984998
now	O	O:0.998462
many	O	O:0.998575
decimal	O	O:0.977848
places	O	O:0.997413
you	O	O:0.999414
want	O	O:0.997664
and	O	O:0.999851
the	O	O:0.998772
e	O	O:0.839509
chooses	O	O:0.947344
scientific	O	O:0.857746
notation	O	O:0.979663
.	O	O:0.977191
	
To	O	O:0.998694
clear	O	O:0.989957
up	O	O:0.997158
the	O	O:0.998383
code	O	O:0.987148
,	O	O:0.999770
I	O	O:0.999782
put	O	O:0.992426
the	O	O:0.998181
individual	O	O:0.995338
plotting	O	O:0.995405
functions	O	O:0.988583
for	O	O:0.998956
the	O	O:0.997864
six	O	O:0.968916
or	O	O:0.999730
so	O	O:0.999776
groups	O	O:0.998725
of	O	O:0.999430
subplots	O	O:0.995719
into	O	O:0.996686
separate	O	O:0.986193
submodules	O	O:0.963215
and	O	O:0.999531
call	O	O:0.999300
them	O	O:0.972975
with	O	O:0.994507
the	O	O:0.997641
arrays	O	O:0.995486
they	O	O:0.998973
need	O	O:0.997914
for	O	O:0.999522
plotting	O	O:0.972798
purposes	O	O:0.952499
.	O	O:0.981778
	
You	O	O:0.998674
have	O	O:0.998657
given	O	O:0.995349
us	O	O:0.997486
a	O	O:0.999272
list	O	O:0.911686
of	O	O:0.997892
requirements	O	O:0.977485
,	O	O:0.998556
but	O	O:0.999587
what	O	O:0.998914
have	O	O:0.998784
you	O	O:0.999704
tried	O	O:0.998289
to	O	O:0.999214
solve	O	O:0.999466
your	O	O:0.998591
own	O	O:0.992184
problem	O	O:0.992356
?	O	O:0.991704
	
For	O	O:0.998894
that	O	O:0.994833
purpose	O	O:0.998442
,	O	O:0.999783
I	O	O:0.999588
have	O	O:0.999173
put	O	O:0.978680
the	O	O:0.998854
following	O	O:0.913982
command	O	O:0.993683
in	O	O:0.999758
a	O	O:0.998345
for	O	O:0.984209
loop	O	O:0.795979
:	O	O:0.987829
#CODE	O	O:0.995545
	
I	O	O:0.999000
work	O	O:0.997979
at	O	O:0.999559
a	O	O:0.998598
large	O	O:0.830834
company	O	O:0.971328
and	O	O:0.995309
do	O	O:0.996256
not	O	O:0.996121
have	O	O:0.996467
admin	O	O:0.949835
rights	O	O:0.987072
.	O	O:0.980631
	
Note	O	O:0.995825
that	O	O:0.998214
it	O	O:0.999942
only	O	O:0.999141
detect	O	O:0.992005
truly	O	O:0.998659
equal	O	O:0.995305
placements	O	O:0.992559
,	O	O:0.999611
if	O	O:0.999411
you	O	O:0.999066
would	O	O:0.999938
have	O	O:0.999927
values	O	O:0.999453
of	O	O:0.998062
`	O	O:0.998146
[	O	O:0.994712
0	O	O:0.997444
,	O	O:0.996868
0.00001	O	O:0.892460
,	O	O:0.997471
2	O	O:0.988989
,	O	O:0.999008
10	O	O:0.987124
]`	O	O:0.994556
,	O	O:0.999489
they	O	O:0.996761
would	O	O:0.998689
probably	O	O:0.999482
still	O	O:0.998808
overlap	O	O:0.959612
.	O	O:0.991080
	
Suppose	O	O:0.987896
I	O	O:0.999489
have	O	O:0.999607
a	O	O:0.993964
triangle	O	O:0.991883
mesh	O	O:0.998825
defined	O	O:0.995216
by	O	O:0.995786
X	O	O:0.965789
,	O	O:0.994511
Y	O	O:0.970104
,	O	O:0.998171
and	O	O:0.999282
Z	O	O:0.991377
,	O	O:0.997763
the	O	O:0.998733
3D	O	O:0.987874
coordinates	O	O:0.992763
of	O	O:0.999767
a	O	O:0.998675
point	O	O:0.990893
cloud	O	O:0.997111
,	O	O:0.999542
each	O	O:0.995676
a	O	O:0.997491
vector	O	O:0.997488
of	O	O:0.997877
length	O	O:0.979102
n	O	O:0.971526
,	O	O:0.998017
and	O	O:0.999230
UVW	O	O:0.974441
,	O	O:0.999316
a	O	O:0.997756
2D	O	O:0.916310
m-x-3	O	O:0.973566
matrix	O	O:0.996255
in	O	O:0.998606
which	O	O:0.999501
each	O	O:0.990803
row	O	O:0.989993
is	O	O:0.999688
a	O	O:0.998082
triplet	O	O:0.998147
of	O	O:0.999325
indices	O	O:0.993054
into	O	O:0.992600
the	O	O:0.998155
point	O	O:0.970062
cloud	O	O:0.987851
.	O	O:0.989402
	
I	O	O:0.993548
am	O	O:0.998888
trying	O	O:0.994137
to	O	O:0.999700
create	O	O:0.999700
a	O	O:0.999675
plot	O	O:0.970569
with	O	O:0.999595
vertical	O	O:0.998561
bars	O	O:0.994642
equal	O	O:0.994923
to	O	O:0.999551
score	O	O:0.999624
length	O	O:0.991989
,	O	O:0.995705
AND	O	O:0.998860
with	O	O:0.998668
a	O	O:0.995543
radiobutton	O	O:0.990440
which	O	O:0.994118
enables	O	O:0.995712
the	O	O:0.999468
user	O	O:0.948252
to	O	O:0.998615
choose	O	O:0.999726
which	O	O:0.999830
level	O	O:0.998899
scores	O	O:0.987068
he	O	O:0.988883
/	O	O:0.995437
she	O	O:0.969865
wants	O	O:0.996383
to	O	O:0.997198
see	O	O:0.999597
,	O	O:0.999836
as	O	O:0.999034
such	O	O:0.933249
:	O	O:0.996888
	
The	O	O:0.997077
2nd	O	O:0.996056
set	O	O:0.996326
of	O	O:0.999725
data	O	O:0.994530
will	O	O:0.999906
also	O	O:0.999467
include	O	O:0.998589
the	O	O:0.999273
first	O	O:0.996092
as	O	O:0.998961
written	O	O:0.934469
in	O	O:0.999338
this	O	O:0.963262
snippet	O	O:0.983830
(	O	O:0.998935
looking	O	O:0.997306
for	O	O:0.999522
good	O	O:0.949998
way	O	O:0.996321
to	O	O:0.996566
delete	O	O:0.979633
it	O	O:0.999362
that	O	O:0.996290
doesn't	O	O:0.999605
cause	O	O:0.999253
problems	O	O:0.999071
later	O	O:0.995265
down	O	O:0.988463
the	O	O:0.999091
line	O	O:0.964403
)	O	O:0.997589
.	O	O:0.991679
	
So	O	O:0.996830
you	O	O:0.999691
need	O	O:0.999530
to	O	O:0.999871
add	O	O:0.998733
`	O	O:0.999055
u	O	B-API:0.559297
`	O	O:0.995546
:	O	O:0.976298
#CODE	O	O:0.997797
	
Regardless	O	O:0.997874
,	O	O:0.999905
once	O	O:0.998228
you	O	O:0.999304
get	O	O:0.999445
used	O	O:0.997909
to	O	O:0.999196
it	O	O:0.999937
,	O	O:0.999347
I	O	O:0.999717
find	O	O:0.995953
it	O	O:0.999154
much	O	O:0.994036
easier	O	O:0.995783
to	O	O:0.999237
write	O	O:0.998903
reusable	O	O:0.997977
plotting	O	O:0.998947
functions	O	O:0.988297
in	O	O:0.998157
python	O	O:0.997458
with	O	O:0.998120
matplotlib	O	O:0.992736
than	O	O:0.989666
in	O	O:0.995812
Matlab	O	O:0.982860
.	O	O:0.991173
	
Now	O	O:0.995166
,	O	O:0.999433
you	O	O:0.998967
should	O	O:0.999565
be	O	O:0.999951
able	O	O:0.999820
to	O	O:0.999571
get	O	O:0.999856
all	O	O:0.999839
the	O	O:0.999734
libraries	O	O:0.995454
you	O	O:0.999253
need	O	O:0.999888
just	O	O:0.999745
as	O	O:0.999646
easily	O	O:0.991378
,	O	O:0.999610
using	O	O:0.995121
,	O	O:0.990988
too	O	O:0.930481
,	O	O:0.997465
Macports	O	O:0.956083
.	O	O:0.985824
	
I	O	O:0.996007
believe	O	O:0.998484
that	O	O:0.992251
I'm	O	O:0.999405
using	O	O:0.999465
the	O	O:0.989789
TK	O	O:0.827631
backend	O	O:0.960332
;	O	O:0.980664
I'm	O	O:0.998036
not	O	O:0.999478
married	O	O:0.995301
to	O	O:0.999437
that	O	O:0.999479
choice	O	O:0.992182
,	O	O:0.998937
but	O	O:0.983235
it's	O	O:0.992201
not	O	O:0.999052
clear	O	O:0.998132
how	O	O:0.996906
I	O	O:0.998302
should	O	O:0.999266
install	O	O:0.991558
other	O	O:0.995076
backends	O	O:0.955964
.	O	O:0.978280
	
What	O	O:0.958289
is	O	O:0.998626
this	O	O:0.991877
float	O	O:0.918377
,	O	O:0.996720
and	O	O:0.999206
how	O	O:0.997785
can	O	O:0.996487
I	O	O:0.999960
convert	O	O:0.981427
it	O	O:0.996040
to	O	O:0.999883
a	O	O:0.999758
datetime	O	B-API:0.653195
?	O	O:0.993215
	
xtics	O	O:0.926937
and	O	O:0.999620
ytics	O	O:0.992785
labels	O	O:0.972935
because	O	O:0.998991
they	O	O:0.996703
appear	O	O:0.998328
for	O	O:0.999878
all	O	O:0.998139
values	O	O:0.979577
of	O	O:0.997928
xPoints	O	O:0.897097
and	O	O:0.999628
yPoints	O	O:0.864679
(	O	O:0.997753
they	O	O:0.996181
overlap	O	O:0.974202
)	O	O:0.998461
.	O	O:0.979054
	
matplotlib	O	O:0.853189
(	O	O:0.998443
equal	O	O:0.998184
unit	O	O:0.992842
length	O	O:0.992859
)	O	O:0.996703
	
Is	O	O:0.994777
there	O	O:0.998502
any	O	O:0.995669
reason	O	O:0.997258
why	O	O:0.996460
I	O	O:0.998820
can't	O	O:0.998999
do	O	O:0.995309
this	O	O:0.997496
?	O	O:0.994095
	
I	O	O:0.997806
am	O	O:0.999413
using	O	O:0.997193
the	O	O:0.997934
following	O	O:0.984707
codes	O	O:0.997283
to	O	O:0.999108
generate	O	O:0.999640
the	O	O:0.999077
square	O	O:0.989862
wave	O	O:0.960145
format	O	O:0.982212
[	O	O:0.986560
Eg	O	O:0.996047
:	O	O:0.999393
from	O	O:0.997648
0	O	O:0.998676
till	O	O:0.992246
5	O	O:0.991095
]	O	O:0.999178
using	O	O:0.985717
for	O	O:0.987067
loop	O	O:0.811356
.	O	O:0.961528
	
Can	O	O:0.990756
you	O	O:0.996735
reduce	O	O:0.983004
the	O	O:0.999539
extent	O	O:0.929210
of	O	O:0.999397
you	O	O:0.997672
problem	O	O:0.999733
by	O	O:0.998737
calculating	O	O:0.995351
something	O	O:0.997780
akin	O	O:0.995676
to	O	O:0.999891
a	O	O:0.999902
density	O	O:0.896105
,	O	O:0.998821
reducing	O	O:0.996064
millions	O	O:0.993405
of	O	O:0.999476
line	O	O:0.995052
segments	O	O:0.998018
to	O	O:0.999528
maybe	O	O:0.999984
a	O	O:0.999363
few	O	O:0.990058
hundred	O	O:0.989164
or	O	O:0.999407
a	O	O:0.997936
few	O	O:0.994298
thousand	O	O:0.998473
data	O	O:0.988270
points	O	O:0.982609
?	O	O:0.996509
	
array	O	O:0.991575
erroneously	O	O:0.992479
filled	O	O:0.989990
with	O	O:0.997891
the	O	O:0.999514
same	O	O:0.995919
value	O	O:0.994759
	
You	O	O:0.997004
can	O	O:0.999082
change	O	O:0.997956
the	O	O:0.999346
`	O	O:0.982281
reduce_C_function	O	B-API:0.970382
`	O	O:0.999305
option	O	O:0.996422
if	O	O:0.999479
you	O	O:0.999592
want	O	O:0.999373
something	O	O:0.999614
different	O	O:0.999092
than	O	O:0.998654
a	O	O:0.998571
simple	O	O:0.935977
average	O	O:0.877466
.	O	O:0.991668
	
The	O	O:0.996745
whole	O	O:0.971531
traceback	O	O:0.995349
is	O	O:0.994160
rather	O	O:0.990338
large	O	O:0.959210
but	O	O:0.988667
seems	O	O:0.995023
to	O	O:0.999643
revolve	O	O:0.992342
around	O	O:0.996822
this	O	O:0.990487
part	O	O:0.972825
(	O	O:0.999156
if	O	O:0.998125
I	O	O:0.999518
read	O	O:0.992177
it	O	O:0.990966
correctly	O	O:0.981585
):	O	O:0.997199
#CODE	O	O:0.994357
	
Matplotlib	O	O:0.825112
:	O	O:0.994311
WebAgg	O	O:0.966351
backend	O	O:0.993071
doesn't	O	O:0.996430
show	O	O:0.997802
any	O	O:0.998801
figures	O	O:0.966947
	
While	O	O:0.997177
this	O	O:0.990126
seems	O	O:0.999675
what	O	O:0.994622
I	O	O:0.997768
was	O	O:0.998064
looking	O	O:0.972627
for	O	O:0.996286
,	O	O:0.986821
I'm	O	O:0.995368
not	O	O:0.997979
lucky	O	O:0.997120
finding	O	O:0.995302
any	O	O:0.991799
proper	O	O:0.960918
documentation	O	O:0.995398
for	O	O:0.976833
webagg	O	B-API:0.757506
.	O	O:0.968012
	
If	O	O:0.987767
I	O	O:0.998814
were	O	O:0.998110
you	O	O:0.996330
,	O	O:0.999879
I'd	O	O:0.999674
start	O	O:0.997829
from	O	O:0.999806
this	O	O:0.997587
example	O	O:0.997550
to	O	O:0.999112
see	O	O:0.999914
where	O	O:0.998589
do	O	O:0.998798
these	O	O:0.999702
lines	O	O:0.980661
start	O	O:0.995706
showing	O	O:0.993115
up	O	O:0.978532
.	O	O:0.988707
	
According	O	O:0.990371
to	O	O:0.998916
efiring	O	O:0.997105
,	O	O:0.998948
matplotlib	O	O:0.982426
does	O	O:0.994102
not	O	O:0.998089
support	O	O:0.992338
NumPy	O	O:0.983522
datetime64	O	O:0.612986
objects	O	O:0.807133
(	O	O:0.995914
at	O	O:0.998470
least	O	O:0.996157
not	O	O:0.998979
yet	O	O:0.982932
)	O	O:0.997281
.	O	O:0.973936
	
At	O	O:0.997763
least	O	O:0.997776
on	O	O:0.999631
my	O	O:0.976976
system	O	O:0.961288
(	O	O:0.998392
OSX	O	O:0.985901
,	O	O:0.997828
Python	O	O:0.979318
2.7	O	O:0.976624
,	O	O:0.997908
mpl	O	O:0.988324
1.1.0	O	O:0.978494
)	O	O:0.999063
,	O	O:0.999142
I	O	O:0.998910
don't	O	O:0.999485
have	O	O:0.998312
any	O	O:0.999493
issues	O	O:0.993969
with	O	O:0.992033
panning	O	O:0.990320
,	O	O:0.998767
etc	O	O:0.993217
.	O	O:0.995560
	
Yeah	O	O:0.985251
,	O	O:0.998492
I	O	O:0.998893
understand	O	O:0.994724
why	O	O:0.994581
Pylab	O	O:0.978410
exists	O	O:0.983595
,	O	O:0.996499
and	O	O:0.999026
why	O	O:0.996590
it	O	O:0.994717
seems	O	O:0.999499
so	O	O:0.999153
attractive	O	O:0.993180
to	O	O:0.998962
people	O	O:0.999394
moving	O	O:0.997146
over	O	O:0.988963
from	O	O:0.995392
MATLAB	O	O:0.983564
,	O	O:0.999385
but	O	O:0.998916
over	O	O:0.977157
the	O	O:0.999436
long	O	O:0.994247
term	O	O:0.988269
I	O	O:0.999507
feel	O	O:0.998078
like	O	O:0.981855
it's	O	O:0.999485
a	O	O:0.993875
net	O	O:0.991843
negative	O	O:0.951463
because	O	O:0.987848
it	O	O:0.994084
makes	O	O:0.998041
it	O	O:0.998693
harder	O	O:0.993786
to	O	O:0.999541
share	O	O:0.999362
code	O	O:0.993917
with	O	O:0.997189
and	O	O:0.999826
get	O	O:0.999353
help	O	O:0.988461
from	O	O:0.999226
everyone	O	O:0.969704
who	O	O:0.988291
isn't	O	O:0.996811
using	O	O:0.994453
it	O	O:0.984165
.	O	O:0.976236
	
How	O	O:0.991852
can	O	O:0.998728
I	O	O:0.999965
get	O	O:0.998499
around	O	O:0.985693
this	O	O:0.991923
?	O	O:0.996081
	
Function	O	O:0.979903
of	O	O:0.992417
Numpy	O	O:0.958694
Array	O	O:0.993841
with	O	O:0.974401
if-statement	O	O:0.970795
	
By	O	O:0.988077
default	O	O:0.994994
it	O	O:0.999377
sets	O	O:0.985425
the	O	O:0.996335
(	O	O:0.997193
0	O	O:0.994456
,	O	O:0.999286
0	O	O:0.990698
)	O	O:0.999564
element	O	O:0.990034
of	O	O:0.999108
the	O	O:0.998594
array	O	O:0.994223
in	O	O:0.998855
the	O	O:0.998932
upper	O	O:0.991001
left	O	O:0.925942
corner	O	O:0.962798
.	O	O:0.985166
	
I	O	O:0.994884
appreciate	O	O:0.997076
any	O	O:0.992185
help	O	O:0.946749
with	O	O:0.998913
this	O	O:0.990478
.	O	O:0.997448
	
At	O	O:0.995912
the	O	O:0.998377
moment	O	O:0.997113
I	O	O:0.999140
do	O	O:0.999754
a	O	O:0.988172
for	O	O:0.982095
loop	O	O:0.974017
and	O	O:0.999133
plot	O	O:0.993507
each	O	O:0.895630
point	O	O:0.927442
:	O	O:0.994963
#CODE	O	O:0.995544
	
What	O	O:0.995511
I	O	O:0.999426
currently	O	O:0.999729
have	O	O:0.990013
to	O	O:0.999036
convert	O	O:0.974520
it	O	O:0.987337
:	O	O:0.997298
#CODE	O	O:0.997449
	
You	O	O:0.989784
should	O	O:0.998579
post	O	O:0.998441
your	O	O:0.999356
new	O	O:0.993376
code	O	O:0.983430
and	O	O:0.999185
the	O	O:0.995758
**	O	O:0.996060
full	O	O:0.926270
**	O	O:0.999164
traceback	O	O:0.998909
in	O	O:0.999619
another	O	O:0.991629
question	O	O:0.985157
.	O	O:0.984318
	
I	O	O:0.991333
don't	O	O:0.999581
want	O	O:0.992755
to	O	O:0.999613
make	O	O:0.999794
any	O	O:0.998466
translations	O	O:0.940795
/	O	O:0.996369
shifts	O	O:0.989929
to	O	O:0.999481
the	O	O:0.999991
data	O	O:0.997525
itself	O	O:0.980330
(	O	O:0.999296
it's	O	O:0.999113
a	O	O:0.999310
large	O	O:0.955565
dataset	O	O:0.995988
,	O	O:0.999033
etc	O	O:0.997656
)	O	O:0.999567
,	O	O:0.999468
so	O	O:0.999211
I'd	O	O:0.999321
be	O	O:0.999423
looking	O	O:0.999189
to	O	O:0.996420
do	O	O:0.999899
this	O	O:0.998510
with	O	O:0.999377
some	O	O:0.994782
matplotlib-trickery	O	O:0.946009
.	O	O:0.989186
	
Raster	O	O:0.966895
to	O	O:0.993324
Numpy	O	O:0.997755
Array	O	O:0.990821
-	O	O:0.998797
how	O	O:0.999321
to	O	O:0.999608
change	O	O:0.999870
a	O	O:0.998129
default	O	O:0.985935
color-scheme	O	O:0.981996
of	O	O:0.999391
a	O	O:0.997795
matplotlib	O	O:0.985374
plot	O	O:0.923561
	
or	O	O:0.994423
invert	O	O:0.886719
the	O	O:0.992618
Y-axis	O	O:0.866970
:	O	O:0.991571
#CODE	O	O:0.997518
	
So	O	O:0.992632
,	O	O:0.999916
a	O	O:0.998460
solution	O	O:0.854589
is	O	O:0.999107
simply	O	O:0.997371
to	O	O:0.999811
create	O	O:0.998853
a	O	O:0.999485
list	O	O:0.974912
of	O	O:0.999322
all	O	O:0.997917
objects	O	O:0.998023
that	O	O:0.998103
will	O	O:0.999362
be	O	O:0.999226
refreshed	O	O:0.995897
,	O	O:0.995213
and	O	O:0.999339
to	O	O:0.998158
call	O	O:0.997760
this	O	O:0.993011
`	O	O:0.994391
remove	O	B-API:0.951718
`	O	O:0.998557
method	O	O:0.993478
for	O	O:0.999722
everyone	O	O:0.991137
of	O	O:0.997618
them	O	O:0.660703
:	O	O:0.996530
	
The	O	O:0.997392
best	O	O:0.958102
choice	O	O:0.983237
is	O	O:0.998361
to	O	O:0.995784
make	O	O:0.999977
your	O	O:0.999230
widgets	O	O:0.986931
in	O	O:0.999659
the	O	O:0.999716
order	O	O:0.994047
you	O	O:0.999648
wish	O	O:0.999893
them	O	O:0.998665
to	O	O:0.999147
appear	O	O:0.998545
.	O	O:0.996353
	
Python	O	O:0.835320
:	O	O:0.995993
How	O	O:0.999071
to	O	O:0.999741
generate	O	O:0.999879
a	O	O:0.998986
power	O	O:0.988819
law	O	O:0.978242
graph	O	O:0.991169
	
Unfortunately	O	O:0.996182
the	O	O:0.996204
broken	O	O:0.800620
command	O	O:0.977861
is	O	O:0.999072
also	O	O:0.996998
preventing	O	O:0.998908
me	O	O:0.991669
from	O	O:0.996797
tryig	O	O:0.982498
this	O	O:0.998178
,	O	O:0.999515
so	O	O:0.999007
I'll	O	O:0.997936
have	O	O:0.998438
to	O	O:0.999446
fix	O	O:0.999385
that	O	O:0.998174
first	O	O:0.995203
.	O	O:0.996566
	
(	O	O:0.985907
`	O	O:0.998357
1	O	O:0.900466
`	O	O:0.998759
is	O	O:0.994649
the	O	O:0.999327
the	O	O:0.989641
start	O	O:0.981595
index	O	O:0.999116
,	O	O:0.999538
`	O	O:0.999338
2	O	O:0.849073
`	O	O:0.998435
is	O	O:0.998394
the	O	O:0.999444
increment	O	O:0.903086
)	O	O:0.995013
In	O	O:0.995591
contrast	O	O:0.994070
,	O	O:0.995566
`	O	O:0.996695
x	O	O:0.528337
[:	O	O:0.997718
:	O	O:0.997267
-1	O	O:0.983362
]`	O	O:0.998463
just	O	O:0.985995
specifies	O	O:0.999463
an	O	O:0.999328
increment	O	O:0.992277
of	O	O:0.996977
`	O	O:0.995931
-1	O	O:0.847745
`	O	O:0.999787
,	O	O:0.999417
thus	O	O:0.998067
reversing	O	O:0.998095
the	O	O:0.995040
array	O	O:0.978177
.	O	O:0.986909
	
One	O	O:0.988859
way	O	O:0.970905
around	O	O:0.995644
this	O	O:0.916834
is	O	O:0.999016
not	O	O:0.997684
to	O	O:0.999256
use	O	O:0.999472
the	O	O:0.995671
pandas	O	O:0.991139
`	O	O:0.999458
plot	O	B-API:0.895298
`	O	O:0.998892
method	O	O:0.981347
,	O	O:0.999589
but	O	O:0.999834
to	O	O:0.998193
directly	O	O:0.999539
the	O	O:0.998346
matplotlib's	O	O:0.952701
`	O	O:0.996064
plot	O	O:0.499699
`	O	O:0.998222
function	O	O:0.980670
.	O	O:0.993484
	
where	O	O:0.962868
`	O	O:0.998116
numctrl_ccm90	O	B-API:0.734687
`	O	O:0.998437
and	O	O:0.981782
`	O	O:0.999717
numctrl_ucp90	O	B-API:0.920021
`	O	O:0.998429
are	O	O:0.998001
the	O	O:0.999761
widgets	O	O:0.995311
corresponding	O	O:0.979057
to	O	O:0.998568
the	O	O:0.999984
collimated	O	O:0.983384
counts	O	O:0.993476
at	O	O:0.999356
-90deg	O	O:0.933620
and	O	O:0.999420
the	O	O:0.999660
uncollimated	O	O:0.863046
counts	O	O:0.993845
+90deg	O	O:0.962783
etc	O	O:0.996481
.	O	O:0.995770
	
Any	O	O:0.981798
tips	O	O:0.959356
?	O	O:0.993435
	
I	O	O:0.992456
would	O	O:0.998817
appreciate	O	O:0.994498
any	O	O:0.998914
comment	O	O:0.986545
or	O	O:0.997314
suggestion	O	O:0.979578
.	O	O:0.993175
	
I	O	O:0.992870
looked	O	O:0.993666
at	O	O:0.990795
`	O	O:0.988180
masked_array	O	B-API:0.944106
`	O	O:0.998743
which	O	O:0.940132
is	O	O:0.999525
different	O	O:0.962757
.	O	O:0.980058
	
Without	O	O:0.993672
having	O	O:0.991236
all	O	O:0.998038
the	O	O:0.998367
code	O	O:0.956904
listed	O	O:0.996069
,	O	O:0.999597
I	O	O:0.998575
had	O	O:0.995711
to	O	O:0.998062
make	O	O:0.999887
some	O	O:0.998703
assumptions	O	O:0.997185
about	O	O:0.997506
the	O	O:0.998744
data	O	O:0.983891
and	O	O:0.999697
about	O	O:0.999271
what	O	O:0.985355
you	O	O:0.993207
wanted	O	O:0.995159
.	O	O:0.994049
	
You	O	O:0.997892
mean	O	O:0.989128
`	O	O:0.997068
Axes3D	O	B-API:0.861729
`	O	O:0.996313
is	O	O:0.997163
different	O	O:0.998034
from	O	O:0.980708
`	O	O:0.997516
axes3d	O	O:0.720716
`	O	O:0.998266
?	O	O:0.976522
	
If	O	O:0.990879
you	O	O:0.996635
already	O	O:0.999098
have	O	O:0.995868
python	O	O:0.994382
and	O	O:0.999429
gfortran	O	O:0.987914
and	O	O:0.998818
such	O	O:0.995086
,	O	O:0.999602
jump	O	O:0.922664
in	O	O:0.998637
at	O	O:0.999408
the	O	O:0.999274
point	O	O:0.995916
where	O	O:0.998004
you	O	O:0.999341
need	O	O:0.998518
.	O	O:0.997836
	
Maybe	O	O:0.995163
you	O	O:0.999520
know	O	O:0.999609
a	O	O:0.999509
fix	O	O:0.784301
for	O	O:0.999535
this	O	O:0.976151
?	O	O:0.994174
	
How	O	O:0.991628
can	O	O:0.997615
I	O	O:0.999879
fix	O	O:0.997498
this	O	O:0.974701
?	O	O:0.996682
	
The	O	O:0.988536
background	O	O:0.977996
is	O	O:0.999319
that	O	O:0.994851
the	O	O:0.999862
array's	O	O:0.984895
values	O	O:0.981052
represent	O	O:0.988730
the	O	O:0.999627
water	O	O:0.998016
depth	O	O:0.996861
of	O	O:0.999565
a	O	O:0.997119
square	O	O:0.858620
grid	O	O:0.979899
.	O	O:0.987531
	
And	O	O:0.984097
try	O	O:0.996591
debugging	O	O:0.997754
one	O	O:0.999684
step	O	O:0.999147
at	O	O:0.999883
a	O	O:0.996634
time	O	O:0.864678
:	O	O:0.999452
make	O	O:0.998576
sure	O	O:0.998605
you	O	O:0.999710
have	O	O:0.999751
good	O	O:0.999573
data	O	O:0.998906
before	O	O:0.997517
you	O	O:0.996304
try	O	O:0.996705
to	O	O:0.999333
plot	O	O:0.998097
it	O	O:0.998555
.	O	O:0.996643
	
What	O	O:0.997686
do	O	O:0.996015
you	O	O:0.999758
mean	O	O:0.998443
the	O	O:0.999080
"	O	O:0.997861
label	O	O:0.966586
"	O	O:0.995267
?	O	O:0.990486
	
To	O	O:0.992095
do	O	O:0.999273
this	O	O:0.998894
we	O	O:0.999023
ll	O	O:0.997745
use	O	O:0.996926
the	O	O:0.997452
standard	O	O:0.852894
y=mx+b	O	O:0.991414
line	O	O:0.991286
equation	O	O:0.999412
where	O	O:0.998591
m	O	O:0.958272
is	O	O:0.999098
the	O	O:0.993570
line	O	O:0.979369
s	O	O:0.964216
slope	O	O:0.985024
and	O	O:0.999220
b	O	O:0.945978
is	O	O:0.994739
the	O	O:0.990665
line	O	O:0.971347
s	O	O:0.941339
y-intercept	O	O:0.982136
.	O	O:0.984160
	
If	O	O:0.997130
you	O	O:0.999433
check	O	O:0.999054
the	O	O:0.999675
Matplotlib	O	O:0.988890
example	O	O:0.987268
for	O	O:0.999121
the	O	O:0.994859
function	O	O:0.990108
you	O	O:0.998247
are	O	O:0.999846
using	O	O:0.999771
,	O	O:0.997621
you	O	O:0.998097
will	O	O:0.997801
notice	O	O:0.999874
they	O	O:0.999353
use	O	O:0.999598
a	O	O:0.990247
similar	O	O:0.672924
methodology	O	O:0.989241
:	O	O:0.995109
build	O	O:0.990616
empty	O	O:0.960230
matrix	O	O:0.967611
and	O	O:0.998906
fill	O	O:0.886184
it	O	O:0.999098
with	O	O:0.999376
strings	O	O:0.995383
built	O	O:0.996369
with	O	O:0.997833
the	O	O:0.978497
interpolation	O	O:0.979928
method	O	O:0.994508
.	O	O:0.993741
	
But	O	O:0.997359
the	O	O:0.998497
question	O	O:0.989051
still	O	O:0.996402
remains-	O	O:0.986041
how	O	O:0.998662
do	O	O:0.994587
I	O	O:0.999185
fix	O	O:0.961476
it	O	O:0.987127
?	O	O:0.994837
	
Based	O	O:0.975313
on	O	O:0.998479
the	O	O:0.998756
plot	O	O:0.987029
selection	O	O:0.997908
I	O	O:0.999862
want	O	O:0.999449
to	O	O:0.997344
set	O	O:0.999615
the	O	O:0.999474
plot	O	O:0.889699
title	O	O:0.998391
,	O	O:0.999759
so	O	O:0.999536
I	O	O:0.999783
need	O	O:0.999617
to	O	O:0.999240
know	O	O:0.999865
the	O	O:0.999177
current	O	O:0.978261
x	O	O:0.995518
-axis	O	O:0.998836
value	O	O:0.996599
after	O	O:0.997963
the	O	O:0.997921
plot	O	O:0.597182
is	O	O:0.997326
shown	O	O:0.902828
.	O	O:0.992325
	
I	O	O:0.998930
have	O	O:0.997370
tried	O	O:0.984412
the	O	O:0.998522
following	O	O:0.962422
code	O	O:0.977317
but	O	O:0.999615
this	O	O:0.998788
creates	O	O:0.989395
2	O	O:0.997476
separate	O	O:0.939985
charts	O	O:0.970726
but	O	O:0.996238
I	O	O:0.999062
would	O	O:0.999771
like	O	O:0.998954
this	O	O:0.999820
all	O	O:0.999083
on	O	O:0.999336
one	O	O:0.995755
chart	O	O:0.995562
.	O	O:0.990137
	
Any	O	O:0.979163
advice	O	O:0.980243
would	O	O:0.997633
be	O	O:0.998904
greatly	O	O:0.993970
appreciated	O	O:0.908820
.	O	O:0.980978
	
How	O	O:0.991354
can	O	O:0.998475
I	O	O:0.999967
add	O	O:0.996733
colorbar	O	O:0.988565
to	O	O:0.999511
this	O	O:0.999777
code	O	O:0.991216
?	O	O:0.997760
	
I'm	O	O:0.995383
reading	O	O:0.984549
in	O	O:0.999445
a	O	O:0.999319
file	O	O:0.980830
with	O	O:0.999297
several	O	O:0.999368
columns	O	O:0.996683
,	O	O:0.999873
each	O	O:0.997714
of	O	O:0.995712
which	O	O:0.997932
contains	O	O:0.994912
around	O	O:0.996155
100	O	O:0.976083
values	O	O:0.962267
between	O	O:0.953968
1	O	O:0.973116
and	O	O:0.997116
10	O	O:0.944758
.	O	O:0.952951
	
But	O	O:0.989523
for	O	O:0.999280
the	O	O:0.998142
all	O	O:0.998470
three	O	O:0.990365
plots	O	O:0.990547
We	O	O:0.999329
have	O	O:0.998722
same	O	O:0.997110
temperature	O	O:0.996944
T=4K	O	O:0.906089
.	O	O:0.992248
	
I've	O	O:0.986665
downloaded	O	O:0.997701
a	O	O:0.998079
number	O	O:0.976557
of	O	O:0.999387
nifty	O	O:0.985690
programs	O	O:0.991909
and	O	O:0.995962
utilities	O	O:0.926692
(	O	O:0.974957
and	O	O:0.999818
info	O	O:0.996366
sites	O	O:0.982697
)	O	O:0.998160
/	O	O:0.993045
quantum	O	O:0.976938
gis	O	O:0.971052
,	O	O:0.998301
virtual	O	O:0.934984
terrain	O	O:0.978753
project	O	O:0.993448
,	O	O:0.999203
grass	O	O:0.929777
,	O	O:0.998421
I'm	O	O:0.997862
looking	O	O:0.998620
to	O	O:0.999632
get	O	O:0.999939
an	O	O:0.998946
xyz	O	O:0.997004
csv	O	O:0.998317
file	O	O:0.997251
into	O	O:0.996567
a	O	O:0.997480
format	O	O:0.980435
that	O	O:0.999264
these	O	O:0.999555
tools	O	O:0.995544
can	O	O:0.994081
use	O	O:0.998474
.	O	O:0.985793
	
I	O	O:0.998993
have	O	O:0.998702
all	O	O:0.999176
the	O	O:0.999628
plots	O	O:0.981108
as	O	O:0.999216
several	O	O:0.995945
modules	O	O:0.958639
in	O	O:0.996305
python	O	O:0.972006
/	O	O:0.996239
matplotlib	O	O:0.965205
already	O	O:0.995375
coded	O	O:0.996570
,	O	O:0.999437
so	O	O:0.997262
that's	O	O:0.991911
perfect	O	O:0.976744
.	O	O:0.994618
	
At	O	O:0.999361
some	O	O:0.995994
level	O	O:0.996956
,	O	O:0.999694
this	O	O:0.985722
is	O	O:0.998578
purely	O	O:0.994071
a	O	O:0.999016
matter	O	O:0.983605
of	O	O:0.998992
taste	O	O:0.976357
and	O	O:0.999528
depends	O	O:0.998214
a	O	O:0.995808
bit	O	O:0.873964
on	O	O:0.999567
what	O	O:0.992363
you	O	O:0.999246
are	O	O:0.999581
doing	O	O:0.998304
.	O	O:0.986872
	
I	O	O:0.995716
really	O	O:0.998834
want	O	O:0.991807
to	O	O:0.999275
plot	O	O:0.999101
all	O	O:0.999630
the	O	O:0.999411
points	O	O:0.975802
in	O	O:0.998474
my	O	O:0.998342
matrix	O	O:0.999335
instead	O	O:0.999570
of	O	O:0.999121
the	O	O:0.985883
(	O	O:0.998278
M-1	O	O:0.962979
)	O	O:0.998137
x	O	O:0.773873
(	O	O:0.997552
N-1	O	O:0.973591
)	O	O:0.996561
.	O	O:0.980830
	
I	O	O:0.998648
want	O	O:0.998870
to	O	O:0.997550
set	O	O:0.999865
a	O	O:0.992781
colour	O	O:0.941691
scheme	O	O:0.994988
for	O	O:0.998441
my	O	O:0.995594
python	O	O:0.993966
plots	O	O:0.991572
,	O	O:0.998852
so	O	O:0.999622
that	O	O:0.999057
they	O	O:0.999716
don't	O	O:0.999825
repeat	O	O:0.984750
the	O	O:0.999482
same	O	O:0.985966
colour	O	O:0.997621
like	O	O:0.997861
they	O	O:0.998961
are	O	O:0.998669
for	O	O:0.996187
A	O	O:0.995780
and	O	O:0.998988
H	O	O:0.974374
in	O	O:0.994447
the	O	O:0.996271
top	O	O:0.991385
plot	O	O:0.976889
shown	O	O:0.991300
below	O	O:0.984753
.	O	O:0.991272
	
I've	O	O:0.955443
got	O	O:0.994982
a	O	O:0.996316
2D	O	O:0.923392
numpy	O	O:0.994213
array	O	O:0.993981
with	O	O:0.999156
1.0e6	O	O:0.897281
as	O	O:0.999430
the	O	O:0.998654
no	O	O:0.999363
data	O	O:0.994984
value	O	O:0.997626
.	O	O:0.994663
	
Is	O	O:0.997312
this	O	O:0.999191
what	O	O:0.997298
you	O	O:0.999539
mean	O	O:0.997563
?	O	O:0.998439
	
This	O	O:0.967230
is	O	O:0.998973
somewhat	O	O:0.995898
based	O	O:0.996131
on	O	O:0.997935
guesswork	O	O:0.984535
,	O	O:0.999763
since	O	O:0.997391
I	O	O:0.997035
can't	O	O:0.999809
test	O	O:0.937428
it	O	O:0.999824
with	O	O:0.997622
`	O	O:0.999022
matplotlib	O	O:0.868851
`	O	O:0.998242
,	O	O:0.991825
but	O	O:0.999590
something	O	O:0.997306
along	O	O:0.996429
these	O	O:0.996436
lines	O	O:0.933853
might	O	O:0.994473
work	O	O:0.982608
:	O	O:0.999330
#CODE	O	O:0.997254
	
Here	O	O:0.934971
is	O	O:0.999337
some	O	O:0.987191
sample	O	O:0.990685
code	O	O:0.977889
resembling	O	O:0.993130
my	O	O:0.990639
case	O	O:0.967914
:	O	O:0.997149
#CODE	O	O:0.994199
	
This	O	O:0.969913
is	O	O:0.999747
the	O	O:0.997429
result	O	O:0.995338
for	O	O:0.999106
printing	O	O:0.996089
every	O	O:0.995529
item	O	O:0.973292
in	O	O:0.997822
the	O	O:0.995792
xyz	O	O:0.956523
list	O	O:0.889610
and	O	O:0.999061
piping	O	O:0.994458
it	O	O:0.995234
into	O	O:0.991960
a	O	O:0.997349
file	O	O:0.858574
.	O	O:0.993939
	
Or	O	O:0.968661
is	O	O:0.999857
your	O	O:0.998010
plot	O	O:0.976842
supposed	O	O:0.998849
to	O	O:0.999365
be	O	O:0.999980
an	O	O:0.999767
average	O	O:0.812067
or	O	O:0.999688
something	O	O:0.996453
?	O	O:0.997743
	
I	O	O:0.997980
just	O	O:0.993463
wasn't	O	O:0.993561
sure	O	O:0.991257
if	O	O:0.999574
changing	O	O:0.998299
some	O	O:0.993023
plotting	O	O:0.995267
functions	O	O:0.989258
around	O	O:0.970479
would	O	O:0.996177
help	O	O:0.968464
.	O	O:0.997653
	
I	O	O:0.997186
agree	O	O:0.995509
with	O	O:0.981985
you	O	O:0.993027
,	O	O:0.999759
but	O	O:0.999180
I	O	O:0.999749
just	O	O:0.999414
tried	O	O:0.991310
to	O	O:0.998451
make	O	O:0.999238
code	O	O:0.984554
which	O	O:0.999186
uses	O	O:0.992012
as	O	O:0.998787
few	O	O:0.986691
less	O	O:0.991892
well-known	O	O:0.990844
features	O	O:0.964433
of	O	O:0.991554
`	O	O:0.998232
matplotlib	O	O:0.804196
`	O	O:0.997695
.	O	O:0.952593
	
You	O	O:0.995749
could	O	O:0.999173
add	O	O:0.999390
a	O	O:0.999492
URL	O	O:0.986236
to	O	O:0.998926
the	O	O:0.999894
image	O	O:0.991949
,	O	O:0.999721
so	O	O:0.999463
someone	O	O:0.994057
with	O	O:0.997408
enough	O	O:0.984553
reputation	O	O:0.997788
can	O	O:0.994276
upload	O	O:0.998567
it	O	O:0.999266
to	O	O:0.999905
your	O	O:0.999841
post	O	O:0.929060
.	O	O:0.997671
	
'	O	O:0.995469
plot	O	O:0.831225
'	O	O:0.998320
shows	O	O:0.997711
me	O	O:0.997700
a	O	O:0.997994
line	O	O:0.982651
interconnecting	O	O:0.994802
all	O	O:0.999750
data	O	O:0.994736
points	O	O:0.988040
,	O	O:0.997840
but	O	O:0.998073
not	O	O:0.999243
the	O	O:0.999971
data	O	O:0.998302
points	O	O:0.994335
themselves	O	O:0.961178
(	O	O:0.998521
unless	O	O:0.996098
there's	O	O:0.998644
a	O	O:0.999139
way	O	O:0.979317
I	O	O:0.998153
don't	O	O:0.999783
know	O	O:0.990137
of	O	O:0.998886
)	O	O:0.991590
.	O	O:0.990995
	
Did	O	O:0.997074
you	O	O:0.999277
add	O	O:0.998435
matplotlib	O	O:0.996343
to	O	O:0.999868
your	O	O:0.998685
PYTHONPATH	O	O:0.727515
?	O	O:0.996906
	
I	O	O:0.999299
have	O	O:0.996423
successfully	O	O:0.939492
edited	O	O:0.980219
and	O	O:0.998703
put	O	O:0.973684
it	O	O:0.991098
in	O	O:0.998536
my	O	O:0.995541
code	O	O:0.959669
and	O	O:0.998361
works	O	O:0.997854
fine	O	O:0.925891
,	O	O:0.997801
but	O	O:0.999375
my	O	O:0.993313
problem	O	O:0.982207
is	O	O:0.999639
that	O	O:0.984691
I	O	O:0.999534
can't	O	O:0.999609
show	O	O:0.991237
multiple	O	O:0.999502
lines	O	O:0.996766
of	O	O:0.999730
data	O	O:0.994762
in	O	O:0.999861
the	O	O:0.999471
plot	O	O:0.966098
,	O	O:0.999567
I	O	O:0.999839
want	O	O:0.999089
to	O	O:0.999391
show	O	O:0.999489
up	O	O:0.995762
to	O	O:0.999362
10	O	O:0.999756
lines	O	O:0.977946
in	O	O:0.998730
my	O	O:0.992758
graph	O	O:0.989511
but	O	O:0.995909
I'm	O	O:0.997805
getting	O	O:0.998338
a	O	O:0.999050
lot	O	O:0.978882
of	O	O:0.997985
errors	O	O:0.991412
when	O	O:0.998107
I	O	O:0.998691
try	O	O:0.999618
to	O	O:0.995985
add	O	O:0.999924
them	O	O:0.979537
.	O	O:0.993571
	
That	O	O:0.974813
is	O	O:0.997772
correct	O	O:0.989259
,	O	O:0.998441
it	O	O:0.998416
draws	O	O:0.998440
a	O	O:0.999417
line	O	O:0.987664
from	O	O:0.998799
the	O	O:0.999590
lower	O	O:0.994769
left	O	O:0.968828
to	O	O:0.998383
the	O	O:0.999970
upper	O	O:0.995552
right	O	O:0.996756
of	O	O:0.999593
the	O	O:0.999501
plot	O	O:0.991062
as	O	O:0.999155
stated	O	O:0.953155
in	O	O:0.999237
my	O	O:0.978743
answer	O	O:0.972509
.	O	O:0.990759
	
The	O	O:0.984070
problem	O	O:0.975287
arises	O	O:0.997261
when	O	O:0.997144
I	O	O:0.998669
select	O	O:0.998353
a	O	O:0.998430
subset	O	O:0.886551
of	O	O:0.999740
the	O	O:0.999676
data	O	O:0.999618
based	O	O:0.995418
on	O	O:0.999578
the	O	O:0.998537
time	O	O:0.995654
,	O	O:0.997439
ie	O	O:0.995607
:	O	O:0.995764
#CODE	O	O:0.996247
	
Do	O	O:0.996820
you	O	O:0.999406
have	O	O:0.999693
any	O	O:0.999529
suggestion	O	O:0.996278
to	O	O:0.997625
fix	O	O:0.998965
this	O	O:0.994534
?	O	O:0.997543
	
I	O	O:0.994639
think	O	O:0.996642
I'm	O	O:0.994567
going	O	O:0.990640
to	O	O:0.999178
start	O	O:0.999903
from	O	O:0.998487
scratch	O	O:0.993598
so	O	O:0.999837
that	O	O:0.997159
I	O	O:0.999846
know	O	O:0.998646
what	O	O:0.977408
I'm	O	O:0.995268
doing	O	O:0.997306
but	O	O:0.997570
I	O	O:0.998564
need	O	O:0.999632
help	O	O:0.960069
on	O	O:0.999706
where	O	O:0.998701
to	O	O:0.998934
start	O	O:0.999157
.	O	O:0.995716
	
It	O	O:0.979367
was	O	O:0.996355
a	O	O:0.999310
simplified	O	O:0.939048
example	O	O:0.996578
since	O	O:0.996421
I	O	O:0.998527
didn't	O	O:0.999518
have	O	O:0.999314
your	O	O:0.999721
code	O	O:0.990969
at	O	O:0.999478
the	O	O:0.998228
time	O	O:0.965871
.	O	O:0.990480
	
The	O	O:0.982545
question	O	O:0.964655
does	O	O:0.994376
not	O	O:0.998590
define	O	O:0.993272
matrix	O	O:0.998704
very	O	O:0.972412
well	O	O:0.991604
:	O	O:0.997167
"	O	O:0.999140
matrix	O	O:0.999198
of	O	O:0.999045
values	O	O:0.940770
"	O	O:0.998910
,	O	O:0.996650
"	O	O:0.998396
matrix	O	O:0.996829
of	O	O:0.999562
data	O	O:0.970391
"	O	O:0.998366
.	O	O:0.987712
	
The	O	O:0.987702
algorithm	O	O:0.988839
returns	O	O:0.995059
an	O	O:0.998668
array	O	O:0.998678
of	O	O:0.998236
ranges	O	O:0.989218
,	O	O:0.999924
then	O	O:0.999240
I	O	O:0.999844
create	O	O:0.998271
several	O	O:0.996953
histograms	O	O:0.986959
for	O	O:0.998762
the	O	O:0.999248
same	O	O:0.987233
dataset	O	O:0.996506
using	O	O:0.999632
different	O	O:0.987824
ranges	O	O:0.822872
.	O	O:0.976524
	
(	O	O:0.989510
Since	O	O:0.997820
all	O	O:0.985211
you're	O	O:0.996487
saying	O	O:0.996824
now	O	O:0.992545
is	O	O:0.998194
"	O	O:0.996157
I	O	O:0.997969
have	O	O:0.997608
this	O	O:0.961142
equation	O	O:0.985142
and	O	O:0.998943
it	O	O:0.998354
doesn't	O	O:0.997625
work	O	O:0.991651
"	O	O:0.999815
,	O	O:0.999167
we	O	O:0.998619
don't	O	O:0.999404
have	O	O:0.997787
enough	O	O:0.998705
info	O	O:0.996947
to	O	O:0.991244
answer	O	O:0.999776
this	O	O:0.988476
and	O	O:0.997783
it's	O	O:0.996368
not	O	O:0.999227
a	O	O:0.999391
question	O	O:0.986066
that	O	O:0.997264
can	O	O:0.999683
be	O	O:0.999845
answered	O	O:0.995643
.	O	O:0.987403
)	O	O:0.996937
	
This	O	O:0.958911
method	O	O:0.997660
generalizes	O	O:0.991712
to	O	O:0.999715
any	O	O:0.999875
number	O	O:0.998752
of	O	O:0.999512
rows	O	O:0.973497
(	O	O:0.999499
or	O	O:0.999886
dimensions	O	O:0.986220
)	O	O:0.998867
.	O	O:0.991977
	
Another	O	O:0.991269
possibility	O	O:0.984024
would	O	O:0.998483
be	O	O:0.999576
to	O	O:0.999926
put	O	O:0.998811
a	O	O:0.998543
tuple	O	O:0.972115
into	O	O:0.944715
flist	O	B-API:0.551802
:	O	O:0.990381
#CODE	O	O:0.987330
	
I	O	O:0.995538
downloaded	O	O:0.990425
the	O	O:0.995902
100meg	O	O:0.964550
datafiles	O	O:0.998914
from	O	O:0.998253
the	O	O:0.999512
full	O	O:0.972497
Basemap	O	O:0.982515
distro	O	O:0.983211
.	O	O:0.989415
	
Do	O	O:0.996745
you	O	O:0.999375
have	O	O:0.999479
any	O	O:0.999824
other	O	O:0.998829
ideas	O	O:0.996334
to	O	O:0.995328
handle	O	O:0.999339
that	O	O:0.995807
?	O	O:0.998710
	
This	O	O:0.988239
controls	O	O:0.993931
whether	O	O:0.998541
the	O	O:0.999778
data	O	O:0.997525
limits	O	O:0.993661
or	O	O:0.999734
the	O	O:0.999550
bounding	O	O:0.995465
rectangle's	O	O:0.962333
shape	O	O:0.997707
are	O	O:0.999214
changed	O	O:0.996163
when	O	O:0.993225
the	O	O:0.997824
aspect	O	O:0.911633
/	O	O:0.990636
limits	O	O:0.957368
are	O	O:0.996878
changed	O	O:0.972184
.	O	O:0.985679
	
Could	O	O:0.987833
you	O	O:0.998645
be	O	O:0.999826
able	O	O:0.999039
to	O	O:0.999653
give	O	O:0.999339
me	O	O:0.998976
some	O	O:0.995734
hints	O	O:0.996591
how	O	O:0.997962
to	O	O:0.998721
solve	O	O:0.999465
this	O	O:0.995131
?	O	O:0.997862
	
like	O	O:0.993164
you	O	O:0.999659
could	O	O:0.999202
in	O	O:0.999824
MATLAB	O	O:0.997949
,	O	O:0.999744
as	O	O:0.999717
well	O	O:0.996205
as	O	O:0.999594
having	O	O:0.982629
all	O	O:0.998455
the	O	O:0.998946
features	O	O:0.951104
of	O	O:0.993227
	
I	O	O:0.994354
tried	O	O:0.996706
setting	O	O:0.976232
all	O	O:0.988051
x-values	O	O:0.964171
to	O	O:0.994469
'	O	O:0.999869
1	O	O:0.964062
'	O	O:0.989169
,	O	O:0.997959
but	O	O:0.997708
it	O	O:0.998331
turns	O	O:0.998170
out	O	O:0.995847
as	O	O:0.999518
kind	O	O:0.990929
of	O	O:0.999575
a	O	O:0.995561
2d-diagram	O	O:0.929289
,	O	O:0.996984
anyway	O	O:0.971602
:	O	O:0.996228
	
This	O	O:0.971837
is	O	O:0.999271
the	O	O:0.998491
hacky	O	O:0.982906
way	O	O:0.996113
to	O	O:0.997218
fix	O	O:0.999738
your	O	O:0.997731
aspect	O	O:0.947112
ratio	O	O:0.997666
on	O	O:0.995803
the	O	O:0.996919
image	O	O:0.980072
.	O	O:0.988260
	
Is	O	O:0.989004
Anaconda's	O	O:0.996471
main	O	O:0.991115
advantage	O	O:0.999337
then	O	O:0.998424
that	O	O:0.999655
one	O	O:0.999516
has	O	O:0.998862
essentially	O	O:0.998168
all	O	O:0.999307
one	O	O:0.998399
would	O	O:0.999502
need	O	O:0.999607
,	O	O:0.999940
without	O	O:0.999327
needing	O	O:0.973473
continuously	O	O:0.930008
to	O	O:0.993962
pip	O	O:0.999469
this	O	O:0.989452
and	O	O:0.999563
pip	O	O:0.996712
that	O	O:0.974830
?	O	O:0.996367
	
Just	O	O:0.989347
for	O	O:0.999547
the	O	O:0.998339
record	O	O:0.753001
,	O	O:0.998508
there's	O	O:0.997214
no	O	O:0.999552
need	O	O:0.997843
to	O	O:0.999870
jump	O	O:0.999216
through	O	O:0.998267
all	O	O:0.998493
of	O	O:0.999719
those	O	O:0.996322
hoops	O	O:0.996656
with	O	O:0.990939
PIL	O	O:0.964835
.	O	O:0.990467
	
I'll	O	O:0.990864
play	O	O:0.970922
with	O	O:0.998046
Dermen's	O	O:0.991207
link	O	O:0.998424
as	O	O:0.999431
well	O	O:0.990366
,	O	O:0.999679
but	O	O:0.998264
at	O	O:0.999327
the	O	O:0.998682
moment	O	O:0.998241
the	O	O:0.999450
most	O	O:0.981363
pressing	O	O:0.991919
problem	O	O:0.888857
is	O	O:0.998487
not	O	O:0.987782
having	O	O:0.998517
the	O	O:0.999403
data	O	O:0.991495
points	O	O:0.996949
be	O	O:0.999438
all	O	O:0.999814
squished	O	O:0.987415
together	O	O:0.978666
because	O	O:0.998331
the	O	O:0.998476
spacing	O	O:0.990980
between	O	O:0.996037
the	O	O:0.998427
ticks	O	O:0.896008
is	O	O:0.997791
very	O	O:0.981402
very	O	O:0.991605
small	O	O:0.962762
.	O	O:0.963785
	
This	O	O:0.982358
is	O	O:0.997685
perfect	O	O:0.973927
,	O	O:0.997588
though	O	O:0.971590
I'm	O	O:0.998072
not	O	O:0.999686
sure	O	O:0.998750
exactly	O	O:0.999309
where	O	O:0.997597
I	O	O:0.999233
went	O	O:0.988563
wrong	O	O:0.982318
...	O	O:0.978761
	
you	O	O:0.999025
can	O	O:0.999780
manually	O	O:0.999902
set	O	O:0.998402
the	O	O:0.999805
size	O	O:0.992258
of	O	O:0.998319
the	O	O:0.997784
colorbar	O	O:0.996667
using	O	O:0.968345
:	O	O:0.974228
#CODE	O	O:0.985375
	
Plotting	O	O:0.945938
values	O	O:0.951081
From	O	O:0.998323
a	O	O:0.998760
Array	O	O:0.971904
in	O	O:0.996439
Real	O	O:0.998140
time	O	O:0.997083
using	O	O:0.999219
matplotlib	O	O:0.929361
in	O	O:0.983129
Python	O	O:0.949391
	
I	O	O:0.996595
will	O	O:0.999277
also	O	O:0.995857
gladly	O	O:0.997917
accept	O	O:0.988649
any	O	O:0.997135
examples	O	O:0.994165
where	O	O:0.989586
someone	O	O:0.991453
has	O	O:0.999385
built	O	O:0.982805
up	O	O:0.989592
any	O	O:0.996719
other	O	O:0.983557
distribution	O	O:0.979406
.	O	O:0.981457
	
How	O	O:0.994780
sure	O	O:0.991036
are	O	O:0.999290
you	O	O:0.999679
that	O	O:0.999457
the	O	O:0.999848
code	O	O:0.951693
*	O	O:0.999464
runs	O	O:0.987366
at	O	O:0.998794
all*	O	O:0.796812
?	O	O:0.993262
	
I	O	O:0.993916
was	O	O:0.992759
temporarily	O	O:0.950534
disappeared	O	O:0.989539
at	O	O:0.999086
my	O	O:0.995597
day	O	O:0.994215
job	O	O:0.985139
!	O	O:0.982802
	
In	O	O:0.993297
addition	O	O:0.998158
,	O	O:0.999367
you'll	O	O:0.997745
find	O	O:0.996581
that	O	O:0.998888
`	O	O:0.999806
pylab	O	O:0.804540
`	O	O:0.998480
leaves	O	O:0.982473
a	O	O:0.998987
generous	O	O:0.890434
,	O	O:0.999386
often	O	O:0.989793
undesirable	O	O:0.991966
,	O	O:0.998968
whitespace	O	O:0.988059
around	O	O:0.984626
the	O	O:0.994584
image	O	O:0.965257
.	O	O:0.986219
	
Force	O	O:0.988175
plot	O	O:0.953196
to	O	O:0.999560
have	O	O:0.999959
a	O	O:0.999537
special	O	O:0.993220
size	O	O:0.996857
or	O	O:0.998448
to	O	O:0.999340
increase	O	O:0.999267
the	O	O:0.998246
distance	O	O:0.991787
between	O	O:0.994039
subplots	O	O:0.975605
	
If	O	O:0.996923
you	O	O:0.999251
do	O	O:0.999207
all	O	O:0.999787
the	O	O:0.999512
data	O	O:0.998534
processing	O	O:0.997664
beforehand	O	O:0.994376
,	O	O:0.999504
and	O	O:0.998888
provide	O	O:0.974158
the	O	O:0.950581
(	O	O:0.994084
nearly	O	O:0.966148
)	O	O:0.999385
finished	O	O:0.948135
product	O	O:0.987498
.	O	O:0.979182
	
To	O	O:0.994181
make	O	O:0.991073
it	O	O:0.999557
clearer	O	O:0.990509
I	O	O:0.999826
want	O	O:0.999316
to	O	O:0.994018
get	O	O:0.999870
the	O	O:0.998305
x-axis	O	O:0.987371
and	O	O:0.999270
the	O	O:0.998716
y-axis	O	O:0.971439
range	O	O:0.998881
so	O	O:0.999533
as	O	O:0.999394
to	O	O:0.999271
find	O	O:0.999627
the	O	O:0.999689
mid	O	O:0.997243
point	O	O:0.996448
of	O	O:0.998557
the	O	O:0.995076
grid	O	O:0.988313
.	O	O:0.989380
	
and	O	O:0.997121
you	O	O:0.996223
might	O	O:0.999470
want	O	O:0.999479
to	O	O:0.999786
add	O	O:0.999855
the	O	O:0.999404
ax	O	O:0.984511
to	O	O:0.998825
the	O	O:0.999278
colorbar	O	O:0.989912
.	O	O:0.990726
	
The	O	O:0.988157
question	O	O:0.783410
is	O	O:0.991891
:	O	O:0.989269
Why	O	O:0.999142
does	O	O:0.997462
the	O	O:0.998665
`	O	O:0.999048
matplotlibrc	O	O:0.647860
`	O	O:0.999829
file	O	O:0.992709
have	O	O:0.999473
an	O	O:0.999515
invalid	O	O:0.940105
backend	O	O:0.936099
(	O	O:0.988234
`	O	O:0.999480
pyside	O	O:0.978105
`)	O	O:0.999891
value	O	O:0.991869
in	O	O:0.998593
the	O	O:0.999805
first	O	O:0.996224
place	O	O:0.989595
?	O	O:0.997755
	
Is	O	O:0.997484
that	O	O:0.999242
a	O	O:0.997818
bug	O	O:0.944132
(	O	O:0.994516
could	O	O:0.998018
not	O	O:0.999825
find	O	O:0.999216
any	O	O:0.997869
reports	O	O:0.985741
to	O	O:0.999661
this	O	O:0.999255
)	O	O:0.999652
,	O	O:0.999860
a	O	O:0.997172
feature	O	O:0.732495
(	O	O:0.998473
?!	O	O:0.999454
)	O	O:0.998491
or	O	O:0.996820
	
I'm	O	O:0.991384
not	O	O:0.998824
sure	O	O:0.998398
how	O	O:0.998775
you	O	O:0.999738
want	O	O:0.999650
to	O	O:0.999684
convert	O	O:0.999784
your	O	O:0.999199
data	O	O:0.992407
,	O	O:0.999685
but	O	O:0.999661
if	O	O:0.999293
you	O	O:0.999841
have	O	O:0.999224
irregular	O	O:0.999585
line	O	O:0.997786
lengths	O	O:0.989258
,	O	O:0.999457
the	O	O:0.999280
easiest	O	O:0.982745
way	O	O:0.994670
would	O	O:0.998968
be	O	O:0.999933
something	O	O:0.999794
like	O	O:0.990060
this	O	O:0.983925
:	O	O:0.996604
#CODE	O	O:0.996137
	
No	O	O:0.992588
worries	O	O:0.991184
,	O	O:0.998413
I	O	O:0.997101
was	O	O:0.996900
coming	O	O:0.933968
at	O	O:0.999749
this	O	O:0.997207
from	O	O:0.999544
a	O	O:0.996435
radio	O	O:0.806310
perspective	O	O:0.993680
not	O	O:0.998281
a	O	O:0.999650
gamma-ray	O	O:0.801417
one	O	O:0.996924
.	O	O:0.993091
	
How	O	O:0.991628
can	O	O:0.997615
I	O	O:0.999879
fix	O	O:0.997498
this	O	O:0.974701
?	O	O:0.996682
	
Is	O	O:0.991407
not	O	O:0.997764
there	O	O:0.999544
any	O	O:0.998415
wx	O	O:0.995583
example	O	O:0.984564
in	O	O:0.999747
your	O	O:0.995784
iPython	O	O:0.986060
distribution	O	O:0.992567
?	O	O:0.992891
	
Hmm	O	O:0.986887
,	O	O:0.998836
sorry	O	O:0.988577
,	O	O:0.999730
maybe	O	O:0.996815
I	O	O:0.998606
wasn't	O	O:0.996991
clear	O	O:0.981920
-	O	O:0.998731
colours	O	O:0.808784
[	O	O:0.998068
li	O	O:0.986256
,	O	O:0.996817
:]	O	O:0.994955
only	O	O:0.987138
substitutes	O	O:0.996812
the	O	O:0.998585
tuple	O	O:0.907941
with	O	O:0.997339
index	O	O:0.997830
"	O	O:0.999483
li	O	O:0.902020
"	O	O:0.993970
,	O	O:0.993788
but	O	O:0.998644
I	O	O:0.999599
need	O	O:0.999337
to	O	O:0.998904
substitute	O	O:0.999934
all	O	O:0.998886
tuples	O	O:0.996663
with	O	O:0.999040
indices	O	O:0.986373
in	O	O:0.999557
this	O	O:0.997965
list	O	O:0.996808
called	O	O:0.991379
"	O	O:0.998697
indices	O	O:0.761268
"	O	O:0.955063
(	O	O:0.988417
and	O	O:0.999005
li=length	O	O:0.925643
(	O	O:0.996313
indices	O	O:0.989705
))	O	O:0.902050
	
I've	O	O:0.992382
also	O	O:0.988000
tried	O	O:0.994187
installing	O	O:0.981917
1.3.0	O	O:0.952660
through	O	O:0.991259
pip	O	O:0.992999
as	O	O:0.999285
well	O	O:0.989574
as	O	O:0.998328
source	O	O:0.824391
.	O	O:0.974609
	
Any	O	O:0.991785
help	O	O:0.937376
would	O	O:0.998394
be	O	O:0.999456
much	O	O:0.992761
appreciated	O	O:0.937762
.	O	O:0.985178
	
Maybe	O	O:0.996762
you	O	O:0.999674
need	O	O:0.999568
to	O	O:0.999744
rescale	O	O:0.999516
with	O	O:0.995982
1	O	O:0.977049
/	O	O:0.998673
30000	O	O:0.988429
to	O	O:0.999417
be	O	O:0.999890
at	O	O:0.999717
the	O	O:0.998664
right	O	O:0.998441
place	O	O:0.993728
on	O	O:0.999940
your	O	O:0.993253
graph	O	O:0.994085
.	O	O:0.993688
	
Changing	O	O:0.992179
this	O	O:0.990158
would	O	O:0.997194
require	O	O:0.996996
low-level	O	O:0.973458
tweaking	O	O:0.900604
.	O	O:0.962901
	
I've	O	O:0.995849
also	O	O:0.991496
refined	O	O:0.999645
your	O	O:0.994801
approach	O	O:0.996548
to	O	O:0.999357
allow	O	O:0.998787
zooming	O	O:0.991081
in	O	O:0.998036
over	O	O:0.997736
a	O	O:0.998674
section	O	O:0.979962
of	O	O:0.999448
the	O	O:0.999467
data	O	O:0.995693
and	O	O:0.999900
to	O	O:0.999708
produce	O	O:0.999836
better	O	O:0.991969
results	O	O:0.998704
at	O	O:0.999673
the	O	O:0.997611
borders	O	O:0.931522
.	O	O:0.982548
	
Any	O	O:0.992136
help	O	O:0.924280
would	O	O:0.998329
be	O	O:0.998889
appreciated	O	O:0.989802
.	O	O:0.974123
	
Can	O	O:0.981436
someone	O	O:0.996108
help	O	O:0.989300
me	O	O:0.999241
sort	O	O:0.976039
out	O	O:0.998919
the	O	O:0.999245
issue	O	O:0.997315
resulting	O	O:0.996736
to	O	O:0.999607
such	O	O:0.999939
an	O	O:0.998950
error	O	O:0.950618
.	O	O:0.986613
	
Is	O	O:0.994918
there	O	O:0.998513
any	O	O:0.997396
way	O	O:0.995374
,	O	O:0.999228
I	O	O:0.998562
can	O	O:0.999740
save	O	O:0.997202
a	O	O:0.999503
magnified	O	O:0.963771
version	O	O:0.993346
for	O	O:0.997818
proper	O	O:0.994372
visualisation	O	O:0.980111
later	O	O:0.982785
?	O	O:0.995252
	
So	O	O:0.989610
let's	O	O:0.998260
say	O	O:0.998215
I	O	O:0.999823
only	O	O:0.999365
need	O	O:0.990442
`	O	O:0.998687
4402	O	O:0.957790
x	O	O:0.990907
4410	O	O:0.811612
`	O	O:0.997174
but	O	O:0.992883
I	O	O:0.999437
don't	O	O:0.999388
know	O	O:0.915770
the	O	O:0.998953
index	O	O:0.989807
.	O	O:0.990202
	
I	O	O:0.992286
had	O	O:0.996172
to	O	O:0.993394
upgrade	O	O:0.997299
to	O	O:0.999172
most	O	O:0.999101
recent	O	O:0.997275
MPL	O	O:0.990478
to	O	O:0.998901
find	O	O:0.999755
the	O	O:0.997922
subplots	O	O:0.988474
method	O	O:0.998864
of	O	O:0.998805
pylab	O	O:0.972237
.	O	O:0.991569
	
averaging	O	O:0.995118
elements	O	O:0.981962
in	O	O:0.999746
a	O	O:0.998975
matrix	O	O:0.993785
with	O	O:0.998378
the	O	O:0.999857
corresponding	O	O:0.996849
elements	O	O:0.992966
in	O	O:0.999366
another	O	O:0.991107
matrix	O	O:0.985233
(	O	O:0.993519
in	O	O:0.999217
python	O	O:0.992652
)	O	O:0.998157
	
We	O	O:0.997403
consider	O	O:0.994201
now	O	O:0.998605
that	O	O:0.998349
`	O	O:0.998863
--	O	O:0.998204
pylab	O	O:0.979985
`	O	O:0.996620
was	O	O:0.985421
a	O	O:0.998604
mistake	O	O:0.883911
,	O	O:0.995601
but	O	O:0.998924
that	O	O:0.995368
it	O	O:0.999055
was	O	O:0.998250
still	O	O:0.998875
really	O	O:0.998354
usefull	O	O:0.989946
at	O	O:0.998764
the	O	O:0.999571
beginning	O	O:0.989103
of	O	O:0.992147
IPython	O	O:0.921442
.	O	O:0.993803
	
Is	O	O:0.996045
there	O	O:0.999438
a	O	O:0.999190
way	O	O:0.990762
to	O	O:0.997931
increase	O	O:0.998649
the	O	O:0.996516
thickness	O	O:0.983069
and	O	O:0.999716
size	O	O:0.999292
of	O	O:0.998498
ticks	O	O:0.968854
in	O	O:0.999542
matplotlib	O	O:0.994430
without	O	O:0.992554
having	O	O:0.978840
to	O	O:0.993887
write	O	O:0.999705
a	O	O:0.999331
long	O	O:0.994030
piece	O	O:0.998893
of	O	O:0.999285
code	O	O:0.993157
like	O	O:0.998673
this	O	O:0.981965
:	O	O:0.996758
#CODE	O	O:0.995850
	
Or	O	O:0.996739
you	O	O:0.999114
could	O	O:0.999812
define	O	O:0.999348
column	O	O:0.997800
'	O	O:0.998961
date_obj	O	O:0.926784
'	O	O:0.998330
as	O	O:0.997364
the	O	O:0.999195
index	O	O:0.998547
of	O	O:0.999908
your	O	O:0.998072
data	O	O:0.982253
:	O	O:0.997787
#CODE	O	O:0.997095
	
Am	O	O:0.993491
I	O	O:0.998643
missing	O	O:0.996386
something	O	O:0.996606
,	O	O:0.999323
or	O	O:0.999884
have	O	O:0.997370
you	O	O:0.999968
left	O	O:0.998728
out	O	O:0.997555
all	O	O:0.999232
the	O	O:0.999635
plot	O	O:0.831753
commands	O	O:0.991624
?	O	O:0.996037
	
This	O	O:0.974614
is	O	O:0.998781
my	O	O:0.998662
first	O	O:0.996540
attempt	O	O:0.976063
at	O	O:0.997851
python	O	O:0.994610
,	O	O:0.998444
however	O	O:0.987131
,	O	O:0.998280
and	O	O:0.999527
am	O	O:0.998798
still	O	O:0.996143
finding	O	O:0.995117
out	O	O:0.981078
how	O	O:0.995483
it	O	O:0.996066
works	O	O:0.998793
,	O	O:0.999680
so	O	O:0.998116
please	O	O:0.997334
put	O	O:0.993536
me	O	O:0.994464
right	O	O:0.995985
if	O	O:0.999462
this	O	O:0.998853
idea	O	O:0.950544
is	O	O:0.998971
fundamentally	O	O:0.965133
flawed	O	O:0.953601
!	O	O:0.959191
	
Finally	O	O:0.987734
,	O	O:0.998381
here's	O	O:0.998363
a	O	O:0.997813
sample	O	O:0.993681
portion	O	O:0.998604
of	O	O:0.999189
an	O	O:0.991743
old	O	O:0.966401
(	O	O:0.997313
bad	O	O:0.989798
)	O	O:0.999519
data	O	O:0.987379
file	O	O:0.958627
:	O	O:0.997602
#CODE	O	O:0.996875
	
If	O	O:0.996992
you	O	O:0.999418
you	O	O:0.999887
have	O	O:0.999867
any	O	O:0.999651
questions	O	O:0.996159
,	O	O:0.999243
please	O	O:0.992850
leave	O	O:0.995845
a	O	O:0.993785
comment	O	O:0.861120
.	O	O:0.989144
	
Where	O	O:0.995873
exactly	O	O:0.984618
is	O	O:0.999667
the	O	O:0.990195
problem	O	O:0.966835
?	O	O:0.990508
	
The	O	O:0.997863
last	O	O:0.991699
dutch	O	O:0.979167
sentence	O	O:0.995142
does	O	O:0.995853
mean	O	O:0.999511
something	O	O:0.999210
like	O	O:0.977799
:	O	O:0.998758
The	O	O:0.998566
system	O	O:0.995063
can't	O	O:0.999042
find	O	O:0.997368
the	O	O:0.999663
specified	O	O:0.989095
file	O	O:0.975871
.	O	O:0.991554
	
This	O	O:0.977308
is	O	O:0.999690
nice	O	O:0.983129
of	O	O:0.999844
them	O	O:0.979673
,	O	O:0.999513
as	O	O:0.998282
not	O	O:0.993676
all	O	O:0.999712
Windows	O	O:0.997117
users	O	O:0.991728
have	O	O:0.996898
C++	O	O:0.998135
compilers	O	O:0.994135
available	O	O:0.968851
.	O	O:0.992334
	
The	O	O:0.998494
root	O	O:0.990308
of	O	O:0.999644
the	O	O:0.996630
problem	O	O:0.966157
is	O	O:0.998473
that	O	O:0.991929
matplotlib	O	O:0.998259
tries	O	O:0.993904
to	O	O:0.997893
put	O	O:0.998109
all	O	O:0.999775
bins	O	O:0.990485
on	O	O:0.999522
the	O	O:0.999422
plot	O	O:0.915956
.	O	O:0.993417
	
This	O	O:0.982022
question	O	O:0.980058
has	O	O:0.996920
probably	O	O:0.998388
a	O	O:0.997197
totally	O	O:0.943033
simple	O	O:0.971056
solution	O	O:0.980316
but	O	O:0.995888
I	O	O:0.999261
just	O	O:0.997572
can't	O	O:0.997388
find	O	O:0.983667
it	O	O:0.999282
.	O	O:0.996329
	
Any	O	O:0.985142
suggestions	O	O:0.979654
would	O	O:0.998231
be	O	O:0.998659
awesome	O	O:0.989914
.	O	O:0.970737
	
In	O	O:0.984496
non-interactive	O	O:0.927130
mode	O	O:0.995442
,	O	O:0.998710
display	O	O:0.990671
all	O	O:0.995402
figures	O	O:0.990375
and	O	O:0.999701
block	O	O:0.998187
until	O	O:0.977093
the	O	O:0.988495
	
This	O	O:0.973830
is	O	O:0.998663
all	O	O:0.998442
very	O	O:0.993616
new	O	O:0.994102
to	O	O:0.994595
me	O	O:0.994324
.	O	O:0.992417
	
1	O	O:0.943453
)	O	O:0.998096
Let's	O	O:0.996488
assume	O	O:0.997763
I	O	O:0.999842
take	O	O:0.989752
1	O	O:0.984983
sample	O	O:0.965544
`	O	O:0.997897
x	O	O:0.922672
=	O	O:0.993868
[	O	O:0.997220
1	O	O:0.994534
,	O	O:0.998403
2	O	O:0.994294
]`	O	O:0.997488
from	O	O:0.997639
the	O	O:0.998186
dataset	O	O:0.980311
	
I	O	O:0.998502
have	O	O:0.999280
a	O	O:0.998868
4d	O	O:0.929726
or	O	O:0.998043
higher	O	O:0.984855
ellipsoid	O	O:0.993266
in	O	O:0.992675
matrix	O	O:0.995420
form	O	O:0.987858
(	O	O:0.997784
which	O	O:0.999314
form	O	O:0.994086
is	O	O:0.999198
important	O	O:0.980142
)	O	O:0.997326
.	O	O:0.959656
	
I	O	O:0.989822
didn't	O	O:0.997109
look	O	O:0.983959
into	O	O:0.990967
the	O	O:0.993105
documentation	O	O:0.989313
,	O	O:0.999023
simply	O	O:0.999143
used	O	O:0.996773
the	O	O:0.997963
dot	O	O:0.908604
completion	O	O:0.994383
on	O	O:0.998750
the	O	O:0.998187
handle	O	O:0.956208
	
Here	O	O:0.930916
is	O	O:0.999853
your	O	O:0.994042
example	O	O:0.992688
with	O	O:0.998975
those	O	O:0.997063
modifications	O	O:0.990981
and	O	O:0.999749
also	O	O:0.999187
with	O	O:0.999780
a	O	O:0.999411
single	O	O:0.984483
layout	O	O:0.998729
computed	O	O:0.984000
at	O	O:0.998764
the	O	O:0.999403
beginning	O	O:0.993582
that	O	O:0.988458
is	O	O:0.999372
reused	O	O:0.961105
in	O	O:0.998149
the	O	O:0.995090
loop	O	O:0.970280
.	O	O:0.989041
	
I	O	O:0.995181
now	O	O:0.997349
understand	O	O:0.994196
that	O	O:0.997286
I	O	O:0.999772
need	O	O:0.999806
to	O	O:0.999448
generate	O	O:0.999450
all	O	O:0.999796
the	O	O:0.999806
triplets	O	O:0.988752
across	O	O:0.993242
the	O	O:0.999710
three	O	O:0.989655
tables	O	O:0.813033
(	O	O:0.999087
to	O	O:0.999750
cover	O	O:0.998899
all	O	O:0.999682
the	O	O:0.999572
combinations	O	O:0.977612
)	O	O:0.997013
.	O	O:0.995370
	
i	O	O:0.982971
dont	O	O:0.998647
know	O	O:0.996161
how	O	O:0.998990
array	O	O:0.986786
concatenation	O	O:0.994409
works	O	O:0.997077
on	O	O:0.999449
numpy	O	O:0.987175
arrays	O	O:0.981252
	
I	O	O:0.990751
can't	O	O:0.999214
seem	O	O:0.991534
to	O	O:0.999654
get	O	O:0.999851
my	O	O:0.998448
head	O	O:0.989295
around	O	O:0.993993
why	O	O:0.995812
it	O	O:0.997396
doesn't	O	O:0.999259
show	O	O:0.995786
the	O	O:0.999681
value	O	O:0.996508
128	O	O:0.988367
as	O	O:0.999595
grey	O	O:0.985511
with	O	O:0.998359
I	O	O:0.999786
have	O	O:0.999011
chosen	O	O:0.976200
the	O	O:0.999538
cmap	O	O:0.763780
to	O	O:0.998420
be	O	O:0.999619
gray-scale	O	O:0.983906
.	O	O:0.959243
	
what	O	O:0.993607
do	O	O:0.994541
you	O	O:0.999826
mean	O	O:0.998686
with	O	O:0.997721
%s	O	O:0.983688
?	O	O:0.997567
	
If	O	O:0.996736
that	O	O:0.989777
isn't	O	O:0.999816
what	O	O:0.998311
you	O	O:0.999672
want	O	O:0.999243
,	O	O:0.999803
I	O	O:0.999652
would	O	O:0.999388
recommend	O	O:0.995465
doing	O	O:0.999803
something	O	O:0.998941
where	O	O:0.997104
you	O	O:0.999633
create	O	O:0.998681
a	O	O:0.999290
PNG	O	O:0.990531
image	O	O:0.996940
of	O	O:0.999383
what	O	O:0.994962
you	O	O:0.999655
do	O	O:0.999525
want	O	O:0.999165
,	O	O:0.999631
create	O	O:0.997419
a	O	O:0.997115
child	O	O:0.864867
QLabel	O	O:0.997602
,	O	O:0.998251
and	O	O:0.999905
move	O	O:0.978291
the	O	O:0.997636
child	O	O:0.926612
widget	O	O:0.992992
around	O	O:0.964576
in	O	O:0.999701
your	O	O:0.995628
mouseMoveEvent	O	O:0.900825
.	O	O:0.994365
	
Any	O	O:0.970927
suggestion	O	O:0.943105
is	O	O:0.991836
welcome	O	O:0.788120
.	O	O:0.988588
	
I	O	O:0.983742
was	O	O:0.995833
trying	O	O:0.990284
to	O	O:0.999332
add	O	O:0.999590
a	O	O:0.998562
custom	O	O:0.626667
widget	O	O:0.997857
into	O	O:0.993308
qtdesginer	O	O:0.985109
using	O	O:0.997900
following	O	O:0.960802
code	O	O:0.910787
#CODE	O	O:0.988004
	
source	O	O:0.809511
:	O	O:0.981673
#URL	O	O:0.981336
	
As	O	O:0.974097
has	O	O:0.997083
been	O	O:0.993610
pointed	O	O:0.996700
out	O	O:0.996753
above	O	O:0.983589
,	O	O:0.999840
this	O	O:0.998868
will	O	O:0.998095
get	O	O:0.999901
more	O	O:0.998972
complicated	O	O:0.997827
if	O	O:0.998876
the	O	O:0.999580
both	O	O:0.992562
the	O	O:0.999209
y	O	O:0.968613
graphs	O	O:0.993086
were	O	O:0.996337
defined	O	O:0.992411
at	O	O:0.998190
different	O	O:0.993879
x	O	O:0.971031
points	O	O:0.942035
.	O	O:0.988285
	
@USER	O	O:0.986535
Simoes	O	O:0.942848
,	O	O:0.999334
what	O	O:0.990955
happens	O	O:0.988330
is	O	O:0.999426
you	O	O:0.998703
have	O	O:0.999142
Nan's	O	O:0.995692
in	O	O:0.999619
various	O	O:0.996249
places	O	O:0.995322
in	O	O:0.999843
your	O	O:0.995421
array	O	O:0.992665
?	O	O:0.996362
	
An	O	O:0.987637
example	O	O:0.971900
script	O	O:0.998449
with	O	O:0.999350
generated	O	O:0.999784
data	O	O:0.998419
rather	O	O:0.998473
than	O	O:0.997782
the	O	O:0.999702
real	O	O:0.983347
data	O	O:0.912603
is	O	O:0.970342
:	O	O:0.994946
#CODE	O	O:0.995171
	
Also	O	O:0.991826
,	O	O:0.998963
it's	O	O:0.997172
harder	O	O:0.991259
to	O	O:0.999501
reproduce	O	O:0.998486
across	O	O:0.998848
multiple	O	O:0.991196
machines	O	O:0.967810
(	O	O:0.999209
even	O	O:0.998671
if	O	O:0.999751
that	O	O:0.999050
just	O	O:0.998928
means	O	O:0.999100
"	O	O:0.998910
my	O	O:0.994064
current	O	O:0.987329
machine	O	O:0.994498
,	O	O:0.995901
and	O	O:0.999690
the	O	O:0.999469
new	O	O:0.902087
laptop	O	O:0.993504
I'll	O	O:0.996251
have	O	O:0.997812
18	O	O:0.995658
months	O	O:0.998682
from	O	O:0.998122
now	O	O:0.997971
when	O	O:0.998522
I've	O	O:0.993035
forgotten	O	O:0.997130
how	O	O:0.994490
to	O	O:0.997003
solve	O	O:0.998694
it	O	O:0.996605
")	O	O:0.994393
.	O	O:0.987923
	
The	O	O:0.996361
words	O	O:0.881901
'	O	O:0.996758
non-default	O	O:0.865293
'	O	O:0.987619
and	O	O:0.995440
'	O	O:0.998694
normal	O	O:0.865647
'	O	O:0.997576
are	O	O:0.997686
mine	O	O:0.970061
-	O	O:0.995872
I'm	O	O:0.996213
not	O	O:0.998926
sure	O	O:0.999102
what	O	O:0.997194
they	O	O:0.999312
mean	O	O:0.996659
yet	O	O:0.979463
.	O	O:0.991064
	
(	O	O:0.996926
think	O	O:0.994739
of	O	O:0.998758
it	O	O:0.998244
as	O	O:0.999940
a	O	O:0.998247
unit	O	O:0.948605
square	O	O:0.978705
)	O	O:0.996899
	
This	O	O:0.989019
code	O	O:0.994471
uses	O	O:0.998249
a	O	O:0.997827
Counter	O	O:0.782616
to	O	O:0.999386
count	O	O:0.998683
the	O	O:0.999662
number	O	O:0.996988
of	O	O:0.999024
instances	O	O:0.997994
that	O	O:0.999161
an	O	O:0.996477
object	O	O:0.991945
occurs	O	O:0.987771
in	O	O:0.998949
an	O	O:0.994571
array	O	O:0.981844
(	O	O:0.994565
in	O	O:0.999813
this	O	O:0.998931
case	O	O:0.999600
counting	O	O:0.998141
the	O	O:0.997945
number	O	O:0.997011
of	O	O:0.998288
times	O	O:0.997248
an	O	O:0.999408
integer	O	O:0.846894
is	O	O:0.992680
in	O	O:0.998087
your	O	O:0.997121
list	O	O:0.952986
)	O	O:0.998641
.	O	O:0.985740
	
In	O	O:0.993489
the	O	O:0.998744
image	O	O:0.988631
above	O	O:0.980865
I'm	O	O:0.999226
trying	O	O:0.999320
to	O	O:0.999555
extract	O	O:0.998337
iso-value	O	O:0.990729
25	O	O:0.996194
from	O	O:0.997857
the	O	O:0.997998
scalar	O	O:0.998826
field	O	O:0.996579
of	O	O:0.997528
f	O	O:0.773761
(	O	O:0.998918
x	O	O:0.973115
,	O	O:0.998402
y	O	O:0.974533
)=	O	O:0.993536
x^3+y^3	O	O:0.900756
.	O	O:0.988339
	
Is	O	O:0.994663
there	O	O:0.997860
any	O	O:0.999025
other	O	O:0.997230
way	O	O:0.996223
I	O	O:0.997573
can	O	O:0.999745
plot	O	O:0.998656
my	O	O:0.999611
result	O	O:0.995330
continuously	O	O:0.988048
?	O	O:0.994657
	
at	O	O:0.997531
lag	O	O:0.975168
0	O	O:0.980945
,	O	O:0.999618
the	O	O:0.994331
ACF	O	O:0.808490
is	O	O:0.992696
0.5	O	O:0.614245
.	O	O:0.988297
	
The	O	O:0.994315
example	O	O:0.994553
talks	O	O:0.996902
about	O	O:0.999088
a	O	O:0.996582
fit	O	O:0.800280
to	O	O:0.998115
power	O	O:0.999264
law	O	O:0.943219
,	O	O:0.998518
but	O	O:0.997193
clearly	O	O:0.994882
a	O	O:0.999165
straight	O	O:0.974684
line	O	O:0.990233
could	O	O:0.997942
be	O	O:0.999890
done	O	O:0.998693
as	O	O:0.997885
well	O	O:0.969412
.	O	O:0.995432
	
As	O	O:0.992285
I	O	O:0.998259
see	O	O:0.998674
it	O	O:0.996666
,	O	O:0.999350
I	O	O:0.999021
could	O	O:0.997308
resolve	O	O:0.933833
and	O	O:0.999735
make	O	O:0.988875
it	O	O:0.999150
work	O	O:0.998070
if	O	O:0.999767
I	O	O:0.999696
could	O	O:0.999219
adjust	O	O:0.973317
the	O	O:0.999030
line	O	O:0.960114
spacing	O	O:0.989902
/	O	O:0.997919
height	O	O:0.995580
to	O	O:0.997765
be	O	O:0.999965
less	O	O:0.994089
than	O	O:0.996410
what	O	O:0.995696
the	O	O:0.999581
font	O	O:0.991920
requests	O	O:0.956895
.	O	O:0.994453
	
tells	O	O:0.986006
the	O	O:0.995954
writer	O	O:0.996286
to	O	O:0.997720
temporarily	O	O:0.999849
save	O	O:0.979303
the	O	O:0.998889
frames	O	O:0.983559
to	O	O:0.998889
disc	O	O:0.999553
before	O	O:0.996893
composing	O	O:0.992783
the	O	O:0.997218
movie	O	O:0.995562
,	O	O:0.999172
which	O	O:0.998845
side-steps	O	O:0.990180
the	O	O:0.997594
problem	O	O:0.973582
.	O	O:0.986764
	
Select	O	O:0.981299
starting	O	O:0.994579
color	O	O:0.992317
in	O	O:0.997936
matplotlib	O	O:0.985702
colormap	O	O:0.992172
	
I	O	O:0.997500
know	O	O:0.999002
this	O	O:0.988514
question	O	O:0.954754
is	O	O:0.999499
a	O	O:0.998312
couple	O	O:0.944736
years	O	O:0.987642
old	O	O:0.960428
,	O	O:0.997639
but	O	O:0.996867
since	O	O:0.997724
there	O	O:0.994112
is	O	O:0.999780
no	O	O:0.997594
accepted	O	O:0.984685
answer	O	O:0.984414
,	O	O:0.998155
I'll	O	O:0.993830
add	O	O:0.981861
what	O	O:0.991349
works	O	O:0.996515
for	O	O:0.998364
me	O	O:0.831437
.	O	O:0.977691
	
include	O	O:0.956130
the	O	O:0.998910
piece	O	O:0.994826
of	O	O:0.999249
the	O	O:0.999371
code	O	O:0.998145
where	O	O:0.998748
you	O	O:0.999741
make	O	O:0.999109
call	O	O:0.988744
to	O	O:0.997405
`	O	O:0.997119
mpl_connect	O	B-API:0.982898
`	O	O:0.998076
	
Is	O	O:0.994887
there	O	O:0.999229
any	O	O:0.998798
ready	O	O:0.991785
to	O	O:0.997439
use	O	O:0.998561
function	O	O:0.998605
based	O	O:0.974938
on	O	O:0.998994
python's	O	O:0.962365
matplolib	O	O:0.984471
?	O	O:0.989670
	
-2	O	O:0.815037
is	O	O:0.999336
high	O	O:0.956183
of	O	O:0.997679
indices	O	O:0.951026
range	O	O:0.998157
and	O	O:0.999749
then	O	O:0.998708
low	O	O:0.998669
of	O	O:0.998599
indices	O	O:0.954373
range	O	O:0.997375
	
Any	O	O:0.986121
insight	O	O:0.992839
you	O	O:0.998257
could	O	O:0.999226
provide	O	O:0.999391
that	O	O:0.998490
would	O	O:0.999843
help	O	O:0.998968
get	O	O:0.999675
me	O	O:0.994315
started	O	O:0.994758
the	O	O:0.998692
proper	O	O:0.979583
way	O	O:0.992645
would	O	O:0.998438
be	O	O:0.999310
fantastic	O	O:0.993611
.	O	O:0.971236
	
(	O	O:0.995230
I	O	O:0.998497
can	O	O:0.999740
open	O	O:0.997952
a	O	O:0.999868
new	O	O:0.957505
question	O	O:0.994136
if	O	O:0.991991
that's	O	O:0.999289
perferable	O	O:0.973108
)	O	O:0.998215
	
For	O	O:0.990489
example	O	O:0.980124
,	O	O:0.998606
here's	O	O:0.997882
a	O	O:0.998330
simple	O	O:0.991579
bit	O	O:0.997184
of	O	O:0.998228
code	O	O:0.994105
that	O	O:0.999872
sets	O	O:0.996756
up	O	O:0.998648
a	O	O:0.999657
list	O	O:0.953682
of	O	O:0.999243
colors	O	O:0.989668
based	O	O:0.996349
on	O	O:0.999063
whether	O	O:0.996488
the	O	O:0.999624
data	O	O:0.921393
is	O	O:0.999686
positive	O	O:0.962254
or	O	O:0.995580
negative	O	O:0.613083
:	O	O:0.991841
#CODE	O	O:0.993115
	
With	O	O:0.996664
that	O	O:0.997822
example	O	O:0.999760
data	O	O:0.997677
I	O	O:0.998161
was	O	O:0.998613
getting	O	O:0.957407
"	O	O:0.996785
shape	O	O:0.985652
mismatch	O	O:0.988857
"	O	O:0.994580
errors	O	O:0.928979
.	O	O:0.985888
	
Then	O	O:0.993869
,	O	O:0.999790
I'd	O	O:0.997955
use	O	O:0.998627
POV-Ray	O	O:0.970337
or	O	O:0.997991
Blender	O	O:0.993650
to	O	O:0.998298
model	O	O:0.999840
the	O	O:0.999162
planes	O	O:0.974746
at	O	O:0.999442
whatever	O	O:0.998493
angles	O	O:0.992372
,	O	O:0.999456
spheres	O	O:0.965338
for	O	O:0.999292
the	O	O:0.999198
round	O	O:0.703795
things	O	O:0.869609
(	O	O:0.995007
planets	O	O:0.994431
?	O	O:0.996796
)	O	O:0.998266
.	O	O:0.990661
	
So	O	O:0.996957
,	O	O:0.999919
thus	O	O:0.992914
far	O	O:0.997980
,	O	O:0.999797
all	O	O:0.999186
I	O	O:0.998468
produce	O	O:0.948955
is	O	O:0.960968
:	O	O:0.988309
	
I'm	O	O:0.992579
hoping	O	O:0.985641
I	O	O:0.998965
can	O	O:0.999771
find	O	O:0.998148
a	O	O:0.998352
funciton	O	O:0.972512
(	O	O:0.998925
or	O	O:0.999810
build	O	O:0.991295
one	O	O:0.999240
)	O	O:0.999490
that	O	O:0.995301
does	O	O:0.997842
new_ids_arr	O	O:0.971338
=	O	O:0.995303
new_ids	O	O:0.904691
*	O	O:0.997049
new_ids^Transpose	O	O:0.945588
...	O	O:0.995163
or	O	O:0.998903
similar	O	O:0.992416
	
Any	O	O:0.984929
help	O	O:0.961505
much	O	O:0.977076
appreciated	O	O:0.973839
.	O	O:0.987440
	
But	O	O:0.993843
there	O	O:0.996097
are	O	O:0.999026
still	O	O:0.999484
white	O	O:0.997284
edges	O	O:0.945497
around	O	O:0.879303
(	O	O:0.998010
I	O	O:0.999628
have	O	O:0.998992
added	O	O:0.993450
a	O	O:0.998838
screenshot	O	O:0.982049
to	O	O:0.999643
my	O	O:0.999977
original	O	O:0.997158
question	O	O:0.996822
)	O	O:0.997021
	
How	O	O:0.992826
could	O	O:0.998362
I	O	O:0.999761
use	O	O:0.998064
`	O	O:0.982830
matplotlib	O	O:0.637506
`	O	O:0.999318
to	O	O:0.996996
represent	O	O:0.999827
such	O	O:0.998780
a	O	O:0.999438
matrix	O	O:0.978824
as	O	O:0.999495
a	O	O:0.995575
grid	O	O:0.977944
of	O	O:0.997773
red	O	O:0.956532
and	O	O:0.999793
black	O	O:0.973223
squares	O	O:0.833526
?	O	O:0.986851
	
The	O	O:0.994540
thick	O	O:0.992092
grey	O	O:0.993371
line	O	O:0.976717
in	O	O:0.999048
the	O	O:0.999677
middle	O	O:0.990099
of	O	O:0.998147
the	O	O:0.997385
violin	O	O:0.955901
is	O	O:0.997290
the	O	O:0.997377
bootstrapped	O	O:0.903227
99%	O	O:0.996878
confidence	O	O:0.994309
interval	O	O:0.998852
of	O	O:0.997777
the	O	O:0.999348
mean	O	O:0.997792
,	O	O:0.999293
which	O	O:0.992235
is	O	O:0.999394
the	O	O:0.998692
white	O	O:0.985133
horizontal	O	O:0.985083
line	O	O:0.965135
,	O	O:0.999638
both	O	O:0.999111
from	O	O:0.988429
pointplot	O	O:0.757215
.	O	O:0.995192
	
@USER	O	O:0.992627
I	O	O:0.998100
up	O	O:0.997693
voted	O	O:0.909646
you	O	O:0.996947
but	O	O:0.999474
add	O	O:0.982833
`	O	O:0.999033
import	O	O:0.951178
numpy	O	O:0.995798
as	O	O:0.994747
np	O	O:0.631692
`	O	O:0.992547
	
So	O	O:0.995043
,	O	O:0.999870
when	O	O:0.998680
you	O	O:0.999054
reduce	O	O:0.998206
to	O	O:0.999331
2	O	O:0.999675
dimensions	O	O:0.991444
,	O	O:0.999761
the	O	O:0.999592
power	O	O:0.875198
is	O	O:0.998707
the	O	O:0.999691
sum	O	O:0.986049
of	O	O:0.999319
the	O	O:0.999471
first	O	O:0.995611
2	O	O:0.997347
eigen	O	O:0.958814
values	O	O:0.972328
.	O	O:0.974552
	
Indexing	O	O:0.978159
starts	O	O:0.966255
with	O	O:0.996538
`	O	O:0.997678
0	O	O:0.938723
`	O	O:0.998376
in	O	O:0.971005
Python	O	O:0.934743
(	O	O:0.993589
and	O	O:0.999642
most	O	O:0.992966
any	O	O:0.996227
other	O	O:0.989994
programming	O	O:0.993457
language	O	O:0.993507
I	O	O:0.999522
know	O	O:0.995594
)	O	O:0.992130
.	O	O:0.968047
	
I	O	O:0.998468
have	O	O:0.999476
a	O	O:0.989084
matrix	O	O:0.997839
file	O	O:0.993684
of	O	O:0.998944
Hurricane	O	O:0.996020
data	O	O:0.989126
and	O	O:0.999895
it	O	O:0.999749
plots	O	O:0.987690
with	O	O:0.995298
the	O	O:0.930699
command	O	O:0.913505
:	O	O:0.993343
#CODE	O	O:0.997438
	
If	O	O:0.996368
they	O	O:0.996241
enter	O	O:0.981427
30	O	O:0.988441
,	O	O:0.999418
they	O	O:0.996737
will	O	O:0.999006
look	O	O:0.998641
at	O	O:0.999930
a	O	O:0.998227
30-minute	O	O:0.851968
time	O	O:0.952159
window	O	O:0.996629
,	O	O:0.999660
if	O	O:0.999354
they	O	O:0.998806
type	O	O:0.985199
5	O	O:0.993106
,	O	O:0.998586
matplotlib	O	O:0.986526
picks	O	O:0.998311
this	O	O:0.995768
up	O	O:0.996720
,	O	O:0.999640
data	O	O:0.997578
gets	O	O:0.986701
trimmed	O	O:0.991753
,	O	O:0.998220
and	O	O:0.999804
only	O	O:0.997675
5	O	O:0.994179
minutes	O	O:0.997093
worth	O	O:0.996090
of	O	O:0.998930
data	O	O:0.994644
gets	O	O:0.995323
shown	O	O:0.984402
.	O	O:0.986241
	
In	O	O:0.996324
the	O	O:0.994885
meanwhile	O	O:0.993060
does	O	O:0.996939
any	O	O:0.998504
one	O	O:0.998904
has	O	O:0.999528
a	O	O:0.998357
better	O	O:0.890685
suggestion	O	O:0.992307
?	O	O:0.992032
	
I	O	O:0.997108
want	O	O:0.998273
it	O	O:0.995345
at	O	O:0.997907
y=	O	O:0.994698
10.5	O	O:0.906601
,	O	O:0.995336
specifically	O	O:0.985741
.	O	O:0.994719
	
I	O	O:0.998963
then	O	O:0.999289
plot	O	O:0.998210
each	O	O:0.997638
of	O	O:0.999290
these	O	O:0.997019
values	O	O:0.973400
,	O	O:0.998035
but	O	O:0.999526
to	O	O:0.998977
get	O	O:0.999981
a	O	O:0.999875
more	O	O:0.994925
sensible	O	O:0.995065
result	O	O:0.998690
,	O	O:0.999603
I	O	O:0.999804
need	O	O:0.999418
to	O	O:0.999560
take	O	O:0.999846
the	O	O:0.999924
mean	O	O:0.997557
of	O	O:0.999660
all	O	O:0.998184
of	O	O:0.999678
these	O	O:0.997857
files	O	O:0.993960
for	O	O:0.999450
each	O	O:0.983496
cell	O	O:0.974304
,	O	O:0.998978
and	O	O:0.999874
plot	O	O:0.993862
that	O	O:0.997581
with	O	O:0.999229
the	O	O:0.999662
standard	O	O:0.989402
deviation	O	O:0.999065
obtained	O	O:0.994806
as	O	O:0.999326
error	O	O:0.979699
bars	O	O:0.928885
.	O	O:0.984660
	
I'm	O	O:0.998893
using	O	O:0.999892
data	O	O:0.991563
of	O	O:0.998506
the	O	O:0.994148
form	O	O:0.982438
:	O	O:0.992937
`	O	O:0.999125
[	O	O:0.997240
num1	O	O:0.995134
,	O	O:0.997192
num2	O	O:0.858237
,...,	O	O:0.996556
numk	O	O:0.896944
]`	O	O:0.977061
(	O	O:0.997700
an	O	O:0.999430
array	O	O:0.998520
of	O	O:0.998544
integers	O	O:0.947452
)	O	O:0.998717
.	O	O:0.987389
	
For	O	O:0.995151
the	O	O:0.999429
time	O	O:0.997242
steps	O	O:0.998825
where	O	O:0.998877
convergence	O	O:0.991113
is	O	O:0.998570
reached	O	O:0.981503
Id	O	O:0.998757
like	O	O:0.997423
to	O	O:0.999776
have	O	O:0.999784
the	O	O:0.998421
x-axis	O	O:0.994305
green	O	O:0.978780
and	O	O:0.998876
for	O	O:0.999326
non-convergence	O	O:0.821206
starting	O	O:0.994368
from	O	O:0.996515
light	O	O:0.996282
red	O	O:0.977311
for	O	O:0.996736
not	O	O:0.993332
so	O	O:0.998719
bad	O	O:0.983894
to	O	O:0.998787
red	O	O:0.998884
for	O	O:0.995120
bad	O	O:0.909566
.	O	O:0.985961
	
For	O	O:0.995600
instance	O	O:0.994669
you	O	O:0.998990
can	O	O:0.999408
add	O	O:0.997361
#CODE	O	O:0.997626
	
I	O	O:0.992556
don't	O	O:0.999625
want	O	O:0.995289
to	O	O:0.999575
get	O	O:0.999974
a	O	O:0.999675
newer	O	O:0.986143
one	O	O:0.999418
just	O	O:0.993450
incase	O	O:0.999437
any	O	O:0.996420
of	O	O:0.999468
the	O	O:0.997751
practice	O	O:0.995490
problems	O	O:0.980210
/	O	O:0.995750
lecture	O	O:0.996006
problems	O	O:0.988603
are	O	O:0.998763
incompatible	O	O:0.992259
with	O	O:0.998760
a	O	O:0.998201
newer	O	O:0.981968
version	O	O:0.993328
of	O	O:0.987010
IDLE	O	O:0.940313
.	O	O:0.990405
	
All	O	O:0.995231
of	O	O:0.998879
these	O	O:0.992645
frames	O	O:0.992134
are	O	O:0.999210
loaded	O	O:0.993128
at	O	O:0.999575
the	O	O:0.999497
start	O	O:0.992111
of	O	O:0.998757
the	O	O:0.991505
application	O	O:0.991916
.	O	O:0.985084
	
if	O	O:0.996274
you	O	O:0.998695
suspect	O	O:0.997635
one	O	O:0.999149
specific	O	O:0.996035
builtin	O	O:0.958773
,	O	O:0.995512
try	O	O:0.994637
checking	O	O:0.974067
it's	O	O:0.993254
type	O	O:0.812886
(	O	O:0.994782
`	O	O:0.998544
type	O	B-API:0.726385
(	O	O:0.999528
dict	O	O:0.996365
)`)	O	O:0.994152
,	O	O:0.998972
or	O	O:0.999647
look	O	O:0.989285
at	O	O:0.999789
the	O	O:0.998245
properties	O	O:0.969654
/	O	O:0.992464
functions	O	O:0.995451
it	O	O:0.991567
has	O	O:0.979208
(	O	O:0.995844
`	O	O:0.994374
dir	O	B-API:0.920245
(	O	O:0.999175
dict	O	O:0.986455
)`)	O	O:0.963980
.	O	O:0.985175
	
In	O	O:0.998483
some	O	O:0.996950
work	O	O:0.998389
I	O	O:0.999870
have	O	O:0.999764
done	O	O:0.989826
we	O	O:0.999687
used	O	O:0.999143
a	O	O:0.999505
simple	O	O:0.982109
approximation	O	O:0.995202
of	O	O:0.999101
the	O	O:0.996684
derivative	O	O:0.995047
,	O	O:0.999334
when	O	O:0.999883
this	O	O:0.999567
changes	O	O:0.999753
sign	O	O:0.997512
you	O	O:0.999422
have	O	O:0.999834
a	O	O:0.999556
peak	O	O:0.858811
(	O	O:0.994910
in	O	O:0.999719
1D	O	O:0.998657
data	O	O:0.995920
)	O	O:0.999722
,	O	O:0.999679
one	O	O:0.999400
can	O	O:0.999826
then	O	O:0.999941
add	O	O:0.999940
some	O	O:0.998655
parameters	O	O:0.989535
to	O	O:0.999392
remove	O	O:0.997945
peaks	O	O:0.987711
due	O	O:0.989599
to	O	O:0.998853
noise	O	O:0.964592
.	O	O:0.989784
	
Here's	O	O:0.997075
a	O	O:0.997439
working	O	O:0.970930
code	O	O:0.996110
sample	O	O:0.994653
that	O	O:0.996211
shows	O	O:0.998066
you	O	O:0.999118
how	O	O:0.999348
to	O	O:0.999098
get	O	O:0.999922
it	O	O:0.999271
working	O	O:0.987364
.	O	O:0.995870
	
How	O	O:0.991635
can	O	O:0.998599
I	O	O:0.999928
change	O	O:0.998950
this	O	O:0.973391
behavior	O	O:0.988765
and	O	O:0.998008
use	O	O:0.986573
Arial	O	O:0.842748
fonts	O	O:0.948077
for	O	O:0.998673
all	O	O:0.997332
of	O	O:0.999142
my	O	O:0.991286
plots	O	O:0.990770
?	O	O:0.994289
	
How	O	O:0.993789
to	O	O:0.997629
divide	O	O:0.998478
ytics	O	O:0.993587
to	O	O:0.999912
a	O	O:0.999968
certain	O	O:0.953333
number	O	O:0.993545
in	O	O:0.998091
matplotlib	O	O:0.990437
?	O	O:0.994278
	
Matplotlib	O	O:0.958318
cannot	O	O:0.997071
find	O	O:0.997553
facefile	O	O:0.994491
,	O	O:0.998808
is	O	O:0.999097
using	O	O:0.992282
old	O	O:0.951633
Python	O	O:0.963073
interpreter	O	O:0.988158
location	O	O:0.982727
	
do	O	O:0.993114
you	O	O:0.998991
get	O	O:0.999486
any	O	O:0.999387
message	O	O:0.994979
when	O	O:0.993826
trying	O	O:0.992468
plotting	O	O:0.995573
it	O	O:0.991283
?	O	O:0.995152
	
I	O	O:0.998025
have	O	O:0.998055
mac	O	O:0.966356
os	O	O:0.985478
x	O	O:0.960740
10.5.8	O	O:0.774598
and	O	O:0.997331
was	O	O:0.991007
wondering	O	O:0.989168
if	O	O:0.997648
anyone	O	O:0.989937
could	O	O:0.998246
recommend	O	O:0.999298
where	O	O:0.999280
I	O	O:0.999397
could	O	O:0.999892
find	O	O:0.993370
the	O	O:0.999727
proper	O	O:0.939450
package	O	O:0.986024
.	O	O:0.984150
	
Well	O	O:0.985736
,	O	O:0.999547
this	O	O:0.991992
isn't	O	O:0.999441
a	O	O:0.999394
wxPython	O	O:0.913337
answer	O	O:0.967339
but	O	O:0.990958
I've	O	O:0.994349
used	O	O:0.993492
Chaco	O	O:0.964470
for	O	O:0.999382
this	O	O:0.997680
sort	O	O:0.941823
of	O	O:0.998546
thing	O	O:0.983658
and	O	O:0.999122
it's	O	O:0.988099
pretty	O	O:0.981932
straight	O	O:0.994336
forward	O	O:0.945269
.	O	O:0.991115
	
The	O	O:0.989855
point	O	O:0.972448
IS	O	O:0.996684
at	O	O:0.998902
its	O	O:0.995082
position	O	O:0.986569
namely	O	O:0.963991
(	O	O:0.998236
1	O	O:0.993467
,	O	O:0.998022
1	O	O:0.989643
,	O	O:0.998401
1	O	O:0.982615
)	O	O:0.998183
.	O	O:0.984918
	
All	O	O:0.956886
is	O	O:0.999204
fine	O	O:0.965929
again	O	O:0.993338
.	O	O:0.993866
	
The	O	O:0.997918
next	O	O:0.991519
plot	O	O:0.991752
to	O	O:0.999291
show	O	O:0.995907
has	O	O:0.998044
the	O	O:0.999755
same	O	O:0.989860
clusters	O	O:0.979536
and	O	O:0.998343
colors	O	O:0.969506
but	O	O:0.997450
a	O	O:0.999558
different	O	O:0.988744
location	O	O:0.985972
.	O	O:0.983406
	
@USER	O	O:0.955803
The	O	O:0.998773
first	O	O:0.993733
approach	O	O:0.994017
would	O	O:0.998984
help	O	O:0.998077
only	O	O:0.999533
if	O	O:0.999728
the	O	O:0.999483
internal	O	O:0.961946
representation	O	O:0.968855
was	O	O:0.993991
the	O	O:0.997335
problem	O	O:0.925320
,	O	O:0.995299
but	O	O:0.997686
it	O	O:0.998289
doesn't	O	O:0.998899
solve	O	O:0.990999
the	O	O:0.999330
underlying	O	O:0.989240
size	O	O:0.985490
issue	O	O:0.976083
.	O	O:0.993391
	
After	O	O:0.993493
hours	O	O:0.993151
analyzing	O	O:0.995963
the	O	O:0.997192
source	O	O:0.992047
code	O	O:0.985488
of	O	O:0.998851
basemap's	O	O:0.989202
`	O	O:0.997821
tissot	O	B-API:0.919617
`	O	O:0.997113
function	O	O:0.985439
,	O	O:0.999658
learning	O	O:0.998506
some	O	O:0.991030
properties	O	O:0.996078
of	O	O:0.997689
ellipses	O	O:0.916303
and	O	O:0.999656
lot's	O	O:0.997812
of	O	O:0.989011
debugging	O	O:0.992530
,	O	O:0.999244
I	O	O:0.999233
came	O	O:0.992347
with	O	O:0.999422
a	O	O:0.998797
solution	O	O:0.984863
to	O	O:0.999574
my	O	O:0.999329
problem	O	O:0.984234
.	O	O:0.994362
	
You'd	O	O:0.998638
need	O	O:0.998553
to	O	O:0.999359
refactor	O	O:0.999482
the	O	O:0.999292
code	O	O:0.991065
to	O	O:0.999410
break	O	O:0.999738
your	O	O:0.984655
worker	O	O:0.986698
method	O	O:0.999456
up	O	O:0.996791
into	O	O:0.997870
smaller	O	O:0.975187
pieces	O	O:0.970153
that	O	O:0.999185
multiple	O	O:0.999091
processes	O	O:0.995253
can	O	O:0.999526
work	O	O:0.999860
on	O	O:0.999878
at	O	O:0.999758
the	O	O:0.999487
same	O	O:0.992159
time	O	O:0.989084
,	O	O:0.999235
and	O	O:0.999923
then	O	O:0.997547
pull	O	O:0.995493
it	O	O:0.999912
back	O	O:0.999093
together	O	O:0.999547
once	O	O:0.992428
all	O	O:0.999731
the	O	O:0.997099
pieces	O	O:0.959745
are	O	O:0.996836
ready	O	O:0.991886
.	O	O:0.992576
	
are	O	O:0.992891
you	O	O:0.999684
just	O	O:0.998897
trying	O	O:0.999542
to	O	O:0.999331
open	O	O:0.999438
a	O	O:0.999381
separate	O	O:0.687596
window	O	O:0.996595
or	O	O:0.997941
display	O	O:0.986377
that	O	O:0.983807
window	O	O:0.999619
inside	O	O:0.997517
of	O	O:0.999716
your	O	O:0.992347
main	O	O:0.865498
window	O	O:0.996526
?	O	O:0.990976
	
The	O	O:0.996330
one	O	O:0.991912
catch	O	O:0.861465
:	O	O:0.998835
if	O	O:0.999345
you	O	O:0.999688
embed	O	O:0.996660
a	O	O:0.999231
PDF	O	O:0.982250
inside	O	O:0.998870
a	O	O:0.984722
textbox	O	O:0.932961
,	O	O:0.999111
Word	O	O:0.998252
will	O	O:0.995258
rasterize	O	O:0.998001
this	O	O:0.999793
when	O	O:0.996073
you	O	O:0.999599
save	O	O:0.993934
it	O	O:0.999377
to	O	O:0.999799
a	O	O:0.999861
PDF	O	O:0.871899
.	O	O:0.991744
	
How	O	O:0.991202
can	O	O:0.997770
I	O	O:0.999958
address	O	O:0.998578
a	O	O:0.994709
specific	O	O:0.963132
line	O	O:0.963581
(	O	O:0.998836
by	O	O:0.998709
name	O	O:0.995739
,	O	O:0.999407
by	O	O:0.997639
number	O	O:0.996826
,	O	O:0.998800
by	O	O:0.999655
reference	O	O:0.996642
)	O	O:0.997648
throughout	O	O:0.977224
the	O	O:0.982656
program	O	O:0.983914
and	O	O:0.998755
delete	O	O:0.954378
that	O	O:0.992610
line	O	O:0.989565
?	O	O:0.996245
	
And	O	O:0.998441
also	O	O:0.998084
I	O	O:0.999960
need	O	O:0.998450
to	O	O:0.997226
do	O	O:0.999929
that	O	O:0.997298
for	O	O:0.999854
all	O	O:0.999670
variables	O	O:0.967706
simultaneously	O	O:0.966749
.	O	O:0.994093
	
`	O	O:0.997946
newtitle	O	O:0.954583
=	O	O:0.989562
"	O	O:0.998675
%s\n$%s$	O	O:0.759782
"	O	O:0.983323
%	O	O:0.945190
(	O	O:0.987495
'	O	O:0.998432
text\	O	O:0.989690
below\	O	O:0.990704
the\	O	O:0.989698
main\	O	O:0.965636
title	O	O:0.989934
'	O	O:0.996764
,	O	O:0.999730
newtitle	O	O:0.989023
)`	O	O:0.982576
	
Have	O	O:0.990179
you	O	O:0.996684
had	O	O:0.999310
a	O	O:0.999669
look	O	O:0.950683
at	O	O:0.999597
the	O	O:0.998407
`	O	O:0.987620
webagg	O	B-API:0.957457
`	O	O:0.999540
matplotlib	O	O:0.896404
backend	O	O:0.994922
?	O	O:0.988110
	
find	O	O:0.972107
the	O	O:0.999786
file	O	O:0.995880
from	O	O:0.998179
the	O	O:0.999253
link	O	O:0.986413
	
If	O	O:0.995276
you	O	O:0.999472
want	O	O:0.999872
separate	O	O:0.995774
figures	O	O:0.996470
,	O	O:0.999195
as	O	O:0.999276
the	O	O:0.997179
title	O	O:0.996662
of	O	O:0.999924
your	O	O:0.989040
question	O	O:0.994029
suggests	O	O:0.995146
the	O	O:0.993936
`	O	O:0.991233
subplots=True	O	O:0.733563
`	O	O:0.999415
argument	O	O:0.990890
might	O	O:0.998885
get	O	O:0.999127
the	O	O:0.999228
job	O	O:0.992640
done	O	O:0.971684
.	O	O:0.992366
	
I	O	O:0.995573
suggest	O	O:0.998747
removing	O	O:0.948437
all	O	O:0.995042
the	O	O:0.996315
domain	O	O:0.999099
specific	O	O:0.992480
stuff	O	O:0.978824
.	O	O:0.989496
	
Just	O	O:0.994834
change	O	O:0.964537
`	O	O:0.999077
shape	O	O:0.829314
`	O	O:0.999316
to	O	O:0.939604
`	O	O:0.999666
(	O	O:0.989634
10	O	O:0.995515
,	O	O:0.998268
10	O	O:0.977061
,	O	O:0.998025
10	O	O:0.985002
,	O	O:0.998310
10	O	O:0.977488
,	O	O:0.997948
10	O	O:0.983527
)`	O	O:0.962376
and	O	O:0.997802
see	O	O:0.991757
.	O	O:0.980857
	
Any	O	O:0.992136
help	O	O:0.924280
would	O	O:0.998329
be	O	O:0.998889
appreciated	O	O:0.989802
.	O	O:0.974123
	
However	O	O:0.983897
,	O	O:0.994229
(	O	O:0.999447
at	O	O:0.999061
least	O	O:0.999472
what	O	O:0.999167
I	O	O:0.999438
have	O	O:0.999360
seen	O	O:0.820154
is	O	O:0.999780
that	O	O:0.995802
)	O	O:0.999913
sometimes	O	O:0.990736
after	O	O:0.998037
the	O	O:0.990781
plot	O	O:0.632522
has	O	O:0.996549
been	O	O:0.986084
displayed	O	O:0.993965
,	O	O:0.998937
it	O	O:0.999458
goes	O	O:0.997493
into	O	O:0.999045
a	O	O:0.994648
"	O	O:0.983807
Not	O	O:0.994953
Responding	O	O:0.980647
"	O	O:0.996023
mode	O	O:0.977742
and	O	O:0.999316
you	O	O:0.999865
just	O	O:0.999227
have	O	O:0.999708
to	O	O:0.999411
kill	O	O:0.999289
the	O	O:0.999492
process	O	O:0.933398
anyways	O	O:0.994598
.	O	O:0.996529
	
It	O	O:0.995806
consists	O	O:0.989177
in	O	O:0.999685
a	O	O:0.998391
floating-point	O	O:0.938919
parameter	O	O:0.996339
P	O	O:0.988772
,	O	O:0.999742
with	O	O:0.986912
dimension	O	O:0.995415
NxM	O	O:0.992186
,	O	O:0.997946
and	O	O:0.999801
each	O	O:0.984133
pixel	O	O:0.946478
is	O	O:0.999784
geolocated	O	O:0.966659
by	O	O:0.998313
the	O	O:0.997868
fields	O	O:0.844626
latitude	O	O:0.929713
and	O	O:0.998792
longitude	O	O:0.922731
(	O	O:0.999001
each	O	O:0.987275
of	O	O:0.996042
size	O	O:0.993546
NxM	O	O:0.991381
)	O	O:0.996673
.	O	O:0.971095
	
In	O	O:0.997929
order	O	O:0.996304
to	O	O:0.999362
change	O	O:0.998950
the	O	O:0.999847
order	O	O:0.990132
of	O	O:0.999667
the	O	O:0.998394
bars	O	O:0.992459
,	O	O:0.999362
you	O	O:0.999683
should	O	O:0.999704
change	O	O:0.998648
the	O	O:0.999900
order	O	O:0.952980
in	O	O:0.995075
the	O	O:0.997026
index	O	O:0.997135
.	O	O:0.990728
	
This	O	O:0.985823
does	O	O:0.993629
not	O	O:0.999710
work	O	O:0.999885
when	O	O:0.999616
I	O	O:0.999571
replace	O	O:0.980776
the	O	O:0.995728
random	O	O:0.979058
plot	O	O:0.989125
data	O	O:0.999288
with	O	O:0.999724
an	O	O:0.999491
actual	O	O:0.995692
color	O	O:0.993546
PNG	O	O:0.975175
image	O	O:0.980005
.	O	O:0.980238
	
For	O	O:0.991757
example	O	O:0.990144
,	O	O:0.999744
say	O	O:0.998228
you	O	O:0.998991
had	O	O:0.999287
data	O	O:0.998659
between	O	O:0.984418
0	O	O:0.980649
and	O	O:0.995472
1	O	O:0.952039
but	O	O:0.988645
didn't	O	O:0.992668
like	O	O:0.999279
the	O	O:0.999627
colors	O	O:0.980521
used	O	O:0.989699
at	O	O:0.999706
the	O	O:0.999708
extremes	O	O:0.991896
of	O	O:0.997377
the	O	O:0.996089
colormap	O	O:0.998184
for	O	O:0.992601
0	O	O:0.964598
and	O	O:0.995133
1	O	O:0.939877
.	O	O:0.951693
	
After	O	O:0.993233
searching	O	O:0.991011
through	O	O:0.994659
multiple	O	O:0.990863
posts	O	O:0.986046
,	O	O:0.999270
I	O	O:0.999527
basically	O	O:0.999821
want	O	O:0.998149
to	O	O:0.998341
use	O	O:0.999946
a	O	O:0.994393
generic	O	O:0.811220
colormap	O	O:0.959964
(	O	O:0.994226
rainbow	O	O:0.992876
)	O	O:0.998226
and	O	O:0.999286
multiply	O	O:0.982223
my	O	O:0.994791
third	O	O:0.996944
array	O	O:0.997919
by	O	O:0.995181
the	O	O:0.998761
colormap	O	O:0.980062
in	O	O:0.999208
order	O	O:0.997543
to	O	O:0.999054
display	O	O:0.998968
different	O	O:0.996859
colors	O	O:0.954532
for	O	O:0.999844
each	O	O:0.986866
of	O	O:0.997413
the	O	O:0.998329
xy	O	O:0.979520
points	O	O:0.953630
.	O	O:0.988116
	
Hi	O	O:0.968472
,	O	O:0.995712
Thanks	O	O:0.996000
Tobold	O	O:0.983517
,	O	O:0.999617
I	O	O:0.999695
will	O	O:0.999286
check	O	O:0.998568
the	O	O:0.999681
source	O	O:0.977745
code	O	O:0.986470
you	O	O:0.997288
mention	O	O:0.994862
.	O	O:0.994751
	
This	O	O:0.998314
next	O	O:0.995114
block	O	O:0.984750
is	O	O:0.998589
what	O	O:0.987150
does	O	O:0.998945
what	O	O:0.999311
you	O	O:0.999922
want	O	O:0.999443
with	O	O:0.999294
the	O	O:0.999142
`	O	O:0.998068
for	O	O:0.951082
`	O	O:0.998756
loop	O	O:0.910189
.	O	O:0.994401
	
Say	O	O:0.995836
that	O	O:0.998026
I	O	O:0.999937
have	O	O:0.999784
6	O	O:0.991277
variables	O	O:0.996213
that	O	O:0.997194
I	O	O:0.999949
want	O	O:0.999437
to	O	O:0.998573
sort	O	O:0.999094
into	O	O:0.992754
these	O	O:0.996096
3	O	O:0.985397
groups	O	O:0.956012
and	O	O:0.999735
plot	O	O:0.996220
like	O	O:0.997887
a	O	O:0.999541
venn	O	O:0.663186
diagram	O	O:0.989882
.	O	O:0.983858
	
ValueError	O	O:0.895246
:	O	O:0.997232
setting	O	O:0.992867
an	O	O:0.997653
array	O	O:0.995227
element	O	O:0.995870
with	O	O:0.998385
a	O	O:0.996505
sequence	O	O:0.978449
.	O	O:0.992498
	
My	O	O:0.995837
need	O	O:0.971160
is	O	O:0.999822
that	O	O:0.995463
I	O	O:0.999882
want	O	O:0.999019
to	O	O:0.993746
plot	O	O:0.998772
these	O	O:0.999485
nominal	O	O:0.991799
values	O	O:0.985318
of	O	O:0.998088
both	O	O:0.992318
actual	O	O:0.987264
and	O	O:0.999738
predicted	O	O:0.997211
ones	O	O:0.959153
on	O	O:0.999202
the	O	O:0.999774
same	O	O:0.997796
plot	O	O:0.984560
so	O	O:0.999733
that	O	O:0.997460
It	O	O:0.999755
will	O	O:0.999285
be	O	O:0.999885
easy	O	O:0.997169
to	O	O:0.996721
compare	O	O:0.999199
how	O	O:0.998789
good	O	O:0.976909
was	O	O:0.998746
the	O	O:0.999086
prediction	O	O:0.991745
as	O	O:0.998735
compared	O	O:0.975488
to	O	O:0.999454
actual	O	O:0.998944
values	O	O:0.974248
.	O	O:0.990804
	
So	O	O:0.993517
,	O	O:0.999898
open	O	O:0.973566
up	O	O:0.999512
your	O	O:0.993699
favorite	O	O:0.992400
Terminal	O	O:0.992480
emulator	O	O:0.956296
and	O	O:0.996217
enter	O	O:0.885017
#CODE	O	O:0.963083
	
Also	O	O:0.993088
,	O	O:0.999801
the	O	O:0.999663
lists	O	O:0.989671
need	O	O:0.997421
to	O	O:0.999886
be	O	O:0.999977
equal	O	O:0.992863
length	O	O:0.972503
.	O	O:0.975325
	
Because	O	O:0.994593
matplotlib	O	O:0.994420
will	O	O:0.998725
convert	O	O:0.984031
things	O	O:0.995824
to	O	O:0.999297
numpy	O	O:0.999760
arrays	O	O:0.990687
regardless	O	O:0.999142
,	O	O:0.999706
there	O	O:0.997285
are	O	O:0.999498
more	O	O:0.996422
efficient	O	O:0.997376
ways	O	O:0.983082
to	O	O:0.997955
do	O	O:0.999548
it	O	O:0.997813
.	O	O:0.992903
	
And	O	O:0.993584
here	O	O:0.942692
is	O	O:0.999803
where	O	O:0.998338
I	O	O:0.999559
grab	O	O:0.985172
the	O	O:0.997499
data	O	O:0.989757
and	O	O:0.999679
I	O	O:0.999573
try	O	O:0.998222
to	O	O:0.992577
update	O	O:0.999676
the	O	O:0.999662
limits	O	O:0.986250
of	O	O:0.999207
the	O	O:0.998031
plot	O	O:0.932732
#CODE	O	O:0.992362
	
Any	O	O:0.984052
help	O	O:0.721954
is	O	O:0.996331
appreciated	O	O:0.808863
.	O	O:0.988972
	
Which	O	O:0.971787
is	O	O:0.998471
the	O	O:0.997083
why	O	O:0.999087
,	O	O:0.999441
conveniently	O	O:0.993621
,	O	O:0.999458
`	O	O:0.998548
colors	O	B-API:0.507534
`	O	O:0.999615
keyword	O	O:0.976682
exists	O	O:0.994436
.	O	O:0.994110
	
How	O	O:0.994141
can	O	O:0.998392
I	O	O:0.999979
find	O	O:0.999233
the	O	O:0.998914
code	O	O:0.992501
to	O	O:0.997922
support	O	O:0.999302
multiple	O	O:0.997637
plotting	O	O:0.976571
scales	O	O:0.894390
and	O	O:0.997387
X-axis	O	O:0.997834
on	O	O:0.998310
seperate	O	O:0.993336
panels	O	O:0.992277
using	O	O:0.998764
sizer	O	O:0.987987
routines	O	O:0.943746
?	O	O:0.986867
	
I'm	O	O:0.992983
trying	O	O:0.996523
to	O	O:0.999086
build	O	O:0.998191
Matplotlib	O	O:0.997351
from	O	O:0.993250
source	O	O:0.987799
with	O	O:0.993652
Tkinter	O	O:0.957264
.	O	O:0.991224
	
This	O	O:0.992471
means	O	O:0.999462
that	O	O:0.999119
you	O	O:0.999564
can	O	O:0.999631
install	O	O:0.999838
matplotlib	O	O:0.997188
locally	O	O:0.968031
in	O	O:0.999851
your	O	O:0.985638
`	O	O:0.998246
virtualenv	O	O:0.708888
`	O	O:0.996756
and	O	O:0.997248
it	O	O:0.999696
will	O	O:0.997774
find	O	O:0.999295
all	O	O:0.999857
of	O	O:0.999816
its	O	O:0.995943
backend	O	O:0.999556
dependencies	O	O:0.982024
in	O	O:0.998847
the	O	O:0.998699
system-wide	O	O:0.948795
`	O	O:0.991092
site-packages	O	O:0.785026
`	O	O:0.998484
.	O	O:0.958967
	
I	O	O:0.993548
am	O	O:0.998888
trying	O	O:0.994140
to	O	O:0.999632
create	O	O:0.999522
a	O	O:0.999069
simple	O	O:0.945590
GUI	O	O:0.999188
using	O	O:0.997795
tkinter	O	O:0.934937
which	O	O:0.984869
will	O	O:0.997848
just	O	O:0.999543
open	O	O:0.999138
a	O	O:0.985054
window	O	O:0.981591
displaying	O	O:0.995116
the	O	O:0.996677
plot	O	O:0.868183
.	O	O:0.992391
	
Web	O	O:0.995540
convinces	O	O:0.986179
me	O	O:0.993033
using	O	O:0.999426
this	O	O:0.886583
is	O	O:0.997324
no	O	O:0.996902
good	O	O:0.989954
idea	O	O:0.987344
after	O	O:0.986941
all	O	O:0.967742
:	O	O:0.994150
For	O	O:0.998985
example	O	O:0.994657
#URL	O	O:0.988199
"	O	O:0.995154
Avoid	O	O:0.993198
3-D	O	O:0.990710
charts	O	O:0.962943
at	O	O:0.998684
all	O	O:0.994432
costs	O	O:0.970299
.	O	O:0.984056
	
Using	O	O:0.991742
pure	O	O:0.960298
Python	O	O:0.993012
,	O	O:0.999070
you	O	O:0.999548
can	O	O:0.999864
extract	O	O:0.999671
columns	O	O:0.999495
`	O	O:0.998970
1	O	O:0.915047
`	O	O:0.999290
,	O	O:0.978042
`	O	O:0.998916
5	O	O:0.563095
`	O	O:0.998411
and	O	O:0.988710
`	O	O:0.999212
7	O	O:0.690597
`	O	O:0.999790
by	O	O:0.987283
using	O	O:0.999506
the	O	O:0.955670
following	O	O:0.869070
nested	O	O:0.950661
list	O	O:0.867542
comprehension	O	O:0.884042
:	O	O:0.995181
#CODE	O	O:0.993203
	
Is	O	O:0.994835
there	O	O:0.998549
any	O	O:0.998994
way	O	O:0.996091
of	O	O:0.997699
getting	O	O:0.997046
some	O	O:0.997810
input	O	O:0.998779
from	O	O:0.999485
a	O	O:0.999572
user	O	O:0.905958
in	O	O:0.998031
matplotlib	O	O:0.969576
?	O	O:0.994236
	
`	O	O:0.995266
theta	O	O:0.657319
`	O	O:0.998551
is	O	O:0.982693
in	O	O:0.999216
radians	O	O:0.987151
instead	O	O:0.999496
of	O	O:0.996310
degrees	O	O:0.957132
.	O	O:0.994535
	
'	O	O:0.995469
plot	O	O:0.831225
'	O	O:0.998320
shows	O	O:0.997711
me	O	O:0.997700
a	O	O:0.997994
line	O	O:0.982651
interconnecting	O	O:0.994802
all	O	O:0.999750
data	O	O:0.994736
points	O	O:0.988040
,	O	O:0.997840
but	O	O:0.998073
not	O	O:0.999243
the	O	O:0.999971
data	O	O:0.998302
points	O	O:0.994335
themselves	O	O:0.961178
(	O	O:0.998521
unless	O	O:0.996098
there's	O	O:0.998644
a	O	O:0.999139
way	O	O:0.979317
I	O	O:0.998153
don't	O	O:0.999783
know	O	O:0.990137
of	O	O:0.998886
)	O	O:0.991590
.	O	O:0.990995
	
I	O	O:0.997940
could	O	O:0.999160
divide	O	O:0.966479
the	O	O:0.998133
`	O	O:0.998795
peak_top	O	O:0.503936
`	O	O:0.999902
by	O	O:0.992327
2	O	O:0.997727
to	O	O:0.998153
find	O	O:0.999227
the	O	O:0.999509
half	O	O:0.971920
height	O	O:0.992387
and	O	O:0.999784
then	O	O:0.994131
try	O	O:0.996564
and	O	O:0.999933
find	O	O:0.996419
y-values	O	O:0.994817
corresponding	O	O:0.983290
to	O	O:0.998847
the	O	O:0.999900
half	O	O:0.967500
height	O	O:0.988320
,	O	O:0.999451
but	O	O:0.999781
then	O	O:0.998022
I	O	O:0.999921
would	O	O:0.999751
run	O	O:0.996736
into	O	O:0.995200
trouble	O	O:0.991900
if	O	O:0.997575
there	O	O:0.997710
are	O	O:0.999406
no	O	O:0.999520
x-values	O	O:0.981864
exactly	O	O:0.998008
matching	O	O:0.996216
the	O	O:0.998300
half	O	O:0.926343
height	O	O:0.982953
.	O	O:0.991364
	
why	O	O:0.984663
can't	O	O:0.996709
it	O	O:0.999851
find	O	O:0.997091
the	O	O:0.999576
file	O	O:0.977946
?	O	O:0.995692
	
However	O	O:0.992150
,	O	O:0.999690
the	O	O:0.999710
resulting	O	O:0.987116
image	O	O:0.995465
always	O	O:0.993678
has	O	O:0.999416
the	O	O:0.998272
same	O	O:0.983733
resolution	O	O:0.991662
,	O	O:0.996828
around	O	O:0.827927
(	O	O:0.996562
250x250	O	O:0.952179
)	O	O:0.995811
.	O	O:0.978341
	
Installing	O	O:0.992851
those	O	O:0.997100
packages	O	O:0.994824
from	O	O:0.997410
the	O	O:0.998900
source	O	O:0.980920
can	O	O:0.998328
be	O	O:0.999956
a	O	O:0.999751
pain	O	O:0.936670
,	O	O:0.999545
especially	O	O:0.983637
on	O	O:0.997410
Windows	O	O:0.957891
and	O	O:0.998942
OS	O	O:0.973905
X	O	O:0.881166
.	O	O:0.966898
	
Sort	O	O:0.986344
arrays	O	O:0.986153
by	O	O:0.998997
two	O	O:0.996195
criteria	O	O:0.950266
	
However	O	O:0.994830
,	O	O:0.999122
I	O	O:0.999116
am	O	O:0.999290
kinda	O	O:0.979187
confused	O	O:0.993896
,	O	O:0.999319
any	O	O:0.998646
help	O	O:0.926468
would	O	O:0.998956
be	O	O:0.999199
appreciated	O	O:0.989813
.	O	O:0.974123
	
Unfortunately	O	O:0.997623
if	O	O:0.998854
you	O	O:0.998570
search	O	O:0.995916
this	O	O:0.999077
array	O	O:0.997469
for	O	O:0.999256
all	O	O:0.998633
subnodes	O	O:0.979311
given	O	O:0.993023
some	O	O:0.993668
index	O	O:0.999484
you	O	O:0.999758
only	O	O:0.999799
get	O	O:0.999979
some	O	O:0.998628
of	O	O:0.999651
the	O	O:0.999286
subnodes	O	O:0.997546
contained	O	O:0.996588
by	O	O:0.998358
the	O	O:0.999198
original	O	O:0.960988
triangle	O	O:0.996049
because	O	O:0.999642
most	O	O:0.997817
nodes	O	O:0.998646
belong	O	O:0.937464
to	O	O:0.999201
several	O	O:0.999573
triangles	O	O:0.946001
and	O	O:0.999656
they	O	O:0.998833
are	O	O:0.999169
only	O	O:0.998670
added	O	O:0.996560
to	O	O:0.999452
one	O	O:0.999928
of	O	O:0.998587
these	O	O:0.987952
.	O	O:0.995925
	
If	O	O:0.996464
I	O	O:0.999361
set	O	O:0.994295
shrink	O	O:0.820860
1.0	O	O:0.787043
and	O	O:0.998090
fraction	O	O:0.991518
to	O	O:0.995530
anything	O	O:0.999864
,	O	O:0.999215
it	O	O:0.998629
shrinks	O	O:0.994423
the	O	O:0.997167
graph	O	O:0.969648
,	O	O:0.999177
not	O	O:0.999264
affecting	O	O:0.997764
the	O	O:0.994544
colorbar	O	O:0.998009
size	O	O:0.993829
at	O	O:0.999086
all	O	O:0.998554
,	O	O:0.999258
until	O	O:0.994391
changing	O	O:0.973642
fraction	O	O:0.987132
causes	O	O:0.983664
it	O	O:0.999302
to	O	O:0.999498
be	O	O:0.999808
exactly	O	O:0.999655
what	O	O:0.988614
I	O	O:0.998634
already	O	O:0.999362
have	O	O:0.990018
,	O	O:0.999843
at	O	O:0.999101
which	O	O:0.996632
point	O	O:0.999211
changing	O	O:0.999409
them	O	O:0.944726
stops	O	O:0.991214
doing	O	O:0.997971
anything	O	O:0.955045
.	O	O:0.968810
	
It	O	O:0.989445
doesn't	O	O:0.996163
add	O	O:0.996479
anything	O	O:0.999063
else	O	O:0.960913
.	O	O:0.996103
	
Now	O	O:0.992536
I	O	O:0.999861
just	O	O:0.999641
wish	O	O:0.995204
they'd	O	O:0.998275
add	O	O:0.996369
some	O	O:0.998714
kind	O	O:0.997251
of	O	O:0.999497
drop	O	O:0.659832
down	O	O:0.994429
menu	O	O:0.995829
to	O	O:0.994900
matplotlib	O	O:0.999089
...	O	O:0.978407
	
Thanks	O	O:0.963947
for	O	O:0.998670
any	O	O:0.991782
help	O	O:0.816550
	
The	O	O:0.986863
source	O	O:0.937672
data's	O	O:0.987634
list	O	O:0.753604
is	O	O:0.997916
called	O	O:0.938485
xyz	O	O:0.962119
.	O	O:0.972101
	
I	O	O:0.997333
have	O	O:0.998061
been	O	O:0.960910
looking	O	O:0.988526
around	O	O:0.969415
and	O	O:0.998775
maybe	O	O:0.997660
it	O	O:0.997783
could	O	O:0.998917
be	O	O:0.999902
a	O	O:0.999813
version-of-Pyhton	O	B-API:0.577482
problem	O	O:0.981537
.	O	O:0.985971
	
(	O	O:0.994151
I	O	O:0.999751
want	O	O:0.999149
to	O	O:0.992892
reduce	O	O:0.999216
the	O	O:0.999590
size	O	O:0.992269
of	O	O:0.999165
the	O	O:0.999153
outlier	O	O:0.968461
)	O	O:0.994798
#CODE	O	O:0.980386
	
This	O	O:0.989215
should	O	O:0.999312
work	O	O:0.997865
for	O	O:0.999926
any	O	O:0.996823
number	O	O:0.992263
of	O	O:0.997864
columns	O	O:0.996771
and	O	O:0.999690
length	O	O:0.999189
of	O	O:0.992592
data	O	O:0.981922
.	O	O:0.996853
	
Any	O	O:0.986974
assistance	O	O:0.964712
would	O	O:0.998747
be	O	O:0.999151
greatly	O	O:0.996905
appreciated	O	O:0.948927
,	O	O:0.999227
this	O	O:0.979719
has	O	O:0.998280
been	O	O:0.993790
doing	O	O:0.998498
my	O	O:0.996015
head	O	O:0.906467
in	O	O:0.997139
.	O	O:0.991910
	
where	O	O:0.989598
axes_square	O	B-API:0.561807
is	O	O:0.995067
simply	O	O:0.929927
:	O	O:0.996191
#CODE	O	O:0.991177
	
I	O	O:0.996812
can	O	O:0.999833
put	O	O:0.997570
together	O	O:0.998643
a	O	O:0.999089
more	O	O:0.953403
detailed	O	O:0.993782
answer	O	O:0.996035
based	O	O:0.983968
on	O	O:0.999341
that	O	O:0.984418
package	O	O:0.999317
if	O	O:0.998165
desired	O	O:0.980506
.	O	O:0.987171
	
It's	O	O:0.991545
fairly	O	O:0.993805
easy	O	O:0.990249
to	O	O:0.998257
speed	O	O:0.999244
it	O	O:0.999539
up	O	O:0.997969
by	O	O:0.999103
making	O	O:0.994614
an	O	O:0.984952
approximation	O	O:0.973959
--	O	O:0.999841
just	O	O:0.997850
take	O	O:0.998910
the	O	O:0.998598
2D	O	O:0.910096
histogram	O	O:0.989078
and	O	O:0.999385
blur	O	O:0.957552
it	O	O:0.998761
with	O	O:0.999393
a	O	O:0.997914
guassian	O	O:0.996571
filter	O	O:0.920379
of	O	O:0.999316
the	O	O:0.997444
right	O	O:0.987945
radius	O	O:0.975188
and	O	O:0.997816
covariance	O	O:0.988970
.	O	O:0.970520
	
I've	O	O:0.979459
tried	O	O:0.995121
the	O	O:0.997294
solutions	O	O:0.972543
posted	O	O:0.990230
by	O	O:0.994741
Marek	O	O:0.979498
and	O	O:0.998918
qarma	O	O:0.992643
attempting	O	O:0.989140
to	O	O:0.998059
obtain	O	O:0.999172
the	O	O:0.999820
coordinates	O	O:0.993785
of	O	O:0.999594
the	O	O:0.999887
bins	O	O:0.989295
rather	O	O:0.997877
than	O	O:0.997329
the	O	O:0.999591
index	O	O:0.999465
of	O	O:0.999819
them	O	O:0.993861
,	O	O:0.999952
like	O	O:0.994073
so	O	O:0.988534
:	O	O:0.996644
#CODE	O	O:0.997454
	
What	O	O:0.996652
do	O	O:0.992887
you	O	O:0.999870
mean	O	O:0.999342
by	O	O:0.999415
make	O	O:0.994222
sure	O	O:0.993014
the	O	O:0.994033
'	O	O:0.982457
backend	O	O:0.997672
setting	O	O:0.982304
for	O	O:0.996692
pylab	O	O:0.569495
is	O	O:0.995160
not	O	O:0.995130
set	O	O:0.995398
to	O	O:0.992222
inline	O	O:0.916823
?	O	O:0.995853
	
sets	O	O:0.981818
the	O	O:0.997203
initial	O	O:0.989456
x	O	O:0.980097
,	O	O:0.999540
v	O	O:0.997475
of	O	O:0.999440
every	O	O:0.986834
particle	O	O:0.998073
in	O	O:0.998161
an	O	O:0.997311
array	O	O:0.990707
	
Post	O	O:0.987209
more	O	O:0.979044
information	O	O:0.997976
on	O	O:0.999527
structure	O	O:0.998079
of	O	O:0.999878
your	O	O:0.990881
array	O	O:0.992025
.	O	O:0.992456
	
Here	O	O:0.929313
is	O	O:0.999519
a	O	O:0.997217
sample	O	O:0.969379
code	O	O:0.992843
if	O	O:0.992589
anyone	O	O:0.989759
wants	O	O:0.997025
to	O	O:0.997619
play	O	O:0.994978
with	O	O:0.997105
it	O	O:0.997852
.	O	O:0.998065
	
Are	O	O:0.992675
all	O	O:0.999318
these	O	O:0.998214
settings	O	O:0.996177
really	O	O:0.996101
necessary	O	O:0.999309
to	O	O:0.998821
achieve	O	O:0.999876
the	O	O:0.997478
result	O	O:0.995438
I'm	O	O:0.999013
looking	O	O:0.995445
for	O	O:0.999686
,	O	O:0.997725
or	O	O:0.992249
is	O	O:0.999405
there	O	O:0.997429
perhaps	O	O:0.999477
a	O	O:0.999772
more	O	O:0.937518
compact	O	O:0.994120
way	O	O:0.996107
to	O	O:0.997906
accomplish	O	O:0.998912
my	O	O:0.992067
goal	O	O:0.918361
:	O	O:0.996983
#CODE	O	O:0.994459
	
I	O	O:0.998683
want	O	O:0.999270
to	O	O:0.993606
select	O	O:0.969108
(	O	O:0.998136
in	O	O:0.999276
the	O	O:0.999534
SQL	O	O:0.995042
sense	O	O:0.990674
)	O	O:0.999816
just	O	O:0.998345
columns	O	O:0.999098
`	O	O:0.997672
b0	O	O:0.911740
`	O	O:0.999349
through	O	B-API:0.539110
`	O	O:0.999077
b9	O	B-API:0.622544
`	O	O:0.999704
from	O	O:0.993880
the	O	O:0.999532
array	O	O:0.993877
,	O	O:0.998282
giving	O	O:0.997470
the	O	O:0.998299
structure	O	O:0.966050
#CODE	O	O:0.993058
	
I	O	O:0.992671
can't	O	O:0.999331
find	O	O:0.936208
any	O	O:0.998912
method	O	O:0.998057
to	O	O:0.999003
tell	O	O:0.999552
mpl	O	O:0.994878
to	O	O:0.999385
plot	O	O:0.999645
all	O	O:0.999443
of	O	O:0.999728
the	O	O:0.999558
data	O	O:0.995922
,	O	O:0.999417
it	O	O:0.999200
seems	O	O:0.999453
that	O	O:0.998837
there	O	O:0.999084
are	O	O:0.999798
only	O	O:0.998252
methods	O	O:0.995251
for	O	O:0.997637
drawing	O	O:0.992584
every	O	O:0.968357
n'th	O	O:0.988105
element	O	O:0.985491
or	O	O:0.996739
similar	O	O:0.956151
(	O	O:0.998586
and	O	O:0.999685
passing	O	O:0.975322
1	O	O:0.865923
does	O	O:0.980784
not	O	O:0.999082
help	O	O:0.990491
)	O	O:0.998687
.	O	O:0.984255
	
I	O	O:0.992506
haven't	O	O:0.991526
checked	O	O:0.991381
any	O	O:0.997040
of	O	O:0.997199
the	O	O:0.988311
details	O	O:0.993276
and	O	O:0.998684
you	O	O:0.999461
should	O	O:0.996923
therefore	O	O:0.999535
not	O	O:0.999763
rely	O	O:0.994437
on	O	O:0.999039
it	O	O:0.998398
to	O	O:0.999802
be	O	O:0.999832
correct	O	O:0.996949
.	O	O:0.989574
	
You	O	O:0.995223
can	O	O:0.999292
access	O	O:0.998822
members	O	O:0.996290
and	O	O:0.999810
slices	O	O:0.997046
of	O	O:0.995625
the	O	O:0.998189
array	O	O:0.998393
as	O	O:0.998954
you	O	O:0.997570
would	O	O:0.999726
with	O	O:0.999721
normal	O	O:0.998733
numpy	O	O:0.996817
arrays	O	O:0.963054
.	O	O:0.987500
	
Running	O	O:0.984311
1000	O	O:0.991575
simulations	O	O:0.965349
at	O	O:0.998604
the	O	O:0.999373
same	O	O:0.991635
time	O	O:0.989485
might	O	O:0.999261
be	O	O:0.999901
a	O	O:0.999736
bit	O	O:0.927827
expensive	O	O:0.978082
though	O	O:0.980918
.	O	O:0.994080
	
I	O	O:0.998664
need	O	O:0.997758
to	O	O:0.997885
look	O	O:0.999446
at	O	O:0.999765
other	O	O:0.998275
formats	O	O:0.998221
that	O	O:0.996324
allow	O	O:0.995987
create	O	O:0.947311
.	O	O:0.983471
	
finding	O	O:0.983604
element	O	O:0.989776
of	O	O:0.997837
numpy	O	O:0.989957
array	O	O:0.998361
that	O	O:0.992987
satisfies	O	O:0.997298
condition	O	O:0.997358
	
All	O	O:0.999190
the	O	O:0.995018
results	O	O:0.976773
(	O	O:0.999323
percentage	O	O:0.995166
)	O	O:0.998643
are	O	O:0.998656
the	O	O:0.999427
comparison	O	O:0.964332
between	O	O:0.989556
the	O	O:0.996867
described	O	O:0.988461
condition	O	O:0.993986
and	O	O:0.999480
the	O	O:0.999618
reference	O	O:0.983205
which	O	O:0.997665
here	O	O:0.930465
is	O	O:0.999738
the	O	O:0.996083
packaged	O	O:0.960973
ATLAS	O	O:0.962773
library	O	O:0.977582
.	O	O:0.985389
	
how	O	O:0.996122
do	O	O:0.998027
you	O	O:0.999306
use	O	O:0.994242
`	O	O:0.993486
slicing	O	O:0.797266
`	O	O:0.999891
to	O	O:0.995856
extract	O	O:0.999394
something	O	O:0.999438
from	O	O:0.992827
`	O	O:0.999512
x	O	O:0.828672
`	O	O:0.999075
?	O	O:0.985384
	
Mapping	O	O:0.990540
a	O	O:0.995575
numpy	O	O:0.963211
array	O	O:0.996102
pairwise	O	O:0.942187
	
If	O	O:0.997563
that	O	O:0.989877
is	O	O:0.999813
all	O	O:0.997593
you	O	O:0.999640
want	O	O:0.997691
to	O	O:0.998917
do	O	O:0.999758
,	O	O:0.999507
it	O	O:0.996807
should	O	O:0.999694
just	O	O:0.999932
work	O	O:0.999570
otherwise	O	O:0.999631
look	O	O:0.997851
at	O	O:0.998238
#URL	O	O:0.968775
since	O	O:0.995977
subclassing	O	O:0.992523
an	O	O:0.998078
array	O	O:0.929325
is	O	O:0.996269
not	O	O:0.995216
that	O	O:0.998335
simple	O	O:0.971199
.	O	O:0.990241
	
If	O	O:0.995404
you	O	O:0.999570
want	O	O:0.999611
to	O	O:0.999774
access	O	O:0.999538
an	O	O:0.999778
individual	O	O:0.995081
element	O	O:0.996307
using	O	O:0.986124
2D	O	O:0.914326
notation	O	O:0.983092
,	O	O:0.998615
you	O	O:0.999191
can	O	O:0.999692
create	O	O:0.999828
a	O	O:0.999850
view	O	O:0.544389
and	O	O:0.999923
work	O	O:0.992873
with	O	O:0.998258
that	O	O:0.994521
.	O	O:0.997902
	
Regarding	O	O:0.960468
3	O	O:0.984248
,	O	O:0.998776
I	O	O:0.998749
don't	O	O:0.998188
think	O	O:0.998409
this	O	O:0.997999
would	O	O:0.999495
be	O	O:0.999822
necessary	O	O:0.999632
since	O	O:0.998914
the	O	O:0.998959
above	O	O:0.994346
trick	O	O:0.998242
can	O	O:0.999681
also	O	O:0.999908
be	O	O:0.999923
applied	O	O:0.990914
to	O	O:0.996700
an	O	O:0.999850
array	O	O:0.998548
allocated	O	O:0.996806
by	O	O:0.993701
`	O	O:0.996607
shmarray	O	B-API:0.502420
`	O	O:0.997145
.	O	O:0.947881
	
And	O	O:0.995760
here	O	O:0.995808
a	O	O:0.999575
list	O	O:0.953035
with	O	O:0.999258
the	O	O:0.999603
names	O	O:0.997237
of	O	O:0.998673
all	O	O:0.999165
distribution	O	O:0.999186
functions	O	O:0.998928
available	O	O:0.978291
in	O	O:0.996452
Scipy	O	O:0.931258
0.12.0	O	O:0.883279
(	O	O:0.985156
VI	O	O:0.886448
):	O	O:0.991387
#CODE	O	O:0.988167
	
I	O	O:0.995394
get	O	O:0.999597
this	O	O:0.995190
error	O	O:0.997027
whenever	O	O:0.997770
i	O	O:0.984769
try	O	O:0.999595
to	O	O:0.997431
use	O	O:0.999962
any	O	O:0.996653
functions	O	O:0.993171
of	O	O:0.999200
matplotlib	O	O:0.996222
such	O	O:0.998067
as	O	O:0.998742
graph	O	O:0.931989
etc	O	O:0.992093
...	O	O:0.986771
	
Numpy	O	O:0.896921
is	O	O:0.994010
designed	O	O:0.949566
for	O	O:0.999387
repeated	O	O:0.961911
application	O	O:0.988121
of	O	O:0.998715
the	O	O:0.998232
exact	O	O:0.999817
same	O	O:0.997548
operation	O	O:0.989156
in	O	O:0.999215
parallel	O	O:0.989688
across	O	O:0.993623
an	O	O:0.987443
array	O	O:0.987007
.	O	O:0.986441
	
Each	O	O:0.960976
B	O	O:0.984408
i	O	O:0.963411
is	O	O:0.999560
a	O	O:0.994154
`	O	O:0.994476
k	O	O:0.792716
`	O	O:0.998270
-by-	O	O:0.850734
`	O	O:0.999127
n	O	O:0.531284
`	O	O:0.996931
matrix	O	O:0.942935
.	O	O:0.994592
	
I	O	O:0.996452
created	O	O:0.998789
a	O	O:0.998737
copy	O	B-API:0.654781
of	O	O:0.999291
the	O	O:0.986959
initial	O	O:0.996093
array	O	O:0.988655
in	O	O:0.997928
the	O	O:0.999136
hope	O	O:0.957266
that	O	O:0.996861
it	O	O:0.999164
would	O	O:0.999738
sort	O	O:0.985436
it	O	O:0.999026
out	O	O:0.985945
but	O	O:0.998456
it	O	O:0.997662
still	O	O:0.996500
doesn't	O	O:0.999011
work	O	O:0.987308
!	O	O:0.998134
	
So	O	O:0.994247
far	O	O:0.993812
,	O	O:0.999629
all	O	O:0.999131
the	O	O:0.999095
solutions	O	O:0.991472
I	O	O:0.999616
found	O	O:0.998786
required	O	O:0.990331
converting	O	O:0.982044
to	O	O:0.996461
IPLImage	O	O:0.988381
.	O	O:0.991801
	
However	O	O:0.994900
,	O	O:0.998898
I	O	O:0.998851
haven't	O	O:0.981522
tested	O	O:0.986460
this	O	O:0.999294
very	O	O:0.975652
systematically	O	O:0.991120
,	O	O:0.997479
and	O	O:0.998110
it's	O	O:0.991563
likely	O	O:0.988533
that	O	O:0.998804
for	O	O:0.999507
smaller	O	O:0.970487
matrices	O	O:0.976058
the	O	O:0.998438
additional	O	O:0.975326
overhead	O	O:0.993476
would	O	O:0.996965
outweigh	O	O:0.996493
the	O	O:0.998976
performance	O	O:0.980618
benefit	O	O:0.997205
from	O	O:0.999394
a	O	O:0.998077
higher	O	O:0.865559
thread	O	O:0.996047
count	O	O:0.852796
.	O	O:0.994034
	
but	O	O:0.990982
why	O	O:0.998842
dimA+dimB	O	O:0.990634
to	O	O:0.999716
begin	O	O:0.999933
with	O	O:0.999173
,	O	O:0.999811
that	O	O:0.999624
just	O	O:0.998625
leaves	O	O:0.999101
you	O	O:0.999264
0s	O	O:0.990476
at	O	O:0.999419
the	O	O:0.999520
end	O	O:0.971882
.	O	O:0.983285
	
If	O	O:0.998042
you	O	O:0.999134
select	O	O:0.987739
a	O	O:0.999779
list	O	O:0.958747
of	O	O:0.999578
actual	O	O:0.995858
fitness	O	O:0.999222
entries	O	O:0.988793
,	O	O:0.999032
`	O	O:0.999743
indices	O	O:0.829227
`	O	O:0.999548
,	O	O:0.998984
the	O	O:0.999884
corresponding	O	O:0.936914
points	O	O:0.981089
are	O	O:0.999642
given	O	O:0.998597
by	O	O:0.991809
`	O	O:0.993771
A	O	O:0.970913
[	O	O:0.997548
'	O	O:0.996947
point	O	O:0.994826
']	O	O:0.996595
[	O	O:0.996022
indices	O	O:0.981476
]`	O	O:0.994602
,	O	O:0.998551
which	O	O:0.991105
is	O	O:0.999646
a	O	O:0.998251
simple	O	O:0.842228
`	O	O:0.984384
(	O	O:0.989181
n	O	O:0.996963
,	O	O:0.996997
3	O	O:0.983801
)`	O	O:0.988244
array	O	O:0.988566
.	O	O:0.991074
	
It's	O	O:0.998448
also	O	O:0.998050
possible	O	O:0.999610
to	O	O:0.999485
generate	O	O:0.999122
an	O	O:0.999556
array	O	O:0.999631
of	O	O:0.999504
indices	O	O:0.995433
without	O	O:0.997936
using	O	O:0.992679
`	O	O:0.954406
enumerate	O	B-API:0.975721
`	O	O:0.996945
.	O	O:0.903989
	
If	O	O:0.995398
you	O	O:0.999741
want	O	O:0.999677
to	O	O:0.999903
keep	O	O:0.999299
the	O	O:0.999293
array	O	O:0.993443
allocated	O	O:0.992387
,	O	O:0.999303
and	O	O:0.999674
with	O	O:0.999026
the	O	O:0.998818
same	O	O:0.996820
size	O	O:0.993866
,	O	O:0.999569
you	O	O:0.999367
don't	O	O:0.999805
need	O	O:0.999713
to	O	O:0.999830
clear	O	O:0.999906
the	O	O:0.998798
elements	O	O:0.936359
.	O	O:0.989987
	
It'll	O	O:0.994860
print	O	O:0.988680
out	O	O:0.997271
all	O	O:0.995418
methods	O	O:0.985460
and	O	O:0.999752
properties	O	O:0.993114
of	O	O:0.991564
the	O	O:0.980617
object	O	O:0.981902
.	O	O:0.983364
	
Search	O	O:0.989682
numpy	O	O:0.992198
array	O	O:0.994270
inside	O	O:0.992044
numpy	O	O:0.989783
array	O	O:0.977487
	
Assigning	O	O:0.993017
a	O	O:0.998152
view	O	B-API:0.590640
to	O	O:0.999760
a	O	O:0.999652
structured	O	O:0.965417
array	O	O:0.999596
also	O	O:0.994985
copies	O	O:0.999113
the	O	O:0.999173
data	O	O:0.990324
,	O	O:0.999812
soyour	O	O:0.985362
suggestion	O	O:0.993225
doesnt	O	O:0.997860
work	O	O:0.994637
.	O	O:0.998934
	
If	O	O:0.995424
you	O	O:0.999467
know	O	O:0.998026
there	O	O:0.996651
are	O	O:0.995187
not	O	O:0.999318
many	O	O:0.999479
different	O	O:0.993419
values	O	O:0.927969
(	O	O:0.998883
relative	O	O:0.994720
to	O	O:0.999348
the	O	O:0.999984
size	O	O:0.996026
of	O	O:0.999496
the	O	O:0.999803
input	O	O:0.997285
"	O	O:0.999373
itemArray	O	O:0.936894
")	O	O:0.997711
,	O	O:0.999526
something	O	O:0.999038
like	O	O:0.999393
this	O	O:0.999512
could	O	O:0.999634
be	O	O:0.998916
efficient	O	O:0.968165
:	O	O:0.988421
#CODE	O	O:0.994002
	
When	O	O:0.994597
I	O	O:0.998526
import	O	O:0.996677
numpy	O	O:0.958938
in	O	O:0.999047
a	O	O:0.982831
script	O	O:0.987019
,	O	O:0.999207
I	O	O:0.999440
don't	O	O:0.999724
have	O	O:0.995687
all	O	O:0.999957
the	O	O:0.999677
functions	O	O:0.996631
of	O	O:0.999087
numpy	O	O:0.995070
available	O	O:0.995965
,	O	O:0.999569
only	O	O:0.997426
few	O	O:0.998620
of	O	O:0.999517
them	O	O:0.543891
(	O	O:0.998881
not	O	O:0.999208
a	O	O:0.998768
lot	O	O:0.915526
,	O	O:0.993306
and	O	O:0.998440
not	O	O:0.998070
array	O	O:0.991568
)	O	O:0.998181
?	O	O:0.988509
	
It	O	O:0.989298
allows	O	O:0.988280
to	O	O:0.999477
have	O	O:0.999923
your	O	O:0.999293
custom	O	O:0.980623
system	O	O:0.995740
inside	O	O:0.989526
the	O	O:0.998086
home	O	O:0.955017
directory	O	O:0.998466
accessible	O	O:0.982004
via	O	O:0.998283
proot	O	O:0.777407
and	O	O:0.999580
,	O	O:0.999612
therefore	O	O:0.996718
,	O	O:0.999846
you	O	O:0.999513
can	O	O:0.999467
install	O	O:0.999830
any	O	O:0.999605
packages	O	O:0.992933
without	O	O:0.992352
root	O	O:0.973619
privileges	O	O:0.970642
.	O	O:0.991192
	
Hey	O	O:0.972025
,	O	O:0.990342
is	O	O:0.998997
there	O	O:0.997032
an	O	O:0.998534
optimal	O	O:0.994774
size	O	O:0.986763
for	O	O:0.999765
a	O	O:0.998308
block	O	O:0.919235
?	O	O:0.994102
	
Numpy	O	O:0.975471
array	O	O:0.985404
,	O	O:0.999152
how	O	O:0.999421
to	O	O:0.999696
select	O	O:0.998443
indices	O	O:0.997348
satisfying	O	O:0.998567
multiple	O	O:0.996510
conditions	O	O:0.921565
?	O	O:0.990656
	
I'm	O	O:0.992460
still	O	O:0.996182
learning	O	O:0.995204
git	O	O:0.941348
and	O	O:0.999750
this	O	O:0.999215
whole	O	O:0.992281
open	O	O:0.957578
source	O	O:0.974567
thing	O	O:0.989238
.	O	O:0.985116
	
A	O	O:0.997968
further	O	O:0.964167
problem	O	O:0.964046
is	O	O:0.998691
that	O	O:0.994931
a	O	O:0.998218
list	O	O:0.935563
index	O	O:0.997337
can't	O	O:0.997670
contain	O	O:0.998439
duplicates	O	O:0.996768
-	O	O:0.997945
I	O	O:0.999505
couldn't	O	O:0.997871
simultaneously	O	O:0.997199
read	O	O:0.981909
pixels	O	O:0.969580
`	O	O:0.997263
[	O	O:0.993841
1	O	O:0.998410
,	O	O:0.994974
2	O	O:0.975731
]`	O	O:0.987747
and	O	O:0.996859
`	O	O:0.997709
[	O	O:0.952770
1	O	O:0.998299
,	O	O:0.995901
3	O	O:0.981962
]`	O	O:0.994736
,	O	O:0.999333
since	O	O:0.997839
my	O	O:0.998767
list	O	O:0.997857
of	O	O:0.999646
pixel	O	O:0.994398
x-coordinates	O	O:0.987530
would	O	O:0.995864
contain	O	O:0.994003
`	O	O:0.998620
[	O	O:0.987360
1	O	O:0.998239
,	O	O:0.996207
1	O	O:0.971874
]`	O	O:0.987806
.	O	O:0.981534
	
Your	O	O:0.987810
interpretation	O	O:0.969599
is	O	O:0.998916
,	O	O:0.999212
of	O	O:0.999019
course	O	O:0.991908
,	O	O:0.999901
quite	O	O:0.962362
correct	O	O:0.983357
:	O	O:0.998449
`	O	O:0.999905
count	O	O:0.761539
`	O	O:0.999856
refers	O	O:0.900867
to	O	O:0.999650
the	O	O:0.999933
number	O	O:0.998487
of	O	O:0.999676
elements	O	O:0.995869
in	O	O:0.999532
the	O	O:0.999100
`	O	O:0.996351
float*	O	B-API:0.806584
`	O	O:0.998601
"	O	O:0.995066
array	O	O:0.980344
"	O	O:0.990564
.	O	O:0.972418
	
This	O	O:0.985500
all	O	O:0.989286
works	O	O:0.991801
.	O	O:0.992329
	
Of	O	O:0.990979
course	O	O:0.996074
it	O	O:0.997994
may	O	O:0.996825
_not_	O	O:0.993261
be	O	O:0.998692
acceptable	O	O:0.966775
,	O	O:0.989640
but	O	O:0.989409
it	O	O:0.990334
seemed	O	O:0.997533
like	O	O:0.995953
it	O	O:0.997670
was	O	O:0.996861
at	O	O:0.999358
least	O	O:0.992975
trying	O	O:0.992760
.	O	O:0.983444
	
I	O	O:0.994779
think	O	O:0.998386
what	O	O:0.951005
should	O	O:0.993543
happen	O	O:0.987073
is	O	O:0.999238
for	O	O:0.997210
R	O	O:0.957274
to	O	O:0.996471
be	O	O:0.999812
overwritten	O	O:0.996134
with	O	O:0.996781
an	O	O:0.997898
upper	O	O:0.990753
triangular	O	O:0.930692
matrix	O	O:0.977808
.	O	O:0.982571
	
@USER	O	O:0.969804
Is	O	O:0.997805
there	O	O:0.999491
a	O	O:0.998209
way	O	O:0.988048
to	O	O:0.998358
get	O	O:0.999818
it	O	O:0.999520
to	O	O:0.999704
return	O	O:0.999475
all	O	O:0.999025
possible	O	O:0.992990
solutions	O	O:0.995825
?	O	O:0.992260
	
Thank	O	O:0.983472
you	O	O:0.997999
all	O	O:0.998939
for	O	O:0.999908
some	O	O:0.990372
great	O	O:0.980634
insight	O	O:0.971355
!	O	O:0.973072
	
as	O	O:0.994999
numpy	O	O:0.989673
array	O	O:0.997385
of	O	O:0.992965
0	O	O:0.952820
and	O	O:0.999610
1	O	O:0.982660
values	O	O:0.904318
.	O	O:0.977136
	
By	O	O:0.996920
construction	O	O:0.996767
of	O	O:0.999480
the	O	O:0.993241
problem	O	O:0.994177
,	O	O:0.999300
there	O	O:0.991023
can	O	O:0.998834
not	O	O:0.999908
be	O	O:0.999814
any	O	O:0.999559
non-unique	O	O:0.989154
values	O	O:0.989371
lying	O	O:0.985010
within	O	O:0.999028
one	O	O:0.998568
another	O	O:0.976657
.	O	O:0.989925
	
Both	O	O:0.986943
functions	O	O:0.985463
are	O	O:0.999287
kind	O	O:0.998378
of	O	O:0.998629
equal	O	O:0.943153
,	O	O:0.998476
but	O	O:0.994760
are	O	O:0.998100
different	O	O:0.997112
.	O	O:0.987162
	
For	O	O:0.998120
a	O	O:0.998336
sparse	O	O:0.771995
csr	O	O:0.537355
matrix	O	O:0.889473
(	O	O:0.995447
X	O	O:0.979384
)	O	O:0.997676
and	O	O:0.999403
a	O	O:0.999552
list	O	O:0.923937
of	O	O:0.999014
indices	O	O:0.988462
to	O	O:0.998995
drop	O	O:0.809506
(	O	O:0.997831
index_to_drop	O	B-API:0.509671
):	O	O:0.993627
#CODE	O	O:0.991419
	
This	O	O:0.996032
will	O	O:0.997664
be	O	O:0.999616
relatively	O	O:0.998119
slow	O	O:0.904113
,	O	O:0.994613
and	O	O:0.999176
requires	O	O:0.991429
you	O	O:0.998241
to	O	O:0.999956
have	O	O:0.999951
twice	O	O:0.999846
the	O	O:0.999885
free	O	O:0.958231
memory	O	O:0.998756
space	O	O:0.999133
required	O	O:0.997535
to	O	O:0.999508
store	O	O:0.997462
the	O	O:0.997081
array	O	O:0.979101
.	O	O:0.991283
	
I	O	O:0.997948
need	O	O:0.998938
numpy	O	O:0.980214
for	O	O:0.999670
this	O	O:0.988554
because	O	O:0.994984
I	O	O:0.997785
don't	O	O:0.999896
want	O	O:0.992604
to	O	O:0.999802
loop	O	O:0.999797
through	O	O:0.991540
the	O	O:0.997489
array	O	O:0.995234
n-times	O	O:0.950609
for	O	O:0.999628
n	O	O:0.989975
groups	O	O:0.966674
,	O	O:0.998896
since	O	O:0.998684
my	O	O:0.998649
array	O	O:0.999672
sizes	O	O:0.996877
can	O	O:0.998390
be	O	O:0.999865
arbitrarily	O	O:0.996093
large	O	O:0.906947
.	O	O:0.953432
	
I	O	O:0.994447
wonder	O	O:0.996484
what	O	O:0.991789
the	O	O:0.998144
speed	O	O:0.983545
delta	O	O:0.709217
between	O	O:0.974567
native	O	O:0.890086
Numpy	O	O:0.971420
arrays	O	O:0.896387
and	O	O:0.999438
an	O	O:0.998583
`	O	O:0.997023
mpfr	O	B-API:0.902822
`	O	O:0.999339
array	O	O:0.975103
,	O	O:0.999646
seeing	O	O:0.990747
as	O	O:0.991249
`	O	O:0.995471
mpfr	O	B-API:0.837661
`	O	O:0.997950
is	O	O:0.997862
a	O	O:0.997660
relatively	O	O:0.946886
low-level	O	O:0.935633
C	O	O:0.727594
wrapper	O	O:0.985879
class	O	O:0.984901
.	O	O:0.986075
	
In	O	O:0.996965
this	O	O:0.997884
particular	O	O:0.999270
case	O	O:0.998370
,	O	O:0.999723
each	O	O:0.986047
1D	O	O:0.979976
column	O	O:0.985905
(	O	O:0.994957
`	O	O:0.999642
column	O	O:0.987782
=	O	O:0.996751
myarray	O	O:0.894984
[	O	O:0.996051
i	O	O:0.991091
,	O	O:0.999184
j	O	O:0.981358
,	O	O:0.998404
:]	O	O:0.998593
`)	O	O:0.999347
of	O	O:0.998692
the	O	O:0.997703
3D	O	O:0.991374
array	O	O:0.991114
can	O	O:0.998449
be	O	O:0.999948
treated	O	O:0.998235
independently	O	O:0.942992
.	O	O:0.990795
	
Any	O	O:0.973171
ideas	O	O:0.975037
?	O	O:0.990844
	
Then	O	O:0.997207
take	O	O:0.996159
element	O	O:0.995711
3	O	O:0.987976
and	O	O:0.999084
1	O	O:0.997686
from	O	O:0.994075
second	O	O:0.982720
row	O	O:0.997712
,	O	O:0.998210
etc	O	O:0.994912
.	O	O:0.995293
	
print	O	O:0.851643
len	O	B-API:0.999632
(	O	O:0.995804
index	O	O:0.985758
)	O	O:0.997174
	
I	O	O:0.992496
don't	O	O:0.999350
know	O	O:0.991244
how	O	O:0.999303
to	O	O:0.999300
label	O	O:0.999979
rows	O	O:0.983209
and	O	O:0.999909
columns	O	O:0.999343
in	O	O:0.996949
numpy	O	O:0.996956
,	O	O:0.999631
so	O	O:0.998505
I	O	O:0.999635
just	O	O:0.999503
made	O	O:0.995750
a	O	O:0.998755
dict	O	O:0.967812
mapping	O	O:0.998490
the	O	O:0.999259
row	O	O:0.996294
label	O	O:0.994535
to	O	O:0.998824
the	O	O:0.999738
row	O	O:0.995021
index	O	O:0.999469
and	O	O:0.999956
another	O	O:0.998531
doing	O	O:0.996921
the	O	O:0.998897
same	O	O:0.922267
for	O	O:0.999451
the	O	O:0.998894
columns	O	O:0.980852
.	O	O:0.987899
	
It's	O	O:0.995721
the	O	O:0.999710
same	O	O:0.997203
as	O	O:0.999734
a	O	O:0.999060
normal	O	O:0.974793
solve	O	O:0.959196
except	O	O:0.995885
I	O	O:0.999634
know	O	O:0.999863
some	O	O:0.983301
of	O	O:0.999135
the	O	O:0.997152
solution	O	O:0.998217
to	O	O:0.999167
begin	O	O:0.999888
with	O	O:0.998336
.	O	O:0.994801
	
yeah	O	O:0.927713
,	O	O:0.999841
this	O	O:0.984978
is	O	O:0.999037
the	O	O:0.999489
best	O	O:0.982232
answer	O	O:0.996343
anywhere	O	O:0.997687
where	O	O:0.999362
edge	O	O:0.993483
cases	O	O:0.995161
are	O	O:0.996997
important	O	O:0.970412
.	O	O:0.988750
	
With	O	O:0.996845
this	O	O:0.997284
,	O	O:0.999770
I	O	O:0.999369
solve	O	O:0.994690
the	O	O:0.981727
problem	O	O:0.845227
(	O	O:0.995358
may	O	O:0.999455
help	O	O:0.984040
you	O	O:0.994511
):	O	O:0.997896
#CODE	O	O:0.996176
	
Teach	O	O:0.990911
a	O	O:0.995374
man	O	O:0.959319
to	O	O:0.998932
fish	O	O:0.982285
and	O	O:0.999680
all	O	O:0.999311
that	O	O:0.982580
.	O	O:0.996059
	
Looks	O	O:0.996385
like	O	O:0.999243
this	O	O:0.999112
would	O	O:0.999410
be	O	O:0.999941
a	O	O:0.999934
good	O	O:0.944544
place	O	O:0.998769
to	O	O:0.999130
use	O	O:0.999944
a	O	O:0.995925
context	O	O:0.962428
manager	O	O:0.989874
,	O	O:0.999654
so	O	O:0.999205
you	O	O:0.998929
can	O	O:0.999897
say	O	O:0.999893
"	O	O:0.999803
with	O	O:0.998158
fullprint	O	O:0.921909
"	O	O:0.997211
.	O	O:0.976487
	
What	O	O:0.996653
do	O	O:0.994033
you	O	O:0.999891
mean	O	O:0.998768
by	O	O:0.995097
'	O	O:0.998315
random	O	O:0.989802
sort	O	O:0.743031
'	O	O:0.996319
?	O	O:0.994873
	
However	O	O:0.987761
,	O	O:0.999247
it	O	O:0.998336
indeed	O	O:0.985517
does	O	O:0.998713
not	O	O:0.999693
allow	O	O:0.997908
you	O	O:0.998597
to	O	O:0.998847
exponentiate	O	O:0.999188
any	O	O:0.998990
matrix	O	O:0.993224
directly	O	O:0.920637
:	O	O:0.992478
#CODE	O	O:0.992759
	
The	O	O:0.997366
first	O	O:0.995738
one	O	O:0.997832
would	O	O:0.997528
probably	O	O:0.999136
be	O	O:0.999782
slow	O	O:0.973303
for	O	O:0.998892
large	O	O:0.990897
data	O	O:0.966373
,	O	O:0.998410
and	O	O:0.999753
the	O	O:0.999278
second	O	O:0.936142
one	O	O:0.995804
does	O	O:0.985321
not	O	O:0.999574
seem	O	O:0.999188
to	O	O:0.999213
offer	O	O:0.999187
any	O	O:0.998351
other	O	O:0.957524
interpolation	O	O:0.989865
method	O	O:0.996754
except	O	O:0.993881
splines	O	O:0.981543
.	O	O:0.990244
	
EDIT	O	O:0.904800
:	O	O:0.994493
For	O	O:0.999253
the	O	O:0.999497
record	O	O:0.935960
,	O	O:0.999358
here	O	O:0.949833
is	O	O:0.999213
example	O	O:0.996718
code	O	O:0.997565
that	O	O:0.994048
demonstrates	O	O:0.998390
the	O	O:0.994666
issue	O	O:0.746420
:	O	O:0.990443
#CODE	O	O:0.993551
	
In	O	O:0.996996
terms	O	O:0.998772
of	O	O:0.998175
functionality	O	O:0.936752
,	O	O:0.996782
it's	O	O:0.992055
not	O	O:0.999223
a	O	O:0.999559
metaclass	O	O:0.997380
at	O	O:0.998905
all	O	O:0.997365
,	O	O:0.998015
it's	O	O:0.998537
a	O	O:0.995200
function	O	O:0.986331
which	O	O:0.995055
takes	O	O:0.997619
a	O	O:0.997471
class	O	O:0.867523
(	O	O:0.998933
along	O	O:0.995899
with	O	O:0.999254
some	O	O:0.998558
others	O	O:0.999101
stuff	O	O:0.985125
)	O	O:0.998243
and	O	O:0.998735
returns	O	O:0.997582
a	O	O:0.987848
new	O	O:0.859191
class	O	O:0.990140
.	O	O:0.976443
	
or	O	O:0.997957
from	O	O:0.990828
source	O	O:0.966750
#CODE	O	O:0.992155
	
Didn't	O	O:0.979158
do	O	O:0.998376
any	O	O:0.995877
timings	O	O:0.978588
here	O	O:0.930449
,	O	O:0.998168
but	O	O:0.997526
it's	O	O:0.994156
possible	O	O:0.999289
this	O	O:0.995242
version	O	O:0.986153
has	O	O:0.993321
reasonable	O	O:0.980451
performance	O	O:0.986538
.	O	O:0.977320
	
I'll	O	O:0.990838
just	O	O:0.996659
test	O	O:0.993149
whether	O	O:0.986318
or	O	O:0.998837
not	O	O:0.995471
there's	O	O:0.999623
a	O	O:0.999345
significan	O	O:0.931036
space	O	O:0.999308
gain	O	O:0.968415
on	O	O:0.999839
my	O	O:0.999643
data	O	O:0.998565
with	O	O:0.999615
protocol	O	O:0.996309
2	O	O:0.988069
.	O	O:0.991999
	
Just	O	O:0.994919
wanted	O	O:0.998982
to	O	O:0.999574
add	O	O:0.999585
that	O	O:0.998832
the	O	O:0.999681
moving	O	O:0.985766
average	O	O:0.585116
function	O	O:0.997197
has	O	O:0.998337
been	O	O:0.998060
extracted	O	O:0.997981
into	O	O:0.984385
the	O	O:0.983840
[	O	O:0.992098
Bottleneck	O	O:0.985821
]	O	O:0.951569
(	O	O:0.992864
#URL	O	O:0.990442
)	O	O:0.997366
library	O	O:0.988341
if	O	O:0.997011
pandas	O	O:0.995557
seems	O	O:0.997074
too	O	O:0.995983
heavyweight	O	O:0.990143
as	O	O:0.997745
a	O	O:0.960202
dependency	O	O:0.926803
.	O	O:0.988556
	
`	O	O:0.997421
numpy	O	O:0.923858
`	O	O:0.999633
can	O	O:0.988412
use	O	O:0.999774
`	O	O:0.990375
malloc	O	B-API:0.971728
`	O	O:0.997841
/	O	O:0.867641
`	O	O:0.995649
realloc	O	B-API:0.939069
`	O	O:0.998559
for	O	O:0.995616
creating	O	O:0.991739
an	O	O:0.992725
array	O	O:0.992474
of	O	O:0.999056
objects	O	O:0.992138
of	O	O:0.998670
`	O	O:0.982097
sizeof	O	B-API:0.899859
(	O	O:0.998598
int	O	O:0.891173
)`	O	O:0.938403
.	O	O:0.965223
	
If	O	O:0.993835
you	O	O:0.999843
read	O	O:0.989669
through	O	O:0.997254
the	O	O:0.997849
documentation	O	O:0.996037
of	O	O:0.999439
those	O	O:0.998754
engines	O	O:0.996417
you	O	O:0.997802
will	O	O:0.999294
often	O	O:0.995265
find	O	O:0.984062
statements	O	O:0.990933
saying	O	O:0.998400
that	O	O:0.998533
they	O	O:0.998569
are	O	O:0.999663
optimized	O	O:0.994723
for	O	O:0.996221
speed	O	B-API:0.611674
(	O	O:0.994297
30fps	O	O:0.906570
-	O	O:0.999201
60fps	O	O:0.932464
)	O	O:0.998405
.	O	O:0.981454
	
I	O	O:0.998952
know	O	O:0.996951
I	O	O:0.998993
have	O	O:0.997093
to	O	O:0.998222
look	O	O:0.999602
at	O	O:0.999765
each	O	O:0.981568
row	O	O:0.989340
,	O	O:0.998610
but	O	O:0.997830
I	O	O:0.997782
don't	O	O:0.999776
want	O	O:0.991469
to	O	O:0.999111
do	O	O:0.999755
it	O	O:0.999622
with	O	O:0.996994
loops	O	O:0.988854
.	O	O:0.992026
	
I'm	O	O:0.984654
hoping	O	O:0.996303
this	O	O:0.997930
can	O	O:0.999322
at	O	O:0.999952
least	O	O:0.999695
save	O	O:0.975054
someone	O	O:0.997290
a	O	O:0.999227
few	O	O:0.985795
hours	O	O:0.997000
of	O	O:0.999038
hopeless	O	O:0.990424
research	O	O:0.992882
for	O	O:0.999076
this	O	O:0.963689
topic	O	O:0.976189
.	O	O:0.988203
	
What	O	O:0.995947
does	O	O:0.973940
"	O	O:0.998500
doesn't	O	O:0.999047
work	O	O:0.987501
"	O	O:0.999871
mean	O	O:0.981946
?	O	O:0.995575
	
You	O	O:0.982853
might	O	O:0.998563
look	O	O:0.993088
at	O	O:0.999970
your	O	O:0.997937
code	O	O:0.995192
that	O	O:0.996162
generates	O	O:0.998267
the	O	O:0.997457
`	O	O:0.997164
y	O	O:0.851583
`	O	O:0.999525
values	O	O:0.924345
,	O	O:0.999184
and	O	O:0.999651
see	O	O:0.996948
if	O	O:0.998942
that	O	O:0.998503
would	O	O:0.999316
benefit	O	O:0.999685
from	O	O:0.999432
the	O	O:0.999218
use	O	O:0.995987
of	O	O:0.997400
additional	O	O:0.974746
numpy	O	O:0.995476
or	O	O:0.999210
scipy	O	O:0.986247
functions	O	O:0.994412
.	O	O:0.980799
	
For	O	O:0.993938
example	O	O:0.990212
,	O	O:0.999698
give	O	O:0.984506
the	O	O:0.998417
list	O	O:0.765708
[	O	O:0.986583
(	O	O:0.998653
.3	O	O:0.930309
,	O	O:0.996232
'	O	O:0.999494
a	O	O:0.997993
')	O	O:0.982452
,	O	O:0.989769
(	O	O:0.997176
.4	O	O:0.892971
,	O	O:0.995619
'	O	O:0.998617
b	O	O:0.993453
')	O	O:0.996022
,	O	O:0.979006
(	O	O:0.997053
.3	O	O:0.922093
,	O	O:0.995603
'	O	O:0.998516
c	O	O:0.994275
')]	O	O:0.998317
I'd	O	O:0.998787
like	O	O:0.995989
to	O	O:0.999585
sample	O	O:0.993912
'	O	O:0.997507
b	O	O:0.980767
'	O	O:0.999283
40%	O	O:0.995923
of	O	O:0.998284
the	O	O:0.997022
time	O	O:0.987747
.	O	O:0.991747
	
The	O	O:0.993200
square	O	O:0.904181
bracket	O	O:0.998640
idea	O	O:0.989487
you	O	O:0.997526
mentioned	O	O:0.994812
works	O	O:0.997707
for	O	O:0.999279
my	O	O:0.996378
current	O	O:0.944542
problem	O	O:0.980658
.	O	O:0.980403
	
However	O	O:0.994109
,	O	O:0.999826
when	O	O:0.998495
I	O	O:0.998405
try	O	O:0.999812
to	O	O:0.993075
use	O	O:0.999921
a	O	O:0.996786
weighted	O	O:0.519670
average	O	O:0.893792
#CODE	O	O:0.989282
	
If	O	O:0.996290
I	O	O:0.999105
scale	O	O:0.996408
that	O	O:0.990844
to	O	O:0.999885
a	O	O:0.999860
2000	O	O:0.938394
X	O	O:0.980830
2000	O	O:0.988562
np	O	O:0.930025
array	O	O:0.994807
,	O	O:0.998779
here	O	O:0.875757
is	O	O:0.999648
what	O	O:0.994948
I	O	O:0.997988
get	O	O:0.982763
:	O	O:0.980417
#CODE	O	O:0.996721
	
Unfortunately	O	O:0.984575
,	O	O:0.995676
I'm	O	O:0.998623
not	O	O:0.999303
aware	O	O:0.998567
of	O	O:0.999668
a	O	O:0.996391
numpy	O	O:0.983841
implementation	O	O:0.971257
,	O	O:0.997783
but	O	O:0.996823
I	O	O:0.996162
did	O	O:0.999204
find	O	O:0.970018
this	O	O:0.991552
:	O	O:0.996384
#URL	O	O:0.991126
	
We	O	O:0.992783
can	O	O:0.997786
do	O	O:0.999925
this	O	O:0.999817
quite	O	O:0.992123
neatly	O	O:0.998374
using	O	O:0.998360
numpy	O	O:0.987025
,	O	O:0.996667
without	O	O:0.984745
having	O	O:0.978425
to	O	O:0.998559
worry	O	O:0.999235
about	O	O:0.998523
the	O	O:0.998927
channels	O	O:0.973058
at	O	O:0.997772
all	O	O:0.993039
!	O	O:0.988030
	
It's	O	O:0.997214
not	O	O:0.998435
exactly	O	O:0.999479
the	O	O:0.999805
most	O	O:0.983209
efficient	O	O:0.988490
way	O	O:0.980322
,	O	O:0.997138
but	O	O:0.998370
it	O	O:0.998486
will	O	O:0.999327
work	O	O:0.998778
,	O	O:0.999431
and	O	O:0.999688
not	O	O:0.997834
require	O	O:0.994358
keeping	O	O:0.998421
a	O	O:0.998122
copy	O	B-API:0.631745
of	O	O:0.998932
the	O	O:0.995357
file	O	O:0.990286
in	O	O:0.993775
memory	O	O:0.986386
(	O	O:0.997946
or	O	O:0.999564
two	O	O:0.996710
)	O	O:0.998768
.	O	O:0.986353
	
I'm	O	O:0.995256
trying	O	O:0.997170
to	O	O:0.999713
find	O	O:0.999646
the	O	O:0.999613
fastest	O	O:0.993605
way	O	O:0.997624
to	O	O:0.999518
find	O	O:0.999780
the	O	O:0.999750
first	O	O:0.998242
non-zero	O	O:0.992731
value	O	O:0.994246
for	O	O:0.999593
each	O	O:0.988666
row	O	O:0.996796
of	O	O:0.999614
a	O	O:0.995927
two	O	O:0.995999
dimensional	O	O:0.978706
sorted	O	O:0.961143
array	O	O:0.981273
.	O	O:0.983957
	
Convert	O	O:0.975007
the	O	O:0.996875
numpy	O	O:0.989190
array	O	O:0.998480
into	O	O:0.991655
a	O	O:0.997959
list	O	O:0.861395
first	O	O:0.991559
.	O	O:0.991478
	
@USER	O	O:0.989106
do	O	O:0.989208
you	O	O:0.999560
mean	O	O:0.998000
that	O	O:0.999520
grid	O	O:0.998647
dictonary	O	O:0.999541
holds	O	O:0.998760
the	O	O:0.998583
results	O	O:0.992618
in	O	O:0.999076
memory	O	O:0.995278
or	O	O:0.999881
something	O	O:0.999139
else	O	O:0.992010
?	O	O:0.998163
	
@USER	O	O:0.834831
:	O	O:0.995110
This	O	O:0.998334
solution	O	O:0.990340
is	O	O:0.998860
indeed	O	O:0.992761
designed	O	O:0.995419
to	O	O:0.998643
give	O	O:0.999373
the	O	O:0.999885
set	O	O:0.992797
of	O	O:0.999541
all	O	O:0.999108
the	O	O:0.999666
numbers	O	O:0.978614
found	O	O:0.969908
in	O	O:0.999204
the	O	O:0.996599
array	O	O:0.977979
.	O	O:0.987105
	
This	O	O:0.995120
way	O	O:0.994979
at	O	O:0.999616
most	O	O:0.990717
one	O	O:0.998497
line	O	O:0.945674
is	O	O:0.996228
in	O	O:0.997678
memory	O	O:0.992880
at	O	O:0.999113
any	O	O:0.996760
one	O	O:0.997812
time	O	O:0.976796
.	O	O:0.992049
	
It's	O	O:0.991414
low	O	O:0.984010
efficiency	O	O:0.996758
,	O	O:0.998790
I	O	O:0.999724
want	O	O:0.998385
to	O	O:0.997580
know	O	O:0.999573
are	O	O:0.999183
there	O	O:0.998433
any	O	O:0.999610
builtin	O	O:0.963906
functions	O	O:0.998570
that	O	O:0.991604
can	O	O:0.999426
do	O	O:0.999959
this	O	O:0.997246
in	O	O:0.996986
NumPy	O	O:0.980265
.	O	O:0.978684
	
The	O	O:0.995033
raw	O	O:0.991832
hardware	O	O:0.998829
data	O	O:0.974189
is	O	O:0.999121
32-bit	O	O:0.984135
signed	O	O:0.962960
integer	O	O:0.914686
,	O	O:0.996304
which	O	O:0.994626
becomes	O	O:0.994520
float	O	O:0.990892
when	O	O:0.993702
I	O	O:0.998835
convert	O	O:0.986642
it	O	O:0.992301
to	O	O:0.999139
normal	O	O:0.999731
physics	O	O:0.996424
units	O	O:0.947902
(	O	O:0.998426
m	O	O:0.984307
/	O	O:0.997321
s	O	O:0.955813
)	O	O:0.996731
	
Calculate	O	O:0.989344
subset	O	O:0.917810
of	O	O:0.996190
matrix	O	O:0.965917
multiplication	O	O:0.994381
	
EDIT	O	O:0.946179
:	O	O:0.998238
as	O	O:0.997998
to	O	O:0.999313
what	O	O:0.999512
DSM	O	O:0.997946
pointed	O	O:0.990941
out	O	O:0.994401
,	O	O:0.998880
OP	O	O:0.954389
is	O	O:0.996552
infact	O	O:0.993890
using	O	O:0.999802
a	O	O:0.986020
numpy	O	O:0.795585
array	O	O:0.976046
.	O	O:0.977024
	
As	O	O:0.988998
for	O	O:0.999252
the	O	O:0.998970
second	O	O:0.942874
question	O	O:0.990821
,	O	O:0.998581
`	O	O:0.999233
delete	O	B-API:0.942358
`	O	O:0.998722
has	O	O:0.989526
been	O	O:0.993606
suggested	O	O:0.929342
before	O	O:0.866724
:	O	O:0.984028
#CODE	O	O:0.992987
	
The	O	O:0.999562
remaining	O	O:0.999460
rows	O	O:0.994043
of	O	O:0.999290
the	O	O:0.998543
matrices	O	O:0.993006
are	O	O:0.996177
all	O	O:0.999748
linear	O	O:0.964135
combinations	O	O:0.952510
(	O	O:0.991778
in	O	O:0.999800
fact	O	O:0.995848
exact	O	O:0.998885
copies	O	O:0.947019
for	O	O:0.998217
almost	O	O:0.996287
all	O	O:0.999061
submatrices	O	O:0.993343
)	O	O:0.999155
of	O	O:0.999574
these	O	O:0.999102
rows	O	O:0.971082
.	O	O:0.988590
	
I'm	O	O:0.992724
printing	O	O:0.990658
the	O	O:0.998882
contents	O	O:0.995290
of	O	O:0.998938
an	O	O:0.998571
array	O	O:0.999120
with	O	O:0.998231
a	O	O:0.994857
header	O	O:0.969175
.	O	O:0.991200
	
Edit	O	O:0.894789
:	O	O:0.996995
If	O	O:0.999406
you	O	O:0.999870
need	O	O:0.999192
to	O	O:0.999889
save	O	O:0.997075
memory	O	O:0.996844
try	O	O:0.997265
radix	O	O:0.999231
sort	O	O:0.971114
,	O	O:0.999435
which	O	O:0.982968
is	O	O:0.999103
much	O	O:0.984909
faster	O	O:0.996849
on	O	O:0.997647
integers	O	O:0.980911
than	O	O:0.992344
quicksort	O	O:0.877959
(	O	O:0.998839
which	O	O:0.998140
I	O	O:0.999024
believe	O	O:0.985652
is	O	O:0.996649
what	O	O:0.970118
numpy	O	O:0.997728
uses	O	O:0.942201
)	O	O:0.996649
.	O	O:0.976469
	
The	O	O:0.996428
data	O	O:0.988205
was	O	O:0.996748
in	O	O:0.999576
following	O	O:0.996619
order	O	O:0.973932
(	O	O:0.998928
with	O	O:0.998510
sample	O	O:0.998650
data	O	O:0.994917
)	O	O:0.998490
#CODE	O	O:0.991040
	
definitely	O	O:0.994256
a	O	O:0.999442
good	O	O:0.877178
solution	O	O:0.998483
,	O	O:0.999368
nevertheless	O	O:0.996589
I'd	O	O:0.999818
like	O	O:0.998678
to	O	O:0.999649
solve	O	O:0.999669
this	O	O:0.997067
without	O	O:0.998341
a	O	O:0.997178
range	O	O:0.943120
,	O	O:0.998178
but	O	O:0.997789
the	O	O:0.998630
nearest	O	O:0.956722
neighbour	O	O:0.987111
.	O	O:0.983227
	
For	O	O:0.995886
my	O	O:0.995119
recent	O	O:0.976036
project	O	O:0.996238
that	O	O:0.992983
works	O	O:0.999115
on	O	O:0.999666
the	O	O:0.999649
order	O	O:0.992587
of	O	O:0.998740
20000x20000	O	O:0.956537
matrix	O	O:0.999517
entries	O	O:0.991913
,	O	O:0.998609
I	O	O:0.999878
will	O	O:0.996448
quickly	O	O:0.976495
and	O	O:0.999939
disastrously	O	O:0.981271
use	O	O:0.985652
up	O	O:0.982416
all	O	O:0.997093
of	O	O:0.998243
my	O	O:0.991515
workstation's	O	O:0.988428
8GB	O	O:0.996812
of	O	O:0.988034
RAM	O	O:0.972671
and	O	O:0.999539
more	O	O:0.945668
.	O	O:0.961884
	
Well	O	O:0.985363
,	O	O:0.999634
this	O	O:0.991546
might	O	O:0.999230
give	O	O:0.998882
a	O	O:0.999807
small	O	O:0.876814
speed-up	O	O:0.980590
just	O	O:0.990480
because	O	O:0.998026
it	O	O:0.997722
uses	O	O:0.998344
less	O	O:0.974545
memory	O	O:0.977350
.	O	O:0.985595
	
Try	O	O:0.995520
using	O	O:0.994206
`	O	O:0.992696
all	O	O:0.721789
`	O	O:0.993799
(	O	O:0.985643
edited	O	O:0.993797
to	O	O:0.997688
return	O	O:0.984743
`	O	O:0.998029
int	O	B-API:0.503230
`)	O	O:0.995278
:	O	O:0.966817
#CODE	O	O:0.994498
	
:	O	O:0.990507
I	O	O:0.998389
don't	O	O:0.999773
care	O	O:0.989044
if	O	O:0.997335
the	O	O:0.989004
statement	O	O:0.995754
modifies	O	O:0.990838
array	O	O:0.991173
or	O	O:0.996193
not	O	O:0.994363
.	O	O:0.998249
	
Rather	O	O:0.996243
than	O	O:0.997536
doing	O	O:0.999447
nans	O	O:0.988541
I	O	O:0.998303
put	O	O:0.994445
in	O	O:0.982011
-1	O	O:0.973645
and	O	O:0.999777
then	O	O:0.999001
filtered	O	O:0.998883
on	O	O:0.999502
match	O	O:0.968730
=	O	O:0.994786
b	O	O:0.967572
>	O	O:0.994422
=	O	O:0.963086
0	O	O:0.971830
.	O	O:0.980965
	
Removing	O	O:0.979597
duplicate	O	O:0.996763
columns	O	O:0.996928
and	O	O:0.999937
rows	O	O:0.998154
from	O	O:0.998309
a	O	O:0.998599
NumPy	O	O:0.970305
2D	O	O:0.967992
array	O	O:0.968157
	
arrays	O	O:0.992189
to	O	O:0.999294
extract	O	O:0.998666
arrays	O	O:0.997618
of	O	O:0.999324
the	O	O:0.998930
same	O	O:0.988048
	
as	O	O:0.995950
i	O	O:0.994080
have	O	O:0.995699
to	O	O:0.999374
test	O	O:0.996632
if	O	O:0.998568
it	O	O:0.999445
works	O	O:0.995049
or	O	O:0.999090
not	O	O:0.998430
so	O	O:0.999610
minimum	O	O:0.994704
i	O	O:0.998626
have	O	O:0.998754
to	O	O:0.999094
try	O	O:0.999879
with	O	O:0.997348
10-15	O	O:0.999286
different	O	O:0.999090
types	O	O:0.983456
of	O	O:0.994522
images	O	O:0.874946
.	O	O:0.998060
its	O	O:0.992539
not	O	O:0.999043
specific	O	O:0.996896
images	O	O:0.957719
it	O	O:0.998436
can	O	O:0.999557
be	O	O:0.999906
any	O	O:0.999586
image	O	O:0.991490
of	O	O:0.994713
people	O	O:0.903857
.	O	O:0.993935
	
So	O	O:0.991000
having	O	O:0.996291
a	O	O:0.994920
python	O	O:0.948735
loop	O	O:0.988468
,	O	O:0.996572
and	O	O:0.999440
having	O	O:0.995339
to	O	O:0.996781
sum	O	O:0.998550
all	O	O:0.999876
the	O	O:0.999082
results	O	O:0.998873
together	O	O:0.969745
,	O	O:0.997857
is	O	O:0.998170
taking	O	O:0.972162
390	O	O:0.979821
ms	O	O:0.996710
more	O	O:0.988160
than	O	O:0.994624
200	O	O:0.973283
times	O	O:0.995600
what	O	O:0.990963
it	O	O:0.998582
takes	O	O:0.995675
to	O	O:0.999392
solve	O	O:0.999837
each	O	O:0.995597
of	O	O:0.999299
the	O	O:0.998460
200	O	O:0.986595
systems	O	O:0.998074
that	O	O:0.999130
have	O	O:0.999259
to	O	O:0.999831
be	O	O:0.999670
solved	O	O:0.978491
.	O	O:0.975329
	
You	O	O:0.996255
could	O	O:0.999356
then	O	O:0.999824
sample	O	O:0.999745
pixels	O	O:0.993695
at	O	O:0.999770
the	O	O:0.999887
locations	O	O:0.993507
of	O	O:0.998455
the	O	O:0.999732
new	O	O:0.989835
points	O	O:0.927530
.	O	O:0.981406
	
I	O	O:0.997231
could	O	O:0.998898
use	O	O:0.997467
an	O	O:0.998961
idea	O	O:0.986093
about	O	O:0.990156
either	O	O:0.998366
how	O	O:0.997539
to	O	O:0.999041
fix	O	O:0.999262
the	O	O:0.998943
compilation	O	O:0.996295
errors	O	O:0.997472
or	O	O:0.999826
another	O	O:0.998286
way	O	O:0.998646
to	O	O:0.998036
convert	O	O:0.990613
my	O	O:0.993598
python	O	O:0.995095
objects	O	O:0.981372
.	O	O:0.984088
	
I	O	O:0.994147
tried	O	O:0.999043
every	O	O:0.969411
possible	O	O:0.986819
combination	O	O:0.999425
resulting	O	O:0.994628
with	O	O:0.999921
a	O	O:0.998589
0	O	O:0.981066
bytes	O	O:0.998552
file	O	O:0.994201
if	O	O:0.999184
the	O	O:0.998285
extension	O	O:0.963166
was	O	O:0.993620
mpg	O	O:0.983744
,	O	O:0.995997
and	O	O:0.999197
5.5kb	O	O:0.754989
if	O	O:0.989815
it	O	O:0.993723
was	O	O:0.993382
avi	O	O:0.984010
.	O	O:0.986004
	
Fortran	O	O:0.830055
90	O	O:0.955055
DOES	O	O:0.975307
support	O	O:0.982288
arbitrary	O	O:0.996404
lower	O	O:0.977655
bounds	O	O:0.975511
on	O	O:0.994018
arrays	O	O:0.989013
,	O	O:0.999458
and	O	O:0.999719
borrowing	O	O:0.997034
from	O	O:0.993040
that	O	O:0.989659
paradigm	O	O:0.997972
sounds	O	O:0.997831
quite	O	O:0.993153
plausible	O	O:0.977752
.	O	O:0.984318
	
I	O	O:0.998508
want	O	O:0.998707
to	O	O:0.991766
perform	O	O:0.999778
an	O	O:0.998350
operation	O	O:0.996807
on	O	O:0.999706
a	O	O:0.999845
that	O	O:0.998221
increments	O	O:0.999114
all	O	O:0.999637
the	O	O:0.999280
values	O	O:0.975932
inside	O	O:0.991996
it	O	O:0.999713
that	O	O:0.997506
are	O	O:0.999702
less	O	O:0.997657
than	O	O:0.989120
0	O	O:0.944493
and	O	O:0.998212
leaves	O	O:0.989277
the	O	O:0.999104
rest	O	O:0.978592
alone	O	O:0.996709
.	O	O:0.999532
for	O	O:0.998990
example	O	O:0.982470
,	O	O:0.999211
if	O	O:0.998556
I	O	O:0.988747
had	O	O:0.958260
:	O	O:0.980828
#CODE	O	O:0.991787
	
I	O	O:0.998496
like	O	O:0.997779
how	O	O:0.999267
this	O	O:0.996156
one	O	O:0.999543
uses	O	O:0.968899
straight	O	O:0.993986
python	O	O:0.943948
slicing	O	O:0.926309
and	O	O:0.997573
doesn't	O	O:0.993672
require	O	O:0.967196
numpy	O	O:0.990225
	
I	O	O:0.996020
select	O	O:0.956605
the	O	O:0.998753
first	O	O:0.997187
value	O	O:0.998634
using	O	O:0.995662
`	O	O:0.995386
ys	O	O:0.773436
[	O	O:0.998255
0	O	O:0.956299
]`	O	O:0.972541
.	O	O:0.964339
	
While	O	O:0.994641
waiting	O	O:0.971905
for	O	O:0.999209
the	O	O:0.997898
next	O	O:0.930580
buffer	O	O:0.992593
to	O	O:0.998981
fill	O	O:0.990534
,	O	O:0.999694
I'd	O	O:0.999887
like	O	O:0.999436
to	O	O:0.999785
process	O	O:0.999367
the	O	O:0.999654
most	O	O:0.986875
recent	O	O:0.990023
buffer	O	O:0.988813
with	O	O:0.996727
numpy	O	O:0.990864
and	O	O:0.999801
save	O	O:0.990973
the	O	O:0.992921
result	O	O:0.987633
.	O	O:0.989550
	
(	O	O:0.992735
They	O	O:0.999030
all	O	O:0.998514
do	O	O:0.998309
the	O	O:0.999666
same	O	O:0.978073
thing	O	O:0.998641
,	O	O:0.998519
in	O	O:0.999718
this	O	O:0.995954
case	O	O:0.998501
.	O	O:0.998482
)	O	O:0.997697
	
As	O	O:0.996130
of	O	O:0.998407
PIL	O	O:0.994634
1.1.6	O	O:0.947277
,	O	O:0.999395
the	O	O:0.996053
"	O	O:0.998152
proper	O	O:0.967578
"	O	O:0.999121
way	O	O:0.988042
to	O	O:0.997693
convert	O	O:0.990267
between	O	O:0.982006
images	O	O:0.842816
and	O	O:0.999713
numpy	O	O:0.996002
arrays	O	O:0.853980
is	O	O:0.992868
simply	O	O:0.975886
#CODE	O	O:0.995535
	
So	O	O:0.998240
first	O	O:0.998308
you	O	O:0.999656
need	O	O:0.999043
to	O	O:0.999909
construct	O	O:0.999813
an	O	O:0.999319
array	O	O:0.998781
that	O	O:0.996716
represents	O	O:0.999420
the	O	O:0.999929
rows	O	O:0.986745
you	O	O:0.999578
wish	O	O:0.999876
to	O	O:0.999629
select	O	O:0.983001
.	O	O:0.996087
	
Any	O	O:0.982955
ideas	O	O:0.991321
how	O	O:0.997843
to	O	O:0.998064
improve	O	O:0.999334
this	O	O:0.994649
?	O	O:0.998146
	
If	O	O:0.998623
this	O	O:0.985227
is	O	O:0.999501
the	O	O:0.998662
case	O	O:0.996700
,	O	O:0.999515
you	O	O:0.998559
can	O	O:0.999282
easily	O	O:0.999934
plot	O	O:0.999147
a	O	O:0.997835
known	O	O:0.983276
asymmetric	O	O:0.983716
shape	O	O:0.957635
and	O	O:0.999046
the	O	O:0.999491
plot	O	O:0.851098
will	O	O:0.998626
tell	O	O:0.996177
you	O	O:0.999801
everything	O	O:0.998217
.	O	O:0.997553
	
Apart	O	O:0.993661
from	O	O:0.996596
the	O	O:0.998486
compression	O	O:0.995295
part	O	O:0.990647
,	O	O:0.999803
this	O	O:0.997410
shouldn't	O	O:0.998341
be	O	O:0.999717
any	O	O:0.999095
slower	O	O:0.942492
than	O	O:0.990735
normal	O	O:0.958273
.	O	O:0.994303
	
Acquiring	O	O:0.934815
the	O	O:0.990356
Minimum	O	O:0.995211
array	O	O:0.998284
out	O	O:0.995754
of	O	O:0.999390
Multiple	O	O:0.988043
Arrays	O	O:0.998260
by	O	O:0.998217
order	O	O:0.987503
in	O	O:0.994237
Python	O	O:0.956459
	
first	O	O:0.984734
copy	O	O:0.586740
#CODE	O	O:0.991038
	
Getting	O	O:0.984677
all	O	O:0.994187
points	O	O:0.988226
where	O	O:0.992108
y=2	O	O:0.958002
.	O	O:0.992806
	
moving	O	O:0.954714
average	O	O:0.784439
function	O	O:0.998604
on	O	O:0.998112
numpy	O	O:0.991736
/	O	O:0.996851
scipy	O	O:0.969424
?	O	O:0.990605
	
for	O	O:0.999132
a	O	O:0.982892
N	O	O:0.901473
dimensional	O	O:0.943211
array	O	O:0.861167
:	O	O:0.989529
#CODE	O	O:0.995386
	
From	O	O:0.989752
looking	O	O:0.991596
at	O	O:0.995639
#URL	O	O:0.966412
it	O	O:0.994655
seems	O	O:0.998034
that	O	O:0.995918
it	O	O:0.996885
was	O	O:0.997433
originally	O	O:0.997911
required	O	O:0.993541
because	O	O:0.997255
indexing	O	O:0.996618
with	O	O:0.993349
`	O	O:0.997600
...	O	O:0.974845
	
In	O	O:0.998377
other	O	O:0.994778
words	O	O:0.996661
...	O	O:0.992025
yes	O	O:0.990374
you	O	O:0.998771
can	O	O:0.999111
trust	O	O:0.999391
it	O	O:0.999545
to	O	O:0.999176
be	O	O:0.999489
faster	O	O:0.978339
...	O	O:0.971098
but	O	O:0.994299
don't	O	O:0.997042
think	O	O:0.998262
python	O	O:0.984653
is	O	O:0.999054
that	O	O:0.996263
slow	O	O:0.996399
that	O	O:0.998632
you	O	O:0.998201
cannot	O	O:0.999477
do	O	O:0.999859
a	O	O:0.999126
for	O	O:0.995954
loop	O	O:0.998040
over	O	O:0.987492
3	O	O:0.998538
items	O	O:0.994155
without	O	O:0.993778
waiting	O	O:0.986325
for	O	O:0.994565
ages	O	O:0.915137
...	O	O:0.960006
	
And	O	O:0.994755
all	O	O:0.999668
that	O	O:0.996824
while	O	O:0.997352
you're	O	O:0.998470
getting	O	O:0.991866
lunch	O	O:0.971449
.	O	O:0.986757
	
If	O	O:0.995476
you	O	O:0.998938
do	O	O:0.999731
want	O	O:0.998939
to	O	O:0.998791
raise	O	O:0.999833
some	O	O:0.998241
sort	O	O:0.987534
of	O	O:0.999414
exception	O	O:0.986544
for	O	O:0.999636
invalid	O	O:0.968054
data	O	O:0.680668
(	O	O:0.994399
not	O	O:0.998909
type	O	O:0.995728
checking	O	O:0.990982
)	O	O:0.998684
,	O	O:0.997170
either	O	O:0.998226
let	O	O:0.991863
an	O	O:0.999524
existing	O	O:0.990691
exception	O	O:0.992899
propagate	O	O:0.968249
,	O	O:0.998553
or	O	O:0.999138
wrap	O	O:0.974121
it	O	O:0.998993
in	O	O:0.999860
your	O	O:0.997216
own	O	O:0.995881
exception	O	O:0.995922
type	O	O:0.860273
.	O	O:0.988177
	
casting	O	O:0.841381
are	O	O:0.998431
used	O	O:0.983748
in	O	O:0.997814
Numexpr	O	O:0.995337
,	O	O:0.998498
in	O	O:0.998672
contrast	O	O:0.995812
with	O	O:0.997559
NumPy	O	O:0.990403
,	O	O:0.999220
where	O	O:0.998030
array	O	O:0.996467
types	O	O:0.981951
	
I	O	O:0.996567
check	O	O:0.998408
mathexchange	O	O:0.905631
and	O	O:0.999241
while	O	O:0.998055
making	O	O:0.981370
the	O	O:0.998750
tags	O	O:0.771201
for	O	O:0.998655
the	O	O:0.998536
post	O	O:0.855572
,	O	O:0.998966
it	O	O:0.998682
didn't	O	O:0.998214
have	O	O:0.999232
any	O	O:0.999823
the	O	O:0.999621
ones	O	O:0.991694
that	O	O:0.996592
would	O	O:0.999892
seem	O	O:0.999239
relevant	O	O:0.998991
like	O	O:0.997378
scipy	O	O:0.995509
and	O	O:0.999708
numpy	O	O:0.994896
or	O	O:0.998019
even	O	O:0.992560
sparse	O	O:0.982375
.	O	O:0.984377
	
Any	O	O:0.992136
help	O	O:0.924280
would	O	O:0.998329
be	O	O:0.998889
appreciated	O	O:0.989802
.	O	O:0.974123
	
Say	O	O:0.975732
not	O	O:0.997842
that	O	O:0.998710
efficiency	O	O:0.986662
is	O	O:0.999805
a	O	O:0.997582
secondary	O	O:0.965072
priority	O	O:0.994502
;	O	O:0.998176
say	O	O:0.991883
instead	O	O:0.999944
that	O	O:0.997924
I	O	O:0.999934
want	O	O:0.999574
to	O	O:0.985116
perform	O	O:0.998708
bivariate	O	O:0.862023
optimization	O	O:0.960216
:	O	O:0.993951
pythonicity	O	O:0.991381
+	O	O:0.997795
efficiency	O	O:0.972313
(	O	O:0.997477
hence	O	O:0.998553
the	O	O:0.998271
post	O	O:0.929576
title	O	O:0.996714
)	O	O:0.998167
.	O	O:0.987884
	
Does	O	O:0.995989
numpy	O	O:0.997858
have	O	O:0.991472
any	O	O:0.996807
constructs	O	O:0.993071
to	O	O:0.998474
make	O	O:0.999761
this	O	O:0.996685
easier	O	O:0.988987
?	O	O:0.997144
	
If	O	O:0.995399
you	O	O:0.999639
view	O	O:0.962341
`	O	O:0.999591
P	O	O:0.766076
`	O	O:0.999753
as	O	O:0.996967
a	O	O:0.997207
rank-2	O	O:0.880786
tensor	O	O:0.997823
then	O	O:0.997286
only	O	O:0.999898
three	O	O:0.998777
options	O	O:0.998363
exist	O	O:0.991274
for	O	O:0.999805
the	O	O:0.997213
product	O	O:0.989253
of	O	O:0.996618
`	O	O:0.997674
P	O	O:0.942019
`	O	O:0.999916
with	O	O:0.991174
itself	O	O:0.998135
,	O	O:0.999715
1	O	O:0.990533
)	O	O:0.999208
either	O	O:0.997261
all	O	O:0.999754
the	O	O:0.999660
indexes	O	O:0.982136
cancel	O	O:0.985268
leaving	O	O:0.995011
you	O	O:0.998461
with	O	O:0.999790
a	O	O:0.999229
rank-0	O	O:0.790224
tensor	O	O:0.981956
(	O	O:0.999555
a	O	O:0.998792
scalar	O	O:0.978818
)	O	O:0.999703
,	O	O:0.998398
2	O	O:0.992977
)	O	O:0.998422
1	O	O:0.997517
set	O	O:0.996740
of	O	O:0.999145
indexes	O	O:0.934734
cancels	O	O:0.989313
and	O	O:0.999421
you	O	O:0.997827
are	O	O:0.999382
left	O	O:0.996386
with	O	O:0.998165
a	O	O:0.997275
rank-2	O	O:0.832592
tensor	O	O:0.953512
(	O	O:0.999287
a	O	O:0.998269
matrix	O	O:0.979294
)	O	O:0.999736
,	O	O:0.999362
or	O	O:0.998955
3	O	O:0.987070
)	O	O:0.999863
none	O	O:0.993976
of	O	O:0.999856
them	O	O:0.969987
cancel	O	O:0.967010
and	O	O:0.997290
you're	O	O:0.998623
left	O	O:0.974290
with	O	O:0.998780
a	O	O:0.995969
rank-4	O	O:0.746107
tensor	O	O:0.991207
.	O	O:0.989796
	
At	O	O:0.996005
the	O	O:0.998414
moment	O	O:0.997447
I	O	O:0.999347
made	O	O:0.998613
a	O	O:0.992508
custom	O	O:0.542193
iterator	O	O:0.993178
class	O	O:0.996997
that	O	O:0.991584
builds	O	O:0.997851
a	O	O:0.999436
list	O	O:0.951454
of	O	O:0.998557
lists	O	O:0.908174
.	O	O:0.994371
	
This	O	O:0.992248
basically	O	O:0.999067
sees	O	O:0.993228
whether	O	O:0.998154
two	O	O:0.991813
circles	O	O:0.709239
(	O	O:0.999242
with	O	O:0.999256
coordinates	O	O:0.996504
that	O	O:0.999324
correspond	O	O:0.998389
to	O	O:0.999689
the	O	O:0.999910
indices	O	O:0.977307
n	O	O:0.979216
and	O	O:0.999731
m	O	O:0.992403
)	O	O:0.991645
connect	O	O:0.684864
.	O	O:0.982474
	
It	O	O:0.984325
would	O	O:0.998445
mean	O	O:0.998586
Gaussian	O	O:0.993944
quadrature	O	O:0.998374
using	O	O:0.996471
points	O	O:0.959964
along	O	O:0.966781
the	O	O:0.995513
line	O	O:0.970813
that	O	O:0.994295
are	O	O:0.999386
easily	O	O:0.997681
evaluated	O	O:0.983197
.	O	O:0.979073
	
I	O	O:0.996576
see	O	O:0.998912
one	O	O:0.998667
potential	O	O:0.979572
problem	O	O:0.983170
-	O	O:0.997595
beta	O	O:0.837388
is	O	O:0.999510
defined	O	O:0.925059
as	O	O:0.996358
1-dimensional	O	O:0.685875
,	O	O:0.996397
but	O	O:0.999481
its	O	O:0.996151
value	O	O:0.996557
is	O	O:0.999116
given	O	O:0.972830
as	O	O:0.995847
2-dimensional	O	O:0.726859
(	O	O:0.998782
dimensions	O	O:0.993447
of	O	O:0.999054
size	O	O:0.990963
1	O	O:0.998641
still	O	O:0.999375
count	O	O:0.990313
as	O	O:0.999653
dimensions	O	O:0.960164
)	O	O:0.996178
	
Can	O	O:0.986811
you	O	O:0.997335
provide	O	O:0.997106
an	O	O:0.999090
algorithm	O	O:0.993789
for	O	O:0.999047
computing	O	O:0.999016
them	O	O:0.990704
based	O	O:0.996953
on	O	O:0.999070
block	O	O:0.993780
size	O	O:0.992583
?	O	O:0.993039
	
If	O	O:0.977531
`	O	O:0.998423
X	O	O:0.868355
`	O	O:0.997568
is	O	O:0.998993
your	O	O:0.995805
array	O	O:0.982954
,	O	O:0.997403
#CODE	O	O:0.990444
	
You	O	O:0.995040
could	O	O:0.998906
cast	O	O:0.970540
the	O	O:0.999448
array	O	O:0.991700
to	O	O:0.999045
a	O	O:0.999642
list	O	B-API:0.591526
:	O	O:0.997144
#CODE	O	O:0.997285
	
But	O	O:0.997254
if	O	O:0.999134
you	O	O:0.999036
for	O	O:0.999412
example	O	O:0.997496
self	O	O:0.987608
compiled	O	O:0.997047
from	O	O:0.995086
the	O	O:0.998491
development	O	O:0.985435
version	O	O:0.995692
an	O	O:0.993966
update	O	O:0.966257
may	O	O:0.995389
fix	O	O:0.997076
most	O	O:0.994099
of	O	O:0.996903
it	O	O:0.987954
.	O	O:0.997195
	
In	O	O:0.993628
VTK	O	O:0.985201
I	O	O:0.998554
am	O	O:0.999773
able	O	O:0.996008
to	O	O:0.999432
use	O	O:0.999795
the	O	O:0.995134
following	O	O:0.981272
snippet	O	O:0.997730
to	O	O:0.999391
save	O	O:0.998817
the	O	O:0.997761
render	O	O:0.584683
window	O	O:0.997585
as	O	O:0.998677
an	O	O:0.994067
image	O	O:0.976478
.	O	O:0.983179
	
In	O	O:0.998958
other	O	O:0.998580
words	O	O:0.993899
,	O	O:0.998441
the	O	O:0.999617
4th	O	O:0.986619
row	O	O:0.994870
in	O	O:0.998728
A_sorted	O	O:0.931113
was	O	O:0.991788
the	O	O:0.999570
1st	O	O:0.991225
row	O	O:0.992613
in	O	O:0.999428
the	O	O:0.999714
original	O	O:0.990391
array	O	O:0.996344
,	O	O:0.996257
A	O	O:0.999154
,	O	O:0.998297
etc	O	O:0.992192
.	O	O:0.996454
	
Add	O	O:0.992133
a	O	O:0.985136
`	O	O:0.990076
return	O	B-API:0.788172
`	O	O:0.998659
statement	O	O:0.994971
at	O	O:0.999741
the	O	O:0.999819
end	O	O:0.989067
of	O	O:0.988308
the	O	O:0.984808
method	O	O:0.997441
.	O	O:0.987693
	
However	O	O:0.994596
,	O	O:0.999538
with	O	O:0.999656
different	O	O:0.999633
input	O	O:0.999206
sizes	O	O:0.996986
,	O	O:0.999693
using	O	O:0.998759
fft's	O	O:0.698068
to	O	O:0.994789
do	O	O:0.999961
a	O	O:0.998406
convolution	O	O:0.931710
can	O	O:0.999032
be	O	O:0.999839
considerably	O	O:0.992040
faster	O	O:0.677813
(	O	O:0.996408
Though	O	O:0.997048
I	O	O:0.998529
can't	O	O:0.999580
seem	O	O:0.988974
to	O	O:0.999932
come	O	O:0.999153
up	O	O:0.998327
with	O	O:0.999745
a	O	O:0.999486
good	O	O:0.968476
example	O	O:0.998778
,	O	O:0.999331
at	O	O:0.999542
the	O	O:0.989320
moment	O	O:0.997512
...	O	O:0.992058
)	O	O:0.997864
.	O	O:0.991051
	
That	O	O:0.973812
is	O	O:0.999605
a	O	O:0.997937
shallow	O	O:0.927547
copy	O	O:0.733044
...	O	O:0.968587
	
@USER	O	O:0.983574
The	O	O:0.996976
solutions	O	O:0.992839
there	O	O:0.998550
all	O	O:0.999738
make	O	O:0.996176
use	O	O:0.998164
of	O	O:0.995261
the	O	O:0.994393
fact	O	O:0.996150
that	O	O:0.998276
only	O	O:0.999032
a	O	O:0.999837
3x3	O	O:0.893607
sliding	O	O:0.787339
window	O	O:0.961704
is	O	O:0.996719
needed	O	O:0.981453
,	O	O:0.999172
but	O	O:0.998793
I	O	O:0.999445
need	O	O:0.999742
something	O	O:0.997040
that	O	O:0.996105
works	O	O:0.998542
for	O	O:0.999818
all	O	O:0.996218
sizes	O	O:0.995140
of	O	O:0.997108
templates	O	O:0.968574
.	O	O:0.995085
	
A	O	O:0.992557
masked	O	O:0.966132
array	O	O:0.956468
is	O	O:0.995769
useful	O	O:0.915760
here	O	O:0.876212
:	O	O:0.993413
#CODE	O	O:0.994248
	
Second	O	O:0.991102
I	O	O:0.997577
would	O	O:0.999754
like	O	O:0.997456
it	O	O:0.999901
to	O	O:0.999527
be	O	O:0.999848
easily	O	O:0.998744
expandable	O	O:0.978744
,	O	O:0.999754
that	O	O:0.998866
I	O	O:0.999729
can	O	O:0.999919
add	O	O:0.999481
new	O	O:0.997230
functions	O	O:0.981578
easily	O	O:0.961176
.	O	O:0.993302
	
If	O	O:0.995808
i	O	O:0.995469
have	O	O:0.999660
two	O	O:0.999244
variables	O	O:0.981562
-	O	O:0.999520
where	O	O:0.999333
they	O	O:0.995923
either	O	O:0.999237
are	O	O:0.999500
a	O	O:0.999074
1d	O	O:0.954819
array	O	O:0.998752
of	O	O:0.998602
values	O	O:0.973607
length	O	O:0.997232
n	O	O:0.992759
,	O	O:0.998970
or	O	O:0.998720
are	O	O:0.999794
a	O	O:0.999938
single	O	O:0.980755
value	O	O:0.997775
,	O	O:0.998472
how	O	O:0.998328
do	O	O:0.995431
i	O	O:0.999344
loop	O	O:0.997795
through	O	O:0.999089
them	O	O:0.989795
so	O	O:0.999653
that	O	O:0.998947
I	O	O:0.999826
get	O	O:0.999743
n	O	O:0.981799
values	O	O:0.991072
returned	O	O:0.939812
.	O	O:0.994672
	
I	O	O:0.996476
think	O	O:0.998532
masked	O	O:0.943537
arrays	O	O:0.985560
have	O	O:0.994879
been	O	O:0.988721
in	O	O:0.999661
numpy	O	O:0.995073
for	O	O:0.999719
a	O	O:0.997479
few	O	O:0.967805
years	O	O:0.988397
now	O	O:0.979769
.	O	O:0.995418
	
I	O	O:0.998725
have	O	O:0.998909
an	O	O:0.997633
array	O	O:0.999051
defined	O	O:0.953320
in	O	O:0.999610
this	O	O:0.988847
way	O	O:0.982355
(	O	O:0.998961
extracting	O	O:0.994766
the	O	O:0.998299
third	O	O:0.995562
column	O	O:0.998822
of	O	O:0.999668
a	O	O:0.993882
dataset	O	O:0.800180
):	O	O:0.992414
#CODE	O	O:0.993341
	
I	O	O:0.991608
wasn't	O	O:0.998916
aware	O	O:0.975046
of	O	O:0.998999
the	O	O:0.995356
option	O	O:0.999359
of	O	O:0.999131
using	O	O:0.998115
`	O	O:0.999382
data	O	O:0.735735
[	O	O:0.999587
list	O	O:0.983499
]`	O	O:0.998068
to	O	O:0.996402
select	O	O:0.998802
multiple	O	O:0.998264
columns	O	O:0.993045
.	O	O:0.991853
	
Beware	O	O:0.997651
that	O	O:0.998275
if	O	O:0.999692
the	O	O:0.999882
type	O	O:0.944263
of	O	O:0.999380
the	O	O:0.995577
output	O	O:0.995526
array	O	O:0.970027
is	O	O:0.992258
	
Any	O	O:0.980622
ideas	O	O:0.991262
how	O	O:0.997534
I	O	O:0.998591
would	O	O:0.999572
do	O	O:0.998362
this	O	O:0.999223
calculation	O	O:0.991412
in	O	O:0.999802
a	O	O:0.998424
simpler	O	O:0.940705
way	O	O:0.994365
?	O	O:0.992310
	
Those	O	O:0.999272
take	O	O:0.995120
up	O	O:0.998044
about	O	O:0.999242
15MB	O	O:0.972197
of	O	O:0.996640
space	O	O:0.983041
which	O	O:0.997552
,	O	O:0.999448
considering	O	O:0.998517
that	O	O:0.996626
I	O	O:0.999745
get	O	O:0.999751
about	O	O:0.995852
1000	O	O:0.989545
result	O	O:0.997946
files	O	O:0.991307
in	O	O:0.999525
a	O	O:0.997869
series	O	O:0.994969
,	O	O:0.998015
is	O	O:0.998990
unacceptable	O	O:0.932077
to	O	O:0.999163
save	O	O:0.985915
.	O	O:0.992494
	
I'm	O	O:0.992874
trying	O	O:0.996762
to	O	O:0.999329
implement	O	O:0.999676
a	O	O:0.997693
logic	O	O:0.988101
where	O	O:0.997058
I'm	O	O:0.997919
trying	O	O:0.999115
to	O	O:0.999663
subtract	O	O:0.998510
each	O	O:0.996692
element	O	O:0.998714
of	O	O:0.999461
an	O	O:0.997431
array	O	O:0.999152
from	O	O:0.997799
every	O	O:0.997261
other	O	O:0.998964
element	O	O:0.993283
of	O	O:0.995918
the	O	O:0.995234
array	O	O:0.997162
and	O	O:0.999833
then	O	O:0.999457
find	O	O:0.999097
the	O	O:0.999665
minimum	O	O:0.995087
difference	O	O:0.996657
of	O	O:0.999755
the	O	O:0.996474
result	O	O:0.996390
.	O	O:0.991100
	
My	O	O:0.994481
final	O	O:0.979986
matrix	O	O:0.997848
should	O	O:0.998765
have	O	O:0.999844
5416	O	O:0.999731
rows	O	O:0.996715
with	O	O:0.996974
500	O	O:0.994323
000	O	O:0.995011
column	O	O:0.998246
each	O	O:0.963638
.	O	O:0.990772
	
I	O	O:0.992415
am	O	O:0.999530
attempting	O	O:0.966844
to	O	O:0.999611
process	O	O:0.999786
data	O	O:0.999519
saved	O	O:0.996859
to	O	O:0.999613
CSV	O	O:0.999597
that	O	O:0.997194
may	O	O:0.999861
have	O	O:0.999847
missing	O	O:0.997920
values	O	O:0.993059
in	O	O:0.998689
an	O	O:0.999558
unknown	O	O:0.997390
number	O	O:0.996345
of	O	O:0.997512
columns	O	O:0.994632
(	O	O:0.999449
up	O	O:0.997068
to	O	O:0.996924
around	O	O:0.998916
30	O	O:0.969017
)	O	O:0.997198
.	O	O:0.985174
	
Actually	O	O:0.997064
the	O	O:0.998049
surprise	O	O:0.949501
is	O	O:0.998795
still	O	O:0.995679
hidden	O	O:0.992642
in	O	O:0.999511
a	O	O:0.994352
way	O	O:0.984559
,	O	O:0.999619
because	O	O:0.996612
in	O	O:0.999868
your	O	O:0.999430
examples	O	O:0.993150
`	O	O:0.999816
a	O	O:0.995866
[	O	O:0.998542
indices	O	O:0.992923
]`	O	O:0.962427
is	O	O:0.998376
the	O	O:0.999214
same	O	O:0.995400
as	O	O:0.997675
`	O	O:0.999634
a	O	O:0.994369
[	O	O:0.996301
indices	O	O:0.986932
[	O	O:0.995855
0	O	O:0.994899
]	O	O:0.997556
,	O	O:0.997167
indicies	O	O:0.976827
[	O	O:0.995376
1	O	O:0.989991
]]`	O	O:0.992768
but	O	O:0.987043
`	O	O:0.999685
a	O	O:0.994688
[	O	O:0.997829
indicies	O	O:0.994248
,	O	O:0.991421
:]	O	O:0.995502
`	O	O:0.990615
is	O	O:0.973760
`	O	O:0.999805
a	O	O:0.988825
[(	O	O:0.995715
indicies	O	O:0.983727
[	O	O:0.995901
0	O	O:0.995579
]	O	O:0.997511
,	O	O:0.997174
indicies	O	O:0.982908
[	O	O:0.996782
1	O	O:0.996113
])	O	O:0.994946
,	O	O:0.989599
:]	O	O:0.995167
`	O	O:0.996866
which	O	O:0.930984
is	O	O:0.999546
not	O	O:0.998560
a	O	O:0.999365
big	O	O:0.870769
surprise	O	O:0.993539
that	O	O:0.993492
it	O	O:0.995304
is	O	O:0.999555
different	O	O:0.963315
.	O	O:0.983903
	
Slice	O	O:0.967523
numpy	O	O:0.973679
array	O	O:0.987101
wth	O	O:0.999589
list	O	O:0.984941
of	O	O:0.999634
wanted	O	O:0.999087
rows	O	O:0.976253
	
Here	O	O:0.929316
is	O	O:0.999607
a	O	O:0.995772
slightly	O	O:0.983254
more	O	O:0.991783
complex	O	O:0.955638
version	O	O:0.993916
that	O	O:0.990314
always	O	O:0.999138
returns	O	O:0.999653
a	O	O:0.998951
view	O	O:0.745049
into	O	O:0.996720
the	O	O:0.996602
original	O	O:0.956587
array	O	O:0.982814
(	O	O:0.999393
of	O	O:0.999662
course	O	O:0.994494
provided	O	O:0.999354
that	O	O:0.996109
you	O	O:0.999013
don't	O	O:0.999504
do	O	O:0.999123
any	O	O:0.999356
advanced	O	O:0.874758
indexing	O	O:0.976108
;	O	O:0.998184
this	O	O:0.989880
should	O	O:0.999641
be	O	O:0.999775
guaranteed	O	O:0.998935
by	O	O:0.997744
your	O	O:0.980036
specification	O	O:0.988337
of	O	O:0.999605
valid	O	O:0.955149
indices	O	O:0.882834
):	O	O:0.986226
#CODE	O	O:0.992607
	
If	O	O:0.993889
the	O	O:0.998054
array	O	O:0.942581
is	O	O:0.997273
one-dimensional	O	O:0.922499
,	O	O:0.998929
this	O	O:0.988378
means	O	O:0.992837
it	O	O:0.997965
has	O	O:0.998732
no	O	O:0.995779
effect	O	O:0.991793
.	O	O:0.995219
	
The	O	O:0.992483
problem	O	O:0.996041
with	O	O:0.998738
using	O	O:0.996869
`	O	O:0.998728
view	O	B-API:0.932667
`	O	O:0.999672
,	O	O:0.985429
however	O	O:0.998127
,	O	O:0.996774
is	O	O:0.999723
that	O	O:0.998771
a	O	O:0.999435
32-bit	O	O:0.972132
integer	O	O:0.912425
becomes	O	O:0.991477
viewed	O	O:0.983075
as	O	O:0.994040
4	O	O:0.929080
8-b	O	O:0.966106
it	O	O:0.997279
integers	O	O:0.970011
,	O	O:0.998808
and	O	O:0.999790
we	O	O:0.999621
only	O	O:0.999151
care	O	O:0.999153
about	O	O:0.998562
the	O	O:0.999097
value	O	O:0.982237
in	O	O:0.998509
the	O	O:0.999800
last	O	O:0.987012
8-b	O	O:0.985484
its	O	O:0.990623
.	O	O:0.993928
	
So	O	O:0.997822
this	O	O:0.996315
won't	O	O:0.998577
solve	O	O:0.994627
OP's	O	O:0.994613
question	O	O:0.889411
(	O	O:0.994469
unless	O	O:0.997528
his	O	O:0.994293
nD	O	O:0.965928
is	O	O:0.997074
2	O	O:0.967167
or	O	O:0.997402
3	O	O:0.979113
)	O	O:0.998216
.	O	O:0.986375
	
Note	O	O:0.950246
:	O	O:0.999078
this	O	O:0.995160
was	O	O:0.998714
meant	O	O:0.998380
as	O	O:0.999745
a	O	O:0.987592
comment	O	O:0.852986
,	O	O:0.998950
not	O	O:0.998883
an	O	O:0.996941
answer	O	O:0.991651
...	O	O:0.998858
just	O	O:0.996489
needed	O	O:0.999814
more	O	O:0.992633
room	O	O:0.997575
to	O	O:0.999664
put	O	O:0.998114
in	O	O:0.999391
the	O	O:0.999107
example	O	O:0.990775
above	O	O:0.974087
.	O	O:0.995821
	
If	O	O:0.994474
I	O	O:0.999258
wanted	O	O:0.999613
to	O	O:0.995190
change	O	O:0.999617
the	O	O:0.999523
data	O	O:0.997358
type	O	O:0.992746
of	O	O:0.999874
a	O	O:0.998423
numpy	O	O:0.995938
array	O	O:0.996854
permanently	O	O:0.984350
,	O	O:0.997564
is	O	O:0.997822
reassignment	O	O:0.950298
the	O	O:0.999468
best	O	O:0.933244
way	O	O:0.989327
?	O	O:0.994823
	
The	O	O:0.991022
shifted	O	O:0.977931
shm-allocated	O	O:0.977619
array	O	O:0.978951
is	O	O:0.997747
indeed	O	O:0.994896
accessible	O	O:0.993083
from	O	O:0.998455
other	O	O:0.990510
processes	O	O:0.989918
.	O	O:0.979224
	
The	O	O:0.996754
second	O	O:0.985529
solution	O	O:0.997109
you	O	O:0.996165
propose	O	O:0.974411
is	O	O:0.999171
better	O	O:0.984099
from	O	O:0.999381
that	O	O:0.998078
point	O	O:0.999197
of	O	O:0.999267
view	O	B-API:0.634620
.	O	O:0.996640
	
It	O	O:0.979213
checks	O	O:0.960265
for	O	O:0.998814
nans	O	O:0.718996
and	O	O:0.999410
empty	O	O:0.996295
input	O	O:0.976187
strings	O	O:0.891191
.	O	O:0.981131
	
The	O	O:0.994641
ability	O	O:0.992082
to	O	O:0.999483
extract	O	O:0.996875
columns	O	O:0.998896
and	O	O:0.999970
rows	O	O:0.998495
by	O	O:0.985757
header	O	O:0.996805
name	O	O:0.911973
(	O	O:0.999568
as	O	O:0.998422
in	O	O:0.999254
the	O	O:0.999043
above	O	O:0.989364
example	O	O:0.991909
)	O	O:0.997735
	
With	O	O:0.983942
Python	O	O:0.990712
2.6.5	O	O:0.977464
or	O	O:0.995749
Python	O	O:0.973960
2.7	O	O:0.979112
,	O	O:0.993912
and	O	O:0.998109
Numpy	O	O:0.979877
1.5.0	O	O:0.957088
,	O	O:0.998110
I	O	O:0.999011
don't	O	O:0.998280
get	O	O:0.997744
any	O	O:0.998965
error	O	O:0.978385
.	O	O:0.986078
	
Returns	O	O:0.995892
a	O	O:0.997112
boolean	O	O:0.849016
array	O	O:0.996726
the	O	O:0.999193
same	O	O:0.993564
length	O	O:0.995211
as	O	O:0.989695
`	O	O:0.998203
ar1	O	B-API:0.767483
`	O	O:0.999583
that	O	O:0.841014
is	O	O:0.999408
True	O	O:0.950092
	
If	O	O:0.994996
the	O	O:0.999615
objects	O	O:0.981631
in	O	O:0.998211
the	O	O:0.997979
array	O	O:0.975926
are	O	O:0.997904
not	O	O:0.998956
fixed	O	O:0.995974
size	O	O:0.966495
(	O	O:0.999435
such	O	O:0.998750
as	O	O:0.999967
your	O	O:0.965920
MultiEvent	O	O:0.730875
)	O	O:0.999828
the	O	O:0.996797
operations	O	O:0.991996
can	O	O:0.997494
become	O	O:0.999547
much	O	O:0.992660
slower	O	O:0.978505
.	O	O:0.990154
	
@USER	O	O:0.833095
:	O	O:0.993692
True	O	O:0.993189
the	O	O:0.999610
code	O	O:0.969413
I	O	O:0.998587
gave	O	O:0.985436
would	O	O:0.996478
not	O	O:0.999727
be	O	O:0.999758
all	O	O:0.999602
the	O	O:0.995713
efficient	O	O:0.953312
	
You	O	O:0.993246
print	O	O:0.978393
`	O	O:0.999019
Length	O	O:0.986627
of	O	O:0.999444
together	O	O:0.973372
2708000000	O	O:0.959534
`	O	O:0.997604
-	O	O:0.997922
where	O	O:0.994797
is	O	O:0.999408
that	O	O:0.992115
`	O	O:0.999425
print	O	O:0.579013
`	O	O:0.998825
statement	O	O:0.986070
in	O	O:0.999943
your	O	O:0.996915
code	O	O:0.981564
?	O	O:0.997632
	
Is	O	O:0.996045
there	O	O:0.999439
a	O	O:0.998821
way	O	O:0.990983
to	O	O:0.999535
copy	O	O:0.990744
just	O	O:0.998556
the	O	O:0.998995
reference	O	O:0.992236
to	O	O:0.998495
b	O	O:0.999642
,	O	O:0.999754
so	O	O:0.999645
that	O	O:0.999628
when	O	O:0.999571
I	O	O:0.999865
change	O	O:0.998318
b	O	O:0.940056
,	O	O:0.999000
the	O	O:0.998407
change	O	O:0.699063
is	O	O:0.999305
reflected	O	O:0.951579
in	O	O:0.997771
`	O	O:0.999535
a	O	O:0.987760
[	O	O:0.990028
'	O	O:0.998364
B	O	O:0.989875
']	O	O:0.986423
[	O	O:0.987024
i	O	O:0.980830
]`	O	O:0.993398
?	O	O:0.987147
	
If	O	O:0.992045
the	O	O:0.995649
matrix	O	O:0.887558
is	O	O:0.996904
not	O	O:0.998054
symmetric	O	O:0.998026
be	O	O:0.997350
careful	O	O:0.993205
about	O	O:0.990565
the	O	O:0.998126
order	O	O:0.873157
in	O	O:0.996401
dot	O	O:0.729558
.	O	O:0.991760
	
So	O	O:0.997336
I	O	O:0.999459
changed	O	O:0.996976
the	O	O:0.977178
"	O	O:0.994418
array	O	O:0.972777
"	O	O:0.996843
to	O	O:0.990404
matrix	O	O:0.998483
.	O	O:0.989667
	
config	O	O:0.963597
paths	O	O:0.932203
,	O	O:0.996666
cflags	O	O:0.823774
.	O	O:0.983649
	
gnibbler	O	O:0.845481
:	O	O:0.995634
That	O	O:0.998980
completely	O	O:0.994101
misses	O	O:0.996357
the	O	O:0.998984
point	O	O:0.985946
of	O	O:0.999469
the	O	O:0.997827
algorithm	O	O:0.993997
,	O	O:0.999764
this	O	O:0.989072
is	O	O:0.999803
a	O	O:0.998485
simple	O	O:0.948827
example	O	O:0.982966
,	O	O:0.999696
what	O	O:0.997326
I	O	O:0.998953
am	O	O:0.999658
doing	O	O:0.954356
is	O	O:0.998310
Gauss-Seidel	O	O:0.768655
iteration	O	O:0.996582
,	O	O:0.993006
which	O	O:0.992763
infers	O	O:0.990616
information	O	O:0.999431
about	O	O:0.999390
a	O	O:0.999127
location	O	O:0.956596
in	O	O:0.999623
a	O	O:0.998686
matrix	O	O:0.998495
by	O	O:0.999491
using	O	O:0.999492
data	O	O:0.953051
that	O	O:0.973265
has	O	O:0.992168
already	O	O:0.996585
been	O	O:0.996104
inferred	O	O:0.971290
in	O	O:0.999481
previous	O	O:0.994965
entries	O	O:0.976973
.	O	O:0.983387
	
how	O	O:0.993456
do	O	O:0.997182
i	O	O:0.998938
find	O	O:0.995987
the	O	O:0.999808
smallest	O	O:0.998209
then	O	O:0.995628
if	O	O:0.999947
this	O	O:0.999459
gives	O	O:0.998396
me	O	O:0.995554
the	O	O:0.998590
n	O	O:0.994631
greatest	O	O:0.992807
values	O	O:0.976756
?	O	O:0.994493
	
@USER	O	O:0.933574
:	O	O:0.998214
you	O	O:0.999353
can	O	O:0.999911
wrap	O	O:0.999696
the	O	O:0.999670
insides	O	O:0.991226
the	O	O:0.995927
prange	O	O:0.806588
loop	O	O:0.994685
in	O	O:0.996714
`	O	O:0.999833
with	O	O:0.959286
nogil	O	O:0.615600
:	O	O:0.995957
`	O	O:0.999297
to	O	O:0.996878
use	O	O:0.999858
any	O	O:0.970155
Python	O	O:0.923595
constructs	O	O:0.970679
.	O	O:0.975466
	
For	O	O:0.997161
each	O	O:0.961212
`	O	O:0.998559
Xi	O	O:0.962097
`	O	O:0.999571
greater	O	O:0.967489
than	O	O:0.991352
`	O	O:0.997257
lower_limit_X	O	B-API:0.793687
`	O	O:0.998305
and	O	O:0.998959
less	O	O:0.995240
than	O	O:0.944609
`	O	O:0.998056
upper_limit_X	O	B-API:0.728833
`	O	O:0.999532
,	O	O:0.998307
I	O	O:0.999645
would	O	O:0.999840
like	O	O:0.999197
to	O	O:0.999920
get	O	O:0.999937
the	O	O:0.999777
number	O	O:0.997641
of	O	O:0.996168
`	O	O:0.998908
Yi	O	O:0.991156
`'	O	O:0.996577
s	O	O:0.976348
that	O	O:0.997357
are	O	O:0.999384
greater	O	O:0.998023
than	O	O:0.974976
`	O	O:0.997692
lower_limit_Y	O	B-API:0.753533
`	O	O:0.998327
and	O	O:0.998959
less	O	O:0.995208
than	O	O:0.928044
`	O	O:0.997456
upper_limit_Y	O	B-API:0.793338
`	O	O:0.998409
.	O	O:0.971213
	
and	O	O:0.999082
find	O	O:0.997730
the	O	O:0.997153
roots	O	O:0.944610
?	O	O:0.990298
	
I'd	O	O:0.998868
like	O	O:0.997826
to	O	O:0.999453
generalize	O	O:0.999561
this	O	O:0.997776
to	O	O:0.999714
an	O	O:0.999917
ellipsoid	O	O:0.997790
,	O	O:0.999846
that	O	O:0.999688
could	O	O:0.999776
ideally	O	O:0.999935
have	O	O:0.999655
any	O	O:0.997142
rotation	O	O:0.989252
.	O	O:0.979721
	
Is	O	O:0.994922
there	O	O:0.998568
any	O	O:0.998680
way	O	O:0.996520
to	O	O:0.997975
integrate	O	O:0.999279
the	O	O:0.999090
entire	O	O:0.991614
array	O	O:0.999407
at	O	O:0.999533
once	O	O:0.996322
,	O	O:0.999711
or	O	O:0.999465
do	O	O:0.997080
I	O	O:0.999896
need	O	O:0.998799
to	O	O:0.995663
integrate	O	O:0.997555
element-by-element	O	O:0.962465
?	O	O:0.990591
	
I	O	O:0.998715
need	O	O:0.998785
to	O	O:0.996659
sum	O	O:0.995301
	
with	O	O:0.943350
'	O	O:0.996268
f	O	O:0.980753
'	O	O:0.994730
and	O	O:0.997483
'	O	O:0.997505
F	O	O:0.926499
'	O	O:0.997671
,	O	O:0.997372
or	O	O:0.997683
before	O	O:0.989574
and	O	O:0.998681
after	O	O:0.998237
the	O	O:0.990708
decimal	O	O:0.899912
point	O	O:0.983772
for	O	O:0.999636
a	O	O:0.996733
floating	O	O:0.776779
	
You	O	O:0.995116
can	O	O:0.998090
write	O	O:0.999785
that	O	O:0.999091
as	O	O:0.999898
a	O	O:0.982707
matrix	O	O:0.682945
:	O	O:0.992837
#CODE	O	O:0.994315
	
In	O	O:0.995992
fact	O	O:0.987185
,	O	O:0.999749
if	O	O:0.998901
you	O	O:0.999096
use	O	O:0.998918
tuples	O	O:0.946220
as	O	O:0.993852
Justin	O	O:0.984625
suggested	O	O:0.981626
and	O	O:0.999882
iterate	O	O:0.993029
directly	O	O:0.994172
over	O	O:0.996073
the	O	O:0.999841
rows	O	O:0.986489
of	O	O:0.998894
the	O	O:0.997946
array	O	O:0.974769
(	O	O:0.993914
`	O	O:0.999212
for	O	O:0.998270
row	O	O:0.998151
in	O	O:0.995657
data	O	O:0.972790
:	O	O:0.999052
`)	O	O:0.999666
,	O	O:0.998782
it's	O	O:0.997289
actually	O	O:0.997228
faster	O	O:0.996445
than	O	O:0.980601
my	O	O:0.989628
method	O	O:0.998325
below	O	O:0.978887
.	O	O:0.996265
	
Using	O	O:0.986983
the	O	O:0.993015
`	O	O:0.996164
ctypedef	O	B-API:0.801087
`	O	O:0.999554
keyword	O	O:0.939470
in	O	O:0.998308
Cython	O	O:0.989826
will	O	O:0.997965
make	O	O:0.998708
it	O	O:0.999862
add	O	O:0.992826
the	O	O:0.997729
C	O	O:0.661172
/	O	O:0.995094
C++	O	O:0.976650
`	O	O:0.995522
typedef	O	B-API:0.982560
`	O	O:0.999131
statement	O	O:0.996499
with	O	O:0.999561
the	O	O:0.999797
given	O	O:0.994890
types	O	O:0.971318
in	O	O:0.999284
the	O	O:0.998117
compiled	O	O:0.979029
Cython-code	O	O:0.920284
.	O	O:0.990287
	
Here	O	O:0.906803
is	O	O:0.998595
how	O	O:0.995173
I	O	O:0.999450
would	O	O:0.999571
compute	O	O:0.987575
a	O	O:0.999903
subset	O	O:0.925794
of	O	O:0.999821
the	O	O:0.998884
elements	O	O:0.997527
of	O	O:0.997769
C	O	O:0.987473
given	O	O:0.998033
a	O	O:0.998304
list	O	O:0.962253
of	O	O:0.999418
tuples	O	O:0.982346
of	O	O:0.994679
C	O	O:0.982212
index	O	O:0.998798
values	O	O:0.952322
.	O	O:0.992252
	
In	O	O:0.996042
my	O	O:0.998679
specific	O	O:0.995973
problem	O	O:0.986549
`	O	O:0.993625
A	O	O:0.995727
,	O	O:0.999599
B	O	O:0.948399
`	O	O:0.998283
are	O	O:0.995628
slices	O	O:0.999347
out	O	O:0.996601
of	O	O:0.999768
a	O	O:0.994277
bigger	O	O:0.943280
3-dimensional	O	O:0.979449
array	O	O:0.973064
`	O	O:0.997324
Z	O	O:0.789330
`	O	O:0.999076
,	O	O:0.984476
	
The	O	O:0.994060
solution	O	O:0.996140
to	O	O:0.999386
get	O	O:0.999876
all	O	O:0.999851
the	O	O:0.999948
data	O	O:0.997624
you	O	O:0.999922
need	O	O:0.999888
as	O	O:0.999907
you	O	O:0.998827
build	O	O:0.982846
the	O	O:0.999014
list	O	O:0.978157
,	O	O:0.999899
by	O	O:0.998740
using	O	O:0.998702
the	O	O:0.988238
accessor	O	O:0.907582
on	O	O:0.998692
each	O	O:0.973546
iteration	O	O:0.996775
.	O	O:0.991467
	
Edit	O	O:0.895513
:	O	O:0.996771
Actually	O	O:0.999333
you	O	O:0.999511
could	O	O:0.999908
also	O	O:0.999891
sort	O	O:0.999222
both	O	O:0.998044
arrays	O	O:0.996097
into	O	O:0.967596
one	O	O:0.969017
(	O	O:0.994290
and	O	O:0.999606
remember	O	O:0.985243
which	O	O:0.990894
one	O	O:0.996789
belongs	O	O:0.995505
to	O	O:0.997478
which	O	O:0.999778
class	O	O:0.998864
)	O	O:0.999775
,	O	O:0.999886
then	O	O:0.998503
go	O	O:0.999745
from	O	O:0.999855
there	O	O:0.999580
by	O	O:0.999467
checking	O	O:0.994481
where	O	O:0.997145
two	O	O:0.997831
of	O	O:0.999205
the	O	O:0.998224
different	O	O:0.996778
class	O	O:0.994240
are	O	O:0.999388
next	O	O:0.993370
to	O	O:0.998940
each	O	O:0.998853
other	O	O:0.990154
.	O	O:0.996030
	
How	O	O:0.986320
can	O	O:0.996661
I	O	O:0.999881
integrate	O	O:0.995497
it	O	O:0.998004
from	O	O:0.999827
a	O	O:0.999622
given	O	O:0.980861
value	O	O:0.996034
`	O	O:0.999726
a	O	O:0.982751
`	O	O:0.999534
to	O	O:0.999557
another	O	O:0.999922
value	O	O:0.994563
`	O	O:0.998722
b	O	O:0.943859
`	O	O:0.999818
so	O	O:0.996754
that	O	O:0.999616
the	O	O:0.999102
output	O	O:0.940468
is	O	O:0.999577
a	O	O:0.998255
corresponding	O	O:0.919154
array	O	O:0.985198
?	O	O:0.990604
	
I	O	O:0.998654
want	O	O:0.998600
to	O	O:0.996007
multiply	O	O:0.999650
a	O	O:0.997604
sparse	O	O:0.930361
matrix	O	O:0.991573
A	O	O:0.997795
,	O	O:0.999568
with	O	O:0.998768
a	O	O:0.997645
matrix	O	O:0.994931
B	O	O:0.989081
which	O	O:0.997690
has	O	O:0.991505
0	O	O:0.995980
,	O	O:0.997772
-1	O	O:0.986212
,	O	O:0.999043
or	O	O:0.998731
1	O	O:0.998195
as	O	O:0.999270
elements	O	O:0.944419
.	O	O:0.985244
	
If	O	O:0.997329
you	O	O:0.999743
turn	O	O:0.998122
a	O	O:0.998231
`	O	O:0.996513
dict	O	O:0.836250
`	O	O:0.999870
into	O	O:0.959087
an	O	O:0.998799
array	O	O:0.992515
,	O	O:0.998549
you'll	O	O:0.998166
get	O	O:0.997079
an	O	O:0.997517
object	O	O:0.995496
array	O	O:0.982860
.	O	O:0.988026
	
`	O	O:0.987042
Holy	O	O:0.973113
CPU	O	O:0.998520
cycles	O	O:0.973809
batman	O	O:0.950677
!	O	O:0.984413
	
Note	O	O:0.931908
:	O	O:0.997899
Xarray	O	O:0.961629
and	O	O:0.999618
Yarray	O	O:0.971780
are	O	O:0.996760
each	O	O:0.996857
single-column	O	O:0.992608
vectors	O	O:0.994511
with	O	O:0.999109
data	O	O:0.998676
at	O	O:0.999728
each	O	O:0.994089
index	O	O:0.999905
that	O	O:0.998803
links	O	O:0.998131
the	O	O:0.999518
two	O	O:0.996943
arrays	O	O:0.995195
as	O	O:0.999834
sets	O	O:0.987499
of	O	O:0.998658
x	O	O:0.977574
,	O	O:0.999594
y	O	O:0.991473
coordinates	O	O:0.964713
.	O	O:0.990590
	
Yeah	O	O:0.977321
,	O	O:0.999082
my	O	O:0.997162
rule-of-thumb	O	O:0.780659
is	O	O:0.996024
**	O	O:0.998888
numpy	O	O:0.989088
**	O	O:0.997651
for	O	O:0.999254
anything	O	O:0.997977
that	O	O:0.994946
can	O	O:0.999061
handle	O	O:0.999736
small	O	O:0.996612
amounts	O	O:0.994547
of	O	O:0.989450
latency	O	O:0.950463
but	O	O:0.994898
has	O	O:0.997176
the	O	O:0.999294
potential	O	O:0.983263
to	O	O:0.997381
be	O	O:0.999842
very	O	O:0.996665
large	O	O:0.979306
,	O	O:0.996262
**	O	O:0.998491
lists	O	O:0.941648
**	O	O:0.998926
for	O	O:0.999754
smaller	O	O:0.995576
data	O	O:0.997724
sets	O	O:0.998045
where	O	O:0.997895
latency	O	O:0.996880
critical	O	O:0.979818
,	O	O:0.998961
and	O	O:0.999776
of	O	O:0.998836
course	O	O:0.925880
**	O	O:0.999879
real	O	O:0.878833
benchmarking	O	O:0.954289
**	O	O:0.975888
FTW	O	O:0.982950
:)	O	O:0.984619
	
You	O	O:0.998118
need	O	O:0.996575
to	O	O:0.999578
know	O	O:0.999688
what	O	O:0.999278
kind	O	O:0.995554
of	O	O:0.998994
information	O	O:0.954616
is	O	O:0.999519
stored	O	O:0.923107
in	O	O:0.999578
each	O	O:0.991541
field	O	O:0.991995
for	O	O:0.999051
the	O	O:0.996639
`	O	O:0.977945
struct	O	B-API:0.950788
`	O	O:0.998807
module	O	O:0.983551
to	O	O:0.999754
make	O	O:0.999716
sense	O	O:0.997846
of	O	O:0.999531
each	O	O:0.973360
field	O	O:0.989482
.	O	O:0.990754
	
Once	O	O:0.996982
you	O	O:0.999424
have	O	O:0.999705
this	O	O:0.999389
array	O	O:0.999226
,	O	O:0.999775
you	O	O:0.999550
can	O	O:0.999555
get	O	O:0.999994
your	O	O:0.999915
sums	O	O:0.991957
for	O	O:0.999857
each	O	O:0.984088
vertex	O	O:0.982544
as	O	O:0.995118
#CODE	O	O:0.974180
	
Where	O	O:0.989554
are	O	O:0.994110
`	O	O:0.999434
plot	O	B-API:0.600650
`	O	O:0.999063
and	O	O:0.987879
`	O	O:0.999763
show	O	B-API:0.669462
`	O	O:0.999234
coming	O	O:0.900258
from	O	O:0.997659
?	O	O:0.990148
	
But	O	O:0.991275
it	O	O:0.997636
might	O	O:0.998798
be	O	O:0.996911
easier	O	O:0.950924
(	O	O:0.987883
and	O	O:0.999814
more	O	O:0.990547
understandable	O	O:0.995029
when	O	O:0.996886
you	O	O:0.999303
look	O	O:0.998627
at	O	O:0.999806
the	O	O:0.999566
code	O	O:0.976794
in	O	O:0.999291
the	O	O:0.998945
future	O	O:0.992349
)	O	O:0.998968
to	O	O:0.999717
just	O	O:0.999946
drop	O	O:0.975351
into	O	O:0.991269
Cython	O	O:0.997692
to	O	O:0.995980
get	O	O:0.999810
this	O	O:0.998589
done	O	O:0.990822
.	O	O:0.996390
	
I	O	O:0.996621
can't	O	O:0.998867
comment	O	O:0.984284
on	O	O:0.998931
the	O	O:0.998383
Perl	O	O:0.995208
code	O	O:0.991913
,	O	O:0.999628
I	O	O:0.999120
simply	O	O:0.995679
don't	O	O:0.997455
know	O	O:0.995789
it	O	O:0.999422
at	O	O:0.998019
all	O	O:0.992981
.	O	O:0.989898
	
I	O	O:0.995416
updated	O	O:0.996501
the	O	O:0.989067
answer	O	O:0.986664
with	O	O:0.998434
a	O	O:0.999394
full	O	O:0.954371
example	O	O:0.991022
.	O	O:0.991212
	
There	O	O:0.994942
you	O	O:0.998964
will	O	O:0.999808
find	O	O:0.998877
C	O	O:0.998974
code	O	O:0.992785
which	O	O:0.991247
provides	O	O:0.996363
the	O	O:0.999874
same	O	O:0.993151
functionality	O	O:0.995048
as	O	O:0.998664
`	O	O:0.990181
fmincon	O	B-API:0.947811
`	O	O:0.997532
.	O	O:0.943343
	
so	O	O:0.988367
for	O	O:0.997571
instance	O	O:0.986800
,	O	O:0.998357
for	O	O:0.999406
an	O	O:0.993333
array	O	O:0.996468
the	O	O:0.997824
code	O	O:0.971435
looked	O	O:0.993629
like	O	O:0.995198
#CODE	O	O:0.997536
	
I've	O	O:0.984009
been	O	O:0.982453
trying	O	O:0.995764
to	O	O:0.999593
find	O	O:0.999914
a	O	O:0.999262
solution	O	O:0.991590
for	O	O:0.998696
hours	O	O:0.935251
.	O	O:0.984109
	
Note	O	O:0.998635
that	O	O:0.998829
as	O	O:0.999825
implemented	O	O:0.991394
here	O	O:0.975234
,	O	O:0.998858
the	O	O:0.996135
first	O	O:0.965848
method	O	O:0.998498
gives	O	O:0.999522
incorrect	O	O:0.995592
results	O	O:0.998442
according	O	O:0.981025
to	O	O:0.998507
my	O	O:0.999716
test	O	O:0.874328
.	O	O:0.997510
	
This	O	O:0.972474
is	O	O:0.998438
my	O	O:0.996849
test	O	O:0.899480
code	O	O:0.960002
:	O	O:0.995845
#CODE	O	O:0.996178
	
This	O	O:0.994998
will	O	O:0.996375
short-circuit	O	O:0.996593
if	O	O:0.999368
you	O	O:0.999732
just	O	O:0.999684
want	O	O:0.999817
to	O	O:0.999317
determine	O	O:0.999604
if	O	O:0.998970
any	O	O:0.999472
match	O	O:0.982304
exists	O	O:0.990742
.	O	O:0.994179
	
It	O	O:0.996232
also	O	O:0.994340
helps	O	O:0.998663
to	O	O:0.999141
know	O	O:0.999642
that	O	O:0.999851
a	O	O:0.999608
resource	O	O:0.996997
like	O	O:0.991614
Wolfram	O	O:0.996792
Alpha	O	O:0.954592
is	O	O:0.998962
available	O	O:0.974549
to	O	O:0.999280
you	O	O:0.999807
at	O	O:0.999791
all	O	O:0.998632
times	O	O:0.984328
.	O	O:0.991346
	
What	O	O:0.994009
I	O	O:0.998329
meant	O	O:0.995003
was	O	O:0.977016
if	O	O:0.998065
we	O	O:0.997059
had	O	O:0.998671
three	O	O:0.993247
arrays	O	O:0.931944
`	O	O:0.997398
X	O	O:0.971551
=[	O	O:0.999157
0	O	O:0.984345
1	O	O:0.983081
2	O	O:0.985026
]	O	O:0.993020
,	O	O:0.996214
Y	O	O:0.985403
=[	O	O:0.996364
0	O	O:0.983419
1	O	O:0.987130
1	O	O:0.977725
]	O	O:0.988599
,	O	O:0.993507
and	O	O:0.999203
Z	O	O:0.987368
=[	O	O:0.995033
0	O	O:0.979620
2	O	O:0.977575
2	O	O:0.975597
]`	O	O:0.997269
there	O	O:0.992031
would	O	O:0.998704
be	O	O:0.999818
six	O	O:0.999653
values	O	O:0.944859
in	O	O:0.998479
the	O	O:0.999606
range	O	O:0.999410
of	O	O:0.998021
greater	O	O:0.995720
than	O	O:0.998494
or	O	O:0.998906
equal	O	O:0.987549
1	O	O:0.983890
and	O	O:0.997317
and	O	O:0.999687
less	O	O:0.985556
than	O	O:0.989531
or	O	O:0.999270
equal	O	O:0.996989
to	O	O:0.997442
2	O	O:0.997547
.	O	O:0.990823
	
You	O	O:0.987942
should	O	O:0.998870
really	O	O:0.999142
split	O	O:0.991464
this	O	O:0.996702
into	O	O:0.985345
two	O	O:0.999389
separate	O	O:0.982700
questions	O	O:0.993695
since	O	O:0.997214
each	O	O:0.989103
part	O	O:0.993962
is	O	O:0.998935
distinct	O	O:0.848354
.	O	O:0.972924
	
This	O	O:0.990057
doesn't	O	O:0.992704
answer	O	O:0.999806
your	O	O:0.998083
problem	O	O:0.988286
exactly	O	O:0.992357
,	O	O:0.998899
but	O	O:0.998935
I	O	O:0.999605
think	O	O:0.999654
especially	O	O:0.973371
with	O	O:0.998316
the	O	O:0.999180
sum	O	O:0.965675
issue	O	O:0.999299
that	O	O:0.997309
you	O	O:0.999037
should	O	O:0.999405
see	O	O:0.999794
significant	O	O:0.997106
speedups	O	O:0.988701
with	O	O:0.998235
these	O	O:0.998971
changes	O	O:0.985838
.	O	O:0.990157
	
Basically	O	O:0.987531
you're	O	O:0.999214
iterating	O	O:0.998441
through	O	O:0.995956
each	O	O:0.987130
item	O	O:0.983833
in	O	O:0.995673
`	O	O:0.998057
Xa	O	B-API:0.907152
`	O	O:0.998697
and	O	O:0.997393
omitting	O	O:0.997531
the	O	O:0.994867
ones	O	O:0.982175
that	O	O:0.997978
don't	O	O:0.999947
fall	O	O:0.997677
with	O	O:0.999364
the	O	O:0.997802
range	O	O:0.992128
.	O	O:0.986847
	
This	O	O:0.990812
code	O	O:0.961155
has	O	O:0.999095
been	O	O:0.992354
written	O	O:0.992807
following	O	O:0.991635
the	O	O:0.994125
tips	O	O:0.662282
(	O	O:0.995266
and	O	O:0.999871
copy	O	O:0.672299
/	O	O:0.982358
pasting	O	O:0.611826
):	O	O:0.960378
#URL	O	O:0.972733
	
I	O	O:0.990985
would	O	O:0.999422
look	O	O:0.978423
at	O	O:0.999924
this	O	O:0.976859
question	O	O:0.975580
:	O	O:0.988051
#URL	O	O:0.985336
	
As	O	O:0.986532
@USER	O	O:0.997533
-Anderson	O	O:0.982012
asked	O	O:0.977282
,	O	O:0.997803
why	O	O:0.996887
not	O	O:0.997610
avoid	O	O:0.997531
making	O	O:0.991957
an	O	O:0.985132
array	O	O:0.986400
?	O	O:0.992474
	
to	O	O:0.997936
create	O	O:0.999101
such	O	O:0.998761
an	O	O:0.999213
array	O	O:0.968906
.	O	O:0.982734
	
In	O	O:0.994961
short	O	O:0.985467
,	O	O:0.999348
I	O	O:0.999349
find	O	O:0.996882
class	O	O:0.996755
C	O	O:0.983333
to	O	O:0.998230
provide	O	O:0.999178
an	O	O:0.998004
implementation	O	O:0.997326
that	O	O:0.992729
is	O	O:0.999539
over	O	O:0.989458
60x	O	O:0.976722
faster	O	O:0.983771
than	O	O:0.976245
the	O	O:0.997992
method	O	O:0.997035
in	O	O:0.999255
the	O	O:0.999846
original	O	O:0.993315
post	O	O:0.924781
.	O	O:0.994097
	
I	O	O:0.989753
suggest	O	O:0.997490
allocating	O	O:0.976724
an	O	O:0.998400
array	O	O:0.998035
of	O	O:0.999254
the	O	O:0.997819
correct	O	O:0.999205
size	O	O:0.994734
up-front	O	O:0.993666
,	O	O:0.999821
then	O	O:0.997785
populating	O	O:0.998540
it	O	O:0.999726
with	O	O:0.999882
data	O	O:0.997309
in	O	O:0.999930
each	O	O:0.985841
iteration	O	O:0.994726
.	O	O:0.991063
	
edited	O	O:0.982491
my	O	O:0.995240
solution	O	O:0.993500
to	O	O:0.997126
include	O	O:0.999465
what	O	O:0.995592
I	O	O:0.998630
would	O	O:0.999466
do	O	O:0.990922
.	O	O:0.999494
let	O	O:0.983576
me	O	O:0.996878
know	O	O:0.988849
if	O	O:0.999650
this	O	O:0.998660
work	O	O:0.997879
,	O	O:0.999849
as	O	O:0.999000
i	O	O:0.953294
cannot	O	O:0.998335
fully	O	O:0.998962
test	O	O:0.964921
because	O	O:0.995322
i	O	O:0.996591
dont	O	O:0.999624
have	O	O:0.999732
test	O	O:0.997987
data	O	O:0.997149
.	O	O:0.996706
	
The	O	O:0.987536
problem	O	O:0.935276
is	O	O:0.998239
if	O	O:0.993344
i	O	O:0.985509
don't	O	O:0.999453
want	O	O:0.992256
0:10	O	O:0.973847
,	O	O:0.998828
but	O	O:0.998531
an	O	O:0.999506
arbitrary	O	O:0.998927
set	O	O:0.992261
of	O	O:0.996363
indices	O	O:0.903064
.	O	O:0.993326
	
and	O	O:0.995035
it	O	O:0.997490
occurs	O	O:0.986727
at	O	O:0.998605
the	O	O:0.985435
line	O	O:0.876873
:	O	O:0.994815
`	O	O:0.999384
del	O	O:0.991678
innerAry	O	O:0.979671
[	O	O:0.996931
j	O	O:0.975130
]`	O	O:0.983548
	
Do	O	O:0.996819
you	O	O:0.999406
have	O	O:0.999780
any	O	O:0.999832
references	O	O:0.997467
to	O	O:0.999863
back	O	O:0.999126
up	O	O:0.998649
that	O	O:0.995580
`	O	O:0.999215
NaN	O	O:0.868760
handling	O	O:0.985286
is	O	O:0.997731
much	O	O:0.895726
slower	O	O:0.996304
than	O	O:0.984884
"	O	O:0.998131
normal	O	O:0.964361
"	O	O:0.999253
float	O	O:0.843986
at	O	O:0.997961
the	O	O:0.997433
CPU	O	O:0.997697
level	O	O:0.981005
`	O	O:0.997936
?	O	O:0.989096
	
What	O	O:0.996655
do	O	O:0.995612
you	O	O:0.999921
mean	O	O:0.998773
by	O	O:0.998334
the	O	O:0.997317
line	O	O:0.935808
?	O	O:0.993812
	
For	O	O:0.991802
example	O	O:0.997245
if	O	O:0.999483
we	O	O:0.999391
stick	O	O:0.998565
with	O	O:0.999327
a	O	O:0.998554
linear	O	O:0.866999
search	O	O:0.989895
we	O	O:0.998869
can	O	O:0.999784
at	O	O:0.999987
least	O	O:0.999645
start	O	O:0.997564
at	O	O:0.999206
the	O	O:0.998820
appropriate	O	O:0.994890
end	O	O:0.929940
(	O	O:0.999638
search	O	O:0.988717
backwards	O	O:0.996823
to	O	O:0.999754
find	O	O:0.999903
last	O	O:0.998453
value	O	O:0.999625
matching	O	O:0.998336
a	O	O:0.998609
condition	O	O:0.978532
)	O	O:0.998125
.	O	O:0.987118
	
Yes	O	O:0.944918
,	O	O:0.998054
but	O	O:0.997967
you	O	O:0.998540
don't	O	O:0.999695
get	O	O:0.999852
a	O	O:0.999735
numpy	O	O:0.994422
array	O	O:0.997168
out	O	O:0.995101
,	O	O:0.999772
do	O	O:0.993746
you	O	O:0.997688
?	O	O:0.997811
	
This	O	O:0.993634
seems	O	O:0.999372
like	O	O:0.999587
a	O	O:0.999578
simple	O	O:0.918396
question	O	O:0.976951
,	O	O:0.998001
but	O	O:0.997090
I	O	O:0.994922
haven't	O	O:0.998457
been	O	O:0.987538
able	O	O:0.997696
to	O	O:0.999849
find	O	O:0.999896
a	O	O:0.999765
good	O	O:0.901478
answer	O	O:0.992955
.	O	O:0.987408
	
@USER	O	O:0.826412
:	O	O:0.996478
it	O	O:0.998973
could	O	O:0.999705
also	O	O:0.999847
mean	O	O:0.999744
they	O	O:0.992245
are	O	O:0.999511
both	O	O:0.995536
strictly	O	O:0.986322
periodic	O	O:0.772269
and	O	O:0.992548
sinusoidal	O	O:0.680572
,	O	O:0.984069
but	O	O:0.999340
their	O	O:0.983698
frequencies	O	O:0.965823
are	O	O:0.993068
integer-independent	O	O:0.968751
(	O	O:0.997096
ie	O	O:0.998778
.	O	O:0.998654
the	O	O:0.997826
interference	O	O:0.994994
wave	O	O:0.694344
is	O	O:0.998032
not	O	O:0.997546
periodic	O	O:0.967694
)	O	O:0.991345
	
Python	O	O:0.835221
:	O	O:0.995577
How	O	O:0.998754
to	O	O:0.999187
rotate	O	O:0.997906
an	O	O:0.997836
array	O	O:0.992441
?	O	O:0.995062
	
@USER	O	O:0.970227
Your	O	O:0.993249
edited	O	O:0.989034
sample	O	O:0.995110
input	O	O:0.977379
is	O	O:0.996935
still	O	O:0.991033
not	O	O:0.999254
consistent	O	O:0.996319
with	O	O:0.999372
your	O	O:0.995414
expected	O	O:0.995547
output	O	O:0.988939
.	O	O:0.993403
	
You	O	O:0.997863
can	O	O:0.998787
calculate	O	O:0.998762
the	O	O:0.999893
variance	O	O:0.995633
yourself	O	O:0.998214
using	O	O:0.999380
the	O	O:0.999278
mean	O	O:0.972935
,	O	O:0.999292
with	O	O:0.998287
the	O	O:0.998741
following	O	O:0.951163
formula	O	O:0.965745
:	O	O:0.997172
#CODE	O	O:0.997073
	
Populate	O	O:0.974265
numpy	O	O:0.987722
matrix	O	O:0.996306
from	O	O:0.996476
the	O	O:0.999395
difference	O	O:0.996407
of	O	O:0.999144
two	O	O:0.994457
vectors	O	O:0.966422
	
where	O	O:0.972390
#CODE	O	O:0.988327
	
Interleaving	O	O:0.933349
two	O	O:0.991842
numpy	O	O:0.997357
index	O	O:0.998336
arrays	O	O:0.993102
,	O	O:0.999675
one	O	O:0.999526
item	O	O:0.997320
from	O	O:0.999030
each	O	O:0.989391
array	O	O:0.992444
	
I	O	O:0.992716
was	O	O:0.998684
worried	O	O:0.979916
about	O	O:0.988092
the	O	O:0.993817
performance	O	O:0.937690
,	O	O:0.997084
but	O	O:0.998654
the	O	O:0.999154
difference	O	O:0.990619
in	O	O:0.999451
load	O	O:0.959450
time	O	O:0.988259
is	O	O:0.999462
tiny	O	O:0.937615
for	O	O:0.995354
me	O	O:0.841673
.	O	O:0.972914
	
I	O	O:0.988920
looked	O	O:0.991547
for	O	O:0.997663
an	O	O:0.989515
online	O	O:0.942316
reference	O	O:0.989670
but	O	O:0.989884
couldn't	O	O:0.995916
find	O	O:0.993920
one	O	O:0.998777
.	O	O:0.993754
	
Numpy	O	O:0.898509
/	O	O:0.959600
Python	O	O:0.883858
:	O	O:0.996018
Array	O	O:0.998894
iteration	O	O:0.998434
without	O	O:0.983774
for-loop	O	O:0.978918
	
If	O	O:0.992520
you	O	O:0.999316
want	O	O:0.999526
it	O	O:0.999545
printed	O	O:0.998825
with	O	O:0.997904
commas	O	O:0.991798
,	O	O:0.999636
you	O	O:0.999218
could	O	O:0.999488
convert	O	O:0.994146
it	O	O:0.999656
to	O	O:0.999795
a	O	O:0.999730
Python	O	O:0.907935
list	O	O:0.878356
:	O	O:0.995940
#CODE	O	O:0.996016
	
I	O	O:0.998526
have	O	O:0.998387
included	O	O:0.990067
my	O	O:0.998958
code	O	O:0.993258
to	O	O:0.999469
see	O	O:0.999929
if	O	O:0.999421
you	O	O:0.999348
can	O	O:0.999881
help	O	O:0.999548
me	O	O:0.999162
implement	O	O:0.996349
some	O	O:0.997557
kind	O	O:0.996434
of	O	O:0.995400
'	O	O:0.992804
fminsearch	O	O:0.914603
'	O	O:0.998700
to	O	O:0.999536
find	O	O:0.999846
the	O	O:0.999479
optimal	O	O:0.990441
parameter	O	O:0.997144
values	O	O:0.986662
k0	O	O:0.970457
and	O	O:0.999397
k1	O	O:0.995025
that	O	O:0.992324
will	O	O:0.997048
fit	O	O:0.998089
my	O	O:0.999229
data	O	O:0.980638
.	O	O:0.996950
	
Any	O	O:0.975003
ideas	O	O:0.993050
what	O	O:0.998826
this	O	O:0.997599
could	O	O:0.999480
be	O	O:0.999906
all	O	O:0.999529
about	O	O:0.963324
?	O	O:0.991954
	
What	O	O:0.996503
does	O	O:0.982060
"	O	O:0.999224
IIUC	O	O:0.948171
"	O	O:0.998575
mean	O	O:0.954215
?	O	O:0.994755
	
I	O	O:0.990188
can't	O	O:0.999109
seem	O	O:0.985669
to	O	O:0.999921
find	O	O:0.999628
examples	O	O:0.997929
that	O	O:0.998462
don't	O	O:0.999902
rely	O	O:0.994772
on	O	O:0.999169
the	O	O:0.989440
former	O	O:0.956089
syntax	O	O:0.992722
.	O	O:0.989597
	
Any	O	O:0.992186
help	O	O:0.940222
would	O	O:0.998810
be	O	O:0.998918
greatly	O	O:0.994095
appreciated	O	O:0.910498
.	O	O:0.980991
	
Where	O	O:0.991523
blocks	O	O:0.918423
is	O	O:0.999789
a	O	O:0.993387
3	O	O:0.953120
dimensional	O	O:0.984950
numpy	O	O:0.984590
array	O	O:0.974724
.	O	O:0.986461
	
The	O	O:0.986813
science	O	O:0.969831
/	O	O:0.996193
engineering	O	O:0.979095
application	O	O:0.991725
I'm	O	O:0.997775
working	O	O:0.981071
on	O	O:0.995708
has	O	O:0.998985
lots	O	O:0.995173
of	O	O:0.998302
linear	O	O:0.846664
algebra	O	O:0.998151
matrix	O	O:0.991388
multiplications	O	O:0.996075
,	O	O:0.999671
therefore	O	O:0.999568
I	O	O:0.999254
use	O	O:0.998997
Numpy	O	O:0.869208
matrices	O	O:0.889503
.	O	O:0.975095
	
when	O	O:0.985262
I	O	O:0.998696
print	O	O:0.999446
Chao	O	O:0.872484
,	O	O:0.999032
the	O	O:0.999037
product	O	O:0.990925
of	O	O:0.999422
this	O	O:0.998378
loop	O	O:0.998932
I	O	O:0.999475
currently	O	O:0.999636
have	O	O:0.991431
this	O	O:0.978021
:	O	O:0.997466
	
pyopengl	O	O:0.946673
buffer	O	O:0.988470
dynamic	O	O:0.987486
read	O	O:0.927292
from	O	O:0.995662
numpy	O	O:0.994145
array	O	O:0.991655
	
I	O	O:0.998840
also	O	O:0.999450
have	O	O:0.998083
an	O	O:0.999246
array	O	O:0.995596
which	O	O:0.988449
is	O	O:0.999435
my	O	O:0.996096
desired	O	O:0.997711
subset	O	O:0.985849
of	O	O:0.998745
ages	O	O:0.838019
.	O	O:0.995339
	
It	O	O:0.999108
does	O	O:0.998123
automatically	O	O:0.998643
expand	O	O:0.988588
the	O	O:0.995918
array	O	O:0.945954
,	O	O:0.998891
but	O	O:0.999036
now	O	O:0.999257
every	O	O:0.999561
item	O	O:0.989281
in	O	O:0.998306
the	O	O:0.998496
array	O	O:0.949494
is	O	O:0.968367
`	O	O:0.995902
None	O	O:0.812086
`	O	O:0.997625
and	O	O:0.991478
cannot	O	O:0.999290
be	O	O:0.995800
changed	O	O:0.971150
.	O	O:0.952619
	
I'm	O	O:0.987969
liking	O	O:0.993502
fortran	O	O:0.994899
more	O	O:0.980567
at	O	O:0.998838
the	O	O:0.998143
moment	O	O:0.998495
because	O	O:0.999174
by	O	O:0.997887
the	O	O:0.999832
time	O	O:0.990535
you	O	O:0.999563
add	O	O:0.997811
all	O	O:0.999852
the	O	O:0.999317
required	O	O:0.996291
type	O	O:0.991069
annotations	O	O:0.977609
in	O	O:0.998652
cython	O	O:0.986396
I	O	O:0.998776
think	O	O:0.996446
it	O	O:0.998695
ends	O	O:0.979298
up	O	O:0.995469
looking	O	O:0.999106
less	O	O:0.991230
clear	O	O:0.990950
than	O	O:0.996199
the	O	O:0.993318
fortran	O	O:0.818098
.	O	O:0.985501
	
(	O	O:0.985042
There	O	O:0.997567
are	O	O:0.999798
also	O	O:0.998769
chances	O	O:0.999212
that	O	O:0.991380
Python	O	O:0.995885
stores	O	O:0.997046
the	O	O:0.998400
number	O	O:0.982120
on	O	O:0.997087
the	O	O:0.999244
heap	O	O:0.991203
and	O	O:0.999693
all	O	O:0.999652
you	O	O:0.997599
get	O	O:0.992191
is	O	O:0.999855
a	O	O:0.996540
pointer	O	O:0.980558
to	O	O:0.998053
it	O	O:0.999953
,	O	O:0.999741
approximately	O	O:0.997669
doubling	O	O:0.994667
the	O	O:0.995108
footprint	O	O:0.996621
,	O	O:0.999407
without	O	O:0.998105
even	O	O:0.995250
taking	O	O:0.991282
in	O	O:0.997081
account	O	O:0.937718
metadata	O	O:0.989515
but	O	O:0.995270
that's	O	O:0.999629
slippery	O	O:0.985142
grounds	O	O:0.991525
,	O	O:0.995967
I'm	O	O:0.996916
always	O	O:0.998602
wrong	O	O:0.999744
when	O	O:0.995928
I	O	O:0.999794
talk	O	O:0.997501
about	O	O:0.988309
Python	O	O:0.981528
internals	O	O:0.991171
,	O	O:0.998584
so	O	O:0.988800
let's	O	O:0.993784
not	O	O:0.997097
dig	O	O:0.992599
it	O	O:0.998097
too	O	O:0.993912
much	O	O:0.981715
.	O	O:0.995492
)	O	O:0.997529
	
Do	O	O:0.996819
you	O	O:0.999399
have	O	O:0.999620
any	O	O:0.999459
clue	O	O:0.983738
?	O	O:0.996026
	
your	O	O:0.919587
method	O	O:0.991923
works	O	O:0.996083
,	O	O:0.997914
@USER	O	O:0.979916
.	O	O:0.994370
put	O	O:0.969658
it	O	O:0.999713
into	O	O:0.995656
an	O	O:0.998037
answer	O	O:0.995592
to	O	O:0.998829
get	O	O:0.999837
some	O	O:0.996605
acceptance	O	O:0.997593
points	O	O:0.969762
.	O	O:0.993188
	
that	O	O:0.991537
blas	O	O:0.754447
is	O	O:0.998959
reference	O	O:0.997265
blas	O	O:0.975074
from	O	O:0.995929
netlib	O	O:0.969755
-	O	O:0.999410
the	O	O:0.997153
slowest	O	O:0.988493
blas	O	O:0.767381
around	O	O:0.985159
.	O	O:0.994010
install	O	O:0.990682
atlas	O	O:0.919744
or	O	O:0.998107
mkl	O	O:0.975812
instead	O	O:0.997869
.	O	O:0.991118
	
The	O	O:0.952340
`	O	O:0.996329
not	O	O:0.850263
`	O	O:0.999753
operator	O	O:0.984721
implicitly	O	O:0.995863
tries	O	O:0.995140
to	O	O:0.998504
convert	O	O:0.996576
its	O	O:0.998147
operand	O	O:0.993838
to	O	O:0.977075
`	O	O:0.999791
bool	O	B-API:0.897465
`	O	O:0.999335
,	O	O:0.997525
and	O	O:0.999934
then	O	O:0.995491
returns	O	O:0.995867
the	O	O:0.999075
opposite	O	O:0.992296
truth	O	O:0.986630
value	O	O:0.989940
.	O	O:0.983263
	
The	O	O:0.993109
recommended	O	O:0.982920
way	O	O:0.996939
to	O	O:0.998163
do	O	O:0.999884
this	O	O:0.992926
is	O	O:0.998970
to	O	O:0.999014
preallocate	O	O:0.990233
before	O	O:0.987129
the	O	O:0.996180
loop	O	O:0.982415
and	O	O:0.998176
use	O	O:0.982738
slicing	O	O:0.739109
and	O	O:0.993676
indexing	O	O:0.995680
to	O	O:0.987334
insert	O	O:0.981075
#CODE	O	O:0.991979
	
If	O	O:0.994530
the	O	O:0.998736
simple	O	O:0.996445
sort	O	O:0.941548
solution	O	O:0.989784
is	O	O:0.998787
good	O	O:0.943886
enough	O	O:0.989385
,	O	O:0.999310
clearly	O	O:0.966671
go	O	O:0.989227
for	O	O:0.999107
that	O	O:0.985600
.	O	O:0.993410
	
Basic	O	O:0.990837
idea	O	O:0.988199
being	O	O:0.992507
,	O	O:0.999478
I	O	O:0.999402
know	O	O:0.996855
the	O	O:0.998754
actual	O	O:0.995735
value	O	O:0.998071
of	O	O:0.999175
that	O	O:0.995286
should	O	O:0.999722
be	O	O:0.999782
predicted	O	O:0.990493
for	O	O:0.996554
each	O	O:0.954200
sample	O	O:0.954924
in	O	O:0.999775
a	O	O:0.998975
row	O	O:0.993994
of	O	O:0.996623
N	O	O:0.960135
,	O	O:0.998873
and	O	O:0.999212
I'd	O	O:0.999763
like	O	O:0.997894
to	O	O:0.999886
determine	O	O:0.998909
which	O	O:0.999379
set	O	O:0.993110
of	O	O:0.999891
predicted	O	O:0.982327
values	O	O:0.992445
in	O	O:0.999521
a	O	O:0.999802
column	O	O:0.997869
of	O	O:0.997703
M	O	O:0.904097
is	O	O:0.999849
most	O	O:0.987390
accurate	O	O:0.994061
using	O	O:0.998699
the	O	O:0.982328
residuals	O	O:0.808563
.	O	O:0.982797
	
Fill	O	O:0.965811
in	O	O:0.998918
missing	O	O:0.983907
values	O	O:0.996296
with	O	O:0.996963
nearest	O	O:0.995251
neighbour	O	O:0.994317
in	O	O:0.995990
Python	O	O:0.994232
numpy	O	O:0.997788
masked	O	O:0.944183
arrays	O	O:0.969890
?	O	O:0.990362
	
Any	O	O:0.992740
tips	O	O:0.974238
on	O	O:0.998964
what	O	O:0.994636
I'm	O	O:0.999632
doing	O	O:0.998541
wrong	O	O:0.986940
?	O	O:0.984763
	
SO	O	O:0.978577
I	O	O:0.999014
have	O	O:0.999242
a	O	O:0.998396
file	O	O:0.974093
having	O	O:0.998850
three	O	O:0.997241
columns	O	O:0.981338
;	O	O:0.997080
Frequency	O	O:0.985949
,	O	O:0.996641
Power	O	O:0.987910
spec	O	O:0.978568
.	O	O:0.989867
	
In	O	O:0.995210
numpy	O	O:0.991390
,	O	O:0.999910
your	O	O:0.996054
array	O	O:0.980970
is	O	O:0.996804
2	O	O:0.993155
x	O	O:0.976176
5	O	O:0.960068
,	O	O:0.995584
isn't	O	O:0.995282
it	O	O:0.997642
?	O	O:0.998133
	
For	O	O:0.997188
small-ish	O	O:0.962925
problems	O	O:0.995999
,	O	O:0.999352
I	O	O:0.998103
would	O	O:0.999301
certainly	O	O:0.999404
just	O	O:0.999448
create	O	O:0.986434
the	O	O:0.998671
new	O	O:0.974628
array	O	O:0.981970
.	O	O:0.984649
	
If	O	O:0.997219
each	O	O:0.958182
element	O	O:0.996735
takes	O	O:0.996210
up	O	O:0.992997
4	O	O:0.987473
bytes	O	O:0.981629
,	O	O:0.999253
it	O	O:0.998899
would	O	O:0.998158
require	O	O:0.999437
4,000,000,000,000	O	O:0.998592
bytes	O	O:0.989211
of	O	O:0.993442
memory	O	O:0.947247
.	O	O:0.993917
	
TypeError	O	O:0.905443
:	O	O:0.997157
must	O	O:0.993822
be	O	O:0.999402
str	O	O:0.980667
,	O	O:0.998438
not	O	O:0.995634
bytes	O	O:0.990948
	
Error	O	O:0.982539
while	O	O:0.997815
computing	O	O:0.993303
probabilities	O	O:0.983545
of	O	O:0.999407
an	O	O:0.994907
array	O	O:0.997448
list	O	O:0.929905
	
This	O	O:0.984681
produces	O	O:0.990277
the	O	O:0.997343
array	O	O:0.966412
,	O	O:0.998412
but	O	O:0.998577
I	O	O:0.998331
don't	O	O:0.999862
know	O	O:0.990110
which	O	O:0.999144
row	O	O:0.997406
corresponds	O	O:0.992701
to	O	O:0.997569
which	O	O:0.999801
year-disease	O	O:0.909598
.	O	O:0.995058
	
I'm	O	O:0.991289
not	O	O:0.998229
sure	O	O:0.999437
what	O	O:0.996591
you	O	O:0.999866
mean	O	O:0.999734
by	O	O:0.996600
"	O	O:0.999341
all	O	O:0.996233
from	O	O:0.997876
numpy	O	O:0.985661
"	O	O:0.995320
,	O	O:0.997222
but	O	O:0.997756
you	O	O:0.995520
should	O	O:0.999652
never	O	O:0.999568
need	O	O:0.999455
to	O	O:0.998314
use	O	O:0.999889
more	O	O:0.972039
than	O	O:0.994411
one	O	O:0.999640
form	O	O:0.999271
of	O	O:0.997290
`	O	O:0.998227
import	O	O:0.803123
`	O	O:0.999112
at	O	O:0.997518
a	O	O:0.998704
time	O	O:0.894106
.	O	O:0.991529
	
The	O	O:0.990057
problem	O	O:0.944093
is	O	O:0.999433
that	O	O:0.993945
you	O	O:0.999870
have	O	O:0.999537
an	O	O:0.999816
array	O	O:0.999428
of	O	O:0.998201
strings	O	O:0.907234
,	O	O:0.999576
not	O	O:0.998945
an	O	O:0.999567
array	O	O:0.999172
of	O	O:0.997218
numbers	O	O:0.868240
.	O	O:0.994006
	
how	O	O:0.985421
can	O	O:0.998830
i	O	O:0.999932
effectively	O	O:0.999872
check	O	O:0.999867
items	O	O:0.996379
of	O	O:0.998935
a	O	O:0.999372
list	O	O:0.984799
of	O	O:0.999038
tuples	O	O:0.950939
against	O	O:0.998603
all	O	O:0.999539
the	O	O:0.999890
items	O	O:0.997985
of	O	O:0.999722
another	O	O:0.997936
using	O	O:0.999807
numpy	O	O:0.968112
or	O	O:0.995640
tabular	O	O:0.951125
?	O	O:0.992456
	
Replace	O	O:0.989322
part	O	O:0.991956
of	O	O:0.998680
numpy	O	O:0.993590
1D	O	O:0.993791
array	O	O:0.995746
with	O	O:0.992019
shorter	O	O:0.984864
array	O	O:0.994980
	
Python	O	O:0.951959
2.6	O	O:0.976941
numpy	O	O:0.981202
interaction	O	O:0.988025
array	O	O:0.997556
objects	O	O:0.988197
error	O	O:0.983426
	
So	O	O:0.983449
for	O	O:0.998797
square	O	O:0.919110
matrices	O	O:0.972480
it	O	O:0.991489
is	O	O:0.999172
basically	O	O:0.998583
syntactic	O	O:0.995687
sugar	O	O:0.987337
for	O	O:0.997833
the	O	O:0.997133
exact	O	O:0.998568
same	O	O:0.991172
operation	O	O:0.981432
.	O	O:0.993377
	
If	O	O:0.996867
we	O	O:0.999420
evaulate	O	O:0.994959
the	O	O:0.998162
ij	O	O:0.975106
th	O	O:0.997299
element	O	O:0.993024
of	O	O:0.998366
the	O	O:0.993252
matrix	O	O:0.997022
U*A*V	O	O:0.977984
,	O	O:0.999698
then	O	O:0.998148
it	O	O:0.999894
must	O	O:0.999377
equal	O	O:0.998977
both	O	O:0.995828
#CODE	O	O:0.990353
	
How	O	O:0.992063
can	O	O:0.998694
I	O	O:0.999963
get	O	O:0.999705
new	O	O:0.983187
array	O	O:0.994989
`	O	O:0.995648
B	O	O:0.914862
`	O	O:0.999911
such	O	O:0.982664
as	O	O:0.999844
if	O	O:0.973881
`	O	O:0.998791
row_set	O	O:0.596691
=	O	O:0.994369
[	O	O:0.996578
0	O	O:0.993392
,	O	O:0.996809
2	O	O:0.986088
,	O	O:0.998750
5	O	O:0.989602
]`	O	O:0.997668
,	O	O:0.999657
then	O	O:0.998229
`	O	O:0.999731
B	O	O:0.982689
=	O	O:0.990833
[	O	O:0.996654
A_row	O	O:0.902829
[	O	O:0.996985
0	O	O:0.992741
]	O	O:0.993345
,	O	O:0.997400
A_row	O	O:0.920079
[	O	O:0.996970
2	O	O:0.994542
]	O	O:0.991485
,	O	O:0.997909
A_row	O	O:0.881738
[	O	O:0.996979
5	O	O:0.987308
]]`	O	O:0.991930
?	O	O:0.985050
	
I	O	O:0.998930
have	O	O:0.997436
tried	O	O:0.988495
the	O	O:0.998299
following	O	O:0.962464
to	O	O:0.996334
fix	O	O:0.993612
it	O	O:0.993856
:	O	O:0.996210
	
The	O	O:0.995658
weighted	O	O:0.988122
sum	O	O:0.978895
result	O	O:0.996763
is	O	O:0.999526
approximated	O	O:0.988293
by	O	O:0.995375
the	O	O:0.994577
multiple	O	O:0.895834
passes	O	O:0.930690
and	O	O:0.999479
actually	O	O:0.992240
after	O	O:0.995759
very	O	O:0.986559
few	O	O:0.996412
of	O	O:0.999628
them	O	O:0.985060
the	O	O:0.998496
output	O	O:0.798842
is	O	O:0.993787
already	O	O:0.979831
smooth	O	O:0.931643
.	O	O:0.987900
	
Basically	O	O:0.987787
,	O	O:0.999310
it	O	O:0.999650
comes	O	O:0.995803
down	O	O:0.991826
to	O	O:0.999392
checking	O	O:0.997859
before	O	O:0.990968
you	O	O:0.996337
add	O	O:0.980311
.	O	O:0.995944
	
Any	O	O:0.973171
ideas	O	O:0.975037
?	O	O:0.990844
	
Do	O	O:0.994926
you	O	O:0.999189
really	O	O:0.998944
have	O	O:0.995882
matrix	O	O:0.999471
type	O	O:0.975362
or	O	O:0.999529
just	O	O:0.999284
list	O	O:0.999066
of	O	O:0.999156
lists	O	O:0.983045
from	O	O:0.997319
python	O	O:0.991044
?	O	O:0.996233
	
zI	O	O:0.845154
[	O	O:0.997582
N-1	O	O:0.987730
]	O	O:0.988770
=	O	O:0.956020
f	O	O:0.870353
(	O	O:0.997386
xI	O	O:0.978090
[	O	O:0.998423
N-1	O	O:0.994175
]	O	O:0.992796
,	O	O:0.997333
yI	O	O:0.970721
[	O	O:0.997173
N-1	O	O:0.984693
])	O	O:0.986707
.	O	O:0.969903
	
The	O	O:0.995742
actual	O	O:0.997608
size	O	O:0.996753
of	O	O:0.998347
the	O	O:0.997952
numpy	O	O:0.995319
array	O	O:0.972686
is	O	O:0.997917
514	O	O:0.989620
by	O	O:0.992473
504	O	O:0.981841
and	O	O:0.997978
of	O	O:0.998221
the	O	O:0.985515
list	O	O:0.835596
is	O	O:0.991349
8	O	O:0.884726
.	O	O:0.989611
	
`	O	O:0.994769
array	O	O:0.941519
([[	O	O:0.999769
a	O	O:0.995939
,	O	O:0.999145
a	O	O:0.998561
,	O	O:0.999405
a	O	O:0.999047
,	O	O:0.999592
a	O	O:0.999549
,	O	O:0.996210
0	O	O:0.996893
,	O	O:0.998788
0	O	O:0.992755
,	O	O:0.998699
0	O	O:0.992241
,	O	O:0.998699
0	O	O:0.992070
,	O	O:0.998661
0	O	O:0.976133
,	O	O:0.999145
b	O	O:0.973984
,	O	O:0.999244
b	O	O:0.976308
,	O	O:0.999298
b	O	O:0.980864
,...	O	O:0.988454
]	O	O:0.991590
,	O	O:0.990883
	
What's	O	O:0.994899
wrong	O	O:0.988610
with	O	O:0.998389
just	O	O:0.996257
separating	O	O:0.999206
it	O	O:0.996649
out	O	O:0.997827
into	O	O:0.995835
real	O	O:0.831743
and	O	O:0.999523
imaginary	O	O:0.979102
parts	O	O:0.877374
?	O	O:0.988894
	
I	O	O:0.998723
have	O	O:0.997752
an	O	O:0.994388
N-dimensional	O	O:0.986763
array	O	O:0.978471
and	O	O:0.999841
a	O	O:0.999502
set	O	O:0.542013
N	O	O:0.996688
index	O	O:0.997232
arrays	O	O:0.982274
,	O	O:0.999473
who's	O	O:0.996083
values	O	O:0.990223
I	O	O:0.999608
want	O	O:0.999685
to	O	O:0.993473
increment	O	O:0.997238
.	O	O:0.982435
	
As	O	O:0.971026
@USER	O	O:0.989875
suggests	O	O:0.987600
in	O	O:0.999787
a	O	O:0.995609
comment	O	O:0.974124
,	O	O:0.999708
if	O	O:0.998913
you	O	O:0.998987
really	O	O:0.999177
want	O	O:0.999668
a	O	O:0.997427
3D	O	O:0.954074
array	O	O:0.992210
--	O	O:0.996557
which	O	O:0.948250
is	O	O:0.999255
not	O	O:0.997941
entirely	O	O:0.998804
clear	O	O:0.994192
to	O	O:0.998673
me	O	O:0.999432
from	O	O:0.999828
your	O	O:0.998286
code	O	O:0.996720
sample	O	O:0.996292
--	O	O:0.999082
you	O	O:0.997411
can	O	O:0.998400
use	O	O:0.996344
:	O	O:0.991819
#CODE	O	O:0.992536
	
In	O	O:0.998625
another	O	O:0.991672
question	O	O:0.994157
,	O	O:0.999730
other	O	O:0.998682
users	O	O:0.993124
offered	O	O:0.996618
some	O	O:0.997191
help	O	O:0.988245
if	O	O:0.999522
I	O	O:0.999583
could	O	O:0.999669
supply	O	O:0.975277
the	O	O:0.999329
array	O	O:0.973207
I	O	O:0.995317
was	O	O:0.998517
having	O	O:0.979840
trouble	O	O:0.978355
with	O	O:0.983162
.	O	O:0.992761
	
The	O	O:0.996636
other	O	O:0.994735
thing	O	O:0.993653
is	O	O:0.998255
changing	O	O:0.984964
the	O	O:0.998983
size	O	O:0.987472
of	O	O:0.999269
the	O	O:0.999652
ticklabels	O	O:0.992596
in	O	O:0.998326
the	O	O:0.998593
colorbar	O	O:0.996763
which	O	O:0.995309
I	O	O:0.998685
haven't	O	O:0.997258
figured	O	O:0.929397
out	O	O:0.986985
.	O	O:0.990303
	
Unfortunately	O	O:0.990009
,	O	O:0.999682
these	O	O:0.998027
lines	O	O:0.971754
are	O	O:0.997560
fast	O	O:0.972016
already	O	O:0.986779
,	O	O:0.998735
but	O	O:0.998357
I	O	O:0.999411
will	O	O:0.999819
take	O	O:0.997498
any	O	O:0.999480
speedup	O	O:0.992913
to	O	O:0.995065
offset	O	O:0.999699
the	O	O:0.998721
IO	O	O:0.997227
issues	O	O:0.995668
I	O	O:0.999746
have	O	O:0.999339
using	O	O:0.994994
GDAL	O	O:0.894172
.	O	O:0.926305
	
First	O	O:0.996525
you	O	O:0.999400
need	O	O:0.999467
to	O	O:0.999723
write	O	O:0.999959
a	O	O:0.995877
function	O	O:0.998707
that	O	O:0.999647
when	O	O:0.999604
given	O	O:0.996641
an	O	O:0.999683
array	O	O:0.999129
of	O	O:0.998697
values	O	O:0.986737
,	O	O:0.999760
with	O	O:0.999153
the	O	O:0.999030
middle	O	O:0.996520
one	O	O:0.998853
being	O	O:0.992170
the	O	O:0.998773
element	O	O:0.982934
currently	O	O:0.996216
examined	O	O:0.996008
,	O	O:0.999244
will	O	O:0.997786
return	O	O:0.998181
some	O	O:0.997569
computation	O	O:0.996912
of	O	O:0.999078
those	O	O:0.992818
values	O	O:0.974758
.	O	O:0.984458
	
Thanks	O	O:0.974636
in	O	O:0.997064
advance	O	O:0.978641
for	O	O:0.999171
any	O	O:0.988980
help	O	O:0.774554
.	O	O:0.990699
	
so	O	O:0.998451
what	O	O:0.995852
you	O	O:0.999729
want	O	O:0.995292
is	O	O:0.999871
some	O	O:0.999044
sort	O	O:0.977799
of	O	O:0.997818
recursive	O	O:0.896136
assignment	O	O:0.948092
--	O	O:0.985454
but	O	O:0.990875
i	O	O:0.993049
don't	O	O:0.998810
believe	O	O:0.997733
there	O	O:0.991938
is	O	O:0.999076
any	O	O:0.994887
guarantee	O	O:0.988795
that	O	O:0.998759
this	O	O:0.998382
will	O	O:0.999497
settle	O	O:0.999525
down	O	O:0.998558
into	O	O:0.997148
a	O	O:0.997368
constant	O	O:0.957411
value	O	O:0.993517
.	O	O:0.998314
sure	O	O:0.988486
it	O	O:0.999610
does	O	O:0.991630
in	O	O:0.999916
your	O	O:0.998760
case	O	O:0.993993
,	O	O:0.998160
but	O	O:0.998140
not	O	O:0.993871
in	O	O:0.999695
general	O	O:0.973209
--	O	O:0.997811
for	O	O:0.977011
example	O	O:0.927590
:	O	O:0.988834
`	O	O:0.999869
a	O	O:0.986214
[:	O	O:0.993688
]	O	O:0.991286
=	O	O:0.956041
2*a	O	O:0.847840
[:	O	O:0.993970
]`	O	O:0.978690
would	O	O:0.997459
loop	O	O:0.997193
forever	O	O:0.986805
.	O	O:0.992392
	
Just	O	O:0.996445
initialize	O	O:0.980473
the	O	O:0.999560
array	O	O:0.994990
of	O	O:0.996746
`	O	O:0.997181
float*	O	B-API:0.653780
`	O	O:0.999380
to	O	O:0.995180
point	O	O:0.999942
to	O	O:0.999872
each	O	O:0.999707
of	O	O:0.999913
the	O	O:0.999961
rows	O	O:0.991571
in	O	O:0.998143
the	O	O:0.999257
2-D	O	O:0.971117
array	O	O:0.976525
.	O	O:0.987330
	
Do	O	O:0.995441
things	O	O:0.988084
go	O	O:0.999216
wrong	O	O:0.994208
gradually	O	O:0.966013
and	O	O:0.999469
more	O	O:0.953312
and	O	O:0.998758
more	O	O:0.990162
,	O	O:0.996495
or	O	O:0.999505
all	O	O:0.999454
at	O	O:0.999894
once	O	O:0.983145
?	O	O:0.998039
	
If	O	O:0.993479
you	O	O:0.997695
don't	O	O:0.999782
find	O	O:0.999514
anything	O	O:0.999786
useful	O	O:0.998207
then	O	O:0.997692
try	O	O:0.998180
"	O	O:0.998907
R	O	O:0.888281
"	O	O:0.992683
.	O	O:0.957088
	
Unfortunately	O	O:0.993980
,	O	O:0.999701
when	O	O:0.996901
I	O	O:0.997539
tried	O	O:0.999231
it	O	O:0.995322
I	O	O:0.991001
got	O	O:0.997932
the	O	O:0.972084
error	O	O:0.857351
:	O	O:0.990161
"	O	O:0.993228
ValueError	O	O:0.962299
:	O	O:0.996263
array	O	O:0.971306
is	O	O:0.997612
too	O	O:0.977588
big	O	O:0.962685
.	O	O:0.948399
	
EDIT	O	O:0.882026
2	O	O:0.920017
:	O	O:0.993202
This	O	O:0.999023
raises	O	O:0.999467
another	O	O:0.993981
question	O	O:0.985590
-	O	O:0.997473
What	O	O:0.989979
is	O	O:0.996697
`	O	O:0.996332
env	O	O:0.672660
`	O	O:0.996998
and	O	O:0.989920
why	O	O:0.999226
does	O	O:0.965872
`	O	O:0.999557
make	O	O:0.901018
`	O	O:0.999810
add	O	O:0.893233
it	O	O:0.998605
?	O	O:0.993077
	
However	O	O:0.988887
it	O	O:0.995779
doesn't	O	O:0.999400
give	O	O:0.994323
you	O	O:0.999862
negative	O	O:0.993710
overflows	O	O:0.993757
,	O	O:0.999288
probably	O	O:0.994390
because	O	O:0.992832
`	O	O:0.998497
uint32	O	O:0.777831
`	O	O:0.999523
fits	O	O:0.953004
inside	O	O:0.999100
the	O	O:0.998999
positive	O	O:0.982163
values	O	O:0.989766
of	O	O:0.998444
the	O	O:0.994165
`	O	O:0.997203
int64	O	B-API:0.809358
`	O	O:0.997749
.	O	O:0.966292
	
Consider	O	O:0.981625
for	O	O:0.996293
example	O	O:0.982576
the	O	O:0.980773
array	O	O:0.836047
:	O	O:0.991165
#CODE	O	O:0.996845
	
One	O	O:0.993746
difference	O	O:0.995803
could	O	O:0.998553
be	O	O:0.999954
the	O	O:0.999836
result	O	O:0.993314
of	O	O:0.998139
python	O	O:0.987296
having	O	O:0.997047
to	O	O:0.998738
take	O	O:0.999914
extra	O	O:0.998148
steps	O	O:0.999337
to	O	O:0.998548
resolve	O	O:0.997300
the	O	O:0.998443
float64	O	O:0.748709
types	O	O:0.919820
.	O	O:0.985565
	
How	O	O:0.994461
do	O	O:0.996801
I	O	O:0.999808
turn	O	O:0.990456
this	O	O:0.995526
into	O	O:0.996760
a	O	O:0.997890
numpy	O	O:0.897938
matrix	O	O:0.991369
?	O	O:0.992048
	
I	O	O:0.998508
want	O	O:0.998793
to	O	O:0.991005
rotate	O	O:0.996698
an	O	O:0.994475
array	O	O:0.960737
but	O	O:0.998566
not	O	O:0.998581
as	O	O:0.999960
a	O	O:0.999175
whole	O	O:0.968786
,	O	O:0.999761
only	O	O:0.994301
small	O	O:0.998200
portion	O	O:0.993374
of	O	O:0.997278
it	O	O:0.992669
.	O	O:0.997200
	
is	O	O:0.994956
so	O	O:0.996811
much	O	O:0.995561
more	O	O:0.993854
readable	O	O:0.991013
than	O	O:0.995754
any	O	O:0.993144
dot	O	O:0.589071
(	O	O:0.999331
a	O	O:0.996056
,	O	O:0.997900
b	O	O:0.992757
)	O	O:0.998917
equivalent	O	O:0.928728
.	O	O:0.992735
	
The	O	O:0.972018
array	O	O:0.985977
looks	O	O:0.994553
like	O	O:0.965026
:	O	O:0.996215
#CODE	O	O:0.995885
	
Constructing	O	O:0.982136
an	O	O:0.993917
n-by-n	O	O:0.972992
matrix	O	O:0.981083
in	O	O:0.995108
Numpy	O	O:0.930428
is	O	O:0.996892
easy	O	O:0.771124
and	O	O:0.999300
fairly	O	O:0.977307
efficient	O	O:0.930539
.	O	O:0.983484
	
Numpy	O	O:0.977651
array	O	O:0.984873
broadcasting	O	O:0.993504
with	O	O:0.996031
vector	O	O:0.996248
parameters	O	O:0.963258
	
It	O	O:0.993935
only	O	O:0.991884
works	O	O:0.999666
like	O	O:0.999216
this	O	O:0.997132
for	O	O:0.999539
numpy	O	O:0.975871
`	O	O:0.995778
array	O	O:0.837562
`	O	O:0.998696
s	O	O:0.867286
.	O	O:0.994686
	
@USER	O	O:0.834753
:	O	O:0.990230
Also	O	O:0.998343
there's	O	O:0.999638
a	O	O:0.999226
mistake	O	O:0.981345
in	O	O:0.999857
your	O	O:0.998414
code	O	O:0.992406
I	O	O:0.998882
think	O	O:0.994169
:	O	O:0.991245
because	O	O:0.999487
when	O	O:0.998838
you	O	O:0.999955
set	O	O:0.999679
elements	O	O:0.997958
to	O	O:0.997821
NaN	O	O:0.995726
in	O	O:0.999803
each	O	O:0.992245
iteration	O	O:0.998467
,	O	O:0.999779
the	O	O:0.999139
elements	O	O:0.919705
are	O	O:0.998086
not	O	O:0.999803
restored	O	O:0.995897
to	O	O:0.999259
their	O	O:0.999873
pre-NaN	O	O:0.991079
values	O	O:0.984619
for	O	O:0.999197
the	O	O:0.999645
next	O	O:0.919824
iteration	O	O:0.990078
!	O	O:0.980858
	
Quick	O	O:0.924254
question	O	O:0.935613
:	O	O:0.984392
is	O	O:0.999103
there	O	O:0.998773
any	O	O:0.996378
reason	O	O:0.997454
why	O	O:0.998787
you	O	O:0.998159
use	O	O:0.995751
	
Now	O	O:0.997243
the	O	O:0.998573
question	O	O:0.926541
is	O	O:0.998097
,	O	O:0.999079
which	O	O:0.998832
equal	O	O:0.991925
area	O	O:0.997658
projection	O	O:0.998018
shall	O	O:0.998977
I	O	O:0.999801
choose	O	O:0.998178
in	O	O:0.998673
order	O	O:0.996314
to	O	O:0.999691
have	O	O:0.999315
comparable	O	O:0.999194
area	O	O:0.999269
sizes	O	O:0.991204
for	O	O:0.999544
the	O	O:0.994608
polygons	O	O:0.736442
.	O	O:0.982619
	
numpy	O	O:0.977238
array	O	O:0.995613
multiplication	O	O:0.993421
issue	O	O:0.983365
	
(	O	O:0.991509
2	O	O:0.977540
)	O	O:0.999239
When	O	O:0.999081
I	O	O:0.999675
change	O	O:0.988422
the	O	O:0.997108
connection	O	O:0.990795
keywords	O	O:0.972062
to	O	O:0.999565
check_same_thread=False	O	O:0.998494
,	O	O:0.999839
then	O	O:0.998444
the	O	O:0.999918
full	O	O:0.992699
pool	O	O:0.999366
of	O	O:0.999177
workers	O	O:0.861653
is	O	O:0.999184
used	O	O:0.935032
,	O	O:0.998903
but	O	O:0.999478
then	O	O:0.998385
only	O	O:0.999974
some	O	O:0.999692
queries	O	O:0.990995
succeed	O	O:0.963355
and	O	O:0.999947
some	O	O:0.995375
queries	O	O:0.969511
fail	O	O:0.938928
.	O	O:0.995483
	
It	O	O:0.996285
also	O	O:0.987581
has	O	O:0.999574
the	O	O:0.998552
advantage	O	O:0.996270
of	O	O:0.998860
being	O	O:0.989648
able	O	O:0.995779
to	O	O:0.999455
load	O	O:0.991858
and	O	O:0.999952
store	O	O:0.971676
transparently	O	O:0.979108
with	O	O:0.994180
HDF5	O	O:0.925982
.	O	O:0.990839
	
Bah	O	O:0.925314
:	O	O:0.995177
"	O	O:0.999611
operates	O	O:0.979715
on	O	O:0.998479
two	O	O:0.996715
n-dimensional	O	O:0.990621
arrays	O	O:0.964591
"	O	O:0.997074
should	O	O:0.997442
be	O	O:0.998508
"	O	O:0.999694
operates	O	O:0.926674
on	O	O:0.998689
an	O	O:0.994225
n-dimensional	O	O:0.990629
array	O	O:0.991209
"	O	O:0.996343
above	O	O:0.942658
.	O	O:0.991143
	
Instead	O	O:0.994533
,	O	O:0.999721
they	O	O:0.997973
expect	O	O:0.998500
the	O	O:0.999818
user	O	O:0.974426
to	O	O:0.997492
either	O	O:0.999969
pass	O	O:0.985272
an	O	O:0.999411
array	O	O:0.998692
of	O	O:0.997135
shape	O	O:0.963782
`	O	O:0.992936
(	O	O:0.993149
r	O	O:0.995358
,	O	O:0.999050
c	O	O:0.995226
)`	O	O:0.988886
exactly	O	O:0.997913
,	O	O:0.999708
or	O	O:0.998972
for	O	O:0.999351
the	O	O:0.999466
user	O	O:0.952425
to	O	O:0.999113
pass	O	O:0.998956
a	O	O:0.998578
1-D	O	O:0.950262
array	O	O:0.993978
that	O	O:0.995369
broadcasts	O	O:0.998069
up	O	O:0.996757
to	O	O:0.996552
shape	O	O:0.998420
`	O	O:0.989036
(	O	O:0.995950
r	O	O:0.996450
,	O	O:0.998738
c	O	O:0.981321
)`	O	O:0.966352
.	O	O:0.978702
	
Though	O	O:0.987796
,	O	O:0.999117
it	O	O:0.997582
isn't	O	O:0.998155
so	O	O:0.999693
straight	O	O:0.998173
forward	O	O:0.995330
because	O	O:0.997289
I	O	O:0.997020
don't	O	O:0.999698
necessarily	O	O:0.992916
know	O	O:0.994243
how	O	O:0.998960
many	O	O:0.998765
duplicates	O	O:0.997565
of	O	O:0.999513
each	O	O:0.992635
lon	O	O:0.992588
or	O	O:0.998960
lat	O	O:0.949062
there	O	O:0.998736
are	O	O:0.995568
which	O	O:0.998821
determines	O	O:0.995810
the	O	O:0.999661
shape	O	O:0.993235
of	O	O:0.997476
the	O	O:0.996023
array	O	O:0.992278
.	O	O:0.985478
	
geom	O	B-API:0.606260
function	O	O:0.995954
takes	O	O:0.993798
an	O	O:0.997597
n+1	O	O:0.946327
X	O	O:0.964024
2	O	O:0.981685
array	O	O:0.986022
and	O	O:0.999494
n	O	O:0.996511
as	O	O:0.997547
input	O	O:0.988176
,	O	O:0.999209
i	O	O:0.991833
guess	O	O:0.992272
i'm	O	O:0.994240
doing	O	O:0.999157
something	O	O:0.998052
really	O	O:0.922933
stupid	O	O:0.950802
(	O	O:0.995856
which	O	O:0.998094
i	O	O:0.992462
think	O	O:0.997498
i	O	O:0.990642
am	O	O:0.998948
)	O	O:0.999112
or	O	O:0.998577
i	O	O:0.984253
don't	O	O:0.998640
understand	O	O:0.999400
this	O	O:0.995475
behavior	O	O:0.980699
#CODE	O	O:0.989547
	
When	O	O:0.994334
I	O	O:0.997962
tried	O	O:0.998330
this	O	O:0.982651
,	O	O:0.998661
I	O	O:0.997166
got	O	O:0.999469
sort	O	O:0.948277
of	O	O:0.998904
similar	O	O:0.993154
shaped	O	O:0.995131
"	O	O:0.998265
tiles	O	O:0.969409
"	O	O:0.998344
of	O	O:0.999194
different	O	O:0.996067
colors	O	O:0.944927
rather	O	O:0.997851
than	O	O:0.987657
3	O	O:0.979926
Gaussian	O	O:0.972365
humps	O	O:0.973104
.	O	O:0.985527
	
There	O	O:0.978680
was	O	O:0.998758
a	O	O:0.998846
comment	O	O:0.946515
here	O	O:0.973469
saying	O	O:0.998304
that	O	O:0.997985
the	O	O:0.998737
Apple	O	O:0.978033
version	O	O:0.992292
of	O	O:0.997033
python	O	O:0.987396
2.7	O	O:0.994659
comes	O	O:0.981062
with	O	O:0.997608
numpy	O	O:0.997306
so	O	O:0.998827
you	O	O:0.997197
shouldn't	O	O:0.999740
have	O	O:0.999094
to	O	O:0.999671
install	O	O:0.999172
it	O	O:0.998205
at	O	O:0.998641
all	O	O:0.995486
.	O	O:0.990420
	
For	O	O:0.996522
more	O	O:0.991964
general	O	O:0.991659
solution	O	O:0.993727
,	O	O:0.998802
you	O	O:0.999390
could	O	O:0.999057
use	O	O:0.999929
somekind	O	O:0.960662
of	O	O:0.997360
edge	O	O:0.884166
detection	O	O:0.991509
method	O	O:0.999132
to	O	O:0.999731
find	O	O:0.999880
only	O	O:0.998355
the	O	O:0.999882
edge	O	O:0.983077
points	O	O:0.961254
.	O	O:0.994692
	
If	O	O:0.995971
you	O	O:0.998540
see	O	O:0.999719
any	O	O:0.998633
errors	O	O:0.987027
;	O	O:0.998394
provide	O	O:0.993553
a	O	O:0.999587
link	O	O:0.974297
to	O	O:0.999570
the	O	O:0.999965
code	O	O:0.995421
that	O	O:0.998302
can	O	O:0.999841
be	O	O:0.999781
run	O	O:0.979097
.	O	O:0.971368
	
What	O	O:0.990620
I	O	O:0.998425
am	O	O:0.999323
looking	O	O:0.979412
for	O	O:0.994193
is	O	O:0.998848
a	O	O:0.991653
quick	O	O:0.865736
and	O	O:0.999180
easy	O	O:0.983952
way	O	O:0.995138
to	O	O:0.999255
find	O	O:0.999701
the	O	O:0.999056
closest	O	O:0.919958
(	O	O:0.998907
nearest	O	O:0.993886
neighbor	O	O:0.998016
)	O	O:0.999220
of	O	O:0.999435
some	O	O:0.991481
multidimensional	O	O:0.997313
query	O	O:0.955330
point	O	O:0.993734
in	O	O:0.998951
an	O	O:0.996529
2D	O	O:0.903371
(	O	O:0.998149
numpy	O	O:0.991517
)	O	O:0.999556
array	O	O:0.991536
of	O	O:0.999287
multidimensional	O	O:0.931322
points	O	O:0.900842
(	O	O:0.998543
also	O	O:0.998449
numpy	O	O:0.999107
arrays	O	O:0.968048
)	O	O:0.997452
.	O	O:0.984904
	
How	O	O:0.996352
do	O	O:0.997350
I	O	O:0.999485
get	O	O:0.997846
the	O	O:0.996622
`	O	O:0.992286
Image	O	B-API:0.953650
`	O	O:0.999553
part	O	O:0.987223
only	O	O:0.996217
and	O	O:0.999856
how	O	O:0.997848
do	O	O:0.984388
I	O	O:0.999445
convert	O	O:0.909994
it	O	O:0.991856
to	O	O:0.997827
Numpy	O	O:0.998059
Array	O	O:0.989746
?	O	O:0.992175
	
Maybe	O	O:0.988205
it'll	O	O:0.999256
save	O	O:0.965739
you	O	O:0.999727
some	O	O:0.995332
frustration	O	O:0.994935
=)	O	O:0.987183
	
Is	O	O:0.994922
there	O	O:0.998568
any	O	O:0.998110
way	O	O:0.995755
to	O	O:0.997186
rewrite	O	O:0.999810
this	O	O:0.997305
functions	O	O:0.997411
with	O	O:0.995842
Numpy	O	O:0.985016
?	O	O:0.993411
	
Is	O	O:0.994786
there	O	O:0.998638
any	O	O:0.999091
easy	O	O:0.986907
way	O	O:0.998019
to	O	O:0.998605
speed	O	O:0.998431
my	O	O:0.998588
calculation	O	O:0.993093
up	O	O:0.989752
?	O	O:0.995461
	
A	O	O:0.996653
variable	O	O:0.984367
in	O	O:0.995558
Python	O	O:0.927506
is	O	O:0.999482
just	O	O:0.997320
a	O	O:0.999547
label	O	O:0.960498
for	O	O:0.998463
an	O	O:0.987777
object	O	O:0.980291
;	O	O:0.996229
giving	O	O:0.985002
the	O	O:0.998661
object	O	O:0.997619
a	O	O:0.998739
new	O	O:0.962774
label	O	O:0.996593
doesn't	O	O:0.988613
change	O	O:0.977617
the	O	O:0.999265
object	O	O:0.994014
itself	O	O:0.989974
at	O	O:0.999401
all	O	O:0.992581
.	O	O:0.989954
	
But	O	O:0.998164
this	O	O:0.991407
is	O	O:0.999490
actually	O	O:0.997802
where	O	O:0.998227
the	O	O:0.986865
doc	O	O:0.983668
belongs	O	O:0.961410
.	O	O:0.992315
	
So	O	O:0.995836
given	O	O:0.993800
the	O	O:0.998545
sorted	O	O:0.955230
version	O	O:0.995966
,	O	O:0.999518
you	O	O:0.999707
can	O	O:0.999724
reconstruct	O	O:0.999251
the	O	O:0.999963
original	O	O:0.998644
by	O	O:0.994348
"	O	O:0.999518
putting	O	O:0.997226
items	O	O:0.995780
back	O	O:0.985820
where	O	O:0.999629
they	O	O:0.997832
came	O	O:0.996820
from	O	O:0.987587
"	O	O:0.964621
:	O	O:0.992788
#CODE	O	O:0.994650
	
Note	O	O:0.996633
that	O	O:0.999508
this	O	O:0.998970
all	O	O:0.999218
assumes	O	O:0.993740
that	O	O:0.999868
your	O	O:0.997469
values	O	O:0.989426
are	O	O:0.999048
normally	O	O:0.998843
distributed	O	O:0.980199
.	O	O:0.979003
	
(	O	O:0.990459
Bounding	O	O:0.990626
box	O	O:0.996682
intersections	O	O:0.978389
are	O	O:0.998766
actually	O	O:0.999934
a	O	O:0.998883
rather	O	O:0.991310
poor	O	O:0.996245
way	O	O:0.997759
of	O	O:0.997816
deciding	O	O:0.992477
where	O	O:0.998483
to	O	O:0.999481
place	O	O:0.999760
labels	O	O:0.987914
.	O	O:0.997041
What's	O	O:0.999084
the	O	O:0.998881
point	O	O:0.989518
in	O	O:0.998226
writing	O	O:0.998578
a	O	O:0.998592
ton	O	O:0.970726
of	O	O:0.999070
code	O	O:0.964411
for	O	O:0.999828
something	O	O:0.998220
that	O	O:0.995966
will	O	O:0.999679
only	O	O:0.999919
work	O	O:0.999448
in	O	O:0.999790
one	O	O:0.999770
case	O	O:0.999392
out	O	O:0.998431
of	O	O:0.997095
1000	O	O:0.964396
?	O	O:0.998302
)	O	O:0.995775
	
The	O	O:0.993581
python	O	O:0.991802
code	O	O:0.981071
outputs	O	O:0.996225
eleven	O	O:0.994671
0's	O	O:0.984288
,	O	O:0.999606
eleven	O	O:0.998943
1's	O	O:0.990616
all	O	O:0.998749
the	O	O:0.999566
way	O	O:0.989454
to	O	O:0.997094
eleven	O	O:0.999620
39's	O	O:0.897281
.	O	O:0.990536
	
@USER	O	O:0.978243
;	O	O:0.997586
in	O	O:0.997800
above	O	O:0.995335
example	O	O:0.997085
z	O	O:0.907705
is	O	O:0.989956
(	O	O:0.995000
5	O	O:0.993054
,	O	O:0.998330
2	O	O:0.982067
)	O	O:0.999228
array	O	O:0.998549
created	O	O:0.998472
by	O	O:0.998984
another	O	O:0.974097
function	O	O:0.996567
,	O	O:0.999152
with	O	O:0.999697
first	O	O:0.997860
dimension	O	O:0.999410
from	O	O:0.998615
the	O	O:0.999529
number	O	O:0.991319
of	O	O:0.992952
True	O	O:0.958340
(	O	O:0.999680
at	O	O:0.999514
least	O	O:0.996381
one	O	O:0.999451
True	O	O:0.915310
in	O	O:0.997855
x	O	O:0.955803
>	O	O:0.998519
y	O	O:0.989963
)	O	O:0.999183
,	O	O:0.998676
here	O	O:0.971018
5	O	O:0.984502
,	O	O:0.997954
and	O	O:0.999800
second	O	O:0.995723
dimention	O	O:0.995796
as	O	O:0.998185
the	O	O:0.999014
first	O	O:0.995313
dimension	O	O:0.995558
of	O	O:0.997988
x	O	O:0.988428
,	O	O:0.999761
here	O	O:0.953636
2	O	O:0.982322
.	O	O:0.991507
	
I	O	O:0.998512
have	O	O:0.999557
a	O	O:0.995399
NumPy	O	O:0.987800
array	O	O:0.997332
of	O	O:0.995467
values	O	O:0.919975
.	O	O:0.993085
	
I	O	O:0.999396
just	O	O:0.999404
need	O	O:0.997970
the	O	O:0.999783
total	O	O:0.995798
of	O	O:0.998040
all	O	O:0.999202
the	O	O:0.999849
values	O	O:0.992712
instead	O	O:0.999329
of	O	O:0.999855
the	O	O:0.999478
actual	O	O:0.998388
values	O	O:0.986765
themselves	O	O:0.974945
.	O	O:0.997604
	
Didn't	O	O:0.993081
think	O	O:0.993791
about	O	O:0.994388
multiplying	O	O:0.977111
my	O	O:0.989835
array	O	O:0.998123
of	O	O:0.999065
number	O	O:0.997271
by	O	O:0.998488
an	O	O:0.999498
array	O	O:0.996517
of	O	O:0.998740
booleans	O	O:0.995532
to	O	O:0.999279
extract	O	O:0.998170
my	O	O:0.998949
data	O	O:0.990242
.	O	O:0.997857
	
not	O	O:0.992879
to	O	O:0.999775
convert	O	O:0.995929
floats	O	O:0.993957
to	O	O:0.999337
floats	O	O:0.999568
would	O	O:0.999068
be	O	O:0.999819
the	O	O:0.999936
first	O	O:0.986030
step	O	O:0.995240
.	O	O:0.994291
	
make	O	O:0.980185
a	O	O:0.999640
list	O	O:0.966353
of	O	O:0.999196
all	O	O:0.999147
the	O	O:0.999555
days	O	O:0.929391
	
This	O	O:0.992367
way	O	O:0.996129
,	O	O:0.999635
you	O	O:0.999706
could	O	O:0.999776
access	O	O:0.998453
all	O	O:0.999701
the	O	O:0.998114
`	O	O:0.993469
A	O	O:0.982817
`	O	O:0.999796
through	O	O:0.897988
`	O	O:0.998567
result	O	O:0.974007
[	O	O:0.997525
'	O	O:0.998507
label	O	O:0.995160
']	O	O:0.988737
[	O	O:0.972413
'	O	O:0.991088
A	O	O:0.995591
']`	O	O:0.995566
...	O	O:0.923531
	
picking	O	O:0.987813
out	O	O:0.996570
elements	O	O:0.998193
based	O	O:0.981739
on	O	O:0.999737
complement	O	O:0.984636
of	O	O:0.999731
indices	O	O:0.949427
in	O	O:0.998254
Python	O	O:0.993300
pandas	O	O:0.995164
	
Joran	O	O:0.980715
,	O	O:0.999195
could	O	O:0.998467
you	O	O:0.999728
please	O	O:0.998221
explain	O	O:0.998446
what	O	O:0.994351
you	O	O:0.999531
mean	O	O:0.999099
more	O	O:0.989385
?	O	O:0.996056
	
Anyone	O	O:0.989257
have	O	O:0.997288
any	O	O:0.998803
clues	O	O:0.983792
for	O	O:0.999546
what	O	O:0.991541
I	O	O:0.998009
can	O	O:0.999505
do	O	O:0.999294
,	O	O:0.999835
or	O	O:0.999358
approaches	O	O:0.992229
I	O	O:0.999461
should	O	O:0.999345
research	O	O:0.980916
?	O	O:0.995845
	
Appending	O	O:0.991995
data	O	O:0.993308
to	O	O:0.999763
an	O	O:0.999972
existing	O	O:0.990409
array	O	O:0.970633
is	O	O:0.999699
a	O	O:0.997121
natural	O	O:0.946030
thing	O	O:0.998273
to	O	O:0.999291
want	O	O:0.999809
to	O	O:0.999378
do	O	O:0.999859
for	O	O:0.999363
anyone	O	O:0.954503
with	O	O:0.996281
python	O	O:0.988052
experience	O	O:0.980159
.	O	O:0.985147
	
Note	O	O:0.998555
that	O	O:0.999200
you	O	O:0.999750
get	O	O:0.999890
a	O	O:0.999916
sorte	O	O:0.995445
copy	O	O:0.922388
of	O	O:0.998676
the	O	O:0.965635
array	O	O:0.986746
.	O	O:0.982867
	
I'm	O	O:0.991341
not	O	O:0.998725
sure	O	O:0.998760
that	O	O:0.999596
this	O	O:0.992772
is	O	O:0.999769
the	O	O:0.997157
way	O	O:0.996563
that	O	O:0.995083
you	O	O:0.999246
should	O	O:0.999879
do	O	O:0.999455
things	O	O:0.997553
as	O	O:0.998048
I'd	O	O:0.997065
expect	O	O:0.998231
numpy	O	O:0.997530
to	O	O:0.999325
have	O	O:0.999940
a	O	O:0.999578
much	O	O:0.990603
more	O	O:0.982931
efficient	O	O:0.991187
method	O	O:0.998988
of	O	O:0.999047
going	O	O:0.986544
about	O	O:0.994310
it	O	O:0.988046
,	O	O:0.997279
but	O	O:0.999164
do	O	O:0.995374
you	O	O:0.999747
just	O	O:0.999372
mean	O	O:0.999826
something	O	O:0.999124
like	O	O:0.999112
this	O	O:0.998603
?	O	O:0.997753
	
`	O	O:0.996286
KMID	O	O:0.622968
`	O	O:0.997934
is	O	O:0.998167
a	O	O:0.990829
function	O	O:0.955235
,	O	O:0.998609
not	O	O:0.998732
an	O	O:0.999324
array	O	O:0.996943
,	O	O:0.999699
so	O	O:0.998099
you	O	O:0.991102
can't	O	O:0.999332
index	O	O:0.999793
it	O	O:0.999790
with	O	O:0.995078
`	O	O:0.991263
:	O	O:0.965553
`	O	O:0.999377
.	O	O:0.986341
	
Insert	O	O:0.976182
to	O	O:0.998585
original	O	O:0.999803
code	O	O:0.993894
in	O	O:0.994899
question	O	O:0.932950
:	O	O:0.995070
#CODE	O	O:0.994337
	
Multiple	O	O:0.992201
conditions	O	O:0.978644
using	O	O:0.994630
'	O	O:0.990162
or	O	O:0.991254
'	O	O:0.995255
in	O	O:0.999097
numpy	O	O:0.993964
array	O	O:0.990494
	
Usually	O	O:0.991271
,	O	O:0.998582
it's	O	O:0.999247
best	O	O:0.993956
to	O	O:0.999435
avoid	O	O:0.998369
the	O	O:0.994672
matrix	O	O:0.982006
class	O	O:0.986070
(	O	O:0.997691
see	O	O:0.997840
docs	O	O:0.989131
)	O	O:0.998285
.	O	O:0.988634
	
I	O	O:0.998621
have	O	O:0.996336
tried	O	O:0.973564
two	O	O:0.999314
different	O	O:0.976889
methods	O	O:0.942553
but	O	O:0.999152
both	O	O:0.997178
of	O	O:0.999801
them	O	O:0.953464
are	O	O:0.999233
slow	O	O:0.949296
.	O	O:0.990869
	
Not	O	O:0.994841
really	O	O:0.995073
,	O	O:0.999779
you	O	O:0.999356
can	O	O:0.999825
construct	O	O:0.999807
the	O	O:0.999312
Counter	O	O:0.900752
from	O	O:0.997177
any	O	O:0.995721
iterable	O	O:0.949957
.	O	O:0.980126
	
(	O	O:0.997325
I	O	O:0.999553
have	O	O:0.999191
the	O	O:0.999123
code	O	O:0.988662
ready	O	O:0.971149
,	O	O:0.999538
but	O	O:0.998356
as	O	O:0.996465
i'm	O	O:0.996470
new	O	O:0.990474
to	O	O:0.998249
stackoverflow	O	O:0.996510
,	O	O:0.998574
i	O	O:0.985342
don't	O	O:0.999671
know	O	O:0.998072
where	O	O:0.999359
to	O	O:0.998256
put	O	O:0.996530
it	O	O:0.995982
.	O	O:0.997650
Here	O	O:0.998417
,	O	O:0.998756
in	O	O:0.999858
this	O	O:0.996327
comment	O	O:0.998546
field	O	O:0.993050
?	O	O:0.998603
Or	O	O:0.997478
rather	O	O:0.999100
making	O	O:0.998636
a	O	O:0.997998
new	O	O:0.862804
answer	O	O:0.991515
??	O	O:0.994260
)	O	O:0.996154
	
For	O	O:0.990986
example	O	O:0.989301
,	O	O:0.999478
one	O	O:0.994625
simple	O	O:0.975220
method	O	O:0.999258
to	O	O:0.999706
generate	O	O:0.999396
at	O	O:0.999749
most	O	O:0.997798
rank	O	O:0.962641
`	O	O:0.999052
k	O	O:0.551938
`	O	O:0.995876
(	O	O:0.996659
when	O	O:0.996836
`	O	O:0.998918
m	O	O:0.895737
`	O	O:0.997578
is	O	O:0.930525
`	O	O:0.998851
k+1	O	O:0.856723
`)	O	O:0.997877
is	O	O:0.998084
to	O	O:0.996998
get	O	O:0.999967
a	O	O:0.999000
random	O	O:0.965904
valid	O	O:0.993370
B	O	O:0.979180
0	O	O:0.991001
,	O	O:0.999406
keep	O	O:0.974746
rotating	O	O:0.999107
all	O	O:0.999812
rows	O	O:0.994648
of	O	O:0.999584
this	O	O:0.998409
matrix	O	O:0.999353
up	O	O:0.996874
to	O	O:0.999521
get	O	O:0.999715
B	O	O:0.996754
1	O	O:0.997768
to	O	O:0.997682
B	O	O:0.998621
m-2	O	O:0.992432
,	O	O:0.998929
set	O	O:0.997361
first	O	O:0.998819
row	O	O:0.998542
of	O	O:0.997840
B	O	O:0.984330
m-1	O	O:0.992963
to	O	O:0.996770
all	O	O:0.999753
1	O	O:0.991558
,	O	O:0.998755
and	O	O:0.999809
the	O	O:0.999950
remaining	O	O:0.996896
rows	O	O:0.984137
to	O	O:0.999268
all	O	O:0.999908
0	O	O:0.975490
.	O	O:0.992173
	
Glad	O	O:0.971336
you	O	O:0.994097
saw	O	O:0.982755
around	O	O:0.991832
it	O	O:0.985663
!	O	O:0.990225
	
@USER	O	O:0.924515
:	O	O:0.998192
basically	O	O:0.998735
I	O	O:0.999614
am	O	O:0.999656
converting	O	O:0.994960
some	O	O:0.991428
matlab	O	O:0.996662
code	O	O:0.992616
into	O	O:0.977084
python	O	O:0.996106
,	O	O:0.998785
I	O	O:0.995074
can	O	O:0.999172
not	O	O:0.999208
write	O	O:0.999286
actual	O	O:0.996513
code	O	O:0.994827
because	O	O:0.999303
that	O	O:0.984511
is	O	O:0.999835
confidential	O	O:0.925348
,	O	O:0.981485
(	O	O:0.995673
1+float	O	O:0.809678
(	O	O:0.998307
100	O	O:0.990574
))	O	O:0.962648
Here	O	O:0.981746
100	O	O:0.950896
is	O	O:0.997480
coming	O	O:0.944567
from	O	O:0.998573
two	O	O:0.994151
dimension	O	O:0.995012
string	O	O:0.991378
matrix	O	O:0.996238
,	O	O:0.999700
that	O	O:0.998669
why	O	O:0.999407
I	O	O:0.999903
have	O	O:0.998671
written	O	O:0.982284
float	O	O:0.955738
to	O	O:0.995892
convert	O	O:0.988200
string	O	O:0.995129
variable	O	O:0.992076
.	O	O:0.993567
	
instead	O	O:0.998482
of	O	O:0.999065
call	O	O:0.951966
plot	O	O:0.814201
(	O	O:0.994894
test	O	O:0.913410
[	O	O:0.995572
"	O	O:0.999309
x	O	O:0.961940
"]	O	O:0.991617
[	O	O:0.993778
5:10	O	O:0.958206
])	O	O:0.995495
,	O	O:0.999133
you	O	O:0.999300
can	O	O:0.999548
call	O	O:0.999313
the	O	O:0.997992
plot	O	O:0.749024
method	O	O:0.997525
of	O	O:0.995289
Series	O	O:0.971996
object	O	O:0.959479
:	O	O:0.992049
#CODE	O	O:0.994170
	
The	O	O:0.997889
size	O	O:0.993806
of	O	O:0.999781
a	O	O:0.998682
slice	O	O:0.959644
with	O	O:0.997769
`	O	O:0.994128
0:5	O	O:0.820992
`	O	O:0.993651
is	O	O:0.994948
not	O	O:0.998374
6	O	O:0.996840
as	O	O:0.997540
you	O	O:0.988766
say	O	O:0.990122
:	O	O:0.998052
it's	O	O:0.989497
5	O	O:0.989447
.	O	O:0.991756
	
This	O	O:0.976285
ensures	O	O:0.988886
proper	O	O:0.982651
display	O	O:0.713193
and	O	O:0.989688
syntax	O	O:0.996670
highlighting	O	O:0.959918
-	O	O:0.999145
right	O	O:0.994237
now	O	O:0.998392
someone	O	O:0.996887
who	O	O:0.988000
would	O	O:0.998356
usually	O	O:0.997904
fix	O	O:0.999033
your	O	O:0.990158
formatting	O	O:0.937259
is	O	O:0.998295
likely	O	O:0.836209
to	O	O:0.997850
not	O	O:0.999153
do	O	O:0.998017
it	O	O:0.999408
because	O	O:0.998085
he'd	O	O:0.997502
have	O	O:0.999601
to	O	O:0.999758
remove	O	O:0.996844
all	O	O:0.998842
the	O	O:0.997937
HTML	O	O:0.990436
linebreaks	O	O:0.991605
on	O	O:0.997535
his	O	O:0.984139
own	O	O:0.990714
.	O	O:0.984060
	
I	O	O:0.996336
believe	O	O:0.998258
you've	O	O:0.976635
reduced	O	O:0.992834
the	O	O:0.996547
problem	O	O:0.984129
to	O	O:0.999684
a	O	O:0.999979
one	O	O:0.998241
of	O	O:0.999590
finding	O	O:0.983443
roots	O	O:0.965490
.	O	O:0.982648
	
In	O	O:0.996631
order	O	O:0.987451
to	O	O:0.999334
make	O	O:0.998726
sure	O	O:0.994686
it	O	O:0.996689
is	O	O:0.998799
still	O	O:0.994542
multiprocessor	O	O:0.990734
safe	O	O:0.957101
,	O	O:0.998784
I	O	O:0.999099
believe	O	O:0.998088
you	O	O:0.997543
will	O	O:0.999807
have	O	O:0.999893
to	O	O:0.999788
use	O	O:0.999894
the	O	O:0.993802
`	O	O:0.987655
acquire	B-API	B-API:0.818212
`	O	O:0.998826
and	O	O:0.990481
`	O	O:0.999436
release	B-API	B-API:0.596207
`	O	O:0.999115
methods	O	O:0.986416
that	O	O:0.999497
exist	O	O:0.998520
on	O	O:0.999633
the	O	O:0.995631
`	O	O:0.996092
Array	O	O:0.870358
`	O	O:0.998453
object	O	O:0.984878
,	O	O:0.998966
`	O	O:0.999554
a	O	O:0.927057
`	O	O:0.997158
,	O	O:0.997509
and	O	O:0.999959
its	O	O:0.998019
built	O	O:0.964621
in	O	O:0.998726
lock	O	O:0.934425
to	O	O:0.999750
make	O	O:0.999722
sure	O	O:0.998939
its	O	O:0.997029
all	O	O:0.997848
safely	O	O:0.968653
accessed	O	O:0.937040
(	O	O:0.989003
though	O	O:0.980007
I'm	O	O:0.998645
not	O	O:0.999509
an	O	O:0.999682
expert	O	O:0.993607
on	O	O:0.998123
the	O	O:0.998078
multiprocessor	O	O:0.918927
module	O	O:0.982492
)	O	O:0.995864
.	O	O:0.989618
	
So	O	O:0.996499
,	O	O:0.999625
given	O	O:0.998587
your	O	O:0.993276
matrix	O	O:0.996092
M	O	O:0.994420
,	O	O:0.999957
your	O	O:0.985762
problem	O	O:0.996071
asks	O	O:0.995887
to	O	O:0.998863
maximize	O	O:0.997735
the	O	O:0.997092
PB	O	O:0.636629
function	O	O:0.992616
#CODE	O	O:0.980016
	
I	O	O:0.995826
would	O	O:0.999793
like	O	O:0.997722
to	O	O:0.999948
find	O	O:0.999882
all	O	O:0.999732
elements	O	O:0.997718
within	O	O:0.998299
a	O	O:0.999100
specific	O	O:0.957999
range	O	O:0.990797
.	O	O:0.983772
	
I	O	O:0.988546
cannot	O	O:0.999208
seem	O	O:0.988717
to	O	O:0.999830
find	O	O:0.999680
how	O	O:0.999321
to	O	O:0.999428
do	O	O:0.999916
that	O	O:0.996256
.	O	O:0.996569
	
Any	O	O:0.967850
thoughts	O	O:0.977348
?	O	O:0.990696
	
If	O	O:0.996804
you	O	O:0.999520
want	O	O:0.999403
the	O	O:0.998986
PRNGs	O	O:0.996784
to	O	O:0.998696
be	O	O:0.999848
independent	O	O:0.995459
,	O	O:0.996548
do	O	O:0.997321
not	O	O:0.998389
seed	O	O:0.999713
them	O	O:0.992016
with	O	O:0.998929
anything	O	O:0.994345
.	O	O:0.995645
	
In	O	O:0.995713
the	O	O:0.999027
end	O	O:0.986849
I'll	O	O:0.995577
probably	O	O:0.998158
take	O	O:0.999263
n	O	O:0.993746
randomly	O	O:0.998274
selected	O	O:0.982021
samples	O	O:0.920073
.	O	O:0.977953
	
This	O	O:0.974531
is	O	O:0.999611
a	O	O:0.996719
mystery	O	O:0.991579
to	O	O:0.998437
me	O	O:0.999388
,	O	O:0.999595
though	O	O:0.998429
I	O	O:0.999386
would	O	O:0.999674
guess	O	O:0.998521
that	O	O:0.999298
there	O	O:0.998546
must	O	O:0.998664
be	O	O:0.999813
more	O	O:0.995961
overhead	O	O:0.996028
associated	O	O:0.986816
with	O	O:0.998555
accessing	O	O:0.994974
an	O	O:0.998081
array	O	O:0.993727
element	O	O:0.997301
than	O	O:0.997306
with	O	O:0.999137
appending	O	O:0.994714
to	O	O:0.998897
a	O	O:0.999737
list	O	O:0.748356
.	O	O:0.995247
	
If	O	O:0.961972
it's	O	O:0.991879
not	O	O:0.998874
reasonable	O	O:0.997566
,	O	O:0.999594
you	O	O:0.997845
can	O	O:0.999799
always	O	O:0.999939
decompose	O	O:0.998105
the	O	O:0.992819
matrix	O	O:0.993782
multiplication	O	O:0.989012
yourself	O	O:0.990549
.	O	O:0.994494
	
If	O	O:0.997416
the	O	O:0.998441
vectors	O	O:0.889021
do	O	O:0.994914
not	O	O:0.999805
have	O	O:0.999468
equal	O	O:0.996914
dimension	O	O:0.999468
,	O	O:0.999162
or	O	O:0.999808
if	O	O:0.999135
you	O	O:0.999906
want	O	O:0.999315
to	O	O:0.999548
avoid	O	O:0.998939
numpy	O	O:0.998393
,	O	O:0.999807
then	O	O:0.997996
perhaps	O	O:0.998847
,	O	O:0.999606
#CODE	O	O:0.995611
	
In	O	O:0.996945
particular	O	O:0.996614
,	O	O:0.999386
you	O	O:0.992411
can't	O	O:0.999051
index	O	O:0.999929
a	O	O:0.999511
2D	O	O:0.965347
matrix	O	O:0.997410
with	O	O:0.999364
a	O	O:0.999610
single	O	O:0.978211
integer	O	O:0.963586
,	O	O:0.997297
because	O	O:0.995993
--	O	O:0.999438
well	O	O:0.997247
--	O	O:0.999323
it's	O	O:0.981313
two	O	O:0.998833
dimensional	O	O:0.974756
and	O	O:0.999382
you	O	O:0.999668
need	O	O:0.998626
to	O	O:0.999767
specify	O	O:0.999564
two	O	O:0.999098
integers	O	O:0.986499
,	O	O:0.999303
hence	O	O:0.999520
the	O	O:0.999479
need	O	O:0.992990
for	O	O:0.999695
the	O	O:0.999783
extra	O	O:0.833420
0	O	O:0.994218
index	O	O:0.995543
in	O	O:0.998861
the	O	O:0.999475
second	O	O:0.966016
example	O	O:0.980524
.	O	O:0.989829
	
nearly	O	O:0.985446
all	O	O:0.999324
of	O	O:0.997188
which	O	O:0.995633
the	O	O:0.998797
author	O	O:0.992512
responded	O	O:0.981378
to	O	O:0.998683
and	O	O:0.999960
in	O	O:0.999881
some	O	O:0.984833
cases	O	O:0.994108
,	O	O:0.994687
	
I	O	O:0.996118
added	O	O:0.995977
the	O	O:0.994823
slow	O	O:0.964338
Python	O	O:0.998629
code	O	O:0.990292
to	O	O:0.998669
the	O	O:0.999776
description	O	O:0.978874
.	O	O:0.990614
	
The	O	O:0.996772
easy	O	O:0.953640
way	O	O:0.997920
-	O	O:0.999595
pick	O	O:0.991143
a	O	O:0.999397
random	O	O:0.876637
number	O	O:0.994175
q	O	O:0.981316
[	O	O:0.998778
0	O	O:0.991019
,	O	O:0.997742
1	O	O:0.976091
]	O	O:0.989872
.	O	O:0.973798
	
will	O	O:0.991923
be	O	O:0.999769
the	O	O:0.999848
number	O	O:0.993898
of	O	O:0.999069
bytes	O	O:0.993578
which	O	O:0.999448
the	O	O:0.998870
pattern	O	O:0.998719
of	O	O:0.998701
streams	O	O:0.996237
will	O	O:0.999355
repeat	O	O:0.959541
after	O	O:0.990578
.	O	O:0.971792
	
Any	O	O:0.989599
idea	O	O:0.987070
how	O	O:0.998128
I	O	O:0.999777
can	O	O:0.999701
later	O	O:0.999662
make	O	O:0.997940
1.6.2	O	O:0.967182
in	O	O:0.993183
/	O	O:0.991066
usr	O	O:0.982658
/	O	O:0.992547
local	O	O:0.959454
/	O	O:0.993940
lib	O	O:0.996584
work	O	O:0.994939
with	O	O:0.996770
python-dbg	O	O:0.984204
?	O	O:0.995147
	
Because	O	O:0.985522
I'm	O	O:0.995891
still	O	O:0.998540
not	O	O:0.999630
quite	O	O:0.994673
grasping	O	O:0.948104
the	O	O:0.986192
method	O	O:0.990918
and	O	O:0.999113
there	O	O:0.998698
seems	O	O:0.995348
to	O	O:0.999360
be	O	O:0.999814
simpler	O	O:0.998802
ways	O	O:0.991450
to	O	O:0.999100
solve	O	O:0.999595
the	O	O:0.997829
problem	O	O:0.977006
,	O	O:0.998333
I'm	O	O:0.999580
just	O	O:0.998827
going	O	O:0.999148
to	O	O:0.997841
put	O	O:0.998781
this	O	O:0.991040
here	O	O:0.905032
:	O	O:0.998127
#CODE	O	O:0.995704
	
	Performance by label (#match, #model, #ref) (precision, recall, F1):
	    O: (64241, 64627, 64613) (0.9940, 0.9942, 0.9941)
	    B-API: (843, 1215, 1229) (0.6938, 0.6859, 0.6899)
	Macro-average precision, recall, F1: (0.843927, 0.840083, 0.841994)
	Item accuracy: 65084 / 65842 (0.9885)
	Instance accuracy: 2801 / 3388 (0.8267)
	Elapsed time: 3.397439 [sec] (997.5 [instance/sec])
